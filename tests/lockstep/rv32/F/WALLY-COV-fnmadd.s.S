///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/F/WALLY-COV-fnmadd.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x21, x1, x26 # perform first operation
fnmadd.s f2, f31, f7, f16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x30, x2, x6 # perform first operation
fnmadd.s f12, f26, f10, f23 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x10, x24 # perform first operation
fnmadd.s f9, f30, f20, f27 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f21, f22, f30 # perform first operation
fnmadd.s f21, f21, f20, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f19, f8, f10 # perform first operation
fnmadd.s f19, f24, f19, f26 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f15, f20, f31 # perform first operation
fnmadd.s f31, f1, f7, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f9, f13, f22 # perform first operation
fnmadd.s f9, f12, f11, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f8, f10, f24 # perform first operation
fnmadd.s f8, f16, f29, f7 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f12, f13, f28 # perform first operation
fnmadd.s f12, f23, f26, f22 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f27, f28, f18 # perform first operation
fnmadd.s f28, f16, f20, f11 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f10, f16, f7 # perform first operation
fnmadd.s f7, f3, f26, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f21, f1, f8 # perform first operation
fnmadd.s f16, f7, f24, f22 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0xfc01b02d # load x3 with value 0xfc01b02d
sw x3, 0(x2) # store 0xfc01b02d in memory
flw f0, 0(x2) # load 0xfc01b02d from memory into f0
la x2, scratch
li x3, 0xd893ea74 # load x3 with value 0xd893ea74
sw x3, 0(x2) # store 0xd893ea74 in memory
flw f22, 0(x2) # load 0xd893ea74 from memory into f22
la x2, scratch
li x3, 0xe3a21f89 # load x3 with value 0xe3a21f89
sw x3, 0(x2) # store 0xe3a21f89 in memory
flw f14, 0(x2) # load 0xe3a21f89 from memory into f14
fnmadd.s f7, f0, f22, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x541ca3f2 # load x3 with value 0x541ca3f2
sw x3, 0(x2) # store 0x541ca3f2 in memory
flw f1, 0(x2) # load 0x541ca3f2 from memory into f1
la x2, scratch
li x3, 0xbca95916 # load x3 with value 0xbca95916
sw x3, 0(x2) # store 0xbca95916 in memory
flw f25, 0(x2) # load 0xbca95916 from memory into f25
la x2, scratch
li x3, 0xe849b096 # load x3 with value 0xe849b096
sw x3, 0(x2) # store 0xe849b096 in memory
flw f30, 0(x2) # load 0xe849b096 from memory into f30
fnmadd.s f6, f1, f25, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x1bcedb74 # load x3 with value 0x1bcedb74
sw x3, 0(x2) # store 0x1bcedb74 in memory
flw f2, 0(x2) # load 0x1bcedb74 from memory into f2
la x2, scratch
li x3, 0x72f4f957 # load x3 with value 0x72f4f957
sw x3, 0(x2) # store 0x72f4f957 in memory
flw f8, 0(x2) # load 0x72f4f957 from memory into f8
la x2, scratch
li x3, 0x301711b1 # load x3 with value 0x301711b1
sw x3, 0(x2) # store 0x301711b1 in memory
flw f29, 0(x2) # load 0x301711b1 from memory into f29
fnmadd.s f11, f2, f8, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xfc803b8a # load x3 with value 0xfc803b8a
sw x3, 0(x2) # store 0xfc803b8a in memory
flw f3, 0(x2) # load 0xfc803b8a from memory into f3
la x2, scratch
li x3, 0x77d77be4 # load x3 with value 0x77d77be4
sw x3, 0(x2) # store 0x77d77be4 in memory
flw f10, 0(x2) # load 0x77d77be4 from memory into f10
la x2, scratch
li x3, 0xcb930d9a # load x3 with value 0xcb930d9a
sw x3, 0(x2) # store 0xcb930d9a in memory
flw f5, 0(x2) # load 0xcb930d9a from memory into f5
fnmadd.s f1, f3, f10, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc9011640 # load x3 with value 0xc9011640
sw x3, 0(x2) # store 0xc9011640 in memory
flw f4, 0(x2) # load 0xc9011640 from memory into f4
la x2, scratch
li x3, 0x7d488ad6 # load x3 with value 0x7d488ad6
sw x3, 0(x2) # store 0x7d488ad6 in memory
flw f5, 0(x2) # load 0x7d488ad6 from memory into f5
la x2, scratch
li x3, 0x8da4da44 # load x3 with value 0x8da4da44
sw x3, 0(x2) # store 0x8da4da44 in memory
flw f2, 0(x2) # load 0x8da4da44 from memory into f2
fnmadd.s f27, f4, f5, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
la x2, scratch
li x3, 0x905b2ccb # load x3 with value 0x905b2ccb
sw x3, 0(x2) # store 0x905b2ccb in memory
flw f5, 0(x2) # load 0x905b2ccb from memory into f5
la x2, scratch
li x3, 0x12a4e1e9 # load x3 with value 0x12a4e1e9
sw x3, 0(x2) # store 0x12a4e1e9 in memory
flw f15, 0(x2) # load 0x12a4e1e9 from memory into f15
la x2, scratch
li x3, 0xbb0c3ae3 # load x3 with value 0xbb0c3ae3
sw x3, 0(x2) # store 0xbb0c3ae3 in memory
flw f12, 0(x2) # load 0xbb0c3ae3 from memory into f12
fnmadd.s f24, f5, f15, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x556b87ef # load x3 with value 0x556b87ef
sw x3, 0(x2) # store 0x556b87ef in memory
flw f6, 0(x2) # load 0x556b87ef from memory into f6
la x2, scratch
li x3, 0x8ffdfad4 # load x3 with value 0x8ffdfad4
sw x3, 0(x2) # store 0x8ffdfad4 in memory
flw f31, 0(x2) # load 0x8ffdfad4 from memory into f31
la x2, scratch
li x3, 0x2f7cae0c # load x3 with value 0x2f7cae0c
sw x3, 0(x2) # store 0x2f7cae0c in memory
flw f30, 0(x2) # load 0x2f7cae0c from memory into f30
fnmadd.s f3, f6, f31, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc1696913 # load x3 with value 0xc1696913
sw x3, 0(x2) # store 0xc1696913 in memory
flw f7, 0(x2) # load 0xc1696913 from memory into f7
la x2, scratch
li x3, 0xd5598512 # load x3 with value 0xd5598512
sw x3, 0(x2) # store 0xd5598512 in memory
flw f28, 0(x2) # load 0xd5598512 from memory into f28
la x2, scratch
li x3, 0x2726175d # load x3 with value 0x2726175d
sw x3, 0(x2) # store 0x2726175d in memory
flw f13, 0(x2) # load 0x2726175d from memory into f13
fnmadd.s f12, f7, f28, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0xeb430eec # load x3 with value 0xeb430eec
sw x3, 0(x2) # store 0xeb430eec in memory
flw f8, 0(x2) # load 0xeb430eec from memory into f8
la x2, scratch
li x3, 0x03b15752 # load x3 with value 0x03b15752
sw x3, 0(x2) # store 0x03b15752 in memory
flw f27, 0(x2) # load 0x03b15752 from memory into f27
la x2, scratch
li x3, 0x25d63bdc # load x3 with value 0x25d63bdc
sw x3, 0(x2) # store 0x25d63bdc in memory
flw f5, 0(x2) # load 0x25d63bdc from memory into f5
fnmadd.s f20, f8, f27, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0xaa3cb392 # load x3 with value 0xaa3cb392
sw x3, 0(x2) # store 0xaa3cb392 in memory
flw f9, 0(x2) # load 0xaa3cb392 from memory into f9
la x2, scratch
li x3, 0xdc87e152 # load x3 with value 0xdc87e152
sw x3, 0(x2) # store 0xdc87e152 in memory
flw f24, 0(x2) # load 0xdc87e152 from memory into f24
la x2, scratch
li x3, 0x3d410133 # load x3 with value 0x3d410133
sw x3, 0(x2) # store 0x3d410133 in memory
flw f2, 0(x2) # load 0x3d410133 from memory into f2
fnmadd.s f28, f9, f24, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0xbab269d1 # load x3 with value 0xbab269d1
sw x3, 0(x2) # store 0xbab269d1 in memory
flw f10, 0(x2) # load 0xbab269d1 from memory into f10
la x2, scratch
li x3, 0x81ec150d # load x3 with value 0x81ec150d
sw x3, 0(x2) # store 0x81ec150d in memory
flw f14, 0(x2) # load 0x81ec150d from memory into f14
la x2, scratch
li x3, 0x3c9c1dd6 # load x3 with value 0x3c9c1dd6
sw x3, 0(x2) # store 0x3c9c1dd6 in memory
flw f19, 0(x2) # load 0x3c9c1dd6 from memory into f19
fnmadd.s f21, f10, f14, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x528b35a6 # load x3 with value 0x528b35a6
sw x3, 0(x2) # store 0x528b35a6 in memory
flw f11, 0(x2) # load 0x528b35a6 from memory into f11
la x2, scratch
li x3, 0x37eda8c5 # load x3 with value 0x37eda8c5
sw x3, 0(x2) # store 0x37eda8c5 in memory
flw f14, 0(x2) # load 0x37eda8c5 from memory into f14
la x2, scratch
li x3, 0x11065fb7 # load x3 with value 0x11065fb7
sw x3, 0(x2) # store 0x11065fb7 in memory
flw f22, 0(x2) # load 0x11065fb7 from memory into f22
fnmadd.s f25, f11, f14, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x9540a05c # load x3 with value 0x9540a05c
sw x3, 0(x2) # store 0x9540a05c in memory
flw f12, 0(x2) # load 0x9540a05c from memory into f12
la x2, scratch
li x3, 0x5708a1c3 # load x3 with value 0x5708a1c3
sw x3, 0(x2) # store 0x5708a1c3 in memory
flw f9, 0(x2) # load 0x5708a1c3 from memory into f9
la x2, scratch
li x3, 0x9515a9a9 # load x3 with value 0x9515a9a9
sw x3, 0(x2) # store 0x9515a9a9 in memory
flw f1, 0(x2) # load 0x9515a9a9 from memory into f1
fnmadd.s f16, f12, f9, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0x0e0980e9 # load x3 with value 0x0e0980e9
sw x3, 0(x2) # store 0x0e0980e9 in memory
flw f13, 0(x2) # load 0x0e0980e9 from memory into f13
la x2, scratch
li x3, 0xb04b2773 # load x3 with value 0xb04b2773
sw x3, 0(x2) # store 0xb04b2773 in memory
flw f15, 0(x2) # load 0xb04b2773 from memory into f15
la x2, scratch
li x3, 0x8ec2cd90 # load x3 with value 0x8ec2cd90
sw x3, 0(x2) # store 0x8ec2cd90 in memory
flw f31, 0(x2) # load 0x8ec2cd90 from memory into f31
fnmadd.s f24, f13, f15, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0xa6322de6 # load x3 with value 0xa6322de6
sw x3, 0(x2) # store 0xa6322de6 in memory
flw f14, 0(x2) # load 0xa6322de6 from memory into f14
la x2, scratch
li x3, 0xce51208d # load x3 with value 0xce51208d
sw x3, 0(x2) # store 0xce51208d in memory
flw f13, 0(x2) # load 0xce51208d from memory into f13
la x2, scratch
li x3, 0xa14b9cf2 # load x3 with value 0xa14b9cf2
sw x3, 0(x2) # store 0xa14b9cf2 in memory
flw f29, 0(x2) # load 0xa14b9cf2 from memory into f29
fnmadd.s f1, f14, f13, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0xd709e69f # load x3 with value 0xd709e69f
sw x3, 0(x2) # store 0xd709e69f in memory
flw f15, 0(x2) # load 0xd709e69f from memory into f15
la x2, scratch
li x3, 0xa8516ac1 # load x3 with value 0xa8516ac1
sw x3, 0(x2) # store 0xa8516ac1 in memory
flw f30, 0(x2) # load 0xa8516ac1 from memory into f30
la x2, scratch
li x3, 0x578b7605 # load x3 with value 0x578b7605
sw x3, 0(x2) # store 0x578b7605 in memory
flw f25, 0(x2) # load 0x578b7605 from memory into f25
fnmadd.s f23, f15, f30, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x113e2f75 # load x3 with value 0x113e2f75
sw x3, 0(x2) # store 0x113e2f75 in memory
flw f16, 0(x2) # load 0x113e2f75 from memory into f16
la x2, scratch
li x3, 0xb7a74527 # load x3 with value 0xb7a74527
sw x3, 0(x2) # store 0xb7a74527 in memory
flw f2, 0(x2) # load 0xb7a74527 from memory into f2
la x2, scratch
li x3, 0x1d735abb # load x3 with value 0x1d735abb
sw x3, 0(x2) # store 0x1d735abb in memory
flw f21, 0(x2) # load 0x1d735abb from memory into f21
fnmadd.s f19, f16, f2, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xa623e5bc # load x3 with value 0xa623e5bc
sw x3, 0(x2) # store 0xa623e5bc in memory
flw f17, 0(x2) # load 0xa623e5bc from memory into f17
la x2, scratch
li x3, 0x37a52596 # load x3 with value 0x37a52596
sw x3, 0(x2) # store 0x37a52596 in memory
flw f29, 0(x2) # load 0x37a52596 from memory into f29
la x2, scratch
li x3, 0x5079a738 # load x3 with value 0x5079a738
sw x3, 0(x2) # store 0x5079a738 in memory
flw f13, 0(x2) # load 0x5079a738 from memory into f13
fnmadd.s f28, f17, f29, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xac8b9098 # load x3 with value 0xac8b9098
sw x3, 0(x2) # store 0xac8b9098 in memory
flw f18, 0(x2) # load 0xac8b9098 from memory into f18
la x2, scratch
li x3, 0xb610c6ce # load x3 with value 0xb610c6ce
sw x3, 0(x2) # store 0xb610c6ce in memory
flw f16, 0(x2) # load 0xb610c6ce from memory into f16
la x2, scratch
li x3, 0xcf3903dc # load x3 with value 0xcf3903dc
sw x3, 0(x2) # store 0xcf3903dc in memory
flw f29, 0(x2) # load 0xcf3903dc from memory into f29
fnmadd.s f18, f18, f16, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0xab4e8a9b # load x3 with value 0xab4e8a9b
sw x3, 0(x2) # store 0xab4e8a9b in memory
flw f19, 0(x2) # load 0xab4e8a9b from memory into f19
la x2, scratch
li x3, 0xefc81037 # load x3 with value 0xefc81037
sw x3, 0(x2) # store 0xefc81037 in memory
flw f26, 0(x2) # load 0xefc81037 from memory into f26
la x2, scratch
li x3, 0xe47e95d1 # load x3 with value 0xe47e95d1
sw x3, 0(x2) # store 0xe47e95d1 in memory
flw f27, 0(x2) # load 0xe47e95d1 from memory into f27
fnmadd.s f5, f19, f26, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xe65e6464 # load x3 with value 0xe65e6464
sw x3, 0(x2) # store 0xe65e6464 in memory
flw f20, 0(x2) # load 0xe65e6464 from memory into f20
la x2, scratch
li x3, 0xad762fa0 # load x3 with value 0xad762fa0
sw x3, 0(x2) # store 0xad762fa0 in memory
flw f2, 0(x2) # load 0xad762fa0 from memory into f2
la x2, scratch
li x3, 0xd35fbcc3 # load x3 with value 0xd35fbcc3
sw x3, 0(x2) # store 0xd35fbcc3 in memory
flw f17, 0(x2) # load 0xd35fbcc3 from memory into f17
fnmadd.s f31, f20, f2, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x8f1ad678 # load x3 with value 0x8f1ad678
sw x3, 0(x2) # store 0x8f1ad678 in memory
flw f21, 0(x2) # load 0x8f1ad678 from memory into f21
la x2, scratch
li x3, 0x3df7f623 # load x3 with value 0x3df7f623
sw x3, 0(x2) # store 0x3df7f623 in memory
flw f10, 0(x2) # load 0x3df7f623 from memory into f10
la x2, scratch
li x3, 0xf2458c26 # load x3 with value 0xf2458c26
sw x3, 0(x2) # store 0xf2458c26 in memory
flw f6, 0(x2) # load 0xf2458c26 from memory into f6
fnmadd.s f23, f21, f10, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x435155a3 # load x3 with value 0x435155a3
sw x3, 0(x2) # store 0x435155a3 in memory
flw f22, 0(x2) # load 0x435155a3 from memory into f22
la x2, scratch
li x3, 0x3dcfcf7d # load x3 with value 0x3dcfcf7d
sw x3, 0(x2) # store 0x3dcfcf7d in memory
flw f21, 0(x2) # load 0x3dcfcf7d from memory into f21
la x2, scratch
li x3, 0xed3fc108 # load x3 with value 0xed3fc108
sw x3, 0(x2) # store 0xed3fc108 in memory
flw f16, 0(x2) # load 0xed3fc108 from memory into f16
fnmadd.s f30, f22, f21, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0xaf220879 # load x3 with value 0xaf220879
sw x3, 0(x2) # store 0xaf220879 in memory
flw f23, 0(x2) # load 0xaf220879 from memory into f23
la x2, scratch
li x3, 0x3754d07b # load x3 with value 0x3754d07b
sw x3, 0(x2) # store 0x3754d07b in memory
flw f15, 0(x2) # load 0x3754d07b from memory into f15
la x2, scratch
li x3, 0x08a97865 # load x3 with value 0x08a97865
sw x3, 0(x2) # store 0x08a97865 in memory
flw f18, 0(x2) # load 0x08a97865 from memory into f18
fnmadd.s f31, f23, f15, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0xc7297922 # load x3 with value 0xc7297922
sw x3, 0(x2) # store 0xc7297922 in memory
flw f24, 0(x2) # load 0xc7297922 from memory into f24
la x2, scratch
li x3, 0xa7c61ff8 # load x3 with value 0xa7c61ff8
sw x3, 0(x2) # store 0xa7c61ff8 in memory
flw f15, 0(x2) # load 0xa7c61ff8 from memory into f15
la x2, scratch
li x3, 0x941f845c # load x3 with value 0x941f845c
sw x3, 0(x2) # store 0x941f845c in memory
flw f9, 0(x2) # load 0x941f845c from memory into f9
fnmadd.s f18, f24, f15, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x548b6720 # load x3 with value 0x548b6720
sw x3, 0(x2) # store 0x548b6720 in memory
flw f25, 0(x2) # load 0x548b6720 from memory into f25
la x2, scratch
li x3, 0x15396dda # load x3 with value 0x15396dda
sw x3, 0(x2) # store 0x15396dda in memory
flw f5, 0(x2) # load 0x15396dda from memory into f5
la x2, scratch
li x3, 0xdf828280 # load x3 with value 0xdf828280
sw x3, 0(x2) # store 0xdf828280 in memory
flw f10, 0(x2) # load 0xdf828280 from memory into f10
fnmadd.s f7, f25, f5, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x4ac47d1f # load x3 with value 0x4ac47d1f
sw x3, 0(x2) # store 0x4ac47d1f in memory
flw f26, 0(x2) # load 0x4ac47d1f from memory into f26
la x2, scratch
li x3, 0x41e6dee9 # load x3 with value 0x41e6dee9
sw x3, 0(x2) # store 0x41e6dee9 in memory
flw f16, 0(x2) # load 0x41e6dee9 from memory into f16
la x2, scratch
li x3, 0xd8e81d4f # load x3 with value 0xd8e81d4f
sw x3, 0(x2) # store 0xd8e81d4f in memory
flw f24, 0(x2) # load 0xd8e81d4f from memory into f24
fnmadd.s f19, f26, f16, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x55c9fb5c # load x3 with value 0x55c9fb5c
sw x3, 0(x2) # store 0x55c9fb5c in memory
flw f27, 0(x2) # load 0x55c9fb5c from memory into f27
la x2, scratch
li x3, 0x574aec2c # load x3 with value 0x574aec2c
sw x3, 0(x2) # store 0x574aec2c in memory
flw f26, 0(x2) # load 0x574aec2c from memory into f26
la x2, scratch
li x3, 0xc41b154f # load x3 with value 0xc41b154f
sw x3, 0(x2) # store 0xc41b154f in memory
flw f30, 0(x2) # load 0xc41b154f from memory into f30
fnmadd.s f20, f27, f26, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x858477cc # load x3 with value 0x858477cc
sw x3, 0(x2) # store 0x858477cc in memory
flw f28, 0(x2) # load 0x858477cc from memory into f28
la x2, scratch
li x3, 0x48ac1015 # load x3 with value 0x48ac1015
sw x3, 0(x2) # store 0x48ac1015 in memory
flw f10, 0(x2) # load 0x48ac1015 from memory into f10
la x2, scratch
li x3, 0x3a6ab25a # load x3 with value 0x3a6ab25a
sw x3, 0(x2) # store 0x3a6ab25a in memory
flw f21, 0(x2) # load 0x3a6ab25a from memory into f21
fnmadd.s f29, f28, f10, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0x9b88016e # load x3 with value 0x9b88016e
sw x3, 0(x2) # store 0x9b88016e in memory
flw f29, 0(x2) # load 0x9b88016e from memory into f29
la x2, scratch
li x3, 0x01cf8464 # load x3 with value 0x01cf8464
sw x3, 0(x2) # store 0x01cf8464 in memory
flw f17, 0(x2) # load 0x01cf8464 from memory into f17
la x2, scratch
li x3, 0xa41d787c # load x3 with value 0xa41d787c
sw x3, 0(x2) # store 0xa41d787c in memory
flw f23, 0(x2) # load 0xa41d787c from memory into f23
fnmadd.s f13, f29, f17, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x998def8b # load x3 with value 0x998def8b
sw x3, 0(x2) # store 0x998def8b in memory
flw f30, 0(x2) # load 0x998def8b from memory into f30
la x2, scratch
li x3, 0xbcdeb5d9 # load x3 with value 0xbcdeb5d9
sw x3, 0(x2) # store 0xbcdeb5d9 in memory
flw f6, 0(x2) # load 0xbcdeb5d9 from memory into f6
la x2, scratch
li x3, 0xfd8d0550 # load x3 with value 0xfd8d0550
sw x3, 0(x2) # store 0xfd8d0550 in memory
flw f24, 0(x2) # load 0xfd8d0550 from memory into f24
fnmadd.s f2, f30, f6, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0x61eed72a # load x3 with value 0x61eed72a
sw x3, 0(x2) # store 0x61eed72a in memory
flw f31, 0(x2) # load 0x61eed72a from memory into f31
la x2, scratch
li x3, 0x72aa55b4 # load x3 with value 0x72aa55b4
sw x3, 0(x2) # store 0x72aa55b4 in memory
flw f21, 0(x2) # load 0x72aa55b4 from memory into f21
la x2, scratch
li x3, 0x91db0f5f # load x3 with value 0x91db0f5f
sw x3, 0(x2) # store 0x91db0f5f in memory
flw f24, 0(x2) # load 0x91db0f5f from memory into f24
fnmadd.s f28, f31, f21, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x692cbad1 # load x3 with value 0x692cbad1
sw x3, 0(x2) # store 0x692cbad1 in memory
flw f11, 0(x2) # load 0x692cbad1 from memory into f11
la x2, scratch
li x3, 0x357b2358 # load x3 with value 0x357b2358
sw x3, 0(x2) # store 0x357b2358 in memory
flw f0, 0(x2) # load 0x357b2358 from memory into f0
la x2, scratch
li x3, 0xc3ac1bd8 # load x3 with value 0xc3ac1bd8
sw x3, 0(x2) # store 0xc3ac1bd8 in memory
flw f17, 0(x2) # load 0xc3ac1bd8 from memory into f17
fnmadd.s f12, f11, f0, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x64426c60 # load x3 with value 0x64426c60
sw x3, 0(x2) # store 0x64426c60 in memory
flw f6, 0(x2) # load 0x64426c60 from memory into f6
la x2, scratch
li x3, 0xe985d3f6 # load x3 with value 0xe985d3f6
sw x3, 0(x2) # store 0xe985d3f6 in memory
flw f1, 0(x2) # load 0xe985d3f6 from memory into f1
la x2, scratch
li x3, 0x9d5ddc02 # load x3 with value 0x9d5ddc02
sw x3, 0(x2) # store 0x9d5ddc02 in memory
flw f26, 0(x2) # load 0x9d5ddc02 from memory into f26
fnmadd.s f14, f6, f1, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x30d23d15 # load x3 with value 0x30d23d15
sw x3, 0(x2) # store 0x30d23d15 in memory
flw f5, 0(x2) # load 0x30d23d15 from memory into f5
la x2, scratch
li x3, 0x0a211533 # load x3 with value 0x0a211533
sw x3, 0(x2) # store 0x0a211533 in memory
flw f2, 0(x2) # load 0x0a211533 from memory into f2
la x2, scratch
li x3, 0x6b30743f # load x3 with value 0x6b30743f
sw x3, 0(x2) # store 0x6b30743f in memory
flw f20, 0(x2) # load 0x6b30743f from memory into f20
fnmadd.s f7, f5, f2, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x4e7f3b9c # load x3 with value 0x4e7f3b9c
sw x3, 0(x2) # store 0x4e7f3b9c in memory
flw f13, 0(x2) # load 0x4e7f3b9c from memory into f13
la x2, scratch
li x3, 0x09afecb6 # load x3 with value 0x09afecb6
sw x3, 0(x2) # store 0x09afecb6 in memory
flw f3, 0(x2) # load 0x09afecb6 from memory into f3
la x2, scratch
li x3, 0x61cd9653 # load x3 with value 0x61cd9653
sw x3, 0(x2) # store 0x61cd9653 in memory
flw f28, 0(x2) # load 0x61cd9653 from memory into f28
fnmadd.s f25, f13, f3, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x74e6d70a # load x3 with value 0x74e6d70a
sw x3, 0(x2) # store 0x74e6d70a in memory
flw f7, 0(x2) # load 0x74e6d70a from memory into f7
la x2, scratch
li x3, 0x3043bfe4 # load x3 with value 0x3043bfe4
sw x3, 0(x2) # store 0x3043bfe4 in memory
flw f4, 0(x2) # load 0x3043bfe4 from memory into f4
la x2, scratch
li x3, 0x050c9b23 # load x3 with value 0x050c9b23
sw x3, 0(x2) # store 0x050c9b23 in memory
flw f15, 0(x2) # load 0x050c9b23 from memory into f15
fnmadd.s f1, f7, f4, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3a711317 # load x3 with value 0x3a711317
sw x3, 0(x2) # store 0x3a711317 in memory
flw f31, 0(x2) # load 0x3a711317 from memory into f31
la x2, scratch
li x3, 0x82c68c53 # load x3 with value 0x82c68c53
sw x3, 0(x2) # store 0x82c68c53 in memory
flw f5, 0(x2) # load 0x82c68c53 from memory into f5
la x2, scratch
li x3, 0x50e19d13 # load x3 with value 0x50e19d13
sw x3, 0(x2) # store 0x50e19d13 in memory
flw f19, 0(x2) # load 0x50e19d13 from memory into f19
fnmadd.s f2, f31, f5, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x948398ab # load x3 with value 0x948398ab
sw x3, 0(x2) # store 0x948398ab in memory
flw f15, 0(x2) # load 0x948398ab from memory into f15
la x2, scratch
li x3, 0x1c663d8f # load x3 with value 0x1c663d8f
sw x3, 0(x2) # store 0x1c663d8f in memory
flw f6, 0(x2) # load 0x1c663d8f from memory into f6
la x2, scratch
li x3, 0xa4990de1 # load x3 with value 0xa4990de1
sw x3, 0(x2) # store 0xa4990de1 in memory
flw f24, 0(x2) # load 0xa4990de1 from memory into f24
fnmadd.s f2, f15, f6, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2c8d1f4e # load x3 with value 0x2c8d1f4e
sw x3, 0(x2) # store 0x2c8d1f4e in memory
flw f2, 0(x2) # load 0x2c8d1f4e from memory into f2
la x2, scratch
li x3, 0xdd6139eb # load x3 with value 0xdd6139eb
sw x3, 0(x2) # store 0xdd6139eb in memory
flw f7, 0(x2) # load 0xdd6139eb from memory into f7
la x2, scratch
li x3, 0x48cae5f4 # load x3 with value 0x48cae5f4
sw x3, 0(x2) # store 0x48cae5f4 in memory
flw f24, 0(x2) # load 0x48cae5f4 from memory into f24
fnmadd.s f19, f2, f7, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xb343be8f # load x3 with value 0xb343be8f
sw x3, 0(x2) # store 0xb343be8f in memory
flw f12, 0(x2) # load 0xb343be8f from memory into f12
la x2, scratch
li x3, 0x09e9acdf # load x3 with value 0x09e9acdf
sw x3, 0(x2) # store 0x09e9acdf in memory
flw f8, 0(x2) # load 0x09e9acdf from memory into f8
la x2, scratch
li x3, 0x026b012b # load x3 with value 0x026b012b
sw x3, 0(x2) # store 0x026b012b in memory
flw f5, 0(x2) # load 0x026b012b from memory into f5
fnmadd.s f28, f12, f8, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xdc749587 # load x3 with value 0xdc749587
sw x3, 0(x2) # store 0xdc749587 in memory
flw f1, 0(x2) # load 0xdc749587 from memory into f1
la x2, scratch
li x3, 0x7f905a70 # load x3 with value 0x7f905a70
sw x3, 0(x2) # store 0x7f905a70 in memory
flw f9, 0(x2) # load 0x7f905a70 from memory into f9
la x2, scratch
li x3, 0xb2c37c67 # load x3 with value 0xb2c37c67
sw x3, 0(x2) # store 0xb2c37c67 in memory
flw f31, 0(x2) # load 0xb2c37c67 from memory into f31
fnmadd.s f8, f1, f9, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x9e57285b # load x3 with value 0x9e57285b
sw x3, 0(x2) # store 0x9e57285b in memory
flw f24, 0(x2) # load 0x9e57285b from memory into f24
la x2, scratch
li x3, 0xd8750eaf # load x3 with value 0xd8750eaf
sw x3, 0(x2) # store 0xd8750eaf in memory
flw f10, 0(x2) # load 0xd8750eaf from memory into f10
la x2, scratch
li x3, 0x5dc88b43 # load x3 with value 0x5dc88b43
sw x3, 0(x2) # store 0x5dc88b43 in memory
flw f12, 0(x2) # load 0x5dc88b43 from memory into f12
fnmadd.s f7, f24, f10, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x1be7216d # load x3 with value 0x1be7216d
sw x3, 0(x2) # store 0x1be7216d in memory
flw f22, 0(x2) # load 0x1be7216d from memory into f22
la x2, scratch
li x3, 0x855aea22 # load x3 with value 0x855aea22
sw x3, 0(x2) # store 0x855aea22 in memory
flw f11, 0(x2) # load 0x855aea22 from memory into f11
la x2, scratch
li x3, 0x90b582cd # load x3 with value 0x90b582cd
sw x3, 0(x2) # store 0x90b582cd in memory
flw f26, 0(x2) # load 0x90b582cd from memory into f26
fnmadd.s f8, f22, f11, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x6a310ae4 # load x3 with value 0x6a310ae4
sw x3, 0(x2) # store 0x6a310ae4 in memory
flw f9, 0(x2) # load 0x6a310ae4 from memory into f9
la x2, scratch
li x3, 0xdd97406a # load x3 with value 0xdd97406a
sw x3, 0(x2) # store 0xdd97406a in memory
flw f12, 0(x2) # load 0xdd97406a from memory into f12
la x2, scratch
li x3, 0x0927e82d # load x3 with value 0x0927e82d
sw x3, 0(x2) # store 0x0927e82d in memory
flw f8, 0(x2) # load 0x0927e82d from memory into f8
fnmadd.s f28, f9, f12, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0xe0f38af3 # load x3 with value 0xe0f38af3
sw x3, 0(x2) # store 0xe0f38af3 in memory
flw f22, 0(x2) # load 0xe0f38af3 from memory into f22
la x2, scratch
li x3, 0x8d141e7d # load x3 with value 0x8d141e7d
sw x3, 0(x2) # store 0x8d141e7d in memory
flw f13, 0(x2) # load 0x8d141e7d from memory into f13
la x2, scratch
li x3, 0x0c3722e2 # load x3 with value 0x0c3722e2
sw x3, 0(x2) # store 0x0c3722e2 in memory
flw f19, 0(x2) # load 0x0c3722e2 from memory into f19
fnmadd.s f5, f22, f13, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x2fe9724c # load x3 with value 0x2fe9724c
sw x3, 0(x2) # store 0x2fe9724c in memory
flw f13, 0(x2) # load 0x2fe9724c from memory into f13
la x2, scratch
li x3, 0xd580301c # load x3 with value 0xd580301c
sw x3, 0(x2) # store 0xd580301c in memory
flw f14, 0(x2) # load 0xd580301c from memory into f14
la x2, scratch
li x3, 0x13b578db # load x3 with value 0x13b578db
sw x3, 0(x2) # store 0x13b578db in memory
flw f31, 0(x2) # load 0x13b578db from memory into f31
fnmadd.s f29, f13, f14, f31 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0xb3c478bc # load x3 with value 0xb3c478bc
sw x3, 0(x2) # store 0xb3c478bc in memory
flw f9, 0(x2) # load 0xb3c478bc from memory into f9
la x2, scratch
li x3, 0xa18f1b8c # load x3 with value 0xa18f1b8c
sw x3, 0(x2) # store 0xa18f1b8c in memory
flw f15, 0(x2) # load 0xa18f1b8c from memory into f15
la x2, scratch
li x3, 0xe8e367d1 # load x3 with value 0xe8e367d1
sw x3, 0(x2) # store 0xe8e367d1 in memory
flw f28, 0(x2) # load 0xe8e367d1 from memory into f28
fnmadd.s f15, f9, f15, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0xab3f0a54 # load x3 with value 0xab3f0a54
sw x3, 0(x2) # store 0xab3f0a54 in memory
flw f21, 0(x2) # load 0xab3f0a54 from memory into f21
la x2, scratch
li x3, 0x5bf425e6 # load x3 with value 0x5bf425e6
sw x3, 0(x2) # store 0x5bf425e6 in memory
flw f16, 0(x2) # load 0x5bf425e6 from memory into f16
la x2, scratch
li x3, 0x29525a7f # load x3 with value 0x29525a7f
sw x3, 0(x2) # store 0x29525a7f in memory
flw f14, 0(x2) # load 0x29525a7f from memory into f14
fnmadd.s f30, f21, f16, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0x70b749e1 # load x3 with value 0x70b749e1
sw x3, 0(x2) # store 0x70b749e1 in memory
flw f21, 0(x2) # load 0x70b749e1 from memory into f21
la x2, scratch
li x3, 0x9b45c79c # load x3 with value 0x9b45c79c
sw x3, 0(x2) # store 0x9b45c79c in memory
flw f17, 0(x2) # load 0x9b45c79c from memory into f17
la x2, scratch
li x3, 0x7d193843 # load x3 with value 0x7d193843
sw x3, 0(x2) # store 0x7d193843 in memory
flw f11, 0(x2) # load 0x7d193843 from memory into f11
fnmadd.s f10, f21, f17, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x52ea5859 # load x3 with value 0x52ea5859
sw x3, 0(x2) # store 0x52ea5859 in memory
flw f23, 0(x2) # load 0x52ea5859 from memory into f23
la x2, scratch
li x3, 0x709088d7 # load x3 with value 0x709088d7
sw x3, 0(x2) # store 0x709088d7 in memory
flw f18, 0(x2) # load 0x709088d7 from memory into f18
la x2, scratch
li x3, 0x3debee58 # load x3 with value 0x3debee58
sw x3, 0(x2) # store 0x3debee58 in memory
flw f8, 0(x2) # load 0x3debee58 from memory into f8
fnmadd.s f18, f23, f18, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x5360bdfa # load x3 with value 0x5360bdfa
sw x3, 0(x2) # store 0x5360bdfa in memory
flw f18, 0(x2) # load 0x5360bdfa from memory into f18
la x2, scratch
li x3, 0x4eac4dfa # load x3 with value 0x4eac4dfa
sw x3, 0(x2) # store 0x4eac4dfa in memory
flw f19, 0(x2) # load 0x4eac4dfa from memory into f19
la x2, scratch
li x3, 0xe2631c00 # load x3 with value 0xe2631c00
sw x3, 0(x2) # store 0xe2631c00 in memory
flw f24, 0(x2) # load 0xe2631c00 from memory into f24
fnmadd.s f12, f18, f19, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x23c0b1eb # load x3 with value 0x23c0b1eb
sw x3, 0(x2) # store 0x23c0b1eb in memory
flw f2, 0(x2) # load 0x23c0b1eb from memory into f2
la x2, scratch
li x3, 0x2a956730 # load x3 with value 0x2a956730
sw x3, 0(x2) # store 0x2a956730 in memory
flw f20, 0(x2) # load 0x2a956730 from memory into f20
la x2, scratch
li x3, 0x9a551400 # load x3 with value 0x9a551400
sw x3, 0(x2) # store 0x9a551400 in memory
flw f29, 0(x2) # load 0x9a551400 from memory into f29
fnmadd.s f11, f2, f20, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x51db1f06 # load x3 with value 0x51db1f06
sw x3, 0(x2) # store 0x51db1f06 in memory
flw f15, 0(x2) # load 0x51db1f06 from memory into f15
la x2, scratch
li x3, 0xa2c9fab9 # load x3 with value 0xa2c9fab9
sw x3, 0(x2) # store 0xa2c9fab9 in memory
flw f21, 0(x2) # load 0xa2c9fab9 from memory into f21
la x2, scratch
li x3, 0xcdc46227 # load x3 with value 0xcdc46227
sw x3, 0(x2) # store 0xcdc46227 in memory
flw f12, 0(x2) # load 0xcdc46227 from memory into f12
fnmadd.s f31, f15, f21, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x5f9d1b51 # load x3 with value 0x5f9d1b51
sw x3, 0(x2) # store 0x5f9d1b51 in memory
flw f19, 0(x2) # load 0x5f9d1b51 from memory into f19
la x2, scratch
li x3, 0x6de67551 # load x3 with value 0x6de67551
sw x3, 0(x2) # store 0x6de67551 in memory
flw f22, 0(x2) # load 0x6de67551 from memory into f22
la x2, scratch
li x3, 0x927edbc2 # load x3 with value 0x927edbc2
sw x3, 0(x2) # store 0x927edbc2 in memory
flw f29, 0(x2) # load 0x927edbc2 from memory into f29
fnmadd.s f7, f19, f22, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x2318999f # load x3 with value 0x2318999f
sw x3, 0(x2) # store 0x2318999f in memory
flw f16, 0(x2) # load 0x2318999f from memory into f16
la x2, scratch
li x3, 0x130817d9 # load x3 with value 0x130817d9
sw x3, 0(x2) # store 0x130817d9 in memory
flw f23, 0(x2) # load 0x130817d9 from memory into f23
la x2, scratch
li x3, 0xd89d13dc # load x3 with value 0xd89d13dc
sw x3, 0(x2) # store 0xd89d13dc in memory
flw f11, 0(x2) # load 0xd89d13dc from memory into f11
fnmadd.s f14, f16, f23, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x8ab5fcce # load x3 with value 0x8ab5fcce
sw x3, 0(x2) # store 0x8ab5fcce in memory
flw f13, 0(x2) # load 0x8ab5fcce from memory into f13
la x2, scratch
li x3, 0x7be2ae07 # load x3 with value 0x7be2ae07
sw x3, 0(x2) # store 0x7be2ae07 in memory
flw f24, 0(x2) # load 0x7be2ae07 from memory into f24
la x2, scratch
li x3, 0x699aff87 # load x3 with value 0x699aff87
sw x3, 0(x2) # store 0x699aff87 in memory
flw f11, 0(x2) # load 0x699aff87 from memory into f11
fnmadd.s f31, f13, f24, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x55f9619c # load x3 with value 0x55f9619c
sw x3, 0(x2) # store 0x55f9619c in memory
flw f9, 0(x2) # load 0x55f9619c from memory into f9
la x2, scratch
li x3, 0x59372595 # load x3 with value 0x59372595
sw x3, 0(x2) # store 0x59372595 in memory
flw f25, 0(x2) # load 0x59372595 from memory into f25
la x2, scratch
li x3, 0xd9728933 # load x3 with value 0xd9728933
sw x3, 0(x2) # store 0xd9728933 in memory
flw f19, 0(x2) # load 0xd9728933 from memory into f19
fnmadd.s f29, f9, f25, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x5ee28217 # load x3 with value 0x5ee28217
sw x3, 0(x2) # store 0x5ee28217 in memory
flw f14, 0(x2) # load 0x5ee28217 from memory into f14
la x2, scratch
li x3, 0xef4b68e9 # load x3 with value 0xef4b68e9
sw x3, 0(x2) # store 0xef4b68e9 in memory
flw f26, 0(x2) # load 0xef4b68e9 from memory into f26
la x2, scratch
li x3, 0x360cfa77 # load x3 with value 0x360cfa77
sw x3, 0(x2) # store 0x360cfa77 in memory
flw f10, 0(x2) # load 0x360cfa77 from memory into f10
fnmadd.s f1, f14, f26, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0xecaba3c5 # load x3 with value 0xecaba3c5
sw x3, 0(x2) # store 0xecaba3c5 in memory
flw f6, 0(x2) # load 0xecaba3c5 from memory into f6
la x2, scratch
li x3, 0x4875cc8e # load x3 with value 0x4875cc8e
sw x3, 0(x2) # store 0x4875cc8e in memory
flw f27, 0(x2) # load 0x4875cc8e from memory into f27
la x2, scratch
li x3, 0xbdca4fdc # load x3 with value 0xbdca4fdc
sw x3, 0(x2) # store 0xbdca4fdc in memory
flw f29, 0(x2) # load 0xbdca4fdc from memory into f29
fnmadd.s f12, f6, f27, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x7859faac # load x3 with value 0x7859faac
sw x3, 0(x2) # store 0x7859faac in memory
flw f19, 0(x2) # load 0x7859faac from memory into f19
la x2, scratch
li x3, 0x07993e49 # load x3 with value 0x07993e49
sw x3, 0(x2) # store 0x07993e49 in memory
flw f28, 0(x2) # load 0x07993e49 from memory into f28
la x2, scratch
li x3, 0xe40e333f # load x3 with value 0xe40e333f
sw x3, 0(x2) # store 0xe40e333f in memory
flw f1, 0(x2) # load 0xe40e333f from memory into f1
fnmadd.s f15, f19, f28, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xb38eef0f # load x3 with value 0xb38eef0f
sw x3, 0(x2) # store 0xb38eef0f in memory
flw f15, 0(x2) # load 0xb38eef0f from memory into f15
la x2, scratch
li x3, 0x0dde6151 # load x3 with value 0x0dde6151
sw x3, 0(x2) # store 0x0dde6151 in memory
flw f29, 0(x2) # load 0x0dde6151 from memory into f29
la x2, scratch
li x3, 0xf4e66f98 # load x3 with value 0xf4e66f98
sw x3, 0(x2) # store 0xf4e66f98 in memory
flw f11, 0(x2) # load 0xf4e66f98 from memory into f11
fnmadd.s f27, f15, f29, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x2a4fdfb4 # load x3 with value 0x2a4fdfb4
sw x3, 0(x2) # store 0x2a4fdfb4 in memory
flw f26, 0(x2) # load 0x2a4fdfb4 from memory into f26
la x2, scratch
li x3, 0x8e032a58 # load x3 with value 0x8e032a58
sw x3, 0(x2) # store 0x8e032a58 in memory
flw f30, 0(x2) # load 0x8e032a58 from memory into f30
la x2, scratch
li x3, 0x3ee0856f # load x3 with value 0x3ee0856f
sw x3, 0(x2) # store 0x3ee0856f in memory
flw f11, 0(x2) # load 0x3ee0856f from memory into f11
fnmadd.s f25, f26, f30, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0xb1505156 # load x3 with value 0xb1505156
sw x3, 0(x2) # store 0xb1505156 in memory
flw f11, 0(x2) # load 0xb1505156 from memory into f11
la x2, scratch
li x3, 0x6921fb80 # load x3 with value 0x6921fb80
sw x3, 0(x2) # store 0x6921fb80 in memory
flw f31, 0(x2) # load 0x6921fb80 from memory into f31
la x2, scratch
li x3, 0x350afed9 # load x3 with value 0x350afed9
sw x3, 0(x2) # store 0x350afed9 in memory
flw f25, 0(x2) # load 0x350afed9 from memory into f25
fnmadd.s f28, f11, f31, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x9308793f # load x3 with value 0x9308793f
sw x3, 0(x2) # store 0x9308793f in memory
flw f9, 0(x2) # load 0x9308793f from memory into f9
la x2, scratch
li x3, 0xedd1cbcf # load x3 with value 0xedd1cbcf
sw x3, 0(x2) # store 0xedd1cbcf in memory
flw f25, 0(x2) # load 0xedd1cbcf from memory into f25
la x2, scratch
li x3, 0x55685e48 # load x3 with value 0x55685e48
sw x3, 0(x2) # store 0x55685e48 in memory
flw f0, 0(x2) # load 0x55685e48 from memory into f0
fnmadd.s f10, f9, f25, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0xe79f917a # load x3 with value 0xe79f917a
sw x3, 0(x2) # store 0xe79f917a in memory
flw f8, 0(x2) # load 0xe79f917a from memory into f8
la x2, scratch
li x3, 0xcd9574a8 # load x3 with value 0xcd9574a8
sw x3, 0(x2) # store 0xcd9574a8 in memory
flw f27, 0(x2) # load 0xcd9574a8 from memory into f27
la x2, scratch
li x3, 0x275e30ed # load x3 with value 0x275e30ed
sw x3, 0(x2) # store 0x275e30ed in memory
flw f1, 0(x2) # load 0x275e30ed from memory into f1
fnmadd.s f28, f8, f27, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xacdad7bd # load x3 with value 0xacdad7bd
sw x3, 0(x2) # store 0xacdad7bd in memory
flw f11, 0(x2) # load 0xacdad7bd from memory into f11
la x2, scratch
li x3, 0x4eda7f45 # load x3 with value 0x4eda7f45
sw x3, 0(x2) # store 0x4eda7f45 in memory
flw f15, 0(x2) # load 0x4eda7f45 from memory into f15
la x2, scratch
li x3, 0x039b2a54 # load x3 with value 0x039b2a54
sw x3, 0(x2) # store 0x039b2a54 in memory
flw f2, 0(x2) # load 0x039b2a54 from memory into f2
fnmadd.s f9, f11, f15, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0x421eb050 # load x3 with value 0x421eb050
sw x3, 0(x2) # store 0x421eb050 in memory
flw f16, 0(x2) # load 0x421eb050 from memory into f16
la x2, scratch
li x3, 0x749ccb48 # load x3 with value 0x749ccb48
sw x3, 0(x2) # store 0x749ccb48 in memory
flw f2, 0(x2) # load 0x749ccb48 from memory into f2
la x2, scratch
li x3, 0x5bce487f # load x3 with value 0x5bce487f
sw x3, 0(x2) # store 0x5bce487f in memory
flw f3, 0(x2) # load 0x5bce487f from memory into f3
fnmadd.s f11, f16, f2, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x973c589b # load x3 with value 0x973c589b
sw x3, 0(x2) # store 0x973c589b in memory
flw f7, 0(x2) # load 0x973c589b from memory into f7
la x2, scratch
li x3, 0xfbf23650 # load x3 with value 0xfbf23650
sw x3, 0(x2) # store 0xfbf23650 in memory
flw f30, 0(x2) # load 0xfbf23650 from memory into f30
la x2, scratch
li x3, 0x63562497 # load x3 with value 0x63562497
sw x3, 0(x2) # store 0x63562497 in memory
flw f4, 0(x2) # load 0x63562497 from memory into f4
fnmadd.s f2, f7, f30, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0xd0e85de1 # load x3 with value 0xd0e85de1
sw x3, 0(x2) # store 0xd0e85de1 in memory
flw f7, 0(x2) # load 0xd0e85de1 from memory into f7
la x2, scratch
li x3, 0x9a3d441e # load x3 with value 0x9a3d441e
sw x3, 0(x2) # store 0x9a3d441e in memory
flw f14, 0(x2) # load 0x9a3d441e from memory into f14
la x2, scratch
li x3, 0x9140dddb # load x3 with value 0x9140dddb
sw x3, 0(x2) # store 0x9140dddb in memory
flw f5, 0(x2) # load 0x9140dddb from memory into f5
fnmadd.s f15, f7, f14, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x39ea9635 # load x3 with value 0x39ea9635
sw x3, 0(x2) # store 0x39ea9635 in memory
flw f19, 0(x2) # load 0x39ea9635 from memory into f19
la x2, scratch
li x3, 0xc8fe9218 # load x3 with value 0xc8fe9218
sw x3, 0(x2) # store 0xc8fe9218 in memory
flw f9, 0(x2) # load 0xc8fe9218 from memory into f9
la x2, scratch
li x3, 0x938d3c3e # load x3 with value 0x938d3c3e
sw x3, 0(x2) # store 0x938d3c3e in memory
flw f6, 0(x2) # load 0x938d3c3e from memory into f6
fnmadd.s f27, f19, f9, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0xce51f884 # load x3 with value 0xce51f884
sw x3, 0(x2) # store 0xce51f884 in memory
flw f29, 0(x2) # load 0xce51f884 from memory into f29
la x2, scratch
li x3, 0xe1618512 # load x3 with value 0xe1618512
sw x3, 0(x2) # store 0xe1618512 in memory
flw f3, 0(x2) # load 0xe1618512 from memory into f3
la x2, scratch
li x3, 0x463dc518 # load x3 with value 0x463dc518
sw x3, 0(x2) # store 0x463dc518 in memory
flw f7, 0(x2) # load 0x463dc518 from memory into f7
fnmadd.s f19, f29, f3, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x2161be73 # load x3 with value 0x2161be73
sw x3, 0(x2) # store 0x2161be73 in memory
flw f29, 0(x2) # load 0x2161be73 from memory into f29
la x2, scratch
li x3, 0xeb0f7e14 # load x3 with value 0xeb0f7e14
sw x3, 0(x2) # store 0xeb0f7e14 in memory
flw f24, 0(x2) # load 0xeb0f7e14 from memory into f24
la x2, scratch
li x3, 0x92349b35 # load x3 with value 0x92349b35
sw x3, 0(x2) # store 0x92349b35 in memory
flw f8, 0(x2) # load 0x92349b35 from memory into f8
fnmadd.s f13, f29, f24, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x010c94cf # load x3 with value 0x010c94cf
sw x3, 0(x2) # store 0x010c94cf in memory
flw f25, 0(x2) # load 0x010c94cf from memory into f25
la x2, scratch
li x3, 0x82f4c072 # load x3 with value 0x82f4c072
sw x3, 0(x2) # store 0x82f4c072 in memory
flw f2, 0(x2) # load 0x82f4c072 from memory into f2
la x2, scratch
li x3, 0xa435c762 # load x3 with value 0xa435c762
sw x3, 0(x2) # store 0xa435c762 in memory
flw f9, 0(x2) # load 0xa435c762 from memory into f9
fnmadd.s f6, f25, f2, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0x1e4964aa # load x3 with value 0x1e4964aa
sw x3, 0(x2) # store 0x1e4964aa in memory
flw f11, 0(x2) # load 0x1e4964aa from memory into f11
la x2, scratch
li x3, 0x290ed16f # load x3 with value 0x290ed16f
sw x3, 0(x2) # store 0x290ed16f in memory
flw f17, 0(x2) # load 0x290ed16f from memory into f17
la x2, scratch
li x3, 0xe4fd3cb8 # load x3 with value 0xe4fd3cb8
sw x3, 0(x2) # store 0xe4fd3cb8 in memory
flw f10, 0(x2) # load 0xe4fd3cb8 from memory into f10
fnmadd.s f23, f11, f17, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x41b6b44c # load x3 with value 0x41b6b44c
sw x3, 0(x2) # store 0x41b6b44c in memory
flw f7, 0(x2) # load 0x41b6b44c from memory into f7
la x2, scratch
li x3, 0x853f7930 # load x3 with value 0x853f7930
sw x3, 0(x2) # store 0x853f7930 in memory
flw f27, 0(x2) # load 0x853f7930 from memory into f27
la x2, scratch
li x3, 0x8786474e # load x3 with value 0x8786474e
sw x3, 0(x2) # store 0x8786474e in memory
flw f11, 0(x2) # load 0x8786474e from memory into f11
fnmadd.s f16, f7, f27, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0xbc4e3093 # load x3 with value 0xbc4e3093
sw x3, 0(x2) # store 0xbc4e3093 in memory
flw f3, 0(x2) # load 0xbc4e3093 from memory into f3
la x2, scratch
li x3, 0x3a2947cd # load x3 with value 0x3a2947cd
sw x3, 0(x2) # store 0x3a2947cd in memory
flw f30, 0(x2) # load 0x3a2947cd from memory into f30
la x2, scratch
li x3, 0xa337bd5f # load x3 with value 0xa337bd5f
sw x3, 0(x2) # store 0xa337bd5f in memory
flw f12, 0(x2) # load 0xa337bd5f from memory into f12
fnmadd.s f16, f3, f30, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x2a08a722 # load x3 with value 0x2a08a722
sw x3, 0(x2) # store 0x2a08a722 in memory
flw f8, 0(x2) # load 0x2a08a722 from memory into f8
la x2, scratch
li x3, 0xf6c6d445 # load x3 with value 0xf6c6d445
sw x3, 0(x2) # store 0xf6c6d445 in memory
flw f25, 0(x2) # load 0xf6c6d445 from memory into f25
la x2, scratch
li x3, 0x2f00cd48 # load x3 with value 0x2f00cd48
sw x3, 0(x2) # store 0x2f00cd48 in memory
flw f13, 0(x2) # load 0x2f00cd48 from memory into f13
fnmadd.s f13, f8, f25, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0x1ff05428 # load x3 with value 0x1ff05428
sw x3, 0(x2) # store 0x1ff05428 in memory
flw f3, 0(x2) # load 0x1ff05428 from memory into f3
la x2, scratch
li x3, 0x82bc33c2 # load x3 with value 0x82bc33c2
sw x3, 0(x2) # store 0x82bc33c2 in memory
flw f5, 0(x2) # load 0x82bc33c2 from memory into f5
la x2, scratch
li x3, 0xc2495a18 # load x3 with value 0xc2495a18
sw x3, 0(x2) # store 0xc2495a18 in memory
flw f14, 0(x2) # load 0xc2495a18 from memory into f14
fnmadd.s f15, f3, f5, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0x35f25b6c # load x3 with value 0x35f25b6c
sw x3, 0(x2) # store 0x35f25b6c in memory
flw f22, 0(x2) # load 0x35f25b6c from memory into f22
la x2, scratch
li x3, 0x2c762764 # load x3 with value 0x2c762764
sw x3, 0(x2) # store 0x2c762764 in memory
flw f7, 0(x2) # load 0x2c762764 from memory into f7
la x2, scratch
li x3, 0x71ee94fb # load x3 with value 0x71ee94fb
sw x3, 0(x2) # store 0x71ee94fb in memory
flw f15, 0(x2) # load 0x71ee94fb from memory into f15
fnmadd.s f19, f22, f7, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0xbae1a2a1 # load x3 with value 0xbae1a2a1
sw x3, 0(x2) # store 0xbae1a2a1 in memory
flw f12, 0(x2) # load 0xbae1a2a1 from memory into f12
la x2, scratch
li x3, 0xbecb0b95 # load x3 with value 0xbecb0b95
sw x3, 0(x2) # store 0xbecb0b95 in memory
flw f17, 0(x2) # load 0xbecb0b95 from memory into f17
la x2, scratch
li x3, 0x7cd124af # load x3 with value 0x7cd124af
sw x3, 0(x2) # store 0x7cd124af in memory
flw f16, 0(x2) # load 0x7cd124af from memory into f16
fnmadd.s f8, f12, f17, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x50cc8730 # load x3 with value 0x50cc8730
sw x3, 0(x2) # store 0x50cc8730 in memory
flw f16, 0(x2) # load 0x50cc8730 from memory into f16
la x2, scratch
li x3, 0xaa51c144 # load x3 with value 0xaa51c144
sw x3, 0(x2) # store 0xaa51c144 in memory
flw f19, 0(x2) # load 0xaa51c144 from memory into f19
la x2, scratch
li x3, 0x8687116a # load x3 with value 0x8687116a
sw x3, 0(x2) # store 0x8687116a in memory
flw f17, 0(x2) # load 0x8687116a from memory into f17
fnmadd.s f1, f16, f19, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0xab556638 # load x3 with value 0xab556638
sw x3, 0(x2) # store 0xab556638 in memory
flw f23, 0(x2) # load 0xab556638 from memory into f23
la x2, scratch
li x3, 0x0a593a38 # load x3 with value 0x0a593a38
sw x3, 0(x2) # store 0x0a593a38 in memory
flw f16, 0(x2) # load 0x0a593a38 from memory into f16
la x2, scratch
li x3, 0x316b68dd # load x3 with value 0x316b68dd
sw x3, 0(x2) # store 0x316b68dd in memory
flw f18, 0(x2) # load 0x316b68dd from memory into f18
fnmadd.s f29, f23, f16, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x12cd6136 # load x3 with value 0x12cd6136
sw x3, 0(x2) # store 0x12cd6136 in memory
flw f25, 0(x2) # load 0x12cd6136 from memory into f25
la x2, scratch
li x3, 0xff2ef1aa # load x3 with value 0xff2ef1aa
sw x3, 0(x2) # store 0xff2ef1aa in memory
flw f16, 0(x2) # load 0xff2ef1aa from memory into f16
la x2, scratch
li x3, 0x2b98ac3f # load x3 with value 0x2b98ac3f
sw x3, 0(x2) # store 0x2b98ac3f in memory
flw f19, 0(x2) # load 0x2b98ac3f from memory into f19
fnmadd.s f5, f25, f16, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0xe675e30d # load x3 with value 0xe675e30d
sw x3, 0(x2) # store 0xe675e30d in memory
flw f12, 0(x2) # load 0xe675e30d from memory into f12
la x2, scratch
li x3, 0x3372ac00 # load x3 with value 0x3372ac00
sw x3, 0(x2) # store 0x3372ac00 in memory
flw f14, 0(x2) # load 0x3372ac00 from memory into f14
la x2, scratch
li x3, 0x15dc9ee3 # load x3 with value 0x15dc9ee3
sw x3, 0(x2) # store 0x15dc9ee3 in memory
flw f20, 0(x2) # load 0x15dc9ee3 from memory into f20
fnmadd.s f6, f12, f14, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x4829b46b # load x3 with value 0x4829b46b
sw x3, 0(x2) # store 0x4829b46b in memory
flw f24, 0(x2) # load 0x4829b46b from memory into f24
la x2, scratch
li x3, 0x16e1a201 # load x3 with value 0x16e1a201
sw x3, 0(x2) # store 0x16e1a201 in memory
flw f23, 0(x2) # load 0x16e1a201 from memory into f23
la x2, scratch
li x3, 0x20602d22 # load x3 with value 0x20602d22
sw x3, 0(x2) # store 0x20602d22 in memory
flw f21, 0(x2) # load 0x20602d22 from memory into f21
fnmadd.s f1, f24, f23, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0x5c2fb9d5 # load x3 with value 0x5c2fb9d5
sw x3, 0(x2) # store 0x5c2fb9d5 in memory
flw f9, 0(x2) # load 0x5c2fb9d5 from memory into f9
la x2, scratch
li x3, 0xe84793e3 # load x3 with value 0xe84793e3
sw x3, 0(x2) # store 0xe84793e3 in memory
flw f15, 0(x2) # load 0xe84793e3 from memory into f15
la x2, scratch
li x3, 0x88018ea3 # load x3 with value 0x88018ea3
sw x3, 0(x2) # store 0x88018ea3 in memory
flw f22, 0(x2) # load 0x88018ea3 from memory into f22
fnmadd.s f12, f9, f15, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0xca68d735 # load x3 with value 0xca68d735
sw x3, 0(x2) # store 0xca68d735 in memory
flw f11, 0(x2) # load 0xca68d735 from memory into f11
la x2, scratch
li x3, 0x1c863978 # load x3 with value 0x1c863978
sw x3, 0(x2) # store 0x1c863978 in memory
flw f8, 0(x2) # load 0x1c863978 from memory into f8
la x2, scratch
li x3, 0x0c89a607 # load x3 with value 0x0c89a607
sw x3, 0(x2) # store 0x0c89a607 in memory
flw f23, 0(x2) # load 0x0c89a607 from memory into f23
fnmadd.s f19, f11, f8, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0xd38e7537 # load x3 with value 0xd38e7537
sw x3, 0(x2) # store 0xd38e7537 in memory
flw f19, 0(x2) # load 0xd38e7537 from memory into f19
la x2, scratch
li x3, 0x0760d9aa # load x3 with value 0x0760d9aa
sw x3, 0(x2) # store 0x0760d9aa in memory
flw f7, 0(x2) # load 0x0760d9aa from memory into f7
la x2, scratch
li x3, 0x8447401a # load x3 with value 0x8447401a
sw x3, 0(x2) # store 0x8447401a in memory
flw f24, 0(x2) # load 0x8447401a from memory into f24
fnmadd.s f12, f19, f7, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0x5a2f8138 # load x3 with value 0x5a2f8138
sw x3, 0(x2) # store 0x5a2f8138 in memory
flw f29, 0(x2) # load 0x5a2f8138 from memory into f29
la x2, scratch
li x3, 0x9848b30a # load x3 with value 0x9848b30a
sw x3, 0(x2) # store 0x9848b30a in memory
flw f23, 0(x2) # load 0x9848b30a from memory into f23
la x2, scratch
li x3, 0x5356f4fb # load x3 with value 0x5356f4fb
sw x3, 0(x2) # store 0x5356f4fb in memory
flw f25, 0(x2) # load 0x5356f4fb from memory into f25
fnmadd.s f17, f29, f23, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0xcc7272be # load x3 with value 0xcc7272be
sw x3, 0(x2) # store 0xcc7272be in memory
flw f14, 0(x2) # load 0xcc7272be from memory into f14
la x2, scratch
li x3, 0xd66198fe # load x3 with value 0xd66198fe
sw x3, 0(x2) # store 0xd66198fe in memory
flw f16, 0(x2) # load 0xd66198fe from memory into f16
la x2, scratch
li x3, 0x949b0614 # load x3 with value 0x949b0614
sw x3, 0(x2) # store 0x949b0614 in memory
flw f26, 0(x2) # load 0x949b0614 from memory into f26
fnmadd.s f15, f14, f16, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0xb488dab4 # load x3 with value 0xb488dab4
sw x3, 0(x2) # store 0xb488dab4 in memory
flw f19, 0(x2) # load 0xb488dab4 from memory into f19
la x2, scratch
li x3, 0x4f9523ff # load x3 with value 0x4f9523ff
sw x3, 0(x2) # store 0x4f9523ff in memory
flw f23, 0(x2) # load 0x4f9523ff from memory into f23
la x2, scratch
li x3, 0xcff084f0 # load x3 with value 0xcff084f0
sw x3, 0(x2) # store 0xcff084f0 in memory
flw f27, 0(x2) # load 0xcff084f0 from memory into f27
fnmadd.s f24, f19, f23, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x6d6161ce # load x3 with value 0x6d6161ce
sw x3, 0(x2) # store 0x6d6161ce in memory
flw f12, 0(x2) # load 0x6d6161ce from memory into f12
la x2, scratch
li x3, 0xe25e77ab # load x3 with value 0xe25e77ab
sw x3, 0(x2) # store 0xe25e77ab in memory
flw f30, 0(x2) # load 0xe25e77ab from memory into f30
la x2, scratch
li x3, 0xbf2f9a52 # load x3 with value 0xbf2f9a52
sw x3, 0(x2) # store 0xbf2f9a52 in memory
flw f28, 0(x2) # load 0xbf2f9a52 from memory into f28
fnmadd.s f22, f12, f30, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0x6aad7941 # load x3 with value 0x6aad7941
sw x3, 0(x2) # store 0x6aad7941 in memory
flw f13, 0(x2) # load 0x6aad7941 from memory into f13
la x2, scratch
li x3, 0x934b5e1d # load x3 with value 0x934b5e1d
sw x3, 0(x2) # store 0x934b5e1d in memory
flw f20, 0(x2) # load 0x934b5e1d from memory into f20
la x2, scratch
li x3, 0x651d801c # load x3 with value 0x651d801c
sw x3, 0(x2) # store 0x651d801c in memory
flw f29, 0(x2) # load 0x651d801c from memory into f29
fnmadd.s f16, f13, f20, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0x43ff1da2 # load x3 with value 0x43ff1da2
sw x3, 0(x2) # store 0x43ff1da2 in memory
flw f16, 0(x2) # load 0x43ff1da2 from memory into f16
la x2, scratch
li x3, 0xe49412fb # load x3 with value 0xe49412fb
sw x3, 0(x2) # store 0xe49412fb in memory
flw f3, 0(x2) # load 0xe49412fb from memory into f3
la x2, scratch
li x3, 0x7c48864b # load x3 with value 0x7c48864b
sw x3, 0(x2) # store 0x7c48864b in memory
flw f30, 0(x2) # load 0x7c48864b from memory into f30
fnmadd.s f18, f16, f3, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0x26821e1b # load x3 with value 0x26821e1b
sw x3, 0(x2) # store 0x26821e1b in memory
flw f23, 0(x2) # load 0x26821e1b from memory into f23
la x2, scratch
li x3, 0x297b4734 # load x3 with value 0x297b4734
sw x3, 0(x2) # store 0x297b4734 in memory
flw f2, 0(x2) # load 0x297b4734 from memory into f2
la x2, scratch
li x3, 0x3882c21b # load x3 with value 0x3882c21b
sw x3, 0(x2) # store 0x3882c21b in memory
flw f31, 0(x2) # load 0x3882c21b from memory into f31
fnmadd.s f12, f23, f2, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xebdf6ef7 # load x3 with value 0xebdf6ef7
sw x3, 0(x2) # store 0xebdf6ef7 in memory
flw f28, 0(x2) # load 0xebdf6ef7 from memory into f28
la x2, scratch
li x3, 0x27f2e315 # load x3 with value 0x27f2e315
sw x3, 0(x2) # store 0x27f2e315 in memory
flw f25, 0(x2) # load 0x27f2e315 from memory into f25
la x2, scratch
li x3, 0x6f2ed831 # load x3 with value 0x6f2ed831
sw x3, 0(x2) # store 0x6f2ed831 in memory
flw f3, 0(x2) # load 0x6f2ed831 from memory into f3
fnmadd.s f0, f28, f25, f3 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0xa33319c8 # load x3 with value 0xa33319c8
sw x3, 0(x2) # store 0xa33319c8 in memory
flw f23, 0(x2) # load 0xa33319c8 from memory into f23
la x2, scratch
li x3, 0x231bd2d5 # load x3 with value 0x231bd2d5
sw x3, 0(x2) # store 0x231bd2d5 in memory
flw f20, 0(x2) # load 0x231bd2d5 from memory into f20
la x2, scratch
li x3, 0x0afcfb32 # load x3 with value 0x0afcfb32
sw x3, 0(x2) # store 0x0afcfb32 in memory
flw f16, 0(x2) # load 0x0afcfb32 from memory into f16
fnmadd.s f1, f23, f20, f16 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x1b18c8c9 # load x3 with value 0x1b18c8c9
sw x3, 0(x2) # store 0x1b18c8c9 in memory
flw f23, 0(x2) # load 0x1b18c8c9 from memory into f23
la x2, scratch
li x3, 0xc54460a0 # load x3 with value 0xc54460a0
sw x3, 0(x2) # store 0xc54460a0 in memory
flw f31, 0(x2) # load 0xc54460a0 from memory into f31
la x2, scratch
li x3, 0x0f93b14d # load x3 with value 0x0f93b14d
sw x3, 0(x2) # store 0x0f93b14d in memory
flw f16, 0(x2) # load 0x0f93b14d from memory into f16
fnmadd.s f2, f23, f31, f16 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x2e376f46 # load x3 with value 0x2e376f46
sw x3, 0(x2) # store 0x2e376f46 in memory
flw f30, 0(x2) # load 0x2e376f46 from memory into f30
la x2, scratch
li x3, 0xe1407ffb # load x3 with value 0xe1407ffb
sw x3, 0(x2) # store 0xe1407ffb in memory
flw f26, 0(x2) # load 0xe1407ffb from memory into f26
la x2, scratch
li x3, 0xb3c9a58b # load x3 with value 0xb3c9a58b
sw x3, 0(x2) # store 0xb3c9a58b in memory
flw f7, 0(x2) # load 0xb3c9a58b from memory into f7
fnmadd.s f3, f30, f26, f7 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x66c83ebb # load x3 with value 0x66c83ebb
sw x3, 0(x2) # store 0x66c83ebb in memory
flw f11, 0(x2) # load 0x66c83ebb from memory into f11
la x2, scratch
li x3, 0x1d5cfbf6 # load x3 with value 0x1d5cfbf6
sw x3, 0(x2) # store 0x1d5cfbf6 in memory
flw f25, 0(x2) # load 0x1d5cfbf6 from memory into f25
la x2, scratch
li x3, 0xe8c18e7c # load x3 with value 0xe8c18e7c
sw x3, 0(x2) # store 0xe8c18e7c in memory
flw f17, 0(x2) # load 0xe8c18e7c from memory into f17
fnmadd.s f4, f11, f25, f17 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xefc6cb40 # load x3 with value 0xefc6cb40
sw x3, 0(x2) # store 0xefc6cb40 in memory
flw f19, 0(x2) # load 0xefc6cb40 from memory into f19
la x2, scratch
li x3, 0x2d54c481 # load x3 with value 0x2d54c481
sw x3, 0(x2) # store 0x2d54c481 in memory
flw f25, 0(x2) # load 0x2d54c481 from memory into f25
la x2, scratch
li x3, 0x208f7051 # load x3 with value 0x208f7051
sw x3, 0(x2) # store 0x208f7051 in memory
flw f26, 0(x2) # load 0x208f7051 from memory into f26
fnmadd.s f5, f19, f25, f26 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa9cecdcb # load x3 with value 0xa9cecdcb
sw x3, 0(x2) # store 0xa9cecdcb in memory
flw f5, 0(x2) # load 0xa9cecdcb from memory into f5
la x2, scratch
li x3, 0x7528484c # load x3 with value 0x7528484c
sw x3, 0(x2) # store 0x7528484c in memory
flw f19, 0(x2) # load 0x7528484c from memory into f19
la x2, scratch
li x3, 0x8d0bc2ec # load x3 with value 0x8d0bc2ec
sw x3, 0(x2) # store 0x8d0bc2ec in memory
flw f3, 0(x2) # load 0x8d0bc2ec from memory into f3
fnmadd.s f6, f5, f19, f3 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xd1d1eb10 # load x3 with value 0xd1d1eb10
sw x3, 0(x2) # store 0xd1d1eb10 in memory
flw f30, 0(x2) # load 0xd1d1eb10 from memory into f30
la x2, scratch
li x3, 0xa04bf46c # load x3 with value 0xa04bf46c
sw x3, 0(x2) # store 0xa04bf46c in memory
flw f20, 0(x2) # load 0xa04bf46c from memory into f20
la x2, scratch
li x3, 0x4096c801 # load x3 with value 0x4096c801
sw x3, 0(x2) # store 0x4096c801 in memory
flw f10, 0(x2) # load 0x4096c801 from memory into f10
fnmadd.s f7, f30, f20, f10 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x34c2b9fc # load x3 with value 0x34c2b9fc
sw x3, 0(x2) # store 0x34c2b9fc in memory
flw f9, 0(x2) # load 0x34c2b9fc from memory into f9
la x2, scratch
li x3, 0xf73c5466 # load x3 with value 0xf73c5466
sw x3, 0(x2) # store 0xf73c5466 in memory
flw f8, 0(x2) # load 0xf73c5466 from memory into f8
la x2, scratch
li x3, 0x91e088e5 # load x3 with value 0x91e088e5
sw x3, 0(x2) # store 0x91e088e5 in memory
flw f2, 0(x2) # load 0x91e088e5 from memory into f2
fnmadd.s f8, f9, f8, f2 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x81bfc0fb # load x3 with value 0x81bfc0fb
sw x3, 0(x2) # store 0x81bfc0fb in memory
flw f13, 0(x2) # load 0x81bfc0fb from memory into f13
la x2, scratch
li x3, 0x0bdf6d38 # load x3 with value 0x0bdf6d38
sw x3, 0(x2) # store 0x0bdf6d38 in memory
flw f10, 0(x2) # load 0x0bdf6d38 from memory into f10
la x2, scratch
li x3, 0x32693315 # load x3 with value 0x32693315
sw x3, 0(x2) # store 0x32693315 in memory
flw f18, 0(x2) # load 0x32693315 from memory into f18
fnmadd.s f9, f13, f10, f18 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xe8621aee # load x3 with value 0xe8621aee
sw x3, 0(x2) # store 0xe8621aee in memory
flw f29, 0(x2) # load 0xe8621aee from memory into f29
la x2, scratch
li x3, 0x8cf1a487 # load x3 with value 0x8cf1a487
sw x3, 0(x2) # store 0x8cf1a487 in memory
flw f18, 0(x2) # load 0x8cf1a487 from memory into f18
la x2, scratch
li x3, 0x9d4d8382 # load x3 with value 0x9d4d8382
sw x3, 0(x2) # store 0x9d4d8382 in memory
flw f6, 0(x2) # load 0x9d4d8382 from memory into f6
fnmadd.s f10, f29, f18, f6 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x930b1d7c # load x3 with value 0x930b1d7c
sw x3, 0(x2) # store 0x930b1d7c in memory
flw f18, 0(x2) # load 0x930b1d7c from memory into f18
la x2, scratch
li x3, 0xac22c7e6 # load x3 with value 0xac22c7e6
sw x3, 0(x2) # store 0xac22c7e6 in memory
flw f19, 0(x2) # load 0xac22c7e6 from memory into f19
la x2, scratch
li x3, 0x2766b750 # load x3 with value 0x2766b750
sw x3, 0(x2) # store 0x2766b750 in memory
flw f21, 0(x2) # load 0x2766b750 from memory into f21
fnmadd.s f11, f18, f19, f21 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0xb50408de # load x3 with value 0xb50408de
sw x3, 0(x2) # store 0xb50408de in memory
flw f20, 0(x2) # load 0xb50408de from memory into f20
la x2, scratch
li x3, 0x6d0f6961 # load x3 with value 0x6d0f6961
sw x3, 0(x2) # store 0x6d0f6961 in memory
flw f13, 0(x2) # load 0x6d0f6961 from memory into f13
la x2, scratch
li x3, 0x808dcdfb # load x3 with value 0x808dcdfb
sw x3, 0(x2) # store 0x808dcdfb in memory
flw f9, 0(x2) # load 0x808dcdfb from memory into f9
fnmadd.s f12, f20, f13, f9 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xb1466a4f # load x3 with value 0xb1466a4f
sw x3, 0(x2) # store 0xb1466a4f in memory
flw f3, 0(x2) # load 0xb1466a4f from memory into f3
la x2, scratch
li x3, 0x7bc86570 # load x3 with value 0x7bc86570
sw x3, 0(x2) # store 0x7bc86570 in memory
flw f26, 0(x2) # load 0x7bc86570 from memory into f26
la x2, scratch
li x3, 0xe90bf439 # load x3 with value 0xe90bf439
sw x3, 0(x2) # store 0xe90bf439 in memory
flw f21, 0(x2) # load 0xe90bf439 from memory into f21
fnmadd.s f13, f3, f26, f21 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x9e85d7eb # load x3 with value 0x9e85d7eb
sw x3, 0(x2) # store 0x9e85d7eb in memory
flw f7, 0(x2) # load 0x9e85d7eb from memory into f7
la x2, scratch
li x3, 0xd88f4476 # load x3 with value 0xd88f4476
sw x3, 0(x2) # store 0xd88f4476 in memory
flw f25, 0(x2) # load 0xd88f4476 from memory into f25
la x2, scratch
li x3, 0x84266035 # load x3 with value 0x84266035
sw x3, 0(x2) # store 0x84266035 in memory
flw f13, 0(x2) # load 0x84266035 from memory into f13
fnmadd.s f14, f7, f25, f13 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0x6fc0ce50 # load x3 with value 0x6fc0ce50
sw x3, 0(x2) # store 0x6fc0ce50 in memory
flw f6, 0(x2) # load 0x6fc0ce50 from memory into f6
la x2, scratch
li x3, 0x1ff99c55 # load x3 with value 0x1ff99c55
sw x3, 0(x2) # store 0x1ff99c55 in memory
flw f18, 0(x2) # load 0x1ff99c55 from memory into f18
la x2, scratch
li x3, 0x2156da97 # load x3 with value 0x2156da97
sw x3, 0(x2) # store 0x2156da97 in memory
flw f22, 0(x2) # load 0x2156da97 from memory into f22
fnmadd.s f15, f6, f18, f22 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x358205df # load x3 with value 0x358205df
sw x3, 0(x2) # store 0x358205df in memory
flw f21, 0(x2) # load 0x358205df from memory into f21
la x2, scratch
li x3, 0xc5ee70be # load x3 with value 0xc5ee70be
sw x3, 0(x2) # store 0xc5ee70be in memory
flw f16, 0(x2) # load 0xc5ee70be from memory into f16
la x2, scratch
li x3, 0xfe1ad2e7 # load x3 with value 0xfe1ad2e7
sw x3, 0(x2) # store 0xfe1ad2e7 in memory
flw f11, 0(x2) # load 0xfe1ad2e7 from memory into f11
fnmadd.s f16, f21, f16, f11 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0x71a0fe79 # load x3 with value 0x71a0fe79
sw x3, 0(x2) # store 0x71a0fe79 in memory
flw f1, 0(x2) # load 0x71a0fe79 from memory into f1
la x2, scratch
li x3, 0xa710a5f4 # load x3 with value 0xa710a5f4
sw x3, 0(x2) # store 0xa710a5f4 in memory
flw f22, 0(x2) # load 0xa710a5f4 from memory into f22
la x2, scratch
li x3, 0x53f0ff44 # load x3 with value 0x53f0ff44
sw x3, 0(x2) # store 0x53f0ff44 in memory
flw f8, 0(x2) # load 0x53f0ff44 from memory into f8
fnmadd.s f17, f1, f22, f8 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x5887f4d1 # load x3 with value 0x5887f4d1
sw x3, 0(x2) # store 0x5887f4d1 in memory
flw f24, 0(x2) # load 0x5887f4d1 from memory into f24
la x2, scratch
li x3, 0xfdb434b3 # load x3 with value 0xfdb434b3
sw x3, 0(x2) # store 0xfdb434b3 in memory
flw f16, 0(x2) # load 0xfdb434b3 from memory into f16
la x2, scratch
li x3, 0x2def00e6 # load x3 with value 0x2def00e6
sw x3, 0(x2) # store 0x2def00e6 in memory
flw f19, 0(x2) # load 0x2def00e6 from memory into f19
fnmadd.s f18, f24, f16, f19 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0xe266661f # load x3 with value 0xe266661f
sw x3, 0(x2) # store 0xe266661f in memory
flw f13, 0(x2) # load 0xe266661f from memory into f13
la x2, scratch
li x3, 0xe2ef8731 # load x3 with value 0xe2ef8731
sw x3, 0(x2) # store 0xe2ef8731 in memory
flw f3, 0(x2) # load 0xe2ef8731 from memory into f3
la x2, scratch
li x3, 0x3ba0d77f # load x3 with value 0x3ba0d77f
sw x3, 0(x2) # store 0x3ba0d77f in memory
flw f2, 0(x2) # load 0x3ba0d77f from memory into f2
fnmadd.s f19, f13, f3, f2 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x15ac3e99 # load x3 with value 0x15ac3e99
sw x3, 0(x2) # store 0x15ac3e99 in memory
flw f28, 0(x2) # load 0x15ac3e99 from memory into f28
la x2, scratch
li x3, 0xcf5968b2 # load x3 with value 0xcf5968b2
sw x3, 0(x2) # store 0xcf5968b2 in memory
flw f12, 0(x2) # load 0xcf5968b2 from memory into f12
la x2, scratch
li x3, 0x464509f6 # load x3 with value 0x464509f6
sw x3, 0(x2) # store 0x464509f6 in memory
flw f27, 0(x2) # load 0x464509f6 from memory into f27
fnmadd.s f20, f28, f12, f27 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0x2c89dee2 # load x3 with value 0x2c89dee2
sw x3, 0(x2) # store 0x2c89dee2 in memory
flw f23, 0(x2) # load 0x2c89dee2 from memory into f23
la x2, scratch
li x3, 0x5efe8173 # load x3 with value 0x5efe8173
sw x3, 0(x2) # store 0x5efe8173 in memory
flw f22, 0(x2) # load 0x5efe8173 from memory into f22
la x2, scratch
li x3, 0x1e6edaaf # load x3 with value 0x1e6edaaf
sw x3, 0(x2) # store 0x1e6edaaf in memory
flw f31, 0(x2) # load 0x1e6edaaf from memory into f31
fnmadd.s f21, f23, f22, f31 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x1138b8e3 # load x3 with value 0x1138b8e3
sw x3, 0(x2) # store 0x1138b8e3 in memory
flw f28, 0(x2) # load 0x1138b8e3 from memory into f28
la x2, scratch
li x3, 0xc9a9e900 # load x3 with value 0xc9a9e900
sw x3, 0(x2) # store 0xc9a9e900 in memory
flw f30, 0(x2) # load 0xc9a9e900 from memory into f30
la x2, scratch
li x3, 0xf918e7dc # load x3 with value 0xf918e7dc
sw x3, 0(x2) # store 0xf918e7dc in memory
flw f25, 0(x2) # load 0xf918e7dc from memory into f25
fnmadd.s f22, f28, f30, f25 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x4fb79690 # load x3 with value 0x4fb79690
sw x3, 0(x2) # store 0x4fb79690 in memory
flw f30, 0(x2) # load 0x4fb79690 from memory into f30
la x2, scratch
li x3, 0x0fedc40c # load x3 with value 0x0fedc40c
sw x3, 0(x2) # store 0x0fedc40c in memory
flw f1, 0(x2) # load 0x0fedc40c from memory into f1
la x2, scratch
li x3, 0xaecab061 # load x3 with value 0xaecab061
sw x3, 0(x2) # store 0xaecab061 in memory
flw f10, 0(x2) # load 0xaecab061 from memory into f10
fnmadd.s f23, f30, f1, f10 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x486daada # load x3 with value 0x486daada
sw x3, 0(x2) # store 0x486daada in memory
flw f14, 0(x2) # load 0x486daada from memory into f14
la x2, scratch
li x3, 0x851333ca # load x3 with value 0x851333ca
sw x3, 0(x2) # store 0x851333ca in memory
flw f23, 0(x2) # load 0x851333ca from memory into f23
la x2, scratch
li x3, 0xe3d8c12d # load x3 with value 0xe3d8c12d
sw x3, 0(x2) # store 0xe3d8c12d in memory
flw f19, 0(x2) # load 0xe3d8c12d from memory into f19
fnmadd.s f24, f14, f23, f19 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0x13663435 # load x3 with value 0x13663435
sw x3, 0(x2) # store 0x13663435 in memory
flw f14, 0(x2) # load 0x13663435 from memory into f14
la x2, scratch
li x3, 0xc1910704 # load x3 with value 0xc1910704
sw x3, 0(x2) # store 0xc1910704 in memory
flw f26, 0(x2) # load 0xc1910704 from memory into f26
la x2, scratch
li x3, 0xcb90e5fb # load x3 with value 0xcb90e5fb
sw x3, 0(x2) # store 0xcb90e5fb in memory
flw f10, 0(x2) # load 0xcb90e5fb from memory into f10
fnmadd.s f25, f14, f26, f10 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0xa719692e # load x3 with value 0xa719692e
sw x3, 0(x2) # store 0xa719692e in memory
flw f7, 0(x2) # load 0xa719692e from memory into f7
la x2, scratch
li x3, 0xe08d5412 # load x3 with value 0xe08d5412
sw x3, 0(x2) # store 0xe08d5412 in memory
flw f31, 0(x2) # load 0xe08d5412 from memory into f31
la x2, scratch
li x3, 0x9a91a1cc # load x3 with value 0x9a91a1cc
sw x3, 0(x2) # store 0x9a91a1cc in memory
flw f1, 0(x2) # load 0x9a91a1cc from memory into f1
fnmadd.s f26, f7, f31, f1 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0xe38066ba # load x3 with value 0xe38066ba
sw x3, 0(x2) # store 0xe38066ba in memory
flw f7, 0(x2) # load 0xe38066ba from memory into f7
la x2, scratch
li x3, 0xab104e37 # load x3 with value 0xab104e37
sw x3, 0(x2) # store 0xab104e37 in memory
flw f25, 0(x2) # load 0xab104e37 from memory into f25
la x2, scratch
li x3, 0xc9db6841 # load x3 with value 0xc9db6841
sw x3, 0(x2) # store 0xc9db6841 in memory
flw f5, 0(x2) # load 0xc9db6841 from memory into f5
fnmadd.s f27, f7, f25, f5 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x24ebfd5d # load x3 with value 0x24ebfd5d
sw x3, 0(x2) # store 0x24ebfd5d in memory
flw f17, 0(x2) # load 0x24ebfd5d from memory into f17
la x2, scratch
li x3, 0xe39e2bd3 # load x3 with value 0xe39e2bd3
sw x3, 0(x2) # store 0xe39e2bd3 in memory
flw f25, 0(x2) # load 0xe39e2bd3 from memory into f25
la x2, scratch
li x3, 0xfb990693 # load x3 with value 0xfb990693
sw x3, 0(x2) # store 0xfb990693 in memory
flw f19, 0(x2) # load 0xfb990693 from memory into f19
fnmadd.s f28, f17, f25, f19 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0x8b019717 # load x3 with value 0x8b019717
sw x3, 0(x2) # store 0x8b019717 in memory
flw f7, 0(x2) # load 0x8b019717 from memory into f7
la x2, scratch
li x3, 0x578cac48 # load x3 with value 0x578cac48
sw x3, 0(x2) # store 0x578cac48 in memory
flw f28, 0(x2) # load 0x578cac48 from memory into f28
la x2, scratch
li x3, 0x1a05bbc4 # load x3 with value 0x1a05bbc4
sw x3, 0(x2) # store 0x1a05bbc4 in memory
flw f25, 0(x2) # load 0x1a05bbc4 from memory into f25
fnmadd.s f29, f7, f28, f25 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0xa9a10e89 # load x3 with value 0xa9a10e89
sw x3, 0(x2) # store 0xa9a10e89 in memory
flw f21, 0(x2) # load 0xa9a10e89 from memory into f21
la x2, scratch
li x3, 0x34f4353f # load x3 with value 0x34f4353f
sw x3, 0(x2) # store 0x34f4353f in memory
flw f23, 0(x2) # load 0x34f4353f from memory into f23
la x2, scratch
li x3, 0x3b3b088d # load x3 with value 0x3b3b088d
sw x3, 0(x2) # store 0x3b3b088d in memory
flw f13, 0(x2) # load 0x3b3b088d from memory into f13
fnmadd.s f30, f21, f23, f13 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x86bd8efa # load x3 with value 0x86bd8efa
sw x3, 0(x2) # store 0x86bd8efa in memory
flw f27, 0(x2) # load 0x86bd8efa from memory into f27
la x2, scratch
li x3, 0xc9846d7a # load x3 with value 0xc9846d7a
sw x3, 0(x2) # store 0xc9846d7a in memory
flw f25, 0(x2) # load 0xc9846d7a from memory into f25
la x2, scratch
li x3, 0xa54cc547 # load x3 with value 0xa54cc547
sw x3, 0(x2) # store 0xa54cc547 in memory
flw f10, 0(x2) # load 0xa54cc547 from memory into f10
fnmadd.s f31, f27, f25, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x9d52c484 # load x3 with value 0x9d52c484
sw x3, 0(x2) # store 0x9d52c484 in memory
flw f11, 0(x2) # load 0x9d52c484 from memory into f11
la x2, scratch
li x3, 0x83d89793 # load x3 with value 0x83d89793
sw x3, 0(x2) # store 0x83d89793 in memory
flw f2, 0(x2) # load 0x83d89793 from memory into f2
fnmadd.s f12, f27, f11, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xc742b3fd # load x3 with value 0xc742b3fd
sw x3, 0(x2) # store 0xc742b3fd in memory
flw f16, 0(x2) # load 0xc742b3fd from memory into f16
la x2, scratch
li x3, 0xe9b39bde # load x3 with value 0xe9b39bde
sw x3, 0(x2) # store 0xe9b39bde in memory
flw f30, 0(x2) # load 0xe9b39bde from memory into f30
fnmadd.s f13, f22, f16, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x1980bb93 # load x3 with value 0x1980bb93
sw x3, 0(x2) # store 0x1980bb93 in memory
flw f23, 0(x2) # load 0x1980bb93 from memory into f23
la x2, scratch
li x3, 0x9e8dd83c # load x3 with value 0x9e8dd83c
sw x3, 0(x2) # store 0x9e8dd83c in memory
flw f15, 0(x2) # load 0x9e8dd83c from memory into f15
fnmadd.s f16, f1, f23, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x6b35b84d # load x3 with value 0x6b35b84d
sw x3, 0(x2) # store 0x6b35b84d in memory
flw f24, 0(x2) # load 0x6b35b84d from memory into f24
la x2, scratch
li x3, 0x538740e8 # load x3 with value 0x538740e8
sw x3, 0(x2) # store 0x538740e8 in memory
flw f9, 0(x2) # load 0x538740e8 from memory into f9
fnmadd.s f27, f12, f24, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x8368ccb2 # load x3 with value 0x8368ccb2
sw x3, 0(x2) # store 0x8368ccb2 in memory
flw f1, 0(x2) # load 0x8368ccb2 from memory into f1
la x2, scratch
li x3, 0xa684d189 # load x3 with value 0xa684d189
sw x3, 0(x2) # store 0xa684d189 in memory
flw f21, 0(x2) # load 0xa684d189 from memory into f21
fnmadd.s f16, f6, f1, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xe790f893 # load x3 with value 0xe790f893
sw x3, 0(x2) # store 0xe790f893 in memory
flw f7, 0(x2) # load 0xe790f893 from memory into f7
la x2, scratch
li x3, 0x0e1e1d90 # load x3 with value 0x0e1e1d90
sw x3, 0(x2) # store 0x0e1e1d90 in memory
flw f1, 0(x2) # load 0x0e1e1d90 from memory into f1
fnmadd.s f19, f24, f7, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xaa2e32bf # load x3 with value 0xaa2e32bf
sw x3, 0(x2) # store 0xaa2e32bf in memory
flw f16, 0(x2) # load 0xaa2e32bf from memory into f16
la x2, scratch
li x3, 0xa5fb63d1 # load x3 with value 0xa5fb63d1
sw x3, 0(x2) # store 0xa5fb63d1 in memory
flw f10, 0(x2) # load 0xa5fb63d1 from memory into f10
fnmadd.s f1, f14, f16, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xb6d586ed # load x3 with value 0xb6d586ed
sw x3, 0(x2) # store 0xb6d586ed in memory
flw f16, 0(x2) # load 0xb6d586ed from memory into f16
la x2, scratch
li x3, 0x45209b7a # load x3 with value 0x45209b7a
sw x3, 0(x2) # store 0x45209b7a in memory
flw f11, 0(x2) # load 0x45209b7a from memory into f11
fnmadd.s f1, f23, f16, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xf0eeb2e1 # load x3 with value 0xf0eeb2e1
sw x3, 0(x2) # store 0xf0eeb2e1 in memory
flw f26, 0(x2) # load 0xf0eeb2e1 from memory into f26
la x2, scratch
li x3, 0xd072d03b # load x3 with value 0xd072d03b
sw x3, 0(x2) # store 0xd072d03b in memory
flw f15, 0(x2) # load 0xd072d03b from memory into f15
fnmadd.s f31, f27, f26, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0xe13b3676 # load x3 with value 0xe13b3676
sw x3, 0(x2) # store 0xe13b3676 in memory
flw f8, 0(x2) # load 0xe13b3676 from memory into f8
la x2, scratch
li x3, 0xc367928d # load x3 with value 0xc367928d
sw x3, 0(x2) # store 0xc367928d in memory
flw f11, 0(x2) # load 0xc367928d from memory into f11
fnmadd.s f20, f18, f8, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x93828a81 # load x3 with value 0x93828a81
sw x3, 0(x2) # store 0x93828a81 in memory
flw f25, 0(x2) # load 0x93828a81 from memory into f25
la x2, scratch
li x3, 0xd971fc58 # load x3 with value 0xd971fc58
sw x3, 0(x2) # store 0xd971fc58 in memory
flw f28, 0(x2) # load 0xd971fc58 from memory into f28
fnmadd.s f26, f11, f25, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xd8296398 # load x3 with value 0xd8296398
sw x3, 0(x2) # store 0xd8296398 in memory
flw f17, 0(x2) # load 0xd8296398 from memory into f17
la x2, scratch
li x3, 0x97cc4ec8 # load x3 with value 0x97cc4ec8
sw x3, 0(x2) # store 0x97cc4ec8 in memory
flw f16, 0(x2) # load 0x97cc4ec8 from memory into f16
fnmadd.s f31, f14, f17, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0xb1e92443 # load x3 with value 0xb1e92443
sw x3, 0(x2) # store 0xb1e92443 in memory
flw f26, 0(x2) # load 0xb1e92443 from memory into f26
la x2, scratch
li x3, 0xf0cbbc70 # load x3 with value 0xf0cbbc70
sw x3, 0(x2) # store 0xf0cbbc70 in memory
flw f22, 0(x2) # load 0xf0cbbc70 from memory into f22
fnmadd.s f30, f21, f26, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x1595d4e2 # load x3 with value 0x1595d4e2
sw x3, 0(x2) # store 0x1595d4e2 in memory
flw f9, 0(x2) # load 0x1595d4e2 from memory into f9
la x2, scratch
li x3, 0x92ffde37 # load x3 with value 0x92ffde37
sw x3, 0(x2) # store 0x92ffde37 in memory
flw f2, 0(x2) # load 0x92ffde37 from memory into f2
fnmadd.s f25, f11, f9, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x75af4c95 # load x3 with value 0x75af4c95
sw x3, 0(x2) # store 0x75af4c95 in memory
flw f28, 0(x2) # load 0x75af4c95 from memory into f28
la x2, scratch
li x3, 0xd8ad5fbb # load x3 with value 0xd8ad5fbb
sw x3, 0(x2) # store 0xd8ad5fbb in memory
flw f16, 0(x2) # load 0xd8ad5fbb from memory into f16
fnmadd.s f15, f2, f28, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xceef179f # load x3 with value 0xceef179f
sw x3, 0(x2) # store 0xceef179f in memory
flw f20, 0(x2) # load 0xceef179f from memory into f20
la x2, scratch
li x3, 0x5586a968 # load x3 with value 0x5586a968
sw x3, 0(x2) # store 0x5586a968 in memory
flw f8, 0(x2) # load 0x5586a968 from memory into f8
fnmadd.s f19, f6, f20, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x235f268f # load x3 with value 0x235f268f
sw x3, 0(x2) # store 0x235f268f in memory
flw f10, 0(x2) # load 0x235f268f from memory into f10
la x2, scratch
li x3, 0x75d7249d # load x3 with value 0x75d7249d
sw x3, 0(x2) # store 0x75d7249d in memory
flw f25, 0(x2) # load 0x75d7249d from memory into f25
fnmadd.s f14, f12, f10, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xc352660d # load x3 with value 0xc352660d
sw x3, 0(x2) # store 0xc352660d in memory
flw f8, 0(x2) # load 0xc352660d from memory into f8
la x2, scratch
li x3, 0x9d8aa625 # load x3 with value 0x9d8aa625
sw x3, 0(x2) # store 0x9d8aa625 in memory
flw f23, 0(x2) # load 0x9d8aa625 from memory into f23
fnmadd.s f25, f11, f8, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x11906fee # load x3 with value 0x11906fee
sw x3, 0(x2) # store 0x11906fee in memory
flw f11, 0(x2) # load 0x11906fee from memory into f11
la x2, scratch
li x3, 0x9039566b # load x3 with value 0x9039566b
sw x3, 0(x2) # store 0x9039566b in memory
flw f13, 0(x2) # load 0x9039566b from memory into f13
fnmadd.s f7, f14, f11, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x65d6daed # load x3 with value 0x65d6daed
sw x3, 0(x2) # store 0x65d6daed in memory
flw f22, 0(x2) # load 0x65d6daed from memory into f22
la x2, scratch
li x3, 0xb9981a18 # load x3 with value 0xb9981a18
sw x3, 0(x2) # store 0xb9981a18 in memory
flw f12, 0(x2) # load 0xb9981a18 from memory into f12
fnmadd.s f14, f31, f22, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x534e6385 # load x3 with value 0x534e6385
sw x3, 0(x2) # store 0x534e6385 in memory
flw f2, 0(x2) # load 0x534e6385 from memory into f2
la x2, scratch
li x3, 0xe23ee568 # load x3 with value 0xe23ee568
sw x3, 0(x2) # store 0xe23ee568 in memory
flw f16, 0(x2) # load 0xe23ee568 from memory into f16
fnmadd.s f28, f31, f2, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x5db03d90 # load x3 with value 0x5db03d90
sw x3, 0(x2) # store 0x5db03d90 in memory
flw f1, 0(x2) # load 0x5db03d90 from memory into f1
la x2, scratch
li x3, 0x5fa5c886 # load x3 with value 0x5fa5c886
sw x3, 0(x2) # store 0x5fa5c886 in memory
flw f2, 0(x2) # load 0x5fa5c886 from memory into f2
fnmadd.s f7, f19, f1, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x3df39a5c # load x3 with value 0x3df39a5c
sw x3, 0(x2) # store 0x3df39a5c in memory
flw f28, 0(x2) # load 0x3df39a5c from memory into f28
la x2, scratch
li x3, 0xc6dcf5d0 # load x3 with value 0xc6dcf5d0
sw x3, 0(x2) # store 0xc6dcf5d0 in memory
flw f7, 0(x2) # load 0xc6dcf5d0 from memory into f7
fnmadd.s f24, f1, f28, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xc09bb5f6 # load x3 with value 0xc09bb5f6
sw x3, 0(x2) # store 0xc09bb5f6 in memory
flw f23, 0(x2) # load 0xc09bb5f6 from memory into f23
la x2, scratch
li x3, 0xe819560b # load x3 with value 0xe819560b
sw x3, 0(x2) # store 0xe819560b in memory
flw f21, 0(x2) # load 0xe819560b from memory into f21
fnmadd.s f30, f27, f23, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x9d591e6f # load x3 with value 0x9d591e6f
sw x3, 0(x2) # store 0x9d591e6f in memory
flw f6, 0(x2) # load 0x9d591e6f from memory into f6
la x2, scratch
li x3, 0x867269d8 # load x3 with value 0x867269d8
sw x3, 0(x2) # store 0x867269d8 in memory
flw f29, 0(x2) # load 0x867269d8 from memory into f29
fnmadd.s f14, f2, f6, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x2a0ae512 # load x3 with value 0x2a0ae512
sw x3, 0(x2) # store 0x2a0ae512 in memory
flw f30, 0(x2) # load 0x2a0ae512 from memory into f30
la x2, scratch
li x3, 0x38fd5ae5 # load x3 with value 0x38fd5ae5
sw x3, 0(x2) # store 0x38fd5ae5 in memory
flw f9, 0(x2) # load 0x38fd5ae5 from memory into f9
fnmadd.s f26, f11, f30, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x2d26ada7 # load x3 with value 0x2d26ada7
sw x3, 0(x2) # store 0x2d26ada7 in memory
flw f15, 0(x2) # load 0x2d26ada7 from memory into f15
la x2, scratch
li x3, 0xef741b00 # load x3 with value 0xef741b00
sw x3, 0(x2) # store 0xef741b00 in memory
flw f1, 0(x2) # load 0xef741b00 from memory into f1
fnmadd.s f13, f6, f15, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xa06442d8 # load x3 with value 0xa06442d8
sw x3, 0(x2) # store 0xa06442d8 in memory
flw f24, 0(x2) # load 0xa06442d8 from memory into f24
la x2, scratch
li x3, 0xf686852d # load x3 with value 0xf686852d
sw x3, 0(x2) # store 0xf686852d in memory
flw f16, 0(x2) # load 0xf686852d from memory into f16
fnmadd.s f27, f19, f24, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x1b666cbc # load x3 with value 0x1b666cbc
sw x3, 0(x2) # store 0x1b666cbc in memory
flw f25, 0(x2) # load 0x1b666cbc from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xb29a5afe # load x3 with value 0xb29a5afe
sw x3, 0(x2) # store 0xb29a5afe in memory
flw f6, 0(x2) # load 0xb29a5afe from memory into f6
fnmadd.s f23, f25, f7, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x8e79b182 # load x3 with value 0x8e79b182
sw x3, 0(x2) # store 0x8e79b182 in memory
flw f3, 0(x2) # load 0x8e79b182 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xf1f95358 # load x3 with value 0xf1f95358
sw x3, 0(x2) # store 0xf1f95358 in memory
flw f23, 0(x2) # load 0xf1f95358 from memory into f23
fnmadd.s f2, f3, f18, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0x0d6951f2 # load x3 with value 0x0d6951f2
sw x3, 0(x2) # store 0x0d6951f2 in memory
flw f29, 0(x2) # load 0x0d6951f2 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0xc60551ea # load x3 with value 0xc60551ea
sw x3, 0(x2) # store 0xc60551ea in memory
flw f17, 0(x2) # load 0xc60551ea from memory into f17
fnmadd.s f5, f29, f16, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0xa084404e # load x3 with value 0xa084404e
sw x3, 0(x2) # store 0xa084404e in memory
flw f27, 0(x2) # load 0xa084404e from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x00dce6c8 # load x3 with value 0x00dce6c8
sw x3, 0(x2) # store 0x00dce6c8 in memory
flw f3, 0(x2) # load 0x00dce6c8 from memory into f3
fnmadd.s f10, f27, f26, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0xb3fb1a14 # load x3 with value 0xb3fb1a14
sw x3, 0(x2) # store 0xb3fb1a14 in memory
flw f18, 0(x2) # load 0xb3fb1a14 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x90630300 # load x3 with value 0x90630300
sw x3, 0(x2) # store 0x90630300 in memory
flw f11, 0(x2) # load 0x90630300 from memory into f11
fnmadd.s f12, f18, f21, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0x2757f07c # load x3 with value 0x2757f07c
sw x3, 0(x2) # store 0x2757f07c in memory
flw f15, 0(x2) # load 0x2757f07c from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x784c4684 # load x3 with value 0x784c4684
sw x3, 0(x2) # store 0x784c4684 in memory
flw f17, 0(x2) # load 0x784c4684 from memory into f17
fnmadd.s f26, f15, f30, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0xca0d1005 # load x3 with value 0xca0d1005
sw x3, 0(x2) # store 0xca0d1005 in memory
flw f28, 0(x2) # load 0xca0d1005 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x4ee05789 # load x3 with value 0x4ee05789
sw x3, 0(x2) # store 0x4ee05789 in memory
flw f18, 0(x2) # load 0x4ee05789 from memory into f18
fnmadd.s f22, f28, f3, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0x3efa5bf6 # load x3 with value 0x3efa5bf6
sw x3, 0(x2) # store 0x3efa5bf6 in memory
flw f9, 0(x2) # load 0x3efa5bf6 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0x33659232 # load x3 with value 0x33659232
sw x3, 0(x2) # store 0x33659232 in memory
flw f28, 0(x2) # load 0x33659232 from memory into f28
fnmadd.s f18, f9, f6, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0x7a999b05 # load x3 with value 0x7a999b05
sw x3, 0(x2) # store 0x7a999b05 in memory
flw f28, 0(x2) # load 0x7a999b05 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xe4b30b07 # load x3 with value 0xe4b30b07
sw x3, 0(x2) # store 0xe4b30b07 in memory
flw f22, 0(x2) # load 0xe4b30b07 from memory into f22
fnmadd.s f5, f28, f3, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0x67498416 # load x3 with value 0x67498416
sw x3, 0(x2) # store 0x67498416 in memory
flw f23, 0(x2) # load 0x67498416 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x02daf5a9 # load x3 with value 0x02daf5a9
sw x3, 0(x2) # store 0x02daf5a9 in memory
flw f13, 0(x2) # load 0x02daf5a9 from memory into f13
fnmadd.s f25, f23, f31, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0x421c1308 # load x3 with value 0x421c1308
sw x3, 0(x2) # store 0x421c1308 in memory
flw f31, 0(x2) # load 0x421c1308 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xce17deb6 # load x3 with value 0xce17deb6
sw x3, 0(x2) # store 0xce17deb6 in memory
flw f19, 0(x2) # load 0xce17deb6 from memory into f19
fnmadd.s f3, f31, f14, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0x9fde469f # load x3 with value 0x9fde469f
sw x3, 0(x2) # store 0x9fde469f in memory
flw f29, 0(x2) # load 0x9fde469f from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xbd649779 # load x3 with value 0xbd649779
sw x3, 0(x2) # store 0xbd649779 in memory
flw f26, 0(x2) # load 0xbd649779 from memory into f26
fnmadd.s f3, f29, f22, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0x7a6d2264 # load x3 with value 0x7a6d2264
sw x3, 0(x2) # store 0x7a6d2264 in memory
flw f14, 0(x2) # load 0x7a6d2264 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xd836dad9 # load x3 with value 0xd836dad9
sw x3, 0(x2) # store 0xd836dad9 in memory
flw f17, 0(x2) # load 0xd836dad9 from memory into f17
fnmadd.s f8, f14, f23, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0x567fd172 # load x3 with value 0x567fd172
sw x3, 0(x2) # store 0x567fd172 in memory
flw f7, 0(x2) # load 0x567fd172 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x760d6278 # load x3 with value 0x760d6278
sw x3, 0(x2) # store 0x760d6278 in memory
flw f14, 0(x2) # load 0x760d6278 from memory into f14
fnmadd.s f23, f7, f21, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0x9895c847 # load x3 with value 0x9895c847
sw x3, 0(x2) # store 0x9895c847 in memory
flw f22, 0(x2) # load 0x9895c847 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x8bcd0e05 # load x3 with value 0x8bcd0e05
sw x3, 0(x2) # store 0x8bcd0e05 in memory
flw f3, 0(x2) # load 0x8bcd0e05 from memory into f3
fnmadd.s f8, f22, f9, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x928c2b69 # load x3 with value 0x928c2b69
sw x3, 0(x2) # store 0x928c2b69 in memory
flw f30, 0(x2) # load 0x928c2b69 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xe5f88fb4 # load x3 with value 0xe5f88fb4
sw x3, 0(x2) # store 0xe5f88fb4 in memory
flw f22, 0(x2) # load 0xe5f88fb4 from memory into f22
fnmadd.s f24, f30, f26, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x921b9ac0 # load x3 with value 0x921b9ac0
sw x3, 0(x2) # store 0x921b9ac0 in memory
flw f16, 0(x2) # load 0x921b9ac0 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x354fa9c6 # load x3 with value 0x354fa9c6
sw x3, 0(x2) # store 0x354fa9c6 in memory
flw f14, 0(x2) # load 0x354fa9c6 from memory into f14
fnmadd.s f27, f16, f24, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0xc97f4e26 # load x3 with value 0xc97f4e26
sw x3, 0(x2) # store 0xc97f4e26 in memory
flw f26, 0(x2) # load 0xc97f4e26 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x6fb4daf5 # load x3 with value 0x6fb4daf5
sw x3, 0(x2) # store 0x6fb4daf5 in memory
flw f2, 0(x2) # load 0x6fb4daf5 from memory into f2
fnmadd.s f31, f26, f28, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0x79bf0ffb # load x3 with value 0x79bf0ffb
sw x3, 0(x2) # store 0x79bf0ffb in memory
flw f30, 0(x2) # load 0x79bf0ffb from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x99ff53c4 # load x3 with value 0x99ff53c4
sw x3, 0(x2) # store 0x99ff53c4 in memory
flw f7, 0(x2) # load 0x99ff53c4 from memory into f7
fnmadd.s f11, f30, f2, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xa066bf08 # load x3 with value 0xa066bf08
sw x3, 0(x2) # store 0xa066bf08 in memory
flw f17, 0(x2) # load 0xa066bf08 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x82cadec5 # load x3 with value 0x82cadec5
sw x3, 0(x2) # store 0x82cadec5 in memory
flw f7, 0(x2) # load 0x82cadec5 from memory into f7
fnmadd.s f25, f17, f22, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0x497f6e44 # load x3 with value 0x497f6e44
sw x3, 0(x2) # store 0x497f6e44 in memory
flw f15, 0(x2) # load 0x497f6e44 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x669ddf6f # load x3 with value 0x669ddf6f
sw x3, 0(x2) # store 0x669ddf6f in memory
flw f8, 0(x2) # load 0x669ddf6f from memory into f8
fnmadd.s f21, f15, f16, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0x0802080d # load x3 with value 0x0802080d
sw x3, 0(x2) # store 0x0802080d in memory
flw f24, 0(x2) # load 0x0802080d from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x8f88454d # load x3 with value 0x8f88454d
sw x3, 0(x2) # store 0x8f88454d in memory
flw f2, 0(x2) # load 0x8f88454d from memory into f2
fnmadd.s f31, f24, f29, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0xa332ec4e # load x3 with value 0xa332ec4e
sw x3, 0(x2) # store 0xa332ec4e in memory
flw f22, 0(x2) # load 0xa332ec4e from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x198d6f8c # load x3 with value 0x198d6f8c
sw x3, 0(x2) # store 0x198d6f8c in memory
flw f31, 0(x2) # load 0x198d6f8c from memory into f31
fnmadd.s f23, f22, f27, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0xa5b431e1 # load x3 with value 0xa5b431e1
sw x3, 0(x2) # store 0xa5b431e1 in memory
flw f24, 0(x2) # load 0xa5b431e1 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0xdf2c07a4 # load x3 with value 0xdf2c07a4
sw x3, 0(x2) # store 0xdf2c07a4 in memory
flw f23, 0(x2) # load 0xdf2c07a4 from memory into f23
fnmadd.s f18, f24, f7, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0x9682a30c # load x3 with value 0x9682a30c
sw x3, 0(x2) # store 0x9682a30c in memory
flw f12, 0(x2) # load 0x9682a30c from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xb33b071d # load x3 with value 0xb33b071d
sw x3, 0(x2) # store 0xb33b071d in memory
flw f14, 0(x2) # load 0xb33b071d from memory into f14
fnmadd.s f13, f12, f21, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0x53782509 # load x3 with value 0x53782509
sw x3, 0(x2) # store 0x53782509 in memory
flw f10, 0(x2) # load 0x53782509 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x85a2195b # load x3 with value 0x85a2195b
sw x3, 0(x2) # store 0x85a2195b in memory
flw f28, 0(x2) # load 0x85a2195b from memory into f28
fnmadd.s f27, f10, f6, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0xef834c0c # load x3 with value 0xef834c0c
sw x3, 0(x2) # store 0xef834c0c in memory
flw f5, 0(x2) # load 0xef834c0c from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xe8ea9bb1 # load x3 with value 0xe8ea9bb1
sw x3, 0(x2) # store 0xe8ea9bb1 in memory
flw f20, 0(x2) # load 0xe8ea9bb1 from memory into f20
fnmadd.s f2, f5, f16, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0xae50b680 # load x3 with value 0xae50b680
sw x3, 0(x2) # store 0xae50b680 in memory
flw f24, 0(x2) # load 0xae50b680 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0xd9090a4d # load x3 with value 0xd9090a4d
sw x3, 0(x2) # store 0xd9090a4d in memory
flw f5, 0(x2) # load 0xd9090a4d from memory into f5
fnmadd.s f25, f24, f10, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0xe3b1af42 # load x3 with value 0xe3b1af42
sw x3, 0(x2) # store 0xe3b1af42 in memory
flw f3, 0(x2) # load 0xe3b1af42 from memory into f3
la x2, scratch
li x3, 0x70e4f528 # load x3 with value 0x70e4f528
sw x3, 0(x2) # store 0x70e4f528 in memory
flw f30, 0(x2) # load 0x70e4f528 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.s f21, f3, f30, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0x4a1651f9 # load x3 with value 0x4a1651f9
sw x3, 0(x2) # store 0x4a1651f9 in memory
flw f3, 0(x2) # load 0x4a1651f9 from memory into f3
la x2, scratch
li x3, 0x915051bb # load x3 with value 0x915051bb
sw x3, 0(x2) # store 0x915051bb in memory
flw f15, 0(x2) # load 0x915051bb from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fnmadd.s f27, f3, f15, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x76dd6c2f # load x3 with value 0x76dd6c2f
sw x3, 0(x2) # store 0x76dd6c2f in memory
flw f23, 0(x2) # load 0x76dd6c2f from memory into f23
la x2, scratch
li x3, 0xd23f17d3 # load x3 with value 0xd23f17d3
sw x3, 0(x2) # store 0xd23f17d3 in memory
flw f10, 0(x2) # load 0xd23f17d3 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f30, f23, f10, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x7a6842ec # load x3 with value 0x7a6842ec
sw x3, 0(x2) # store 0x7a6842ec in memory
flw f26, 0(x2) # load 0x7a6842ec from memory into f26
la x2, scratch
li x3, 0x58a22c51 # load x3 with value 0x58a22c51
sw x3, 0(x2) # store 0x58a22c51 in memory
flw f8, 0(x2) # load 0x58a22c51 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmadd.s f16, f26, f8, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0x4702bfb9 # load x3 with value 0x4702bfb9
sw x3, 0(x2) # store 0x4702bfb9 in memory
flw f21, 0(x2) # load 0x4702bfb9 from memory into f21
la x2, scratch
li x3, 0x9ecece94 # load x3 with value 0x9ecece94
sw x3, 0(x2) # store 0x9ecece94 in memory
flw f31, 0(x2) # load 0x9ecece94 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmadd.s f16, f21, f31, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0x94531c16 # load x3 with value 0x94531c16
sw x3, 0(x2) # store 0x94531c16 in memory
flw f15, 0(x2) # load 0x94531c16 from memory into f15
la x2, scratch
li x3, 0x6a9a330c # load x3 with value 0x6a9a330c
sw x3, 0(x2) # store 0x6a9a330c in memory
flw f23, 0(x2) # load 0x6a9a330c from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmadd.s f8, f15, f23, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0xd6fb9a7b # load x3 with value 0xd6fb9a7b
sw x3, 0(x2) # store 0xd6fb9a7b in memory
flw f21, 0(x2) # load 0xd6fb9a7b from memory into f21
la x2, scratch
li x3, 0xf8dfe2f7 # load x3 with value 0xf8dfe2f7
sw x3, 0(x2) # store 0xf8dfe2f7 in memory
flw f20, 0(x2) # load 0xf8dfe2f7 from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmadd.s f27, f21, f20, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0xcfa3ef84 # load x3 with value 0xcfa3ef84
sw x3, 0(x2) # store 0xcfa3ef84 in memory
flw f10, 0(x2) # load 0xcfa3ef84 from memory into f10
la x2, scratch
li x3, 0xbd3c5a7c # load x3 with value 0xbd3c5a7c
sw x3, 0(x2) # store 0xbd3c5a7c in memory
flw f25, 0(x2) # load 0xbd3c5a7c from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fnmadd.s f13, f10, f25, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x9894a427 # load x3 with value 0x9894a427
sw x3, 0(x2) # store 0x9894a427 in memory
flw f30, 0(x2) # load 0x9894a427 from memory into f30
la x2, scratch
li x3, 0x12bcdae6 # load x3 with value 0x12bcdae6
sw x3, 0(x2) # store 0x12bcdae6 in memory
flw f31, 0(x2) # load 0x12bcdae6 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f17, f30, f31, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0x08b45241 # load x3 with value 0x08b45241
sw x3, 0(x2) # store 0x08b45241 in memory
flw f1, 0(x2) # load 0x08b45241 from memory into f1
la x2, scratch
li x3, 0x408d78cc # load x3 with value 0x408d78cc
sw x3, 0(x2) # store 0x408d78cc in memory
flw f2, 0(x2) # load 0x408d78cc from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fnmadd.s f23, f1, f2, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x07b8a53c # load x3 with value 0x07b8a53c
sw x3, 0(x2) # store 0x07b8a53c in memory
flw f12, 0(x2) # load 0x07b8a53c from memory into f12
la x2, scratch
li x3, 0x94ffe422 # load x3 with value 0x94ffe422
sw x3, 0(x2) # store 0x94ffe422 in memory
flw f20, 0(x2) # load 0x94ffe422 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f1, f12, f20, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0x06af2fbd # load x3 with value 0x06af2fbd
sw x3, 0(x2) # store 0x06af2fbd in memory
flw f22, 0(x2) # load 0x06af2fbd from memory into f22
la x2, scratch
li x3, 0xb2869131 # load x3 with value 0xb2869131
sw x3, 0(x2) # store 0xb2869131 in memory
flw f25, 0(x2) # load 0xb2869131 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fnmadd.s f27, f22, f25, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xf7dbeb91 # load x3 with value 0xf7dbeb91
sw x3, 0(x2) # store 0xf7dbeb91 in memory
flw f3, 0(x2) # load 0xf7dbeb91 from memory into f3
la x2, scratch
li x3, 0x9d8f7f31 # load x3 with value 0x9d8f7f31
sw x3, 0(x2) # store 0x9d8f7f31 in memory
flw f18, 0(x2) # load 0x9d8f7f31 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fnmadd.s f15, f3, f18, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0x18ac4453 # load x3 with value 0x18ac4453
sw x3, 0(x2) # store 0x18ac4453 in memory
flw f9, 0(x2) # load 0x18ac4453 from memory into f9
la x2, scratch
li x3, 0xa992483b # load x3 with value 0xa992483b
sw x3, 0(x2) # store 0xa992483b in memory
flw f26, 0(x2) # load 0xa992483b from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fnmadd.s f19, f9, f26, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0xa024105b # load x3 with value 0xa024105b
sw x3, 0(x2) # store 0xa024105b in memory
flw f27, 0(x2) # load 0xa024105b from memory into f27
la x2, scratch
li x3, 0x80d4e770 # load x3 with value 0x80d4e770
sw x3, 0(x2) # store 0x80d4e770 in memory
flw f9, 0(x2) # load 0x80d4e770 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fnmadd.s f19, f27, f9, f16 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0x996903d7 # load x3 with value 0x996903d7
sw x3, 0(x2) # store 0x996903d7 in memory
flw f2, 0(x2) # load 0x996903d7 from memory into f2
la x2, scratch
li x3, 0x3e77cd40 # load x3 with value 0x3e77cd40
sw x3, 0(x2) # store 0x3e77cd40 in memory
flw f13, 0(x2) # load 0x3e77cd40 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fnmadd.s f16, f2, f13, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x7af7685c # load x3 with value 0x7af7685c
sw x3, 0(x2) # store 0x7af7685c in memory
flw f6, 0(x2) # load 0x7af7685c from memory into f6
la x2, scratch
li x3, 0x7bb537a7 # load x3 with value 0x7bb537a7
sw x3, 0(x2) # store 0x7bb537a7 in memory
flw f30, 0(x2) # load 0x7bb537a7 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fnmadd.s f15, f6, f30, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0x3c6205a0 # load x3 with value 0x3c6205a0
sw x3, 0(x2) # store 0x3c6205a0 in memory
flw f3, 0(x2) # load 0x3c6205a0 from memory into f3
la x2, scratch
li x3, 0x148dfc2d # load x3 with value 0x148dfc2d
sw x3, 0(x2) # store 0x148dfc2d in memory
flw f1, 0(x2) # load 0x148dfc2d from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f12, f3, f1, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0x97a26690 # load x3 with value 0x97a26690
sw x3, 0(x2) # store 0x97a26690 in memory
flw f20, 0(x2) # load 0x97a26690 from memory into f20
la x2, scratch
li x3, 0xb0589238 # load x3 with value 0xb0589238
sw x3, 0(x2) # store 0xb0589238 in memory
flw f30, 0(x2) # load 0xb0589238 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmadd.s f3, f20, f30, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0xefbdfe02 # load x3 with value 0xefbdfe02
sw x3, 0(x2) # store 0xefbdfe02 in memory
flw f25, 0(x2) # load 0xefbdfe02 from memory into f25
la x2, scratch
li x3, 0x2ea1873e # load x3 with value 0x2ea1873e
sw x3, 0(x2) # store 0x2ea1873e in memory
flw f7, 0(x2) # load 0x2ea1873e from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f23, f25, f7, f17 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0x1d98e9e2 # load x3 with value 0x1d98e9e2
sw x3, 0(x2) # store 0x1d98e9e2 in memory
flw f19, 0(x2) # load 0x1d98e9e2 from memory into f19
la x2, scratch
li x3, 0xe99e1062 # load x3 with value 0xe99e1062
sw x3, 0(x2) # store 0xe99e1062 in memory
flw f26, 0(x2) # load 0xe99e1062 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f27, f19, f26, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x688e3d47 # load x3 with value 0x688e3d47
sw x3, 0(x2) # store 0x688e3d47 in memory
flw f2, 0(x2) # load 0x688e3d47 from memory into f2
la x2, scratch
li x3, 0x8940e562 # load x3 with value 0x8940e562
sw x3, 0(x2) # store 0x8940e562 in memory
flw f20, 0(x2) # load 0x8940e562 from memory into f20
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fnmadd.s f19, f2, f20, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0xd44442dc # load x3 with value 0xd44442dc
sw x3, 0(x2) # store 0xd44442dc in memory
flw f14, 0(x2) # load 0xd44442dc from memory into f14
la x2, scratch
li x3, 0x28cb50a2 # load x3 with value 0x28cb50a2
sw x3, 0(x2) # store 0x28cb50a2 in memory
flw f26, 0(x2) # load 0x28cb50a2 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmadd.s f18, f14, f26, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0xa4212c3e # load x3 with value 0xa4212c3e
sw x3, 0(x2) # store 0xa4212c3e in memory
flw f1, 0(x2) # load 0xa4212c3e from memory into f1
la x2, scratch
li x3, 0xe1aab684 # load x3 with value 0xe1aab684
sw x3, 0(x2) # store 0xe1aab684 in memory
flw f9, 0(x2) # load 0xe1aab684 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fnmadd.s f3, f1, f9, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x1f45b120 # load x3 with value 0x1f45b120
sw x3, 0(x2) # store 0x1f45b120 in memory
flw f15, 0(x2) # load 0x1f45b120 from memory into f15
la x2, scratch
li x3, 0xf90c6b70 # load x3 with value 0xf90c6b70
sw x3, 0(x2) # store 0xf90c6b70 in memory
flw f9, 0(x2) # load 0xf90c6b70 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmadd.s f11, f15, f9, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0x261c3f87 # load x3 with value 0x261c3f87
sw x3, 0(x2) # store 0x261c3f87 in memory
flw f25, 0(x2) # load 0x261c3f87 from memory into f25
la x2, scratch
li x3, 0x17d47265 # load x3 with value 0x17d47265
sw x3, 0(x2) # store 0x17d47265 in memory
flw f8, 0(x2) # load 0x17d47265 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fnmadd.s f21, f25, f8, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0xac8a791b # load x3 with value 0xac8a791b
sw x3, 0(x2) # store 0xac8a791b in memory
flw f12, 0(x2) # load 0xac8a791b from memory into f12
la x2, scratch
li x3, 0x6b8803ac # load x3 with value 0x6b8803ac
sw x3, 0(x2) # store 0x6b8803ac in memory
flw f30, 0(x2) # load 0x6b8803ac from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f28, f12, f30, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x4364fe22 # load x3 with value 0x4364fe22
sw x3, 0(x2) # store 0x4364fe22 in memory
flw f10, 0(x2) # load 0x4364fe22 from memory into f10
la x2, scratch
li x3, 0x72404c9d # load x3 with value 0x72404c9d
sw x3, 0(x2) # store 0x72404c9d in memory
flw f3, 0(x2) # load 0x72404c9d from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fnmadd.s f25, f10, f3, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0x41169824 # load x3 with value 0x41169824
sw x3, 0(x2) # store 0x41169824 in memory
flw f0, 0(x2) # load 0x41169824 from memory into f0
la x2, scratch
li x3, 0x7f372584 # load x3 with value 0x7f372584
sw x3, 0(x2) # store 0x7f372584 in memory
flw f7, 0(x2) # load 0x7f372584 from memory into f7
la x2, scratch
li x3, 0xf895db53 # load x3 with value 0xf895db53
sw x3, 0(x2) # store 0xf895db53 in memory
flw f17, 0(x2) # load 0xf895db53 from memory into f17
fnmadd.s f0, f0, f7, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x0a177b23 # load x3 with value 0x0a177b23
sw x3, 0(x2) # store 0x0a177b23 in memory
flw f1, 0(x2) # load 0x0a177b23 from memory into f1
la x2, scratch
li x3, 0x1ac42206 # load x3 with value 0x1ac42206
sw x3, 0(x2) # store 0x1ac42206 in memory
flw f26, 0(x2) # load 0x1ac42206 from memory into f26
la x2, scratch
li x3, 0x7606ba63 # load x3 with value 0x7606ba63
sw x3, 0(x2) # store 0x7606ba63 in memory
flw f9, 0(x2) # load 0x7606ba63 from memory into f9
fnmadd.s f1, f1, f26, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xa550a45e # load x3 with value 0xa550a45e
sw x3, 0(x2) # store 0xa550a45e in memory
flw f2, 0(x2) # load 0xa550a45e from memory into f2
la x2, scratch
li x3, 0x307dcfff # load x3 with value 0x307dcfff
sw x3, 0(x2) # store 0x307dcfff in memory
flw f24, 0(x2) # load 0x307dcfff from memory into f24
la x2, scratch
li x3, 0x881f40e7 # load x3 with value 0x881f40e7
sw x3, 0(x2) # store 0x881f40e7 in memory
flw f8, 0(x2) # load 0x881f40e7 from memory into f8
fnmadd.s f2, f2, f24, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x503bd4b9 # load x3 with value 0x503bd4b9
sw x3, 0(x2) # store 0x503bd4b9 in memory
flw f3, 0(x2) # load 0x503bd4b9 from memory into f3
la x2, scratch
li x3, 0xd8c744ec # load x3 with value 0xd8c744ec
sw x3, 0(x2) # store 0xd8c744ec in memory
flw f14, 0(x2) # load 0xd8c744ec from memory into f14
la x2, scratch
li x3, 0x67ac354e # load x3 with value 0x67ac354e
sw x3, 0(x2) # store 0x67ac354e in memory
flw f13, 0(x2) # load 0x67ac354e from memory into f13
fnmadd.s f3, f3, f14, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe1620240 # load x3 with value 0xe1620240
sw x3, 0(x2) # store 0xe1620240 in memory
flw f4, 0(x2) # load 0xe1620240 from memory into f4
la x2, scratch
li x3, 0x163b2393 # load x3 with value 0x163b2393
sw x3, 0(x2) # store 0x163b2393 in memory
flw f26, 0(x2) # load 0x163b2393 from memory into f26
la x2, scratch
li x3, 0x83d0ec61 # load x3 with value 0x83d0ec61
sw x3, 0(x2) # store 0x83d0ec61 in memory
flw f6, 0(x2) # load 0x83d0ec61 from memory into f6
fnmadd.s f4, f4, f26, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1a6afae9 # load x3 with value 0x1a6afae9
sw x3, 0(x2) # store 0x1a6afae9 in memory
flw f5, 0(x2) # load 0x1a6afae9 from memory into f5
la x2, scratch
li x3, 0x83327752 # load x3 with value 0x83327752
sw x3, 0(x2) # store 0x83327752 in memory
flw f23, 0(x2) # load 0x83327752 from memory into f23
la x2, scratch
li x3, 0x90fcddf9 # load x3 with value 0x90fcddf9
sw x3, 0(x2) # store 0x90fcddf9 in memory
flw f30, 0(x2) # load 0x90fcddf9 from memory into f30
fnmadd.s f5, f5, f23, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x1b69b118 # load x3 with value 0x1b69b118
sw x3, 0(x2) # store 0x1b69b118 in memory
flw f6, 0(x2) # load 0x1b69b118 from memory into f6
la x2, scratch
li x3, 0x4f03e05d # load x3 with value 0x4f03e05d
sw x3, 0(x2) # store 0x4f03e05d in memory
flw f16, 0(x2) # load 0x4f03e05d from memory into f16
la x2, scratch
li x3, 0x00d30b24 # load x3 with value 0x00d30b24
sw x3, 0(x2) # store 0x00d30b24 in memory
flw f25, 0(x2) # load 0x00d30b24 from memory into f25
fnmadd.s f6, f6, f16, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x81cf598e # load x3 with value 0x81cf598e
sw x3, 0(x2) # store 0x81cf598e in memory
flw f7, 0(x2) # load 0x81cf598e from memory into f7
la x2, scratch
li x3, 0xed1acf69 # load x3 with value 0xed1acf69
sw x3, 0(x2) # store 0xed1acf69 in memory
flw f18, 0(x2) # load 0xed1acf69 from memory into f18
la x2, scratch
li x3, 0x16ba06b3 # load x3 with value 0x16ba06b3
sw x3, 0(x2) # store 0x16ba06b3 in memory
flw f21, 0(x2) # load 0x16ba06b3 from memory into f21
fnmadd.s f7, f7, f18, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x1b2cef19 # load x3 with value 0x1b2cef19
sw x3, 0(x2) # store 0x1b2cef19 in memory
flw f8, 0(x2) # load 0x1b2cef19 from memory into f8
la x2, scratch
li x3, 0x9dc6a967 # load x3 with value 0x9dc6a967
sw x3, 0(x2) # store 0x9dc6a967 in memory
flw f1, 0(x2) # load 0x9dc6a967 from memory into f1
la x2, scratch
li x3, 0xc591ab25 # load x3 with value 0xc591ab25
sw x3, 0(x2) # store 0xc591ab25 in memory
flw f11, 0(x2) # load 0xc591ab25 from memory into f11
fnmadd.s f8, f8, f1, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0x3b2e2157 # load x3 with value 0x3b2e2157
sw x3, 0(x2) # store 0x3b2e2157 in memory
flw f9, 0(x2) # load 0x3b2e2157 from memory into f9
la x2, scratch
li x3, 0x304a7c0f # load x3 with value 0x304a7c0f
sw x3, 0(x2) # store 0x304a7c0f in memory
flw f1, 0(x2) # load 0x304a7c0f from memory into f1
la x2, scratch
li x3, 0x4b84c65d # load x3 with value 0x4b84c65d
sw x3, 0(x2) # store 0x4b84c65d in memory
flw f13, 0(x2) # load 0x4b84c65d from memory into f13
fnmadd.s f9, f9, f1, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x5bf5c24f # load x3 with value 0x5bf5c24f
sw x3, 0(x2) # store 0x5bf5c24f in memory
flw f10, 0(x2) # load 0x5bf5c24f from memory into f10
la x2, scratch
li x3, 0xff91b10c # load x3 with value 0xff91b10c
sw x3, 0(x2) # store 0xff91b10c in memory
flw f12, 0(x2) # load 0xff91b10c from memory into f12
la x2, scratch
li x3, 0xac1d355e # load x3 with value 0xac1d355e
sw x3, 0(x2) # store 0xac1d355e in memory
flw f28, 0(x2) # load 0xac1d355e from memory into f28
fnmadd.s f10, f10, f12, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0xa1419d38 # load x3 with value 0xa1419d38
sw x3, 0(x2) # store 0xa1419d38 in memory
flw f11, 0(x2) # load 0xa1419d38 from memory into f11
la x2, scratch
li x3, 0xb891e291 # load x3 with value 0xb891e291
sw x3, 0(x2) # store 0xb891e291 in memory
flw f21, 0(x2) # load 0xb891e291 from memory into f21
la x2, scratch
li x3, 0xad9440c8 # load x3 with value 0xad9440c8
sw x3, 0(x2) # store 0xad9440c8 in memory
flw f18, 0(x2) # load 0xad9440c8 from memory into f18
fnmadd.s f11, f11, f21, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0xb41e1075 # load x3 with value 0xb41e1075
sw x3, 0(x2) # store 0xb41e1075 in memory
flw f12, 0(x2) # load 0xb41e1075 from memory into f12
la x2, scratch
li x3, 0x5e4840f6 # load x3 with value 0x5e4840f6
sw x3, 0(x2) # store 0x5e4840f6 in memory
flw f17, 0(x2) # load 0x5e4840f6 from memory into f17
la x2, scratch
li x3, 0x71fa095e # load x3 with value 0x71fa095e
sw x3, 0(x2) # store 0x71fa095e in memory
flw f24, 0(x2) # load 0x71fa095e from memory into f24
fnmadd.s f12, f12, f17, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0xc415371a # load x3 with value 0xc415371a
sw x3, 0(x2) # store 0xc415371a in memory
flw f13, 0(x2) # load 0xc415371a from memory into f13
la x2, scratch
li x3, 0x5b969ca6 # load x3 with value 0x5b969ca6
sw x3, 0(x2) # store 0x5b969ca6 in memory
flw f12, 0(x2) # load 0x5b969ca6 from memory into f12
la x2, scratch
li x3, 0xf98d5e0b # load x3 with value 0xf98d5e0b
sw x3, 0(x2) # store 0xf98d5e0b in memory
flw f22, 0(x2) # load 0xf98d5e0b from memory into f22
fnmadd.s f13, f13, f12, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0xa75e0280 # load x3 with value 0xa75e0280
sw x3, 0(x2) # store 0xa75e0280 in memory
flw f14, 0(x2) # load 0xa75e0280 from memory into f14
la x2, scratch
li x3, 0x75daa2f9 # load x3 with value 0x75daa2f9
sw x3, 0(x2) # store 0x75daa2f9 in memory
flw f30, 0(x2) # load 0x75daa2f9 from memory into f30
la x2, scratch
li x3, 0x13230115 # load x3 with value 0x13230115
sw x3, 0(x2) # store 0x13230115 in memory
flw f3, 0(x2) # load 0x13230115 from memory into f3
fnmadd.s f14, f14, f30, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x871708aa # load x3 with value 0x871708aa
sw x3, 0(x2) # store 0x871708aa in memory
flw f15, 0(x2) # load 0x871708aa from memory into f15
la x2, scratch
li x3, 0x2a521e89 # load x3 with value 0x2a521e89
sw x3, 0(x2) # store 0x2a521e89 in memory
flw f21, 0(x2) # load 0x2a521e89 from memory into f21
la x2, scratch
li x3, 0x762d5e71 # load x3 with value 0x762d5e71
sw x3, 0(x2) # store 0x762d5e71 in memory
flw f23, 0(x2) # load 0x762d5e71 from memory into f23
fnmadd.s f15, f15, f21, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0xf4c549c5 # load x3 with value 0xf4c549c5
sw x3, 0(x2) # store 0xf4c549c5 in memory
flw f16, 0(x2) # load 0xf4c549c5 from memory into f16
la x2, scratch
li x3, 0xaa14aa58 # load x3 with value 0xaa14aa58
sw x3, 0(x2) # store 0xaa14aa58 in memory
flw f3, 0(x2) # load 0xaa14aa58 from memory into f3
la x2, scratch
li x3, 0x7f7ee8df # load x3 with value 0x7f7ee8df
sw x3, 0(x2) # store 0x7f7ee8df in memory
flw f5, 0(x2) # load 0x7f7ee8df from memory into f5
fnmadd.s f16, f16, f3, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x13eb2461 # load x3 with value 0x13eb2461
sw x3, 0(x2) # store 0x13eb2461 in memory
flw f17, 0(x2) # load 0x13eb2461 from memory into f17
la x2, scratch
li x3, 0xc68b915f # load x3 with value 0xc68b915f
sw x3, 0(x2) # store 0xc68b915f in memory
flw f14, 0(x2) # load 0xc68b915f from memory into f14
la x2, scratch
li x3, 0x9a204f98 # load x3 with value 0x9a204f98
sw x3, 0(x2) # store 0x9a204f98 in memory
flw f3, 0(x2) # load 0x9a204f98 from memory into f3
fnmadd.s f17, f17, f14, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x029200f1 # load x3 with value 0x029200f1
sw x3, 0(x2) # store 0x029200f1 in memory
flw f18, 0(x2) # load 0x029200f1 from memory into f18
la x2, scratch
li x3, 0xd33ec0cb # load x3 with value 0xd33ec0cb
sw x3, 0(x2) # store 0xd33ec0cb in memory
flw f23, 0(x2) # load 0xd33ec0cb from memory into f23
la x2, scratch
li x3, 0x53c63a3d # load x3 with value 0x53c63a3d
sw x3, 0(x2) # store 0x53c63a3d in memory
flw f8, 0(x2) # load 0x53c63a3d from memory into f8
fnmadd.s f18, f18, f23, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x30e75300 # load x3 with value 0x30e75300
sw x3, 0(x2) # store 0x30e75300 in memory
flw f19, 0(x2) # load 0x30e75300 from memory into f19
la x2, scratch
li x3, 0x7e2bc919 # load x3 with value 0x7e2bc919
sw x3, 0(x2) # store 0x7e2bc919 in memory
flw f25, 0(x2) # load 0x7e2bc919 from memory into f25
la x2, scratch
li x3, 0x29596349 # load x3 with value 0x29596349
sw x3, 0(x2) # store 0x29596349 in memory
flw f2, 0(x2) # load 0x29596349 from memory into f2
fnmadd.s f19, f19, f25, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x8326c6d7 # load x3 with value 0x8326c6d7
sw x3, 0(x2) # store 0x8326c6d7 in memory
flw f20, 0(x2) # load 0x8326c6d7 from memory into f20
la x2, scratch
li x3, 0xbed9d64b # load x3 with value 0xbed9d64b
sw x3, 0(x2) # store 0xbed9d64b in memory
flw f26, 0(x2) # load 0xbed9d64b from memory into f26
la x2, scratch
li x3, 0x27399ee2 # load x3 with value 0x27399ee2
sw x3, 0(x2) # store 0x27399ee2 in memory
flw f8, 0(x2) # load 0x27399ee2 from memory into f8
fnmadd.s f20, f20, f26, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x2e95196c # load x3 with value 0x2e95196c
sw x3, 0(x2) # store 0x2e95196c in memory
flw f21, 0(x2) # load 0x2e95196c from memory into f21
la x2, scratch
li x3, 0x5a7ee20a # load x3 with value 0x5a7ee20a
sw x3, 0(x2) # store 0x5a7ee20a in memory
flw f7, 0(x2) # load 0x5a7ee20a from memory into f7
la x2, scratch
li x3, 0x5d73b31b # load x3 with value 0x5d73b31b
sw x3, 0(x2) # store 0x5d73b31b in memory
flw f30, 0(x2) # load 0x5d73b31b from memory into f30
fnmadd.s f21, f21, f7, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x482cd8bb # load x3 with value 0x482cd8bb
sw x3, 0(x2) # store 0x482cd8bb in memory
flw f22, 0(x2) # load 0x482cd8bb from memory into f22
la x2, scratch
li x3, 0x18c56953 # load x3 with value 0x18c56953
sw x3, 0(x2) # store 0x18c56953 in memory
flw f6, 0(x2) # load 0x18c56953 from memory into f6
la x2, scratch
li x3, 0x350afde6 # load x3 with value 0x350afde6
sw x3, 0(x2) # store 0x350afde6 in memory
flw f21, 0(x2) # load 0x350afde6 from memory into f21
fnmadd.s f22, f22, f6, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0xad51198b # load x3 with value 0xad51198b
sw x3, 0(x2) # store 0xad51198b in memory
flw f23, 0(x2) # load 0xad51198b from memory into f23
la x2, scratch
li x3, 0xaece6e80 # load x3 with value 0xaece6e80
sw x3, 0(x2) # store 0xaece6e80 in memory
flw f20, 0(x2) # load 0xaece6e80 from memory into f20
la x2, scratch
li x3, 0x3a4a29a9 # load x3 with value 0x3a4a29a9
sw x3, 0(x2) # store 0x3a4a29a9 in memory
flw f6, 0(x2) # load 0x3a4a29a9 from memory into f6
fnmadd.s f23, f23, f20, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xcde7be6a # load x3 with value 0xcde7be6a
sw x3, 0(x2) # store 0xcde7be6a in memory
flw f24, 0(x2) # load 0xcde7be6a from memory into f24
la x2, scratch
li x3, 0x4ed7646c # load x3 with value 0x4ed7646c
sw x3, 0(x2) # store 0x4ed7646c in memory
flw f25, 0(x2) # load 0x4ed7646c from memory into f25
la x2, scratch
li x3, 0x7cef3278 # load x3 with value 0x7cef3278
sw x3, 0(x2) # store 0x7cef3278 in memory
flw f2, 0(x2) # load 0x7cef3278 from memory into f2
fnmadd.s f24, f24, f25, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x2c1b9703 # load x3 with value 0x2c1b9703
sw x3, 0(x2) # store 0x2c1b9703 in memory
flw f25, 0(x2) # load 0x2c1b9703 from memory into f25
la x2, scratch
li x3, 0x0c426c46 # load x3 with value 0x0c426c46
sw x3, 0(x2) # store 0x0c426c46 in memory
flw f31, 0(x2) # load 0x0c426c46 from memory into f31
la x2, scratch
li x3, 0x9ce7b719 # load x3 with value 0x9ce7b719
sw x3, 0(x2) # store 0x9ce7b719 in memory
flw f15, 0(x2) # load 0x9ce7b719 from memory into f15
fnmadd.s f25, f25, f31, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x039fc58c # load x3 with value 0x039fc58c
sw x3, 0(x2) # store 0x039fc58c in memory
flw f26, 0(x2) # load 0x039fc58c from memory into f26
la x2, scratch
li x3, 0x8ceac9b7 # load x3 with value 0x8ceac9b7
sw x3, 0(x2) # store 0x8ceac9b7 in memory
flw f6, 0(x2) # load 0x8ceac9b7 from memory into f6
la x2, scratch
li x3, 0x657e0b4a # load x3 with value 0x657e0b4a
sw x3, 0(x2) # store 0x657e0b4a in memory
flw f17, 0(x2) # load 0x657e0b4a from memory into f17
fnmadd.s f26, f26, f6, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x5531fc1c # load x3 with value 0x5531fc1c
sw x3, 0(x2) # store 0x5531fc1c in memory
flw f27, 0(x2) # load 0x5531fc1c from memory into f27
la x2, scratch
li x3, 0x9652dfb7 # load x3 with value 0x9652dfb7
sw x3, 0(x2) # store 0x9652dfb7 in memory
flw f21, 0(x2) # load 0x9652dfb7 from memory into f21
la x2, scratch
li x3, 0xe7eb1cdd # load x3 with value 0xe7eb1cdd
sw x3, 0(x2) # store 0xe7eb1cdd in memory
flw f30, 0(x2) # load 0xe7eb1cdd from memory into f30
fnmadd.s f27, f27, f21, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x0bcd3086 # load x3 with value 0x0bcd3086
sw x3, 0(x2) # store 0x0bcd3086 in memory
flw f28, 0(x2) # load 0x0bcd3086 from memory into f28
la x2, scratch
li x3, 0xb7b01aca # load x3 with value 0xb7b01aca
sw x3, 0(x2) # store 0xb7b01aca in memory
flw f27, 0(x2) # load 0xb7b01aca from memory into f27
la x2, scratch
li x3, 0x3b1a3f4f # load x3 with value 0x3b1a3f4f
sw x3, 0(x2) # store 0x3b1a3f4f in memory
flw f30, 0(x2) # load 0x3b1a3f4f from memory into f30
fnmadd.s f28, f28, f27, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x2f00e1cd # load x3 with value 0x2f00e1cd
sw x3, 0(x2) # store 0x2f00e1cd in memory
flw f29, 0(x2) # load 0x2f00e1cd from memory into f29
la x2, scratch
li x3, 0xcaf972e7 # load x3 with value 0xcaf972e7
sw x3, 0(x2) # store 0xcaf972e7 in memory
flw f30, 0(x2) # load 0xcaf972e7 from memory into f30
la x2, scratch
li x3, 0xb372220f # load x3 with value 0xb372220f
sw x3, 0(x2) # store 0xb372220f in memory
flw f13, 0(x2) # load 0xb372220f from memory into f13
fnmadd.s f29, f29, f30, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x34b84399 # load x3 with value 0x34b84399
sw x3, 0(x2) # store 0x34b84399 in memory
flw f30, 0(x2) # load 0x34b84399 from memory into f30
la x2, scratch
li x3, 0x8e66b829 # load x3 with value 0x8e66b829
sw x3, 0(x2) # store 0x8e66b829 in memory
flw f23, 0(x2) # load 0x8e66b829 from memory into f23
la x2, scratch
li x3, 0x6ec9baff # load x3 with value 0x6ec9baff
sw x3, 0(x2) # store 0x6ec9baff in memory
flw f17, 0(x2) # load 0x6ec9baff from memory into f17
fnmadd.s f30, f30, f23, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x5ea56cb7 # load x3 with value 0x5ea56cb7
sw x3, 0(x2) # store 0x5ea56cb7 in memory
flw f31, 0(x2) # load 0x5ea56cb7 from memory into f31
la x2, scratch
li x3, 0xb629b04c # load x3 with value 0xb629b04c
sw x3, 0(x2) # store 0xb629b04c in memory
flw f29, 0(x2) # load 0xb629b04c from memory into f29
la x2, scratch
li x3, 0xda9cf9dc # load x3 with value 0xda9cf9dc
sw x3, 0(x2) # store 0xda9cf9dc in memory
flw f31, 0(x2) # load 0xda9cf9dc from memory into f31
fnmadd.s f31, f31, f29, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x91b39d57 # load x3 with value 0x91b39d57
sw x3, 0(x2) # store 0x91b39d57 in memory
flw f20, 0(x2) # load 0x91b39d57 from memory into f20
la x2, scratch
li x3, 0xbb94485f # load x3 with value 0xbb94485f
sw x3, 0(x2) # store 0xbb94485f in memory
flw f0, 0(x2) # load 0xbb94485f from memory into f0
la x2, scratch
li x3, 0xf2e32937 # load x3 with value 0xf2e32937
sw x3, 0(x2) # store 0xf2e32937 in memory
flw f23, 0(x2) # load 0xf2e32937 from memory into f23
fnmadd.s f0, f20, f0, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x3ec5e570 # load x3 with value 0x3ec5e570
sw x3, 0(x2) # store 0x3ec5e570 in memory
flw f19, 0(x2) # load 0x3ec5e570 from memory into f19
la x2, scratch
li x3, 0x79f39868 # load x3 with value 0x79f39868
sw x3, 0(x2) # store 0x79f39868 in memory
flw f1, 0(x2) # load 0x79f39868 from memory into f1
la x2, scratch
li x3, 0xf2409266 # load x3 with value 0xf2409266
sw x3, 0(x2) # store 0xf2409266 in memory
flw f11, 0(x2) # load 0xf2409266 from memory into f11
fnmadd.s f1, f19, f1, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x0356fe28 # load x3 with value 0x0356fe28
sw x3, 0(x2) # store 0x0356fe28 in memory
flw f24, 0(x2) # load 0x0356fe28 from memory into f24
la x2, scratch
li x3, 0x2dd1e57a # load x3 with value 0x2dd1e57a
sw x3, 0(x2) # store 0x2dd1e57a in memory
flw f2, 0(x2) # load 0x2dd1e57a from memory into f2
la x2, scratch
li x3, 0xcb4dd70f # load x3 with value 0xcb4dd70f
sw x3, 0(x2) # store 0xcb4dd70f in memory
flw f17, 0(x2) # load 0xcb4dd70f from memory into f17
fnmadd.s f2, f24, f2, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0xdbc37990 # load x3 with value 0xdbc37990
sw x3, 0(x2) # store 0xdbc37990 in memory
flw f23, 0(x2) # load 0xdbc37990 from memory into f23
la x2, scratch
li x3, 0x713fbccc # load x3 with value 0x713fbccc
sw x3, 0(x2) # store 0x713fbccc in memory
flw f3, 0(x2) # load 0x713fbccc from memory into f3
la x2, scratch
li x3, 0x989dd0c5 # load x3 with value 0x989dd0c5
sw x3, 0(x2) # store 0x989dd0c5 in memory
flw f1, 0(x2) # load 0x989dd0c5 from memory into f1
fnmadd.s f3, f23, f3, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2c17c9c4 # load x3 with value 0x2c17c9c4
sw x3, 0(x2) # store 0x2c17c9c4 in memory
flw f7, 0(x2) # load 0x2c17c9c4 from memory into f7
la x2, scratch
li x3, 0xe54d2d4e # load x3 with value 0xe54d2d4e
sw x3, 0(x2) # store 0xe54d2d4e in memory
flw f4, 0(x2) # load 0xe54d2d4e from memory into f4
la x2, scratch
li x3, 0xddd8af76 # load x3 with value 0xddd8af76
sw x3, 0(x2) # store 0xddd8af76 in memory
flw f8, 0(x2) # load 0xddd8af76 from memory into f8
fnmadd.s f4, f7, f4, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc9e80b04 # load x3 with value 0xc9e80b04
sw x3, 0(x2) # store 0xc9e80b04 in memory
flw f4, 0(x2) # load 0xc9e80b04 from memory into f4
la x2, scratch
li x3, 0x5e7d4826 # load x3 with value 0x5e7d4826
sw x3, 0(x2) # store 0x5e7d4826 in memory
flw f5, 0(x2) # load 0x5e7d4826 from memory into f5
la x2, scratch
li x3, 0xa8637e84 # load x3 with value 0xa8637e84
sw x3, 0(x2) # store 0xa8637e84 in memory
flw f6, 0(x2) # load 0xa8637e84 from memory into f6
fnmadd.s f5, f4, f5, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb5a70323 # load x3 with value 0xb5a70323
sw x3, 0(x2) # store 0xb5a70323 in memory
flw f1, 0(x2) # load 0xb5a70323 from memory into f1
la x2, scratch
li x3, 0xfcc18c34 # load x3 with value 0xfcc18c34
sw x3, 0(x2) # store 0xfcc18c34 in memory
flw f6, 0(x2) # load 0xfcc18c34 from memory into f6
la x2, scratch
li x3, 0xe32bf78c # load x3 with value 0xe32bf78c
sw x3, 0(x2) # store 0xe32bf78c in memory
flw f17, 0(x2) # load 0xe32bf78c from memory into f17
fnmadd.s f6, f1, f6, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x160eb5be # load x3 with value 0x160eb5be
sw x3, 0(x2) # store 0x160eb5be in memory
flw f21, 0(x2) # load 0x160eb5be from memory into f21
la x2, scratch
li x3, 0xc532471d # load x3 with value 0xc532471d
sw x3, 0(x2) # store 0xc532471d in memory
flw f7, 0(x2) # load 0xc532471d from memory into f7
la x2, scratch
li x3, 0x895570e0 # load x3 with value 0x895570e0
sw x3, 0(x2) # store 0x895570e0 in memory
flw f8, 0(x2) # load 0x895570e0 from memory into f8
fnmadd.s f7, f21, f7, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x6111365a # load x3 with value 0x6111365a
sw x3, 0(x2) # store 0x6111365a in memory
flw f6, 0(x2) # load 0x6111365a from memory into f6
la x2, scratch
li x3, 0x48548c8f # load x3 with value 0x48548c8f
sw x3, 0(x2) # store 0x48548c8f in memory
flw f8, 0(x2) # load 0x48548c8f from memory into f8
la x2, scratch
li x3, 0x05b8b779 # load x3 with value 0x05b8b779
sw x3, 0(x2) # store 0x05b8b779 in memory
flw f15, 0(x2) # load 0x05b8b779 from memory into f15
fnmadd.s f8, f6, f8, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0xe4817cbb # load x3 with value 0xe4817cbb
sw x3, 0(x2) # store 0xe4817cbb in memory
flw f13, 0(x2) # load 0xe4817cbb from memory into f13
la x2, scratch
li x3, 0x6a1aa466 # load x3 with value 0x6a1aa466
sw x3, 0(x2) # store 0x6a1aa466 in memory
flw f9, 0(x2) # load 0x6a1aa466 from memory into f9
la x2, scratch
li x3, 0xddfb05eb # load x3 with value 0xddfb05eb
sw x3, 0(x2) # store 0xddfb05eb in memory
flw f23, 0(x2) # load 0xddfb05eb from memory into f23
fnmadd.s f9, f13, f9, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x14ea8c40 # load x3 with value 0x14ea8c40
sw x3, 0(x2) # store 0x14ea8c40 in memory
flw f5, 0(x2) # load 0x14ea8c40 from memory into f5
la x2, scratch
li x3, 0x19a61bed # load x3 with value 0x19a61bed
sw x3, 0(x2) # store 0x19a61bed in memory
flw f10, 0(x2) # load 0x19a61bed from memory into f10
la x2, scratch
li x3, 0x9928fd5f # load x3 with value 0x9928fd5f
sw x3, 0(x2) # store 0x9928fd5f in memory
flw f20, 0(x2) # load 0x9928fd5f from memory into f20
fnmadd.s f10, f5, f10, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0xc3702a5d # load x3 with value 0xc3702a5d
sw x3, 0(x2) # store 0xc3702a5d in memory
flw f14, 0(x2) # load 0xc3702a5d from memory into f14
la x2, scratch
li x3, 0x98a36370 # load x3 with value 0x98a36370
sw x3, 0(x2) # store 0x98a36370 in memory
flw f11, 0(x2) # load 0x98a36370 from memory into f11
la x2, scratch
li x3, 0x09e462ea # load x3 with value 0x09e462ea
sw x3, 0(x2) # store 0x09e462ea in memory
flw f18, 0(x2) # load 0x09e462ea from memory into f18
fnmadd.s f11, f14, f11, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x1b72ea45 # load x3 with value 0x1b72ea45
sw x3, 0(x2) # store 0x1b72ea45 in memory
flw f17, 0(x2) # load 0x1b72ea45 from memory into f17
la x2, scratch
li x3, 0xeec4d7b4 # load x3 with value 0xeec4d7b4
sw x3, 0(x2) # store 0xeec4d7b4 in memory
flw f12, 0(x2) # load 0xeec4d7b4 from memory into f12
la x2, scratch
li x3, 0x6d0d9698 # load x3 with value 0x6d0d9698
sw x3, 0(x2) # store 0x6d0d9698 in memory
flw f22, 0(x2) # load 0x6d0d9698 from memory into f22
fnmadd.s f12, f17, f12, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0x2f641374 # load x3 with value 0x2f641374
sw x3, 0(x2) # store 0x2f641374 in memory
flw f11, 0(x2) # load 0x2f641374 from memory into f11
la x2, scratch
li x3, 0x8200b5b1 # load x3 with value 0x8200b5b1
sw x3, 0(x2) # store 0x8200b5b1 in memory
flw f13, 0(x2) # load 0x8200b5b1 from memory into f13
la x2, scratch
li x3, 0x13d33cfd # load x3 with value 0x13d33cfd
sw x3, 0(x2) # store 0x13d33cfd in memory
flw f23, 0(x2) # load 0x13d33cfd from memory into f23
fnmadd.s f13, f11, f13, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0x88428874 # load x3 with value 0x88428874
sw x3, 0(x2) # store 0x88428874 in memory
flw f7, 0(x2) # load 0x88428874 from memory into f7
la x2, scratch
li x3, 0x1946e981 # load x3 with value 0x1946e981
sw x3, 0(x2) # store 0x1946e981 in memory
flw f14, 0(x2) # load 0x1946e981 from memory into f14
la x2, scratch
li x3, 0x6544825e # load x3 with value 0x6544825e
sw x3, 0(x2) # store 0x6544825e in memory
flw f25, 0(x2) # load 0x6544825e from memory into f25
fnmadd.s f14, f7, f14, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x89e6d88f # load x3 with value 0x89e6d88f
sw x3, 0(x2) # store 0x89e6d88f in memory
flw f11, 0(x2) # load 0x89e6d88f from memory into f11
la x2, scratch
li x3, 0xb17e1f6c # load x3 with value 0xb17e1f6c
sw x3, 0(x2) # store 0xb17e1f6c in memory
flw f15, 0(x2) # load 0xb17e1f6c from memory into f15
la x2, scratch
li x3, 0x6bd3bed7 # load x3 with value 0x6bd3bed7
sw x3, 0(x2) # store 0x6bd3bed7 in memory
flw f30, 0(x2) # load 0x6bd3bed7 from memory into f30
fnmadd.s f15, f11, f15, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x96274bf8 # load x3 with value 0x96274bf8
sw x3, 0(x2) # store 0x96274bf8 in memory
flw f20, 0(x2) # load 0x96274bf8 from memory into f20
la x2, scratch
li x3, 0x5b187116 # load x3 with value 0x5b187116
sw x3, 0(x2) # store 0x5b187116 in memory
flw f16, 0(x2) # load 0x5b187116 from memory into f16
la x2, scratch
li x3, 0x52a69902 # load x3 with value 0x52a69902
sw x3, 0(x2) # store 0x52a69902 in memory
flw f22, 0(x2) # load 0x52a69902 from memory into f22
fnmadd.s f16, f20, f16, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xb61b50ff # load x3 with value 0xb61b50ff
sw x3, 0(x2) # store 0xb61b50ff in memory
flw f25, 0(x2) # load 0xb61b50ff from memory into f25
la x2, scratch
li x3, 0xc517f795 # load x3 with value 0xc517f795
sw x3, 0(x2) # store 0xc517f795 in memory
flw f17, 0(x2) # load 0xc517f795 from memory into f17
la x2, scratch
li x3, 0x72fdad0d # load x3 with value 0x72fdad0d
sw x3, 0(x2) # store 0x72fdad0d in memory
flw f31, 0(x2) # load 0x72fdad0d from memory into f31
fnmadd.s f17, f25, f17, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xc75abd9f # load x3 with value 0xc75abd9f
sw x3, 0(x2) # store 0xc75abd9f in memory
flw f11, 0(x2) # load 0xc75abd9f from memory into f11
la x2, scratch
li x3, 0x957331fc # load x3 with value 0x957331fc
sw x3, 0(x2) # store 0x957331fc in memory
flw f18, 0(x2) # load 0x957331fc from memory into f18
la x2, scratch
li x3, 0xa5cc4023 # load x3 with value 0xa5cc4023
sw x3, 0(x2) # store 0xa5cc4023 in memory
flw f31, 0(x2) # load 0xa5cc4023 from memory into f31
fnmadd.s f18, f11, f18, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0xa74ea434 # load x3 with value 0xa74ea434
sw x3, 0(x2) # store 0xa74ea434 in memory
flw f19, 0(x2) # load 0xa74ea434 from memory into f19
la x2, scratch
li x3, 0xff5053ec # load x3 with value 0xff5053ec
sw x3, 0(x2) # store 0xff5053ec in memory
flw f19, 0(x2) # load 0xff5053ec from memory into f19
la x2, scratch
li x3, 0xc7c529ab # load x3 with value 0xc7c529ab
sw x3, 0(x2) # store 0xc7c529ab in memory
flw f24, 0(x2) # load 0xc7c529ab from memory into f24
fnmadd.s f19, f19, f19, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0x3a1bc828 # load x3 with value 0x3a1bc828
sw x3, 0(x2) # store 0x3a1bc828 in memory
flw f9, 0(x2) # load 0x3a1bc828 from memory into f9
la x2, scratch
li x3, 0x06aba1d2 # load x3 with value 0x06aba1d2
sw x3, 0(x2) # store 0x06aba1d2 in memory
flw f20, 0(x2) # load 0x06aba1d2 from memory into f20
la x2, scratch
li x3, 0x580f8f1a # load x3 with value 0x580f8f1a
sw x3, 0(x2) # store 0x580f8f1a in memory
flw f3, 0(x2) # load 0x580f8f1a from memory into f3
fnmadd.s f20, f9, f20, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x3cd9a316 # load x3 with value 0x3cd9a316
sw x3, 0(x2) # store 0x3cd9a316 in memory
flw f28, 0(x2) # load 0x3cd9a316 from memory into f28
la x2, scratch
li x3, 0xbb108403 # load x3 with value 0xbb108403
sw x3, 0(x2) # store 0xbb108403 in memory
flw f21, 0(x2) # load 0xbb108403 from memory into f21
la x2, scratch
li x3, 0x4c9f95d8 # load x3 with value 0x4c9f95d8
sw x3, 0(x2) # store 0x4c9f95d8 in memory
flw f15, 0(x2) # load 0x4c9f95d8 from memory into f15
fnmadd.s f21, f28, f21, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0x7813e070 # load x3 with value 0x7813e070
sw x3, 0(x2) # store 0x7813e070 in memory
flw f11, 0(x2) # load 0x7813e070 from memory into f11
la x2, scratch
li x3, 0x4ed7c51d # load x3 with value 0x4ed7c51d
sw x3, 0(x2) # store 0x4ed7c51d in memory
flw f22, 0(x2) # load 0x4ed7c51d from memory into f22
la x2, scratch
li x3, 0xd0e6b27d # load x3 with value 0xd0e6b27d
sw x3, 0(x2) # store 0xd0e6b27d in memory
flw f3, 0(x2) # load 0xd0e6b27d from memory into f3
fnmadd.s f22, f11, f22, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x3d9781ef # load x3 with value 0x3d9781ef
sw x3, 0(x2) # store 0x3d9781ef in memory
flw f12, 0(x2) # load 0x3d9781ef from memory into f12
la x2, scratch
li x3, 0xcf791a12 # load x3 with value 0xcf791a12
sw x3, 0(x2) # store 0xcf791a12 in memory
flw f23, 0(x2) # load 0xcf791a12 from memory into f23
la x2, scratch
li x3, 0x6db8a049 # load x3 with value 0x6db8a049
sw x3, 0(x2) # store 0x6db8a049 in memory
flw f23, 0(x2) # load 0x6db8a049 from memory into f23
fnmadd.s f23, f12, f23, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xdc823188 # load x3 with value 0xdc823188
sw x3, 0(x2) # store 0xdc823188 in memory
flw f30, 0(x2) # load 0xdc823188 from memory into f30
la x2, scratch
li x3, 0x0e19deb7 # load x3 with value 0x0e19deb7
sw x3, 0(x2) # store 0x0e19deb7 in memory
flw f24, 0(x2) # load 0x0e19deb7 from memory into f24
la x2, scratch
li x3, 0x66937a6c # load x3 with value 0x66937a6c
sw x3, 0(x2) # store 0x66937a6c in memory
flw f13, 0(x2) # load 0x66937a6c from memory into f13
fnmadd.s f24, f30, f24, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x8b01caa7 # load x3 with value 0x8b01caa7
sw x3, 0(x2) # store 0x8b01caa7 in memory
flw f21, 0(x2) # load 0x8b01caa7 from memory into f21
la x2, scratch
li x3, 0x28905f87 # load x3 with value 0x28905f87
sw x3, 0(x2) # store 0x28905f87 in memory
flw f25, 0(x2) # load 0x28905f87 from memory into f25
la x2, scratch
li x3, 0x61bbe364 # load x3 with value 0x61bbe364
sw x3, 0(x2) # store 0x61bbe364 in memory
flw f7, 0(x2) # load 0x61bbe364 from memory into f7
fnmadd.s f25, f21, f25, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0xf0c81f81 # load x3 with value 0xf0c81f81
sw x3, 0(x2) # store 0xf0c81f81 in memory
flw f7, 0(x2) # load 0xf0c81f81 from memory into f7
la x2, scratch
li x3, 0xdedeb2b8 # load x3 with value 0xdedeb2b8
sw x3, 0(x2) # store 0xdedeb2b8 in memory
flw f26, 0(x2) # load 0xdedeb2b8 from memory into f26
la x2, scratch
li x3, 0x579c7423 # load x3 with value 0x579c7423
sw x3, 0(x2) # store 0x579c7423 in memory
flw f26, 0(x2) # load 0x579c7423 from memory into f26
fnmadd.s f26, f7, f26, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0x48b24c4e # load x3 with value 0x48b24c4e
sw x3, 0(x2) # store 0x48b24c4e in memory
flw f10, 0(x2) # load 0x48b24c4e from memory into f10
la x2, scratch
li x3, 0xbce4dba5 # load x3 with value 0xbce4dba5
sw x3, 0(x2) # store 0xbce4dba5 in memory
flw f27, 0(x2) # load 0xbce4dba5 from memory into f27
la x2, scratch
li x3, 0x180556f4 # load x3 with value 0x180556f4
sw x3, 0(x2) # store 0x180556f4 in memory
flw f9, 0(x2) # load 0x180556f4 from memory into f9
fnmadd.s f27, f10, f27, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0xe21ddeb1 # load x3 with value 0xe21ddeb1
sw x3, 0(x2) # store 0xe21ddeb1 in memory
flw f23, 0(x2) # load 0xe21ddeb1 from memory into f23
la x2, scratch
li x3, 0xa3351757 # load x3 with value 0xa3351757
sw x3, 0(x2) # store 0xa3351757 in memory
flw f28, 0(x2) # load 0xa3351757 from memory into f28
la x2, scratch
li x3, 0x5f053f14 # load x3 with value 0x5f053f14
sw x3, 0(x2) # store 0x5f053f14 in memory
flw f3, 0(x2) # load 0x5f053f14 from memory into f3
fnmadd.s f28, f23, f28, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xeabb1df8 # load x3 with value 0xeabb1df8
sw x3, 0(x2) # store 0xeabb1df8 in memory
flw f5, 0(x2) # load 0xeabb1df8 from memory into f5
la x2, scratch
li x3, 0x35bc3187 # load x3 with value 0x35bc3187
sw x3, 0(x2) # store 0x35bc3187 in memory
flw f29, 0(x2) # load 0x35bc3187 from memory into f29
la x2, scratch
li x3, 0xea58ef38 # load x3 with value 0xea58ef38
sw x3, 0(x2) # store 0xea58ef38 in memory
flw f3, 0(x2) # load 0xea58ef38 from memory into f3
fnmadd.s f29, f5, f29, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x0e7efc31 # load x3 with value 0x0e7efc31
sw x3, 0(x2) # store 0x0e7efc31 in memory
flw f5, 0(x2) # load 0x0e7efc31 from memory into f5
la x2, scratch
li x3, 0x199c8de9 # load x3 with value 0x199c8de9
sw x3, 0(x2) # store 0x199c8de9 in memory
flw f30, 0(x2) # load 0x199c8de9 from memory into f30
la x2, scratch
li x3, 0x08c88269 # load x3 with value 0x08c88269
sw x3, 0(x2) # store 0x08c88269 in memory
flw f29, 0(x2) # load 0x08c88269 from memory into f29
fnmadd.s f30, f5, f30, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x2a9bbc1e # load x3 with value 0x2a9bbc1e
sw x3, 0(x2) # store 0x2a9bbc1e in memory
flw f11, 0(x2) # load 0x2a9bbc1e from memory into f11
la x2, scratch
li x3, 0x36c8fc94 # load x3 with value 0x36c8fc94
sw x3, 0(x2) # store 0x36c8fc94 in memory
flw f31, 0(x2) # load 0x36c8fc94 from memory into f31
la x2, scratch
li x3, 0xb2149608 # load x3 with value 0xb2149608
sw x3, 0(x2) # store 0xb2149608 in memory
flw f20, 0(x2) # load 0xb2149608 from memory into f20
fnmadd.s f31, f11, f31, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x154bbb6a # load x3 with value 0x154bbb6a
sw x3, 0(x2) # store 0x154bbb6a in memory
flw f15, 0(x2) # load 0x154bbb6a from memory into f15
la x2, scratch
li x3, 0x08bd76a4 # load x3 with value 0x08bd76a4
sw x3, 0(x2) # store 0x08bd76a4 in memory
flw f25, 0(x2) # load 0x08bd76a4 from memory into f25
la x2, scratch
li x3, 0x5b136972 # load x3 with value 0x5b136972
sw x3, 0(x2) # store 0x5b136972 in memory
flw f0, 0(x2) # load 0x5b136972 from memory into f0
fnmadd.s f0, f15, f25, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0xc710c5e2 # load x3 with value 0xc710c5e2
sw x3, 0(x2) # store 0xc710c5e2 in memory
flw f2, 0(x2) # load 0xc710c5e2 from memory into f2
la x2, scratch
li x3, 0xd03db6cb # load x3 with value 0xd03db6cb
sw x3, 0(x2) # store 0xd03db6cb in memory
flw f24, 0(x2) # load 0xd03db6cb from memory into f24
la x2, scratch
li x3, 0x1b2ca486 # load x3 with value 0x1b2ca486
sw x3, 0(x2) # store 0x1b2ca486 in memory
flw f1, 0(x2) # load 0x1b2ca486 from memory into f1
fnmadd.s f1, f2, f24, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0x45b92930 # load x3 with value 0x45b92930
sw x3, 0(x2) # store 0x45b92930 in memory
flw f18, 0(x2) # load 0x45b92930 from memory into f18
la x2, scratch
li x3, 0xd60efc98 # load x3 with value 0xd60efc98
sw x3, 0(x2) # store 0xd60efc98 in memory
flw f21, 0(x2) # load 0xd60efc98 from memory into f21
la x2, scratch
li x3, 0x1b481f9f # load x3 with value 0x1b481f9f
sw x3, 0(x2) # store 0x1b481f9f in memory
flw f2, 0(x2) # load 0x1b481f9f from memory into f2
fnmadd.s f2, f18, f21, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x8075a8be # load x3 with value 0x8075a8be
sw x3, 0(x2) # store 0x8075a8be in memory
flw f29, 0(x2) # load 0x8075a8be from memory into f29
la x2, scratch
li x3, 0x293d9393 # load x3 with value 0x293d9393
sw x3, 0(x2) # store 0x293d9393 in memory
flw f19, 0(x2) # load 0x293d9393 from memory into f19
la x2, scratch
li x3, 0x20c012ac # load x3 with value 0x20c012ac
sw x3, 0(x2) # store 0x20c012ac in memory
flw f3, 0(x2) # load 0x20c012ac from memory into f3
fnmadd.s f3, f29, f19, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x28914469 # load x3 with value 0x28914469
sw x3, 0(x2) # store 0x28914469 in memory
flw f25, 0(x2) # load 0x28914469 from memory into f25
la x2, scratch
li x3, 0xfc6e2e99 # load x3 with value 0xfc6e2e99
sw x3, 0(x2) # store 0xfc6e2e99 in memory
flw f3, 0(x2) # load 0xfc6e2e99 from memory into f3
la x2, scratch
li x3, 0x1bd37443 # load x3 with value 0x1bd37443
sw x3, 0(x2) # store 0x1bd37443 in memory
flw f4, 0(x2) # load 0x1bd37443 from memory into f4
fnmadd.s f4, f25, f3, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x343299a9 # load x3 with value 0x343299a9
sw x3, 0(x2) # store 0x343299a9 in memory
flw f27, 0(x2) # load 0x343299a9 from memory into f27
la x2, scratch
li x3, 0x6f0ce95f # load x3 with value 0x6f0ce95f
sw x3, 0(x2) # store 0x6f0ce95f in memory
flw f31, 0(x2) # load 0x6f0ce95f from memory into f31
la x2, scratch
li x3, 0xf3f6d876 # load x3 with value 0xf3f6d876
sw x3, 0(x2) # store 0xf3f6d876 in memory
flw f5, 0(x2) # load 0xf3f6d876 from memory into f5
fnmadd.s f5, f27, f31, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3970ec26 # load x3 with value 0x3970ec26
sw x3, 0(x2) # store 0x3970ec26 in memory
flw f23, 0(x2) # load 0x3970ec26 from memory into f23
la x2, scratch
li x3, 0x093d054f # load x3 with value 0x093d054f
sw x3, 0(x2) # store 0x093d054f in memory
flw f27, 0(x2) # load 0x093d054f from memory into f27
la x2, scratch
li x3, 0x19996c3c # load x3 with value 0x19996c3c
sw x3, 0(x2) # store 0x19996c3c in memory
flw f6, 0(x2) # load 0x19996c3c from memory into f6
fnmadd.s f6, f23, f27, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4efc1ff9 # load x3 with value 0x4efc1ff9
sw x3, 0(x2) # store 0x4efc1ff9 in memory
flw f21, 0(x2) # load 0x4efc1ff9 from memory into f21
la x2, scratch
li x3, 0xf2decb9e # load x3 with value 0xf2decb9e
sw x3, 0(x2) # store 0xf2decb9e in memory
flw f16, 0(x2) # load 0xf2decb9e from memory into f16
la x2, scratch
li x3, 0x6910e96c # load x3 with value 0x6910e96c
sw x3, 0(x2) # store 0x6910e96c in memory
flw f7, 0(x2) # load 0x6910e96c from memory into f7
fnmadd.s f7, f21, f16, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0xc732e01c # load x3 with value 0xc732e01c
sw x3, 0(x2) # store 0xc732e01c in memory
flw f13, 0(x2) # load 0xc732e01c from memory into f13
la x2, scratch
li x3, 0x59b2717e # load x3 with value 0x59b2717e
sw x3, 0(x2) # store 0x59b2717e in memory
flw f1, 0(x2) # load 0x59b2717e from memory into f1
la x2, scratch
li x3, 0xc5e72ffe # load x3 with value 0xc5e72ffe
sw x3, 0(x2) # store 0xc5e72ffe in memory
flw f8, 0(x2) # load 0xc5e72ffe from memory into f8
fnmadd.s f8, f13, f1, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x48ff2e25 # load x3 with value 0x48ff2e25
sw x3, 0(x2) # store 0x48ff2e25 in memory
flw f29, 0(x2) # load 0x48ff2e25 from memory into f29
la x2, scratch
li x3, 0x7883e423 # load x3 with value 0x7883e423
sw x3, 0(x2) # store 0x7883e423 in memory
flw f14, 0(x2) # load 0x7883e423 from memory into f14
la x2, scratch
li x3, 0x8f9d38cb # load x3 with value 0x8f9d38cb
sw x3, 0(x2) # store 0x8f9d38cb in memory
flw f9, 0(x2) # load 0x8f9d38cb from memory into f9
fnmadd.s f9, f29, f14, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0x5cbdb822 # load x3 with value 0x5cbdb822
sw x3, 0(x2) # store 0x5cbdb822 in memory
flw f11, 0(x2) # load 0x5cbdb822 from memory into f11
la x2, scratch
li x3, 0x1b515f3a # load x3 with value 0x1b515f3a
sw x3, 0(x2) # store 0x1b515f3a in memory
flw f18, 0(x2) # load 0x1b515f3a from memory into f18
la x2, scratch
li x3, 0x2e5c9988 # load x3 with value 0x2e5c9988
sw x3, 0(x2) # store 0x2e5c9988 in memory
flw f10, 0(x2) # load 0x2e5c9988 from memory into f10
fnmadd.s f10, f11, f18, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0xe2c18c8a # load x3 with value 0xe2c18c8a
sw x3, 0(x2) # store 0xe2c18c8a in memory
flw f7, 0(x2) # load 0xe2c18c8a from memory into f7
la x2, scratch
li x3, 0x8c6f23f1 # load x3 with value 0x8c6f23f1
sw x3, 0(x2) # store 0x8c6f23f1 in memory
flw f15, 0(x2) # load 0x8c6f23f1 from memory into f15
la x2, scratch
li x3, 0xcadd3a35 # load x3 with value 0xcadd3a35
sw x3, 0(x2) # store 0xcadd3a35 in memory
flw f11, 0(x2) # load 0xcadd3a35 from memory into f11
fnmadd.s f11, f7, f15, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0x0389808d # load x3 with value 0x0389808d
sw x3, 0(x2) # store 0x0389808d in memory
flw f15, 0(x2) # load 0x0389808d from memory into f15
la x2, scratch
li x3, 0x65a8221f # load x3 with value 0x65a8221f
sw x3, 0(x2) # store 0x65a8221f in memory
flw f28, 0(x2) # load 0x65a8221f from memory into f28
la x2, scratch
li x3, 0x996a7f27 # load x3 with value 0x996a7f27
sw x3, 0(x2) # store 0x996a7f27 in memory
flw f12, 0(x2) # load 0x996a7f27 from memory into f12
fnmadd.s f12, f15, f28, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0x0d2e7955 # load x3 with value 0x0d2e7955
sw x3, 0(x2) # store 0x0d2e7955 in memory
flw f13, 0(x2) # load 0x0d2e7955 from memory into f13
la x2, scratch
li x3, 0xcbdeeb22 # load x3 with value 0xcbdeeb22
sw x3, 0(x2) # store 0xcbdeeb22 in memory
flw f16, 0(x2) # load 0xcbdeeb22 from memory into f16
la x2, scratch
li x3, 0x630460f6 # load x3 with value 0x630460f6
sw x3, 0(x2) # store 0x630460f6 in memory
flw f13, 0(x2) # load 0x630460f6 from memory into f13
fnmadd.s f13, f13, f16, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0x58112ee1 # load x3 with value 0x58112ee1
sw x3, 0(x2) # store 0x58112ee1 in memory
flw f9, 0(x2) # load 0x58112ee1 from memory into f9
la x2, scratch
li x3, 0x4fd767a4 # load x3 with value 0x4fd767a4
sw x3, 0(x2) # store 0x4fd767a4 in memory
flw f20, 0(x2) # load 0x4fd767a4 from memory into f20
la x2, scratch
li x3, 0x54d39389 # load x3 with value 0x54d39389
sw x3, 0(x2) # store 0x54d39389 in memory
flw f14, 0(x2) # load 0x54d39389 from memory into f14
fnmadd.s f14, f9, f20, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x71c7738f # load x3 with value 0x71c7738f
sw x3, 0(x2) # store 0x71c7738f in memory
flw f2, 0(x2) # load 0x71c7738f from memory into f2
la x2, scratch
li x3, 0xc3e5b1fa # load x3 with value 0xc3e5b1fa
sw x3, 0(x2) # store 0xc3e5b1fa in memory
flw f31, 0(x2) # load 0xc3e5b1fa from memory into f31
la x2, scratch
li x3, 0x0a638411 # load x3 with value 0x0a638411
sw x3, 0(x2) # store 0x0a638411 in memory
flw f15, 0(x2) # load 0x0a638411 from memory into f15
fnmadd.s f15, f2, f31, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0xb883986a # load x3 with value 0xb883986a
sw x3, 0(x2) # store 0xb883986a in memory
flw f19, 0(x2) # load 0xb883986a from memory into f19
la x2, scratch
li x3, 0xd448a14c # load x3 with value 0xd448a14c
sw x3, 0(x2) # store 0xd448a14c in memory
flw f27, 0(x2) # load 0xd448a14c from memory into f27
la x2, scratch
li x3, 0x5f522512 # load x3 with value 0x5f522512
sw x3, 0(x2) # store 0x5f522512 in memory
flw f16, 0(x2) # load 0x5f522512 from memory into f16
fnmadd.s f16, f19, f27, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0xa8b48a15 # load x3 with value 0xa8b48a15
sw x3, 0(x2) # store 0xa8b48a15 in memory
flw f27, 0(x2) # load 0xa8b48a15 from memory into f27
la x2, scratch
li x3, 0x355d22ce # load x3 with value 0x355d22ce
sw x3, 0(x2) # store 0x355d22ce in memory
flw f21, 0(x2) # load 0x355d22ce from memory into f21
la x2, scratch
li x3, 0xaeaaf24c # load x3 with value 0xaeaaf24c
sw x3, 0(x2) # store 0xaeaaf24c in memory
flw f17, 0(x2) # load 0xaeaaf24c from memory into f17
fnmadd.s f17, f27, f21, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0xb1d85d58 # load x3 with value 0xb1d85d58
sw x3, 0(x2) # store 0xb1d85d58 in memory
flw f31, 0(x2) # load 0xb1d85d58 from memory into f31
la x2, scratch
li x3, 0xcec00a2f # load x3 with value 0xcec00a2f
sw x3, 0(x2) # store 0xcec00a2f in memory
flw f15, 0(x2) # load 0xcec00a2f from memory into f15
la x2, scratch
li x3, 0x9d4199df # load x3 with value 0x9d4199df
sw x3, 0(x2) # store 0x9d4199df in memory
flw f18, 0(x2) # load 0x9d4199df from memory into f18
fnmadd.s f18, f31, f15, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0xf493b245 # load x3 with value 0xf493b245
sw x3, 0(x2) # store 0xf493b245 in memory
flw f13, 0(x2) # load 0xf493b245 from memory into f13
la x2, scratch
li x3, 0x7fb09aae # load x3 with value 0x7fb09aae
sw x3, 0(x2) # store 0x7fb09aae in memory
flw f28, 0(x2) # load 0x7fb09aae from memory into f28
la x2, scratch
li x3, 0x2d39c043 # load x3 with value 0x2d39c043
sw x3, 0(x2) # store 0x2d39c043 in memory
flw f19, 0(x2) # load 0x2d39c043 from memory into f19
fnmadd.s f19, f13, f28, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0xcc16c642 # load x3 with value 0xcc16c642
sw x3, 0(x2) # store 0xcc16c642 in memory
flw f19, 0(x2) # load 0xcc16c642 from memory into f19
la x2, scratch
li x3, 0x1947f623 # load x3 with value 0x1947f623
sw x3, 0(x2) # store 0x1947f623 in memory
flw f7, 0(x2) # load 0x1947f623 from memory into f7
la x2, scratch
li x3, 0x819b960b # load x3 with value 0x819b960b
sw x3, 0(x2) # store 0x819b960b in memory
flw f20, 0(x2) # load 0x819b960b from memory into f20
fnmadd.s f20, f19, f7, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0xf808523f # load x3 with value 0xf808523f
sw x3, 0(x2) # store 0xf808523f in memory
flw f6, 0(x2) # load 0xf808523f from memory into f6
la x2, scratch
li x3, 0xe9ba7aaa # load x3 with value 0xe9ba7aaa
sw x3, 0(x2) # store 0xe9ba7aaa in memory
flw f29, 0(x2) # load 0xe9ba7aaa from memory into f29
la x2, scratch
li x3, 0x3627dc3f # load x3 with value 0x3627dc3f
sw x3, 0(x2) # store 0x3627dc3f in memory
flw f21, 0(x2) # load 0x3627dc3f from memory into f21
fnmadd.s f21, f6, f29, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x11e33787 # load x3 with value 0x11e33787
sw x3, 0(x2) # store 0x11e33787 in memory
flw f1, 0(x2) # load 0x11e33787 from memory into f1
la x2, scratch
li x3, 0xe505347e # load x3 with value 0xe505347e
sw x3, 0(x2) # store 0xe505347e in memory
flw f3, 0(x2) # load 0xe505347e from memory into f3
la x2, scratch
li x3, 0xf6dfa2f5 # load x3 with value 0xf6dfa2f5
sw x3, 0(x2) # store 0xf6dfa2f5 in memory
flw f22, 0(x2) # load 0xf6dfa2f5 from memory into f22
fnmadd.s f22, f1, f3, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0xf3b43962 # load x3 with value 0xf3b43962
sw x3, 0(x2) # store 0xf3b43962 in memory
flw f12, 0(x2) # load 0xf3b43962 from memory into f12
la x2, scratch
li x3, 0x734c0d3f # load x3 with value 0x734c0d3f
sw x3, 0(x2) # store 0x734c0d3f in memory
flw f15, 0(x2) # load 0x734c0d3f from memory into f15
la x2, scratch
li x3, 0xcc0ba4fb # load x3 with value 0xcc0ba4fb
sw x3, 0(x2) # store 0xcc0ba4fb in memory
flw f23, 0(x2) # load 0xcc0ba4fb from memory into f23
fnmadd.s f23, f12, f15, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x86a6997e # load x3 with value 0x86a6997e
sw x3, 0(x2) # store 0x86a6997e in memory
flw f13, 0(x2) # load 0x86a6997e from memory into f13
la x2, scratch
li x3, 0x6ca7d51b # load x3 with value 0x6ca7d51b
sw x3, 0(x2) # store 0x6ca7d51b in memory
flw f23, 0(x2) # load 0x6ca7d51b from memory into f23
la x2, scratch
li x3, 0x86f01a40 # load x3 with value 0x86f01a40
sw x3, 0(x2) # store 0x86f01a40 in memory
flw f24, 0(x2) # load 0x86f01a40 from memory into f24
fnmadd.s f24, f13, f23, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0xec97a91d # load x3 with value 0xec97a91d
sw x3, 0(x2) # store 0xec97a91d in memory
flw f23, 0(x2) # load 0xec97a91d from memory into f23
la x2, scratch
li x3, 0x98a128de # load x3 with value 0x98a128de
sw x3, 0(x2) # store 0x98a128de in memory
flw f18, 0(x2) # load 0x98a128de from memory into f18
la x2, scratch
li x3, 0x114fb94a # load x3 with value 0x114fb94a
sw x3, 0(x2) # store 0x114fb94a in memory
flw f25, 0(x2) # load 0x114fb94a from memory into f25
fnmadd.s f25, f23, f18, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0xfa68013b # load x3 with value 0xfa68013b
sw x3, 0(x2) # store 0xfa68013b in memory
flw f10, 0(x2) # load 0xfa68013b from memory into f10
la x2, scratch
li x3, 0xce6be17a # load x3 with value 0xce6be17a
sw x3, 0(x2) # store 0xce6be17a in memory
flw f13, 0(x2) # load 0xce6be17a from memory into f13
la x2, scratch
li x3, 0xb39f309e # load x3 with value 0xb39f309e
sw x3, 0(x2) # store 0xb39f309e in memory
flw f26, 0(x2) # load 0xb39f309e from memory into f26
fnmadd.s f26, f10, f13, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xf234056f # load x3 with value 0xf234056f
sw x3, 0(x2) # store 0xf234056f in memory
flw f11, 0(x2) # load 0xf234056f from memory into f11
la x2, scratch
li x3, 0x04dcedde # load x3 with value 0x04dcedde
sw x3, 0(x2) # store 0x04dcedde in memory
flw f19, 0(x2) # load 0x04dcedde from memory into f19
la x2, scratch
li x3, 0x9368aa18 # load x3 with value 0x9368aa18
sw x3, 0(x2) # store 0x9368aa18 in memory
flw f27, 0(x2) # load 0x9368aa18 from memory into f27
fnmadd.s f27, f11, f19, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0xfc5f9fca # load x3 with value 0xfc5f9fca
sw x3, 0(x2) # store 0xfc5f9fca in memory
flw f14, 0(x2) # load 0xfc5f9fca from memory into f14
la x2, scratch
li x3, 0x8630386b # load x3 with value 0x8630386b
sw x3, 0(x2) # store 0x8630386b in memory
flw f19, 0(x2) # load 0x8630386b from memory into f19
la x2, scratch
li x3, 0xe7e9d82b # load x3 with value 0xe7e9d82b
sw x3, 0(x2) # store 0xe7e9d82b in memory
flw f28, 0(x2) # load 0xe7e9d82b from memory into f28
fnmadd.s f28, f14, f19, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0x0e7e9d95 # load x3 with value 0x0e7e9d95
sw x3, 0(x2) # store 0x0e7e9d95 in memory
flw f29, 0(x2) # load 0x0e7e9d95 from memory into f29
la x2, scratch
li x3, 0x0756f111 # load x3 with value 0x0756f111
sw x3, 0(x2) # store 0x0756f111 in memory
flw f9, 0(x2) # load 0x0756f111 from memory into f9
la x2, scratch
li x3, 0x67791199 # load x3 with value 0x67791199
sw x3, 0(x2) # store 0x67791199 in memory
flw f29, 0(x2) # load 0x67791199 from memory into f29
fnmadd.s f29, f29, f9, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0xffde387b # load x3 with value 0xffde387b
sw x3, 0(x2) # store 0xffde387b in memory
flw f19, 0(x2) # load 0xffde387b from memory into f19
la x2, scratch
li x3, 0x70366910 # load x3 with value 0x70366910
sw x3, 0(x2) # store 0x70366910 in memory
flw f3, 0(x2) # load 0x70366910 from memory into f3
la x2, scratch
li x3, 0x972e8918 # load x3 with value 0x972e8918
sw x3, 0(x2) # store 0x972e8918 in memory
flw f30, 0(x2) # load 0x972e8918 from memory into f30
fnmadd.s f30, f19, f3, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x5e05bf08 # load x3 with value 0x5e05bf08
sw x3, 0(x2) # store 0x5e05bf08 in memory
flw f14, 0(x2) # load 0x5e05bf08 from memory into f14
la x2, scratch
li x3, 0x5b603341 # load x3 with value 0x5b603341
sw x3, 0(x2) # store 0x5b603341 in memory
flw f7, 0(x2) # load 0x5b603341 from memory into f7
la x2, scratch
li x3, 0x59b4a9d9 # load x3 with value 0x59b4a9d9
sw x3, 0(x2) # store 0x59b4a9d9 in memory
flw f31, 0(x2) # load 0x59b4a9d9 from memory into f31
fnmadd.s f31, f14, f7, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0x2f5c1062 # load x3 with value 0x2f5c1062
sw x3, 0(x2) # store 0x2f5c1062 in memory
flw f25, 0(x2) # load 0x2f5c1062 from memory into f25
la x2, scratch
li x3, 0x363ae078 # load x3 with value 0x363ae078
sw x3, 0(x2) # store 0x363ae078 in memory
flw f28, 0(x2) # load 0x363ae078 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f29, f25, f28, f1, dyn # perform operation
fnmadd.s f29, f25, f28, f1, rdn # perform operation
fnmadd.s f29, f25, f28, f1, rmm # perform operation
fnmadd.s f29, f25, f28, f1, rne # perform operation
fnmadd.s f29, f25, f28, f1, rtz # perform operation
fnmadd.s f29, f25, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0xca86fb40 # load x3 with value 0xca86fb40
sw x3, 0(x2) # store 0xca86fb40 in memory
flw f29, 0(x2) # load 0xca86fb40 from memory into f29
fnmadd.s f7, f30, f12, f29, dyn # perform operation
fnmadd.s f7, f30, f12, f29, rdn # perform operation
fnmadd.s f7, f30, f12, f29, rmm # perform operation
fnmadd.s f7, f30, f12, f29, rne # perform operation
fnmadd.s f7, f30, f12, f29, rtz # perform operation
fnmadd.s f7, f30, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f30, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f30, f12, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xe7bdd5fe # load x3 with value 0xe7bdd5fe
sw x3, 0(x2) # store 0xe7bdd5fe in memory
flw f26, 0(x2) # load 0xe7bdd5fe from memory into f26
fnmadd.s f28, f18, f13, f26, dyn # perform operation
fnmadd.s f28, f18, f13, f26, rdn # perform operation
fnmadd.s f28, f18, f13, f26, rmm # perform operation
fnmadd.s f28, f18, f13, f26, rne # perform operation
fnmadd.s f28, f18, f13, f26, rtz # perform operation
fnmadd.s f28, f18, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xbb6c88fb # load x3 with value 0xbb6c88fb
sw x3, 0(x2) # store 0xbb6c88fb in memory
flw f9, 0(x2) # load 0xbb6c88fb from memory into f9
fnmadd.s f14, f11, f30, f9, dyn # perform operation
fnmadd.s f14, f11, f30, f9, rdn # perform operation
fnmadd.s f14, f11, f30, f9, rmm # perform operation
fnmadd.s f14, f11, f30, f9, rne # perform operation
fnmadd.s f14, f11, f30, f9, rtz # perform operation
fnmadd.s f14, f11, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f11, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f11, f30, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xb51591fe # load x3 with value 0xb51591fe
sw x3, 0(x2) # store 0xb51591fe in memory
flw f13, 0(x2) # load 0xb51591fe from memory into f13
fnmadd.s f28, f2, f12, f13, dyn # perform operation
fnmadd.s f28, f2, f12, f13, rdn # perform operation
fnmadd.s f28, f2, f12, f13, rmm # perform operation
fnmadd.s f28, f2, f12, f13, rne # perform operation
fnmadd.s f28, f2, f12, f13, rtz # perform operation
fnmadd.s f28, f2, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f2, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f2, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xf98a4fe7 # load x3 with value 0xf98a4fe7
sw x3, 0(x2) # store 0xf98a4fe7 in memory
flw f20, 0(x2) # load 0xf98a4fe7 from memory into f20
fnmadd.s f5, f8, f2, f20, dyn # perform operation
fnmadd.s f5, f8, f2, f20, rdn # perform operation
fnmadd.s f5, f8, f2, f20, rmm # perform operation
fnmadd.s f5, f8, f2, f20, rne # perform operation
fnmadd.s f5, f8, f2, f20, rtz # perform operation
fnmadd.s f5, f8, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xe40f8d29 # load x3 with value 0xe40f8d29
sw x3, 0(x2) # store 0xe40f8d29 in memory
flw f23, 0(x2) # load 0xe40f8d29 from memory into f23
fnmadd.s f17, f31, f14, f23, dyn # perform operation
fnmadd.s f17, f31, f14, f23, rdn # perform operation
fnmadd.s f17, f31, f14, f23, rmm # perform operation
fnmadd.s f17, f31, f14, f23, rne # perform operation
fnmadd.s f17, f31, f14, f23, rtz # perform operation
fnmadd.s f17, f31, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f31, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f31, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x52826478 # load x3 with value 0x52826478
sw x3, 0(x2) # store 0x52826478 in memory
flw f17, 0(x2) # load 0x52826478 from memory into f17
fnmadd.s f12, f9, f7, f17, dyn # perform operation
fnmadd.s f12, f9, f7, f17, rdn # perform operation
fnmadd.s f12, f9, f7, f17, rmm # perform operation
fnmadd.s f12, f9, f7, f17, rne # perform operation
fnmadd.s f12, f9, f7, f17, rtz # perform operation
fnmadd.s f12, f9, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f9, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f9, f7, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x2b835b7b # load x3 with value 0x2b835b7b
sw x3, 0(x2) # store 0x2b835b7b in memory
flw f9, 0(x2) # load 0x2b835b7b from memory into f9
fnmadd.s f13, f6, f26, f9, dyn # perform operation
fnmadd.s f13, f6, f26, f9, rdn # perform operation
fnmadd.s f13, f6, f26, f9, rmm # perform operation
fnmadd.s f13, f6, f26, f9, rne # perform operation
fnmadd.s f13, f6, f26, f9, rtz # perform operation
fnmadd.s f13, f6, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x43d84b45 # load x3 with value 0x43d84b45
sw x3, 0(x2) # store 0x43d84b45 in memory
flw f15, 0(x2) # load 0x43d84b45 from memory into f15
fnmadd.s f19, f1, f14, f15, dyn # perform operation
fnmadd.s f19, f1, f14, f15, rdn # perform operation
fnmadd.s f19, f1, f14, f15, rmm # perform operation
fnmadd.s f19, f1, f14, f15, rne # perform operation
fnmadd.s f19, f1, f14, f15, rtz # perform operation
fnmadd.s f19, f1, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xe70774fd # load x3 with value 0xe70774fd
sw x3, 0(x2) # store 0xe70774fd in memory
flw f13, 0(x2) # load 0xe70774fd from memory into f13
fnmadd.s f11, f10, f3, f13, dyn # perform operation
fnmadd.s f11, f10, f3, f13, rdn # perform operation
fnmadd.s f11, f10, f3, f13, rmm # perform operation
fnmadd.s f11, f10, f3, f13, rne # perform operation
fnmadd.s f11, f10, f3, f13, rtz # perform operation
fnmadd.s f11, f10, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x83d76843 # load x3 with value 0x83d76843
sw x3, 0(x2) # store 0x83d76843 in memory
flw f7, 0(x2) # load 0x83d76843 from memory into f7
fnmadd.s f1, f21, f31, f7, dyn # perform operation
fnmadd.s f1, f21, f31, f7, rdn # perform operation
fnmadd.s f1, f21, f31, f7, rmm # perform operation
fnmadd.s f1, f21, f31, f7, rne # perform operation
fnmadd.s f1, f21, f31, f7, rtz # perform operation
fnmadd.s f1, f21, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x2a0b450e # load x3 with value 0x2a0b450e
sw x3, 0(x2) # store 0x2a0b450e in memory
flw f7, 0(x2) # load 0x2a0b450e from memory into f7
fnmadd.s f16, f18, f29, f7, dyn # perform operation
fnmadd.s f16, f18, f29, f7, rdn # perform operation
fnmadd.s f16, f18, f29, f7, rmm # perform operation
fnmadd.s f16, f18, f29, f7, rne # perform operation
fnmadd.s f16, f18, f29, f7, rtz # perform operation
fnmadd.s f16, f18, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x607f3635 # load x3 with value 0x607f3635
sw x3, 0(x2) # store 0x607f3635 in memory
flw f16, 0(x2) # load 0x607f3635 from memory into f16
fnmadd.s f22, f8, f14, f16, dyn # perform operation
fnmadd.s f22, f8, f14, f16, rdn # perform operation
fnmadd.s f22, f8, f14, f16, rmm # perform operation
fnmadd.s f22, f8, f14, f16, rne # perform operation
fnmadd.s f22, f8, f14, f16, rtz # perform operation
fnmadd.s f22, f8, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x125da4a6 # load x3 with value 0x125da4a6
sw x3, 0(x2) # store 0x125da4a6 in memory
flw f24, 0(x2) # load 0x125da4a6 from memory into f24
fnmadd.s f9, f20, f25, f24, dyn # perform operation
fnmadd.s f9, f20, f25, f24, rdn # perform operation
fnmadd.s f9, f20, f25, f24, rmm # perform operation
fnmadd.s f9, f20, f25, f24, rne # perform operation
fnmadd.s f9, f20, f25, f24, rtz # perform operation
fnmadd.s f9, f20, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x23d6fceb # load x3 with value 0x23d6fceb
sw x3, 0(x2) # store 0x23d6fceb in memory
flw f6, 0(x2) # load 0x23d6fceb from memory into f6
fnmadd.s f3, f26, f24, f6, dyn # perform operation
fnmadd.s f3, f26, f24, f6, rdn # perform operation
fnmadd.s f3, f26, f24, f6, rmm # perform operation
fnmadd.s f3, f26, f24, f6, rne # perform operation
fnmadd.s f3, f26, f24, f6, rtz # perform operation
fnmadd.s f3, f26, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f24, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x38381e0a # load x3 with value 0x38381e0a
sw x3, 0(x2) # store 0x38381e0a in memory
flw f10, 0(x2) # load 0x38381e0a from memory into f10
fnmadd.s f30, f5, f28, f10, dyn # perform operation
fnmadd.s f30, f5, f28, f10, rdn # perform operation
fnmadd.s f30, f5, f28, f10, rmm # perform operation
fnmadd.s f30, f5, f28, f10, rne # perform operation
fnmadd.s f30, f5, f28, f10, rtz # perform operation
fnmadd.s f30, f5, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f5, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f5, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x33ecf440 # load x3 with value 0x33ecf440
sw x3, 0(x2) # store 0x33ecf440 in memory
flw f29, 0(x2) # load 0x33ecf440 from memory into f29
fnmadd.s f8, f7, f15, f29, dyn # perform operation
fnmadd.s f8, f7, f15, f29, rdn # perform operation
fnmadd.s f8, f7, f15, f29, rmm # perform operation
fnmadd.s f8, f7, f15, f29, rne # perform operation
fnmadd.s f8, f7, f15, f29, rtz # perform operation
fnmadd.s f8, f7, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x8abff3f7 # load x3 with value 0x8abff3f7
sw x3, 0(x2) # store 0x8abff3f7 in memory
flw f25, 0(x2) # load 0x8abff3f7 from memory into f25
fnmadd.s f12, f29, f2, f25, dyn # perform operation
fnmadd.s f12, f29, f2, f25, rdn # perform operation
fnmadd.s f12, f29, f2, f25, rmm # perform operation
fnmadd.s f12, f29, f2, f25, rne # perform operation
fnmadd.s f12, f29, f2, f25, rtz # perform operation
fnmadd.s f12, f29, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x507bdcb9 # load x3 with value 0x507bdcb9
sw x3, 0(x2) # store 0x507bdcb9 in memory
flw f14, 0(x2) # load 0x507bdcb9 from memory into f14
fnmadd.s f19, f27, f24, f14, dyn # perform operation
fnmadd.s f19, f27, f24, f14, rdn # perform operation
fnmadd.s f19, f27, f24, f14, rmm # perform operation
fnmadd.s f19, f27, f24, f14, rne # perform operation
fnmadd.s f19, f27, f24, f14, rtz # perform operation
fnmadd.s f19, f27, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f27, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f27, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f27, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f27, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f27, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x7b1f49bb # load x3 with value 0x7b1f49bb
sw x3, 0(x2) # store 0x7b1f49bb in memory
flw f2, 0(x2) # load 0x7b1f49bb from memory into f2
fnmadd.s f24, f29, f6, f2, dyn # perform operation
fnmadd.s f24, f29, f6, f2, rdn # perform operation
fnmadd.s f24, f29, f6, f2, rmm # perform operation
fnmadd.s f24, f29, f6, f2, rne # perform operation
fnmadd.s f24, f29, f6, f2, rtz # perform operation
fnmadd.s f24, f29, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x303e5965 # load x3 with value 0x303e5965
sw x3, 0(x2) # store 0x303e5965 in memory
flw f23, 0(x2) # load 0x303e5965 from memory into f23
fnmadd.s f29, f11, f6, f23, dyn # perform operation
fnmadd.s f29, f11, f6, f23, rdn # perform operation
fnmadd.s f29, f11, f6, f23, rmm # perform operation
fnmadd.s f29, f11, f6, f23, rne # perform operation
fnmadd.s f29, f11, f6, f23, rtz # perform operation
fnmadd.s f29, f11, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x1203bd50 # load x3 with value 0x1203bd50
sw x3, 0(x2) # store 0x1203bd50 in memory
flw f14, 0(x2) # load 0x1203bd50 from memory into f14
fnmadd.s f7, f27, f8, f14, dyn # perform operation
fnmadd.s f7, f27, f8, f14, rdn # perform operation
fnmadd.s f7, f27, f8, f14, rmm # perform operation
fnmadd.s f7, f27, f8, f14, rne # perform operation
fnmadd.s f7, f27, f8, f14, rtz # perform operation
fnmadd.s f7, f27, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x1a2777dd # load x3 with value 0x1a2777dd
sw x3, 0(x2) # store 0x1a2777dd in memory
flw f30, 0(x2) # load 0x1a2777dd from memory into f30
fnmadd.s f22, f3, f21, f30, dyn # perform operation
fnmadd.s f22, f3, f21, f30, rdn # perform operation
fnmadd.s f22, f3, f21, f30, rmm # perform operation
fnmadd.s f22, f3, f21, f30, rne # perform operation
fnmadd.s f22, f3, f21, f30, rtz # perform operation
fnmadd.s f22, f3, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f3, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f3, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f3, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f3, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f3, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xd0a24f2f # load x3 with value 0xd0a24f2f
sw x3, 0(x2) # store 0xd0a24f2f in memory
flw f23, 0(x2) # load 0xd0a24f2f from memory into f23
fnmadd.s f28, f27, f20, f23, dyn # perform operation
fnmadd.s f28, f27, f20, f23, rdn # perform operation
fnmadd.s f28, f27, f20, f23, rmm # perform operation
fnmadd.s f28, f27, f20, f23, rne # perform operation
fnmadd.s f28, f27, f20, f23, rtz # perform operation
fnmadd.s f28, f27, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x7a46d176 # load x3 with value 0x7a46d176
sw x3, 0(x2) # store 0x7a46d176 in memory
flw f23, 0(x2) # load 0x7a46d176 from memory into f23
fnmadd.s f19, f5, f12, f23, dyn # perform operation
fnmadd.s f19, f5, f12, f23, rdn # perform operation
fnmadd.s f19, f5, f12, f23, rmm # perform operation
fnmadd.s f19, f5, f12, f23, rne # perform operation
fnmadd.s f19, f5, f12, f23, rtz # perform operation
fnmadd.s f19, f5, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f5, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f5, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xf834eaed # load x3 with value 0xf834eaed
sw x3, 0(x2) # store 0xf834eaed in memory
flw f13, 0(x2) # load 0xf834eaed from memory into f13
fnmadd.s f15, f25, f31, f13, dyn # perform operation
fnmadd.s f15, f25, f31, f13, rdn # perform operation
fnmadd.s f15, f25, f31, f13, rmm # perform operation
fnmadd.s f15, f25, f31, f13, rne # perform operation
fnmadd.s f15, f25, f31, f13, rtz # perform operation
fnmadd.s f15, f25, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f25, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x8b89e7b5 # load x3 with value 0x8b89e7b5
sw x3, 0(x2) # store 0x8b89e7b5 in memory
flw f8, 0(x2) # load 0x8b89e7b5 from memory into f8
fnmadd.s f31, f17, f24, f8, dyn # perform operation
fnmadd.s f31, f17, f24, f8, rdn # perform operation
fnmadd.s f31, f17, f24, f8, rmm # perform operation
fnmadd.s f31, f17, f24, f8, rne # perform operation
fnmadd.s f31, f17, f24, f8, rtz # perform operation
fnmadd.s f31, f17, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f17, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f17, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x51786355 # load x3 with value 0x51786355
sw x3, 0(x2) # store 0x51786355 in memory
flw f13, 0(x2) # load 0x51786355 from memory into f13
fnmadd.s f30, f10, f20, f13, dyn # perform operation
fnmadd.s f30, f10, f20, f13, rdn # perform operation
fnmadd.s f30, f10, f20, f13, rmm # perform operation
fnmadd.s f30, f10, f20, f13, rne # perform operation
fnmadd.s f30, f10, f20, f13, rtz # perform operation
fnmadd.s f30, f10, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f10, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f10, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f10, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f10, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f10, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x62636dfe # load x3 with value 0x62636dfe
sw x3, 0(x2) # store 0x62636dfe in memory
flw f6, 0(x2) # load 0x62636dfe from memory into f6
fnmadd.s f20, f11, f12, f6, dyn # perform operation
fnmadd.s f20, f11, f12, f6, rdn # perform operation
fnmadd.s f20, f11, f12, f6, rmm # perform operation
fnmadd.s f20, f11, f12, f6, rne # perform operation
fnmadd.s f20, f11, f12, f6, rtz # perform operation
fnmadd.s f20, f11, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f11, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f11, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xf6420e61 # load x3 with value 0xf6420e61
sw x3, 0(x2) # store 0xf6420e61 in memory
flw f30, 0(x2) # load 0xf6420e61 from memory into f30
fnmadd.s f8, f11, f22, f30, dyn # perform operation
fnmadd.s f8, f11, f22, f30, rdn # perform operation
fnmadd.s f8, f11, f22, f30, rmm # perform operation
fnmadd.s f8, f11, f22, f30, rne # perform operation
fnmadd.s f8, f11, f22, f30, rtz # perform operation
fnmadd.s f8, f11, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f11, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x66ec0249 # load x3 with value 0x66ec0249
sw x3, 0(x2) # store 0x66ec0249 in memory
flw f15, 0(x2) # load 0x66ec0249 from memory into f15
fnmadd.s f16, f7, f22, f15, dyn # perform operation
fnmadd.s f16, f7, f22, f15, rdn # perform operation
fnmadd.s f16, f7, f22, f15, rmm # perform operation
fnmadd.s f16, f7, f22, f15, rne # perform operation
fnmadd.s f16, f7, f22, f15, rtz # perform operation
fnmadd.s f16, f7, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f7, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f7, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xdf9affa7 # load x3 with value 0xdf9affa7
sw x3, 0(x2) # store 0xdf9affa7 in memory
flw f21, 0(x2) # load 0xdf9affa7 from memory into f21
fnmadd.s f23, f24, f1, f21, dyn # perform operation
fnmadd.s f23, f24, f1, f21, rdn # perform operation
fnmadd.s f23, f24, f1, f21, rmm # perform operation
fnmadd.s f23, f24, f1, f21, rne # perform operation
fnmadd.s f23, f24, f1, f21, rtz # perform operation
fnmadd.s f23, f24, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f24, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f24, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f24, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f24, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f24, f1, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xde313e3f # load x3 with value 0xde313e3f
sw x3, 0(x2) # store 0xde313e3f in memory
flw f23, 0(x2) # load 0xde313e3f from memory into f23
fnmadd.s f14, f10, f16, f23, dyn # perform operation
fnmadd.s f14, f10, f16, f23, rdn # perform operation
fnmadd.s f14, f10, f16, f23, rmm # perform operation
fnmadd.s f14, f10, f16, f23, rne # perform operation
fnmadd.s f14, f10, f16, f23, rtz # perform operation
fnmadd.s f14, f10, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f10, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f10, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f10, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f10, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f10, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x70e321e6 # load x3 with value 0x70e321e6
sw x3, 0(x2) # store 0x70e321e6 in memory
flw f29, 0(x2) # load 0x70e321e6 from memory into f29
fnmadd.s f2, f7, f17, f29, dyn # perform operation
fnmadd.s f2, f7, f17, f29, rdn # perform operation
fnmadd.s f2, f7, f17, f29, rmm # perform operation
fnmadd.s f2, f7, f17, f29, rne # perform operation
fnmadd.s f2, f7, f17, f29, rtz # perform operation
fnmadd.s f2, f7, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x16172d73 # load x3 with value 0x16172d73
sw x3, 0(x2) # store 0x16172d73 in memory
flw f9, 0(x2) # load 0x16172d73 from memory into f9
fnmadd.s f11, f23, f20, f9, dyn # perform operation
fnmadd.s f11, f23, f20, f9, rdn # perform operation
fnmadd.s f11, f23, f20, f9, rmm # perform operation
fnmadd.s f11, f23, f20, f9, rne # perform operation
fnmadd.s f11, f23, f20, f9, rtz # perform operation
fnmadd.s f11, f23, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x896748e0 # load x3 with value 0x896748e0
sw x3, 0(x2) # store 0x896748e0 in memory
flw f16, 0(x2) # load 0x896748e0 from memory into f16
fnmadd.s f22, f29, f11, f16, dyn # perform operation
fnmadd.s f22, f29, f11, f16, rdn # perform operation
fnmadd.s f22, f29, f11, f16, rmm # perform operation
fnmadd.s f22, f29, f11, f16, rne # perform operation
fnmadd.s f22, f29, f11, f16, rtz # perform operation
fnmadd.s f22, f29, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x0f3ee00f # load x3 with value 0x0f3ee00f
sw x3, 0(x2) # store 0x0f3ee00f in memory
flw f8, 0(x2) # load 0x0f3ee00f from memory into f8
fnmadd.s f20, f27, f21, f8, dyn # perform operation
fnmadd.s f20, f27, f21, f8, rdn # perform operation
fnmadd.s f20, f27, f21, f8, rmm # perform operation
fnmadd.s f20, f27, f21, f8, rne # perform operation
fnmadd.s f20, f27, f21, f8, rtz # perform operation
fnmadd.s f20, f27, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xf42c5a9a # load x3 with value 0xf42c5a9a
sw x3, 0(x2) # store 0xf42c5a9a in memory
flw f7, 0(x2) # load 0xf42c5a9a from memory into f7
fnmadd.s f11, f8, f21, f7, dyn # perform operation
fnmadd.s f11, f8, f21, f7, rdn # perform operation
fnmadd.s f11, f8, f21, f7, rmm # perform operation
fnmadd.s f11, f8, f21, f7, rne # perform operation
fnmadd.s f11, f8, f21, f7, rtz # perform operation
fnmadd.s f11, f8, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f8, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f8, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f8, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f8, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f8, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xb3220652 # load x3 with value 0xb3220652
sw x3, 0(x2) # store 0xb3220652 in memory
flw f15, 0(x2) # load 0xb3220652 from memory into f15
fnmadd.s f17, f22, f31, f15, dyn # perform operation
fnmadd.s f17, f22, f31, f15, rdn # perform operation
fnmadd.s f17, f22, f31, f15, rmm # perform operation
fnmadd.s f17, f22, f31, f15, rne # perform operation
fnmadd.s f17, f22, f31, f15, rtz # perform operation
fnmadd.s f17, f22, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xe319eb7d # load x3 with value 0xe319eb7d
sw x3, 0(x2) # store 0xe319eb7d in memory
flw f5, 0(x2) # load 0xe319eb7d from memory into f5
fnmadd.s f30, f13, f9, f5, dyn # perform operation
fnmadd.s f30, f13, f9, f5, rdn # perform operation
fnmadd.s f30, f13, f9, f5, rmm # perform operation
fnmadd.s f30, f13, f9, f5, rne # perform operation
fnmadd.s f30, f13, f9, f5, rtz # perform operation
fnmadd.s f30, f13, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f13, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f13, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xbfa4f005 # load x3 with value 0xbfa4f005
sw x3, 0(x2) # store 0xbfa4f005 in memory
flw f8, 0(x2) # load 0xbfa4f005 from memory into f8
fnmadd.s f10, f30, f27, f8, dyn # perform operation
fnmadd.s f10, f30, f27, f8, rdn # perform operation
fnmadd.s f10, f30, f27, f8, rmm # perform operation
fnmadd.s f10, f30, f27, f8, rne # perform operation
fnmadd.s f10, f30, f27, f8, rtz # perform operation
fnmadd.s f10, f30, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f27, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x134acd50 # load x3 with value 0x134acd50
sw x3, 0(x2) # store 0x134acd50 in memory
flw f23, 0(x2) # load 0x134acd50 from memory into f23
fnmadd.s f29, f31, f5, f23, dyn # perform operation
fnmadd.s f29, f31, f5, f23, rdn # perform operation
fnmadd.s f29, f31, f5, f23, rmm # perform operation
fnmadd.s f29, f31, f5, f23, rne # perform operation
fnmadd.s f29, f31, f5, f23, rtz # perform operation
fnmadd.s f29, f31, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f31, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0x29e054a9 # load x3 with value 0x29e054a9
sw x3, 0(x2) # store 0x29e054a9 in memory
flw f13, 0(x2) # load 0x29e054a9 from memory into f13
fnmadd.s f17, f1, f19, f13, dyn # perform operation
fnmadd.s f17, f1, f19, f13, rdn # perform operation
fnmadd.s f17, f1, f19, f13, rmm # perform operation
fnmadd.s f17, f1, f19, f13, rne # perform operation
fnmadd.s f17, f1, f19, f13, rtz # perform operation
fnmadd.s f17, f1, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f1, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f1, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f1, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f1, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f1, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x85b6c5a4 # load x3 with value 0x85b6c5a4
sw x3, 0(x2) # store 0x85b6c5a4 in memory
flw f7, 0(x2) # load 0x85b6c5a4 from memory into f7
fnmadd.s f9, f25, f21, f7, dyn # perform operation
fnmadd.s f9, f25, f21, f7, rdn # perform operation
fnmadd.s f9, f25, f21, f7, rmm # perform operation
fnmadd.s f9, f25, f21, f7, rne # perform operation
fnmadd.s f9, f25, f21, f7, rtz # perform operation
fnmadd.s f9, f25, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x95b86464 # load x3 with value 0x95b86464
sw x3, 0(x2) # store 0x95b86464 in memory
flw f11, 0(x2) # load 0x95b86464 from memory into f11
fnmadd.s f24, f22, f18, f11, dyn # perform operation
fnmadd.s f24, f22, f18, f11, rdn # perform operation
fnmadd.s f24, f22, f18, f11, rmm # perform operation
fnmadd.s f24, f22, f18, f11, rne # perform operation
fnmadd.s f24, f22, f18, f11, rtz # perform operation
fnmadd.s f24, f22, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f22, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f22, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f22, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f22, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f22, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x9f470866 # load x3 with value 0x9f470866
sw x3, 0(x2) # store 0x9f470866 in memory
flw f6, 0(x2) # load 0x9f470866 from memory into f6
fnmadd.s f15, f18, f29, f6, dyn # perform operation
fnmadd.s f15, f18, f29, f6, rdn # perform operation
fnmadd.s f15, f18, f29, f6, rmm # perform operation
fnmadd.s f15, f18, f29, f6, rne # perform operation
fnmadd.s f15, f18, f29, f6, rtz # perform operation
fnmadd.s f15, f18, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x58cd642a # load x3 with value 0x58cd642a
sw x3, 0(x2) # store 0x58cd642a in memory
flw f29, 0(x2) # load 0x58cd642a from memory into f29
fnmadd.s f14, f10, f1, f29, dyn # perform operation
fnmadd.s f14, f10, f1, f29, rdn # perform operation
fnmadd.s f14, f10, f1, f29, rmm # perform operation
fnmadd.s f14, f10, f1, f29, rne # perform operation
fnmadd.s f14, f10, f1, f29, rtz # perform operation
fnmadd.s f14, f10, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f10, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x68cd2d58 # load x3 with value 0x68cd2d58
sw x3, 0(x2) # store 0x68cd2d58 in memory
flw f1, 0(x2) # load 0x68cd2d58 from memory into f1
fnmadd.s f3, f9, f5, f1, dyn # perform operation
fnmadd.s f3, f9, f5, f1, rdn # perform operation
fnmadd.s f3, f9, f5, f1, rmm # perform operation
fnmadd.s f3, f9, f5, f1, rne # perform operation
fnmadd.s f3, f9, f5, f1, rtz # perform operation
fnmadd.s f3, f9, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0xc273eb2e # load x3 with value 0xc273eb2e
sw x3, 0(x2) # store 0xc273eb2e in memory
flw f31, 0(x2) # load 0xc273eb2e from memory into f31
fnmadd.s f17, f26, f7, f31, dyn # perform operation
fnmadd.s f17, f26, f7, f31, rdn # perform operation
fnmadd.s f17, f26, f7, f31, rmm # perform operation
fnmadd.s f17, f26, f7, f31, rne # perform operation
fnmadd.s f17, f26, f7, f31, rtz # perform operation
fnmadd.s f17, f26, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x129ce552 # load x3 with value 0x129ce552
sw x3, 0(x2) # store 0x129ce552 in memory
flw f6, 0(x2) # load 0x129ce552 from memory into f6
fnmadd.s f19, f29, f11, f6, dyn # perform operation
fnmadd.s f19, f29, f11, f6, rdn # perform operation
fnmadd.s f19, f29, f11, f6, rmm # perform operation
fnmadd.s f19, f29, f11, f6, rne # perform operation
fnmadd.s f19, f29, f11, f6, rtz # perform operation
fnmadd.s f19, f29, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x649af6ec # load x3 with value 0x649af6ec
sw x3, 0(x2) # store 0x649af6ec in memory
flw f9, 0(x2) # load 0x649af6ec from memory into f9
fnmadd.s f15, f21, f22, f9, dyn # perform operation
fnmadd.s f15, f21, f22, f9, rdn # perform operation
fnmadd.s f15, f21, f22, f9, rmm # perform operation
fnmadd.s f15, f21, f22, f9, rne # perform operation
fnmadd.s f15, f21, f22, f9, rtz # perform operation
fnmadd.s f15, f21, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xcd9786d3 # load x3 with value 0xcd9786d3
sw x3, 0(x2) # store 0xcd9786d3 in memory
flw f24, 0(x2) # load 0xcd9786d3 from memory into f24
fnmadd.s f23, f26, f16, f24, dyn # perform operation
fnmadd.s f23, f26, f16, f24, rdn # perform operation
fnmadd.s f23, f26, f16, f24, rmm # perform operation
fnmadd.s f23, f26, f16, f24, rne # perform operation
fnmadd.s f23, f26, f16, f24, rtz # perform operation
fnmadd.s f23, f26, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x59c36124 # load x3 with value 0x59c36124
sw x3, 0(x2) # store 0x59c36124 in memory
flw f30, 0(x2) # load 0x59c36124 from memory into f30
fnmadd.s f29, f20, f1, f30, dyn # perform operation
fnmadd.s f29, f20, f1, f30, rdn # perform operation
fnmadd.s f29, f20, f1, f30, rmm # perform operation
fnmadd.s f29, f20, f1, f30, rne # perform operation
fnmadd.s f29, f20, f1, f30, rtz # perform operation
fnmadd.s f29, f20, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xe90160f9 # load x3 with value 0xe90160f9
sw x3, 0(x2) # store 0xe90160f9 in memory
flw f14, 0(x2) # load 0xe90160f9 from memory into f14
fnmadd.s f29, f12, f1, f14, dyn # perform operation
fnmadd.s f29, f12, f1, f14, rdn # perform operation
fnmadd.s f29, f12, f1, f14, rmm # perform operation
fnmadd.s f29, f12, f1, f14, rne # perform operation
fnmadd.s f29, f12, f1, f14, rtz # perform operation
fnmadd.s f29, f12, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x41f1bdf5 # load x3 with value 0x41f1bdf5
sw x3, 0(x2) # store 0x41f1bdf5 in memory
flw f8, 0(x2) # load 0x41f1bdf5 from memory into f8
fnmadd.s f29, f26, f21, f8, dyn # perform operation
fnmadd.s f29, f26, f21, f8, rdn # perform operation
fnmadd.s f29, f26, f21, f8, rmm # perform operation
fnmadd.s f29, f26, f21, f8, rne # perform operation
fnmadd.s f29, f26, f21, f8, rtz # perform operation
fnmadd.s f29, f26, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x8072a8c7 # load x3 with value 0x8072a8c7
sw x3, 0(x2) # store 0x8072a8c7 in memory
flw f30, 0(x2) # load 0x8072a8c7 from memory into f30
fnmadd.s f23, f19, f12, f30, dyn # perform operation
fnmadd.s f23, f19, f12, f30, rdn # perform operation
fnmadd.s f23, f19, f12, f30, rmm # perform operation
fnmadd.s f23, f19, f12, f30, rne # perform operation
fnmadd.s f23, f19, f12, f30, rtz # perform operation
fnmadd.s f23, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x4b219e11 # load x3 with value 0x4b219e11
sw x3, 0(x2) # store 0x4b219e11 in memory
flw f22, 0(x2) # load 0x4b219e11 from memory into f22
fnmadd.s f16, f23, f2, f22, dyn # perform operation
fnmadd.s f16, f23, f2, f22, rdn # perform operation
fnmadd.s f16, f23, f2, f22, rmm # perform operation
fnmadd.s f16, f23, f2, f22, rne # perform operation
fnmadd.s f16, f23, f2, f22, rtz # perform operation
fnmadd.s f16, f23, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xf2057ecd # load x3 with value 0xf2057ecd
sw x3, 0(x2) # store 0xf2057ecd in memory
flw f21, 0(x2) # load 0xf2057ecd from memory into f21
fnmadd.s f24, f6, f26, f21, dyn # perform operation
fnmadd.s f24, f6, f26, f21, rdn # perform operation
fnmadd.s f24, f6, f26, f21, rmm # perform operation
fnmadd.s f24, f6, f26, f21, rne # perform operation
fnmadd.s f24, f6, f26, f21, rtz # perform operation
fnmadd.s f24, f6, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x411a10fc # load x3 with value 0x411a10fc
sw x3, 0(x2) # store 0x411a10fc in memory
flw f12, 0(x2) # load 0x411a10fc from memory into f12
fnmadd.s f5, f25, f26, f12, dyn # perform operation
fnmadd.s f5, f25, f26, f12, rdn # perform operation
fnmadd.s f5, f25, f26, f12, rmm # perform operation
fnmadd.s f5, f25, f26, f12, rne # perform operation
fnmadd.s f5, f25, f26, f12, rtz # perform operation
fnmadd.s f5, f25, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f26, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x6e82c6a5 # load x3 with value 0x6e82c6a5
sw x3, 0(x2) # store 0x6e82c6a5 in memory
flw f23, 0(x2) # load 0x6e82c6a5 from memory into f23
fnmadd.s f18, f3, f10, f23, dyn # perform operation
fnmadd.s f18, f3, f10, f23, rdn # perform operation
fnmadd.s f18, f3, f10, f23, rmm # perform operation
fnmadd.s f18, f3, f10, f23, rne # perform operation
fnmadd.s f18, f3, f10, f23, rtz # perform operation
fnmadd.s f18, f3, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f3, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f3, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x7411df8c # load x3 with value 0x7411df8c
sw x3, 0(x2) # store 0x7411df8c in memory
flw f19, 0(x2) # load 0x7411df8c from memory into f19
fnmadd.s f2, f24, f12, f19, dyn # perform operation
fnmadd.s f2, f24, f12, f19, rdn # perform operation
fnmadd.s f2, f24, f12, f19, rmm # perform operation
fnmadd.s f2, f24, f12, f19, rne # perform operation
fnmadd.s f2, f24, f12, f19, rtz # perform operation
fnmadd.s f2, f24, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x5a775ef9 # load x3 with value 0x5a775ef9
sw x3, 0(x2) # store 0x5a775ef9 in memory
flw f20, 0(x2) # load 0x5a775ef9 from memory into f20
fnmadd.s f10, f25, f7, f20, dyn # perform operation
fnmadd.s f10, f25, f7, f20, rdn # perform operation
fnmadd.s f10, f25, f7, f20, rmm # perform operation
fnmadd.s f10, f25, f7, f20, rne # perform operation
fnmadd.s f10, f25, f7, f20, rtz # perform operation
fnmadd.s f10, f25, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x2a9f8369 # load x3 with value 0x2a9f8369
sw x3, 0(x2) # store 0x2a9f8369 in memory
flw f11, 0(x2) # load 0x2a9f8369 from memory into f11
fnmadd.s f26, f1, f16, f11, dyn # perform operation
fnmadd.s f26, f1, f16, f11, rdn # perform operation
fnmadd.s f26, f1, f16, f11, rmm # perform operation
fnmadd.s f26, f1, f16, f11, rne # perform operation
fnmadd.s f26, f1, f16, f11, rtz # perform operation
fnmadd.s f26, f1, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f1, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f1, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f1, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f1, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f1, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0xcdf31ef9 # load x3 with value 0xcdf31ef9
sw x3, 0(x2) # store 0xcdf31ef9 in memory
flw f24, 0(x2) # load 0xcdf31ef9 from memory into f24
fnmadd.s f29, f25, f7, f24, dyn # perform operation
fnmadd.s f29, f25, f7, f24, rdn # perform operation
fnmadd.s f29, f25, f7, f24, rmm # perform operation
fnmadd.s f29, f25, f7, f24, rne # perform operation
fnmadd.s f29, f25, f7, f24, rtz # perform operation
fnmadd.s f29, f25, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xfe81ee2d # load x3 with value 0xfe81ee2d
sw x3, 0(x2) # store 0xfe81ee2d in memory
flw f29, 0(x2) # load 0xfe81ee2d from memory into f29
fnmadd.s f7, f27, f22, f29, dyn # perform operation
fnmadd.s f7, f27, f22, f29, rdn # perform operation
fnmadd.s f7, f27, f22, f29, rmm # perform operation
fnmadd.s f7, f27, f22, f29, rne # perform operation
fnmadd.s f7, f27, f22, f29, rtz # perform operation
fnmadd.s f7, f27, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x256d1505 # load x3 with value 0x256d1505
sw x3, 0(x2) # store 0x256d1505 in memory
flw f3, 0(x2) # load 0x256d1505 from memory into f3
fnmadd.s f13, f26, f21, f3, dyn # perform operation
fnmadd.s f13, f26, f21, f3, rdn # perform operation
fnmadd.s f13, f26, f21, f3, rmm # perform operation
fnmadd.s f13, f26, f21, f3, rne # perform operation
fnmadd.s f13, f26, f21, f3, rtz # perform operation
fnmadd.s f13, f26, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x00b8ba1d # load x3 with value 0x00b8ba1d
sw x3, 0(x2) # store 0x00b8ba1d in memory
flw f31, 0(x2) # load 0x00b8ba1d from memory into f31
fnmadd.s f17, f23, f8, f31, dyn # perform operation
fnmadd.s f17, f23, f8, f31, rdn # perform operation
fnmadd.s f17, f23, f8, f31, rmm # perform operation
fnmadd.s f17, f23, f8, f31, rne # perform operation
fnmadd.s f17, f23, f8, f31, rtz # perform operation
fnmadd.s f17, f23, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xddb21e0c # load x3 with value 0xddb21e0c
sw x3, 0(x2) # store 0xddb21e0c in memory
flw f2, 0(x2) # load 0xddb21e0c from memory into f2
fnmadd.s f14, f23, f30, f2, dyn # perform operation
fnmadd.s f14, f23, f30, f2, rdn # perform operation
fnmadd.s f14, f23, f30, f2, rmm # perform operation
fnmadd.s f14, f23, f30, f2, rne # perform operation
fnmadd.s f14, f23, f30, f2, rtz # perform operation
fnmadd.s f14, f23, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xdd2c6c0b # load x3 with value 0xdd2c6c0b
sw x3, 0(x2) # store 0xdd2c6c0b in memory
flw f28, 0(x2) # load 0xdd2c6c0b from memory into f28
fnmadd.s f3, f1, f11, f28, dyn # perform operation
fnmadd.s f3, f1, f11, f28, rdn # perform operation
fnmadd.s f3, f1, f11, f28, rmm # perform operation
fnmadd.s f3, f1, f11, f28, rne # perform operation
fnmadd.s f3, f1, f11, f28, rtz # perform operation
fnmadd.s f3, f1, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x290b7775 # load x3 with value 0x290b7775
sw x3, 0(x2) # store 0x290b7775 in memory
flw f23, 0(x2) # load 0x290b7775 from memory into f23
fnmadd.s f1, f7, f12, f23, dyn # perform operation
fnmadd.s f1, f7, f12, f23, rdn # perform operation
fnmadd.s f1, f7, f12, f23, rmm # perform operation
fnmadd.s f1, f7, f12, f23, rne # perform operation
fnmadd.s f1, f7, f12, f23, rtz # perform operation
fnmadd.s f1, f7, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x99c73326 # load x3 with value 0x99c73326
sw x3, 0(x2) # store 0x99c73326 in memory
flw f25, 0(x2) # load 0x99c73326 from memory into f25
fnmadd.s f19, f14, f21, f25, dyn # perform operation
fnmadd.s f19, f14, f21, f25, rdn # perform operation
fnmadd.s f19, f14, f21, f25, rmm # perform operation
fnmadd.s f19, f14, f21, f25, rne # perform operation
fnmadd.s f19, f14, f21, f25, rtz # perform operation
fnmadd.s f19, f14, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x0593226f # load x3 with value 0x0593226f
sw x3, 0(x2) # store 0x0593226f in memory
flw f27, 0(x2) # load 0x0593226f from memory into f27
fnmadd.s f8, f14, f28, f27, dyn # perform operation
fnmadd.s f8, f14, f28, f27, rdn # perform operation
fnmadd.s f8, f14, f28, f27, rmm # perform operation
fnmadd.s f8, f14, f28, f27, rne # perform operation
fnmadd.s f8, f14, f28, f27, rtz # perform operation
fnmadd.s f8, f14, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f14, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f14, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0x0e0cbb13 # load x3 with value 0x0e0cbb13
sw x3, 0(x2) # store 0x0e0cbb13 in memory
flw f25, 0(x2) # load 0x0e0cbb13 from memory into f25
fnmadd.s f5, f21, f26, f25, dyn # perform operation
fnmadd.s f5, f21, f26, f25, rdn # perform operation
fnmadd.s f5, f21, f26, f25, rmm # perform operation
fnmadd.s f5, f21, f26, f25, rne # perform operation
fnmadd.s f5, f21, f26, f25, rtz # perform operation
fnmadd.s f5, f21, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f26, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x010f18ec # load x3 with value 0x010f18ec
sw x3, 0(x2) # store 0x010f18ec in memory
flw f17, 0(x2) # load 0x010f18ec from memory into f17
fnmadd.s f16, f10, f11, f17, dyn # perform operation
fnmadd.s f16, f10, f11, f17, rdn # perform operation
fnmadd.s f16, f10, f11, f17, rmm # perform operation
fnmadd.s f16, f10, f11, f17, rne # perform operation
fnmadd.s f16, f10, f11, f17, rtz # perform operation
fnmadd.s f16, f10, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f10, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f10, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f10, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f10, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f10, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x0b928ced # load x3 with value 0x0b928ced
sw x3, 0(x2) # store 0x0b928ced in memory
flw f16, 0(x2) # load 0x0b928ced from memory into f16
fnmadd.s f19, f24, f12, f16, dyn # perform operation
fnmadd.s f19, f24, f12, f16, rdn # perform operation
fnmadd.s f19, f24, f12, f16, rmm # perform operation
fnmadd.s f19, f24, f12, f16, rne # perform operation
fnmadd.s f19, f24, f12, f16, rtz # perform operation
fnmadd.s f19, f24, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x263272ad # load x3 with value 0x263272ad
sw x3, 0(x2) # store 0x263272ad in memory
flw f23, 0(x2) # load 0x263272ad from memory into f23
fnmadd.s f1, f24, f27, f23, dyn # perform operation
fnmadd.s f1, f24, f27, f23, rdn # perform operation
fnmadd.s f1, f24, f27, f23, rmm # perform operation
fnmadd.s f1, f24, f27, f23, rne # perform operation
fnmadd.s f1, f24, f27, f23, rtz # perform operation
fnmadd.s f1, f24, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f24, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x57cc1afb # load x3 with value 0x57cc1afb
sw x3, 0(x2) # store 0x57cc1afb in memory
flw f20, 0(x2) # load 0x57cc1afb from memory into f20
fnmadd.s f16, f29, f18, f20, dyn # perform operation
fnmadd.s f16, f29, f18, f20, rdn # perform operation
fnmadd.s f16, f29, f18, f20, rmm # perform operation
fnmadd.s f16, f29, f18, f20, rne # perform operation
fnmadd.s f16, f29, f18, f20, rtz # perform operation
fnmadd.s f16, f29, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f29, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f29, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x7ef67c9a # load x3 with value 0x7ef67c9a
sw x3, 0(x2) # store 0x7ef67c9a in memory
flw f30, 0(x2) # load 0x7ef67c9a from memory into f30
fnmadd.s f15, f29, f10, f30, dyn # perform operation
fnmadd.s f15, f29, f10, f30, rdn # perform operation
fnmadd.s f15, f29, f10, f30, rmm # perform operation
fnmadd.s f15, f29, f10, f30, rne # perform operation
fnmadd.s f15, f29, f10, f30, rtz # perform operation
fnmadd.s f15, f29, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x0b83e5a0 # load x3 with value 0x0b83e5a0
sw x3, 0(x2) # store 0x0b83e5a0 in memory
flw f19, 0(x2) # load 0x0b83e5a0 from memory into f19
fnmadd.s f20, f12, f9, f19, dyn # perform operation
fnmadd.s f20, f12, f9, f19, rdn # perform operation
fnmadd.s f20, f12, f9, f19, rmm # perform operation
fnmadd.s f20, f12, f9, f19, rne # perform operation
fnmadd.s f20, f12, f9, f19, rtz # perform operation
fnmadd.s f20, f12, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xe823db39 # load x3 with value 0xe823db39
sw x3, 0(x2) # store 0xe823db39 in memory
flw f17, 0(x2) # load 0xe823db39 from memory into f17
fnmadd.s f7, f28, f15, f17, dyn # perform operation
fnmadd.s f7, f28, f15, f17, rdn # perform operation
fnmadd.s f7, f28, f15, f17, rmm # perform operation
fnmadd.s f7, f28, f15, f17, rne # perform operation
fnmadd.s f7, f28, f15, f17, rtz # perform operation
fnmadd.s f7, f28, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f28, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f28, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xc6287295 # load x3 with value 0xc6287295
sw x3, 0(x2) # store 0xc6287295 in memory
flw f23, 0(x2) # load 0xc6287295 from memory into f23
fnmadd.s f13, f18, f7, f23, dyn # perform operation
fnmadd.s f13, f18, f7, f23, rdn # perform operation
fnmadd.s f13, f18, f7, f23, rmm # perform operation
fnmadd.s f13, f18, f7, f23, rne # perform operation
fnmadd.s f13, f18, f7, f23, rtz # perform operation
fnmadd.s f13, f18, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x5271e86a # load x3 with value 0x5271e86a
sw x3, 0(x2) # store 0x5271e86a in memory
flw f21, 0(x2) # load 0x5271e86a from memory into f21
fnmadd.s f19, f13, f8, f21, dyn # perform operation
fnmadd.s f19, f13, f8, f21, rdn # perform operation
fnmadd.s f19, f13, f8, f21, rmm # perform operation
fnmadd.s f19, f13, f8, f21, rne # perform operation
fnmadd.s f19, f13, f8, f21, rtz # perform operation
fnmadd.s f19, f13, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xe2678e2d # load x3 with value 0xe2678e2d
sw x3, 0(x2) # store 0xe2678e2d in memory
flw f19, 0(x2) # load 0xe2678e2d from memory into f19
fnmadd.s f22, f10, f18, f19, dyn # perform operation
fnmadd.s f22, f10, f18, f19, rdn # perform operation
fnmadd.s f22, f10, f18, f19, rmm # perform operation
fnmadd.s f22, f10, f18, f19, rne # perform operation
fnmadd.s f22, f10, f18, f19, rtz # perform operation
fnmadd.s f22, f10, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x4addd8e7 # load x3 with value 0x4addd8e7
sw x3, 0(x2) # store 0x4addd8e7 in memory
flw f16, 0(x2) # load 0x4addd8e7 from memory into f16
fnmadd.s f30, f25, f7, f16, dyn # perform operation
fnmadd.s f30, f25, f7, f16, rdn # perform operation
fnmadd.s f30, f25, f7, f16, rmm # perform operation
fnmadd.s f30, f25, f7, f16, rne # perform operation
fnmadd.s f30, f25, f7, f16, rtz # perform operation
fnmadd.s f30, f25, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f25, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f25, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xe1240973 # load x3 with value 0xe1240973
sw x3, 0(x2) # store 0xe1240973 in memory
flw f15, 0(x2) # load 0xe1240973 from memory into f15
fnmadd.s f5, f21, f31, f15, dyn # perform operation
fnmadd.s f5, f21, f31, f15, rdn # perform operation
fnmadd.s f5, f21, f31, f15, rmm # perform operation
fnmadd.s f5, f21, f31, f15, rne # perform operation
fnmadd.s f5, f21, f31, f15, rtz # perform operation
fnmadd.s f5, f21, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x60f0a72f # load x3 with value 0x60f0a72f
sw x3, 0(x2) # store 0x60f0a72f in memory
flw f21, 0(x2) # load 0x60f0a72f from memory into f21
fnmadd.s f27, f14, f12, f21, dyn # perform operation
fnmadd.s f27, f14, f12, f21, rdn # perform operation
fnmadd.s f27, f14, f12, f21, rmm # perform operation
fnmadd.s f27, f14, f12, f21, rne # perform operation
fnmadd.s f27, f14, f12, f21, rtz # perform operation
fnmadd.s f27, f14, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x3f8ee6b1 # load x3 with value 0x3f8ee6b1
sw x3, 0(x2) # store 0x3f8ee6b1 in memory
flw f19, 0(x2) # load 0x3f8ee6b1 from memory into f19
fnmadd.s f30, f23, f5, f19, dyn # perform operation
fnmadd.s f30, f23, f5, f19, rdn # perform operation
fnmadd.s f30, f23, f5, f19, rmm # perform operation
fnmadd.s f30, f23, f5, f19, rne # perform operation
fnmadd.s f30, f23, f5, f19, rtz # perform operation
fnmadd.s f30, f23, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x98e15599 # load x3 with value 0x98e15599
sw x3, 0(x2) # store 0x98e15599 in memory
flw f9, 0(x2) # load 0x98e15599 from memory into f9
fnmadd.s f15, f20, f26, f9, dyn # perform operation
fnmadd.s f15, f20, f26, f9, rdn # perform operation
fnmadd.s f15, f20, f26, f9, rmm # perform operation
fnmadd.s f15, f20, f26, f9, rne # perform operation
fnmadd.s f15, f20, f26, f9, rtz # perform operation
fnmadd.s f15, f20, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x79e527d4 # load x3 with value 0x79e527d4
sw x3, 0(x2) # store 0x79e527d4 in memory
flw f20, 0(x2) # load 0x79e527d4 from memory into f20
fnmadd.s f21, f29, f5, f20, dyn # perform operation
fnmadd.s f21, f29, f5, f20, rdn # perform operation
fnmadd.s f21, f29, f5, f20, rmm # perform operation
fnmadd.s f21, f29, f5, f20, rne # perform operation
fnmadd.s f21, f29, f5, f20, rtz # perform operation
fnmadd.s f21, f29, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x46f1ec7a # load x3 with value 0x46f1ec7a
sw x3, 0(x2) # store 0x46f1ec7a in memory
flw f16, 0(x2) # load 0x46f1ec7a from memory into f16
fnmadd.s f20, f30, f27, f16, dyn # perform operation
fnmadd.s f20, f30, f27, f16, rdn # perform operation
fnmadd.s f20, f30, f27, f16, rmm # perform operation
fnmadd.s f20, f30, f27, f16, rne # perform operation
fnmadd.s f20, f30, f27, f16, rtz # perform operation
fnmadd.s f20, f30, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x0bba7e7d # load x3 with value 0x0bba7e7d
sw x3, 0(x2) # store 0x0bba7e7d in memory
flw f7, 0(x2) # load 0x0bba7e7d from memory into f7
fnmadd.s f23, f26, f18, f7, dyn # perform operation
fnmadd.s f23, f26, f18, f7, rdn # perform operation
fnmadd.s f23, f26, f18, f7, rmm # perform operation
fnmadd.s f23, f26, f18, f7, rne # perform operation
fnmadd.s f23, f26, f18, f7, rtz # perform operation
fnmadd.s f23, f26, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x3e5d53db # load x3 with value 0x3e5d53db
sw x3, 0(x2) # store 0x3e5d53db in memory
flw f31, 0(x2) # load 0x3e5d53db from memory into f31
fnmadd.s f3, f25, f18, f31, dyn # perform operation
fnmadd.s f3, f25, f18, f31, rdn # perform operation
fnmadd.s f3, f25, f18, f31, rmm # perform operation
fnmadd.s f3, f25, f18, f31, rne # perform operation
fnmadd.s f3, f25, f18, f31, rtz # perform operation
fnmadd.s f3, f25, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f25, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f25, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xa235e583 # load x3 with value 0xa235e583
sw x3, 0(x2) # store 0xa235e583 in memory
flw f19, 0(x2) # load 0xa235e583 from memory into f19
fnmadd.s f1, f17, f9, f19, dyn # perform operation
fnmadd.s f1, f17, f9, f19, rdn # perform operation
fnmadd.s f1, f17, f9, f19, rmm # perform operation
fnmadd.s f1, f17, f9, f19, rne # perform operation
fnmadd.s f1, f17, f9, f19, rtz # perform operation
fnmadd.s f1, f17, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f17, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f17, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xc97375ed # load x3 with value 0xc97375ed
sw x3, 0(x2) # store 0xc97375ed in memory
flw f2, 0(x2) # load 0xc97375ed from memory into f2
fnmadd.s f19, f6, f9, f2, dyn # perform operation
fnmadd.s f19, f6, f9, f2, rdn # perform operation
fnmadd.s f19, f6, f9, f2, rmm # perform operation
fnmadd.s f19, f6, f9, f2, rne # perform operation
fnmadd.s f19, f6, f9, f2, rtz # perform operation
fnmadd.s f19, f6, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0xf58ecbd8 # load x3 with value 0xf58ecbd8
sw x3, 0(x2) # store 0xf58ecbd8 in memory
flw f15, 0(x2) # load 0xf58ecbd8 from memory into f15
fnmadd.s f14, f25, f26, f15, dyn # perform operation
fnmadd.s f14, f25, f26, f15, rdn # perform operation
fnmadd.s f14, f25, f26, f15, rmm # perform operation
fnmadd.s f14, f25, f26, f15, rne # perform operation
fnmadd.s f14, f25, f26, f15, rtz # perform operation
fnmadd.s f14, f25, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f25, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f25, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x0f962538 # load x3 with value 0x0f962538
sw x3, 0(x2) # store 0x0f962538 in memory
flw f13, 0(x2) # load 0x0f962538 from memory into f13
fnmadd.s f27, f12, f2, f13, dyn # perform operation
fnmadd.s f27, f12, f2, f13, rdn # perform operation
fnmadd.s f27, f12, f2, f13, rmm # perform operation
fnmadd.s f27, f12, f2, f13, rne # perform operation
fnmadd.s f27, f12, f2, f13, rtz # perform operation
fnmadd.s f27, f12, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0xd36ffca3 # load x3 with value 0xd36ffca3
sw x3, 0(x2) # store 0xd36ffca3 in memory
flw f24, 0(x2) # load 0xd36ffca3 from memory into f24
fnmadd.s f2, f9, f21, f24, dyn # perform operation
fnmadd.s f2, f9, f21, f24, rdn # perform operation
fnmadd.s f2, f9, f21, f24, rmm # perform operation
fnmadd.s f2, f9, f21, f24, rne # perform operation
fnmadd.s f2, f9, f21, f24, rtz # perform operation
fnmadd.s f2, f9, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x2766e0bf # load x3 with value 0x2766e0bf
sw x3, 0(x2) # store 0x2766e0bf in memory
flw f25, 0(x2) # load 0x2766e0bf from memory into f25
fnmadd.s f30, f27, f19, f25, dyn # perform operation
fnmadd.s f30, f27, f19, f25, rdn # perform operation
fnmadd.s f30, f27, f19, f25, rmm # perform operation
fnmadd.s f30, f27, f19, f25, rne # perform operation
fnmadd.s f30, f27, f19, f25, rtz # perform operation
fnmadd.s f30, f27, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f27, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f27, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f27, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f27, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f27, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xf45ceda7 # load x3 with value 0xf45ceda7
sw x3, 0(x2) # store 0xf45ceda7 in memory
flw f11, 0(x2) # load 0xf45ceda7 from memory into f11
fnmadd.s f25, f30, f22, f11, dyn # perform operation
fnmadd.s f25, f30, f22, f11, rdn # perform operation
fnmadd.s f25, f30, f22, f11, rmm # perform operation
fnmadd.s f25, f30, f22, f11, rne # perform operation
fnmadd.s f25, f30, f22, f11, rtz # perform operation
fnmadd.s f25, f30, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f22, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0xa18ca337 # load x3 with value 0xa18ca337
sw x3, 0(x2) # store 0xa18ca337 in memory
flw f30, 0(x2) # load 0xa18ca337 from memory into f30
fnmadd.s f21, f27, f16, f30, dyn # perform operation
fnmadd.s f21, f27, f16, f30, rdn # perform operation
fnmadd.s f21, f27, f16, f30, rmm # perform operation
fnmadd.s f21, f27, f16, f30, rne # perform operation
fnmadd.s f21, f27, f16, f30, rtz # perform operation
fnmadd.s f21, f27, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f27, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f27, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x15162f13 # load x3 with value 0x15162f13
sw x3, 0(x2) # store 0x15162f13 in memory
flw f9, 0(x2) # load 0x15162f13 from memory into f9
fnmadd.s f14, f20, f6, f9, dyn # perform operation
fnmadd.s f14, f20, f6, f9, rdn # perform operation
fnmadd.s f14, f20, f6, f9, rmm # perform operation
fnmadd.s f14, f20, f6, f9, rne # perform operation
fnmadd.s f14, f20, f6, f9, rtz # perform operation
fnmadd.s f14, f20, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xa7e5a47e # load x3 with value 0xa7e5a47e
sw x3, 0(x2) # store 0xa7e5a47e in memory
flw f5, 0(x2) # load 0xa7e5a47e from memory into f5
fnmadd.s f15, f7, f29, f5, dyn # perform operation
fnmadd.s f15, f7, f29, f5, rdn # perform operation
fnmadd.s f15, f7, f29, f5, rmm # perform operation
fnmadd.s f15, f7, f29, f5, rne # perform operation
fnmadd.s f15, f7, f29, f5, rtz # perform operation
fnmadd.s f15, f7, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f7, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f7, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f7, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f7, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f7, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x8ad2791d # load x3 with value 0x8ad2791d
sw x3, 0(x2) # store 0x8ad2791d in memory
flw f9, 0(x2) # load 0x8ad2791d from memory into f9
fnmadd.s f3, f30, f13, f9, dyn # perform operation
fnmadd.s f3, f30, f13, f9, rdn # perform operation
fnmadd.s f3, f30, f13, f9, rmm # perform operation
fnmadd.s f3, f30, f13, f9, rne # perform operation
fnmadd.s f3, f30, f13, f9, rtz # perform operation
fnmadd.s f3, f30, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0xbcdd82b7 # load x3 with value 0xbcdd82b7
sw x3, 0(x2) # store 0xbcdd82b7 in memory
flw f7, 0(x2) # load 0xbcdd82b7 from memory into f7
fnmadd.s f14, f28, f30, f7, dyn # perform operation
fnmadd.s f14, f28, f30, f7, rdn # perform operation
fnmadd.s f14, f28, f30, f7, rmm # perform operation
fnmadd.s f14, f28, f30, f7, rne # perform operation
fnmadd.s f14, f28, f30, f7, rtz # perform operation
fnmadd.s f14, f28, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f28, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f28, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xe6006553 # load x3 with value 0xe6006553
sw x3, 0(x2) # store 0xe6006553 in memory
flw f17, 0(x2) # load 0xe6006553 from memory into f17
fnmadd.s f20, f18, f26, f17, dyn # perform operation
fnmadd.s f20, f18, f26, f17, rdn # perform operation
fnmadd.s f20, f18, f26, f17, rmm # perform operation
fnmadd.s f20, f18, f26, f17, rne # perform operation
fnmadd.s f20, f18, f26, f17, rtz # perform operation
fnmadd.s f20, f18, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f18, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x738512ec # load x3 with value 0x738512ec
sw x3, 0(x2) # store 0x738512ec in memory
flw f9, 0(x2) # load 0x738512ec from memory into f9
fnmadd.s f18, f31, f27, f9, dyn # perform operation
fnmadd.s f18, f31, f27, f9, rdn # perform operation
fnmadd.s f18, f31, f27, f9, rmm # perform operation
fnmadd.s f18, f31, f27, f9, rne # perform operation
fnmadd.s f18, f31, f27, f9, rtz # perform operation
fnmadd.s f18, f31, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f31, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f31, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x9187dc1e # load x3 with value 0x9187dc1e
sw x3, 0(x2) # store 0x9187dc1e in memory
flw f20, 0(x2) # load 0x9187dc1e from memory into f20
fnmadd.s f28, f10, f15, f20, dyn # perform operation
fnmadd.s f28, f10, f15, f20, rdn # perform operation
fnmadd.s f28, f10, f15, f20, rmm # perform operation
fnmadd.s f28, f10, f15, f20, rne # perform operation
fnmadd.s f28, f10, f15, f20, rtz # perform operation
fnmadd.s f28, f10, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x10981175 # load x3 with value 0x10981175
sw x3, 0(x2) # store 0x10981175 in memory
flw f23, 0(x2) # load 0x10981175 from memory into f23
fnmadd.s f31, f11, f30, f23, dyn # perform operation
fnmadd.s f31, f11, f30, f23, rdn # perform operation
fnmadd.s f31, f11, f30, f23, rmm # perform operation
fnmadd.s f31, f11, f30, f23, rne # perform operation
fnmadd.s f31, f11, f30, f23, rtz # perform operation
fnmadd.s f31, f11, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0xdf8f0938 # load x3 with value 0xdf8f0938
sw x3, 0(x2) # store 0xdf8f0938 in memory
flw f1, 0(x2) # load 0xdf8f0938 from memory into f1
fnmadd.s f7, f28, f30, f1, dyn # perform operation
fnmadd.s f7, f28, f30, f1, rdn # perform operation
fnmadd.s f7, f28, f30, f1, rmm # perform operation
fnmadd.s f7, f28, f30, f1, rne # perform operation
fnmadd.s f7, f28, f30, f1, rtz # perform operation
fnmadd.s f7, f28, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f28, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f28, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f28, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f28, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f28, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0xbdf35197 # load x3 with value 0xbdf35197
sw x3, 0(x2) # store 0xbdf35197 in memory
flw f2, 0(x2) # load 0xbdf35197 from memory into f2
fnmadd.s f11, f27, f28, f2, dyn # perform operation
fnmadd.s f11, f27, f28, f2, rdn # perform operation
fnmadd.s f11, f27, f28, f2, rmm # perform operation
fnmadd.s f11, f27, f28, f2, rne # perform operation
fnmadd.s f11, f27, f28, f2, rtz # perform operation
fnmadd.s f11, f27, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f27, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f27, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0xe10070bd # load x3 with value 0xe10070bd
sw x3, 0(x2) # store 0xe10070bd in memory
flw f29, 0(x2) # load 0xe10070bd from memory into f29
fnmadd.s f7, f22, f19, f29, dyn # perform operation
fnmadd.s f7, f22, f19, f29, rdn # perform operation
fnmadd.s f7, f22, f19, f29, rmm # perform operation
fnmadd.s f7, f22, f19, f29, rne # perform operation
fnmadd.s f7, f22, f19, f29, rtz # perform operation
fnmadd.s f7, f22, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xa304a819 # load x3 with value 0xa304a819
sw x3, 0(x2) # store 0xa304a819 in memory
flw f31, 0(x2) # load 0xa304a819 from memory into f31
fnmadd.s f23, f14, f27, f31, dyn # perform operation
fnmadd.s f23, f14, f27, f31, rdn # perform operation
fnmadd.s f23, f14, f27, f31, rmm # perform operation
fnmadd.s f23, f14, f27, f31, rne # perform operation
fnmadd.s f23, f14, f27, f31, rtz # perform operation
fnmadd.s f23, f14, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xcce15fe1 # load x3 with value 0xcce15fe1
sw x3, 0(x2) # store 0xcce15fe1 in memory
flw f27, 0(x2) # load 0xcce15fe1 from memory into f27
fnmadd.s f26, f6, f15, f27, dyn # perform operation
fnmadd.s f26, f6, f15, f27, rdn # perform operation
fnmadd.s f26, f6, f15, f27, rmm # perform operation
fnmadd.s f26, f6, f15, f27, rne # perform operation
fnmadd.s f26, f6, f15, f27, rtz # perform operation
fnmadd.s f26, f6, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f15, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0xed62e799 # load x3 with value 0xed62e799
sw x3, 0(x2) # store 0xed62e799 in memory
flw f3, 0(x2) # load 0xed62e799 from memory into f3
fnmadd.s f14, f22, f16, f3, dyn # perform operation
fnmadd.s f14, f22, f16, f3, rdn # perform operation
fnmadd.s f14, f22, f16, f3, rmm # perform operation
fnmadd.s f14, f22, f16, f3, rne # perform operation
fnmadd.s f14, f22, f16, f3, rtz # perform operation
fnmadd.s f14, f22, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x0588c3d3 # load x3 with value 0x0588c3d3
sw x3, 0(x2) # store 0x0588c3d3 in memory
flw f18, 0(x2) # load 0x0588c3d3 from memory into f18
fnmadd.s f12, f5, f6, f18, dyn # perform operation
fnmadd.s f12, f5, f6, f18, rdn # perform operation
fnmadd.s f12, f5, f6, f18, rmm # perform operation
fnmadd.s f12, f5, f6, f18, rne # perform operation
fnmadd.s f12, f5, f6, f18, rtz # perform operation
fnmadd.s f12, f5, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x1f1653d6 # load x3 with value 0x1f1653d6
sw x3, 0(x2) # store 0x1f1653d6 in memory
flw f9, 0(x2) # load 0x1f1653d6 from memory into f9
fnmadd.s f23, f16, f13, f9, dyn # perform operation
fnmadd.s f23, f16, f13, f9, rdn # perform operation
fnmadd.s f23, f16, f13, f9, rmm # perform operation
fnmadd.s f23, f16, f13, f9, rne # perform operation
fnmadd.s f23, f16, f13, f9, rtz # perform operation
fnmadd.s f23, f16, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x0289daf8 # load x3 with value 0x0289daf8
sw x3, 0(x2) # store 0x0289daf8 in memory
flw f18, 0(x2) # load 0x0289daf8 from memory into f18
fnmadd.s f11, f22, f12, f18, dyn # perform operation
fnmadd.s f11, f22, f12, f18, rdn # perform operation
fnmadd.s f11, f22, f12, f18, rmm # perform operation
fnmadd.s f11, f22, f12, f18, rne # perform operation
fnmadd.s f11, f22, f12, f18, rtz # perform operation
fnmadd.s f11, f22, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xe2aeed79 # load x3 with value 0xe2aeed79
sw x3, 0(x2) # store 0xe2aeed79 in memory
flw f21, 0(x2) # load 0xe2aeed79 from memory into f21
fnmadd.s f3, f13, f23, f21, dyn # perform operation
fnmadd.s f3, f13, f23, f21, rdn # perform operation
fnmadd.s f3, f13, f23, f21, rmm # perform operation
fnmadd.s f3, f13, f23, f21, rne # perform operation
fnmadd.s f3, f13, f23, f21, rtz # perform operation
fnmadd.s f3, f13, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f13, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f13, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xa2f1cd56 # load x3 with value 0xa2f1cd56
sw x3, 0(x2) # store 0xa2f1cd56 in memory
flw f3, 0(x2) # load 0xa2f1cd56 from memory into f3
fnmadd.s f19, f23, f9, f3, dyn # perform operation
fnmadd.s f19, f23, f9, f3, rdn # perform operation
fnmadd.s f19, f23, f9, f3, rmm # perform operation
fnmadd.s f19, f23, f9, f3, rne # perform operation
fnmadd.s f19, f23, f9, f3, rtz # perform operation
fnmadd.s f19, f23, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f23, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f23, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xc23d717a # load x3 with value 0xc23d717a
sw x3, 0(x2) # store 0xc23d717a in memory
flw f29, 0(x2) # load 0xc23d717a from memory into f29
fnmadd.s f12, f2, f1, f29, dyn # perform operation
fnmadd.s f12, f2, f1, f29, rdn # perform operation
fnmadd.s f12, f2, f1, f29, rmm # perform operation
fnmadd.s f12, f2, f1, f29, rne # perform operation
fnmadd.s f12, f2, f1, f29, rtz # perform operation
fnmadd.s f12, f2, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x1861d449 # load x3 with value 0x1861d449
sw x3, 0(x2) # store 0x1861d449 in memory
flw f1, 0(x2) # load 0x1861d449 from memory into f1
fnmadd.s f12, f25, f6, f1, dyn # perform operation
fnmadd.s f12, f25, f6, f1, rdn # perform operation
fnmadd.s f12, f25, f6, f1, rmm # perform operation
fnmadd.s f12, f25, f6, f1, rne # perform operation
fnmadd.s f12, f25, f6, f1, rtz # perform operation
fnmadd.s f12, f25, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f25, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f25, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x10725bac # load x3 with value 0x10725bac
sw x3, 0(x2) # store 0x10725bac in memory
flw f12, 0(x2) # load 0x10725bac from memory into f12
fnmadd.s f16, f18, f6, f12, dyn # perform operation
fnmadd.s f16, f18, f6, f12, rdn # perform operation
fnmadd.s f16, f18, f6, f12, rmm # perform operation
fnmadd.s f16, f18, f6, f12, rne # perform operation
fnmadd.s f16, f18, f6, f12, rtz # perform operation
fnmadd.s f16, f18, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0xa14a8539 # load x3 with value 0xa14a8539
sw x3, 0(x2) # store 0xa14a8539 in memory
flw f2, 0(x2) # load 0xa14a8539 from memory into f2
fnmadd.s f25, f13, f8, f2, dyn # perform operation
fnmadd.s f25, f13, f8, f2, rdn # perform operation
fnmadd.s f25, f13, f8, f2, rmm # perform operation
fnmadd.s f25, f13, f8, f2, rne # perform operation
fnmadd.s f25, f13, f8, f2, rtz # perform operation
fnmadd.s f25, f13, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f13, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f13, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f13, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f13, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f13, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0xb8dacbe8 # load x3 with value 0xb8dacbe8
sw x3, 0(x2) # store 0xb8dacbe8 in memory
flw f25, 0(x2) # load 0xb8dacbe8 from memory into f25
fnmadd.s f8, f20, f28, f25, dyn # perform operation
fnmadd.s f8, f20, f28, f25, rdn # perform operation
fnmadd.s f8, f20, f28, f25, rmm # perform operation
fnmadd.s f8, f20, f28, f25, rne # perform operation
fnmadd.s f8, f20, f28, f25, rtz # perform operation
fnmadd.s f8, f20, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x677f3b38 # load x3 with value 0x677f3b38
sw x3, 0(x2) # store 0x677f3b38 in memory
flw f23, 0(x2) # load 0x677f3b38 from memory into f23
fnmadd.s f20, f12, f3, f23, dyn # perform operation
fnmadd.s f20, f12, f3, f23, rdn # perform operation
fnmadd.s f20, f12, f3, f23, rmm # perform operation
fnmadd.s f20, f12, f3, f23, rne # perform operation
fnmadd.s f20, f12, f3, f23, rtz # perform operation
fnmadd.s f20, f12, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x939e18ce # load x3 with value 0x939e18ce
sw x3, 0(x2) # store 0x939e18ce in memory
flw f20, 0(x2) # load 0x939e18ce from memory into f20
fnmadd.s f17, f2, f21, f20, dyn # perform operation
fnmadd.s f17, f2, f21, f20, rdn # perform operation
fnmadd.s f17, f2, f21, f20, rmm # perform operation
fnmadd.s f17, f2, f21, f20, rne # perform operation
fnmadd.s f17, f2, f21, f20, rtz # perform operation
fnmadd.s f17, f2, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xb46d8f76 # load x3 with value 0xb46d8f76
sw x3, 0(x2) # store 0xb46d8f76 in memory
flw f28, 0(x2) # load 0xb46d8f76 from memory into f28
fnmadd.s f19, f8, f30, f28, dyn # perform operation
fnmadd.s f19, f8, f30, f28, rdn # perform operation
fnmadd.s f19, f8, f30, f28, rmm # perform operation
fnmadd.s f19, f8, f30, f28, rne # perform operation
fnmadd.s f19, f8, f30, f28, rtz # perform operation
fnmadd.s f19, f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f8, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xf8404e91 # load x3 with value 0xf8404e91
sw x3, 0(x2) # store 0xf8404e91 in memory
flw f31, 0(x2) # load 0xf8404e91 from memory into f31
fnmadd.s f21, f5, f19, f31, dyn # perform operation
fnmadd.s f21, f5, f19, f31, rdn # perform operation
fnmadd.s f21, f5, f19, f31, rmm # perform operation
fnmadd.s f21, f5, f19, f31, rne # perform operation
fnmadd.s f21, f5, f19, f31, rtz # perform operation
fnmadd.s f21, f5, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f19, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x9409c13e # load x3 with value 0x9409c13e
sw x3, 0(x2) # store 0x9409c13e in memory
flw f2, 0(x2) # load 0x9409c13e from memory into f2
fnmadd.s f17, f26, f8, f2, dyn # perform operation
fnmadd.s f17, f26, f8, f2, rdn # perform operation
fnmadd.s f17, f26, f8, f2, rmm # perform operation
fnmadd.s f17, f26, f8, f2, rne # perform operation
fnmadd.s f17, f26, f8, f2, rtz # perform operation
fnmadd.s f17, f26, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xb1ed0f4c # load x3 with value 0xb1ed0f4c
sw x3, 0(x2) # store 0xb1ed0f4c in memory
flw f31, 0(x2) # load 0xb1ed0f4c from memory into f31
fnmadd.s f30, f1, f13, f31, dyn # perform operation
fnmadd.s f30, f1, f13, f31, rdn # perform operation
fnmadd.s f30, f1, f13, f31, rmm # perform operation
fnmadd.s f30, f1, f13, f31, rne # perform operation
fnmadd.s f30, f1, f13, f31, rtz # perform operation
fnmadd.s f30, f1, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f1, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f1, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f1, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f1, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f1, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xc32d5516 # load x3 with value 0xc32d5516
sw x3, 0(x2) # store 0xc32d5516 in memory
flw f7, 0(x2) # load 0xc32d5516 from memory into f7
fnmadd.s f24, f26, f6, f7, dyn # perform operation
fnmadd.s f24, f26, f6, f7, rdn # perform operation
fnmadd.s f24, f26, f6, f7, rmm # perform operation
fnmadd.s f24, f26, f6, f7, rne # perform operation
fnmadd.s f24, f26, f6, f7, rtz # perform operation
fnmadd.s f24, f26, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f26, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f26, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f26, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f26, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f26, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x06e88758 # load x3 with value 0x06e88758
sw x3, 0(x2) # store 0x06e88758 in memory
flw f9, 0(x2) # load 0x06e88758 from memory into f9
fnmadd.s f1, f15, f21, f9, dyn # perform operation
fnmadd.s f1, f15, f21, f9, rdn # perform operation
fnmadd.s f1, f15, f21, f9, rmm # perform operation
fnmadd.s f1, f15, f21, f9, rne # perform operation
fnmadd.s f1, f15, f21, f9, rtz # perform operation
fnmadd.s f1, f15, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x3ab8ef6a # load x3 with value 0x3ab8ef6a
sw x3, 0(x2) # store 0x3ab8ef6a in memory
flw f31, 0(x2) # load 0x3ab8ef6a from memory into f31
fnmadd.s f1, f6, f28, f31, dyn # perform operation
fnmadd.s f1, f6, f28, f31, rdn # perform operation
fnmadd.s f1, f6, f28, f31, rmm # perform operation
fnmadd.s f1, f6, f28, f31, rne # perform operation
fnmadd.s f1, f6, f28, f31, rtz # perform operation
fnmadd.s f1, f6, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x0f443a46 # load x3 with value 0x0f443a46
sw x3, 0(x2) # store 0x0f443a46 in memory
flw f17, 0(x2) # load 0x0f443a46 from memory into f17
fnmadd.s f27, f16, f29, f17, dyn # perform operation
fnmadd.s f27, f16, f29, f17, rdn # perform operation
fnmadd.s f27, f16, f29, f17, rmm # perform operation
fnmadd.s f27, f16, f29, f17, rne # perform operation
fnmadd.s f27, f16, f29, f17, rtz # perform operation
fnmadd.s f27, f16, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xb11f4632 # load x3 with value 0xb11f4632
sw x3, 0(x2) # store 0xb11f4632 in memory
flw f5, 0(x2) # load 0xb11f4632 from memory into f5
fnmadd.s f24, f30, f8, f5, dyn # perform operation
fnmadd.s f24, f30, f8, f5, rdn # perform operation
fnmadd.s f24, f30, f8, f5, rmm # perform operation
fnmadd.s f24, f30, f8, f5, rne # perform operation
fnmadd.s f24, f30, f8, f5, rtz # perform operation
fnmadd.s f24, f30, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x360d76c6 # load x3 with value 0x360d76c6
sw x3, 0(x2) # store 0x360d76c6 in memory
flw f7, 0(x2) # load 0x360d76c6 from memory into f7
fnmadd.s f5, f17, f14, f7, dyn # perform operation
fnmadd.s f5, f17, f14, f7, rdn # perform operation
fnmadd.s f5, f17, f14, f7, rmm # perform operation
fnmadd.s f5, f17, f14, f7, rne # perform operation
fnmadd.s f5, f17, f14, f7, rtz # perform operation
fnmadd.s f5, f17, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x07012154 # load x3 with value 0x07012154
sw x3, 0(x2) # store 0x07012154 in memory
flw f6, 0(x2) # load 0x07012154 from memory into f6
fnmadd.s f3, f1, f29, f6, dyn # perform operation
fnmadd.s f3, f1, f29, f6, rdn # perform operation
fnmadd.s f3, f1, f29, f6, rmm # perform operation
fnmadd.s f3, f1, f29, f6, rne # perform operation
fnmadd.s f3, f1, f29, f6, rtz # perform operation
fnmadd.s f3, f1, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xa3e3eddc # load x3 with value 0xa3e3eddc
sw x3, 0(x2) # store 0xa3e3eddc in memory
flw f2, 0(x2) # load 0xa3e3eddc from memory into f2
fnmadd.s f5, f8, f27, f2, dyn # perform operation
fnmadd.s f5, f8, f27, f2, rdn # perform operation
fnmadd.s f5, f8, f27, f2, rmm # perform operation
fnmadd.s f5, f8, f27, f2, rne # perform operation
fnmadd.s f5, f8, f27, f2, rtz # perform operation
fnmadd.s f5, f8, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x95f784b9 # load x3 with value 0x95f784b9
sw x3, 0(x2) # store 0x95f784b9 in memory
flw f26, 0(x2) # load 0x95f784b9 from memory into f26
fnmadd.s f31, f8, f28, f26, dyn # perform operation
fnmadd.s f31, f8, f28, f26, rdn # perform operation
fnmadd.s f31, f8, f28, f26, rmm # perform operation
fnmadd.s f31, f8, f28, f26, rne # perform operation
fnmadd.s f31, f8, f28, f26, rtz # perform operation
fnmadd.s f31, f8, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f8, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f8, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x6c2f4cac # load x3 with value 0x6c2f4cac
sw x3, 0(x2) # store 0x6c2f4cac in memory
flw f6, 0(x2) # load 0x6c2f4cac from memory into f6
fnmadd.s f21, f29, f25, f6, dyn # perform operation
fnmadd.s f21, f29, f25, f6, rdn # perform operation
fnmadd.s f21, f29, f25, f6, rmm # perform operation
fnmadd.s f21, f29, f25, f6, rne # perform operation
fnmadd.s f21, f29, f25, f6, rtz # perform operation
fnmadd.s f21, f29, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x365def8c # load x3 with value 0x365def8c
sw x3, 0(x2) # store 0x365def8c in memory
flw f25, 0(x2) # load 0x365def8c from memory into f25
fnmadd.s f14, f24, f8, f25, dyn # perform operation
fnmadd.s f14, f24, f8, f25, rdn # perform operation
fnmadd.s f14, f24, f8, f25, rmm # perform operation
fnmadd.s f14, f24, f8, f25, rne # perform operation
fnmadd.s f14, f24, f8, f25, rtz # perform operation
fnmadd.s f14, f24, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x62236464 # load x3 with value 0x62236464
sw x3, 0(x2) # store 0x62236464 in memory
flw f30, 0(x2) # load 0x62236464 from memory into f30
fnmadd.s f7, f2, f10, f30, dyn # perform operation
fnmadd.s f7, f2, f10, f30, rdn # perform operation
fnmadd.s f7, f2, f10, f30, rmm # perform operation
fnmadd.s f7, f2, f10, f30, rne # perform operation
fnmadd.s f7, f2, f10, f30, rtz # perform operation
fnmadd.s f7, f2, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x93e53f41 # load x3 with value 0x93e53f41
sw x3, 0(x2) # store 0x93e53f41 in memory
flw f25, 0(x2) # load 0x93e53f41 from memory into f25
fnmadd.s f6, f7, f2, f25, dyn # perform operation
fnmadd.s f6, f7, f2, f25, rdn # perform operation
fnmadd.s f6, f7, f2, f25, rmm # perform operation
fnmadd.s f6, f7, f2, f25, rne # perform operation
fnmadd.s f6, f7, f2, f25, rtz # perform operation
fnmadd.s f6, f7, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x8ba33557 # load x3 with value 0x8ba33557
sw x3, 0(x2) # store 0x8ba33557 in memory
flw f15, 0(x2) # load 0x8ba33557 from memory into f15
fnmadd.s f13, f22, f20, f15, dyn # perform operation
fnmadd.s f13, f22, f20, f15, rdn # perform operation
fnmadd.s f13, f22, f20, f15, rmm # perform operation
fnmadd.s f13, f22, f20, f15, rne # perform operation
fnmadd.s f13, f22, f20, f15, rtz # perform operation
fnmadd.s f13, f22, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f22, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x1686302c # load x3 with value 0x1686302c
sw x3, 0(x2) # store 0x1686302c in memory
flw f18, 0(x2) # load 0x1686302c from memory into f18
fnmadd.s f15, f31, f16, f18, dyn # perform operation
fnmadd.s f15, f31, f16, f18, rdn # perform operation
fnmadd.s f15, f31, f16, f18, rmm # perform operation
fnmadd.s f15, f31, f16, f18, rne # perform operation
fnmadd.s f15, f31, f16, f18, rtz # perform operation
fnmadd.s f15, f31, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f31, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f31, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f31, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f31, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f31, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xb9074009 # load x3 with value 0xb9074009
sw x3, 0(x2) # store 0xb9074009 in memory
flw f22, 0(x2) # load 0xb9074009 from memory into f22
fnmadd.s f15, f9, f20, f22, dyn # perform operation
fnmadd.s f15, f9, f20, f22, rdn # perform operation
fnmadd.s f15, f9, f20, f22, rmm # perform operation
fnmadd.s f15, f9, f20, f22, rne # perform operation
fnmadd.s f15, f9, f20, f22, rtz # perform operation
fnmadd.s f15, f9, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xc47ac2f7 # load x3 with value 0xc47ac2f7
sw x3, 0(x2) # store 0xc47ac2f7 in memory
flw f21, 0(x2) # load 0xc47ac2f7 from memory into f21
fnmadd.s f12, f13, f27, f21, dyn # perform operation
fnmadd.s f12, f13, f27, f21, rdn # perform operation
fnmadd.s f12, f13, f27, f21, rmm # perform operation
fnmadd.s f12, f13, f27, f21, rne # perform operation
fnmadd.s f12, f13, f27, f21, rtz # perform operation
fnmadd.s f12, f13, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x12923739 # load x3 with value 0x12923739
sw x3, 0(x2) # store 0x12923739 in memory
flw f26, 0(x2) # load 0x12923739 from memory into f26
fnmadd.s f31, f16, f10, f26, dyn # perform operation
fnmadd.s f31, f16, f10, f26, rdn # perform operation
fnmadd.s f31, f16, f10, f26, rmm # perform operation
fnmadd.s f31, f16, f10, f26, rne # perform operation
fnmadd.s f31, f16, f10, f26, rtz # perform operation
fnmadd.s f31, f16, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f16, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f16, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x874f56e7 # load x3 with value 0x874f56e7
sw x3, 0(x2) # store 0x874f56e7 in memory
flw f29, 0(x2) # load 0x874f56e7 from memory into f29
fnmadd.s f16, f26, f19, f29, dyn # perform operation
fnmadd.s f16, f26, f19, f29, rdn # perform operation
fnmadd.s f16, f26, f19, f29, rmm # perform operation
fnmadd.s f16, f26, f19, f29, rne # perform operation
fnmadd.s f16, f26, f19, f29, rtz # perform operation
fnmadd.s f16, f26, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f26, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f26, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f26, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f26, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f26, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x7752e609 # load x3 with value 0x7752e609
sw x3, 0(x2) # store 0x7752e609 in memory
flw f13, 0(x2) # load 0x7752e609 from memory into f13
fnmadd.s f7, f5, f12, f13, dyn # perform operation
fnmadd.s f7, f5, f12, f13, rdn # perform operation
fnmadd.s f7, f5, f12, f13, rmm # perform operation
fnmadd.s f7, f5, f12, f13, rne # perform operation
fnmadd.s f7, f5, f12, f13, rtz # perform operation
fnmadd.s f7, f5, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xf9bdb521 # load x3 with value 0xf9bdb521
sw x3, 0(x2) # store 0xf9bdb521 in memory
flw f1, 0(x2) # load 0xf9bdb521 from memory into f1
fnmadd.s f22, f17, f28, f1, dyn # perform operation
fnmadd.s f22, f17, f28, f1, rdn # perform operation
fnmadd.s f22, f17, f28, f1, rmm # perform operation
fnmadd.s f22, f17, f28, f1, rne # perform operation
fnmadd.s f22, f17, f28, f1, rtz # perform operation
fnmadd.s f22, f17, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x6a0cb5cd # load x3 with value 0x6a0cb5cd
sw x3, 0(x2) # store 0x6a0cb5cd in memory
flw f6, 0(x2) # load 0x6a0cb5cd from memory into f6
fnmadd.s f25, f1, f27, f6, dyn # perform operation
fnmadd.s f25, f1, f27, f6, rdn # perform operation
fnmadd.s f25, f1, f27, f6, rmm # perform operation
fnmadd.s f25, f1, f27, f6, rne # perform operation
fnmadd.s f25, f1, f27, f6, rtz # perform operation
fnmadd.s f25, f1, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f1, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f1, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x71b4ded6 # load x3 with value 0x71b4ded6
sw x3, 0(x2) # store 0x71b4ded6 in memory
flw f18, 0(x2) # load 0x71b4ded6 from memory into f18
fnmadd.s f9, f7, f14, f18, dyn # perform operation
fnmadd.s f9, f7, f14, f18, rdn # perform operation
fnmadd.s f9, f7, f14, f18, rmm # perform operation
fnmadd.s f9, f7, f14, f18, rne # perform operation
fnmadd.s f9, f7, f14, f18, rtz # perform operation
fnmadd.s f9, f7, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f7, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f7, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f7, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f7, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f7, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x87e72b6d # load x3 with value 0x87e72b6d
sw x3, 0(x2) # store 0x87e72b6d in memory
flw f24, 0(x2) # load 0x87e72b6d from memory into f24
fnmadd.s f14, f17, f16, f24, dyn # perform operation
fnmadd.s f14, f17, f16, f24, rdn # perform operation
fnmadd.s f14, f17, f16, f24, rmm # perform operation
fnmadd.s f14, f17, f16, f24, rne # perform operation
fnmadd.s f14, f17, f16, f24, rtz # perform operation
fnmadd.s f14, f17, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f17, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f17, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xeb92cb93 # load x3 with value 0xeb92cb93
sw x3, 0(x2) # store 0xeb92cb93 in memory
flw f24, 0(x2) # load 0xeb92cb93 from memory into f24
fnmadd.s f31, f20, f9, f24, dyn # perform operation
fnmadd.s f31, f20, f9, f24, rdn # perform operation
fnmadd.s f31, f20, f9, f24, rmm # perform operation
fnmadd.s f31, f20, f9, f24, rne # perform operation
fnmadd.s f31, f20, f9, f24, rtz # perform operation
fnmadd.s f31, f20, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x2f945ece # load x3 with value 0x2f945ece
sw x3, 0(x2) # store 0x2f945ece in memory
flw f16, 0(x2) # load 0x2f945ece from memory into f16
fnmadd.s f3, f21, f9, f16, dyn # perform operation
fnmadd.s f3, f21, f9, f16, rdn # perform operation
fnmadd.s f3, f21, f9, f16, rmm # perform operation
fnmadd.s f3, f21, f9, f16, rne # perform operation
fnmadd.s f3, f21, f9, f16, rtz # perform operation
fnmadd.s f3, f21, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f21, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f21, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0xa9aac415 # load x3 with value 0xa9aac415
sw x3, 0(x2) # store 0xa9aac415 in memory
flw f17, 0(x2) # load 0xa9aac415 from memory into f17
fnmadd.s f29, f23, f18, f17, dyn # perform operation
fnmadd.s f29, f23, f18, f17, rdn # perform operation
fnmadd.s f29, f23, f18, f17, rmm # perform operation
fnmadd.s f29, f23, f18, f17, rne # perform operation
fnmadd.s f29, f23, f18, f17, rtz # perform operation
fnmadd.s f29, f23, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0xb37ee702 # load x3 with value 0xb37ee702
sw x3, 0(x2) # store 0xb37ee702 in memory
flw f28, 0(x2) # load 0xb37ee702 from memory into f28
fnmadd.s f27, f26, f10, f28, dyn # perform operation
fnmadd.s f27, f26, f10, f28, rdn # perform operation
fnmadd.s f27, f26, f10, f28, rmm # perform operation
fnmadd.s f27, f26, f10, f28, rne # perform operation
fnmadd.s f27, f26, f10, f28, rtz # perform operation
fnmadd.s f27, f26, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x728a165e # load x3 with value 0x728a165e
sw x3, 0(x2) # store 0x728a165e in memory
flw f22, 0(x2) # load 0x728a165e from memory into f22
fnmadd.s f8, f28, f16, f22, dyn # perform operation
fnmadd.s f8, f28, f16, f22, rdn # perform operation
fnmadd.s f8, f28, f16, f22, rmm # perform operation
fnmadd.s f8, f28, f16, f22, rne # perform operation
fnmadd.s f8, f28, f16, f22, rtz # perform operation
fnmadd.s f8, f28, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f28, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f28, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f28, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f28, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f28, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x9ad10933 # load x3 with value 0x9ad10933
sw x3, 0(x2) # store 0x9ad10933 in memory
flw f15, 0(x2) # load 0x9ad10933 from memory into f15
fnmadd.s f1, f13, f26, f15, dyn # perform operation
fnmadd.s f1, f13, f26, f15, rdn # perform operation
fnmadd.s f1, f13, f26, f15, rmm # perform operation
fnmadd.s f1, f13, f26, f15, rne # perform operation
fnmadd.s f1, f13, f26, f15, rtz # perform operation
fnmadd.s f1, f13, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x108e9e2e # load x3 with value 0x108e9e2e
sw x3, 0(x2) # store 0x108e9e2e in memory
flw f9, 0(x2) # load 0x108e9e2e from memory into f9
fnmadd.s f3, f16, f26, f9, dyn # perform operation
fnmadd.s f3, f16, f26, f9, rdn # perform operation
fnmadd.s f3, f16, f26, f9, rmm # perform operation
fnmadd.s f3, f16, f26, f9, rne # perform operation
fnmadd.s f3, f16, f26, f9, rtz # perform operation
fnmadd.s f3, f16, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f16, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f16, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x85caa2d0 # load x3 with value 0x85caa2d0
sw x3, 0(x2) # store 0x85caa2d0 in memory
flw f31, 0(x2) # load 0x85caa2d0 from memory into f31
fnmadd.s f2, f3, f21, f31, dyn # perform operation
fnmadd.s f2, f3, f21, f31, rdn # perform operation
fnmadd.s f2, f3, f21, f31, rmm # perform operation
fnmadd.s f2, f3, f21, f31, rne # perform operation
fnmadd.s f2, f3, f21, f31, rtz # perform operation
fnmadd.s f2, f3, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f21, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xf764e04f # load x3 with value 0xf764e04f
sw x3, 0(x2) # store 0xf764e04f in memory
flw f9, 0(x2) # load 0xf764e04f from memory into f9
fnmadd.s f3, f26, f7, f9, dyn # perform operation
fnmadd.s f3, f26, f7, f9, rdn # perform operation
fnmadd.s f3, f26, f7, f9, rmm # perform operation
fnmadd.s f3, f26, f7, f9, rne # perform operation
fnmadd.s f3, f26, f7, f9, rtz # perform operation
fnmadd.s f3, f26, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x7a3fd3cd # load x3 with value 0x7a3fd3cd
sw x3, 0(x2) # store 0x7a3fd3cd in memory
flw f26, 0(x2) # load 0x7a3fd3cd from memory into f26
fnmadd.s f27, f28, f15, f26, dyn # perform operation
fnmadd.s f27, f28, f15, f26, rdn # perform operation
fnmadd.s f27, f28, f15, f26, rmm # perform operation
fnmadd.s f27, f28, f15, f26, rne # perform operation
fnmadd.s f27, f28, f15, f26, rtz # perform operation
fnmadd.s f27, f28, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x1a069070 # load x3 with value 0x1a069070
sw x3, 0(x2) # store 0x1a069070 in memory
flw f21, 0(x2) # load 0x1a069070 from memory into f21
fnmadd.s f6, f10, f13, f21, dyn # perform operation
fnmadd.s f6, f10, f13, f21, rdn # perform operation
fnmadd.s f6, f10, f13, f21, rmm # perform operation
fnmadd.s f6, f10, f13, f21, rne # perform operation
fnmadd.s f6, f10, f13, f21, rtz # perform operation
fnmadd.s f6, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x1d25e2df # load x3 with value 0x1d25e2df
sw x3, 0(x2) # store 0x1d25e2df in memory
flw f27, 0(x2) # load 0x1d25e2df from memory into f27
fnmadd.s f3, f18, f8, f27, dyn # perform operation
fnmadd.s f3, f18, f8, f27, rdn # perform operation
fnmadd.s f3, f18, f8, f27, rmm # perform operation
fnmadd.s f3, f18, f8, f27, rne # perform operation
fnmadd.s f3, f18, f8, f27, rtz # perform operation
fnmadd.s f3, f18, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x39f4b650 # load x3 with value 0x39f4b650
sw x3, 0(x2) # store 0x39f4b650 in memory
flw f12, 0(x2) # load 0x39f4b650 from memory into f12
fnmadd.s f22, f9, f27, f12, dyn # perform operation
fnmadd.s f22, f9, f27, f12, rdn # perform operation
fnmadd.s f22, f9, f27, f12, rmm # perform operation
fnmadd.s f22, f9, f27, f12, rne # perform operation
fnmadd.s f22, f9, f27, f12, rtz # perform operation
fnmadd.s f22, f9, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f9, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f9, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x35b6bd63 # load x3 with value 0x35b6bd63
sw x3, 0(x2) # store 0x35b6bd63 in memory
flw f23, 0(x2) # load 0x35b6bd63 from memory into f23
fnmadd.s f31, f30, f14, f23, dyn # perform operation
fnmadd.s f31, f30, f14, f23, rdn # perform operation
fnmadd.s f31, f30, f14, f23, rmm # perform operation
fnmadd.s f31, f30, f14, f23, rne # perform operation
fnmadd.s f31, f30, f14, f23, rtz # perform operation
fnmadd.s f31, f30, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x43223e85 # load x3 with value 0x43223e85
sw x3, 0(x2) # store 0x43223e85 in memory
flw f6, 0(x2) # load 0x43223e85 from memory into f6
fnmadd.s f31, f5, f3, f6, dyn # perform operation
fnmadd.s f31, f5, f3, f6, rdn # perform operation
fnmadd.s f31, f5, f3, f6, rmm # perform operation
fnmadd.s f31, f5, f3, f6, rne # perform operation
fnmadd.s f31, f5, f3, f6, rtz # perform operation
fnmadd.s f31, f5, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xf2790ddd # load x3 with value 0xf2790ddd
sw x3, 0(x2) # store 0xf2790ddd in memory
flw f24, 0(x2) # load 0xf2790ddd from memory into f24
fnmadd.s f6, f30, f15, f24, dyn # perform operation
fnmadd.s f6, f30, f15, f24, rdn # perform operation
fnmadd.s f6, f30, f15, f24, rmm # perform operation
fnmadd.s f6, f30, f15, f24, rne # perform operation
fnmadd.s f6, f30, f15, f24, rtz # perform operation
fnmadd.s f6, f30, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x8e11a615 # load x3 with value 0x8e11a615
sw x3, 0(x2) # store 0x8e11a615 in memory
flw f31, 0(x2) # load 0x8e11a615 from memory into f31
fnmadd.s f14, f2, f20, f31, dyn # perform operation
fnmadd.s f14, f2, f20, f31, rdn # perform operation
fnmadd.s f14, f2, f20, f31, rmm # perform operation
fnmadd.s f14, f2, f20, f31, rne # perform operation
fnmadd.s f14, f2, f20, f31, rtz # perform operation
fnmadd.s f14, f2, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f2, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f2, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x72e87a00 # load x3 with value 0x72e87a00
sw x3, 0(x2) # store 0x72e87a00 in memory
flw f28, 0(x2) # load 0x72e87a00 from memory into f28
fnmadd.s f1, f14, f31, f28, dyn # perform operation
fnmadd.s f1, f14, f31, f28, rdn # perform operation
fnmadd.s f1, f14, f31, f28, rmm # perform operation
fnmadd.s f1, f14, f31, f28, rne # perform operation
fnmadd.s f1, f14, f31, f28, rtz # perform operation
fnmadd.s f1, f14, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f14, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f14, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x77854cc3 # load x3 with value 0x77854cc3
sw x3, 0(x2) # store 0x77854cc3 in memory
flw f1, 0(x2) # load 0x77854cc3 from memory into f1
fnmadd.s f20, f19, f25, f1, dyn # perform operation
fnmadd.s f20, f19, f25, f1, rdn # perform operation
fnmadd.s f20, f19, f25, f1, rmm # perform operation
fnmadd.s f20, f19, f25, f1, rne # perform operation
fnmadd.s f20, f19, f25, f1, rtz # perform operation
fnmadd.s f20, f19, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0xfda228a2 # load x3 with value 0xfda228a2
sw x3, 0(x2) # store 0xfda228a2 in memory
flw f18, 0(x2) # load 0xfda228a2 from memory into f18
fnmadd.s f2, f3, f14, f18, dyn # perform operation
fnmadd.s f2, f3, f14, f18, rdn # perform operation
fnmadd.s f2, f3, f14, f18, rmm # perform operation
fnmadd.s f2, f3, f14, f18, rne # perform operation
fnmadd.s f2, f3, f14, f18, rtz # perform operation
fnmadd.s f2, f3, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xe51c1c5e # load x3 with value 0xe51c1c5e
sw x3, 0(x2) # store 0xe51c1c5e in memory
flw f12, 0(x2) # load 0xe51c1c5e from memory into f12
fnmadd.s f27, f2, f18, f12, dyn # perform operation
fnmadd.s f27, f2, f18, f12, rdn # perform operation
fnmadd.s f27, f2, f18, f12, rmm # perform operation
fnmadd.s f27, f2, f18, f12, rne # perform operation
fnmadd.s f27, f2, f18, f12, rtz # perform operation
fnmadd.s f27, f2, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f2, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x12af20d9 # load x3 with value 0x12af20d9
sw x3, 0(x2) # store 0x12af20d9 in memory
flw f21, 0(x2) # load 0x12af20d9 from memory into f21
fnmadd.s f25, f2, f16, f21, dyn # perform operation
fnmadd.s f25, f2, f16, f21, rdn # perform operation
fnmadd.s f25, f2, f16, f21, rmm # perform operation
fnmadd.s f25, f2, f16, f21, rne # perform operation
fnmadd.s f25, f2, f16, f21, rtz # perform operation
fnmadd.s f25, f2, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xf36fc84b # load x3 with value 0xf36fc84b
sw x3, 0(x2) # store 0xf36fc84b in memory
flw f6, 0(x2) # load 0xf36fc84b from memory into f6
fnmadd.s f8, f20, f17, f6, dyn # perform operation
fnmadd.s f8, f20, f17, f6, rdn # perform operation
fnmadd.s f8, f20, f17, f6, rmm # perform operation
fnmadd.s f8, f20, f17, f6, rne # perform operation
fnmadd.s f8, f20, f17, f6, rtz # perform operation
fnmadd.s f8, f20, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x98cf0513 # load x3 with value 0x98cf0513
sw x3, 0(x2) # store 0x98cf0513 in memory
flw f23, 0(x2) # load 0x98cf0513 from memory into f23
fnmadd.s f15, f24, f21, f23, dyn # perform operation
fnmadd.s f15, f24, f21, f23, rdn # perform operation
fnmadd.s f15, f24, f21, f23, rmm # perform operation
fnmadd.s f15, f24, f21, f23, rne # perform operation
fnmadd.s f15, f24, f21, f23, rtz # perform operation
fnmadd.s f15, f24, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f24, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f24, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x923c13fd # load x3 with value 0x923c13fd
sw x3, 0(x2) # store 0x923c13fd in memory
flw f19, 0(x2) # load 0x923c13fd from memory into f19
fnmadd.s f18, f22, f13, f19, dyn # perform operation
fnmadd.s f18, f22, f13, f19, rdn # perform operation
fnmadd.s f18, f22, f13, f19, rmm # perform operation
fnmadd.s f18, f22, f13, f19, rne # perform operation
fnmadd.s f18, f22, f13, f19, rtz # perform operation
fnmadd.s f18, f22, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xc5dbaabc # load x3 with value 0xc5dbaabc
sw x3, 0(x2) # store 0xc5dbaabc in memory
flw f26, 0(x2) # load 0xc5dbaabc from memory into f26
fnmadd.s f14, f30, f23, f26, dyn # perform operation
fnmadd.s f14, f30, f23, f26, rdn # perform operation
fnmadd.s f14, f30, f23, f26, rmm # perform operation
fnmadd.s f14, f30, f23, f26, rne # perform operation
fnmadd.s f14, f30, f23, f26, rtz # perform operation
fnmadd.s f14, f30, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f30, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f30, f23, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x2dc3824d # load x3 with value 0x2dc3824d
sw x3, 0(x2) # store 0x2dc3824d in memory
flw f12, 0(x2) # load 0x2dc3824d from memory into f12
fnmadd.s f24, f5, f3, f12, dyn # perform operation
fnmadd.s f24, f5, f3, f12, rdn # perform operation
fnmadd.s f24, f5, f3, f12, rmm # perform operation
fnmadd.s f24, f5, f3, f12, rne # perform operation
fnmadd.s f24, f5, f3, f12, rtz # perform operation
fnmadd.s f24, f5, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f5, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f5, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f5, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f5, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f5, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xf7440406 # load x3 with value 0xf7440406
sw x3, 0(x2) # store 0xf7440406 in memory
flw f13, 0(x2) # load 0xf7440406 from memory into f13
fnmadd.s f30, f20, f2, f13, dyn # perform operation
fnmadd.s f30, f20, f2, f13, rdn # perform operation
fnmadd.s f30, f20, f2, f13, rmm # perform operation
fnmadd.s f30, f20, f2, f13, rne # perform operation
fnmadd.s f30, f20, f2, f13, rtz # perform operation
fnmadd.s f30, f20, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f20, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x6610e4f7 # load x3 with value 0x6610e4f7
sw x3, 0(x2) # store 0x6610e4f7 in memory
flw f31, 0(x2) # load 0x6610e4f7 from memory into f31
fnmadd.s f21, f19, f3, f31, dyn # perform operation
fnmadd.s f21, f19, f3, f31, rdn # perform operation
fnmadd.s f21, f19, f3, f31, rmm # perform operation
fnmadd.s f21, f19, f3, f31, rne # perform operation
fnmadd.s f21, f19, f3, f31, rtz # perform operation
fnmadd.s f21, f19, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f19, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f19, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f19, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f19, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f19, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x4128b220 # load x3 with value 0x4128b220
sw x3, 0(x2) # store 0x4128b220 in memory
flw f10, 0(x2) # load 0x4128b220 from memory into f10
fnmadd.s f3, f18, f7, f10, dyn # perform operation
fnmadd.s f3, f18, f7, f10, rdn # perform operation
fnmadd.s f3, f18, f7, f10, rmm # perform operation
fnmadd.s f3, f18, f7, f10, rne # perform operation
fnmadd.s f3, f18, f7, f10, rtz # perform operation
fnmadd.s f3, f18, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f18, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f18, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xea775c01 # load x3 with value 0xea775c01
sw x3, 0(x2) # store 0xea775c01 in memory
flw f23, 0(x2) # load 0xea775c01 from memory into f23
fnmadd.s f28, f19, f5, f23, dyn # perform operation
fnmadd.s f28, f19, f5, f23, rdn # perform operation
fnmadd.s f28, f19, f5, f23, rmm # perform operation
fnmadd.s f28, f19, f5, f23, rne # perform operation
fnmadd.s f28, f19, f5, f23, rtz # perform operation
fnmadd.s f28, f19, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xb7c30a64 # load x3 with value 0xb7c30a64
sw x3, 0(x2) # store 0xb7c30a64 in memory
flw f5, 0(x2) # load 0xb7c30a64 from memory into f5
fnmadd.s f2, f12, f9, f5, dyn # perform operation
fnmadd.s f2, f12, f9, f5, rdn # perform operation
fnmadd.s f2, f12, f9, f5, rmm # perform operation
fnmadd.s f2, f12, f9, f5, rne # perform operation
fnmadd.s f2, f12, f9, f5, rtz # perform operation
fnmadd.s f2, f12, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xd6bf7b65 # load x3 with value 0xd6bf7b65
sw x3, 0(x2) # store 0xd6bf7b65 in memory
flw f28, 0(x2) # load 0xd6bf7b65 from memory into f28
fnmadd.s f22, f2, f31, f28, dyn # perform operation
fnmadd.s f22, f2, f31, f28, rdn # perform operation
fnmadd.s f22, f2, f31, f28, rmm # perform operation
fnmadd.s f22, f2, f31, f28, rne # perform operation
fnmadd.s f22, f2, f31, f28, rtz # perform operation
fnmadd.s f22, f2, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f2, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f2, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f2, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f2, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f2, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x508c8870 # load x3 with value 0x508c8870
sw x3, 0(x2) # store 0x508c8870 in memory
flw f25, 0(x2) # load 0x508c8870 from memory into f25
fnmadd.s f14, f6, f24, f25, dyn # perform operation
fnmadd.s f14, f6, f24, f25, rdn # perform operation
fnmadd.s f14, f6, f24, f25, rmm # perform operation
fnmadd.s f14, f6, f24, f25, rne # perform operation
fnmadd.s f14, f6, f24, f25, rtz # perform operation
fnmadd.s f14, f6, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f6, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f6, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x2cf9762d # load x3 with value 0x2cf9762d
sw x3, 0(x2) # store 0x2cf9762d in memory
flw f19, 0(x2) # load 0x2cf9762d from memory into f19
fnmadd.s f21, f29, f10, f19, dyn # perform operation
fnmadd.s f21, f29, f10, f19, rdn # perform operation
fnmadd.s f21, f29, f10, f19, rmm # perform operation
fnmadd.s f21, f29, f10, f19, rne # perform operation
fnmadd.s f21, f29, f10, f19, rtz # perform operation
fnmadd.s f21, f29, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x34e489f9 # load x3 with value 0x34e489f9
sw x3, 0(x2) # store 0x34e489f9 in memory
flw f8, 0(x2) # load 0x34e489f9 from memory into f8
fnmadd.s f6, f5, f14, f8, dyn # perform operation
fnmadd.s f6, f5, f14, f8, rdn # perform operation
fnmadd.s f6, f5, f14, f8, rmm # perform operation
fnmadd.s f6, f5, f14, f8, rne # perform operation
fnmadd.s f6, f5, f14, f8, rtz # perform operation
fnmadd.s f6, f5, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f5, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f5, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f5, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f5, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f5, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x7b8f44ef # load x3 with value 0x7b8f44ef
sw x3, 0(x2) # store 0x7b8f44ef in memory
flw f8, 0(x2) # load 0x7b8f44ef from memory into f8
fnmadd.s f5, f9, f6, f8, dyn # perform operation
fnmadd.s f5, f9, f6, f8, rdn # perform operation
fnmadd.s f5, f9, f6, f8, rmm # perform operation
fnmadd.s f5, f9, f6, f8, rne # perform operation
fnmadd.s f5, f9, f6, f8, rtz # perform operation
fnmadd.s f5, f9, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f9, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f9, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xe3270a94 # load x3 with value 0xe3270a94
sw x3, 0(x2) # store 0xe3270a94 in memory
flw f13, 0(x2) # load 0xe3270a94 from memory into f13
fnmadd.s f8, f9, f27, f13, dyn # perform operation
fnmadd.s f8, f9, f27, f13, rdn # perform operation
fnmadd.s f8, f9, f27, f13, rmm # perform operation
fnmadd.s f8, f9, f27, f13, rne # perform operation
fnmadd.s f8, f9, f27, f13, rtz # perform operation
fnmadd.s f8, f9, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f9, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f9, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x3b56256d # load x3 with value 0x3b56256d
sw x3, 0(x2) # store 0x3b56256d in memory
flw f23, 0(x2) # load 0x3b56256d from memory into f23
fnmadd.s f24, f20, f28, f23, dyn # perform operation
fnmadd.s f24, f20, f28, f23, rdn # perform operation
fnmadd.s f24, f20, f28, f23, rmm # perform operation
fnmadd.s f24, f20, f28, f23, rne # perform operation
fnmadd.s f24, f20, f28, f23, rtz # perform operation
fnmadd.s f24, f20, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x5cfa8d60 # load x3 with value 0x5cfa8d60
sw x3, 0(x2) # store 0x5cfa8d60 in memory
flw f18, 0(x2) # load 0x5cfa8d60 from memory into f18
fnmadd.s f17, f10, f15, f18, dyn # perform operation
fnmadd.s f17, f10, f15, f18, rdn # perform operation
fnmadd.s f17, f10, f15, f18, rmm # perform operation
fnmadd.s f17, f10, f15, f18, rne # perform operation
fnmadd.s f17, f10, f15, f18, rtz # perform operation
fnmadd.s f17, f10, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f10, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x958ae415 # load x3 with value 0x958ae415
sw x3, 0(x2) # store 0x958ae415 in memory
flw f26, 0(x2) # load 0x958ae415 from memory into f26
fnmadd.s f9, f19, f15, f26, dyn # perform operation
fnmadd.s f9, f19, f15, f26, rdn # perform operation
fnmadd.s f9, f19, f15, f26, rmm # perform operation
fnmadd.s f9, f19, f15, f26, rne # perform operation
fnmadd.s f9, f19, f15, f26, rtz # perform operation
fnmadd.s f9, f19, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x00bc2cb1 # load x3 with value 0x00bc2cb1
sw x3, 0(x2) # store 0x00bc2cb1 in memory
flw f25, 0(x2) # load 0x00bc2cb1 from memory into f25
fnmadd.s f22, f10, f8, f25, dyn # perform operation
fnmadd.s f22, f10, f8, f25, rdn # perform operation
fnmadd.s f22, f10, f8, f25, rmm # perform operation
fnmadd.s f22, f10, f8, f25, rne # perform operation
fnmadd.s f22, f10, f8, f25, rtz # perform operation
fnmadd.s f22, f10, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f10, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f10, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x557e1518 # load x3 with value 0x557e1518
sw x3, 0(x2) # store 0x557e1518 in memory
flw f19, 0(x2) # load 0x557e1518 from memory into f19
fnmadd.s f9, f11, f7, f19, dyn # perform operation
fnmadd.s f9, f11, f7, f19, rdn # perform operation
fnmadd.s f9, f11, f7, f19, rmm # perform operation
fnmadd.s f9, f11, f7, f19, rne # perform operation
fnmadd.s f9, f11, f7, f19, rtz # perform operation
fnmadd.s f9, f11, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x819f6989 # load x3 with value 0x819f6989
sw x3, 0(x2) # store 0x819f6989 in memory
flw f22, 0(x2) # load 0x819f6989 from memory into f22
fnmadd.s f1, f11, f26, f22, dyn # perform operation
fnmadd.s f1, f11, f26, f22, rdn # perform operation
fnmadd.s f1, f11, f26, f22, rmm # perform operation
fnmadd.s f1, f11, f26, f22, rne # perform operation
fnmadd.s f1, f11, f26, f22, rtz # perform operation
fnmadd.s f1, f11, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f11, f26, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x02412a53 # load x3 with value 0x02412a53
sw x3, 0(x2) # store 0x02412a53 in memory
flw f26, 0(x2) # load 0x02412a53 from memory into f26
fnmadd.s f1, f28, f9, f26, dyn # perform operation
fnmadd.s f1, f28, f9, f26, rdn # perform operation
fnmadd.s f1, f28, f9, f26, rmm # perform operation
fnmadd.s f1, f28, f9, f26, rne # perform operation
fnmadd.s f1, f28, f9, f26, rtz # perform operation
fnmadd.s f1, f28, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x0b14b277 # load x3 with value 0x0b14b277
sw x3, 0(x2) # store 0x0b14b277 in memory
flw f18, 0(x2) # load 0x0b14b277 from memory into f18
fnmadd.s f15, f30, f12, f18, dyn # perform operation
fnmadd.s f15, f30, f12, f18, rdn # perform operation
fnmadd.s f15, f30, f12, f18, rmm # perform operation
fnmadd.s f15, f30, f12, f18, rne # perform operation
fnmadd.s f15, f30, f12, f18, rtz # perform operation
fnmadd.s f15, f30, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f30, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f30, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xaeb29676 # load x3 with value 0xaeb29676
sw x3, 0(x2) # store 0xaeb29676 in memory
flw f28, 0(x2) # load 0xaeb29676 from memory into f28
fnmadd.s f5, f15, f12, f28, dyn # perform operation
fnmadd.s f5, f15, f12, f28, rdn # perform operation
fnmadd.s f5, f15, f12, f28, rmm # perform operation
fnmadd.s f5, f15, f12, f28, rne # perform operation
fnmadd.s f5, f15, f12, f28, rtz # perform operation
fnmadd.s f5, f15, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f15, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f15, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x49ac208b # load x3 with value 0x49ac208b
sw x3, 0(x2) # store 0x49ac208b in memory
flw f9, 0(x2) # load 0x49ac208b from memory into f9
fnmadd.s f12, f28, f29, f9, dyn # perform operation
fnmadd.s f12, f28, f29, f9, rdn # perform operation
fnmadd.s f12, f28, f29, f9, rmm # perform operation
fnmadd.s f12, f28, f29, f9, rne # perform operation
fnmadd.s f12, f28, f29, f9, rtz # perform operation
fnmadd.s f12, f28, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x06c52096 # load x3 with value 0x06c52096
sw x3, 0(x2) # store 0x06c52096 in memory
flw f3, 0(x2) # load 0x06c52096 from memory into f3
fnmadd.s f7, f26, f8, f3, dyn # perform operation
fnmadd.s f7, f26, f8, f3, rdn # perform operation
fnmadd.s f7, f26, f8, f3, rmm # perform operation
fnmadd.s f7, f26, f8, f3, rne # perform operation
fnmadd.s f7, f26, f8, f3, rtz # perform operation
fnmadd.s f7, f26, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f26, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f26, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f26, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f26, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f26, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x2b7088d2 # load x3 with value 0x2b7088d2
sw x3, 0(x2) # store 0x2b7088d2 in memory
flw f1, 0(x2) # load 0x2b7088d2 from memory into f1
fnmadd.s f11, f5, f3, f1, dyn # perform operation
fnmadd.s f11, f5, f3, f1, rdn # perform operation
fnmadd.s f11, f5, f3, f1, rmm # perform operation
fnmadd.s f11, f5, f3, f1, rne # perform operation
fnmadd.s f11, f5, f3, f1, rtz # perform operation
fnmadd.s f11, f5, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x59b12319 # load x3 with value 0x59b12319
sw x3, 0(x2) # store 0x59b12319 in memory
flw f26, 0(x2) # load 0x59b12319 from memory into f26
fnmadd.s f10, f22, f5, f26, dyn # perform operation
fnmadd.s f10, f22, f5, f26, rdn # perform operation
fnmadd.s f10, f22, f5, f26, rmm # perform operation
fnmadd.s f10, f22, f5, f26, rne # perform operation
fnmadd.s f10, f22, f5, f26, rtz # perform operation
fnmadd.s f10, f22, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x0c8c6a1b # load x3 with value 0x0c8c6a1b
sw x3, 0(x2) # store 0x0c8c6a1b in memory
flw f7, 0(x2) # load 0x0c8c6a1b from memory into f7
fnmadd.s f6, f31, f14, f7, dyn # perform operation
fnmadd.s f6, f31, f14, f7, rdn # perform operation
fnmadd.s f6, f31, f14, f7, rmm # perform operation
fnmadd.s f6, f31, f14, f7, rne # perform operation
fnmadd.s f6, f31, f14, f7, rtz # perform operation
fnmadd.s f6, f31, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f31, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f31, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xf830be46 # load x3 with value 0xf830be46
sw x3, 0(x2) # store 0xf830be46 in memory
flw f11, 0(x2) # load 0xf830be46 from memory into f11
fnmadd.s f29, f23, f19, f11, dyn # perform operation
fnmadd.s f29, f23, f19, f11, rdn # perform operation
fnmadd.s f29, f23, f19, f11, rmm # perform operation
fnmadd.s f29, f23, f19, f11, rne # perform operation
fnmadd.s f29, f23, f19, f11, rtz # perform operation
fnmadd.s f29, f23, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f19, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x371789d1 # load x3 with value 0x371789d1
sw x3, 0(x2) # store 0x371789d1 in memory
flw f9, 0(x2) # load 0x371789d1 from memory into f9
fnmadd.s f3, f26, f21, f9, dyn # perform operation
fnmadd.s f3, f26, f21, f9, rdn # perform operation
fnmadd.s f3, f26, f21, f9, rmm # perform operation
fnmadd.s f3, f26, f21, f9, rne # perform operation
fnmadd.s f3, f26, f21, f9, rtz # perform operation
fnmadd.s f3, f26, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f21, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x9976e914 # load x3 with value 0x9976e914
sw x3, 0(x2) # store 0x9976e914 in memory
flw f20, 0(x2) # load 0x9976e914 from memory into f20
fnmadd.s f13, f19, f5, f20, dyn # perform operation
fnmadd.s f13, f19, f5, f20, rdn # perform operation
fnmadd.s f13, f19, f5, f20, rmm # perform operation
fnmadd.s f13, f19, f5, f20, rne # perform operation
fnmadd.s f13, f19, f5, f20, rtz # perform operation
fnmadd.s f13, f19, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f19, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f19, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x5d5d0828 # load x3 with value 0x5d5d0828
sw x3, 0(x2) # store 0x5d5d0828 in memory
flw f20, 0(x2) # load 0x5d5d0828 from memory into f20
fnmadd.s f3, f17, f30, f20, dyn # perform operation
fnmadd.s f3, f17, f30, f20, rdn # perform operation
fnmadd.s f3, f17, f30, f20, rmm # perform operation
fnmadd.s f3, f17, f30, f20, rne # perform operation
fnmadd.s f3, f17, f30, f20, rtz # perform operation
fnmadd.s f3, f17, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f17, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xb20d309e # load x3 with value 0xb20d309e
sw x3, 0(x2) # store 0xb20d309e in memory
flw f26, 0(x2) # load 0xb20d309e from memory into f26
fnmadd.s f9, f25, f18, f26, dyn # perform operation
fnmadd.s f9, f25, f18, f26, rdn # perform operation
fnmadd.s f9, f25, f18, f26, rmm # perform operation
fnmadd.s f9, f25, f18, f26, rne # perform operation
fnmadd.s f9, f25, f18, f26, rtz # perform operation
fnmadd.s f9, f25, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x98fc7fc1 # load x3 with value 0x98fc7fc1
sw x3, 0(x2) # store 0x98fc7fc1 in memory
flw f29, 0(x2) # load 0x98fc7fc1 from memory into f29
fnmadd.s f13, f16, f23, f29, dyn # perform operation
fnmadd.s f13, f16, f23, f29, rdn # perform operation
fnmadd.s f13, f16, f23, f29, rmm # perform operation
fnmadd.s f13, f16, f23, f29, rne # perform operation
fnmadd.s f13, f16, f23, f29, rtz # perform operation
fnmadd.s f13, f16, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f16, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f16, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f16, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f16, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f16, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x16e147be # load x3 with value 0x16e147be
sw x3, 0(x2) # store 0x16e147be in memory
flw f25, 0(x2) # load 0x16e147be from memory into f25
fnmadd.s f23, f13, f8, f25, dyn # perform operation
fnmadd.s f23, f13, f8, f25, rdn # perform operation
fnmadd.s f23, f13, f8, f25, rmm # perform operation
fnmadd.s f23, f13, f8, f25, rne # perform operation
fnmadd.s f23, f13, f8, f25, rtz # perform operation
fnmadd.s f23, f13, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xdd2d3635 # load x3 with value 0xdd2d3635
sw x3, 0(x2) # store 0xdd2d3635 in memory
flw f29, 0(x2) # load 0xdd2d3635 from memory into f29
fnmadd.s f17, f20, f7, f29, dyn # perform operation
fnmadd.s f17, f20, f7, f29, rdn # perform operation
fnmadd.s f17, f20, f7, f29, rmm # perform operation
fnmadd.s f17, f20, f7, f29, rne # perform operation
fnmadd.s f17, f20, f7, f29, rtz # perform operation
fnmadd.s f17, f20, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0xba008e1c # load x3 with value 0xba008e1c
sw x3, 0(x2) # store 0xba008e1c in memory
flw f20, 0(x2) # load 0xba008e1c from memory into f20
fnmadd.s f6, f7, f17, f20, dyn # perform operation
fnmadd.s f6, f7, f17, f20, rdn # perform operation
fnmadd.s f6, f7, f17, f20, rmm # perform operation
fnmadd.s f6, f7, f17, f20, rne # perform operation
fnmadd.s f6, f7, f17, f20, rtz # perform operation
fnmadd.s f6, f7, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x728aa33a # load x3 with value 0x728aa33a
sw x3, 0(x2) # store 0x728aa33a in memory
flw f24, 0(x2) # load 0x728aa33a from memory into f24
fnmadd.s f16, f17, f28, f24, dyn # perform operation
fnmadd.s f16, f17, f28, f24, rdn # perform operation
fnmadd.s f16, f17, f28, f24, rmm # perform operation
fnmadd.s f16, f17, f28, f24, rne # perform operation
fnmadd.s f16, f17, f28, f24, rtz # perform operation
fnmadd.s f16, f17, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x2981b784 # load x3 with value 0x2981b784
sw x3, 0(x2) # store 0x2981b784 in memory
flw f25, 0(x2) # load 0x2981b784 from memory into f25
fnmadd.s f11, f23, f31, f25, dyn # perform operation
fnmadd.s f11, f23, f31, f25, rdn # perform operation
fnmadd.s f11, f23, f31, f25, rmm # perform operation
fnmadd.s f11, f23, f31, f25, rne # perform operation
fnmadd.s f11, f23, f31, f25, rtz # perform operation
fnmadd.s f11, f23, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xcfbe232d # load x3 with value 0xcfbe232d
sw x3, 0(x2) # store 0xcfbe232d in memory
flw f10, 0(x2) # load 0xcfbe232d from memory into f10
fnmadd.s f25, f11, f29, f10, dyn # perform operation
fnmadd.s f25, f11, f29, f10, rdn # perform operation
fnmadd.s f25, f11, f29, f10, rmm # perform operation
fnmadd.s f25, f11, f29, f10, rne # perform operation
fnmadd.s f25, f11, f29, f10, rtz # perform operation
fnmadd.s f25, f11, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f11, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f11, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xe734fa59 # load x3 with value 0xe734fa59
sw x3, 0(x2) # store 0xe734fa59 in memory
flw f9, 0(x2) # load 0xe734fa59 from memory into f9
fnmadd.s f11, f22, f7, f9, dyn # perform operation
fnmadd.s f11, f22, f7, f9, rdn # perform operation
fnmadd.s f11, f22, f7, f9, rmm # perform operation
fnmadd.s f11, f22, f7, f9, rne # perform operation
fnmadd.s f11, f22, f7, f9, rtz # perform operation
fnmadd.s f11, f22, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x538d7bed # load x3 with value 0x538d7bed
sw x3, 0(x2) # store 0x538d7bed in memory
flw f6, 0(x2) # load 0x538d7bed from memory into f6
fnmadd.s f19, f24, f17, f6, dyn # perform operation
fnmadd.s f19, f24, f17, f6, rdn # perform operation
fnmadd.s f19, f24, f17, f6, rmm # perform operation
fnmadd.s f19, f24, f17, f6, rne # perform operation
fnmadd.s f19, f24, f17, f6, rtz # perform operation
fnmadd.s f19, f24, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xf3d1885e # load x3 with value 0xf3d1885e
sw x3, 0(x2) # store 0xf3d1885e in memory
flw f22, 0(x2) # load 0xf3d1885e from memory into f22
fnmadd.s f28, f29, f17, f22, dyn # perform operation
fnmadd.s f28, f29, f17, f22, rdn # perform operation
fnmadd.s f28, f29, f17, f22, rmm # perform operation
fnmadd.s f28, f29, f17, f22, rne # perform operation
fnmadd.s f28, f29, f17, f22, rtz # perform operation
fnmadd.s f28, f29, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x9b250c45 # load x3 with value 0x9b250c45
sw x3, 0(x2) # store 0x9b250c45 in memory
flw f25, 0(x2) # load 0x9b250c45 from memory into f25
fnmadd.s f31, f14, f16, f25, dyn # perform operation
fnmadd.s f31, f14, f16, f25, rdn # perform operation
fnmadd.s f31, f14, f16, f25, rmm # perform operation
fnmadd.s f31, f14, f16, f25, rne # perform operation
fnmadd.s f31, f14, f16, f25, rtz # perform operation
fnmadd.s f31, f14, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x42e720a0 # load x3 with value 0x42e720a0
sw x3, 0(x2) # store 0x42e720a0 in memory
flw f5, 0(x2) # load 0x42e720a0 from memory into f5
fnmadd.s f30, f12, f21, f5, dyn # perform operation
fnmadd.s f30, f12, f21, f5, rdn # perform operation
fnmadd.s f30, f12, f21, f5, rmm # perform operation
fnmadd.s f30, f12, f21, f5, rne # perform operation
fnmadd.s f30, f12, f21, f5, rtz # perform operation
fnmadd.s f30, f12, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f21, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xeea1e657 # load x3 with value 0xeea1e657
sw x3, 0(x2) # store 0xeea1e657 in memory
flw f7, 0(x2) # load 0xeea1e657 from memory into f7
fnmadd.s f5, f18, f23, f7, dyn # perform operation
fnmadd.s f5, f18, f23, f7, rdn # perform operation
fnmadd.s f5, f18, f23, f7, rmm # perform operation
fnmadd.s f5, f18, f23, f7, rne # perform operation
fnmadd.s f5, f18, f23, f7, rtz # perform operation
fnmadd.s f5, f18, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x11c5447e # load x3 with value 0x11c5447e
sw x3, 0(x2) # store 0x11c5447e in memory
flw f20, 0(x2) # load 0x11c5447e from memory into f20
fnmadd.s f16, f15, f10, f20, dyn # perform operation
fnmadd.s f16, f15, f10, f20, rdn # perform operation
fnmadd.s f16, f15, f10, f20, rmm # perform operation
fnmadd.s f16, f15, f10, f20, rne # perform operation
fnmadd.s f16, f15, f10, f20, rtz # perform operation
fnmadd.s f16, f15, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f15, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f15, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f15, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f15, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f15, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x2b6a3764 # load x3 with value 0x2b6a3764
sw x3, 0(x2) # store 0x2b6a3764 in memory
flw f23, 0(x2) # load 0x2b6a3764 from memory into f23
fnmadd.s f5, f24, f14, f23, dyn # perform operation
fnmadd.s f5, f24, f14, f23, rdn # perform operation
fnmadd.s f5, f24, f14, f23, rmm # perform operation
fnmadd.s f5, f24, f14, f23, rne # perform operation
fnmadd.s f5, f24, f14, f23, rtz # perform operation
fnmadd.s f5, f24, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x5d98cd98 # load x3 with value 0x5d98cd98
sw x3, 0(x2) # store 0x5d98cd98 in memory
flw f15, 0(x2) # load 0x5d98cd98 from memory into f15
fnmadd.s f27, f16, f6, f15, dyn # perform operation
fnmadd.s f27, f16, f6, f15, rdn # perform operation
fnmadd.s f27, f16, f6, f15, rmm # perform operation
fnmadd.s f27, f16, f6, f15, rne # perform operation
fnmadd.s f27, f16, f6, f15, rtz # perform operation
fnmadd.s f27, f16, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0x2eb31897 # load x3 with value 0x2eb31897
sw x3, 0(x2) # store 0x2eb31897 in memory
flw f12, 0(x2) # load 0x2eb31897 from memory into f12
fnmadd.s f26, f29, f31, f12, dyn # perform operation
fnmadd.s f26, f29, f31, f12, rdn # perform operation
fnmadd.s f26, f29, f31, f12, rmm # perform operation
fnmadd.s f26, f29, f31, f12, rne # perform operation
fnmadd.s f26, f29, f31, f12, rtz # perform operation
fnmadd.s f26, f29, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x466bad11 # load x3 with value 0x466bad11
sw x3, 0(x2) # store 0x466bad11 in memory
flw f2, 0(x2) # load 0x466bad11 from memory into f2
fnmadd.s f19, f30, f25, f2, dyn # perform operation
fnmadd.s f19, f30, f25, f2, rdn # perform operation
fnmadd.s f19, f30, f25, f2, rmm # perform operation
fnmadd.s f19, f30, f25, f2, rne # perform operation
fnmadd.s f19, f30, f25, f2, rtz # perform operation
fnmadd.s f19, f30, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x84206441 # load x3 with value 0x84206441
sw x3, 0(x2) # store 0x84206441 in memory
flw f19, 0(x2) # load 0x84206441 from memory into f19
fnmadd.s f13, f20, f5, f19, dyn # perform operation
fnmadd.s f13, f20, f5, f19, rdn # perform operation
fnmadd.s f13, f20, f5, f19, rmm # perform operation
fnmadd.s f13, f20, f5, f19, rne # perform operation
fnmadd.s f13, f20, f5, f19, rtz # perform operation
fnmadd.s f13, f20, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f5, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x46753255 # load x3 with value 0x46753255
sw x3, 0(x2) # store 0x46753255 in memory
flw f9, 0(x2) # load 0x46753255 from memory into f9
fnmadd.s f3, f8, f12, f9, dyn # perform operation
fnmadd.s f3, f8, f12, f9, rdn # perform operation
fnmadd.s f3, f8, f12, f9, rmm # perform operation
fnmadd.s f3, f8, f12, f9, rne # perform operation
fnmadd.s f3, f8, f12, f9, rtz # perform operation
fnmadd.s f3, f8, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f8, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f8, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f8, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f8, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f8, f12, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x0f3263d8 # load x3 with value 0x0f3263d8
sw x3, 0(x2) # store 0x0f3263d8 in memory
flw f23, 0(x2) # load 0x0f3263d8 from memory into f23
fnmadd.s f1, f19, f28, f23, dyn # perform operation
fnmadd.s f1, f19, f28, f23, rdn # perform operation
fnmadd.s f1, f19, f28, f23, rmm # perform operation
fnmadd.s f1, f19, f28, f23, rne # perform operation
fnmadd.s f1, f19, f28, f23, rtz # perform operation
fnmadd.s f1, f19, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x32bf71f7 # load x3 with value 0x32bf71f7
sw x3, 0(x2) # store 0x32bf71f7 in memory
flw f31, 0(x2) # load 0x32bf71f7 from memory into f31
fnmadd.s f10, f6, f5, f31, dyn # perform operation
fnmadd.s f10, f6, f5, f31, rdn # perform operation
fnmadd.s f10, f6, f5, f31, rmm # perform operation
fnmadd.s f10, f6, f5, f31, rne # perform operation
fnmadd.s f10, f6, f5, f31, rtz # perform operation
fnmadd.s f10, f6, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x83eebec4 # load x3 with value 0x83eebec4
sw x3, 0(x2) # store 0x83eebec4 in memory
flw f24, 0(x2) # load 0x83eebec4 from memory into f24
fnmadd.s f21, f22, f6, f24, dyn # perform operation
fnmadd.s f21, f22, f6, f24, rdn # perform operation
fnmadd.s f21, f22, f6, f24, rmm # perform operation
fnmadd.s f21, f22, f6, f24, rne # perform operation
fnmadd.s f21, f22, f6, f24, rtz # perform operation
fnmadd.s f21, f22, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x2432557d # load x3 with value 0x2432557d
sw x3, 0(x2) # store 0x2432557d in memory
flw f21, 0(x2) # load 0x2432557d from memory into f21
fnmadd.s f13, f18, f19, f21, dyn # perform operation
fnmadd.s f13, f18, f19, f21, rdn # perform operation
fnmadd.s f13, f18, f19, f21, rmm # perform operation
fnmadd.s f13, f18, f19, f21, rne # perform operation
fnmadd.s f13, f18, f19, f21, rtz # perform operation
fnmadd.s f13, f18, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f19, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x557a3730 # load x3 with value 0x557a3730
sw x3, 0(x2) # store 0x557a3730 in memory
flw f6, 0(x2) # load 0x557a3730 from memory into f6
fnmadd.s f28, f23, f27, f6, dyn # perform operation
fnmadd.s f28, f23, f27, f6, rdn # perform operation
fnmadd.s f28, f23, f27, f6, rmm # perform operation
fnmadd.s f28, f23, f27, f6, rne # perform operation
fnmadd.s f28, f23, f27, f6, rtz # perform operation
fnmadd.s f28, f23, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x2fc30f85 # load x3 with value 0x2fc30f85
sw x3, 0(x2) # store 0x2fc30f85 in memory
flw f21, 0(x2) # load 0x2fc30f85 from memory into f21
fnmadd.s f15, f22, f28, f21, dyn # perform operation
fnmadd.s f15, f22, f28, f21, rdn # perform operation
fnmadd.s f15, f22, f28, f21, rmm # perform operation
fnmadd.s f15, f22, f28, f21, rne # perform operation
fnmadd.s f15, f22, f28, f21, rtz # perform operation
fnmadd.s f15, f22, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x049e280e # load x3 with value 0x049e280e
sw x3, 0(x2) # store 0x049e280e in memory
flw f14, 0(x2) # load 0x049e280e from memory into f14
fnmadd.s f26, f10, f22, f14, dyn # perform operation
fnmadd.s f26, f10, f22, f14, rdn # perform operation
fnmadd.s f26, f10, f22, f14, rmm # perform operation
fnmadd.s f26, f10, f22, f14, rne # perform operation
fnmadd.s f26, f10, f22, f14, rtz # perform operation
fnmadd.s f26, f10, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x0fd73853 # load x3 with value 0x0fd73853
sw x3, 0(x2) # store 0x0fd73853 in memory
flw f6, 0(x2) # load 0x0fd73853 from memory into f6
fnmadd.s f22, f28, f8, f6, dyn # perform operation
fnmadd.s f22, f28, f8, f6, rdn # perform operation
fnmadd.s f22, f28, f8, f6, rmm # perform operation
fnmadd.s f22, f28, f8, f6, rne # perform operation
fnmadd.s f22, f28, f8, f6, rtz # perform operation
fnmadd.s f22, f28, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f8, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xd535588d # load x3 with value 0xd535588d
sw x3, 0(x2) # store 0xd535588d in memory
flw f13, 0(x2) # load 0xd535588d from memory into f13
fnmadd.s f6, f14, f11, f13, dyn # perform operation
fnmadd.s f6, f14, f11, f13, rdn # perform operation
fnmadd.s f6, f14, f11, f13, rmm # perform operation
fnmadd.s f6, f14, f11, f13, rne # perform operation
fnmadd.s f6, f14, f11, f13, rtz # perform operation
fnmadd.s f6, f14, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f14, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f14, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f14, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f14, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f14, f11, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xe8aaf0ea # load x3 with value 0xe8aaf0ea
sw x3, 0(x2) # store 0xe8aaf0ea in memory
flw f22, 0(x2) # load 0xe8aaf0ea from memory into f22
fnmadd.s f8, f7, f17, f22, dyn # perform operation
fnmadd.s f8, f7, f17, f22, rdn # perform operation
fnmadd.s f8, f7, f17, f22, rmm # perform operation
fnmadd.s f8, f7, f17, f22, rne # perform operation
fnmadd.s f8, f7, f17, f22, rtz # perform operation
fnmadd.s f8, f7, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x1b4a0d86 # load x3 with value 0x1b4a0d86
sw x3, 0(x2) # store 0x1b4a0d86 in memory
flw f27, 0(x2) # load 0x1b4a0d86 from memory into f27
fnmadd.s f18, f21, f9, f27, dyn # perform operation
fnmadd.s f18, f21, f9, f27, rdn # perform operation
fnmadd.s f18, f21, f9, f27, rmm # perform operation
fnmadd.s f18, f21, f9, f27, rne # perform operation
fnmadd.s f18, f21, f9, f27, rtz # perform operation
fnmadd.s f18, f21, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x994b56b6 # load x3 with value 0x994b56b6
sw x3, 0(x2) # store 0x994b56b6 in memory
flw f1, 0(x2) # load 0x994b56b6 from memory into f1
fnmadd.s f18, f27, f26, f1, dyn # perform operation
fnmadd.s f18, f27, f26, f1, rdn # perform operation
fnmadd.s f18, f27, f26, f1, rmm # perform operation
fnmadd.s f18, f27, f26, f1, rne # perform operation
fnmadd.s f18, f27, f26, f1, rtz # perform operation
fnmadd.s f18, f27, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f27, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x6472a272 # load x3 with value 0x6472a272
sw x3, 0(x2) # store 0x6472a272 in memory
flw f3, 0(x2) # load 0x6472a272 from memory into f3
fnmadd.s f27, f21, f26, f3, dyn # perform operation
fnmadd.s f27, f21, f26, f3, rdn # perform operation
fnmadd.s f27, f21, f26, f3, rmm # perform operation
fnmadd.s f27, f21, f26, f3, rne # perform operation
fnmadd.s f27, f21, f26, f3, rtz # perform operation
fnmadd.s f27, f21, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x74b3c4a1 # load x3 with value 0x74b3c4a1
sw x3, 0(x2) # store 0x74b3c4a1 in memory
flw f21, 0(x2) # load 0x74b3c4a1 from memory into f21
fnmadd.s f12, f5, f15, f21, dyn # perform operation
fnmadd.s f12, f5, f15, f21, rdn # perform operation
fnmadd.s f12, f5, f15, f21, rmm # perform operation
fnmadd.s f12, f5, f15, f21, rne # perform operation
fnmadd.s f12, f5, f15, f21, rtz # perform operation
fnmadd.s f12, f5, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x7e2aa378 # load x3 with value 0x7e2aa378
sw x3, 0(x2) # store 0x7e2aa378 in memory
flw f28, 0(x2) # load 0x7e2aa378 from memory into f28
fnmadd.s f10, f3, f9, f28, dyn # perform operation
fnmadd.s f10, f3, f9, f28, rdn # perform operation
fnmadd.s f10, f3, f9, f28, rmm # perform operation
fnmadd.s f10, f3, f9, f28, rne # perform operation
fnmadd.s f10, f3, f9, f28, rtz # perform operation
fnmadd.s f10, f3, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f3, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f3, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f3, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f3, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f3, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xb93c02be # load x3 with value 0xb93c02be
sw x3, 0(x2) # store 0xb93c02be in memory
flw f26, 0(x2) # load 0xb93c02be from memory into f26
fnmadd.s f6, f2, f22, f26, dyn # perform operation
fnmadd.s f6, f2, f22, f26, rdn # perform operation
fnmadd.s f6, f2, f22, f26, rmm # perform operation
fnmadd.s f6, f2, f22, f26, rne # perform operation
fnmadd.s f6, f2, f22, f26, rtz # perform operation
fnmadd.s f6, f2, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f2, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f2, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xd6265fb4 # load x3 with value 0xd6265fb4
sw x3, 0(x2) # store 0xd6265fb4 in memory
flw f20, 0(x2) # load 0xd6265fb4 from memory into f20
fnmadd.s f7, f6, f8, f20, dyn # perform operation
fnmadd.s f7, f6, f8, f20, rdn # perform operation
fnmadd.s f7, f6, f8, f20, rmm # perform operation
fnmadd.s f7, f6, f8, f20, rne # perform operation
fnmadd.s f7, f6, f8, f20, rtz # perform operation
fnmadd.s f7, f6, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x5631159e # load x3 with value 0x5631159e
sw x3, 0(x2) # store 0x5631159e in memory
flw f13, 0(x2) # load 0x5631159e from memory into f13
fnmadd.s f11, f29, f2, f13, dyn # perform operation
fnmadd.s f11, f29, f2, f13, rdn # perform operation
fnmadd.s f11, f29, f2, f13, rmm # perform operation
fnmadd.s f11, f29, f2, f13, rne # perform operation
fnmadd.s f11, f29, f2, f13, rtz # perform operation
fnmadd.s f11, f29, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xc445ba4a # load x3 with value 0xc445ba4a
sw x3, 0(x2) # store 0xc445ba4a in memory
flw f31, 0(x2) # load 0xc445ba4a from memory into f31
fnmadd.s f2, f7, f22, f31, dyn # perform operation
fnmadd.s f2, f7, f22, f31, rdn # perform operation
fnmadd.s f2, f7, f22, f31, rmm # perform operation
fnmadd.s f2, f7, f22, f31, rne # perform operation
fnmadd.s f2, f7, f22, f31, rtz # perform operation
fnmadd.s f2, f7, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0x7da7ec96 # load x3 with value 0x7da7ec96
sw x3, 0(x2) # store 0x7da7ec96 in memory
flw f16, 0(x2) # load 0x7da7ec96 from memory into f16
fnmadd.s f6, f13, f22, f16, dyn # perform operation
fnmadd.s f6, f13, f22, f16, rdn # perform operation
fnmadd.s f6, f13, f22, f16, rmm # perform operation
fnmadd.s f6, f13, f22, f16, rne # perform operation
fnmadd.s f6, f13, f22, f16, rtz # perform operation
fnmadd.s f6, f13, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x401005bb # load x3 with value 0x401005bb
sw x3, 0(x2) # store 0x401005bb in memory
flw f26, 0(x2) # load 0x401005bb from memory into f26
fnmadd.s f21, f31, f30, f26, dyn # perform operation
fnmadd.s f21, f31, f30, f26, rdn # perform operation
fnmadd.s f21, f31, f30, f26, rmm # perform operation
fnmadd.s f21, f31, f30, f26, rne # perform operation
fnmadd.s f21, f31, f30, f26, rtz # perform operation
fnmadd.s f21, f31, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f31, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f31, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x5822469f # load x3 with value 0x5822469f
sw x3, 0(x2) # store 0x5822469f in memory
flw f6, 0(x2) # load 0x5822469f from memory into f6
fnmadd.s f26, f13, f2, f6, dyn # perform operation
fnmadd.s f26, f13, f2, f6, rdn # perform operation
fnmadd.s f26, f13, f2, f6, rmm # perform operation
fnmadd.s f26, f13, f2, f6, rne # perform operation
fnmadd.s f26, f13, f2, f6, rtz # perform operation
fnmadd.s f26, f13, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f2, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x681c839c # load x3 with value 0x681c839c
sw x3, 0(x2) # store 0x681c839c in memory
flw f21, 0(x2) # load 0x681c839c from memory into f21
fnmadd.s f29, f18, f8, f21, dyn # perform operation
fnmadd.s f29, f18, f8, f21, rdn # perform operation
fnmadd.s f29, f18, f8, f21, rmm # perform operation
fnmadd.s f29, f18, f8, f21, rne # perform operation
fnmadd.s f29, f18, f8, f21, rtz # perform operation
fnmadd.s f29, f18, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f18, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f18, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x89d04508 # load x3 with value 0x89d04508
sw x3, 0(x2) # store 0x89d04508 in memory
flw f26, 0(x2) # load 0x89d04508 from memory into f26
fnmadd.s f22, f27, f15, f26, dyn # perform operation
fnmadd.s f22, f27, f15, f26, rdn # perform operation
fnmadd.s f22, f27, f15, f26, rmm # perform operation
fnmadd.s f22, f27, f15, f26, rne # perform operation
fnmadd.s f22, f27, f15, f26, rtz # perform operation
fnmadd.s f22, f27, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f27, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f27, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x4d674eb3 # load x3 with value 0x4d674eb3
sw x3, 0(x2) # store 0x4d674eb3 in memory
flw f10, 0(x2) # load 0x4d674eb3 from memory into f10
fnmadd.s f27, f25, f24, f10, dyn # perform operation
fnmadd.s f27, f25, f24, f10, rdn # perform operation
fnmadd.s f27, f25, f24, f10, rmm # perform operation
fnmadd.s f27, f25, f24, f10, rne # perform operation
fnmadd.s f27, f25, f24, f10, rtz # perform operation
fnmadd.s f27, f25, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x71a71a08 # load x3 with value 0x71a71a08
sw x3, 0(x2) # store 0x71a71a08 in memory
flw f1, 0(x2) # load 0x71a71a08 from memory into f1
fnmadd.s f11, f13, f23, f1, dyn # perform operation
fnmadd.s f11, f13, f23, f1, rdn # perform operation
fnmadd.s f11, f13, f23, f1, rmm # perform operation
fnmadd.s f11, f13, f23, f1, rne # perform operation
fnmadd.s f11, f13, f23, f1, rtz # perform operation
fnmadd.s f11, f13, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xfca88576 # load x3 with value 0xfca88576
sw x3, 0(x2) # store 0xfca88576 in memory
flw f30, 0(x2) # load 0xfca88576 from memory into f30
fnmadd.s f21, f14, f22, f30, dyn # perform operation
fnmadd.s f21, f14, f22, f30, rdn # perform operation
fnmadd.s f21, f14, f22, f30, rmm # perform operation
fnmadd.s f21, f14, f22, f30, rne # perform operation
fnmadd.s f21, f14, f22, f30, rtz # perform operation
fnmadd.s f21, f14, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xb187d6a2 # load x3 with value 0xb187d6a2
sw x3, 0(x2) # store 0xb187d6a2 in memory
flw f9, 0(x2) # load 0xb187d6a2 from memory into f9
fnmadd.s f15, f6, f19, f9, dyn # perform operation
fnmadd.s f15, f6, f19, f9, rdn # perform operation
fnmadd.s f15, f6, f19, f9, rmm # perform operation
fnmadd.s f15, f6, f19, f9, rne # perform operation
fnmadd.s f15, f6, f19, f9, rtz # perform operation
fnmadd.s f15, f6, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0xce31f5ff # load x3 with value 0xce31f5ff
sw x3, 0(x2) # store 0xce31f5ff in memory
flw f1, 0(x2) # load 0xce31f5ff from memory into f1
fnmadd.s f5, f3, f10, f1, dyn # perform operation
fnmadd.s f5, f3, f10, f1, rdn # perform operation
fnmadd.s f5, f3, f10, f1, rmm # perform operation
fnmadd.s f5, f3, f10, f1, rne # perform operation
fnmadd.s f5, f3, f10, f1, rtz # perform operation
fnmadd.s f5, f3, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xabae6e1b # load x3 with value 0xabae6e1b
sw x3, 0(x2) # store 0xabae6e1b in memory
flw f10, 0(x2) # load 0xabae6e1b from memory into f10
fnmadd.s f25, f15, f26, f10, dyn # perform operation
fnmadd.s f25, f15, f26, f10, rdn # perform operation
fnmadd.s f25, f15, f26, f10, rmm # perform operation
fnmadd.s f25, f15, f26, f10, rne # perform operation
fnmadd.s f25, f15, f26, f10, rtz # perform operation
fnmadd.s f25, f15, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x992c133e # load x3 with value 0x992c133e
sw x3, 0(x2) # store 0x992c133e in memory
flw f16, 0(x2) # load 0x992c133e from memory into f16
fnmadd.s f7, f15, f21, f16, dyn # perform operation
fnmadd.s f7, f15, f21, f16, rdn # perform operation
fnmadd.s f7, f15, f21, f16, rmm # perform operation
fnmadd.s f7, f15, f21, f16, rne # perform operation
fnmadd.s f7, f15, f21, f16, rtz # perform operation
fnmadd.s f7, f15, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x9b89e68a # load x3 with value 0x9b89e68a
sw x3, 0(x2) # store 0x9b89e68a in memory
flw f16, 0(x2) # load 0x9b89e68a from memory into f16
fnmadd.s f26, f17, f18, f16, dyn # perform operation
fnmadd.s f26, f17, f18, f16, rdn # perform operation
fnmadd.s f26, f17, f18, f16, rmm # perform operation
fnmadd.s f26, f17, f18, f16, rne # perform operation
fnmadd.s f26, f17, f18, f16, rtz # perform operation
fnmadd.s f26, f17, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x2195d4d5 # load x3 with value 0x2195d4d5
sw x3, 0(x2) # store 0x2195d4d5 in memory
flw f23, 0(x2) # load 0x2195d4d5 from memory into f23
fnmadd.s f17, f12, f25, f23, dyn # perform operation
fnmadd.s f17, f12, f25, f23, rdn # perform operation
fnmadd.s f17, f12, f25, f23, rmm # perform operation
fnmadd.s f17, f12, f25, f23, rne # perform operation
fnmadd.s f17, f12, f25, f23, rtz # perform operation
fnmadd.s f17, f12, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xe753d5fc # load x3 with value 0xe753d5fc
sw x3, 0(x2) # store 0xe753d5fc in memory
flw f28, 0(x2) # load 0xe753d5fc from memory into f28
fnmadd.s f15, f29, f19, f28, dyn # perform operation
fnmadd.s f15, f29, f19, f28, rdn # perform operation
fnmadd.s f15, f29, f19, f28, rmm # perform operation
fnmadd.s f15, f29, f19, f28, rne # perform operation
fnmadd.s f15, f29, f19, f28, rtz # perform operation
fnmadd.s f15, f29, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x6f824cdb # load x3 with value 0x6f824cdb
sw x3, 0(x2) # store 0x6f824cdb in memory
flw f2, 0(x2) # load 0x6f824cdb from memory into f2
fnmadd.s f23, f1, f9, f2, dyn # perform operation
fnmadd.s f23, f1, f9, f2, rdn # perform operation
fnmadd.s f23, f1, f9, f2, rmm # perform operation
fnmadd.s f23, f1, f9, f2, rne # perform operation
fnmadd.s f23, f1, f9, f2, rtz # perform operation
fnmadd.s f23, f1, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x4b1243b3 # load x3 with value 0x4b1243b3
sw x3, 0(x2) # store 0x4b1243b3 in memory
flw f10, 0(x2) # load 0x4b1243b3 from memory into f10
fnmadd.s f23, f3, f13, f10, dyn # perform operation
fnmadd.s f23, f3, f13, f10, rdn # perform operation
fnmadd.s f23, f3, f13, f10, rmm # perform operation
fnmadd.s f23, f3, f13, f10, rne # perform operation
fnmadd.s f23, f3, f13, f10, rtz # perform operation
fnmadd.s f23, f3, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xbe782ccf # load x3 with value 0xbe782ccf
sw x3, 0(x2) # store 0xbe782ccf in memory
flw f28, 0(x2) # load 0xbe782ccf from memory into f28
fnmadd.s f19, f24, f26, f28, dyn # perform operation
fnmadd.s f19, f24, f26, f28, rdn # perform operation
fnmadd.s f19, f24, f26, f28, rmm # perform operation
fnmadd.s f19, f24, f26, f28, rne # perform operation
fnmadd.s f19, f24, f26, f28, rtz # perform operation
fnmadd.s f19, f24, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f24, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f24, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x216ca38b # load x3 with value 0x216ca38b
sw x3, 0(x2) # store 0x216ca38b in memory
flw f31, 0(x2) # load 0x216ca38b from memory into f31
fnmadd.s f8, f28, f12, f31, dyn # perform operation
fnmadd.s f8, f28, f12, f31, rdn # perform operation
fnmadd.s f8, f28, f12, f31, rmm # perform operation
fnmadd.s f8, f28, f12, f31, rne # perform operation
fnmadd.s f8, f28, f12, f31, rtz # perform operation
fnmadd.s f8, f28, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f28, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f28, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f28, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f28, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f28, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x547d72a0 # load x3 with value 0x547d72a0
sw x3, 0(x2) # store 0x547d72a0 in memory
flw f27, 0(x2) # load 0x547d72a0 from memory into f27
fnmadd.s f11, f10, f28, f27, dyn # perform operation
fnmadd.s f11, f10, f28, f27, rdn # perform operation
fnmadd.s f11, f10, f28, f27, rmm # perform operation
fnmadd.s f11, f10, f28, f27, rne # perform operation
fnmadd.s f11, f10, f28, f27, rtz # perform operation
fnmadd.s f11, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x15d506e3 # load x3 with value 0x15d506e3
sw x3, 0(x2) # store 0x15d506e3 in memory
flw f27, 0(x2) # load 0x15d506e3 from memory into f27
fnmadd.s f1, f8, f3, f27, dyn # perform operation
fnmadd.s f1, f8, f3, f27, rdn # perform operation
fnmadd.s f1, f8, f3, f27, rmm # perform operation
fnmadd.s f1, f8, f3, f27, rne # perform operation
fnmadd.s f1, f8, f3, f27, rtz # perform operation
fnmadd.s f1, f8, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f8, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f8, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f8, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f8, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f8, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x3e975a50 # load x3 with value 0x3e975a50
sw x3, 0(x2) # store 0x3e975a50 in memory
flw f17, 0(x2) # load 0x3e975a50 from memory into f17
fnmadd.s f6, f30, f3, f17, dyn # perform operation
fnmadd.s f6, f30, f3, f17, rdn # perform operation
fnmadd.s f6, f30, f3, f17, rmm # perform operation
fnmadd.s f6, f30, f3, f17, rne # perform operation
fnmadd.s f6, f30, f3, f17, rtz # perform operation
fnmadd.s f6, f30, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xf4acf0f5 # load x3 with value 0xf4acf0f5
sw x3, 0(x2) # store 0xf4acf0f5 in memory
flw f15, 0(x2) # load 0xf4acf0f5 from memory into f15
fnmadd.s f22, f29, f8, f15, dyn # perform operation
fnmadd.s f22, f29, f8, f15, rdn # perform operation
fnmadd.s f22, f29, f8, f15, rmm # perform operation
fnmadd.s f22, f29, f8, f15, rne # perform operation
fnmadd.s f22, f29, f8, f15, rtz # perform operation
fnmadd.s f22, f29, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x104ef9e4 # load x3 with value 0x104ef9e4
sw x3, 0(x2) # store 0x104ef9e4 in memory
flw f18, 0(x2) # load 0x104ef9e4 from memory into f18
fnmadd.s f28, f9, f17, f18, dyn # perform operation
fnmadd.s f28, f9, f17, f18, rdn # perform operation
fnmadd.s f28, f9, f17, f18, rmm # perform operation
fnmadd.s f28, f9, f17, f18, rne # perform operation
fnmadd.s f28, f9, f17, f18, rtz # perform operation
fnmadd.s f28, f9, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f9, f17, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x235963ad # load x3 with value 0x235963ad
sw x3, 0(x2) # store 0x235963ad in memory
flw f24, 0(x2) # load 0x235963ad from memory into f24
fnmadd.s f12, f15, f7, f24, dyn # perform operation
fnmadd.s f12, f15, f7, f24, rdn # perform operation
fnmadd.s f12, f15, f7, f24, rmm # perform operation
fnmadd.s f12, f15, f7, f24, rne # perform operation
fnmadd.s f12, f15, f7, f24, rtz # perform operation
fnmadd.s f12, f15, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xa09c61b8 # load x3 with value 0xa09c61b8
sw x3, 0(x2) # store 0xa09c61b8 in memory
flw f23, 0(x2) # load 0xa09c61b8 from memory into f23
fnmadd.s f8, f31, f5, f23, dyn # perform operation
fnmadd.s f8, f31, f5, f23, rdn # perform operation
fnmadd.s f8, f31, f5, f23, rmm # perform operation
fnmadd.s f8, f31, f5, f23, rne # perform operation
fnmadd.s f8, f31, f5, f23, rtz # perform operation
fnmadd.s f8, f31, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f31, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f31, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x98a73964 # load x3 with value 0x98a73964
sw x3, 0(x2) # store 0x98a73964 in memory
flw f15, 0(x2) # load 0x98a73964 from memory into f15
fnmadd.s f25, f29, f5, f15, dyn # perform operation
fnmadd.s f25, f29, f5, f15, rdn # perform operation
fnmadd.s f25, f29, f5, f15, rmm # perform operation
fnmadd.s f25, f29, f5, f15, rne # perform operation
fnmadd.s f25, f29, f5, f15, rtz # perform operation
fnmadd.s f25, f29, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f29, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f29, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xfcb75c17 # load x3 with value 0xfcb75c17
sw x3, 0(x2) # store 0xfcb75c17 in memory
flw f2, 0(x2) # load 0xfcb75c17 from memory into f2
fnmadd.s f23, f10, f27, f2, dyn # perform operation
fnmadd.s f23, f10, f27, f2, rdn # perform operation
fnmadd.s f23, f10, f27, f2, rmm # perform operation
fnmadd.s f23, f10, f27, f2, rne # perform operation
fnmadd.s f23, f10, f27, f2, rtz # perform operation
fnmadd.s f23, f10, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x1f13ab1c # load x3 with value 0x1f13ab1c
sw x3, 0(x2) # store 0x1f13ab1c in memory
flw f15, 0(x2) # load 0x1f13ab1c from memory into f15
fnmadd.s f25, f14, f21, f15, dyn # perform operation
fnmadd.s f25, f14, f21, f15, rdn # perform operation
fnmadd.s f25, f14, f21, f15, rmm # perform operation
fnmadd.s f25, f14, f21, f15, rne # perform operation
fnmadd.s f25, f14, f21, f15, rtz # perform operation
fnmadd.s f25, f14, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x7c4f6346 # load x3 with value 0x7c4f6346
sw x3, 0(x2) # store 0x7c4f6346 in memory
flw f10, 0(x2) # load 0x7c4f6346 from memory into f10
fnmadd.s f17, f20, f29, f10, dyn # perform operation
fnmadd.s f17, f20, f29, f10, rdn # perform operation
fnmadd.s f17, f20, f29, f10, rmm # perform operation
fnmadd.s f17, f20, f29, f10, rne # perform operation
fnmadd.s f17, f20, f29, f10, rtz # perform operation
fnmadd.s f17, f20, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f20, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f20, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xf525a1dc # load x3 with value 0xf525a1dc
sw x3, 0(x2) # store 0xf525a1dc in memory
flw f31, 0(x2) # load 0xf525a1dc from memory into f31
fnmadd.s f19, f3, f28, f31, dyn # perform operation
fnmadd.s f19, f3, f28, f31, rdn # perform operation
fnmadd.s f19, f3, f28, f31, rmm # perform operation
fnmadd.s f19, f3, f28, f31, rne # perform operation
fnmadd.s f19, f3, f28, f31, rtz # perform operation
fnmadd.s f19, f3, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f3, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f3, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f3, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f3, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f3, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x77998847 # load x3 with value 0x77998847
sw x3, 0(x2) # store 0x77998847 in memory
flw f5, 0(x2) # load 0x77998847 from memory into f5
fnmadd.s f9, f11, f13, f5, dyn # perform operation
fnmadd.s f9, f11, f13, f5, rdn # perform operation
fnmadd.s f9, f11, f13, f5, rmm # perform operation
fnmadd.s f9, f11, f13, f5, rne # perform operation
fnmadd.s f9, f11, f13, f5, rtz # perform operation
fnmadd.s f9, f11, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x4c7d873a # load x3 with value 0x4c7d873a
sw x3, 0(x2) # store 0x4c7d873a in memory
flw f17, 0(x2) # load 0x4c7d873a from memory into f17
fnmadd.s f5, f25, f2, f17, dyn # perform operation
fnmadd.s f5, f25, f2, f17, rdn # perform operation
fnmadd.s f5, f25, f2, f17, rmm # perform operation
fnmadd.s f5, f25, f2, f17, rne # perform operation
fnmadd.s f5, f25, f2, f17, rtz # perform operation
fnmadd.s f5, f25, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x91e7e393 # load x3 with value 0x91e7e393
sw x3, 0(x2) # store 0x91e7e393 in memory
flw f12, 0(x2) # load 0x91e7e393 from memory into f12
fnmadd.s f13, f11, f24, f12, dyn # perform operation
fnmadd.s f13, f11, f24, f12, rdn # perform operation
fnmadd.s f13, f11, f24, f12, rmm # perform operation
fnmadd.s f13, f11, f24, f12, rne # perform operation
fnmadd.s f13, f11, f24, f12, rtz # perform operation
fnmadd.s f13, f11, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x6c4fe637 # load x3 with value 0x6c4fe637
sw x3, 0(x2) # store 0x6c4fe637 in memory
flw f5, 0(x2) # load 0x6c4fe637 from memory into f5
fnmadd.s f30, f9, f16, f5, dyn # perform operation
fnmadd.s f30, f9, f16, f5, rdn # perform operation
fnmadd.s f30, f9, f16, f5, rmm # perform operation
fnmadd.s f30, f9, f16, f5, rne # perform operation
fnmadd.s f30, f9, f16, f5, rtz # perform operation
fnmadd.s f30, f9, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x7bbabdb0 # load x3 with value 0x7bbabdb0
sw x3, 0(x2) # store 0x7bbabdb0 in memory
flw f10, 0(x2) # load 0x7bbabdb0 from memory into f10
fnmadd.s f29, f21, f30, f10, dyn # perform operation
fnmadd.s f29, f21, f30, f10, rdn # perform operation
fnmadd.s f29, f21, f30, f10, rmm # perform operation
fnmadd.s f29, f21, f30, f10, rne # perform operation
fnmadd.s f29, f21, f30, f10, rtz # perform operation
fnmadd.s f29, f21, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f21, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f21, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x69d720bf # load x3 with value 0x69d720bf
sw x3, 0(x2) # store 0x69d720bf in memory
flw f8, 0(x2) # load 0x69d720bf from memory into f8
fnmadd.s f13, f10, f15, f8, dyn # perform operation
fnmadd.s f13, f10, f15, f8, rdn # perform operation
fnmadd.s f13, f10, f15, f8, rmm # perform operation
fnmadd.s f13, f10, f15, f8, rne # perform operation
fnmadd.s f13, f10, f15, f8, rtz # perform operation
fnmadd.s f13, f10, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f10, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f10, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f10, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f10, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f10, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x682c8f89 # load x3 with value 0x682c8f89
sw x3, 0(x2) # store 0x682c8f89 in memory
flw f1, 0(x2) # load 0x682c8f89 from memory into f1
fnmadd.s f7, f3, f31, f1, dyn # perform operation
fnmadd.s f7, f3, f31, f1, rdn # perform operation
fnmadd.s f7, f3, f31, f1, rmm # perform operation
fnmadd.s f7, f3, f31, f1, rne # perform operation
fnmadd.s f7, f3, f31, f1, rtz # perform operation
fnmadd.s f7, f3, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f3, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f3, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x937126ff # load x3 with value 0x937126ff
sw x3, 0(x2) # store 0x937126ff in memory
flw f30, 0(x2) # load 0x937126ff from memory into f30
fnmadd.s f1, f12, f7, f30, dyn # perform operation
fnmadd.s f1, f12, f7, f30, rdn # perform operation
fnmadd.s f1, f12, f7, f30, rmm # perform operation
fnmadd.s f1, f12, f7, f30, rne # perform operation
fnmadd.s f1, f12, f7, f30, rtz # perform operation
fnmadd.s f1, f12, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f12, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f12, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f12, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f12, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f12, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x721fc987 # load x3 with value 0x721fc987
sw x3, 0(x2) # store 0x721fc987 in memory
flw f23, 0(x2) # load 0x721fc987 from memory into f23
fnmadd.s f11, f13, f30, f23, dyn # perform operation
fnmadd.s f11, f13, f30, f23, rdn # perform operation
fnmadd.s f11, f13, f30, f23, rmm # perform operation
fnmadd.s f11, f13, f30, f23, rne # perform operation
fnmadd.s f11, f13, f30, f23, rtz # perform operation
fnmadd.s f11, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x9dbebb6c # load x3 with value 0x9dbebb6c
sw x3, 0(x2) # store 0x9dbebb6c in memory
flw f18, 0(x2) # load 0x9dbebb6c from memory into f18
fnmadd.s f24, f8, f3, f18, dyn # perform operation
fnmadd.s f24, f8, f3, f18, rdn # perform operation
fnmadd.s f24, f8, f3, f18, rmm # perform operation
fnmadd.s f24, f8, f3, f18, rne # perform operation
fnmadd.s f24, f8, f3, f18, rtz # perform operation
fnmadd.s f24, f8, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f8, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f8, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f8, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f8, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f8, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xcfe1b1df # load x3 with value 0xcfe1b1df
sw x3, 0(x2) # store 0xcfe1b1df in memory
flw f22, 0(x2) # load 0xcfe1b1df from memory into f22
fnmadd.s f23, f16, f8, f22, dyn # perform operation
fnmadd.s f23, f16, f8, f22, rdn # perform operation
fnmadd.s f23, f16, f8, f22, rmm # perform operation
fnmadd.s f23, f16, f8, f22, rne # perform operation
fnmadd.s f23, f16, f8, f22, rtz # perform operation
fnmadd.s f23, f16, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x0077c480 # load x3 with value 0x0077c480
sw x3, 0(x2) # store 0x0077c480 in memory
flw f12, 0(x2) # load 0x0077c480 from memory into f12
fnmadd.s f24, f20, f23, f12, dyn # perform operation
fnmadd.s f24, f20, f23, f12, rdn # perform operation
fnmadd.s f24, f20, f23, f12, rmm # perform operation
fnmadd.s f24, f20, f23, f12, rne # perform operation
fnmadd.s f24, f20, f23, f12, rtz # perform operation
fnmadd.s f24, f20, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x48dbf660 # load x3 with value 0x48dbf660
sw x3, 0(x2) # store 0x48dbf660 in memory
flw f18, 0(x2) # load 0x48dbf660 from memory into f18
fnmadd.s f26, f13, f12, f18, dyn # perform operation
fnmadd.s f26, f13, f12, f18, rdn # perform operation
fnmadd.s f26, f13, f12, f18, rmm # perform operation
fnmadd.s f26, f13, f12, f18, rne # perform operation
fnmadd.s f26, f13, f12, f18, rtz # perform operation
fnmadd.s f26, f13, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xaa44b0d3 # load x3 with value 0xaa44b0d3
sw x3, 0(x2) # store 0xaa44b0d3 in memory
flw f1, 0(x2) # load 0xaa44b0d3 from memory into f1
fnmadd.s f5, f30, f7, f1, dyn # perform operation
fnmadd.s f5, f30, f7, f1, rdn # perform operation
fnmadd.s f5, f30, f7, f1, rmm # perform operation
fnmadd.s f5, f30, f7, f1, rne # perform operation
fnmadd.s f5, f30, f7, f1, rtz # perform operation
fnmadd.s f5, f30, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x4e643d46 # load x3 with value 0x4e643d46
sw x3, 0(x2) # store 0x4e643d46 in memory
flw f29, 0(x2) # load 0x4e643d46 from memory into f29
fnmadd.s f14, f28, f10, f29, dyn # perform operation
fnmadd.s f14, f28, f10, f29, rdn # perform operation
fnmadd.s f14, f28, f10, f29, rmm # perform operation
fnmadd.s f14, f28, f10, f29, rne # perform operation
fnmadd.s f14, f28, f10, f29, rtz # perform operation
fnmadd.s f14, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f28, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x503817a2 # load x3 with value 0x503817a2
sw x3, 0(x2) # store 0x503817a2 in memory
flw f20, 0(x2) # load 0x503817a2 from memory into f20
fnmadd.s f15, f9, f28, f20, dyn # perform operation
fnmadd.s f15, f9, f28, f20, rdn # perform operation
fnmadd.s f15, f9, f28, f20, rmm # perform operation
fnmadd.s f15, f9, f28, f20, rne # perform operation
fnmadd.s f15, f9, f28, f20, rtz # perform operation
fnmadd.s f15, f9, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f9, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f9, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x4f910b88 # load x3 with value 0x4f910b88
sw x3, 0(x2) # store 0x4f910b88 in memory
flw f23, 0(x2) # load 0x4f910b88 from memory into f23
fnmadd.s f9, f18, f16, f23, dyn # perform operation
fnmadd.s f9, f18, f16, f23, rdn # perform operation
fnmadd.s f9, f18, f16, f23, rmm # perform operation
fnmadd.s f9, f18, f16, f23, rne # perform operation
fnmadd.s f9, f18, f16, f23, rtz # perform operation
fnmadd.s f9, f18, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x9152948c # load x3 with value 0x9152948c
sw x3, 0(x2) # store 0x9152948c in memory
flw f21, 0(x2) # load 0x9152948c from memory into f21
fnmadd.s f11, f29, f8, f21, dyn # perform operation
fnmadd.s f11, f29, f8, f21, rdn # perform operation
fnmadd.s f11, f29, f8, f21, rmm # perform operation
fnmadd.s f11, f29, f8, f21, rne # perform operation
fnmadd.s f11, f29, f8, f21, rtz # perform operation
fnmadd.s f11, f29, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x1b5aeb04 # load x3 with value 0x1b5aeb04
sw x3, 0(x2) # store 0x1b5aeb04 in memory
flw f1, 0(x2) # load 0x1b5aeb04 from memory into f1
fnmadd.s f16, f9, f28, f1, dyn # perform operation
fnmadd.s f16, f9, f28, f1, rdn # perform operation
fnmadd.s f16, f9, f28, f1, rmm # perform operation
fnmadd.s f16, f9, f28, f1, rne # perform operation
fnmadd.s f16, f9, f28, f1, rtz # perform operation
fnmadd.s f16, f9, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x7e9f6aa0 # load x3 with value 0x7e9f6aa0
sw x3, 0(x2) # store 0x7e9f6aa0 in memory
flw f12, 0(x2) # load 0x7e9f6aa0 from memory into f12
fnmadd.s f28, f10, f22, f12, dyn # perform operation
fnmadd.s f28, f10, f22, f12, rdn # perform operation
fnmadd.s f28, f10, f22, f12, rmm # perform operation
fnmadd.s f28, f10, f22, f12, rne # perform operation
fnmadd.s f28, f10, f22, f12, rtz # perform operation
fnmadd.s f28, f10, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0xaaf6fe8c # load x3 with value 0xaaf6fe8c
sw x3, 0(x2) # store 0xaaf6fe8c in memory
flw f19, 0(x2) # load 0xaaf6fe8c from memory into f19
fnmadd.s f23, f16, f17, f19, dyn # perform operation
fnmadd.s f23, f16, f17, f19, rdn # perform operation
fnmadd.s f23, f16, f17, f19, rmm # perform operation
fnmadd.s f23, f16, f17, f19, rne # perform operation
fnmadd.s f23, f16, f17, f19, rtz # perform operation
fnmadd.s f23, f16, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x50247246 # load x3 with value 0x50247246
sw x3, 0(x2) # store 0x50247246 in memory
flw f30, 0(x2) # load 0x50247246 from memory into f30
fnmadd.s f10, f22, f23, f30, dyn # perform operation
fnmadd.s f10, f22, f23, f30, rdn # perform operation
fnmadd.s f10, f22, f23, f30, rmm # perform operation
fnmadd.s f10, f22, f23, f30, rne # perform operation
fnmadd.s f10, f22, f23, f30, rtz # perform operation
fnmadd.s f10, f22, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f23, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xdcb9ff46 # load x3 with value 0xdcb9ff46
sw x3, 0(x2) # store 0xdcb9ff46 in memory
flw f1, 0(x2) # load 0xdcb9ff46 from memory into f1
fnmadd.s f5, f2, f9, f1, dyn # perform operation
fnmadd.s f5, f2, f9, f1, rdn # perform operation
fnmadd.s f5, f2, f9, f1, rmm # perform operation
fnmadd.s f5, f2, f9, f1, rne # perform operation
fnmadd.s f5, f2, f9, f1, rtz # perform operation
fnmadd.s f5, f2, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x7a650989 # load x3 with value 0x7a650989
sw x3, 0(x2) # store 0x7a650989 in memory
flw f6, 0(x2) # load 0x7a650989 from memory into f6
fnmadd.s f11, f7, f26, f6, dyn # perform operation
fnmadd.s f11, f7, f26, f6, rdn # perform operation
fnmadd.s f11, f7, f26, f6, rmm # perform operation
fnmadd.s f11, f7, f26, f6, rne # perform operation
fnmadd.s f11, f7, f26, f6, rtz # perform operation
fnmadd.s f11, f7, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x14b1d60c # load x3 with value 0x14b1d60c
sw x3, 0(x2) # store 0x14b1d60c in memory
flw f12, 0(x2) # load 0x14b1d60c from memory into f12
fnmadd.s f10, f20, f7, f12, dyn # perform operation
fnmadd.s f10, f20, f7, f12, rdn # perform operation
fnmadd.s f10, f20, f7, f12, rmm # perform operation
fnmadd.s f10, f20, f7, f12, rne # perform operation
fnmadd.s f10, f20, f7, f12, rtz # perform operation
fnmadd.s f10, f20, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xd4ce0108 # load x3 with value 0xd4ce0108
sw x3, 0(x2) # store 0xd4ce0108 in memory
flw f18, 0(x2) # load 0xd4ce0108 from memory into f18
fnmadd.s f24, f31, f23, f18, dyn # perform operation
fnmadd.s f24, f31, f23, f18, rdn # perform operation
fnmadd.s f24, f31, f23, f18, rmm # perform operation
fnmadd.s f24, f31, f23, f18, rne # perform operation
fnmadd.s f24, f31, f23, f18, rtz # perform operation
fnmadd.s f24, f31, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x50635c0c # load x3 with value 0x50635c0c
sw x3, 0(x2) # store 0x50635c0c in memory
flw f11, 0(x2) # load 0x50635c0c from memory into f11
fnmadd.s f7, f1, f13, f11, dyn # perform operation
fnmadd.s f7, f1, f13, f11, rdn # perform operation
fnmadd.s f7, f1, f13, f11, rmm # perform operation
fnmadd.s f7, f1, f13, f11, rne # perform operation
fnmadd.s f7, f1, f13, f11, rtz # perform operation
fnmadd.s f7, f1, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xd1d90e81 # load x3 with value 0xd1d90e81
sw x3, 0(x2) # store 0xd1d90e81 in memory
flw f5, 0(x2) # load 0xd1d90e81 from memory into f5
fnmadd.s f23, f19, f1, f5, dyn # perform operation
fnmadd.s f23, f19, f1, f5, rdn # perform operation
fnmadd.s f23, f19, f1, f5, rmm # perform operation
fnmadd.s f23, f19, f1, f5, rne # perform operation
fnmadd.s f23, f19, f1, f5, rtz # perform operation
fnmadd.s f23, f19, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f1, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x68ccf138 # load x3 with value 0x68ccf138
sw x3, 0(x2) # store 0x68ccf138 in memory
flw f23, 0(x2) # load 0x68ccf138 from memory into f23
fnmadd.s f14, f8, f3, f23, dyn # perform operation
fnmadd.s f14, f8, f3, f23, rdn # perform operation
fnmadd.s f14, f8, f3, f23, rmm # perform operation
fnmadd.s f14, f8, f3, f23, rne # perform operation
fnmadd.s f14, f8, f3, f23, rtz # perform operation
fnmadd.s f14, f8, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x669133e6 # load x3 with value 0x669133e6
sw x3, 0(x2) # store 0x669133e6 in memory
flw f23, 0(x2) # load 0x669133e6 from memory into f23
fnmadd.s f13, f14, f5, f23, dyn # perform operation
fnmadd.s f13, f14, f5, f23, rdn # perform operation
fnmadd.s f13, f14, f5, f23, rmm # perform operation
fnmadd.s f13, f14, f5, f23, rne # perform operation
fnmadd.s f13, f14, f5, f23, rtz # perform operation
fnmadd.s f13, f14, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f14, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f14, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x1562c2a7 # load x3 with value 0x1562c2a7
sw x3, 0(x2) # store 0x1562c2a7 in memory
flw f30, 0(x2) # load 0x1562c2a7 from memory into f30
fnmadd.s f19, f17, f26, f30, dyn # perform operation
fnmadd.s f19, f17, f26, f30, rdn # perform operation
fnmadd.s f19, f17, f26, f30, rmm # perform operation
fnmadd.s f19, f17, f26, f30, rne # perform operation
fnmadd.s f19, f17, f26, f30, rtz # perform operation
fnmadd.s f19, f17, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f17, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f17, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x6287a70c # load x3 with value 0x6287a70c
sw x3, 0(x2) # store 0x6287a70c in memory
flw f15, 0(x2) # load 0x6287a70c from memory into f15
fnmadd.s f23, f10, f29, f15, dyn # perform operation
fnmadd.s f23, f10, f29, f15, rdn # perform operation
fnmadd.s f23, f10, f29, f15, rmm # perform operation
fnmadd.s f23, f10, f29, f15, rne # perform operation
fnmadd.s f23, f10, f29, f15, rtz # perform operation
fnmadd.s f23, f10, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f10, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f10, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0xba19c947 # load x3 with value 0xba19c947
sw x3, 0(x2) # store 0xba19c947 in memory
flw f12, 0(x2) # load 0xba19c947 from memory into f12
fnmadd.s f23, f7, f1, f12, dyn # perform operation
fnmadd.s f23, f7, f1, f12, rdn # perform operation
fnmadd.s f23, f7, f1, f12, rmm # perform operation
fnmadd.s f23, f7, f1, f12, rne # perform operation
fnmadd.s f23, f7, f1, f12, rtz # perform operation
fnmadd.s f23, f7, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xdd6b8396 # load x3 with value 0xdd6b8396
sw x3, 0(x2) # store 0xdd6b8396 in memory
flw f29, 0(x2) # load 0xdd6b8396 from memory into f29
fnmadd.s f17, f24, f5, f29, dyn # perform operation
fnmadd.s f17, f24, f5, f29, rdn # perform operation
fnmadd.s f17, f24, f5, f29, rmm # perform operation
fnmadd.s f17, f24, f5, f29, rne # perform operation
fnmadd.s f17, f24, f5, f29, rtz # perform operation
fnmadd.s f17, f24, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f24, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f24, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x0d7b44f9 # load x3 with value 0x0d7b44f9
sw x3, 0(x2) # store 0x0d7b44f9 in memory
flw f20, 0(x2) # load 0x0d7b44f9 from memory into f20
fnmadd.s f30, f26, f14, f20, dyn # perform operation
fnmadd.s f30, f26, f14, f20, rdn # perform operation
fnmadd.s f30, f26, f14, f20, rmm # perform operation
fnmadd.s f30, f26, f14, f20, rne # perform operation
fnmadd.s f30, f26, f14, f20, rtz # perform operation
fnmadd.s f30, f26, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f14, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xdb053464 # load x3 with value 0xdb053464
sw x3, 0(x2) # store 0xdb053464 in memory
flw f2, 0(x2) # load 0xdb053464 from memory into f2
fnmadd.s f15, f14, f6, f2, dyn # perform operation
fnmadd.s f15, f14, f6, f2, rdn # perform operation
fnmadd.s f15, f14, f6, f2, rmm # perform operation
fnmadd.s f15, f14, f6, f2, rne # perform operation
fnmadd.s f15, f14, f6, f2, rtz # perform operation
fnmadd.s f15, f14, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xd58de2be # load x3 with value 0xd58de2be
sw x3, 0(x2) # store 0xd58de2be in memory
flw f23, 0(x2) # load 0xd58de2be from memory into f23
fnmadd.s f13, f10, f27, f23, dyn # perform operation
fnmadd.s f13, f10, f27, f23, rdn # perform operation
fnmadd.s f13, f10, f27, f23, rmm # perform operation
fnmadd.s f13, f10, f27, f23, rne # perform operation
fnmadd.s f13, f10, f27, f23, rtz # perform operation
fnmadd.s f13, f10, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f10, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f10, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x02bef2a8 # load x3 with value 0x02bef2a8
sw x3, 0(x2) # store 0x02bef2a8 in memory
flw f26, 0(x2) # load 0x02bef2a8 from memory into f26
fnmadd.s f8, f22, f10, f26, dyn # perform operation
fnmadd.s f8, f22, f10, f26, rdn # perform operation
fnmadd.s f8, f22, f10, f26, rmm # perform operation
fnmadd.s f8, f22, f10, f26, rne # perform operation
fnmadd.s f8, f22, f10, f26, rtz # perform operation
fnmadd.s f8, f22, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0xa589bc01 # load x3 with value 0xa589bc01
sw x3, 0(x2) # store 0xa589bc01 in memory
flw f13, 0(x2) # load 0xa589bc01 from memory into f13
fnmadd.s f25, f6, f22, f13, dyn # perform operation
fnmadd.s f25, f6, f22, f13, rdn # perform operation
fnmadd.s f25, f6, f22, f13, rmm # perform operation
fnmadd.s f25, f6, f22, f13, rne # perform operation
fnmadd.s f25, f6, f22, f13, rtz # perform operation
fnmadd.s f25, f6, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x11e14d85 # load x3 with value 0x11e14d85
sw x3, 0(x2) # store 0x11e14d85 in memory
flw f2, 0(x2) # load 0x11e14d85 from memory into f2
fnmadd.s f10, f28, f29, f2, dyn # perform operation
fnmadd.s f10, f28, f29, f2, rdn # perform operation
fnmadd.s f10, f28, f29, f2, rmm # perform operation
fnmadd.s f10, f28, f29, f2, rne # perform operation
fnmadd.s f10, f28, f29, f2, rtz # perform operation
fnmadd.s f10, f28, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x1d7fdd05 # load x3 with value 0x1d7fdd05
sw x3, 0(x2) # store 0x1d7fdd05 in memory
flw f12, 0(x2) # load 0x1d7fdd05 from memory into f12
fnmadd.s f20, f22, f3, f12, dyn # perform operation
fnmadd.s f20, f22, f3, f12, rdn # perform operation
fnmadd.s f20, f22, f3, f12, rmm # perform operation
fnmadd.s f20, f22, f3, f12, rne # perform operation
fnmadd.s f20, f22, f3, f12, rtz # perform operation
fnmadd.s f20, f22, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x4ac43810 # load x3 with value 0x4ac43810
sw x3, 0(x2) # store 0x4ac43810 in memory
flw f14, 0(x2) # load 0x4ac43810 from memory into f14
fnmadd.s f22, f13, f7, f14, dyn # perform operation
fnmadd.s f22, f13, f7, f14, rdn # perform operation
fnmadd.s f22, f13, f7, f14, rmm # perform operation
fnmadd.s f22, f13, f7, f14, rne # perform operation
fnmadd.s f22, f13, f7, f14, rtz # perform operation
fnmadd.s f22, f13, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x76659489 # load x3 with value 0x76659489
sw x3, 0(x2) # store 0x76659489 in memory
flw f6, 0(x2) # load 0x76659489 from memory into f6
fnmadd.s f14, f10, f5, f6, dyn # perform operation
fnmadd.s f14, f10, f5, f6, rdn # perform operation
fnmadd.s f14, f10, f5, f6, rmm # perform operation
fnmadd.s f14, f10, f5, f6, rne # perform operation
fnmadd.s f14, f10, f5, f6, rtz # perform operation
fnmadd.s f14, f10, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f10, f5, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x4376f26e # load x3 with value 0x4376f26e
sw x3, 0(x2) # store 0x4376f26e in memory
flw f2, 0(x2) # load 0x4376f26e from memory into f2
fnmadd.s f5, f10, f28, f2, dyn # perform operation
fnmadd.s f5, f10, f28, f2, rdn # perform operation
fnmadd.s f5, f10, f28, f2, rmm # perform operation
fnmadd.s f5, f10, f28, f2, rne # perform operation
fnmadd.s f5, f10, f28, f2, rtz # perform operation
fnmadd.s f5, f10, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f10, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f10, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f10, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f10, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f10, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x137585d7 # load x3 with value 0x137585d7
sw x3, 0(x2) # store 0x137585d7 in memory
flw f27, 0(x2) # load 0x137585d7 from memory into f27
fnmadd.s f3, f28, f6, f27, dyn # perform operation
fnmadd.s f3, f28, f6, f27, rdn # perform operation
fnmadd.s f3, f28, f6, f27, rmm # perform operation
fnmadd.s f3, f28, f6, f27, rne # perform operation
fnmadd.s f3, f28, f6, f27, rtz # perform operation
fnmadd.s f3, f28, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xa4b1f38b # load x3 with value 0xa4b1f38b
sw x3, 0(x2) # store 0xa4b1f38b in memory
flw f8, 0(x2) # load 0xa4b1f38b from memory into f8
fnmadd.s f2, f13, f7, f8, dyn # perform operation
fnmadd.s f2, f13, f7, f8, rdn # perform operation
fnmadd.s f2, f13, f7, f8, rmm # perform operation
fnmadd.s f2, f13, f7, f8, rne # perform operation
fnmadd.s f2, f13, f7, f8, rtz # perform operation
fnmadd.s f2, f13, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xbd6bc3a7 # load x3 with value 0xbd6bc3a7
sw x3, 0(x2) # store 0xbd6bc3a7 in memory
flw f24, 0(x2) # load 0xbd6bc3a7 from memory into f24
fnmadd.s f17, f23, f16, f24, dyn # perform operation
fnmadd.s f17, f23, f16, f24, rdn # perform operation
fnmadd.s f17, f23, f16, f24, rmm # perform operation
fnmadd.s f17, f23, f16, f24, rne # perform operation
fnmadd.s f17, f23, f16, f24, rtz # perform operation
fnmadd.s f17, f23, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x07dc55b4 # load x3 with value 0x07dc55b4
sw x3, 0(x2) # store 0x07dc55b4 in memory
flw f3, 0(x2) # load 0x07dc55b4 from memory into f3
fnmadd.s f12, f14, f17, f3, dyn # perform operation
fnmadd.s f12, f14, f17, f3, rdn # perform operation
fnmadd.s f12, f14, f17, f3, rmm # perform operation
fnmadd.s f12, f14, f17, f3, rne # perform operation
fnmadd.s f12, f14, f17, f3, rtz # perform operation
fnmadd.s f12, f14, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x3f4f756e # load x3 with value 0x3f4f756e
sw x3, 0(x2) # store 0x3f4f756e in memory
flw f5, 0(x2) # load 0x3f4f756e from memory into f5
fnmadd.s f9, f8, f14, f5, dyn # perform operation
fnmadd.s f9, f8, f14, f5, rdn # perform operation
fnmadd.s f9, f8, f14, f5, rmm # perform operation
fnmadd.s f9, f8, f14, f5, rne # perform operation
fnmadd.s f9, f8, f14, f5, rtz # perform operation
fnmadd.s f9, f8, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xe0520f04 # load x3 with value 0xe0520f04
sw x3, 0(x2) # store 0xe0520f04 in memory
flw f19, 0(x2) # load 0xe0520f04 from memory into f19
fnmadd.s f13, f2, f3, f19, dyn # perform operation
fnmadd.s f13, f2, f3, f19, rdn # perform operation
fnmadd.s f13, f2, f3, f19, rmm # perform operation
fnmadd.s f13, f2, f3, f19, rne # perform operation
fnmadd.s f13, f2, f3, f19, rtz # perform operation
fnmadd.s f13, f2, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f3, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xa1b82730 # load x3 with value 0xa1b82730
sw x3, 0(x2) # store 0xa1b82730 in memory
flw f9, 0(x2) # load 0xa1b82730 from memory into f9
fnmadd.s f19, f16, f28, f9, dyn # perform operation
fnmadd.s f19, f16, f28, f9, rdn # perform operation
fnmadd.s f19, f16, f28, f9, rmm # perform operation
fnmadd.s f19, f16, f28, f9, rne # perform operation
fnmadd.s f19, f16, f28, f9, rtz # perform operation
fnmadd.s f19, f16, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0xbe040de0 # load x3 with value 0xbe040de0
sw x3, 0(x2) # store 0xbe040de0 in memory
flw f11, 0(x2) # load 0xbe040de0 from memory into f11
fnmadd.s f8, f1, f3, f11, dyn # perform operation
fnmadd.s f8, f1, f3, f11, rdn # perform operation
fnmadd.s f8, f1, f3, f11, rmm # perform operation
fnmadd.s f8, f1, f3, f11, rne # perform operation
fnmadd.s f8, f1, f3, f11, rtz # perform operation
fnmadd.s f8, f1, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f1, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f1, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0xd53e2a65 # load x3 with value 0xd53e2a65
sw x3, 0(x2) # store 0xd53e2a65 in memory
flw f5, 0(x2) # load 0xd53e2a65 from memory into f5
fnmadd.s f24, f19, f12, f5, dyn # perform operation
fnmadd.s f24, f19, f12, f5, rdn # perform operation
fnmadd.s f24, f19, f12, f5, rmm # perform operation
fnmadd.s f24, f19, f12, f5, rne # perform operation
fnmadd.s f24, f19, f12, f5, rtz # perform operation
fnmadd.s f24, f19, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x4f371fc1 # load x3 with value 0x4f371fc1
sw x3, 0(x2) # store 0x4f371fc1 in memory
flw f18, 0(x2) # load 0x4f371fc1 from memory into f18
fnmadd.s f20, f19, f31, f18, dyn # perform operation
fnmadd.s f20, f19, f31, f18, rdn # perform operation
fnmadd.s f20, f19, f31, f18, rmm # perform operation
fnmadd.s f20, f19, f31, f18, rne # perform operation
fnmadd.s f20, f19, f31, f18, rtz # perform operation
fnmadd.s f20, f19, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f19, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f19, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f19, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f19, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f19, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0xa9aa4df1 # load x3 with value 0xa9aa4df1
sw x3, 0(x2) # store 0xa9aa4df1 in memory
flw f17, 0(x2) # load 0xa9aa4df1 from memory into f17
fnmadd.s f10, f6, f24, f17, dyn # perform operation
fnmadd.s f10, f6, f24, f17, rdn # perform operation
fnmadd.s f10, f6, f24, f17, rmm # perform operation
fnmadd.s f10, f6, f24, f17, rne # perform operation
fnmadd.s f10, f6, f24, f17, rtz # perform operation
fnmadd.s f10, f6, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f6, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f6, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xdebe9e19 # load x3 with value 0xdebe9e19
sw x3, 0(x2) # store 0xdebe9e19 in memory
flw f26, 0(x2) # load 0xdebe9e19 from memory into f26
fnmadd.s f2, f7, f21, f26, dyn # perform operation
fnmadd.s f2, f7, f21, f26, rdn # perform operation
fnmadd.s f2, f7, f21, f26, rmm # perform operation
fnmadd.s f2, f7, f21, f26, rne # perform operation
fnmadd.s f2, f7, f21, f26, rtz # perform operation
fnmadd.s f2, f7, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f7, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f7, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x267c8c09 # load x3 with value 0x267c8c09
sw x3, 0(x2) # store 0x267c8c09 in memory
flw f6, 0(x2) # load 0x267c8c09 from memory into f6
fnmadd.s f23, f21, f18, f6, dyn # perform operation
fnmadd.s f23, f21, f18, f6, rdn # perform operation
fnmadd.s f23, f21, f18, f6, rmm # perform operation
fnmadd.s f23, f21, f18, f6, rne # perform operation
fnmadd.s f23, f21, f18, f6, rtz # perform operation
fnmadd.s f23, f21, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xed0dfc43 # load x3 with value 0xed0dfc43
sw x3, 0(x2) # store 0xed0dfc43 in memory
flw f13, 0(x2) # load 0xed0dfc43 from memory into f13
fnmadd.s f31, f12, f3, f13, dyn # perform operation
fnmadd.s f31, f12, f3, f13, rdn # perform operation
fnmadd.s f31, f12, f3, f13, rmm # perform operation
fnmadd.s f31, f12, f3, f13, rne # perform operation
fnmadd.s f31, f12, f3, f13, rtz # perform operation
fnmadd.s f31, f12, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x6e81b9b4 # load x3 with value 0x6e81b9b4
sw x3, 0(x2) # store 0x6e81b9b4 in memory
flw f30, 0(x2) # load 0x6e81b9b4 from memory into f30
fnmadd.s f25, f28, f15, f30, dyn # perform operation
fnmadd.s f25, f28, f15, f30, rdn # perform operation
fnmadd.s f25, f28, f15, f30, rmm # perform operation
fnmadd.s f25, f28, f15, f30, rne # perform operation
fnmadd.s f25, f28, f15, f30, rtz # perform operation
fnmadd.s f25, f28, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xbaaafa48 # load x3 with value 0xbaaafa48
sw x3, 0(x2) # store 0xbaaafa48 in memory
flw f1, 0(x2) # load 0xbaaafa48 from memory into f1
fnmadd.s f29, f25, f15, f1, dyn # perform operation
fnmadd.s f29, f25, f15, f1, rdn # perform operation
fnmadd.s f29, f25, f15, f1, rmm # perform operation
fnmadd.s f29, f25, f15, f1, rne # perform operation
fnmadd.s f29, f25, f15, f1, rtz # perform operation
fnmadd.s f29, f25, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x90b92dee # load x3 with value 0x90b92dee
sw x3, 0(x2) # store 0x90b92dee in memory
flw f24, 0(x2) # load 0x90b92dee from memory into f24
fnmadd.s f21, f11, f5, f24, dyn # perform operation
fnmadd.s f21, f11, f5, f24, rdn # perform operation
fnmadd.s f21, f11, f5, f24, rmm # perform operation
fnmadd.s f21, f11, f5, f24, rne # perform operation
fnmadd.s f21, f11, f5, f24, rtz # perform operation
fnmadd.s f21, f11, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f11, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f11, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xa82f9439 # load x3 with value 0xa82f9439
sw x3, 0(x2) # store 0xa82f9439 in memory
flw f9, 0(x2) # load 0xa82f9439 from memory into f9
fnmadd.s f17, f10, f31, f9, dyn # perform operation
fnmadd.s f17, f10, f31, f9, rdn # perform operation
fnmadd.s f17, f10, f31, f9, rmm # perform operation
fnmadd.s f17, f10, f31, f9, rne # perform operation
fnmadd.s f17, f10, f31, f9, rtz # perform operation
fnmadd.s f17, f10, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f10, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f10, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x11e622b0 # load x3 with value 0x11e622b0
sw x3, 0(x2) # store 0x11e622b0 in memory
flw f17, 0(x2) # load 0x11e622b0 from memory into f17
fnmadd.s f8, f10, f14, f17, dyn # perform operation
fnmadd.s f8, f10, f14, f17, rdn # perform operation
fnmadd.s f8, f10, f14, f17, rmm # perform operation
fnmadd.s f8, f10, f14, f17, rne # perform operation
fnmadd.s f8, f10, f14, f17, rtz # perform operation
fnmadd.s f8, f10, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x00769b93 # load x3 with value 0x00769b93
sw x3, 0(x2) # store 0x00769b93 in memory
flw f14, 0(x2) # load 0x00769b93 from memory into f14
fnmadd.s f25, f22, f12, f14, dyn # perform operation
fnmadd.s f25, f22, f12, f14, rdn # perform operation
fnmadd.s f25, f22, f12, f14, rmm # perform operation
fnmadd.s f25, f22, f12, f14, rne # perform operation
fnmadd.s f25, f22, f12, f14, rtz # perform operation
fnmadd.s f25, f22, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x9b004f3c # load x3 with value 0x9b004f3c
sw x3, 0(x2) # store 0x9b004f3c in memory
flw f24, 0(x2) # load 0x9b004f3c from memory into f24
fnmadd.s f7, f15, f16, f24, dyn # perform operation
fnmadd.s f7, f15, f16, f24, rdn # perform operation
fnmadd.s f7, f15, f16, f24, rmm # perform operation
fnmadd.s f7, f15, f16, f24, rne # perform operation
fnmadd.s f7, f15, f16, f24, rtz # perform operation
fnmadd.s f7, f15, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f15, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f15, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x3855c7eb # load x3 with value 0x3855c7eb
sw x3, 0(x2) # store 0x3855c7eb in memory
flw f8, 0(x2) # load 0x3855c7eb from memory into f8
fnmadd.s f19, f16, f17, f8, dyn # perform operation
fnmadd.s f19, f16, f17, f8, rdn # perform operation
fnmadd.s f19, f16, f17, f8, rmm # perform operation
fnmadd.s f19, f16, f17, f8, rne # perform operation
fnmadd.s f19, f16, f17, f8, rtz # perform operation
fnmadd.s f19, f16, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f16, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f16, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f16, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f16, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f16, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x7e44b48f # load x3 with value 0x7e44b48f
sw x3, 0(x2) # store 0x7e44b48f in memory
flw f10, 0(x2) # load 0x7e44b48f from memory into f10
fnmadd.s f26, f17, f7, f10, dyn # perform operation
fnmadd.s f26, f17, f7, f10, rdn # perform operation
fnmadd.s f26, f17, f7, f10, rmm # perform operation
fnmadd.s f26, f17, f7, f10, rne # perform operation
fnmadd.s f26, f17, f7, f10, rtz # perform operation
fnmadd.s f26, f17, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0xacb5a13a # load x3 with value 0xacb5a13a
sw x3, 0(x2) # store 0xacb5a13a in memory
flw f19, 0(x2) # load 0xacb5a13a from memory into f19
fnmadd.s f26, f20, f17, f19, dyn # perform operation
fnmadd.s f26, f20, f17, f19, rdn # perform operation
fnmadd.s f26, f20, f17, f19, rmm # perform operation
fnmadd.s f26, f20, f17, f19, rne # perform operation
fnmadd.s f26, f20, f17, f19, rtz # perform operation
fnmadd.s f26, f20, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xd8b8f854 # load x3 with value 0xd8b8f854
sw x3, 0(x2) # store 0xd8b8f854 in memory
flw f22, 0(x2) # load 0xd8b8f854 from memory into f22
fnmadd.s f14, f19, f30, f22, dyn # perform operation
fnmadd.s f14, f19, f30, f22, rdn # perform operation
fnmadd.s f14, f19, f30, f22, rmm # perform operation
fnmadd.s f14, f19, f30, f22, rne # perform operation
fnmadd.s f14, f19, f30, f22, rtz # perform operation
fnmadd.s f14, f19, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x8637631a # load x3 with value 0x8637631a
sw x3, 0(x2) # store 0x8637631a in memory
flw f24, 0(x2) # load 0x8637631a from memory into f24
fnmadd.s f27, f12, f3, f24, dyn # perform operation
fnmadd.s f27, f12, f3, f24, rdn # perform operation
fnmadd.s f27, f12, f3, f24, rmm # perform operation
fnmadd.s f27, f12, f3, f24, rne # perform operation
fnmadd.s f27, f12, f3, f24, rtz # perform operation
fnmadd.s f27, f12, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f3, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x4d6d5310 # load x3 with value 0x4d6d5310
sw x3, 0(x2) # store 0x4d6d5310 in memory
flw f31, 0(x2) # load 0x4d6d5310 from memory into f31
fnmadd.s f14, f13, f3, f31, dyn # perform operation
fnmadd.s f14, f13, f3, f31, rdn # perform operation
fnmadd.s f14, f13, f3, f31, rmm # perform operation
fnmadd.s f14, f13, f3, f31, rne # perform operation
fnmadd.s f14, f13, f3, f31, rtz # perform operation
fnmadd.s f14, f13, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f3, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xeb69144a # load x3 with value 0xeb69144a
sw x3, 0(x2) # store 0xeb69144a in memory
flw f16, 0(x2) # load 0xeb69144a from memory into f16
fnmadd.s f5, f24, f27, f16, dyn # perform operation
fnmadd.s f5, f24, f27, f16, rdn # perform operation
fnmadd.s f5, f24, f27, f16, rmm # perform operation
fnmadd.s f5, f24, f27, f16, rne # perform operation
fnmadd.s f5, f24, f27, f16, rtz # perform operation
fnmadd.s f5, f24, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f27, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x4122e1bd # load x3 with value 0x4122e1bd
sw x3, 0(x2) # store 0x4122e1bd in memory
flw f26, 0(x2) # load 0x4122e1bd from memory into f26
fnmadd.s f28, f5, f3, f26, dyn # perform operation
fnmadd.s f28, f5, f3, f26, rdn # perform operation
fnmadd.s f28, f5, f3, f26, rmm # perform operation
fnmadd.s f28, f5, f3, f26, rne # perform operation
fnmadd.s f28, f5, f3, f26, rtz # perform operation
fnmadd.s f28, f5, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f5, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f5, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x9fb36343 # load x3 with value 0x9fb36343
sw x3, 0(x2) # store 0x9fb36343 in memory
flw f22, 0(x2) # load 0x9fb36343 from memory into f22
fnmadd.s f23, f28, f20, f22, dyn # perform operation
fnmadd.s f23, f28, f20, f22, rdn # perform operation
fnmadd.s f23, f28, f20, f22, rmm # perform operation
fnmadd.s f23, f28, f20, f22, rne # perform operation
fnmadd.s f23, f28, f20, f22, rtz # perform operation
fnmadd.s f23, f28, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f28, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f28, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f28, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f28, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f28, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xc885eae5 # load x3 with value 0xc885eae5
sw x3, 0(x2) # store 0xc885eae5 in memory
flw f11, 0(x2) # load 0xc885eae5 from memory into f11
fnmadd.s f29, f22, f15, f11, dyn # perform operation
fnmadd.s f29, f22, f15, f11, rdn # perform operation
fnmadd.s f29, f22, f15, f11, rmm # perform operation
fnmadd.s f29, f22, f15, f11, rne # perform operation
fnmadd.s f29, f22, f15, f11, rtz # perform operation
fnmadd.s f29, f22, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f22, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f22, f15, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x4a1f1e6c # load x3 with value 0x4a1f1e6c
sw x3, 0(x2) # store 0x4a1f1e6c in memory
flw f5, 0(x2) # load 0x4a1f1e6c from memory into f5
fnmadd.s f11, f27, f18, f5, dyn # perform operation
fnmadd.s f11, f27, f18, f5, rdn # perform operation
fnmadd.s f11, f27, f18, f5, rmm # perform operation
fnmadd.s f11, f27, f18, f5, rne # perform operation
fnmadd.s f11, f27, f18, f5, rtz # perform operation
fnmadd.s f11, f27, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f27, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f27, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x015803f7 # load x3 with value 0x015803f7
sw x3, 0(x2) # store 0x015803f7 in memory
flw f20, 0(x2) # load 0x015803f7 from memory into f20
fnmadd.s f1, f31, f12, f20, dyn # perform operation
fnmadd.s f1, f31, f12, f20, rdn # perform operation
fnmadd.s f1, f31, f12, f20, rmm # perform operation
fnmadd.s f1, f31, f12, f20, rne # perform operation
fnmadd.s f1, f31, f12, f20, rtz # perform operation
fnmadd.s f1, f31, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0xc0cda3d6 # load x3 with value 0xc0cda3d6
sw x3, 0(x2) # store 0xc0cda3d6 in memory
flw f17, 0(x2) # load 0xc0cda3d6 from memory into f17
fnmadd.s f8, f3, f18, f17, dyn # perform operation
fnmadd.s f8, f3, f18, f17, rdn # perform operation
fnmadd.s f8, f3, f18, f17, rmm # perform operation
fnmadd.s f8, f3, f18, f17, rne # perform operation
fnmadd.s f8, f3, f18, f17, rtz # perform operation
fnmadd.s f8, f3, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f3, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0xbf62b31e # load x3 with value 0xbf62b31e
sw x3, 0(x2) # store 0xbf62b31e in memory
flw f19, 0(x2) # load 0xbf62b31e from memory into f19
fnmadd.s f6, f30, f31, f19, dyn # perform operation
fnmadd.s f6, f30, f31, f19, rdn # perform operation
fnmadd.s f6, f30, f31, f19, rmm # perform operation
fnmadd.s f6, f30, f31, f19, rne # perform operation
fnmadd.s f6, f30, f31, f19, rtz # perform operation
fnmadd.s f6, f30, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xe7a1d981 # load x3 with value 0xe7a1d981
sw x3, 0(x2) # store 0xe7a1d981 in memory
flw f8, 0(x2) # load 0xe7a1d981 from memory into f8
fnmadd.s f15, f21, f26, f8, dyn # perform operation
fnmadd.s f15, f21, f26, f8, rdn # perform operation
fnmadd.s f15, f21, f26, f8, rmm # perform operation
fnmadd.s f15, f21, f26, f8, rne # perform operation
fnmadd.s f15, f21, f26, f8, rtz # perform operation
fnmadd.s f15, f21, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x0116e523 # load x3 with value 0x0116e523
sw x3, 0(x2) # store 0x0116e523 in memory
flw f7, 0(x2) # load 0x0116e523 from memory into f7
fnmadd.s f17, f30, f6, f7, dyn # perform operation
fnmadd.s f17, f30, f6, f7, rdn # perform operation
fnmadd.s f17, f30, f6, f7, rmm # perform operation
fnmadd.s f17, f30, f6, f7, rne # perform operation
fnmadd.s f17, f30, f6, f7, rtz # perform operation
fnmadd.s f17, f30, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x90b1ff7d # load x3 with value 0x90b1ff7d
sw x3, 0(x2) # store 0x90b1ff7d in memory
flw f28, 0(x2) # load 0x90b1ff7d from memory into f28
fnmadd.s f27, f6, f7, f28, dyn # perform operation
fnmadd.s f27, f6, f7, f28, rdn # perform operation
fnmadd.s f27, f6, f7, f28, rmm # perform operation
fnmadd.s f27, f6, f7, f28, rne # perform operation
fnmadd.s f27, f6, f7, f28, rtz # perform operation
fnmadd.s f27, f6, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f6, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x8e4cb92f # load x3 with value 0x8e4cb92f
sw x3, 0(x2) # store 0x8e4cb92f in memory
flw f1, 0(x2) # load 0x8e4cb92f from memory into f1
fnmadd.s f25, f27, f26, f1, dyn # perform operation
fnmadd.s f25, f27, f26, f1, rdn # perform operation
fnmadd.s f25, f27, f26, f1, rmm # perform operation
fnmadd.s f25, f27, f26, f1, rne # perform operation
fnmadd.s f25, f27, f26, f1, rtz # perform operation
fnmadd.s f25, f27, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f27, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f27, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x7cc75b5b # load x3 with value 0x7cc75b5b
sw x3, 0(x2) # store 0x7cc75b5b in memory
flw f19, 0(x2) # load 0x7cc75b5b from memory into f19
fnmadd.s f17, f11, f18, f19, dyn # perform operation
fnmadd.s f17, f11, f18, f19, rdn # perform operation
fnmadd.s f17, f11, f18, f19, rmm # perform operation
fnmadd.s f17, f11, f18, f19, rne # perform operation
fnmadd.s f17, f11, f18, f19, rtz # perform operation
fnmadd.s f17, f11, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xc5fd928d # load x3 with value 0xc5fd928d
sw x3, 0(x2) # store 0xc5fd928d in memory
flw f12, 0(x2) # load 0xc5fd928d from memory into f12
fnmadd.s f9, f20, f6, f12, dyn # perform operation
fnmadd.s f9, f20, f6, f12, rdn # perform operation
fnmadd.s f9, f20, f6, f12, rmm # perform operation
fnmadd.s f9, f20, f6, f12, rne # perform operation
fnmadd.s f9, f20, f6, f12, rtz # perform operation
fnmadd.s f9, f20, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x271caeee # load x3 with value 0x271caeee
sw x3, 0(x2) # store 0x271caeee in memory
flw f16, 0(x2) # load 0x271caeee from memory into f16
fnmadd.s f9, f24, f13, f16, dyn # perform operation
fnmadd.s f9, f24, f13, f16, rdn # perform operation
fnmadd.s f9, f24, f13, f16, rmm # perform operation
fnmadd.s f9, f24, f13, f16, rne # perform operation
fnmadd.s f9, f24, f13, f16, rtz # perform operation
fnmadd.s f9, f24, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xde6b6fac # load x3 with value 0xde6b6fac
sw x3, 0(x2) # store 0xde6b6fac in memory
flw f22, 0(x2) # load 0xde6b6fac from memory into f22
fnmadd.s f16, f17, f23, f22, dyn # perform operation
fnmadd.s f16, f17, f23, f22, rdn # perform operation
fnmadd.s f16, f17, f23, f22, rmm # perform operation
fnmadd.s f16, f17, f23, f22, rne # perform operation
fnmadd.s f16, f17, f23, f22, rtz # perform operation
fnmadd.s f16, f17, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f23, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xc92aa65e # load x3 with value 0xc92aa65e
sw x3, 0(x2) # store 0xc92aa65e in memory
flw f6, 0(x2) # load 0xc92aa65e from memory into f6
fnmadd.s f29, f23, f31, f6, dyn # perform operation
fnmadd.s f29, f23, f31, f6, rdn # perform operation
fnmadd.s f29, f23, f31, f6, rmm # perform operation
fnmadd.s f29, f23, f31, f6, rne # perform operation
fnmadd.s f29, f23, f31, f6, rtz # perform operation
fnmadd.s f29, f23, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x3a00fa7b # load x3 with value 0x3a00fa7b
sw x3, 0(x2) # store 0x3a00fa7b in memory
flw f12, 0(x2) # load 0x3a00fa7b from memory into f12
fnmadd.s f2, f17, f14, f12, dyn # perform operation
fnmadd.s f2, f17, f14, f12, rdn # perform operation
fnmadd.s f2, f17, f14, f12, rmm # perform operation
fnmadd.s f2, f17, f14, f12, rne # perform operation
fnmadd.s f2, f17, f14, f12, rtz # perform operation
fnmadd.s f2, f17, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xa808603c # load x3 with value 0xa808603c
sw x3, 0(x2) # store 0xa808603c in memory
flw f27, 0(x2) # load 0xa808603c from memory into f27
fnmadd.s f10, f23, f7, f27, dyn # perform operation
fnmadd.s f10, f23, f7, f27, rdn # perform operation
fnmadd.s f10, f23, f7, f27, rmm # perform operation
fnmadd.s f10, f23, f7, f27, rne # perform operation
fnmadd.s f10, f23, f7, f27, rtz # perform operation
fnmadd.s f10, f23, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x1120bf9b # load x3 with value 0x1120bf9b
sw x3, 0(x2) # store 0x1120bf9b in memory
flw f26, 0(x2) # load 0x1120bf9b from memory into f26
fnmadd.s f8, f5, f2, f26, dyn # perform operation
fnmadd.s f8, f5, f2, f26, rdn # perform operation
fnmadd.s f8, f5, f2, f26, rmm # perform operation
fnmadd.s f8, f5, f2, f26, rne # perform operation
fnmadd.s f8, f5, f2, f26, rtz # perform operation
fnmadd.s f8, f5, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x78d9e573 # load x3 with value 0x78d9e573
sw x3, 0(x2) # store 0x78d9e573 in memory
flw f5, 0(x2) # load 0x78d9e573 from memory into f5
fnmadd.s f19, f9, f24, f5, dyn # perform operation
fnmadd.s f19, f9, f24, f5, rdn # perform operation
fnmadd.s f19, f9, f24, f5, rmm # perform operation
fnmadd.s f19, f9, f24, f5, rne # perform operation
fnmadd.s f19, f9, f24, f5, rtz # perform operation
fnmadd.s f19, f9, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f9, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f9, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x475237ea # load x3 with value 0x475237ea
sw x3, 0(x2) # store 0x475237ea in memory
flw f3, 0(x2) # load 0x475237ea from memory into f3
fnmadd.s f19, f13, f8, f3, dyn # perform operation
fnmadd.s f19, f13, f8, f3, rdn # perform operation
fnmadd.s f19, f13, f8, f3, rmm # perform operation
fnmadd.s f19, f13, f8, f3, rne # perform operation
fnmadd.s f19, f13, f8, f3, rtz # perform operation
fnmadd.s f19, f13, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f8, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0xd856049d # load x3 with value 0xd856049d
sw x3, 0(x2) # store 0xd856049d in memory
flw f3, 0(x2) # load 0xd856049d from memory into f3
fnmadd.s f11, f24, f1, f3, dyn # perform operation
fnmadd.s f11, f24, f1, f3, rdn # perform operation
fnmadd.s f11, f24, f1, f3, rmm # perform operation
fnmadd.s f11, f24, f1, f3, rne # perform operation
fnmadd.s f11, f24, f1, f3, rtz # perform operation
fnmadd.s f11, f24, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x7467965b # load x3 with value 0x7467965b
sw x3, 0(x2) # store 0x7467965b in memory
flw f13, 0(x2) # load 0x7467965b from memory into f13
fnmadd.s f19, f30, f22, f13, dyn # perform operation
fnmadd.s f19, f30, f22, f13, rdn # perform operation
fnmadd.s f19, f30, f22, f13, rmm # perform operation
fnmadd.s f19, f30, f22, f13, rne # perform operation
fnmadd.s f19, f30, f22, f13, rtz # perform operation
fnmadd.s f19, f30, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0xc734f867 # load x3 with value 0xc734f867
sw x3, 0(x2) # store 0xc734f867 in memory
flw f20, 0(x2) # load 0xc734f867 from memory into f20
fnmadd.s f13, f27, f7, f20, dyn # perform operation
fnmadd.s f13, f27, f7, f20, rdn # perform operation
fnmadd.s f13, f27, f7, f20, rmm # perform operation
fnmadd.s f13, f27, f7, f20, rne # perform operation
fnmadd.s f13, f27, f7, f20, rtz # perform operation
fnmadd.s f13, f27, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f27, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x06d93787 # load x3 with value 0x06d93787
sw x3, 0(x2) # store 0x06d93787 in memory
flw f17, 0(x2) # load 0x06d93787 from memory into f17
fnmadd.s f14, f9, f21, f17, dyn # perform operation
fnmadd.s f14, f9, f21, f17, rdn # perform operation
fnmadd.s f14, f9, f21, f17, rmm # perform operation
fnmadd.s f14, f9, f21, f17, rne # perform operation
fnmadd.s f14, f9, f21, f17, rtz # perform operation
fnmadd.s f14, f9, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f21, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xbb85baa1 # load x3 with value 0xbb85baa1
sw x3, 0(x2) # store 0xbb85baa1 in memory
flw f12, 0(x2) # load 0xbb85baa1 from memory into f12
fnmadd.s f17, f26, f29, f12, dyn # perform operation
fnmadd.s f17, f26, f29, f12, rdn # perform operation
fnmadd.s f17, f26, f29, f12, rmm # perform operation
fnmadd.s f17, f26, f29, f12, rne # perform operation
fnmadd.s f17, f26, f29, f12, rtz # perform operation
fnmadd.s f17, f26, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0xc9a58af8 # load x3 with value 0xc9a58af8
sw x3, 0(x2) # store 0xc9a58af8 in memory
flw f16, 0(x2) # load 0xc9a58af8 from memory into f16
fnmadd.s f1, f5, f9, f16, dyn # perform operation
fnmadd.s f1, f5, f9, f16, rdn # perform operation
fnmadd.s f1, f5, f9, f16, rmm # perform operation
fnmadd.s f1, f5, f9, f16, rne # perform operation
fnmadd.s f1, f5, f9, f16, rtz # perform operation
fnmadd.s f1, f5, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0xcf190095 # load x3 with value 0xcf190095
sw x3, 0(x2) # store 0xcf190095 in memory
flw f29, 0(x2) # load 0xcf190095 from memory into f29
fnmadd.s f17, f2, f22, f29, dyn # perform operation
fnmadd.s f17, f2, f22, f29, rdn # perform operation
fnmadd.s f17, f2, f22, f29, rmm # perform operation
fnmadd.s f17, f2, f22, f29, rne # perform operation
fnmadd.s f17, f2, f22, f29, rtz # perform operation
fnmadd.s f17, f2, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xe51932fe # load x3 with value 0xe51932fe
sw x3, 0(x2) # store 0xe51932fe in memory
flw f30, 0(x2) # load 0xe51932fe from memory into f30
fnmadd.s f27, f2, f16, f30, dyn # perform operation
fnmadd.s f27, f2, f16, f30, rdn # perform operation
fnmadd.s f27, f2, f16, f30, rmm # perform operation
fnmadd.s f27, f2, f16, f30, rne # perform operation
fnmadd.s f27, f2, f16, f30, rtz # perform operation
fnmadd.s f27, f2, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f2, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f2, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f2, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f2, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f2, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x4a9a860a # load x3 with value 0x4a9a860a
sw x3, 0(x2) # store 0x4a9a860a in memory
flw f14, 0(x2) # load 0x4a9a860a from memory into f14
fnmadd.s f23, f1, f3, f14, dyn # perform operation
fnmadd.s f23, f1, f3, f14, rdn # perform operation
fnmadd.s f23, f1, f3, f14, rmm # perform operation
fnmadd.s f23, f1, f3, f14, rne # perform operation
fnmadd.s f23, f1, f3, f14, rtz # perform operation
fnmadd.s f23, f1, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x8f706ebd # load x3 with value 0x8f706ebd
sw x3, 0(x2) # store 0x8f706ebd in memory
flw f28, 0(x2) # load 0x8f706ebd from memory into f28
fnmadd.s f25, f17, f24, f28, dyn # perform operation
fnmadd.s f25, f17, f24, f28, rdn # perform operation
fnmadd.s f25, f17, f24, f28, rmm # perform operation
fnmadd.s f25, f17, f24, f28, rne # perform operation
fnmadd.s f25, f17, f24, f28, rtz # perform operation
fnmadd.s f25, f17, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x06a80a73 # load x3 with value 0x06a80a73
sw x3, 0(x2) # store 0x06a80a73 in memory
flw f29, 0(x2) # load 0x06a80a73 from memory into f29
fnmadd.s f31, f16, f17, f29, dyn # perform operation
fnmadd.s f31, f16, f17, f29, rdn # perform operation
fnmadd.s f31, f16, f17, f29, rmm # perform operation
fnmadd.s f31, f16, f17, f29, rne # perform operation
fnmadd.s f31, f16, f17, f29, rtz # perform operation
fnmadd.s f31, f16, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f16, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xf2c89c08 # load x3 with value 0xf2c89c08
sw x3, 0(x2) # store 0xf2c89c08 in memory
flw f8, 0(x2) # load 0xf2c89c08 from memory into f8
fnmadd.s f31, f12, f9, f8, dyn # perform operation
fnmadd.s f31, f12, f9, f8, rdn # perform operation
fnmadd.s f31, f12, f9, f8, rmm # perform operation
fnmadd.s f31, f12, f9, f8, rne # perform operation
fnmadd.s f31, f12, f9, f8, rtz # perform operation
fnmadd.s f31, f12, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x83195a6c # load x3 with value 0x83195a6c
sw x3, 0(x2) # store 0x83195a6c in memory
flw f19, 0(x2) # load 0x83195a6c from memory into f19
fnmadd.s f29, f30, f25, f19, dyn # perform operation
fnmadd.s f29, f30, f25, f19, rdn # perform operation
fnmadd.s f29, f30, f25, f19, rmm # perform operation
fnmadd.s f29, f30, f25, f19, rne # perform operation
fnmadd.s f29, f30, f25, f19, rtz # perform operation
fnmadd.s f29, f30, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x91f9fd4c # load x3 with value 0x91f9fd4c
sw x3, 0(x2) # store 0x91f9fd4c in memory
flw f6, 0(x2) # load 0x91f9fd4c from memory into f6
fnmadd.s f27, f17, f30, f6, dyn # perform operation
fnmadd.s f27, f17, f30, f6, rdn # perform operation
fnmadd.s f27, f17, f30, f6, rmm # perform operation
fnmadd.s f27, f17, f30, f6, rne # perform operation
fnmadd.s f27, f17, f30, f6, rtz # perform operation
fnmadd.s f27, f17, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f17, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f17, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xa0025bda # load x3 with value 0xa0025bda
sw x3, 0(x2) # store 0xa0025bda in memory
flw f2, 0(x2) # load 0xa0025bda from memory into f2
fnmadd.s f20, f16, f31, f2, dyn # perform operation
fnmadd.s f20, f16, f31, f2, rdn # perform operation
fnmadd.s f20, f16, f31, f2, rmm # perform operation
fnmadd.s f20, f16, f31, f2, rne # perform operation
fnmadd.s f20, f16, f31, f2, rtz # perform operation
fnmadd.s f20, f16, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
la x2, scratch
li x3, 0xeba7380f # load x3 with value 0xeba7380f
sw x3, 0(x2) # store 0xeba7380f in memory
flw f31, 0(x2) # load 0xeba7380f from memory into f31
fnmadd.s f2, f15, f30, f31, dyn # perform operation
fnmadd.s f2, f15, f30, f31, rdn # perform operation
fnmadd.s f2, f15, f30, f31, rmm # perform operation
fnmadd.s f2, f15, f30, f31, rne # perform operation
fnmadd.s f2, f15, f30, f31, rtz # perform operation
fnmadd.s f2, f15, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xf632d605 # load x3 with value 0xf632d605
sw x3, 0(x2) # store 0xf632d605 in memory
flw f9, 0(x2) # load 0xf632d605 from memory into f9
fnmadd.s f16, f21, f14, f9, dyn # perform operation
fnmadd.s f16, f21, f14, f9, rdn # perform operation
fnmadd.s f16, f21, f14, f9, rmm # perform operation
fnmadd.s f16, f21, f14, f9, rne # perform operation
fnmadd.s f16, f21, f14, f9, rtz # perform operation
fnmadd.s f16, f21, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f21, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f21, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xf482e9ae # load x3 with value 0xf482e9ae
sw x3, 0(x2) # store 0xf482e9ae in memory
flw f20, 0(x2) # load 0xf482e9ae from memory into f20
fnmadd.s f3, f6, f26, f20, dyn # perform operation
fnmadd.s f3, f6, f26, f20, rdn # perform operation
fnmadd.s f3, f6, f26, f20, rmm # perform operation
fnmadd.s f3, f6, f26, f20, rne # perform operation
fnmadd.s f3, f6, f26, f20, rtz # perform operation
fnmadd.s f3, f6, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f6, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xd56449e6 # load x3 with value 0xd56449e6
sw x3, 0(x2) # store 0xd56449e6 in memory
flw f12, 0(x2) # load 0xd56449e6 from memory into f12
fnmadd.s f27, f16, f2, f12, dyn # perform operation
fnmadd.s f27, f16, f2, f12, rdn # perform operation
fnmadd.s f27, f16, f2, f12, rmm # perform operation
fnmadd.s f27, f16, f2, f12, rne # perform operation
fnmadd.s f27, f16, f2, f12, rtz # perform operation
fnmadd.s f27, f16, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f2, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0xf34bc4d3 # load x3 with value 0xf34bc4d3
sw x3, 0(x2) # store 0xf34bc4d3 in memory
flw f14, 0(x2) # load 0xf34bc4d3 from memory into f14
fnmadd.s f26, f21, f31, f14, dyn # perform operation
fnmadd.s f26, f21, f31, f14, rdn # perform operation
fnmadd.s f26, f21, f31, f14, rmm # perform operation
fnmadd.s f26, f21, f31, f14, rne # perform operation
fnmadd.s f26, f21, f31, f14, rtz # perform operation
fnmadd.s f26, f21, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x1589d1e3 # load x3 with value 0x1589d1e3
sw x3, 0(x2) # store 0x1589d1e3 in memory
flw f30, 0(x2) # load 0x1589d1e3 from memory into f30
fnmadd.s f11, f14, f26, f30, dyn # perform operation
fnmadd.s f11, f14, f26, f30, rdn # perform operation
fnmadd.s f11, f14, f26, f30, rmm # perform operation
fnmadd.s f11, f14, f26, f30, rne # perform operation
fnmadd.s f11, f14, f26, f30, rtz # perform operation
fnmadd.s f11, f14, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f26, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xeffd2000 # load x3 with value 0xeffd2000
sw x3, 0(x2) # store 0xeffd2000 in memory
flw f11, 0(x2) # load 0xeffd2000 from memory into f11
fnmadd.s f25, f12, f3, f11, dyn # perform operation
fnmadd.s f25, f12, f3, f11, rdn # perform operation
fnmadd.s f25, f12, f3, f11, rmm # perform operation
fnmadd.s f25, f12, f3, f11, rne # perform operation
fnmadd.s f25, f12, f3, f11, rtz # perform operation
fnmadd.s f25, f12, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f12, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f12, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xfb4807dc # load x3 with value 0xfb4807dc
sw x3, 0(x2) # store 0xfb4807dc in memory
flw f25, 0(x2) # load 0xfb4807dc from memory into f25
fnmadd.s f31, f14, f20, f25, dyn # perform operation
fnmadd.s f31, f14, f20, f25, rdn # perform operation
fnmadd.s f31, f14, f20, f25, rmm # perform operation
fnmadd.s f31, f14, f20, f25, rne # perform operation
fnmadd.s f31, f14, f20, f25, rtz # perform operation
fnmadd.s f31, f14, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x08f071ee # load x3 with value 0x08f071ee
sw x3, 0(x2) # store 0x08f071ee in memory
flw f15, 0(x2) # load 0x08f071ee from memory into f15
fnmadd.s f22, f31, f30, f15, dyn # perform operation
fnmadd.s f22, f31, f30, f15, rdn # perform operation
fnmadd.s f22, f31, f30, f15, rmm # perform operation
fnmadd.s f22, f31, f30, f15, rne # perform operation
fnmadd.s f22, f31, f30, f15, rtz # perform operation
fnmadd.s f22, f31, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f31, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xd0fa7c39 # load x3 with value 0xd0fa7c39
sw x3, 0(x2) # store 0xd0fa7c39 in memory
flw f28, 0(x2) # load 0xd0fa7c39 from memory into f28
fnmadd.s f27, f29, f3, f28, dyn # perform operation
fnmadd.s f27, f29, f3, f28, rdn # perform operation
fnmadd.s f27, f29, f3, f28, rmm # perform operation
fnmadd.s f27, f29, f3, f28, rne # perform operation
fnmadd.s f27, f29, f3, f28, rtz # perform operation
fnmadd.s f27, f29, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xe3dcdbe8 # load x3 with value 0xe3dcdbe8
sw x3, 0(x2) # store 0xe3dcdbe8 in memory
flw f8, 0(x2) # load 0xe3dcdbe8 from memory into f8
fnmadd.s f7, f17, f18, f8, dyn # perform operation
fnmadd.s f7, f17, f18, f8, rdn # perform operation
fnmadd.s f7, f17, f18, f8, rmm # perform operation
fnmadd.s f7, f17, f18, f8, rne # perform operation
fnmadd.s f7, f17, f18, f8, rtz # perform operation
fnmadd.s f7, f17, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f17, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f17, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x6336e292 # load x3 with value 0x6336e292
sw x3, 0(x2) # store 0x6336e292 in memory
flw f25, 0(x2) # load 0x6336e292 from memory into f25
fnmadd.s f20, f26, f8, f25, dyn # perform operation
fnmadd.s f20, f26, f8, f25, rdn # perform operation
fnmadd.s f20, f26, f8, f25, rmm # perform operation
fnmadd.s f20, f26, f8, f25, rne # perform operation
fnmadd.s f20, f26, f8, f25, rtz # perform operation
fnmadd.s f20, f26, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f26, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xca71b60a # load x3 with value 0xca71b60a
sw x3, 0(x2) # store 0xca71b60a in memory
flw f30, 0(x2) # load 0xca71b60a from memory into f30
fnmadd.s f6, f31, f1, f30, dyn # perform operation
fnmadd.s f6, f31, f1, f30, rdn # perform operation
fnmadd.s f6, f31, f1, f30, rmm # perform operation
fnmadd.s f6, f31, f1, f30, rne # perform operation
fnmadd.s f6, f31, f1, f30, rtz # perform operation
fnmadd.s f6, f31, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f31, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f31, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xbdf47009 # load x3 with value 0xbdf47009
sw x3, 0(x2) # store 0xbdf47009 in memory
flw f3, 0(x2) # load 0xbdf47009 from memory into f3
fnmadd.s f31, f23, f2, f3, dyn # perform operation
fnmadd.s f31, f23, f2, f3, rdn # perform operation
fnmadd.s f31, f23, f2, f3, rmm # perform operation
fnmadd.s f31, f23, f2, f3, rne # perform operation
fnmadd.s f31, f23, f2, f3, rtz # perform operation
fnmadd.s f31, f23, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f23, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f23, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x6f9be666 # load x3 with value 0x6f9be666
sw x3, 0(x2) # store 0x6f9be666 in memory
flw f24, 0(x2) # load 0x6f9be666 from memory into f24
fnmadd.s f25, f5, f21, f24, dyn # perform operation
fnmadd.s f25, f5, f21, f24, rdn # perform operation
fnmadd.s f25, f5, f21, f24, rmm # perform operation
fnmadd.s f25, f5, f21, f24, rne # perform operation
fnmadd.s f25, f5, f21, f24, rtz # perform operation
fnmadd.s f25, f5, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f5, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f5, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f5, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f5, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f5, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x51c3a56d # load x3 with value 0x51c3a56d
sw x3, 0(x2) # store 0x51c3a56d in memory
flw f20, 0(x2) # load 0x51c3a56d from memory into f20
fnmadd.s f8, f23, f6, f20, dyn # perform operation
fnmadd.s f8, f23, f6, f20, rdn # perform operation
fnmadd.s f8, f23, f6, f20, rmm # perform operation
fnmadd.s f8, f23, f6, f20, rne # perform operation
fnmadd.s f8, f23, f6, f20, rtz # perform operation
fnmadd.s f8, f23, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xb126e308 # load x3 with value 0xb126e308
sw x3, 0(x2) # store 0xb126e308 in memory
flw f13, 0(x2) # load 0xb126e308 from memory into f13
fnmadd.s f10, f25, f30, f13, dyn # perform operation
fnmadd.s f10, f25, f30, f13, rdn # perform operation
fnmadd.s f10, f25, f30, f13, rmm # perform operation
fnmadd.s f10, f25, f30, f13, rne # perform operation
fnmadd.s f10, f25, f30, f13, rtz # perform operation
fnmadd.s f10, f25, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x590f64ad # load x3 with value 0x590f64ad
sw x3, 0(x2) # store 0x590f64ad in memory
flw f9, 0(x2) # load 0x590f64ad from memory into f9
fnmadd.s f31, f5, f24, f9, dyn # perform operation
fnmadd.s f31, f5, f24, f9, rdn # perform operation
fnmadd.s f31, f5, f24, f9, rmm # perform operation
fnmadd.s f31, f5, f24, f9, rne # perform operation
fnmadd.s f31, f5, f24, f9, rtz # perform operation
fnmadd.s f31, f5, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xaf710f73 # load x3 with value 0xaf710f73
sw x3, 0(x2) # store 0xaf710f73 in memory
flw f8, 0(x2) # load 0xaf710f73 from memory into f8
fnmadd.s f3, f1, f6, f8, dyn # perform operation
fnmadd.s f3, f1, f6, f8, rdn # perform operation
fnmadd.s f3, f1, f6, f8, rmm # perform operation
fnmadd.s f3, f1, f6, f8, rne # perform operation
fnmadd.s f3, f1, f6, f8, rtz # perform operation
fnmadd.s f3, f1, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xc7409546 # load x3 with value 0xc7409546
sw x3, 0(x2) # store 0xc7409546 in memory
flw f14, 0(x2) # load 0xc7409546 from memory into f14
fnmadd.s f2, f11, f8, f14, dyn # perform operation
fnmadd.s f2, f11, f8, f14, rdn # perform operation
fnmadd.s f2, f11, f8, f14, rmm # perform operation
fnmadd.s f2, f11, f8, f14, rne # perform operation
fnmadd.s f2, f11, f8, f14, rtz # perform operation
fnmadd.s f2, f11, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f11, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f11, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xfc5e1c41 # load x3 with value 0xfc5e1c41
sw x3, 0(x2) # store 0xfc5e1c41 in memory
flw f26, 0(x2) # load 0xfc5e1c41 from memory into f26
fnmadd.s f1, f27, f20, f26, dyn # perform operation
fnmadd.s f1, f27, f20, f26, rdn # perform operation
fnmadd.s f1, f27, f20, f26, rmm # perform operation
fnmadd.s f1, f27, f20, f26, rne # perform operation
fnmadd.s f1, f27, f20, f26, rtz # perform operation
fnmadd.s f1, f27, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xb398697f # load x3 with value 0xb398697f
sw x3, 0(x2) # store 0xb398697f in memory
flw f2, 0(x2) # load 0xb398697f from memory into f2
fnmadd.s f10, f8, f18, f2, dyn # perform operation
fnmadd.s f10, f8, f18, f2, rdn # perform operation
fnmadd.s f10, f8, f18, f2, rmm # perform operation
fnmadd.s f10, f8, f18, f2, rne # perform operation
fnmadd.s f10, f8, f18, f2, rtz # perform operation
fnmadd.s f10, f8, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f8, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f8, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x1bfb77b2 # load x3 with value 0x1bfb77b2
sw x3, 0(x2) # store 0x1bfb77b2 in memory
flw f16, 0(x2) # load 0x1bfb77b2 from memory into f16
fnmadd.s f14, f27, f25, f16, dyn # perform operation
fnmadd.s f14, f27, f25, f16, rdn # perform operation
fnmadd.s f14, f27, f25, f16, rmm # perform operation
fnmadd.s f14, f27, f25, f16, rne # perform operation
fnmadd.s f14, f27, f25, f16, rtz # perform operation
fnmadd.s f14, f27, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xa751ee86 # load x3 with value 0xa751ee86
sw x3, 0(x2) # store 0xa751ee86 in memory
flw f14, 0(x2) # load 0xa751ee86 from memory into f14
fnmadd.s f27, f30, f29, f14, dyn # perform operation
fnmadd.s f27, f30, f29, f14, rdn # perform operation
fnmadd.s f27, f30, f29, f14, rmm # perform operation
fnmadd.s f27, f30, f29, f14, rne # perform operation
fnmadd.s f27, f30, f29, f14, rtz # perform operation
fnmadd.s f27, f30, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xbcd4dd76 # load x3 with value 0xbcd4dd76
sw x3, 0(x2) # store 0xbcd4dd76 in memory
flw f22, 0(x2) # load 0xbcd4dd76 from memory into f22
fnmadd.s f14, f27, f12, f22, dyn # perform operation
fnmadd.s f14, f27, f12, f22, rdn # perform operation
fnmadd.s f14, f27, f12, f22, rmm # perform operation
fnmadd.s f14, f27, f12, f22, rne # perform operation
fnmadd.s f14, f27, f12, f22, rtz # perform operation
fnmadd.s f14, f27, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f27, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f27, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x40a313ca # load x3 with value 0x40a313ca
sw x3, 0(x2) # store 0x40a313ca in memory
flw f3, 0(x2) # load 0x40a313ca from memory into f3
fnmadd.s f8, f27, f24, f3, dyn # perform operation
fnmadd.s f8, f27, f24, f3, rdn # perform operation
fnmadd.s f8, f27, f24, f3, rmm # perform operation
fnmadd.s f8, f27, f24, f3, rne # perform operation
fnmadd.s f8, f27, f24, f3, rtz # perform operation
fnmadd.s f8, f27, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x15f17077 # load x3 with value 0x15f17077
sw x3, 0(x2) # store 0x15f17077 in memory
flw f29, 0(x2) # load 0x15f17077 from memory into f29
fnmadd.s f13, f28, f7, f29, dyn # perform operation
fnmadd.s f13, f28, f7, f29, rdn # perform operation
fnmadd.s f13, f28, f7, f29, rmm # perform operation
fnmadd.s f13, f28, f7, f29, rne # perform operation
fnmadd.s f13, f28, f7, f29, rtz # perform operation
fnmadd.s f13, f28, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x3c15e92c # load x3 with value 0x3c15e92c
sw x3, 0(x2) # store 0x3c15e92c in memory
flw f22, 0(x2) # load 0x3c15e92c from memory into f22
fnmadd.s f23, f14, f2, f22, dyn # perform operation
fnmadd.s f23, f14, f2, f22, rdn # perform operation
fnmadd.s f23, f14, f2, f22, rmm # perform operation
fnmadd.s f23, f14, f2, f22, rne # perform operation
fnmadd.s f23, f14, f2, f22, rtz # perform operation
fnmadd.s f23, f14, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x832a79d3 # load x3 with value 0x832a79d3
sw x3, 0(x2) # store 0x832a79d3 in memory
flw f10, 0(x2) # load 0x832a79d3 from memory into f10
fnmadd.s f29, f30, f22, f10, dyn # perform operation
fnmadd.s f29, f30, f22, f10, rdn # perform operation
fnmadd.s f29, f30, f22, f10, rmm # perform operation
fnmadd.s f29, f30, f22, f10, rne # perform operation
fnmadd.s f29, f30, f22, f10, rtz # perform operation
fnmadd.s f29, f30, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0xd4bbcd11 # load x3 with value 0xd4bbcd11
sw x3, 0(x2) # store 0xd4bbcd11 in memory
flw f13, 0(x2) # load 0xd4bbcd11 from memory into f13
fnmadd.s f31, f21, f15, f13, dyn # perform operation
fnmadd.s f31, f21, f15, f13, rdn # perform operation
fnmadd.s f31, f21, f15, f13, rmm # perform operation
fnmadd.s f31, f21, f15, f13, rne # perform operation
fnmadd.s f31, f21, f15, f13, rtz # perform operation
fnmadd.s f31, f21, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f21, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f21, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f21, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f21, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f21, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x08d87954 # load x3 with value 0x08d87954
sw x3, 0(x2) # store 0x08d87954 in memory
flw f20, 0(x2) # load 0x08d87954 from memory into f20
fnmadd.s f1, f25, f31, f20, dyn # perform operation
fnmadd.s f1, f25, f31, f20, rdn # perform operation
fnmadd.s f1, f25, f31, f20, rmm # perform operation
fnmadd.s f1, f25, f31, f20, rne # perform operation
fnmadd.s f1, f25, f31, f20, rtz # perform operation
fnmadd.s f1, f25, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f25, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x000d0175 # load x3 with value 0x000d0175
sw x3, 0(x2) # store 0x000d0175 in memory
flw f1, 0(x2) # load 0x000d0175 from memory into f1
fnmadd.s f20, f12, f6, f1, dyn # perform operation
fnmadd.s f20, f12, f6, f1, rdn # perform operation
fnmadd.s f20, f12, f6, f1, rmm # perform operation
fnmadd.s f20, f12, f6, f1, rne # perform operation
fnmadd.s f20, f12, f6, f1, rtz # perform operation
fnmadd.s f20, f12, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xb977fcb6 # load x3 with value 0xb977fcb6
sw x3, 0(x2) # store 0xb977fcb6 in memory
flw f12, 0(x2) # load 0xb977fcb6 from memory into f12
fnmadd.s f19, f20, f14, f12, dyn # perform operation
fnmadd.s f19, f20, f14, f12, rdn # perform operation
fnmadd.s f19, f20, f14, f12, rmm # perform operation
fnmadd.s f19, f20, f14, f12, rne # perform operation
fnmadd.s f19, f20, f14, f12, rtz # perform operation
fnmadd.s f19, f20, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x2f516abb # load x3 with value 0x2f516abb
sw x3, 0(x2) # store 0x2f516abb in memory
flw f28, 0(x2) # load 0x2f516abb from memory into f28
fnmadd.s f10, f3, f24, f28, dyn # perform operation
fnmadd.s f10, f3, f24, f28, rdn # perform operation
fnmadd.s f10, f3, f24, f28, rmm # perform operation
fnmadd.s f10, f3, f24, f28, rne # perform operation
fnmadd.s f10, f3, f24, f28, rtz # perform operation
fnmadd.s f10, f3, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f3, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f3, f24, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x6c9cf6db # load x3 with value 0x6c9cf6db
sw x3, 0(x2) # store 0x6c9cf6db in memory
flw f26, 0(x2) # load 0x6c9cf6db from memory into f26
fnmadd.s f29, f16, f20, f26, dyn # perform operation
fnmadd.s f29, f16, f20, f26, rdn # perform operation
fnmadd.s f29, f16, f20, f26, rmm # perform operation
fnmadd.s f29, f16, f20, f26, rne # perform operation
fnmadd.s f29, f16, f20, f26, rtz # perform operation
fnmadd.s f29, f16, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x9cbdbc10 # load x3 with value 0x9cbdbc10
sw x3, 0(x2) # store 0x9cbdbc10 in memory
flw f12, 0(x2) # load 0x9cbdbc10 from memory into f12
fnmadd.s f19, f8, f20, f12, dyn # perform operation
fnmadd.s f19, f8, f20, f12, rdn # perform operation
fnmadd.s f19, f8, f20, f12, rmm # perform operation
fnmadd.s f19, f8, f20, f12, rne # perform operation
fnmadd.s f19, f8, f20, f12, rtz # perform operation
fnmadd.s f19, f8, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f8, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f8, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f8, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f8, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f8, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x1c2fbca4 # load x3 with value 0x1c2fbca4
sw x3, 0(x2) # store 0x1c2fbca4 in memory
flw f25, 0(x2) # load 0x1c2fbca4 from memory into f25
fnmadd.s f12, f2, f21, f25, dyn # perform operation
fnmadd.s f12, f2, f21, f25, rdn # perform operation
fnmadd.s f12, f2, f21, f25, rmm # perform operation
fnmadd.s f12, f2, f21, f25, rne # perform operation
fnmadd.s f12, f2, f21, f25, rtz # perform operation
fnmadd.s f12, f2, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x9fd2329a # load x3 with value 0x9fd2329a
sw x3, 0(x2) # store 0x9fd2329a in memory
flw f30, 0(x2) # load 0x9fd2329a from memory into f30
fnmadd.s f6, f28, f17, f30, dyn # perform operation
fnmadd.s f6, f28, f17, f30, rdn # perform operation
fnmadd.s f6, f28, f17, f30, rmm # perform operation
fnmadd.s f6, f28, f17, f30, rne # perform operation
fnmadd.s f6, f28, f17, f30, rtz # perform operation
fnmadd.s f6, f28, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x48835765 # load x3 with value 0x48835765
sw x3, 0(x2) # store 0x48835765 in memory
flw f20, 0(x2) # load 0x48835765 from memory into f20
fnmadd.s f15, f6, f22, f20, dyn # perform operation
fnmadd.s f15, f6, f22, f20, rdn # perform operation
fnmadd.s f15, f6, f22, f20, rmm # perform operation
fnmadd.s f15, f6, f22, f20, rne # perform operation
fnmadd.s f15, f6, f22, f20, rtz # perform operation
fnmadd.s f15, f6, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x06acd665 # load x3 with value 0x06acd665
sw x3, 0(x2) # store 0x06acd665 in memory
flw f25, 0(x2) # load 0x06acd665 from memory into f25
fnmadd.s f18, f22, f28, f25, dyn # perform operation
fnmadd.s f18, f22, f28, f25, rdn # perform operation
fnmadd.s f18, f22, f28, f25, rmm # perform operation
fnmadd.s f18, f22, f28, f25, rne # perform operation
fnmadd.s f18, f22, f28, f25, rtz # perform operation
fnmadd.s f18, f22, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f22, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f22, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x9a30dc12 # load x3 with value 0x9a30dc12
sw x3, 0(x2) # store 0x9a30dc12 in memory
flw f11, 0(x2) # load 0x9a30dc12 from memory into f11
fnmadd.s f16, f14, f27, f11, dyn # perform operation
fnmadd.s f16, f14, f27, f11, rdn # perform operation
fnmadd.s f16, f14, f27, f11, rmm # perform operation
fnmadd.s f16, f14, f27, f11, rne # perform operation
fnmadd.s f16, f14, f27, f11, rtz # perform operation
fnmadd.s f16, f14, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f14, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f14, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f14, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f14, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f14, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xe0886777 # load x3 with value 0xe0886777
sw x3, 0(x2) # store 0xe0886777 in memory
flw f29, 0(x2) # load 0xe0886777 from memory into f29
fnmadd.s f18, f9, f25, f29, dyn # perform operation
fnmadd.s f18, f9, f25, f29, rdn # perform operation
fnmadd.s f18, f9, f25, f29, rmm # perform operation
fnmadd.s f18, f9, f25, f29, rne # perform operation
fnmadd.s f18, f9, f25, f29, rtz # perform operation
fnmadd.s f18, f9, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f9, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f9, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f9, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f9, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f9, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x54cee34f # load x3 with value 0x54cee34f
sw x3, 0(x2) # store 0x54cee34f in memory
flw f3, 0(x2) # load 0x54cee34f from memory into f3
fnmadd.s f15, f20, f10, f3, dyn # perform operation
fnmadd.s f15, f20, f10, f3, rdn # perform operation
fnmadd.s f15, f20, f10, f3, rmm # perform operation
fnmadd.s f15, f20, f10, f3, rne # perform operation
fnmadd.s f15, f20, f10, f3, rtz # perform operation
fnmadd.s f15, f20, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0xb81dee12 # load x3 with value 0xb81dee12
sw x3, 0(x2) # store 0xb81dee12 in memory
flw f24, 0(x2) # load 0xb81dee12 from memory into f24
fnmadd.s f28, f27, f15, f24, dyn # perform operation
fnmadd.s f28, f27, f15, f24, rdn # perform operation
fnmadd.s f28, f27, f15, f24, rmm # perform operation
fnmadd.s f28, f27, f15, f24, rne # perform operation
fnmadd.s f28, f27, f15, f24, rtz # perform operation
fnmadd.s f28, f27, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xa8c351f8 # load x3 with value 0xa8c351f8
sw x3, 0(x2) # store 0xa8c351f8 in memory
flw f25, 0(x2) # load 0xa8c351f8 from memory into f25
fnmadd.s f9, f24, f10, f25, dyn # perform operation
fnmadd.s f9, f24, f10, f25, rdn # perform operation
fnmadd.s f9, f24, f10, f25, rmm # perform operation
fnmadd.s f9, f24, f10, f25, rne # perform operation
fnmadd.s f9, f24, f10, f25, rtz # perform operation
fnmadd.s f9, f24, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0x6707bf67 # load x3 with value 0x6707bf67
sw x3, 0(x2) # store 0x6707bf67 in memory
flw f11, 0(x2) # load 0x6707bf67 from memory into f11
fnmadd.s f27, f16, f12, f11, dyn # perform operation
fnmadd.s f27, f16, f12, f11, rdn # perform operation
fnmadd.s f27, f16, f12, f11, rmm # perform operation
fnmadd.s f27, f16, f12, f11, rne # perform operation
fnmadd.s f27, f16, f12, f11, rtz # perform operation
fnmadd.s f27, f16, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x57c9856b # load x3 with value 0x57c9856b
sw x3, 0(x2) # store 0x57c9856b in memory
flw f10, 0(x2) # load 0x57c9856b from memory into f10
fnmadd.s f14, f15, f30, f10, dyn # perform operation
fnmadd.s f14, f15, f30, f10, rdn # perform operation
fnmadd.s f14, f15, f30, f10, rmm # perform operation
fnmadd.s f14, f15, f30, f10, rne # perform operation
fnmadd.s f14, f15, f30, f10, rtz # perform operation
fnmadd.s f14, f15, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f15, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f15, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f15, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f15, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f15, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x4696591d # load x3 with value 0x4696591d
sw x3, 0(x2) # store 0x4696591d in memory
flw f1, 0(x2) # load 0x4696591d from memory into f1
fnmadd.s f24, f30, f7, f1, dyn # perform operation
fnmadd.s f24, f30, f7, f1, rdn # perform operation
fnmadd.s f24, f30, f7, f1, rmm # perform operation
fnmadd.s f24, f30, f7, f1, rne # perform operation
fnmadd.s f24, f30, f7, f1, rtz # perform operation
fnmadd.s f24, f30, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f30, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x02c11854 # load x3 with value 0x02c11854
sw x3, 0(x2) # store 0x02c11854 in memory
flw f13, 0(x2) # load 0x02c11854 from memory into f13
fnmadd.s f2, f8, f25, f13, dyn # perform operation
fnmadd.s f2, f8, f25, f13, rdn # perform operation
fnmadd.s f2, f8, f25, f13, rmm # perform operation
fnmadd.s f2, f8, f25, f13, rne # perform operation
fnmadd.s f2, f8, f25, f13, rtz # perform operation
fnmadd.s f2, f8, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xedbf6326 # load x3 with value 0xedbf6326
sw x3, 0(x2) # store 0xedbf6326 in memory
flw f1, 0(x2) # load 0xedbf6326 from memory into f1
fnmadd.s f16, f30, f6, f1, dyn # perform operation
fnmadd.s f16, f30, f6, f1, rdn # perform operation
fnmadd.s f16, f30, f6, f1, rmm # perform operation
fnmadd.s f16, f30, f6, f1, rne # perform operation
fnmadd.s f16, f30, f6, f1, rtz # perform operation
fnmadd.s f16, f30, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x5c0eceb2 # load x3 with value 0x5c0eceb2
sw x3, 0(x2) # store 0x5c0eceb2 in memory
flw f13, 0(x2) # load 0x5c0eceb2 from memory into f13
fnmadd.s f21, f20, f28, f13, dyn # perform operation
fnmadd.s f21, f20, f28, f13, rdn # perform operation
fnmadd.s f21, f20, f28, f13, rmm # perform operation
fnmadd.s f21, f20, f28, f13, rne # perform operation
fnmadd.s f21, f20, f28, f13, rtz # perform operation
fnmadd.s f21, f20, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x3490327a # load x3 with value 0x3490327a
sw x3, 0(x2) # store 0x3490327a in memory
flw f20, 0(x2) # load 0x3490327a from memory into f20
fnmadd.s f12, f11, f23, f20, dyn # perform operation
fnmadd.s f12, f11, f23, f20, rdn # perform operation
fnmadd.s f12, f11, f23, f20, rmm # perform operation
fnmadd.s f12, f11, f23, f20, rne # perform operation
fnmadd.s f12, f11, f23, f20, rtz # perform operation
fnmadd.s f12, f11, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x503e1a13 # load x3 with value 0x503e1a13
sw x3, 0(x2) # store 0x503e1a13 in memory
flw f27, 0(x2) # load 0x503e1a13 from memory into f27
fnmadd.s f9, f12, f3, f27, dyn # perform operation
fnmadd.s f9, f12, f3, f27, rdn # perform operation
fnmadd.s f9, f12, f3, f27, rmm # perform operation
fnmadd.s f9, f12, f3, f27, rne # perform operation
fnmadd.s f9, f12, f3, f27, rtz # perform operation
fnmadd.s f9, f12, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f12, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f12, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xf041f9bf # load x3 with value 0xf041f9bf
sw x3, 0(x2) # store 0xf041f9bf in memory
flw f8, 0(x2) # load 0xf041f9bf from memory into f8
fnmadd.s f27, f21, f19, f8, dyn # perform operation
fnmadd.s f27, f21, f19, f8, rdn # perform operation
fnmadd.s f27, f21, f19, f8, rmm # perform operation
fnmadd.s f27, f21, f19, f8, rne # perform operation
fnmadd.s f27, f21, f19, f8, rtz # perform operation
fnmadd.s f27, f21, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xa819ca4c # load x3 with value 0xa819ca4c
sw x3, 0(x2) # store 0xa819ca4c in memory
flw f7, 0(x2) # load 0xa819ca4c from memory into f7
fnmadd.s f26, f23, f20, f7, dyn # perform operation
fnmadd.s f26, f23, f20, f7, rdn # perform operation
fnmadd.s f26, f23, f20, f7, rmm # perform operation
fnmadd.s f26, f23, f20, f7, rne # perform operation
fnmadd.s f26, f23, f20, f7, rtz # perform operation
fnmadd.s f26, f23, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xea4b20fa # load x3 with value 0xea4b20fa
sw x3, 0(x2) # store 0xea4b20fa in memory
flw f11, 0(x2) # load 0xea4b20fa from memory into f11
fnmadd.s f26, f20, f14, f11, dyn # perform operation
fnmadd.s f26, f20, f14, f11, rdn # perform operation
fnmadd.s f26, f20, f14, f11, rmm # perform operation
fnmadd.s f26, f20, f14, f11, rne # perform operation
fnmadd.s f26, f20, f14, f11, rtz # perform operation
fnmadd.s f26, f20, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f20, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f20, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f20, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f20, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f20, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x1c283cd2 # load x3 with value 0x1c283cd2
sw x3, 0(x2) # store 0x1c283cd2 in memory
flw f7, 0(x2) # load 0x1c283cd2 from memory into f7
fnmadd.s f28, f20, f17, f7, dyn # perform operation
fnmadd.s f28, f20, f17, f7, rdn # perform operation
fnmadd.s f28, f20, f17, f7, rmm # perform operation
fnmadd.s f28, f20, f17, f7, rne # perform operation
fnmadd.s f28, f20, f17, f7, rtz # perform operation
fnmadd.s f28, f20, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x852fa92a # load x3 with value 0x852fa92a
sw x3, 0(x2) # store 0x852fa92a in memory
flw f11, 0(x2) # load 0x852fa92a from memory into f11
fnmadd.s f2, f30, f16, f11, dyn # perform operation
fnmadd.s f2, f30, f16, f11, rdn # perform operation
fnmadd.s f2, f30, f16, f11, rmm # perform operation
fnmadd.s f2, f30, f16, f11, rne # perform operation
fnmadd.s f2, f30, f16, f11, rtz # perform operation
fnmadd.s f2, f30, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x803f3d0a # load x3 with value 0x803f3d0a
sw x3, 0(x2) # store 0x803f3d0a in memory
flw f22, 0(x2) # load 0x803f3d0a from memory into f22
fnmadd.s f27, f20, f18, f22, dyn # perform operation
fnmadd.s f27, f20, f18, f22, rdn # perform operation
fnmadd.s f27, f20, f18, f22, rmm # perform operation
fnmadd.s f27, f20, f18, f22, rne # perform operation
fnmadd.s f27, f20, f18, f22, rtz # perform operation
fnmadd.s f27, f20, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f20, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f20, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x23ab30aa # load x3 with value 0x23ab30aa
sw x3, 0(x2) # store 0x23ab30aa in memory
flw f22, 0(x2) # load 0x23ab30aa from memory into f22
fnmadd.s f2, f20, f16, f22, dyn # perform operation
fnmadd.s f2, f20, f16, f22, rdn # perform operation
fnmadd.s f2, f20, f16, f22, rmm # perform operation
fnmadd.s f2, f20, f16, f22, rne # perform operation
fnmadd.s f2, f20, f16, f22, rtz # perform operation
fnmadd.s f2, f20, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f20, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f20, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x42aa31c8 # load x3 with value 0x42aa31c8
sw x3, 0(x2) # store 0x42aa31c8 in memory
flw f24, 0(x2) # load 0x42aa31c8 from memory into f24
fnmadd.s f21, f19, f10, f24, dyn # perform operation
fnmadd.s f21, f19, f10, f24, rdn # perform operation
fnmadd.s f21, f19, f10, f24, rmm # perform operation
fnmadd.s f21, f19, f10, f24, rne # perform operation
fnmadd.s f21, f19, f10, f24, rtz # perform operation
fnmadd.s f21, f19, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f19, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f19, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x9f89b015 # load x3 with value 0x9f89b015
sw x3, 0(x2) # store 0x9f89b015 in memory
flw f22, 0(x2) # load 0x9f89b015 from memory into f22
fnmadd.s f30, f9, f18, f22, dyn # perform operation
fnmadd.s f30, f9, f18, f22, rdn # perform operation
fnmadd.s f30, f9, f18, f22, rmm # perform operation
fnmadd.s f30, f9, f18, f22, rne # perform operation
fnmadd.s f30, f9, f18, f22, rtz # perform operation
fnmadd.s f30, f9, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f9, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xdc015338 # load x3 with value 0xdc015338
sw x3, 0(x2) # store 0xdc015338 in memory
flw f31, 0(x2) # load 0xdc015338 from memory into f31
fnmadd.s f20, f11, f30, f31, dyn # perform operation
fnmadd.s f20, f11, f30, f31, rdn # perform operation
fnmadd.s f20, f11, f30, f31, rmm # perform operation
fnmadd.s f20, f11, f30, f31, rne # perform operation
fnmadd.s f20, f11, f30, f31, rtz # perform operation
fnmadd.s f20, f11, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f11, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f11, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xaaf913c4 # load x3 with value 0xaaf913c4
sw x3, 0(x2) # store 0xaaf913c4 in memory
flw f24, 0(x2) # load 0xaaf913c4 from memory into f24
fnmadd.s f31, f11, f27, f24, dyn # perform operation
fnmadd.s f31, f11, f27, f24, rdn # perform operation
fnmadd.s f31, f11, f27, f24, rmm # perform operation
fnmadd.s f31, f11, f27, f24, rne # perform operation
fnmadd.s f31, f11, f27, f24, rtz # perform operation
fnmadd.s f31, f11, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f27, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x4fdbda13 # load x3 with value 0x4fdbda13
sw x3, 0(x2) # store 0x4fdbda13 in memory
flw f12, 0(x2) # load 0x4fdbda13 from memory into f12
fnmadd.s f16, f17, f30, f12, dyn # perform operation
fnmadd.s f16, f17, f30, f12, rdn # perform operation
fnmadd.s f16, f17, f30, f12, rmm # perform operation
fnmadd.s f16, f17, f30, f12, rne # perform operation
fnmadd.s f16, f17, f30, f12, rtz # perform operation
fnmadd.s f16, f17, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f17, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xc5967a0f # load x3 with value 0xc5967a0f
sw x3, 0(x2) # store 0xc5967a0f in memory
flw f6, 0(x2) # load 0xc5967a0f from memory into f6
fnmadd.s f12, f3, f31, f6, dyn # perform operation
fnmadd.s f12, f3, f31, f6, rdn # perform operation
fnmadd.s f12, f3, f31, f6, rmm # perform operation
fnmadd.s f12, f3, f31, f6, rne # perform operation
fnmadd.s f12, f3, f31, f6, rtz # perform operation
fnmadd.s f12, f3, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x6397d147 # load x3 with value 0x6397d147
sw x3, 0(x2) # store 0x6397d147 in memory
flw f15, 0(x2) # load 0x6397d147 from memory into f15
fnmadd.s f10, f14, f3, f15, dyn # perform operation
fnmadd.s f10, f14, f3, f15, rdn # perform operation
fnmadd.s f10, f14, f3, f15, rmm # perform operation
fnmadd.s f10, f14, f3, f15, rne # perform operation
fnmadd.s f10, f14, f3, f15, rtz # perform operation
fnmadd.s f10, f14, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x00e22e17 # load x3 with value 0x00e22e17
sw x3, 0(x2) # store 0x00e22e17 in memory
flw f27, 0(x2) # load 0x00e22e17 from memory into f27
fnmadd.s f15, f23, f12, f27, dyn # perform operation
fnmadd.s f15, f23, f12, f27, rdn # perform operation
fnmadd.s f15, f23, f12, f27, rmm # perform operation
fnmadd.s f15, f23, f12, f27, rne # perform operation
fnmadd.s f15, f23, f12, f27, rtz # perform operation
fnmadd.s f15, f23, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f23, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f23, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f23, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f23, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f23, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x3cf764a4 # load x3 with value 0x3cf764a4
sw x3, 0(x2) # store 0x3cf764a4 in memory
flw f17, 0(x2) # load 0x3cf764a4 from memory into f17
fnmadd.s f14, f28, f2, f17, dyn # perform operation
fnmadd.s f14, f28, f2, f17, rdn # perform operation
fnmadd.s f14, f28, f2, f17, rmm # perform operation
fnmadd.s f14, f28, f2, f17, rne # perform operation
fnmadd.s f14, f28, f2, f17, rtz # perform operation
fnmadd.s f14, f28, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f28, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f28, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x3a1e104e # load x3 with value 0x3a1e104e
sw x3, 0(x2) # store 0x3a1e104e in memory
flw f15, 0(x2) # load 0x3a1e104e from memory into f15
fnmadd.s f10, f31, f30, f15, dyn # perform operation
fnmadd.s f10, f31, f30, f15, rdn # perform operation
fnmadd.s f10, f31, f30, f15, rmm # perform operation
fnmadd.s f10, f31, f30, f15, rne # perform operation
fnmadd.s f10, f31, f30, f15, rtz # perform operation
fnmadd.s f10, f31, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f31, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f31, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0xb38c1635 # load x3 with value 0xb38c1635
sw x3, 0(x2) # store 0xb38c1635 in memory
flw f7, 0(x2) # load 0xb38c1635 from memory into f7
fnmadd.s f13, f31, f15, f7, dyn # perform operation
fnmadd.s f13, f31, f15, f7, rdn # perform operation
fnmadd.s f13, f31, f15, f7, rmm # perform operation
fnmadd.s f13, f31, f15, f7, rne # perform operation
fnmadd.s f13, f31, f15, f7, rtz # perform operation
fnmadd.s f13, f31, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f31, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f31, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x259c1352 # load x3 with value 0x259c1352
sw x3, 0(x2) # store 0x259c1352 in memory
flw f14, 0(x2) # load 0x259c1352 from memory into f14
fnmadd.s f8, f23, f22, f14, dyn # perform operation
fnmadd.s f8, f23, f22, f14, rdn # perform operation
fnmadd.s f8, f23, f22, f14, rmm # perform operation
fnmadd.s f8, f23, f22, f14, rne # perform operation
fnmadd.s f8, f23, f22, f14, rtz # perform operation
fnmadd.s f8, f23, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x54ec6c87 # load x3 with value 0x54ec6c87
sw x3, 0(x2) # store 0x54ec6c87 in memory
flw f19, 0(x2) # load 0x54ec6c87 from memory into f19
fnmadd.s f8, f23, f20, f19, dyn # perform operation
fnmadd.s f8, f23, f20, f19, rdn # perform operation
fnmadd.s f8, f23, f20, f19, rmm # perform operation
fnmadd.s f8, f23, f20, f19, rne # perform operation
fnmadd.s f8, f23, f20, f19, rtz # perform operation
fnmadd.s f8, f23, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x03bccaa3 # load x3 with value 0x03bccaa3
sw x3, 0(x2) # store 0x03bccaa3 in memory
flw f15, 0(x2) # load 0x03bccaa3 from memory into f15
fnmadd.s f28, f30, f14, f15, dyn # perform operation
fnmadd.s f28, f30, f14, f15, rdn # perform operation
fnmadd.s f28, f30, f14, f15, rmm # perform operation
fnmadd.s f28, f30, f14, f15, rne # perform operation
fnmadd.s f28, f30, f14, f15, rtz # perform operation
fnmadd.s f28, f30, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f30, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f30, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0xa3f2f4c9 # load x3 with value 0xa3f2f4c9
sw x3, 0(x2) # store 0xa3f2f4c9 in memory
flw f29, 0(x2) # load 0xa3f2f4c9 from memory into f29
fnmadd.s f8, f30, f28, f29, dyn # perform operation
fnmadd.s f8, f30, f28, f29, rdn # perform operation
fnmadd.s f8, f30, f28, f29, rmm # perform operation
fnmadd.s f8, f30, f28, f29, rne # perform operation
fnmadd.s f8, f30, f28, f29, rtz # perform operation
fnmadd.s f8, f30, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f30, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f30, f28, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x7528e4c5 # load x3 with value 0x7528e4c5
sw x3, 0(x2) # store 0x7528e4c5 in memory
flw f5, 0(x2) # load 0x7528e4c5 from memory into f5
fnmadd.s f22, f17, f14, f5, dyn # perform operation
fnmadd.s f22, f17, f14, f5, rdn # perform operation
fnmadd.s f22, f17, f14, f5, rmm # perform operation
fnmadd.s f22, f17, f14, f5, rne # perform operation
fnmadd.s f22, f17, f14, f5, rtz # perform operation
fnmadd.s f22, f17, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xdecc4145 # load x3 with value 0xdecc4145
sw x3, 0(x2) # store 0xdecc4145 in memory
flw f24, 0(x2) # load 0xdecc4145 from memory into f24
fnmadd.s f29, f20, f7, f24, dyn # perform operation
fnmadd.s f29, f20, f7, f24, rdn # perform operation
fnmadd.s f29, f20, f7, f24, rmm # perform operation
fnmadd.s f29, f20, f7, f24, rne # perform operation
fnmadd.s f29, f20, f7, f24, rtz # perform operation
fnmadd.s f29, f20, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x81186f1b # load x3 with value 0x81186f1b
sw x3, 0(x2) # store 0x81186f1b in memory
flw f30, 0(x2) # load 0x81186f1b from memory into f30
fnmadd.s f25, f28, f11, f30, dyn # perform operation
fnmadd.s f25, f28, f11, f30, rdn # perform operation
fnmadd.s f25, f28, f11, f30, rmm # perform operation
fnmadd.s f25, f28, f11, f30, rne # perform operation
fnmadd.s f25, f28, f11, f30, rtz # perform operation
fnmadd.s f25, f28, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x42aff4f7 # load x3 with value 0x42aff4f7
sw x3, 0(x2) # store 0x42aff4f7 in memory
flw f15, 0(x2) # load 0x42aff4f7 from memory into f15
fnmadd.s f29, f25, f9, f15, dyn # perform operation
fnmadd.s f29, f25, f9, f15, rdn # perform operation
fnmadd.s f29, f25, f9, f15, rmm # perform operation
fnmadd.s f29, f25, f9, f15, rne # perform operation
fnmadd.s f29, f25, f9, f15, rtz # perform operation
fnmadd.s f29, f25, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f25, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f25, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x328df67e # load x3 with value 0x328df67e
sw x3, 0(x2) # store 0x328df67e in memory
flw f19, 0(x2) # load 0x328df67e from memory into f19
fnmadd.s f10, f21, f25, f19, dyn # perform operation
fnmadd.s f10, f21, f25, f19, rdn # perform operation
fnmadd.s f10, f21, f25, f19, rmm # perform operation
fnmadd.s f10, f21, f25, f19, rne # perform operation
fnmadd.s f10, f21, f25, f19, rtz # perform operation
fnmadd.s f10, f21, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x306dcd16 # load x3 with value 0x306dcd16
sw x3, 0(x2) # store 0x306dcd16 in memory
flw f22, 0(x2) # load 0x306dcd16 from memory into f22
fnmadd.s f5, f7, f6, f22, dyn # perform operation
fnmadd.s f5, f7, f6, f22, rdn # perform operation
fnmadd.s f5, f7, f6, f22, rmm # perform operation
fnmadd.s f5, f7, f6, f22, rne # perform operation
fnmadd.s f5, f7, f6, f22, rtz # perform operation
fnmadd.s f5, f7, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x64162818 # load x3 with value 0x64162818
sw x3, 0(x2) # store 0x64162818 in memory
flw f22, 0(x2) # load 0x64162818 from memory into f22
fnmadd.s f1, f19, f7, f22, dyn # perform operation
fnmadd.s f1, f19, f7, f22, rdn # perform operation
fnmadd.s f1, f19, f7, f22, rmm # perform operation
fnmadd.s f1, f19, f7, f22, rne # perform operation
fnmadd.s f1, f19, f7, f22, rtz # perform operation
fnmadd.s f1, f19, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f19, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f19, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xe6458bef # load x3 with value 0xe6458bef
sw x3, 0(x2) # store 0xe6458bef in memory
flw f14, 0(x2) # load 0xe6458bef from memory into f14
fnmadd.s f27, f15, f16, f14, dyn # perform operation
fnmadd.s f27, f15, f16, f14, rdn # perform operation
fnmadd.s f27, f15, f16, f14, rmm # perform operation
fnmadd.s f27, f15, f16, f14, rne # perform operation
fnmadd.s f27, f15, f16, f14, rtz # perform operation
fnmadd.s f27, f15, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x717b64dd # load x3 with value 0x717b64dd
sw x3, 0(x2) # store 0x717b64dd in memory
flw f2, 0(x2) # load 0x717b64dd from memory into f2
fnmadd.s f3, f29, f17, f2, dyn # perform operation
fnmadd.s f3, f29, f17, f2, rdn # perform operation
fnmadd.s f3, f29, f17, f2, rmm # perform operation
fnmadd.s f3, f29, f17, f2, rne # perform operation
fnmadd.s f3, f29, f17, f2, rtz # perform operation
fnmadd.s f3, f29, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f29, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f29, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0xe7200292 # load x3 with value 0xe7200292
sw x3, 0(x2) # store 0xe7200292 in memory
flw f29, 0(x2) # load 0xe7200292 from memory into f29
fnmadd.s f22, f7, f27, f29, dyn # perform operation
fnmadd.s f22, f7, f27, f29, rdn # perform operation
fnmadd.s f22, f7, f27, f29, rmm # perform operation
fnmadd.s f22, f7, f27, f29, rne # perform operation
fnmadd.s f22, f7, f27, f29, rtz # perform operation
fnmadd.s f22, f7, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x9c44d360 # load x3 with value 0x9c44d360
sw x3, 0(x2) # store 0x9c44d360 in memory
flw f15, 0(x2) # load 0x9c44d360 from memory into f15
fnmadd.s f26, f28, f29, f15, dyn # perform operation
fnmadd.s f26, f28, f29, f15, rdn # perform operation
fnmadd.s f26, f28, f29, f15, rmm # perform operation
fnmadd.s f26, f28, f29, f15, rne # perform operation
fnmadd.s f26, f28, f29, f15, rtz # perform operation
fnmadd.s f26, f28, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x808d274f # load x3 with value 0x808d274f
sw x3, 0(x2) # store 0x808d274f in memory
flw f16, 0(x2) # load 0x808d274f from memory into f16
fnmadd.s f20, f2, f5, f16, dyn # perform operation
fnmadd.s f20, f2, f5, f16, rdn # perform operation
fnmadd.s f20, f2, f5, f16, rmm # perform operation
fnmadd.s f20, f2, f5, f16, rne # perform operation
fnmadd.s f20, f2, f5, f16, rtz # perform operation
fnmadd.s f20, f2, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xb0b91a81 # load x3 with value 0xb0b91a81
sw x3, 0(x2) # store 0xb0b91a81 in memory
flw f25, 0(x2) # load 0xb0b91a81 from memory into f25
fnmadd.s f17, f26, f2, f25, dyn # perform operation
fnmadd.s f17, f26, f2, f25, rdn # perform operation
fnmadd.s f17, f26, f2, f25, rmm # perform operation
fnmadd.s f17, f26, f2, f25, rne # perform operation
fnmadd.s f17, f26, f2, f25, rtz # perform operation
fnmadd.s f17, f26, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f26, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x38492d45 # load x3 with value 0x38492d45
sw x3, 0(x2) # store 0x38492d45 in memory
flw f10, 0(x2) # load 0x38492d45 from memory into f10
fnmadd.s f17, f16, f26, f10, dyn # perform operation
fnmadd.s f17, f16, f26, f10, rdn # perform operation
fnmadd.s f17, f16, f26, f10, rmm # perform operation
fnmadd.s f17, f16, f26, f10, rne # perform operation
fnmadd.s f17, f16, f26, f10, rtz # perform operation
fnmadd.s f17, f16, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f16, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f16, f26, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x85a86998 # load x3 with value 0x85a86998
sw x3, 0(x2) # store 0x85a86998 in memory
flw f26, 0(x2) # load 0x85a86998 from memory into f26
fnmadd.s f12, f27, f3, f26, dyn # perform operation
fnmadd.s f12, f27, f3, f26, rdn # perform operation
fnmadd.s f12, f27, f3, f26, rmm # perform operation
fnmadd.s f12, f27, f3, f26, rne # perform operation
fnmadd.s f12, f27, f3, f26, rtz # perform operation
fnmadd.s f12, f27, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f27, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f27, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x6357b5b6 # load x3 with value 0x6357b5b6
sw x3, 0(x2) # store 0x6357b5b6 in memory
flw f16, 0(x2) # load 0x6357b5b6 from memory into f16
fnmadd.s f10, f30, f24, f16, dyn # perform operation
fnmadd.s f10, f30, f24, f16, rdn # perform operation
fnmadd.s f10, f30, f24, f16, rmm # perform operation
fnmadd.s f10, f30, f24, f16, rne # perform operation
fnmadd.s f10, f30, f24, f16, rtz # perform operation
fnmadd.s f10, f30, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f24, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x573a4139 # load x3 with value 0x573a4139
sw x3, 0(x2) # store 0x573a4139 in memory
flw f17, 0(x2) # load 0x573a4139 from memory into f17
fnmadd.s f19, f30, f15, f17, dyn # perform operation
fnmadd.s f19, f30, f15, f17, rdn # perform operation
fnmadd.s f19, f30, f15, f17, rmm # perform operation
fnmadd.s f19, f30, f15, f17, rne # perform operation
fnmadd.s f19, f30, f15, f17, rtz # perform operation
fnmadd.s f19, f30, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xe2df8f3b # load x3 with value 0xe2df8f3b
sw x3, 0(x2) # store 0xe2df8f3b in memory
flw f1, 0(x2) # load 0xe2df8f3b from memory into f1
fnmadd.s f21, f15, f22, f1, dyn # perform operation
fnmadd.s f21, f15, f22, f1, rdn # perform operation
fnmadd.s f21, f15, f22, f1, rmm # perform operation
fnmadd.s f21, f15, f22, f1, rne # perform operation
fnmadd.s f21, f15, f22, f1, rtz # perform operation
fnmadd.s f21, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xa2e7b111 # load x3 with value 0xa2e7b111
sw x3, 0(x2) # store 0xa2e7b111 in memory
flw f1, 0(x2) # load 0xa2e7b111 from memory into f1
fnmadd.s f13, f11, f5, f1, dyn # perform operation
fnmadd.s f13, f11, f5, f1, rdn # perform operation
fnmadd.s f13, f11, f5, f1, rmm # perform operation
fnmadd.s f13, f11, f5, f1, rne # perform operation
fnmadd.s f13, f11, f5, f1, rtz # perform operation
fnmadd.s f13, f11, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xb4566554 # load x3 with value 0xb4566554
sw x3, 0(x2) # store 0xb4566554 in memory
flw f18, 0(x2) # load 0xb4566554 from memory into f18
fnmadd.s f27, f24, f1, f18, dyn # perform operation
fnmadd.s f27, f24, f1, f18, rdn # perform operation
fnmadd.s f27, f24, f1, f18, rmm # perform operation
fnmadd.s f27, f24, f1, f18, rne # perform operation
fnmadd.s f27, f24, f1, f18, rtz # perform operation
fnmadd.s f27, f24, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x40ebf0e2 # load x3 with value 0x40ebf0e2
sw x3, 0(x2) # store 0x40ebf0e2 in memory
flw f15, 0(x2) # load 0x40ebf0e2 from memory into f15
fnmadd.s f13, f20, f21, f15, dyn # perform operation
fnmadd.s f13, f20, f21, f15, rdn # perform operation
fnmadd.s f13, f20, f21, f15, rmm # perform operation
fnmadd.s f13, f20, f21, f15, rne # perform operation
fnmadd.s f13, f20, f21, f15, rtz # perform operation
fnmadd.s f13, f20, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f20, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f20, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x788702b4 # load x3 with value 0x788702b4
sw x3, 0(x2) # store 0x788702b4 in memory
flw f7, 0(x2) # load 0x788702b4 from memory into f7
fnmadd.s f27, f29, f24, f7, dyn # perform operation
fnmadd.s f27, f29, f24, f7, rdn # perform operation
fnmadd.s f27, f29, f24, f7, rmm # perform operation
fnmadd.s f27, f29, f24, f7, rne # perform operation
fnmadd.s f27, f29, f24, f7, rtz # perform operation
fnmadd.s f27, f29, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x7188e46f # load x3 with value 0x7188e46f
sw x3, 0(x2) # store 0x7188e46f in memory
flw f14, 0(x2) # load 0x7188e46f from memory into f14
fnmadd.s f26, f31, f23, f14, dyn # perform operation
fnmadd.s f26, f31, f23, f14, rdn # perform operation
fnmadd.s f26, f31, f23, f14, rmm # perform operation
fnmadd.s f26, f31, f23, f14, rne # perform operation
fnmadd.s f26, f31, f23, f14, rtz # perform operation
fnmadd.s f26, f31, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f31, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f31, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xeca66469 # load x3 with value 0xeca66469
sw x3, 0(x2) # store 0xeca66469 in memory
flw f21, 0(x2) # load 0xeca66469 from memory into f21
fnmadd.s f12, f5, f30, f21, dyn # perform operation
fnmadd.s f12, f5, f30, f21, rdn # perform operation
fnmadd.s f12, f5, f30, f21, rmm # perform operation
fnmadd.s f12, f5, f30, f21, rne # perform operation
fnmadd.s f12, f5, f30, f21, rtz # perform operation
fnmadd.s f12, f5, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f5, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f5, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x231b5563 # load x3 with value 0x231b5563
sw x3, 0(x2) # store 0x231b5563 in memory
flw f13, 0(x2) # load 0x231b5563 from memory into f13
fnmadd.s f1, f5, f10, f13, dyn # perform operation
fnmadd.s f1, f5, f10, f13, rdn # perform operation
fnmadd.s f1, f5, f10, f13, rmm # perform operation
fnmadd.s f1, f5, f10, f13, rne # perform operation
fnmadd.s f1, f5, f10, f13, rtz # perform operation
fnmadd.s f1, f5, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f10, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x0cbc2ffc # load x3 with value 0x0cbc2ffc
sw x3, 0(x2) # store 0x0cbc2ffc in memory
flw f11, 0(x2) # load 0x0cbc2ffc from memory into f11
fnmadd.s f25, f19, f18, f11, dyn # perform operation
fnmadd.s f25, f19, f18, f11, rdn # perform operation
fnmadd.s f25, f19, f18, f11, rmm # perform operation
fnmadd.s f25, f19, f18, f11, rne # perform operation
fnmadd.s f25, f19, f18, f11, rtz # perform operation
fnmadd.s f25, f19, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f19, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f19, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x0b12b2b0 # load x3 with value 0x0b12b2b0
sw x3, 0(x2) # store 0x0b12b2b0 in memory
flw f24, 0(x2) # load 0x0b12b2b0 from memory into f24
fnmadd.s f8, f26, f18, f24, dyn # perform operation
fnmadd.s f8, f26, f18, f24, rdn # perform operation
fnmadd.s f8, f26, f18, f24, rmm # perform operation
fnmadd.s f8, f26, f18, f24, rne # perform operation
fnmadd.s f8, f26, f18, f24, rtz # perform operation
fnmadd.s f8, f26, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f26, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f26, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f26, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f26, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f26, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x7fd98ff5 # load x3 with value 0x7fd98ff5
sw x3, 0(x2) # store 0x7fd98ff5 in memory
flw f29, 0(x2) # load 0x7fd98ff5 from memory into f29
fnmadd.s f16, f9, f7, f29, dyn # perform operation
fnmadd.s f16, f9, f7, f29, rdn # perform operation
fnmadd.s f16, f9, f7, f29, rmm # perform operation
fnmadd.s f16, f9, f7, f29, rne # perform operation
fnmadd.s f16, f9, f7, f29, rtz # perform operation
fnmadd.s f16, f9, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x2c66bba0 # load x3 with value 0x2c66bba0
sw x3, 0(x2) # store 0x2c66bba0 in memory
flw f29, 0(x2) # load 0x2c66bba0 from memory into f29
fnmadd.s f25, f19, f11, f29, dyn # perform operation
fnmadd.s f25, f19, f11, f29, rdn # perform operation
fnmadd.s f25, f19, f11, f29, rmm # perform operation
fnmadd.s f25, f19, f11, f29, rne # perform operation
fnmadd.s f25, f19, f11, f29, rtz # perform operation
fnmadd.s f25, f19, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f19, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f19, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f19, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f19, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f19, f11, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x5e4c68c5 # load x3 with value 0x5e4c68c5
sw x3, 0(x2) # store 0x5e4c68c5 in memory
flw f12, 0(x2) # load 0x5e4c68c5 from memory into f12
fnmadd.s f28, f14, f24, f12, dyn # perform operation
fnmadd.s f28, f14, f24, f12, rdn # perform operation
fnmadd.s f28, f14, f24, f12, rmm # perform operation
fnmadd.s f28, f14, f24, f12, rne # perform operation
fnmadd.s f28, f14, f24, f12, rtz # perform operation
fnmadd.s f28, f14, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
la x2, scratch
li x3, 0x397479a0 # load x3 with value 0x397479a0
sw x3, 0(x2) # store 0x397479a0 in memory
flw f7, 0(x2) # load 0x397479a0 from memory into f7
fnmadd.s f31, f1, f16, f7, dyn # perform operation
fnmadd.s f31, f1, f16, f7, rdn # perform operation
fnmadd.s f31, f1, f16, f7, rmm # perform operation
fnmadd.s f31, f1, f16, f7, rne # perform operation
fnmadd.s f31, f1, f16, f7, rtz # perform operation
fnmadd.s f31, f1, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x950d6ede # load x3 with value 0x950d6ede
sw x3, 0(x2) # store 0x950d6ede in memory
flw f12, 0(x2) # load 0x950d6ede from memory into f12
fnmadd.s f2, f13, f21, f12, dyn # perform operation
fnmadd.s f2, f13, f21, f12, rdn # perform operation
fnmadd.s f2, f13, f21, f12, rmm # perform operation
fnmadd.s f2, f13, f21, f12, rne # perform operation
fnmadd.s f2, f13, f21, f12, rtz # perform operation
fnmadd.s f2, f13, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x3c47a023 # load x3 with value 0x3c47a023
sw x3, 0(x2) # store 0x3c47a023 in memory
flw f19, 0(x2) # load 0x3c47a023 from memory into f19
fnmadd.s f27, f24, f8, f19, dyn # perform operation
fnmadd.s f27, f24, f8, f19, rdn # perform operation
fnmadd.s f27, f24, f8, f19, rmm # perform operation
fnmadd.s f27, f24, f8, f19, rne # perform operation
fnmadd.s f27, f24, f8, f19, rtz # perform operation
fnmadd.s f27, f24, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f24, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f24, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xa2426121 # load x3 with value 0xa2426121
sw x3, 0(x2) # store 0xa2426121 in memory
flw f8, 0(x2) # load 0xa2426121 from memory into f8
fnmadd.s f27, f28, f2, f8, dyn # perform operation
fnmadd.s f27, f28, f2, f8, rdn # perform operation
fnmadd.s f27, f28, f2, f8, rmm # perform operation
fnmadd.s f27, f28, f2, f8, rne # perform operation
fnmadd.s f27, f28, f2, f8, rtz # perform operation
fnmadd.s f27, f28, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x29cabd37 # load x3 with value 0x29cabd37
sw x3, 0(x2) # store 0x29cabd37 in memory
flw f1, 0(x2) # load 0x29cabd37 from memory into f1
fnmadd.s f6, f18, f31, f1, dyn # perform operation
fnmadd.s f6, f18, f31, f1, rdn # perform operation
fnmadd.s f6, f18, f31, f1, rmm # perform operation
fnmadd.s f6, f18, f31, f1, rne # perform operation
fnmadd.s f6, f18, f31, f1, rtz # perform operation
fnmadd.s f6, f18, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f18, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f18, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f18, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f18, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f18, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x4321903b # load x3 with value 0x4321903b
sw x3, 0(x2) # store 0x4321903b in memory
flw f11, 0(x2) # load 0x4321903b from memory into f11
fnmadd.s f18, f15, f21, f11, dyn # perform operation
fnmadd.s f18, f15, f21, f11, rdn # perform operation
fnmadd.s f18, f15, f21, f11, rmm # perform operation
fnmadd.s f18, f15, f21, f11, rne # perform operation
fnmadd.s f18, f15, f21, f11, rtz # perform operation
fnmadd.s f18, f15, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f15, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f15, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0xc6da2707 # load x3 with value 0xc6da2707
sw x3, 0(x2) # store 0xc6da2707 in memory
flw f31, 0(x2) # load 0xc6da2707 from memory into f31
fnmadd.s f13, f10, f22, f31, dyn # perform operation
fnmadd.s f13, f10, f22, f31, rdn # perform operation
fnmadd.s f13, f10, f22, f31, rmm # perform operation
fnmadd.s f13, f10, f22, f31, rne # perform operation
fnmadd.s f13, f10, f22, f31, rtz # perform operation
fnmadd.s f13, f10, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f10, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f10, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xe3c6ccaf # load x3 with value 0xe3c6ccaf
sw x3, 0(x2) # store 0xe3c6ccaf in memory
flw f14, 0(x2) # load 0xe3c6ccaf from memory into f14
fnmadd.s f18, f1, f10, f14, dyn # perform operation
fnmadd.s f18, f1, f10, f14, rdn # perform operation
fnmadd.s f18, f1, f10, f14, rmm # perform operation
fnmadd.s f18, f1, f10, f14, rne # perform operation
fnmadd.s f18, f1, f10, f14, rtz # perform operation
fnmadd.s f18, f1, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xe9b0a418 # load x3 with value 0xe9b0a418
sw x3, 0(x2) # store 0xe9b0a418 in memory
flw f20, 0(x2) # load 0xe9b0a418 from memory into f20
fnmadd.s f23, f1, f21, f20, dyn # perform operation
fnmadd.s f23, f1, f21, f20, rdn # perform operation
fnmadd.s f23, f1, f21, f20, rmm # perform operation
fnmadd.s f23, f1, f21, f20, rne # perform operation
fnmadd.s f23, f1, f21, f20, rtz # perform operation
fnmadd.s f23, f1, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x9bd3b8e9 # load x3 with value 0x9bd3b8e9
sw x3, 0(x2) # store 0x9bd3b8e9 in memory
flw f30, 0(x2) # load 0x9bd3b8e9 from memory into f30
fnmadd.s f25, f27, f18, f30, dyn # perform operation
fnmadd.s f25, f27, f18, f30, rdn # perform operation
fnmadd.s f25, f27, f18, f30, rmm # perform operation
fnmadd.s f25, f27, f18, f30, rne # perform operation
fnmadd.s f25, f27, f18, f30, rtz # perform operation
fnmadd.s f25, f27, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f27, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f27, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xa551bc70 # load x3 with value 0xa551bc70
sw x3, 0(x2) # store 0xa551bc70 in memory
flw f9, 0(x2) # load 0xa551bc70 from memory into f9
fnmadd.s f26, f27, f22, f9, dyn # perform operation
fnmadd.s f26, f27, f22, f9, rdn # perform operation
fnmadd.s f26, f27, f22, f9, rmm # perform operation
fnmadd.s f26, f27, f22, f9, rne # perform operation
fnmadd.s f26, f27, f22, f9, rtz # perform operation
fnmadd.s f26, f27, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f22, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x75094c42 # load x3 with value 0x75094c42
sw x3, 0(x2) # store 0x75094c42 in memory
flw f11, 0(x2) # load 0x75094c42 from memory into f11
fnmadd.s f14, f22, f7, f11, dyn # perform operation
fnmadd.s f14, f22, f7, f11, rdn # perform operation
fnmadd.s f14, f22, f7, f11, rmm # perform operation
fnmadd.s f14, f22, f7, f11, rne # perform operation
fnmadd.s f14, f22, f7, f11, rtz # perform operation
fnmadd.s f14, f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x5b070f09 # load x3 with value 0x5b070f09
sw x3, 0(x2) # store 0x5b070f09 in memory
flw f8, 0(x2) # load 0x5b070f09 from memory into f8
fnmadd.s f20, f5, f15, f8, dyn # perform operation
fnmadd.s f20, f5, f15, f8, rdn # perform operation
fnmadd.s f20, f5, f15, f8, rmm # perform operation
fnmadd.s f20, f5, f15, f8, rne # perform operation
fnmadd.s f20, f5, f15, f8, rtz # perform operation
fnmadd.s f20, f5, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xe9f51f7c # load x3 with value 0xe9f51f7c
sw x3, 0(x2) # store 0xe9f51f7c in memory
flw f15, 0(x2) # load 0xe9f51f7c from memory into f15
fnmadd.s f10, f19, f8, f15, dyn # perform operation
fnmadd.s f10, f19, f8, f15, rdn # perform operation
fnmadd.s f10, f19, f8, f15, rmm # perform operation
fnmadd.s f10, f19, f8, f15, rne # perform operation
fnmadd.s f10, f19, f8, f15, rtz # perform operation
fnmadd.s f10, f19, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f19, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f19, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x5f4c1264 # load x3 with value 0x5f4c1264
sw x3, 0(x2) # store 0x5f4c1264 in memory
flw f20, 0(x2) # load 0x5f4c1264 from memory into f20
fnmadd.s f11, f15, f19, f20, dyn # perform operation
fnmadd.s f11, f15, f19, f20, rdn # perform operation
fnmadd.s f11, f15, f19, f20, rmm # perform operation
fnmadd.s f11, f15, f19, f20, rne # perform operation
fnmadd.s f11, f15, f19, f20, rtz # perform operation
fnmadd.s f11, f15, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x2bdc0d44 # load x3 with value 0x2bdc0d44
sw x3, 0(x2) # store 0x2bdc0d44 in memory
flw f17, 0(x2) # load 0x2bdc0d44 from memory into f17
fnmadd.s f23, f7, f24, f17, dyn # perform operation
fnmadd.s f23, f7, f24, f17, rdn # perform operation
fnmadd.s f23, f7, f24, f17, rmm # perform operation
fnmadd.s f23, f7, f24, f17, rne # perform operation
fnmadd.s f23, f7, f24, f17, rtz # perform operation
fnmadd.s f23, f7, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x2c28ff91 # load x3 with value 0x2c28ff91
sw x3, 0(x2) # store 0x2c28ff91 in memory
flw f13, 0(x2) # load 0x2c28ff91 from memory into f13
fnmadd.s f24, f15, f28, f13, dyn # perform operation
fnmadd.s f24, f15, f28, f13, rdn # perform operation
fnmadd.s f24, f15, f28, f13, rmm # perform operation
fnmadd.s f24, f15, f28, f13, rne # perform operation
fnmadd.s f24, f15, f28, f13, rtz # perform operation
fnmadd.s f24, f15, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f15, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f15, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0xbd430303 # load x3 with value 0xbd430303
sw x3, 0(x2) # store 0xbd430303 in memory
flw f31, 0(x2) # load 0xbd430303 from memory into f31
fnmadd.s f18, f11, f1, f31, dyn # perform operation
fnmadd.s f18, f11, f1, f31, rdn # perform operation
fnmadd.s f18, f11, f1, f31, rmm # perform operation
fnmadd.s f18, f11, f1, f31, rne # perform operation
fnmadd.s f18, f11, f1, f31, rtz # perform operation
fnmadd.s f18, f11, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x52e98c92 # load x3 with value 0x52e98c92
sw x3, 0(x2) # store 0x52e98c92 in memory
flw f18, 0(x2) # load 0x52e98c92 from memory into f18
fnmadd.s f11, f6, f20, f18, dyn # perform operation
fnmadd.s f11, f6, f20, f18, rdn # perform operation
fnmadd.s f11, f6, f20, f18, rmm # perform operation
fnmadd.s f11, f6, f20, f18, rne # perform operation
fnmadd.s f11, f6, f20, f18, rtz # perform operation
fnmadd.s f11, f6, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f6, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f6, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f6, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f6, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f6, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x03555a14 # load x3 with value 0x03555a14
sw x3, 0(x2) # store 0x03555a14 in memory
flw f11, 0(x2) # load 0x03555a14 from memory into f11
fnmadd.s f30, f2, f7, f11, dyn # perform operation
fnmadd.s f30, f2, f7, f11, rdn # perform operation
fnmadd.s f30, f2, f7, f11, rmm # perform operation
fnmadd.s f30, f2, f7, f11, rne # perform operation
fnmadd.s f30, f2, f7, f11, rtz # perform operation
fnmadd.s f30, f2, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x2e2781f0 # load x3 with value 0x2e2781f0
sw x3, 0(x2) # store 0x2e2781f0 in memory
flw f20, 0(x2) # load 0x2e2781f0 from memory into f20
fnmadd.s f30, f7, f8, f20, dyn # perform operation
fnmadd.s f30, f7, f8, f20, rdn # perform operation
fnmadd.s f30, f7, f8, f20, rmm # perform operation
fnmadd.s f30, f7, f8, f20, rne # perform operation
fnmadd.s f30, f7, f8, f20, rtz # perform operation
fnmadd.s f30, f7, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f7, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f7, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f7, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f7, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f7, f8, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x4c1a3e38 # load x3 with value 0x4c1a3e38
sw x3, 0(x2) # store 0x4c1a3e38 in memory
flw f26, 0(x2) # load 0x4c1a3e38 from memory into f26
fnmadd.s f21, f15, f25, f26, dyn # perform operation
fnmadd.s f21, f15, f25, f26, rdn # perform operation
fnmadd.s f21, f15, f25, f26, rmm # perform operation
fnmadd.s f21, f15, f25, f26, rne # perform operation
fnmadd.s f21, f15, f25, f26, rtz # perform operation
fnmadd.s f21, f15, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x91f2f1ab # load x3 with value 0x91f2f1ab
sw x3, 0(x2) # store 0x91f2f1ab in memory
flw f11, 0(x2) # load 0x91f2f1ab from memory into f11
fnmadd.s f13, f31, f29, f11, dyn # perform operation
fnmadd.s f13, f31, f29, f11, rdn # perform operation
fnmadd.s f13, f31, f29, f11, rmm # perform operation
fnmadd.s f13, f31, f29, f11, rne # perform operation
fnmadd.s f13, f31, f29, f11, rtz # perform operation
fnmadd.s f13, f31, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f31, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f31, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f31, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f31, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f31, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x8b0ff947 # load x3 with value 0x8b0ff947
sw x3, 0(x2) # store 0x8b0ff947 in memory
flw f31, 0(x2) # load 0x8b0ff947 from memory into f31
fnmadd.s f20, f9, f28, f31, dyn # perform operation
fnmadd.s f20, f9, f28, f31, rdn # perform operation
fnmadd.s f20, f9, f28, f31, rmm # perform operation
fnmadd.s f20, f9, f28, f31, rne # perform operation
fnmadd.s f20, f9, f28, f31, rtz # perform operation
fnmadd.s f20, f9, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0x7fe8a850 # load x3 with value 0x7fe8a850
sw x3, 0(x2) # store 0x7fe8a850 in memory
flw f7, 0(x2) # load 0x7fe8a850 from memory into f7
fnmadd.s f17, f28, f1, f7, dyn # perform operation
fnmadd.s f17, f28, f1, f7, rdn # perform operation
fnmadd.s f17, f28, f1, f7, rmm # perform operation
fnmadd.s f17, f28, f1, f7, rne # perform operation
fnmadd.s f17, f28, f1, f7, rtz # perform operation
fnmadd.s f17, f28, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f28, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f28, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f28, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f28, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f28, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x024f3642 # load x3 with value 0x024f3642
sw x3, 0(x2) # store 0x024f3642 in memory
flw f28, 0(x2) # load 0x024f3642 from memory into f28
fnmadd.s f8, f17, f25, f28, dyn # perform operation
fnmadd.s f8, f17, f25, f28, rdn # perform operation
fnmadd.s f8, f17, f25, f28, rmm # perform operation
fnmadd.s f8, f17, f25, f28, rne # perform operation
fnmadd.s f8, f17, f25, f28, rtz # perform operation
fnmadd.s f8, f17, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xf63c032e # load x3 with value 0xf63c032e
sw x3, 0(x2) # store 0xf63c032e in memory
flw f25, 0(x2) # load 0xf63c032e from memory into f25
fnmadd.s f12, f13, f6, f25, dyn # perform operation
fnmadd.s f12, f13, f6, f25, rdn # perform operation
fnmadd.s f12, f13, f6, f25, rmm # perform operation
fnmadd.s f12, f13, f6, f25, rne # perform operation
fnmadd.s f12, f13, f6, f25, rtz # perform operation
fnmadd.s f12, f13, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f6, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x24bb0630 # load x3 with value 0x24bb0630
sw x3, 0(x2) # store 0x24bb0630 in memory
flw f20, 0(x2) # load 0x24bb0630 from memory into f20
fnmadd.s f1, f28, f15, f20, dyn # perform operation
fnmadd.s f1, f28, f15, f20, rdn # perform operation
fnmadd.s f1, f28, f15, f20, rmm # perform operation
fnmadd.s f1, f28, f15, f20, rne # perform operation
fnmadd.s f1, f28, f15, f20, rtz # perform operation
fnmadd.s f1, f28, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f28, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f28, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x12b54d22 # load x3 with value 0x12b54d22
sw x3, 0(x2) # store 0x12b54d22 in memory
flw f28, 0(x2) # load 0x12b54d22 from memory into f28
fnmadd.s f20, f9, f18, f28, dyn # perform operation
fnmadd.s f20, f9, f18, f28, rdn # perform operation
fnmadd.s f20, f9, f18, f28, rmm # perform operation
fnmadd.s f20, f9, f18, f28, rne # perform operation
fnmadd.s f20, f9, f18, f28, rtz # perform operation
fnmadd.s f20, f9, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f9, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f9, f18, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x2ea6779a # load x3 with value 0x2ea6779a
sw x3, 0(x2) # store 0x2ea6779a in memory
flw f10, 0(x2) # load 0x2ea6779a from memory into f10
fnmadd.s f17, f2, f30, f10, dyn # perform operation
fnmadd.s f17, f2, f30, f10, rdn # perform operation
fnmadd.s f17, f2, f30, f10, rmm # perform operation
fnmadd.s f17, f2, f30, f10, rne # perform operation
fnmadd.s f17, f2, f30, f10, rtz # perform operation
fnmadd.s f17, f2, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0xf8bca90e # load x3 with value 0xf8bca90e
sw x3, 0(x2) # store 0xf8bca90e in memory
flw f26, 0(x2) # load 0xf8bca90e from memory into f26
fnmadd.s f11, f12, f27, f26, dyn # perform operation
fnmadd.s f11, f12, f27, f26, rdn # perform operation
fnmadd.s f11, f12, f27, f26, rmm # perform operation
fnmadd.s f11, f12, f27, f26, rne # perform operation
fnmadd.s f11, f12, f27, f26, rtz # perform operation
fnmadd.s f11, f12, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0x868e02b5 # load x3 with value 0x868e02b5
sw x3, 0(x2) # store 0x868e02b5 in memory
flw f6, 0(x2) # load 0x868e02b5 from memory into f6
fnmadd.s f5, f29, f27, f6, dyn # perform operation
fnmadd.s f5, f29, f27, f6, rdn # perform operation
fnmadd.s f5, f29, f27, f6, rmm # perform operation
fnmadd.s f5, f29, f27, f6, rne # perform operation
fnmadd.s f5, f29, f27, f6, rtz # perform operation
fnmadd.s f5, f29, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f29, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f29, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xb19cb5ee # load x3 with value 0xb19cb5ee
sw x3, 0(x2) # store 0xb19cb5ee in memory
flw f6, 0(x2) # load 0xb19cb5ee from memory into f6
fnmadd.s f1, f31, f22, f6, dyn # perform operation
fnmadd.s f1, f31, f22, f6, rdn # perform operation
fnmadd.s f1, f31, f22, f6, rmm # perform operation
fnmadd.s f1, f31, f22, f6, rne # perform operation
fnmadd.s f1, f31, f22, f6, rtz # perform operation
fnmadd.s f1, f31, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f31, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f31, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f31, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f31, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f31, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0xa04d18e9 # load x3 with value 0xa04d18e9
sw x3, 0(x2) # store 0xa04d18e9 in memory
flw f15, 0(x2) # load 0xa04d18e9 from memory into f15
fnmadd.s f20, f8, f14, f15, dyn # perform operation
fnmadd.s f20, f8, f14, f15, rdn # perform operation
fnmadd.s f20, f8, f14, f15, rmm # perform operation
fnmadd.s f20, f8, f14, f15, rne # perform operation
fnmadd.s f20, f8, f14, f15, rtz # perform operation
fnmadd.s f20, f8, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f8, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f8, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f8, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f8, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f8, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xa910d045 # load x3 with value 0xa910d045
sw x3, 0(x2) # store 0xa910d045 in memory
flw f3, 0(x2) # load 0xa910d045 from memory into f3
fnmadd.s f18, f8, f13, f3, dyn # perform operation
fnmadd.s f18, f8, f13, f3, rdn # perform operation
fnmadd.s f18, f8, f13, f3, rmm # perform operation
fnmadd.s f18, f8, f13, f3, rne # perform operation
fnmadd.s f18, f8, f13, f3, rtz # perform operation
fnmadd.s f18, f8, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f8, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f8, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f8, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f8, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f8, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x360b8a09 # load x3 with value 0x360b8a09
sw x3, 0(x2) # store 0x360b8a09 in memory
flw f8, 0(x2) # load 0x360b8a09 from memory into f8
fnmadd.s f7, f1, f26, f8, dyn # perform operation
fnmadd.s f7, f1, f26, f8, rdn # perform operation
fnmadd.s f7, f1, f26, f8, rmm # perform operation
fnmadd.s f7, f1, f26, f8, rne # perform operation
fnmadd.s f7, f1, f26, f8, rtz # perform operation
fnmadd.s f7, f1, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f26, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x8c5377e2 # load x3 with value 0x8c5377e2
sw x3, 0(x2) # store 0x8c5377e2 in memory
flw f6, 0(x2) # load 0x8c5377e2 from memory into f6
fnmadd.s f18, f14, f13, f6, dyn # perform operation
fnmadd.s f18, f14, f13, f6, rdn # perform operation
fnmadd.s f18, f14, f13, f6, rmm # perform operation
fnmadd.s f18, f14, f13, f6, rne # perform operation
fnmadd.s f18, f14, f13, f6, rtz # perform operation
fnmadd.s f18, f14, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f13, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xd8f042f7 # load x3 with value 0xd8f042f7
sw x3, 0(x2) # store 0xd8f042f7 in memory
flw f27, 0(x2) # load 0xd8f042f7 from memory into f27
fnmadd.s f23, f19, f22, f27, dyn # perform operation
fnmadd.s f23, f19, f22, f27, rdn # perform operation
fnmadd.s f23, f19, f22, f27, rmm # perform operation
fnmadd.s f23, f19, f22, f27, rne # perform operation
fnmadd.s f23, f19, f22, f27, rtz # perform operation
fnmadd.s f23, f19, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f19, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x57aeb7d6 # load x3 with value 0x57aeb7d6
sw x3, 0(x2) # store 0x57aeb7d6 in memory
flw f23, 0(x2) # load 0x57aeb7d6 from memory into f23
fnmadd.s f2, f30, f22, f23, dyn # perform operation
fnmadd.s f2, f30, f22, f23, rdn # perform operation
fnmadd.s f2, f30, f22, f23, rmm # perform operation
fnmadd.s f2, f30, f22, f23, rne # perform operation
fnmadd.s f2, f30, f22, f23, rtz # perform operation
fnmadd.s f2, f30, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xbeafdacc # load x3 with value 0xbeafdacc
sw x3, 0(x2) # store 0xbeafdacc in memory
flw f24, 0(x2) # load 0xbeafdacc from memory into f24
fnmadd.s f16, f1, f22, f24, dyn # perform operation
fnmadd.s f16, f1, f22, f24, rdn # perform operation
fnmadd.s f16, f1, f22, f24, rmm # perform operation
fnmadd.s f16, f1, f22, f24, rne # perform operation
fnmadd.s f16, f1, f22, f24, rtz # perform operation
fnmadd.s f16, f1, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x3b9f1da7 # load x3 with value 0x3b9f1da7
sw x3, 0(x2) # store 0x3b9f1da7 in memory
flw f20, 0(x2) # load 0x3b9f1da7 from memory into f20
fnmadd.s f11, f29, f13, f20, dyn # perform operation
fnmadd.s f11, f29, f13, f20, rdn # perform operation
fnmadd.s f11, f29, f13, f20, rmm # perform operation
fnmadd.s f11, f29, f13, f20, rne # perform operation
fnmadd.s f11, f29, f13, f20, rtz # perform operation
fnmadd.s f11, f29, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x4de401f5 # load x3 with value 0x4de401f5
sw x3, 0(x2) # store 0x4de401f5 in memory
flw f25, 0(x2) # load 0x4de401f5 from memory into f25
fnmadd.s f27, f26, f13, f25, dyn # perform operation
fnmadd.s f27, f26, f13, f25, rdn # perform operation
fnmadd.s f27, f26, f13, f25, rmm # perform operation
fnmadd.s f27, f26, f13, f25, rne # perform operation
fnmadd.s f27, f26, f13, f25, rtz # perform operation
fnmadd.s f27, f26, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x50401e7b # load x3 with value 0x50401e7b
sw x3, 0(x2) # store 0x50401e7b in memory
flw f24, 0(x2) # load 0x50401e7b from memory into f24
fnmadd.s f3, f26, f29, f24, dyn # perform operation
fnmadd.s f3, f26, f29, f24, rdn # perform operation
fnmadd.s f3, f26, f29, f24, rmm # perform operation
fnmadd.s f3, f26, f29, f24, rne # perform operation
fnmadd.s f3, f26, f29, f24, rtz # perform operation
fnmadd.s f3, f26, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x6d2a1fb9 # load x3 with value 0x6d2a1fb9
sw x3, 0(x2) # store 0x6d2a1fb9 in memory
flw f3, 0(x2) # load 0x6d2a1fb9 from memory into f3
fnmadd.s f31, f14, f26, f3, dyn # perform operation
fnmadd.s f31, f14, f26, f3, rdn # perform operation
fnmadd.s f31, f14, f26, f3, rmm # perform operation
fnmadd.s f31, f14, f26, f3, rne # perform operation
fnmadd.s f31, f14, f26, f3, rtz # perform operation
fnmadd.s f31, f14, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x489755ff # load x3 with value 0x489755ff
sw x3, 0(x2) # store 0x489755ff in memory
flw f3, 0(x2) # load 0x489755ff from memory into f3
fnmadd.s f21, f5, f18, f3, dyn # perform operation
fnmadd.s f21, f5, f18, f3, rdn # perform operation
fnmadd.s f21, f5, f18, f3, rmm # perform operation
fnmadd.s f21, f5, f18, f3, rne # perform operation
fnmadd.s f21, f5, f18, f3, rtz # perform operation
fnmadd.s f21, f5, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0x7d4b31ab # load x3 with value 0x7d4b31ab
sw x3, 0(x2) # store 0x7d4b31ab in memory
flw f9, 0(x2) # load 0x7d4b31ab from memory into f9
fnmadd.s f2, f29, f24, f9, dyn # perform operation
fnmadd.s f2, f29, f24, f9, rdn # perform operation
fnmadd.s f2, f29, f24, f9, rmm # perform operation
fnmadd.s f2, f29, f24, f9, rne # perform operation
fnmadd.s f2, f29, f24, f9, rtz # perform operation
fnmadd.s f2, f29, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x076ded95 # load x3 with value 0x076ded95
sw x3, 0(x2) # store 0x076ded95 in memory
flw f5, 0(x2) # load 0x076ded95 from memory into f5
fnmadd.s f17, f8, f9, f5, dyn # perform operation
fnmadd.s f17, f8, f9, f5, rdn # perform operation
fnmadd.s f17, f8, f9, f5, rmm # perform operation
fnmadd.s f17, f8, f9, f5, rne # perform operation
fnmadd.s f17, f8, f9, f5, rtz # perform operation
fnmadd.s f17, f8, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f9, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0x0ec1479d # load x3 with value 0x0ec1479d
sw x3, 0(x2) # store 0x0ec1479d in memory
flw f10, 0(x2) # load 0x0ec1479d from memory into f10
fnmadd.s f22, f29, f25, f10, dyn # perform operation
fnmadd.s f22, f29, f25, f10, rdn # perform operation
fnmadd.s f22, f29, f25, f10, rmm # perform operation
fnmadd.s f22, f29, f25, f10, rne # perform operation
fnmadd.s f22, f29, f25, f10, rtz # perform operation
fnmadd.s f22, f29, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x2896fae0 # load x3 with value 0x2896fae0
sw x3, 0(x2) # store 0x2896fae0 in memory
flw f3, 0(x2) # load 0x2896fae0 from memory into f3
fnmadd.s f6, f29, f13, f3, dyn # perform operation
fnmadd.s f6, f29, f13, f3, rdn # perform operation
fnmadd.s f6, f29, f13, f3, rmm # perform operation
fnmadd.s f6, f29, f13, f3, rne # perform operation
fnmadd.s f6, f29, f13, f3, rtz # perform operation
fnmadd.s f6, f29, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x5182d46c # load x3 with value 0x5182d46c
sw x3, 0(x2) # store 0x5182d46c in memory
flw f12, 0(x2) # load 0x5182d46c from memory into f12
fnmadd.s f29, f14, f20, f12, dyn # perform operation
fnmadd.s f29, f14, f20, f12, rdn # perform operation
fnmadd.s f29, f14, f20, f12, rmm # perform operation
fnmadd.s f29, f14, f20, f12, rne # perform operation
fnmadd.s f29, f14, f20, f12, rtz # perform operation
fnmadd.s f29, f14, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x9faa466e # load x3 with value 0x9faa466e
sw x3, 0(x2) # store 0x9faa466e in memory
flw f25, 0(x2) # load 0x9faa466e from memory into f25
fnmadd.s f3, f7, f31, f25, dyn # perform operation
fnmadd.s f3, f7, f31, f25, rdn # perform operation
fnmadd.s f3, f7, f31, f25, rmm # perform operation
fnmadd.s f3, f7, f31, f25, rne # perform operation
fnmadd.s f3, f7, f31, f25, rtz # perform operation
fnmadd.s f3, f7, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f7, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f7, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f7, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f7, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f7, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xd207abf2 # load x3 with value 0xd207abf2
sw x3, 0(x2) # store 0xd207abf2 in memory
flw f16, 0(x2) # load 0xd207abf2 from memory into f16
fnmadd.s f26, f29, f7, f16, dyn # perform operation
fnmadd.s f26, f29, f7, f16, rdn # perform operation
fnmadd.s f26, f29, f7, f16, rmm # perform operation
fnmadd.s f26, f29, f7, f16, rne # perform operation
fnmadd.s f26, f29, f7, f16, rtz # perform operation
fnmadd.s f26, f29, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f7, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x1c9a34b8 # load x3 with value 0x1c9a34b8
sw x3, 0(x2) # store 0x1c9a34b8 in memory
flw f15, 0(x2) # load 0x1c9a34b8 from memory into f15
fnmadd.s f2, f1, f24, f15, dyn # perform operation
fnmadd.s f2, f1, f24, f15, rdn # perform operation
fnmadd.s f2, f1, f24, f15, rmm # perform operation
fnmadd.s f2, f1, f24, f15, rne # perform operation
fnmadd.s f2, f1, f24, f15, rtz # perform operation
fnmadd.s f2, f1, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f1, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f1, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f1, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f1, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f1, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xd3ead5de # load x3 with value 0xd3ead5de
sw x3, 0(x2) # store 0xd3ead5de in memory
flw f25, 0(x2) # load 0xd3ead5de from memory into f25
fnmadd.s f7, f10, f3, f25, dyn # perform operation
fnmadd.s f7, f10, f3, f25, rdn # perform operation
fnmadd.s f7, f10, f3, f25, rmm # perform operation
fnmadd.s f7, f10, f3, f25, rne # perform operation
fnmadd.s f7, f10, f3, f25, rtz # perform operation
fnmadd.s f7, f10, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f10, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0x2d731b77 # load x3 with value 0x2d731b77
sw x3, 0(x2) # store 0x2d731b77 in memory
flw f9, 0(x2) # load 0x2d731b77 from memory into f9
fnmadd.s f2, f19, f7, f9, dyn # perform operation
fnmadd.s f2, f19, f7, f9, rdn # perform operation
fnmadd.s f2, f19, f7, f9, rmm # perform operation
fnmadd.s f2, f19, f7, f9, rne # perform operation
fnmadd.s f2, f19, f7, f9, rtz # perform operation
fnmadd.s f2, f19, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f19, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f19, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
la x2, scratch
li x3, 0x163161d0 # load x3 with value 0x163161d0
sw x3, 0(x2) # store 0x163161d0 in memory
flw f9, 0(x2) # load 0x163161d0 from memory into f9
fnmadd.s f29, f30, f27, f9, dyn # perform operation
fnmadd.s f29, f30, f27, f9, rdn # perform operation
fnmadd.s f29, f30, f27, f9, rmm # perform operation
fnmadd.s f29, f30, f27, f9, rne # perform operation
fnmadd.s f29, f30, f27, f9, rtz # perform operation
fnmadd.s f29, f30, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x254f4a1c # load x3 with value 0x254f4a1c
sw x3, 0(x2) # store 0x254f4a1c in memory
flw f8, 0(x2) # load 0x254f4a1c from memory into f8
fnmadd.s f29, f3, f2, f8, dyn # perform operation
fnmadd.s f29, f3, f2, f8, rdn # perform operation
fnmadd.s f29, f3, f2, f8, rmm # perform operation
fnmadd.s f29, f3, f2, f8, rne # perform operation
fnmadd.s f29, f3, f2, f8, rtz # perform operation
fnmadd.s f29, f3, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xd8aad440 # load x3 with value 0xd8aad440
sw x3, 0(x2) # store 0xd8aad440 in memory
flw f11, 0(x2) # load 0xd8aad440 from memory into f11
fnmadd.s f30, f23, f8, f11, dyn # perform operation
fnmadd.s f30, f23, f8, f11, rdn # perform operation
fnmadd.s f30, f23, f8, f11, rmm # perform operation
fnmadd.s f30, f23, f8, f11, rne # perform operation
fnmadd.s f30, f23, f8, f11, rtz # perform operation
fnmadd.s f30, f23, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0xacb24eb0 # load x3 with value 0xacb24eb0
sw x3, 0(x2) # store 0xacb24eb0 in memory
flw f12, 0(x2) # load 0xacb24eb0 from memory into f12
fnmadd.s f9, f14, f1, f12, dyn # perform operation
fnmadd.s f9, f14, f1, f12, rdn # perform operation
fnmadd.s f9, f14, f1, f12, rmm # perform operation
fnmadd.s f9, f14, f1, f12, rne # perform operation
fnmadd.s f9, f14, f1, f12, rtz # perform operation
fnmadd.s f9, f14, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f14, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f14, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f14, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f14, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f14, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xe4baae15 # load x3 with value 0xe4baae15
sw x3, 0(x2) # store 0xe4baae15 in memory
flw f11, 0(x2) # load 0xe4baae15 from memory into f11
fnmadd.s f9, f23, f1, f11, dyn # perform operation
fnmadd.s f9, f23, f1, f11, rdn # perform operation
fnmadd.s f9, f23, f1, f11, rmm # perform operation
fnmadd.s f9, f23, f1, f11, rne # perform operation
fnmadd.s f9, f23, f1, f11, rtz # perform operation
fnmadd.s f9, f23, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f23, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x5eb99574 # load x3 with value 0x5eb99574
sw x3, 0(x2) # store 0x5eb99574 in memory
flw f6, 0(x2) # load 0x5eb99574 from memory into f6
fnmadd.s f25, f9, f17, f6, dyn # perform operation
fnmadd.s f25, f9, f17, f6, rdn # perform operation
fnmadd.s f25, f9, f17, f6, rmm # perform operation
fnmadd.s f25, f9, f17, f6, rne # perform operation
fnmadd.s f25, f9, f17, f6, rtz # perform operation
fnmadd.s f25, f9, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xd2259355 # load x3 with value 0xd2259355
sw x3, 0(x2) # store 0xd2259355 in memory
flw f6, 0(x2) # load 0xd2259355 from memory into f6
fnmadd.s f16, f1, f9, f6, dyn # perform operation
fnmadd.s f16, f1, f9, f6, rdn # perform operation
fnmadd.s f16, f1, f9, f6, rmm # perform operation
fnmadd.s f16, f1, f9, f6, rne # perform operation
fnmadd.s f16, f1, f9, f6, rtz # perform operation
fnmadd.s f16, f1, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f9, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x4b7e2c5b # load x3 with value 0x4b7e2c5b
sw x3, 0(x2) # store 0x4b7e2c5b in memory
flw f11, 0(x2) # load 0x4b7e2c5b from memory into f11
fnmadd.s f18, f19, f8, f11, dyn # perform operation
fnmadd.s f18, f19, f8, f11, rdn # perform operation
fnmadd.s f18, f19, f8, f11, rmm # perform operation
fnmadd.s f18, f19, f8, f11, rne # perform operation
fnmadd.s f18, f19, f8, f11, rtz # perform operation
fnmadd.s f18, f19, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f19, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xfeb1798d # load x3 with value 0xfeb1798d
sw x3, 0(x2) # store 0xfeb1798d in memory
flw f2, 0(x2) # load 0xfeb1798d from memory into f2
fnmadd.s f23, f7, f17, f2, dyn # perform operation
fnmadd.s f23, f7, f17, f2, rdn # perform operation
fnmadd.s f23, f7, f17, f2, rmm # perform operation
fnmadd.s f23, f7, f17, f2, rne # perform operation
fnmadd.s f23, f7, f17, f2, rtz # perform operation
fnmadd.s f23, f7, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x0ae5b26f # load x3 with value 0x0ae5b26f
sw x3, 0(x2) # store 0x0ae5b26f in memory
flw f27, 0(x2) # load 0x0ae5b26f from memory into f27
fnmadd.s f12, f31, f20, f27, dyn # perform operation
fnmadd.s f12, f31, f20, f27, rdn # perform operation
fnmadd.s f12, f31, f20, f27, rmm # perform operation
fnmadd.s f12, f31, f20, f27, rne # perform operation
fnmadd.s f12, f31, f20, f27, rtz # perform operation
fnmadd.s f12, f31, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f31, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f31, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f31, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f31, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f31, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x15fd8dac # load x3 with value 0x15fd8dac
sw x3, 0(x2) # store 0x15fd8dac in memory
flw f12, 0(x2) # load 0x15fd8dac from memory into f12
fnmadd.s f27, f13, f18, f12, dyn # perform operation
fnmadd.s f27, f13, f18, f12, rdn # perform operation
fnmadd.s f27, f13, f18, f12, rmm # perform operation
fnmadd.s f27, f13, f18, f12, rne # perform operation
fnmadd.s f27, f13, f18, f12, rtz # perform operation
fnmadd.s f27, f13, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x1ff3d27c # load x3 with value 0x1ff3d27c
sw x3, 0(x2) # store 0x1ff3d27c in memory
flw f14, 0(x2) # load 0x1ff3d27c from memory into f14
fnmadd.s f7, f1, f5, f14, dyn # perform operation
fnmadd.s f7, f1, f5, f14, rdn # perform operation
fnmadd.s f7, f1, f5, f14, rmm # perform operation
fnmadd.s f7, f1, f5, f14, rne # perform operation
fnmadd.s f7, f1, f5, f14, rtz # perform operation
fnmadd.s f7, f1, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f1, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f1, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x9d7e7e83 # load x3 with value 0x9d7e7e83
sw x3, 0(x2) # store 0x9d7e7e83 in memory
flw f13, 0(x2) # load 0x9d7e7e83 from memory into f13
fnmadd.s f5, f17, f3, f13, dyn # perform operation
fnmadd.s f5, f17, f3, f13, rdn # perform operation
fnmadd.s f5, f17, f3, f13, rmm # perform operation
fnmadd.s f5, f17, f3, f13, rne # perform operation
fnmadd.s f5, f17, f3, f13, rtz # perform operation
fnmadd.s f5, f17, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f3, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0xb7f7b875 # load x3 with value 0xb7f7b875
sw x3, 0(x2) # store 0xb7f7b875 in memory
flw f6, 0(x2) # load 0xb7f7b875 from memory into f6
fnmadd.s f5, f3, f14, f6, dyn # perform operation
fnmadd.s f5, f3, f14, f6, rdn # perform operation
fnmadd.s f5, f3, f14, f6, rmm # perform operation
fnmadd.s f5, f3, f14, f6, rne # perform operation
fnmadd.s f5, f3, f14, f6, rtz # perform operation
fnmadd.s f5, f3, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0xdf895402 # load x3 with value 0xdf895402
sw x3, 0(x2) # store 0xdf895402 in memory
flw f13, 0(x2) # load 0xdf895402 from memory into f13
fnmadd.s f27, f18, f5, f13, dyn # perform operation
fnmadd.s f27, f18, f5, f13, rdn # perform operation
fnmadd.s f27, f18, f5, f13, rmm # perform operation
fnmadd.s f27, f18, f5, f13, rne # perform operation
fnmadd.s f27, f18, f5, f13, rtz # perform operation
fnmadd.s f27, f18, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x431f8d72 # load x3 with value 0x431f8d72
sw x3, 0(x2) # store 0x431f8d72 in memory
flw f1, 0(x2) # load 0x431f8d72 from memory into f1
fnmadd.s f6, f29, f2, f1, dyn # perform operation
fnmadd.s f6, f29, f2, f1, rdn # perform operation
fnmadd.s f6, f29, f2, f1, rmm # perform operation
fnmadd.s f6, f29, f2, f1, rne # perform operation
fnmadd.s f6, f29, f2, f1, rtz # perform operation
fnmadd.s f6, f29, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f29, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f29, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f29, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f29, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f29, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xc55a0171 # load x3 with value 0xc55a0171
sw x3, 0(x2) # store 0xc55a0171 in memory
flw f24, 0(x2) # load 0xc55a0171 from memory into f24
fnmadd.s f1, f30, f20, f24, dyn # perform operation
fnmadd.s f1, f30, f20, f24, rdn # perform operation
fnmadd.s f1, f30, f20, f24, rmm # perform operation
fnmadd.s f1, f30, f20, f24, rne # perform operation
fnmadd.s f1, f30, f20, f24, rtz # perform operation
fnmadd.s f1, f30, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f30, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f30, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x0d4f1212 # load x3 with value 0x0d4f1212
sw x3, 0(x2) # store 0x0d4f1212 in memory
flw f9, 0(x2) # load 0x0d4f1212 from memory into f9
fnmadd.s f8, f29, f1, f9, dyn # perform operation
fnmadd.s f8, f29, f1, f9, rdn # perform operation
fnmadd.s f8, f29, f1, f9, rmm # perform operation
fnmadd.s f8, f29, f1, f9, rne # perform operation
fnmadd.s f8, f29, f1, f9, rtz # perform operation
fnmadd.s f8, f29, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x4bfbc310 # load x3 with value 0x4bfbc310
sw x3, 0(x2) # store 0x4bfbc310 in memory
flw f6, 0(x2) # load 0x4bfbc310 from memory into f6
fnmadd.s f30, f24, f31, f6, dyn # perform operation
fnmadd.s f30, f24, f31, f6, rdn # perform operation
fnmadd.s f30, f24, f31, f6, rmm # perform operation
fnmadd.s f30, f24, f31, f6, rne # perform operation
fnmadd.s f30, f24, f31, f6, rtz # perform operation
fnmadd.s f30, f24, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f24, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f24, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xb95d1003 # load x3 with value 0xb95d1003
sw x3, 0(x2) # store 0xb95d1003 in memory
flw f20, 0(x2) # load 0xb95d1003 from memory into f20
fnmadd.s f13, f26, f7, f20, dyn # perform operation
fnmadd.s f13, f26, f7, f20, rdn # perform operation
fnmadd.s f13, f26, f7, f20, rmm # perform operation
fnmadd.s f13, f26, f7, f20, rne # perform operation
fnmadd.s f13, f26, f7, f20, rtz # perform operation
fnmadd.s f13, f26, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xc9fa89aa # load x3 with value 0xc9fa89aa
sw x3, 0(x2) # store 0xc9fa89aa in memory
flw f26, 0(x2) # load 0xc9fa89aa from memory into f26
fnmadd.s f11, f27, f17, f26, dyn # perform operation
fnmadd.s f11, f27, f17, f26, rdn # perform operation
fnmadd.s f11, f27, f17, f26, rmm # perform operation
fnmadd.s f11, f27, f17, f26, rne # perform operation
fnmadd.s f11, f27, f17, f26, rtz # perform operation
fnmadd.s f11, f27, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f27, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f27, f17, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xe084901b # load x3 with value 0xe084901b
sw x3, 0(x2) # store 0xe084901b in memory
flw f9, 0(x2) # load 0xe084901b from memory into f9
fnmadd.s f19, f18, f24, f9, dyn # perform operation
fnmadd.s f19, f18, f24, f9, rdn # perform operation
fnmadd.s f19, f18, f24, f9, rmm # perform operation
fnmadd.s f19, f18, f24, f9, rne # perform operation
fnmadd.s f19, f18, f24, f9, rtz # perform operation
fnmadd.s f19, f18, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x943f875c # load x3 with value 0x943f875c
sw x3, 0(x2) # store 0x943f875c in memory
flw f3, 0(x2) # load 0x943f875c from memory into f3
fnmadd.s f16, f23, f26, f3, dyn # perform operation
fnmadd.s f16, f23, f26, f3, rdn # perform operation
fnmadd.s f16, f23, f26, f3, rmm # perform operation
fnmadd.s f16, f23, f26, f3, rne # perform operation
fnmadd.s f16, f23, f26, f3, rtz # perform operation
fnmadd.s f16, f23, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x20c33e5b # load x3 with value 0x20c33e5b
sw x3, 0(x2) # store 0x20c33e5b in memory
flw f30, 0(x2) # load 0x20c33e5b from memory into f30
fnmadd.s f3, f10, f6, f30, dyn # perform operation
fnmadd.s f3, f10, f6, f30, rdn # perform operation
fnmadd.s f3, f10, f6, f30, rmm # perform operation
fnmadd.s f3, f10, f6, f30, rne # perform operation
fnmadd.s f3, f10, f6, f30, rtz # perform operation
fnmadd.s f3, f10, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f10, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f10, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f10, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f10, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f10, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x5c739343 # load x3 with value 0x5c739343
sw x3, 0(x2) # store 0x5c739343 in memory
flw f8, 0(x2) # load 0x5c739343 from memory into f8
fnmadd.s f10, f25, f9, f8, dyn # perform operation
fnmadd.s f10, f25, f9, f8, rdn # perform operation
fnmadd.s f10, f25, f9, f8, rmm # perform operation
fnmadd.s f10, f25, f9, f8, rne # perform operation
fnmadd.s f10, f25, f9, f8, rtz # perform operation
fnmadd.s f10, f25, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x0ac84fa2 # load x3 with value 0x0ac84fa2
sw x3, 0(x2) # store 0x0ac84fa2 in memory
flw f25, 0(x2) # load 0x0ac84fa2 from memory into f25
fnmadd.s f6, f15, f7, f25, dyn # perform operation
fnmadd.s f6, f15, f7, f25, rdn # perform operation
fnmadd.s f6, f15, f7, f25, rmm # perform operation
fnmadd.s f6, f15, f7, f25, rne # perform operation
fnmadd.s f6, f15, f7, f25, rtz # perform operation
fnmadd.s f6, f15, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xa02680ed # load x3 with value 0xa02680ed
sw x3, 0(x2) # store 0xa02680ed in memory
flw f9, 0(x2) # load 0xa02680ed from memory into f9
fnmadd.s f26, f6, f18, f9, dyn # perform operation
fnmadd.s f26, f6, f18, f9, rdn # perform operation
fnmadd.s f26, f6, f18, f9, rmm # perform operation
fnmadd.s f26, f6, f18, f9, rne # perform operation
fnmadd.s f26, f6, f18, f9, rtz # perform operation
fnmadd.s f26, f6, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x1db6c158 # load x3 with value 0x1db6c158
sw x3, 0(x2) # store 0x1db6c158 in memory
flw f11, 0(x2) # load 0x1db6c158 from memory into f11
fnmadd.s f6, f16, f23, f11, dyn # perform operation
fnmadd.s f6, f16, f23, f11, rdn # perform operation
fnmadd.s f6, f16, f23, f11, rmm # perform operation
fnmadd.s f6, f16, f23, f11, rne # perform operation
fnmadd.s f6, f16, f23, f11, rtz # perform operation
fnmadd.s f6, f16, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xfe13b12d # load x3 with value 0xfe13b12d
sw x3, 0(x2) # store 0xfe13b12d in memory
flw f2, 0(x2) # load 0xfe13b12d from memory into f2
fnmadd.s f10, f22, f1, f2, dyn # perform operation
fnmadd.s f10, f22, f1, f2, rdn # perform operation
fnmadd.s f10, f22, f1, f2, rmm # perform operation
fnmadd.s f10, f22, f1, f2, rne # perform operation
fnmadd.s f10, f22, f1, f2, rtz # perform operation
fnmadd.s f10, f22, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xf1c702a7 # load x3 with value 0xf1c702a7
sw x3, 0(x2) # store 0xf1c702a7 in memory
flw f19, 0(x2) # load 0xf1c702a7 from memory into f19
fnmadd.s f6, f9, f7, f19, dyn # perform operation
fnmadd.s f6, f9, f7, f19, rdn # perform operation
fnmadd.s f6, f9, f7, f19, rmm # perform operation
fnmadd.s f6, f9, f7, f19, rne # perform operation
fnmadd.s f6, f9, f7, f19, rtz # perform operation
fnmadd.s f6, f9, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f9, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xa5b97c44 # load x3 with value 0xa5b97c44
sw x3, 0(x2) # store 0xa5b97c44 in memory
flw f17, 0(x2) # load 0xa5b97c44 from memory into f17
fnmadd.s f14, f19, f23, f17, dyn # perform operation
fnmadd.s f14, f19, f23, f17, rdn # perform operation
fnmadd.s f14, f19, f23, f17, rmm # perform operation
fnmadd.s f14, f19, f23, f17, rne # perform operation
fnmadd.s f14, f19, f23, f17, rtz # perform operation
fnmadd.s f14, f19, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0xfb814a6e # load x3 with value 0xfb814a6e
sw x3, 0(x2) # store 0xfb814a6e in memory
flw f10, 0(x2) # load 0xfb814a6e from memory into f10
fnmadd.s f7, f8, f5, f10, dyn # perform operation
fnmadd.s f7, f8, f5, f10, rdn # perform operation
fnmadd.s f7, f8, f5, f10, rmm # perform operation
fnmadd.s f7, f8, f5, f10, rne # perform operation
fnmadd.s f7, f8, f5, f10, rtz # perform operation
fnmadd.s f7, f8, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f8, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f8, f5, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x39e501e5 # load x3 with value 0x39e501e5
sw x3, 0(x2) # store 0x39e501e5 in memory
flw f30, 0(x2) # load 0x39e501e5 from memory into f30
fnmadd.s f22, f25, f2, f30, dyn # perform operation
fnmadd.s f22, f25, f2, f30, rdn # perform operation
fnmadd.s f22, f25, f2, f30, rmm # perform operation
fnmadd.s f22, f25, f2, f30, rne # perform operation
fnmadd.s f22, f25, f2, f30, rtz # perform operation
fnmadd.s f22, f25, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x0d36b3f8 # load x3 with value 0x0d36b3f8
sw x3, 0(x2) # store 0x0d36b3f8 in memory
flw f25, 0(x2) # load 0x0d36b3f8 from memory into f25
fnmadd.s f5, f31, f15, f25, dyn # perform operation
fnmadd.s f5, f31, f15, f25, rdn # perform operation
fnmadd.s f5, f31, f15, f25, rmm # perform operation
fnmadd.s f5, f31, f15, f25, rne # perform operation
fnmadd.s f5, f31, f15, f25, rtz # perform operation
fnmadd.s f5, f31, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xcd7c1d0b # load x3 with value 0xcd7c1d0b
sw x3, 0(x2) # store 0xcd7c1d0b in memory
flw f16, 0(x2) # load 0xcd7c1d0b from memory into f16
fnmadd.s f12, f8, f18, f16, dyn # perform operation
fnmadd.s f12, f8, f18, f16, rdn # perform operation
fnmadd.s f12, f8, f18, f16, rmm # perform operation
fnmadd.s f12, f8, f18, f16, rne # perform operation
fnmadd.s f12, f8, f18, f16, rtz # perform operation
fnmadd.s f12, f8, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x0188c194 # load x3 with value 0x0188c194
sw x3, 0(x2) # store 0x0188c194 in memory
flw f21, 0(x2) # load 0x0188c194 from memory into f21
fnmadd.s f18, f28, f27, f21, dyn # perform operation
fnmadd.s f18, f28, f27, f21, rdn # perform operation
fnmadd.s f18, f28, f27, f21, rmm # perform operation
fnmadd.s f18, f28, f27, f21, rne # perform operation
fnmadd.s f18, f28, f27, f21, rtz # perform operation
fnmadd.s f18, f28, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f27, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x93c6ee0b # load x3 with value 0x93c6ee0b
sw x3, 0(x2) # store 0x93c6ee0b in memory
flw f17, 0(x2) # load 0x93c6ee0b from memory into f17
fnmadd.s f11, f21, f20, f17, dyn # perform operation
fnmadd.s f11, f21, f20, f17, rdn # perform operation
fnmadd.s f11, f21, f20, f17, rmm # perform operation
fnmadd.s f11, f21, f20, f17, rne # perform operation
fnmadd.s f11, f21, f20, f17, rtz # perform operation
fnmadd.s f11, f21, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f21, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f21, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x7b825ce6 # load x3 with value 0x7b825ce6
sw x3, 0(x2) # store 0x7b825ce6 in memory
flw f15, 0(x2) # load 0x7b825ce6 from memory into f15
fnmadd.s f11, f29, f7, f15, dyn # perform operation
fnmadd.s f11, f29, f7, f15, rdn # perform operation
fnmadd.s f11, f29, f7, f15, rmm # perform operation
fnmadd.s f11, f29, f7, f15, rne # perform operation
fnmadd.s f11, f29, f7, f15, rtz # perform operation
fnmadd.s f11, f29, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xc1298056 # load x3 with value 0xc1298056
sw x3, 0(x2) # store 0xc1298056 in memory
flw f8, 0(x2) # load 0xc1298056 from memory into f8
fnmadd.s f10, f30, f13, f8, dyn # perform operation
fnmadd.s f10, f30, f13, f8, rdn # perform operation
fnmadd.s f10, f30, f13, f8, rmm # perform operation
fnmadd.s f10, f30, f13, f8, rne # perform operation
fnmadd.s f10, f30, f13, f8, rtz # perform operation
fnmadd.s f10, f30, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f30, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f30, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f30, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f30, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f30, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x06f71e29 # load x3 with value 0x06f71e29
sw x3, 0(x2) # store 0x06f71e29 in memory
flw f19, 0(x2) # load 0x06f71e29 from memory into f19
fnmadd.s f13, f17, f26, f19, dyn # perform operation
fnmadd.s f13, f17, f26, f19, rdn # perform operation
fnmadd.s f13, f17, f26, f19, rmm # perform operation
fnmadd.s f13, f17, f26, f19, rne # perform operation
fnmadd.s f13, f17, f26, f19, rtz # perform operation
fnmadd.s f13, f17, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x7bfb31c2 # load x3 with value 0x7bfb31c2
sw x3, 0(x2) # store 0x7bfb31c2 in memory
flw f21, 0(x2) # load 0x7bfb31c2 from memory into f21
fnmadd.s f12, f6, f10, f21, dyn # perform operation
fnmadd.s f12, f6, f10, f21, rdn # perform operation
fnmadd.s f12, f6, f10, f21, rmm # perform operation
fnmadd.s f12, f6, f10, f21, rne # perform operation
fnmadd.s f12, f6, f10, f21, rtz # perform operation
fnmadd.s f12, f6, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f6, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f6, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x4305985b # load x3 with value 0x4305985b
sw x3, 0(x2) # store 0x4305985b in memory
flw f14, 0(x2) # load 0x4305985b from memory into f14
fnmadd.s f23, f9, f2, f14, dyn # perform operation
fnmadd.s f23, f9, f2, f14, rdn # perform operation
fnmadd.s f23, f9, f2, f14, rmm # perform operation
fnmadd.s f23, f9, f2, f14, rne # perform operation
fnmadd.s f23, f9, f2, f14, rtz # perform operation
fnmadd.s f23, f9, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f2, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0xd970b974 # load x3 with value 0xd970b974
sw x3, 0(x2) # store 0xd970b974 in memory
flw f15, 0(x2) # load 0xd970b974 from memory into f15
fnmadd.s f23, f14, f9, f15, dyn # perform operation
fnmadd.s f23, f14, f9, f15, rdn # perform operation
fnmadd.s f23, f14, f9, f15, rmm # perform operation
fnmadd.s f23, f14, f9, f15, rne # perform operation
fnmadd.s f23, f14, f9, f15, rtz # perform operation
fnmadd.s f23, f14, f9, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f9, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f9, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f9, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f9, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f9, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xe981bcef # load x3 with value 0xe981bcef
sw x3, 0(x2) # store 0xe981bcef in memory
flw f13, 0(x2) # load 0xe981bcef from memory into f13
fnmadd.s f30, f15, f27, f13, dyn # perform operation
fnmadd.s f30, f15, f27, f13, rdn # perform operation
fnmadd.s f30, f15, f27, f13, rmm # perform operation
fnmadd.s f30, f15, f27, f13, rne # perform operation
fnmadd.s f30, f15, f27, f13, rtz # perform operation
fnmadd.s f30, f15, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x3d4911ef # load x3 with value 0x3d4911ef
sw x3, 0(x2) # store 0x3d4911ef in memory
flw f23, 0(x2) # load 0x3d4911ef from memory into f23
fnmadd.s f12, f11, f27, f23, dyn # perform operation
fnmadd.s f12, f11, f27, f23, rdn # perform operation
fnmadd.s f12, f11, f27, f23, rmm # perform operation
fnmadd.s f12, f11, f27, f23, rne # perform operation
fnmadd.s f12, f11, f27, f23, rtz # perform operation
fnmadd.s f12, f11, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f11, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f11, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f11, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f11, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f11, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xcf83968a # load x3 with value 0xcf83968a
sw x3, 0(x2) # store 0xcf83968a in memory
flw f11, 0(x2) # load 0xcf83968a from memory into f11
fnmadd.s f18, f24, f25, f11, dyn # perform operation
fnmadd.s f18, f24, f25, f11, rdn # perform operation
fnmadd.s f18, f24, f25, f11, rmm # perform operation
fnmadd.s f18, f24, f25, f11, rne # perform operation
fnmadd.s f18, f24, f25, f11, rtz # perform operation
fnmadd.s f18, f24, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f24, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f24, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x71ce13e2 # load x3 with value 0x71ce13e2
sw x3, 0(x2) # store 0x71ce13e2 in memory
flw f23, 0(x2) # load 0x71ce13e2 from memory into f23
fnmadd.s f24, f13, f20, f23, dyn # perform operation
fnmadd.s f24, f13, f20, f23, rdn # perform operation
fnmadd.s f24, f13, f20, f23, rmm # perform operation
fnmadd.s f24, f13, f20, f23, rne # perform operation
fnmadd.s f24, f13, f20, f23, rtz # perform operation
fnmadd.s f24, f13, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f13, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f13, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x1ed10ab4 # load x3 with value 0x1ed10ab4
sw x3, 0(x2) # store 0x1ed10ab4 in memory
flw f8, 0(x2) # load 0x1ed10ab4 from memory into f8
fnmadd.s f1, f25, f6, f8, dyn # perform operation
fnmadd.s f1, f25, f6, f8, rdn # perform operation
fnmadd.s f1, f25, f6, f8, rmm # perform operation
fnmadd.s f1, f25, f6, f8, rne # perform operation
fnmadd.s f1, f25, f6, f8, rtz # perform operation
fnmadd.s f1, f25, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f25, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f25, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f25, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f25, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f25, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x0af231ba # load x3 with value 0x0af231ba
sw x3, 0(x2) # store 0x0af231ba in memory
flw f17, 0(x2) # load 0x0af231ba from memory into f17
fnmadd.s f25, f3, f30, f17, dyn # perform operation
fnmadd.s f25, f3, f30, f17, rdn # perform operation
fnmadd.s f25, f3, f30, f17, rmm # perform operation
fnmadd.s f25, f3, f30, f17, rne # perform operation
fnmadd.s f25, f3, f30, f17, rtz # perform operation
fnmadd.s f25, f3, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f3, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f3, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x98026b1c # load x3 with value 0x98026b1c
sw x3, 0(x2) # store 0x98026b1c in memory
flw f8, 0(x2) # load 0x98026b1c from memory into f8
fnmadd.s f20, f5, f6, f8, dyn # perform operation
fnmadd.s f20, f5, f6, f8, rdn # perform operation
fnmadd.s f20, f5, f6, f8, rmm # perform operation
fnmadd.s f20, f5, f6, f8, rne # perform operation
fnmadd.s f20, f5, f6, f8, rtz # perform operation
fnmadd.s f20, f5, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x45fc191d # load x3 with value 0x45fc191d
sw x3, 0(x2) # store 0x45fc191d in memory
flw f11, 0(x2) # load 0x45fc191d from memory into f11
fnmadd.s f3, f23, f14, f11, dyn # perform operation
fnmadd.s f3, f23, f14, f11, rdn # perform operation
fnmadd.s f3, f23, f14, f11, rmm # perform operation
fnmadd.s f3, f23, f14, f11, rne # perform operation
fnmadd.s f3, f23, f14, f11, rtz # perform operation
fnmadd.s f3, f23, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x5f5334be # load x3 with value 0x5f5334be
sw x3, 0(x2) # store 0x5f5334be in memory
flw f27, 0(x2) # load 0x5f5334be from memory into f27
fnmadd.s f1, f15, f17, f27, dyn # perform operation
fnmadd.s f1, f15, f17, f27, rdn # perform operation
fnmadd.s f1, f15, f17, f27, rmm # perform operation
fnmadd.s f1, f15, f17, f27, rne # perform operation
fnmadd.s f1, f15, f17, f27, rtz # perform operation
fnmadd.s f1, f15, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f17, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xf96f050e # load x3 with value 0xf96f050e
sw x3, 0(x2) # store 0xf96f050e in memory
flw f1, 0(x2) # load 0xf96f050e from memory into f1
fnmadd.s f5, f31, f12, f1, dyn # perform operation
fnmadd.s f5, f31, f12, f1, rdn # perform operation
fnmadd.s f5, f31, f12, f1, rmm # perform operation
fnmadd.s f5, f31, f12, f1, rne # perform operation
fnmadd.s f5, f31, f12, f1, rtz # perform operation
fnmadd.s f5, f31, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x046156b1 # load x3 with value 0x046156b1
sw x3, 0(x2) # store 0x046156b1 in memory
flw f1, 0(x2) # load 0x046156b1 from memory into f1
fnmadd.s f26, f24, f27, f1, dyn # perform operation
fnmadd.s f26, f24, f27, f1, rdn # perform operation
fnmadd.s f26, f24, f27, f1, rmm # perform operation
fnmadd.s f26, f24, f27, f1, rne # perform operation
fnmadd.s f26, f24, f27, f1, rtz # perform operation
fnmadd.s f26, f24, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f24, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f24, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0xb8cb62dd # load x3 with value 0xb8cb62dd
sw x3, 0(x2) # store 0xb8cb62dd in memory
flw f20, 0(x2) # load 0xb8cb62dd from memory into f20
fnmadd.s f23, f17, f12, f20, dyn # perform operation
fnmadd.s f23, f17, f12, f20, rdn # perform operation
fnmadd.s f23, f17, f12, f20, rmm # perform operation
fnmadd.s f23, f17, f12, f20, rne # perform operation
fnmadd.s f23, f17, f12, f20, rtz # perform operation
fnmadd.s f23, f17, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xb489bb39 # load x3 with value 0xb489bb39
sw x3, 0(x2) # store 0xb489bb39 in memory
flw f5, 0(x2) # load 0xb489bb39 from memory into f5
fnmadd.s f14, f11, f15, f5, dyn # perform operation
fnmadd.s f14, f11, f15, f5, rdn # perform operation
fnmadd.s f14, f11, f15, f5, rmm # perform operation
fnmadd.s f14, f11, f15, f5, rne # perform operation
fnmadd.s f14, f11, f15, f5, rtz # perform operation
fnmadd.s f14, f11, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f11, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f11, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f11, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f11, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f11, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xdc11e9eb # load x3 with value 0xdc11e9eb
sw x3, 0(x2) # store 0xdc11e9eb in memory
flw f29, 0(x2) # load 0xdc11e9eb from memory into f29
fnmadd.s f23, f14, f3, f29, dyn # perform operation
fnmadd.s f23, f14, f3, f29, rdn # perform operation
fnmadd.s f23, f14, f3, f29, rmm # perform operation
fnmadd.s f23, f14, f3, f29, rne # perform operation
fnmadd.s f23, f14, f3, f29, rtz # perform operation
fnmadd.s f23, f14, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x5b93ba3d # load x3 with value 0x5b93ba3d
sw x3, 0(x2) # store 0x5b93ba3d in memory
flw f10, 0(x2) # load 0x5b93ba3d from memory into f10
fnmadd.s f5, f17, f21, f10, dyn # perform operation
fnmadd.s f5, f17, f21, f10, rdn # perform operation
fnmadd.s f5, f17, f21, f10, rmm # perform operation
fnmadd.s f5, f17, f21, f10, rne # perform operation
fnmadd.s f5, f17, f21, f10, rtz # perform operation
fnmadd.s f5, f17, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x9db0e09f # load x3 with value 0x9db0e09f
sw x3, 0(x2) # store 0x9db0e09f in memory
flw f26, 0(x2) # load 0x9db0e09f from memory into f26
fnmadd.s f8, f1, f24, f26, dyn # perform operation
fnmadd.s f8, f1, f24, f26, rdn # perform operation
fnmadd.s f8, f1, f24, f26, rmm # perform operation
fnmadd.s f8, f1, f24, f26, rne # perform operation
fnmadd.s f8, f1, f24, f26, rtz # perform operation
fnmadd.s f8, f1, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f1, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f1, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0xa089f974 # load x3 with value 0xa089f974
sw x3, 0(x2) # store 0xa089f974 in memory
flw f11, 0(x2) # load 0xa089f974 from memory into f11
fnmadd.s f9, f8, f20, f11, dyn # perform operation
fnmadd.s f9, f8, f20, f11, rdn # perform operation
fnmadd.s f9, f8, f20, f11, rmm # perform operation
fnmadd.s f9, f8, f20, f11, rne # perform operation
fnmadd.s f9, f8, f20, f11, rtz # perform operation
fnmadd.s f9, f8, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x19a67eef # load x3 with value 0x19a67eef
sw x3, 0(x2) # store 0x19a67eef in memory
flw f6, 0(x2) # load 0x19a67eef from memory into f6
fnmadd.s f20, f28, f19, f6, dyn # perform operation
fnmadd.s f20, f28, f19, f6, rdn # perform operation
fnmadd.s f20, f28, f19, f6, rmm # perform operation
fnmadd.s f20, f28, f19, f6, rne # perform operation
fnmadd.s f20, f28, f19, f6, rtz # perform operation
fnmadd.s f20, f28, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f28, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f28, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f28, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f28, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f28, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0xaa5594c6 # load x3 with value 0xaa5594c6
sw x3, 0(x2) # store 0xaa5594c6 in memory
flw f11, 0(x2) # load 0xaa5594c6 from memory into f11
fnmadd.s f18, f10, f8, f11, dyn # perform operation
fnmadd.s f18, f10, f8, f11, rdn # perform operation
fnmadd.s f18, f10, f8, f11, rmm # perform operation
fnmadd.s f18, f10, f8, f11, rne # perform operation
fnmadd.s f18, f10, f8, f11, rtz # perform operation
fnmadd.s f18, f10, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f10, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f10, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x51f54347 # load x3 with value 0x51f54347
sw x3, 0(x2) # store 0x51f54347 in memory
flw f30, 0(x2) # load 0x51f54347 from memory into f30
fnmadd.s f27, f7, f24, f30, dyn # perform operation
fnmadd.s f27, f7, f24, f30, rdn # perform operation
fnmadd.s f27, f7, f24, f30, rmm # perform operation
fnmadd.s f27, f7, f24, f30, rne # perform operation
fnmadd.s f27, f7, f24, f30, rtz # perform operation
fnmadd.s f27, f7, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f7, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f7, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xf7040e6b # load x3 with value 0xf7040e6b
sw x3, 0(x2) # store 0xf7040e6b in memory
flw f6, 0(x2) # load 0xf7040e6b from memory into f6
fnmadd.s f28, f3, f12, f6, dyn # perform operation
fnmadd.s f28, f3, f12, f6, rdn # perform operation
fnmadd.s f28, f3, f12, f6, rmm # perform operation
fnmadd.s f28, f3, f12, f6, rne # perform operation
fnmadd.s f28, f3, f12, f6, rtz # perform operation
fnmadd.s f28, f3, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x6822ff5b # load x3 with value 0x6822ff5b
sw x3, 0(x2) # store 0x6822ff5b in memory
flw f10, 0(x2) # load 0x6822ff5b from memory into f10
fnmadd.s f2, f6, f17, f10, dyn # perform operation
fnmadd.s f2, f6, f17, f10, rdn # perform operation
fnmadd.s f2, f6, f17, f10, rmm # perform operation
fnmadd.s f2, f6, f17, f10, rne # perform operation
fnmadd.s f2, f6, f17, f10, rtz # perform operation
fnmadd.s f2, f6, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0xefd326a9 # load x3 with value 0xefd326a9
sw x3, 0(x2) # store 0xefd326a9 in memory
flw f24, 0(x2) # load 0xefd326a9 from memory into f24
fnmadd.s f11, f20, f26, f24, dyn # perform operation
fnmadd.s f11, f20, f26, f24, rdn # perform operation
fnmadd.s f11, f20, f26, f24, rmm # perform operation
fnmadd.s f11, f20, f26, f24, rne # perform operation
fnmadd.s f11, f20, f26, f24, rtz # perform operation
fnmadd.s f11, f20, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f20, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x928d9fe0 # load x3 with value 0x928d9fe0
sw x3, 0(x2) # store 0x928d9fe0 in memory
flw f14, 0(x2) # load 0x928d9fe0 from memory into f14
fnmadd.s f16, f2, f27, f14, dyn # perform operation
fnmadd.s f16, f2, f27, f14, rdn # perform operation
fnmadd.s f16, f2, f27, f14, rmm # perform operation
fnmadd.s f16, f2, f27, f14, rne # perform operation
fnmadd.s f16, f2, f27, f14, rtz # perform operation
fnmadd.s f16, f2, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f2, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f2, f27, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x88c04964 # load x3 with value 0x88c04964
sw x3, 0(x2) # store 0x88c04964 in memory
flw f1, 0(x2) # load 0x88c04964 from memory into f1
fnmadd.s f6, f10, f30, f1, dyn # perform operation
fnmadd.s f6, f10, f30, f1, rdn # perform operation
fnmadd.s f6, f10, f30, f1, rmm # perform operation
fnmadd.s f6, f10, f30, f1, rne # perform operation
fnmadd.s f6, f10, f30, f1, rtz # perform operation
fnmadd.s f6, f10, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0xec748368 # load x3 with value 0xec748368
sw x3, 0(x2) # store 0xec748368 in memory
flw f25, 0(x2) # load 0xec748368 from memory into f25
fnmadd.s f26, f5, f16, f25, dyn # perform operation
fnmadd.s f26, f5, f16, f25, rdn # perform operation
fnmadd.s f26, f5, f16, f25, rmm # perform operation
fnmadd.s f26, f5, f16, f25, rne # perform operation
fnmadd.s f26, f5, f16, f25, rtz # perform operation
fnmadd.s f26, f5, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f5, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f5, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f5, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f5, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f5, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0x09ff9389 # load x3 with value 0x09ff9389
sw x3, 0(x2) # store 0x09ff9389 in memory
flw f7, 0(x2) # load 0x09ff9389 from memory into f7
fnmadd.s f3, f23, f27, f7, dyn # perform operation
fnmadd.s f3, f23, f27, f7, rdn # perform operation
fnmadd.s f3, f23, f27, f7, rmm # perform operation
fnmadd.s f3, f23, f27, f7, rne # perform operation
fnmadd.s f3, f23, f27, f7, rtz # perform operation
fnmadd.s f3, f23, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f23, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f23, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xbc6a83c5 # load x3 with value 0xbc6a83c5
sw x3, 0(x2) # store 0xbc6a83c5 in memory
flw f24, 0(x2) # load 0xbc6a83c5 from memory into f24
fnmadd.s f8, f19, f2, f24, dyn # perform operation
fnmadd.s f8, f19, f2, f24, rdn # perform operation
fnmadd.s f8, f19, f2, f24, rmm # perform operation
fnmadd.s f8, f19, f2, f24, rne # perform operation
fnmadd.s f8, f19, f2, f24, rtz # perform operation
fnmadd.s f8, f19, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f19, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f19, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f19, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f19, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f19, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xf8c38dd4 # load x3 with value 0xf8c38dd4
sw x3, 0(x2) # store 0xf8c38dd4 in memory
flw f2, 0(x2) # load 0xf8c38dd4 from memory into f2
fnmadd.s f28, f10, f1, f2, dyn # perform operation
fnmadd.s f28, f10, f1, f2, rdn # perform operation
fnmadd.s f28, f10, f1, f2, rmm # perform operation
fnmadd.s f28, f10, f1, f2, rne # perform operation
fnmadd.s f28, f10, f1, f2, rtz # perform operation
fnmadd.s f28, f10, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0xf0e78a7c # load x3 with value 0xf0e78a7c
sw x3, 0(x2) # store 0xf0e78a7c in memory
flw f3, 0(x2) # load 0xf0e78a7c from memory into f3
fnmadd.s f26, f19, f29, f3, dyn # perform operation
fnmadd.s f26, f19, f29, f3, rdn # perform operation
fnmadd.s f26, f19, f29, f3, rmm # perform operation
fnmadd.s f26, f19, f29, f3, rne # perform operation
fnmadd.s f26, f19, f29, f3, rtz # perform operation
fnmadd.s f26, f19, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x5de58ce3 # load x3 with value 0x5de58ce3
sw x3, 0(x2) # store 0x5de58ce3 in memory
flw f24, 0(x2) # load 0x5de58ce3 from memory into f24
fnmadd.s f3, f30, f21, f24, dyn # perform operation
fnmadd.s f3, f30, f21, f24, rdn # perform operation
fnmadd.s f3, f30, f21, f24, rmm # perform operation
fnmadd.s f3, f30, f21, f24, rne # perform operation
fnmadd.s f3, f30, f21, f24, rtz # perform operation
fnmadd.s f3, f30, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x0a72dc6e # load x3 with value 0x0a72dc6e
sw x3, 0(x2) # store 0x0a72dc6e in memory
flw f31, 0(x2) # load 0x0a72dc6e from memory into f31
fnmadd.s f14, f16, f10, f31, dyn # perform operation
fnmadd.s f14, f16, f10, f31, rdn # perform operation
fnmadd.s f14, f16, f10, f31, rmm # perform operation
fnmadd.s f14, f16, f10, f31, rne # perform operation
fnmadd.s f14, f16, f10, f31, rtz # perform operation
fnmadd.s f14, f16, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f10, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xea433cfe # load x3 with value 0xea433cfe
sw x3, 0(x2) # store 0xea433cfe in memory
flw f22, 0(x2) # load 0xea433cfe from memory into f22
fnmadd.s f25, f9, f11, f22, dyn # perform operation
fnmadd.s f25, f9, f11, f22, rdn # perform operation
fnmadd.s f25, f9, f11, f22, rmm # perform operation
fnmadd.s f25, f9, f11, f22, rne # perform operation
fnmadd.s f25, f9, f11, f22, rtz # perform operation
fnmadd.s f25, f9, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f11, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xc94d56b3 # load x3 with value 0xc94d56b3
sw x3, 0(x2) # store 0xc94d56b3 in memory
flw f24, 0(x2) # load 0xc94d56b3 from memory into f24
fnmadd.s f21, f29, f20, f24, dyn # perform operation
fnmadd.s f21, f29, f20, f24, rdn # perform operation
fnmadd.s f21, f29, f20, f24, rmm # perform operation
fnmadd.s f21, f29, f20, f24, rne # perform operation
fnmadd.s f21, f29, f20, f24, rtz # perform operation
fnmadd.s f21, f29, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f29, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x76f7068c # load x3 with value 0x76f7068c
sw x3, 0(x2) # store 0x76f7068c in memory
flw f12, 0(x2) # load 0x76f7068c from memory into f12
fnmadd.s f31, f13, f1, f12, dyn # perform operation
fnmadd.s f31, f13, f1, f12, rdn # perform operation
fnmadd.s f31, f13, f1, f12, rmm # perform operation
fnmadd.s f31, f13, f1, f12, rne # perform operation
fnmadd.s f31, f13, f1, f12, rtz # perform operation
fnmadd.s f31, f13, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f13, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f13, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f13, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f13, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f13, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0xfbcdcd77 # load x3 with value 0xfbcdcd77
sw x3, 0(x2) # store 0xfbcdcd77 in memory
flw f17, 0(x2) # load 0xfbcdcd77 from memory into f17
fnmadd.s f27, f10, f8, f17, dyn # perform operation
fnmadd.s f27, f10, f8, f17, rdn # perform operation
fnmadd.s f27, f10, f8, f17, rmm # perform operation
fnmadd.s f27, f10, f8, f17, rne # perform operation
fnmadd.s f27, f10, f8, f17, rtz # perform operation
fnmadd.s f27, f10, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f10, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f10, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x20162aa2 # load x3 with value 0x20162aa2
sw x3, 0(x2) # store 0x20162aa2 in memory
flw f30, 0(x2) # load 0x20162aa2 from memory into f30
fnmadd.s f19, f6, f3, f30, dyn # perform operation
fnmadd.s f19, f6, f3, f30, rdn # perform operation
fnmadd.s f19, f6, f3, f30, rmm # perform operation
fnmadd.s f19, f6, f3, f30, rne # perform operation
fnmadd.s f19, f6, f3, f30, rtz # perform operation
fnmadd.s f19, f6, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f6, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x4bf53a15 # load x3 with value 0x4bf53a15
sw x3, 0(x2) # store 0x4bf53a15 in memory
flw f3, 0(x2) # load 0x4bf53a15 from memory into f3
fnmadd.s f18, f26, f9, f3, dyn # perform operation
fnmadd.s f18, f26, f9, f3, rdn # perform operation
fnmadd.s f18, f26, f9, f3, rmm # perform operation
fnmadd.s f18, f26, f9, f3, rne # perform operation
fnmadd.s f18, f26, f9, f3, rtz # perform operation
fnmadd.s f18, f26, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xcd3d10ee # load x3 with value 0xcd3d10ee
sw x3, 0(x2) # store 0xcd3d10ee in memory
flw f11, 0(x2) # load 0xcd3d10ee from memory into f11
fnmadd.s f22, f26, f13, f11, dyn # perform operation
fnmadd.s f22, f26, f13, f11, rdn # perform operation
fnmadd.s f22, f26, f13, f11, rmm # perform operation
fnmadd.s f22, f26, f13, f11, rne # perform operation
fnmadd.s f22, f26, f13, f11, rtz # perform operation
fnmadd.s f22, f26, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f26, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f26, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f26, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f26, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f26, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xf87e6361 # load x3 with value 0xf87e6361
sw x3, 0(x2) # store 0xf87e6361 in memory
flw f17, 0(x2) # load 0xf87e6361 from memory into f17
fnmadd.s f29, f3, f20, f17, dyn # perform operation
fnmadd.s f29, f3, f20, f17, rdn # perform operation
fnmadd.s f29, f3, f20, f17, rmm # perform operation
fnmadd.s f29, f3, f20, f17, rne # perform operation
fnmadd.s f29, f3, f20, f17, rtz # perform operation
fnmadd.s f29, f3, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f3, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f3, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f3, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f3, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f3, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xa3ac4062 # load x3 with value 0xa3ac4062
sw x3, 0(x2) # store 0xa3ac4062 in memory
flw f21, 0(x2) # load 0xa3ac4062 from memory into f21
fnmadd.s f15, f6, f14, f21, dyn # perform operation
fnmadd.s f15, f6, f14, f21, rdn # perform operation
fnmadd.s f15, f6, f14, f21, rmm # perform operation
fnmadd.s f15, f6, f14, f21, rne # perform operation
fnmadd.s f15, f6, f14, f21, rtz # perform operation
fnmadd.s f15, f6, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f6, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f6, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x380d708d # load x3 with value 0x380d708d
sw x3, 0(x2) # store 0x380d708d in memory
flw f31, 0(x2) # load 0x380d708d from memory into f31
fnmadd.s f2, f26, f25, f31, dyn # perform operation
fnmadd.s f2, f26, f25, f31, rdn # perform operation
fnmadd.s f2, f26, f25, f31, rmm # perform operation
fnmadd.s f2, f26, f25, f31, rne # perform operation
fnmadd.s f2, f26, f25, f31, rtz # perform operation
fnmadd.s f2, f26, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0xd336ae7a # load x3 with value 0xd336ae7a
sw x3, 0(x2) # store 0xd336ae7a in memory
flw f1, 0(x2) # load 0xd336ae7a from memory into f1
fnmadd.s f23, f18, f11, f1, dyn # perform operation
fnmadd.s f23, f18, f11, f1, rdn # perform operation
fnmadd.s f23, f18, f11, f1, rmm # perform operation
fnmadd.s f23, f18, f11, f1, rne # perform operation
fnmadd.s f23, f18, f11, f1, rtz # perform operation
fnmadd.s f23, f18, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f18, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f18, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xdfa5d759 # load x3 with value 0xdfa5d759
sw x3, 0(x2) # store 0xdfa5d759 in memory
flw f16, 0(x2) # load 0xdfa5d759 from memory into f16
fnmadd.s f25, f28, f13, f16, dyn # perform operation
fnmadd.s f25, f28, f13, f16, rdn # perform operation
fnmadd.s f25, f28, f13, f16, rmm # perform operation
fnmadd.s f25, f28, f13, f16, rne # perform operation
fnmadd.s f25, f28, f13, f16, rtz # perform operation
fnmadd.s f25, f28, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f28, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f28, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xab42ade1 # load x3 with value 0xab42ade1
sw x3, 0(x2) # store 0xab42ade1 in memory
flw f22, 0(x2) # load 0xab42ade1 from memory into f22
fnmadd.s f25, f30, f21, f22, dyn # perform operation
fnmadd.s f25, f30, f21, f22, rdn # perform operation
fnmadd.s f25, f30, f21, f22, rmm # perform operation
fnmadd.s f25, f30, f21, f22, rne # perform operation
fnmadd.s f25, f30, f21, f22, rtz # perform operation
fnmadd.s f25, f30, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f30, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f30, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xf23cd5e0 # load x3 with value 0xf23cd5e0
sw x3, 0(x2) # store 0xf23cd5e0 in memory
flw f2, 0(x2) # load 0xf23cd5e0 from memory into f2
fnmadd.s f18, f3, f21, f2, dyn # perform operation
fnmadd.s f18, f3, f21, f2, rdn # perform operation
fnmadd.s f18, f3, f21, f2, rmm # perform operation
fnmadd.s f18, f3, f21, f2, rne # perform operation
fnmadd.s f18, f3, f21, f2, rtz # perform operation
fnmadd.s f18, f3, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f3, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f3, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x10255bc6 # load x3 with value 0x10255bc6
sw x3, 0(x2) # store 0x10255bc6 in memory
flw f18, 0(x2) # load 0x10255bc6 from memory into f18
fnmadd.s f12, f14, f11, f18, dyn # perform operation
fnmadd.s f12, f14, f11, f18, rdn # perform operation
fnmadd.s f12, f14, f11, f18, rmm # perform operation
fnmadd.s f12, f14, f11, f18, rne # perform operation
fnmadd.s f12, f14, f11, f18, rtz # perform operation
fnmadd.s f12, f14, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x2b02f541 # load x3 with value 0x2b02f541
sw x3, 0(x2) # store 0x2b02f541 in memory
flw f16, 0(x2) # load 0x2b02f541 from memory into f16
fnmadd.s f21, f25, f20, f16, dyn # perform operation
fnmadd.s f21, f25, f20, f16, rdn # perform operation
fnmadd.s f21, f25, f20, f16, rmm # perform operation
fnmadd.s f21, f25, f20, f16, rne # perform operation
fnmadd.s f21, f25, f20, f16, rtz # perform operation
fnmadd.s f21, f25, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f25, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f25, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x2480e503 # load x3 with value 0x2480e503
sw x3, 0(x2) # store 0x2480e503 in memory
flw f22, 0(x2) # load 0x2480e503 from memory into f22
fnmadd.s f3, f10, f13, f22, dyn # perform operation
fnmadd.s f3, f10, f13, f22, rdn # perform operation
fnmadd.s f3, f10, f13, f22, rmm # perform operation
fnmadd.s f3, f10, f13, f22, rne # perform operation
fnmadd.s f3, f10, f13, f22, rtz # perform operation
fnmadd.s f3, f10, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f10, f13, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x5601bfa8 # load x3 with value 0x5601bfa8
sw x3, 0(x2) # store 0x5601bfa8 in memory
flw f15, 0(x2) # load 0x5601bfa8 from memory into f15
fnmadd.s f19, f9, f14, f15, dyn # perform operation
fnmadd.s f19, f9, f14, f15, rdn # perform operation
fnmadd.s f19, f9, f14, f15, rmm # perform operation
fnmadd.s f19, f9, f14, f15, rne # perform operation
fnmadd.s f19, f9, f14, f15, rtz # perform operation
fnmadd.s f19, f9, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f9, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f9, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x0c24aaf5 # load x3 with value 0x0c24aaf5
sw x3, 0(x2) # store 0x0c24aaf5 in memory
flw f11, 0(x2) # load 0x0c24aaf5 from memory into f11
fnmadd.s f18, f1, f28, f11, dyn # perform operation
fnmadd.s f18, f1, f28, f11, rdn # perform operation
fnmadd.s f18, f1, f28, f11, rmm # perform operation
fnmadd.s f18, f1, f28, f11, rne # perform operation
fnmadd.s f18, f1, f28, f11, rtz # perform operation
fnmadd.s f18, f1, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x51f372a3 # load x3 with value 0x51f372a3
sw x3, 0(x2) # store 0x51f372a3 in memory
flw f7, 0(x2) # load 0x51f372a3 from memory into f7
fnmadd.s f3, f1, f10, f7, dyn # perform operation
fnmadd.s f3, f1, f10, f7, rdn # perform operation
fnmadd.s f3, f1, f10, f7, rmm # perform operation
fnmadd.s f3, f1, f10, f7, rne # perform operation
fnmadd.s f3, f1, f10, f7, rtz # perform operation
fnmadd.s f3, f1, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
la x2, scratch
li x3, 0xb7586a32 # load x3 with value 0xb7586a32
sw x3, 0(x2) # store 0xb7586a32 in memory
flw f28, 0(x2) # load 0xb7586a32 from memory into f28
fnmadd.s f27, f18, f15, f28, dyn # perform operation
fnmadd.s f27, f18, f15, f28, rdn # perform operation
fnmadd.s f27, f18, f15, f28, rmm # perform operation
fnmadd.s f27, f18, f15, f28, rne # perform operation
fnmadd.s f27, f18, f15, f28, rtz # perform operation
fnmadd.s f27, f18, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f18, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f18, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f18, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f18, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f18, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x57bf2fde # load x3 with value 0x57bf2fde
sw x3, 0(x2) # store 0x57bf2fde in memory
flw f21, 0(x2) # load 0x57bf2fde from memory into f21
fnmadd.s f10, f13, f25, f21, dyn # perform operation
fnmadd.s f10, f13, f25, f21, rdn # perform operation
fnmadd.s f10, f13, f25, f21, rmm # perform operation
fnmadd.s f10, f13, f25, f21, rne # perform operation
fnmadd.s f10, f13, f25, f21, rtz # perform operation
fnmadd.s f10, f13, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f13, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f13, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f13, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f13, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f13, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0xb6ab34e3 # load x3 with value 0xb6ab34e3
sw x3, 0(x2) # store 0xb6ab34e3 in memory
flw f22, 0(x2) # load 0xb6ab34e3 from memory into f22
fnmadd.s f31, f3, f20, f22, dyn # perform operation
fnmadd.s f31, f3, f20, f22, rdn # perform operation
fnmadd.s f31, f3, f20, f22, rmm # perform operation
fnmadd.s f31, f3, f20, f22, rne # perform operation
fnmadd.s f31, f3, f20, f22, rtz # perform operation
fnmadd.s f31, f3, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f3, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f3, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x4b6f8631 # load x3 with value 0x4b6f8631
sw x3, 0(x2) # store 0x4b6f8631 in memory
flw f17, 0(x2) # load 0x4b6f8631 from memory into f17
fnmadd.s f24, f13, f25, f17, dyn # perform operation
fnmadd.s f24, f13, f25, f17, rdn # perform operation
fnmadd.s f24, f13, f25, f17, rmm # perform operation
fnmadd.s f24, f13, f25, f17, rne # perform operation
fnmadd.s f24, f13, f25, f17, rtz # perform operation
fnmadd.s f24, f13, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f13, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f13, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xcdd25691 # load x3 with value 0xcdd25691
sw x3, 0(x2) # store 0xcdd25691 in memory
flw f9, 0(x2) # load 0xcdd25691 from memory into f9
fnmadd.s f5, f3, f18, f9, dyn # perform operation
fnmadd.s f5, f3, f18, f9, rdn # perform operation
fnmadd.s f5, f3, f18, f9, rmm # perform operation
fnmadd.s f5, f3, f18, f9, rne # perform operation
fnmadd.s f5, f3, f18, f9, rtz # perform operation
fnmadd.s f5, f3, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x1b94b71d # load x3 with value 0x1b94b71d
sw x3, 0(x2) # store 0x1b94b71d in memory
flw f7, 0(x2) # load 0x1b94b71d from memory into f7
fnmadd.s f16, f2, f13, f7, dyn # perform operation
fnmadd.s f16, f2, f13, f7, rdn # perform operation
fnmadd.s f16, f2, f13, f7, rmm # perform operation
fnmadd.s f16, f2, f13, f7, rne # perform operation
fnmadd.s f16, f2, f13, f7, rtz # perform operation
fnmadd.s f16, f2, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f2, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x68ffaba8 # load x3 with value 0x68ffaba8
sw x3, 0(x2) # store 0x68ffaba8 in memory
flw f26, 0(x2) # load 0x68ffaba8 from memory into f26
fnmadd.s f25, f2, f12, f26, dyn # perform operation
fnmadd.s f25, f2, f12, f26, rdn # perform operation
fnmadd.s f25, f2, f12, f26, rmm # perform operation
fnmadd.s f25, f2, f12, f26, rne # perform operation
fnmadd.s f25, f2, f12, f26, rtz # perform operation
fnmadd.s f25, f2, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x08892903 # load x3 with value 0x08892903
sw x3, 0(x2) # store 0x08892903 in memory
flw f24, 0(x2) # load 0x08892903 from memory into f24
fnmadd.s f9, f27, f28, f24, dyn # perform operation
fnmadd.s f9, f27, f28, f24, rdn # perform operation
fnmadd.s f9, f27, f28, f24, rmm # perform operation
fnmadd.s f9, f27, f28, f24, rne # perform operation
fnmadd.s f9, f27, f28, f24, rtz # perform operation
fnmadd.s f9, f27, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x5378f4f1 # load x3 with value 0x5378f4f1
sw x3, 0(x2) # store 0x5378f4f1 in memory
flw f23, 0(x2) # load 0x5378f4f1 from memory into f23
fnmadd.s f16, f27, f11, f23, dyn # perform operation
fnmadd.s f16, f27, f11, f23, rdn # perform operation
fnmadd.s f16, f27, f11, f23, rmm # perform operation
fnmadd.s f16, f27, f11, f23, rne # perform operation
fnmadd.s f16, f27, f11, f23, rtz # perform operation
fnmadd.s f16, f27, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f27, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f27, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xf5638b02 # load x3 with value 0xf5638b02
sw x3, 0(x2) # store 0xf5638b02 in memory
flw f15, 0(x2) # load 0xf5638b02 from memory into f15
fnmadd.s f26, f11, f7, f15, dyn # perform operation
fnmadd.s f26, f11, f7, f15, rdn # perform operation
fnmadd.s f26, f11, f7, f15, rmm # perform operation
fnmadd.s f26, f11, f7, f15, rne # perform operation
fnmadd.s f26, f11, f7, f15, rtz # perform operation
fnmadd.s f26, f11, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f11, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f11, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f11, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f11, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f11, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x76b73513 # load x3 with value 0x76b73513
sw x3, 0(x2) # store 0x76b73513 in memory
flw f30, 0(x2) # load 0x76b73513 from memory into f30
fnmadd.s f3, f28, f17, f30, dyn # perform operation
fnmadd.s f3, f28, f17, f30, rdn # perform operation
fnmadd.s f3, f28, f17, f30, rmm # perform operation
fnmadd.s f3, f28, f17, f30, rne # perform operation
fnmadd.s f3, f28, f17, f30, rtz # perform operation
fnmadd.s f3, f28, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x42f3c39e # load x3 with value 0x42f3c39e
sw x3, 0(x2) # store 0x42f3c39e in memory
flw f25, 0(x2) # load 0x42f3c39e from memory into f25
fnmadd.s f13, f28, f27, f25, dyn # perform operation
fnmadd.s f13, f28, f27, f25, rdn # perform operation
fnmadd.s f13, f28, f27, f25, rmm # perform operation
fnmadd.s f13, f28, f27, f25, rne # perform operation
fnmadd.s f13, f28, f27, f25, rtz # perform operation
fnmadd.s f13, f28, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f27, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x9fa976f7 # load x3 with value 0x9fa976f7
sw x3, 0(x2) # store 0x9fa976f7 in memory
flw f23, 0(x2) # load 0x9fa976f7 from memory into f23
fnmadd.s f14, f13, f15, f23, dyn # perform operation
fnmadd.s f14, f13, f15, f23, rdn # perform operation
fnmadd.s f14, f13, f15, f23, rmm # perform operation
fnmadd.s f14, f13, f15, f23, rne # perform operation
fnmadd.s f14, f13, f15, f23, rtz # perform operation
fnmadd.s f14, f13, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xb104b08b # load x3 with value 0xb104b08b
sw x3, 0(x2) # store 0xb104b08b in memory
flw f5, 0(x2) # load 0xb104b08b from memory into f5
fnmadd.s f28, f12, f19, f5, dyn # perform operation
fnmadd.s f28, f12, f19, f5, rdn # perform operation
fnmadd.s f28, f12, f19, f5, rmm # perform operation
fnmadd.s f28, f12, f19, f5, rne # perform operation
fnmadd.s f28, f12, f19, f5, rtz # perform operation
fnmadd.s f28, f12, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f19, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x1cf93c73 # load x3 with value 0x1cf93c73
sw x3, 0(x2) # store 0x1cf93c73 in memory
flw f9, 0(x2) # load 0x1cf93c73 from memory into f9
fnmadd.s f19, f13, f17, f9, dyn # perform operation
fnmadd.s f19, f13, f17, f9, rdn # perform operation
fnmadd.s f19, f13, f17, f9, rmm # perform operation
fnmadd.s f19, f13, f17, f9, rne # perform operation
fnmadd.s f19, f13, f17, f9, rtz # perform operation
fnmadd.s f19, f13, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xf09631a7 # load x3 with value 0xf09631a7
sw x3, 0(x2) # store 0xf09631a7 in memory
flw f24, 0(x2) # load 0xf09631a7 from memory into f24
fnmadd.s f23, f14, f20, f24, dyn # perform operation
fnmadd.s f23, f14, f20, f24, rdn # perform operation
fnmadd.s f23, f14, f20, f24, rmm # perform operation
fnmadd.s f23, f14, f20, f24, rne # perform operation
fnmadd.s f23, f14, f20, f24, rtz # perform operation
fnmadd.s f23, f14, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f14, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f14, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x705749e4 # load x3 with value 0x705749e4
sw x3, 0(x2) # store 0x705749e4 in memory
flw f17, 0(x2) # load 0x705749e4 from memory into f17
fnmadd.s f28, f23, f25, f17, dyn # perform operation
fnmadd.s f28, f23, f25, f17, rdn # perform operation
fnmadd.s f28, f23, f25, f17, rmm # perform operation
fnmadd.s f28, f23, f25, f17, rne # perform operation
fnmadd.s f28, f23, f25, f17, rtz # perform operation
fnmadd.s f28, f23, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xe0aed377 # load x3 with value 0xe0aed377
sw x3, 0(x2) # store 0xe0aed377 in memory
flw f2, 0(x2) # load 0xe0aed377 from memory into f2
fnmadd.s f30, f24, f29, f2, dyn # perform operation
fnmadd.s f30, f24, f29, f2, rdn # perform operation
fnmadd.s f30, f24, f29, f2, rmm # perform operation
fnmadd.s f30, f24, f29, f2, rne # perform operation
fnmadd.s f30, f24, f29, f2, rtz # perform operation
fnmadd.s f30, f24, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f24, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f24, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f24, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f24, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f24, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x70fa4680 # load x3 with value 0x70fa4680
sw x3, 0(x2) # store 0x70fa4680 in memory
flw f17, 0(x2) # load 0x70fa4680 from memory into f17
fnmadd.s f2, f12, f22, f17, dyn # perform operation
fnmadd.s f2, f12, f22, f17, rdn # perform operation
fnmadd.s f2, f12, f22, f17, rmm # perform operation
fnmadd.s f2, f12, f22, f17, rne # perform operation
fnmadd.s f2, f12, f22, f17, rtz # perform operation
fnmadd.s f2, f12, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f12, f22, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x350aa5ab # load x3 with value 0x350aa5ab
sw x3, 0(x2) # store 0x350aa5ab in memory
flw f16, 0(x2) # load 0x350aa5ab from memory into f16
fnmadd.s f28, f3, f17, f16, dyn # perform operation
fnmadd.s f28, f3, f17, f16, rdn # perform operation
fnmadd.s f28, f3, f17, f16, rmm # perform operation
fnmadd.s f28, f3, f17, f16, rne # perform operation
fnmadd.s f28, f3, f17, f16, rtz # perform operation
fnmadd.s f28, f3, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x463ff2cc # load x3 with value 0x463ff2cc
sw x3, 0(x2) # store 0x463ff2cc in memory
flw f27, 0(x2) # load 0x463ff2cc from memory into f27
fnmadd.s f19, f7, f29, f27, dyn # perform operation
fnmadd.s f19, f7, f29, f27, rdn # perform operation
fnmadd.s f19, f7, f29, f27, rmm # perform operation
fnmadd.s f19, f7, f29, f27, rne # perform operation
fnmadd.s f19, f7, f29, f27, rtz # perform operation
fnmadd.s f19, f7, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f7, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f7, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f7, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f7, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f7, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x1c9c6388 # load x3 with value 0x1c9c6388
sw x3, 0(x2) # store 0x1c9c6388 in memory
flw f29, 0(x2) # load 0x1c9c6388 from memory into f29
fnmadd.s f30, f12, f16, f29, dyn # perform operation
fnmadd.s f30, f12, f16, f29, rdn # perform operation
fnmadd.s f30, f12, f16, f29, rmm # perform operation
fnmadd.s f30, f12, f16, f29, rne # perform operation
fnmadd.s f30, f12, f16, f29, rtz # perform operation
fnmadd.s f30, f12, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f16, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x26cb93e8 # load x3 with value 0x26cb93e8
sw x3, 0(x2) # store 0x26cb93e8 in memory
flw f19, 0(x2) # load 0x26cb93e8 from memory into f19
fnmadd.s f23, f15, f11, f19, dyn # perform operation
fnmadd.s f23, f15, f11, f19, rdn # perform operation
fnmadd.s f23, f15, f11, f19, rmm # perform operation
fnmadd.s f23, f15, f11, f19, rne # perform operation
fnmadd.s f23, f15, f11, f19, rtz # perform operation
fnmadd.s f23, f15, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0xfd701b10 # load x3 with value 0xfd701b10
sw x3, 0(x2) # store 0xfd701b10 in memory
flw f29, 0(x2) # load 0xfd701b10 from memory into f29
fnmadd.s f10, f24, f6, f29, dyn # perform operation
fnmadd.s f10, f24, f6, f29, rdn # perform operation
fnmadd.s f10, f24, f6, f29, rmm # perform operation
fnmadd.s f10, f24, f6, f29, rne # perform operation
fnmadd.s f10, f24, f6, f29, rtz # perform operation
fnmadd.s f10, f24, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xb3f7140d # load x3 with value 0xb3f7140d
sw x3, 0(x2) # store 0xb3f7140d in memory
flw f20, 0(x2) # load 0xb3f7140d from memory into f20
fnmadd.s f21, f24, f7, f20, dyn # perform operation
fnmadd.s f21, f24, f7, f20, rdn # perform operation
fnmadd.s f21, f24, f7, f20, rmm # perform operation
fnmadd.s f21, f24, f7, f20, rne # perform operation
fnmadd.s f21, f24, f7, f20, rtz # perform operation
fnmadd.s f21, f24, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f24, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f24, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x0872d613 # load x3 with value 0x0872d613
sw x3, 0(x2) # store 0x0872d613 in memory
flw f23, 0(x2) # load 0x0872d613 from memory into f23
fnmadd.s f31, f22, f3, f23, dyn # perform operation
fnmadd.s f31, f22, f3, f23, rdn # perform operation
fnmadd.s f31, f22, f3, f23, rmm # perform operation
fnmadd.s f31, f22, f3, f23, rne # perform operation
fnmadd.s f31, f22, f3, f23, rtz # perform operation
fnmadd.s f31, f22, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f22, f3, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x186bf4b3 # load x3 with value 0x186bf4b3
sw x3, 0(x2) # store 0x186bf4b3 in memory
flw f19, 0(x2) # load 0x186bf4b3 from memory into f19
fnmadd.s f11, f12, f10, f19, dyn # perform operation
fnmadd.s f11, f12, f10, f19, rdn # perform operation
fnmadd.s f11, f12, f10, f19, rmm # perform operation
fnmadd.s f11, f12, f10, f19, rne # perform operation
fnmadd.s f11, f12, f10, f19, rtz # perform operation
fnmadd.s f11, f12, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f12, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f12, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xae010649 # load x3 with value 0xae010649
sw x3, 0(x2) # store 0xae010649 in memory
flw f10, 0(x2) # load 0xae010649 from memory into f10
fnmadd.s f17, f11, f14, f10, dyn # perform operation
fnmadd.s f17, f11, f14, f10, rdn # perform operation
fnmadd.s f17, f11, f14, f10, rmm # perform operation
fnmadd.s f17, f11, f14, f10, rne # perform operation
fnmadd.s f17, f11, f14, f10, rtz # perform operation
fnmadd.s f17, f11, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x14fc78a0 # load x3 with value 0x14fc78a0
sw x3, 0(x2) # store 0x14fc78a0 in memory
flw f5, 0(x2) # load 0x14fc78a0 from memory into f5
fnmadd.s f17, f13, f30, f5, dyn # perform operation
fnmadd.s f17, f13, f30, f5, rdn # perform operation
fnmadd.s f17, f13, f30, f5, rmm # perform operation
fnmadd.s f17, f13, f30, f5, rne # perform operation
fnmadd.s f17, f13, f30, f5, rtz # perform operation
fnmadd.s f17, f13, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f13, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xa72216eb # load x3 with value 0xa72216eb
sw x3, 0(x2) # store 0xa72216eb in memory
flw f23, 0(x2) # load 0xa72216eb from memory into f23
fnmadd.s f26, f3, f27, f23, dyn # perform operation
fnmadd.s f26, f3, f27, f23, rdn # perform operation
fnmadd.s f26, f3, f27, f23, rmm # perform operation
fnmadd.s f26, f3, f27, f23, rne # perform operation
fnmadd.s f26, f3, f27, f23, rtz # perform operation
fnmadd.s f26, f3, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xbf2f9c25 # load x3 with value 0xbf2f9c25
sw x3, 0(x2) # store 0xbf2f9c25 in memory
flw f8, 0(x2) # load 0xbf2f9c25 from memory into f8
fnmadd.s f17, f14, f1, f8, dyn # perform operation
fnmadd.s f17, f14, f1, f8, rdn # perform operation
fnmadd.s f17, f14, f1, f8, rmm # perform operation
fnmadd.s f17, f14, f1, f8, rne # perform operation
fnmadd.s f17, f14, f1, f8, rtz # perform operation
fnmadd.s f17, f14, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f1, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x7ba0fbda # load x3 with value 0x7ba0fbda
sw x3, 0(x2) # store 0x7ba0fbda in memory
flw f19, 0(x2) # load 0x7ba0fbda from memory into f19
fnmadd.s f20, f16, f11, f19, dyn # perform operation
fnmadd.s f20, f16, f11, f19, rdn # perform operation
fnmadd.s f20, f16, f11, f19, rmm # perform operation
fnmadd.s f20, f16, f11, f19, rne # perform operation
fnmadd.s f20, f16, f11, f19, rtz # perform operation
fnmadd.s f20, f16, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f16, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f16, f11, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x6c70f7d1 # load x3 with value 0x6c70f7d1
sw x3, 0(x2) # store 0x6c70f7d1 in memory
flw f23, 0(x2) # load 0x6c70f7d1 from memory into f23
fnmadd.s f11, f21, f15, f23, dyn # perform operation
fnmadd.s f11, f21, f15, f23, rdn # perform operation
fnmadd.s f11, f21, f15, f23, rmm # perform operation
fnmadd.s f11, f21, f15, f23, rne # perform operation
fnmadd.s f11, f21, f15, f23, rtz # perform operation
fnmadd.s f11, f21, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f21, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f21, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0x0e8a4316 # load x3 with value 0x0e8a4316
sw x3, 0(x2) # store 0x0e8a4316 in memory
flw f30, 0(x2) # load 0x0e8a4316 from memory into f30
fnmadd.s f23, f31, f24, f30, dyn # perform operation
fnmadd.s f23, f31, f24, f30, rdn # perform operation
fnmadd.s f23, f31, f24, f30, rmm # perform operation
fnmadd.s f23, f31, f24, f30, rne # perform operation
fnmadd.s f23, f31, f24, f30, rtz # perform operation
fnmadd.s f23, f31, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x00b9545f # load x3 with value 0x00b9545f
sw x3, 0(x2) # store 0x00b9545f in memory
flw f30, 0(x2) # load 0x00b9545f from memory into f30
fnmadd.s f10, f18, f2, f30, dyn # perform operation
fnmadd.s f10, f18, f2, f30, rdn # perform operation
fnmadd.s f10, f18, f2, f30, rmm # perform operation
fnmadd.s f10, f18, f2, f30, rne # perform operation
fnmadd.s f10, f18, f2, f30, rtz # perform operation
fnmadd.s f10, f18, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f18, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f18, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x81edb310 # load x3 with value 0x81edb310
sw x3, 0(x2) # store 0x81edb310 in memory
flw f28, 0(x2) # load 0x81edb310 from memory into f28
fnmadd.s f5, f8, f7, f28, dyn # perform operation
fnmadd.s f5, f8, f7, f28, rdn # perform operation
fnmadd.s f5, f8, f7, f28, rmm # perform operation
fnmadd.s f5, f8, f7, f28, rne # perform operation
fnmadd.s f5, f8, f7, f28, rtz # perform operation
fnmadd.s f5, f8, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xbc19bff1 # load x3 with value 0xbc19bff1
sw x3, 0(x2) # store 0xbc19bff1 in memory
flw f29, 0(x2) # load 0xbc19bff1 from memory into f29
fnmadd.s f14, f19, f23, f29, dyn # perform operation
fnmadd.s f14, f19, f23, f29, rdn # perform operation
fnmadd.s f14, f19, f23, f29, rmm # perform operation
fnmadd.s f14, f19, f23, f29, rne # perform operation
fnmadd.s f14, f19, f23, f29, rtz # perform operation
fnmadd.s f14, f19, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f19, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x529d9bed # load x3 with value 0x529d9bed
sw x3, 0(x2) # store 0x529d9bed in memory
flw f14, 0(x2) # load 0x529d9bed from memory into f14
fnmadd.s f15, f8, f23, f14, dyn # perform operation
fnmadd.s f15, f8, f23, f14, rdn # perform operation
fnmadd.s f15, f8, f23, f14, rmm # perform operation
fnmadd.s f15, f8, f23, f14, rne # perform operation
fnmadd.s f15, f8, f23, f14, rtz # perform operation
fnmadd.s f15, f8, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xa2bfe768 # load x3 with value 0xa2bfe768
sw x3, 0(x2) # store 0xa2bfe768 in memory
flw f24, 0(x2) # load 0xa2bfe768 from memory into f24
fnmadd.s f8, f10, f25, f24, dyn # perform operation
fnmadd.s f8, f10, f25, f24, rdn # perform operation
fnmadd.s f8, f10, f25, f24, rmm # perform operation
fnmadd.s f8, f10, f25, f24, rne # perform operation
fnmadd.s f8, f10, f25, f24, rtz # perform operation
fnmadd.s f8, f10, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f25, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xbb5741d7 # load x3 with value 0xbb5741d7
sw x3, 0(x2) # store 0xbb5741d7 in memory
flw f28, 0(x2) # load 0xbb5741d7 from memory into f28
fnmadd.s f15, f7, f21, f28, dyn # perform operation
fnmadd.s f15, f7, f21, f28, rdn # perform operation
fnmadd.s f15, f7, f21, f28, rmm # perform operation
fnmadd.s f15, f7, f21, f28, rne # perform operation
fnmadd.s f15, f7, f21, f28, rtz # perform operation
fnmadd.s f15, f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f7, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x015fc173 # load x3 with value 0x015fc173
sw x3, 0(x2) # store 0x015fc173 in memory
flw f22, 0(x2) # load 0x015fc173 from memory into f22
fnmadd.s f16, f26, f15, f22, dyn # perform operation
fnmadd.s f16, f26, f15, f22, rdn # perform operation
fnmadd.s f16, f26, f15, f22, rmm # perform operation
fnmadd.s f16, f26, f15, f22, rne # perform operation
fnmadd.s f16, f26, f15, f22, rtz # perform operation
fnmadd.s f16, f26, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f26, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f26, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0xab3070da # load x3 with value 0xab3070da
sw x3, 0(x2) # store 0xab3070da in memory
flw f18, 0(x2) # load 0xab3070da from memory into f18
fnmadd.s f29, f19, f27, f18, dyn # perform operation
fnmadd.s f29, f19, f27, f18, rdn # perform operation
fnmadd.s f29, f19, f27, f18, rmm # perform operation
fnmadd.s f29, f19, f27, f18, rne # perform operation
fnmadd.s f29, f19, f27, f18, rtz # perform operation
fnmadd.s f29, f19, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x1b1691c3 # load x3 with value 0x1b1691c3
sw x3, 0(x2) # store 0x1b1691c3 in memory
flw f18, 0(x2) # load 0x1b1691c3 from memory into f18
fnmadd.s f24, f5, f6, f18, dyn # perform operation
fnmadd.s f24, f5, f6, f18, rdn # perform operation
fnmadd.s f24, f5, f6, f18, rmm # perform operation
fnmadd.s f24, f5, f6, f18, rne # perform operation
fnmadd.s f24, f5, f6, f18, rtz # perform operation
fnmadd.s f24, f5, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f5, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f5, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x3d6ed5f5 # load x3 with value 0x3d6ed5f5
sw x3, 0(x2) # store 0x3d6ed5f5 in memory
flw f7, 0(x2) # load 0x3d6ed5f5 from memory into f7
fnmadd.s f24, f18, f28, f7, dyn # perform operation
fnmadd.s f24, f18, f28, f7, rdn # perform operation
fnmadd.s f24, f18, f28, f7, rmm # perform operation
fnmadd.s f24, f18, f28, f7, rne # perform operation
fnmadd.s f24, f18, f28, f7, rtz # perform operation
fnmadd.s f24, f18, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x099e388a # load x3 with value 0x099e388a
sw x3, 0(x2) # store 0x099e388a in memory
flw f2, 0(x2) # load 0x099e388a from memory into f2
fnmadd.s f25, f21, f6, f2, dyn # perform operation
fnmadd.s f25, f21, f6, f2, rdn # perform operation
fnmadd.s f25, f21, f6, f2, rmm # perform operation
fnmadd.s f25, f21, f6, f2, rne # perform operation
fnmadd.s f25, f21, f6, f2, rtz # perform operation
fnmadd.s f25, f21, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f21, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f21, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0xbf0c383f # load x3 with value 0xbf0c383f
sw x3, 0(x2) # store 0xbf0c383f in memory
flw f24, 0(x2) # load 0xbf0c383f from memory into f24
fnmadd.s f13, f12, f30, f24, dyn # perform operation
fnmadd.s f13, f12, f30, f24, rdn # perform operation
fnmadd.s f13, f12, f30, f24, rmm # perform operation
fnmadd.s f13, f12, f30, f24, rne # perform operation
fnmadd.s f13, f12, f30, f24, rtz # perform operation
fnmadd.s f13, f12, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x03cb1bec # load x3 with value 0x03cb1bec
sw x3, 0(x2) # store 0x03cb1bec in memory
flw f26, 0(x2) # load 0x03cb1bec from memory into f26
fnmadd.s f5, f1, f3, f26, dyn # perform operation
fnmadd.s f5, f1, f3, f26, rdn # perform operation
fnmadd.s f5, f1, f3, f26, rmm # perform operation
fnmadd.s f5, f1, f3, f26, rne # perform operation
fnmadd.s f5, f1, f3, f26, rtz # perform operation
fnmadd.s f5, f1, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f1, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f1, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x88413cb9 # load x3 with value 0x88413cb9
sw x3, 0(x2) # store 0x88413cb9 in memory
flw f27, 0(x2) # load 0x88413cb9 from memory into f27
fnmadd.s f14, f26, f20, f27, dyn # perform operation
fnmadd.s f14, f26, f20, f27, rdn # perform operation
fnmadd.s f14, f26, f20, f27, rmm # perform operation
fnmadd.s f14, f26, f20, f27, rne # perform operation
fnmadd.s f14, f26, f20, f27, rtz # perform operation
fnmadd.s f14, f26, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f26, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x4cfdf7eb # load x3 with value 0x4cfdf7eb
sw x3, 0(x2) # store 0x4cfdf7eb in memory
flw f8, 0(x2) # load 0x4cfdf7eb from memory into f8
fnmadd.s f18, f5, f30, f8, dyn # perform operation
fnmadd.s f18, f5, f30, f8, rdn # perform operation
fnmadd.s f18, f5, f30, f8, rmm # perform operation
fnmadd.s f18, f5, f30, f8, rne # perform operation
fnmadd.s f18, f5, f30, f8, rtz # perform operation
fnmadd.s f18, f5, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f5, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f5, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x0c879ee3 # load x3 with value 0x0c879ee3
sw x3, 0(x2) # store 0x0c879ee3 in memory
flw f27, 0(x2) # load 0x0c879ee3 from memory into f27
fnmadd.s f12, f17, f3, f27, dyn # perform operation
fnmadd.s f12, f17, f3, f27, rdn # perform operation
fnmadd.s f12, f17, f3, f27, rmm # perform operation
fnmadd.s f12, f17, f3, f27, rne # perform operation
fnmadd.s f12, f17, f3, f27, rtz # perform operation
fnmadd.s f12, f17, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f3, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x620f898b # load x3 with value 0x620f898b
sw x3, 0(x2) # store 0x620f898b in memory
flw f2, 0(x2) # load 0x620f898b from memory into f2
fnmadd.s f5, f21, f1, f2, dyn # perform operation
fnmadd.s f5, f21, f1, f2, rdn # perform operation
fnmadd.s f5, f21, f1, f2, rmm # perform operation
fnmadd.s f5, f21, f1, f2, rne # perform operation
fnmadd.s f5, f21, f1, f2, rtz # perform operation
fnmadd.s f5, f21, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0xc3047968 # load x3 with value 0xc3047968
sw x3, 0(x2) # store 0xc3047968 in memory
flw f5, 0(x2) # load 0xc3047968 from memory into f5
fnmadd.s f17, f11, f16, f5, dyn # perform operation
fnmadd.s f17, f11, f16, f5, rdn # perform operation
fnmadd.s f17, f11, f16, f5, rmm # perform operation
fnmadd.s f17, f11, f16, f5, rne # perform operation
fnmadd.s f17, f11, f16, f5, rtz # perform operation
fnmadd.s f17, f11, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x0a0411c8 # load x3 with value 0x0a0411c8
sw x3, 0(x2) # store 0x0a0411c8 in memory
flw f10, 0(x2) # load 0x0a0411c8 from memory into f10
fnmadd.s f25, f8, f21, f10, dyn # perform operation
fnmadd.s f25, f8, f21, f10, rdn # perform operation
fnmadd.s f25, f8, f21, f10, rmm # perform operation
fnmadd.s f25, f8, f21, f10, rne # perform operation
fnmadd.s f25, f8, f21, f10, rtz # perform operation
fnmadd.s f25, f8, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f21, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xc4bfaccb # load x3 with value 0xc4bfaccb
sw x3, 0(x2) # store 0xc4bfaccb in memory
flw f17, 0(x2) # load 0xc4bfaccb from memory into f17
fnmadd.s f19, f10, f16, f17, dyn # perform operation
fnmadd.s f19, f10, f16, f17, rdn # perform operation
fnmadd.s f19, f10, f16, f17, rmm # perform operation
fnmadd.s f19, f10, f16, f17, rne # perform operation
fnmadd.s f19, f10, f16, f17, rtz # perform operation
fnmadd.s f19, f10, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f10, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f10, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f10, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f10, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f10, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x8b052577 # load x3 with value 0x8b052577
sw x3, 0(x2) # store 0x8b052577 in memory
flw f26, 0(x2) # load 0x8b052577 from memory into f26
fnmadd.s f16, f19, f30, f26, dyn # perform operation
fnmadd.s f16, f19, f30, f26, rdn # perform operation
fnmadd.s f16, f19, f30, f26, rmm # perform operation
fnmadd.s f16, f19, f30, f26, rne # perform operation
fnmadd.s f16, f19, f30, f26, rtz # perform operation
fnmadd.s f16, f19, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xb6eefa45 # load x3 with value 0xb6eefa45
sw x3, 0(x2) # store 0xb6eefa45 in memory
flw f25, 0(x2) # load 0xb6eefa45 from memory into f25
fnmadd.s f30, f26, f20, f25, dyn # perform operation
fnmadd.s f30, f26, f20, f25, rdn # perform operation
fnmadd.s f30, f26, f20, f25, rmm # perform operation
fnmadd.s f30, f26, f20, f25, rne # perform operation
fnmadd.s f30, f26, f20, f25, rtz # perform operation
fnmadd.s f30, f26, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f20, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0xcb08a42b # load x3 with value 0xcb08a42b
sw x3, 0(x2) # store 0xcb08a42b in memory
flw f21, 0(x2) # load 0xcb08a42b from memory into f21
fnmadd.s f14, f1, f9, f21, dyn # perform operation
fnmadd.s f14, f1, f9, f21, rdn # perform operation
fnmadd.s f14, f1, f9, f21, rmm # perform operation
fnmadd.s f14, f1, f9, f21, rne # perform operation
fnmadd.s f14, f1, f9, f21, rtz # perform operation
fnmadd.s f14, f1, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x019eee80 # load x3 with value 0x019eee80
sw x3, 0(x2) # store 0x019eee80 in memory
flw f19, 0(x2) # load 0x019eee80 from memory into f19
fnmadd.s f8, f13, f14, f19, dyn # perform operation
fnmadd.s f8, f13, f14, f19, rdn # perform operation
fnmadd.s f8, f13, f14, f19, rmm # perform operation
fnmadd.s f8, f13, f14, f19, rne # perform operation
fnmadd.s f8, f13, f14, f19, rtz # perform operation
fnmadd.s f8, f13, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f13, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f13, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x2fa20f57 # load x3 with value 0x2fa20f57
sw x3, 0(x2) # store 0x2fa20f57 in memory
flw f24, 0(x2) # load 0x2fa20f57 from memory into f24
fnmadd.s f17, f16, f14, f24, dyn # perform operation
fnmadd.s f17, f16, f14, f24, rdn # perform operation
fnmadd.s f17, f16, f14, f24, rmm # perform operation
fnmadd.s f17, f16, f14, f24, rne # perform operation
fnmadd.s f17, f16, f14, f24, rtz # perform operation
fnmadd.s f17, f16, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f16, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0xfd151910 # load x3 with value 0xfd151910
sw x3, 0(x2) # store 0xfd151910 in memory
flw f3, 0(x2) # load 0xfd151910 from memory into f3
fnmadd.s f8, f7, f12, f3, dyn # perform operation
fnmadd.s f8, f7, f12, f3, rdn # perform operation
fnmadd.s f8, f7, f12, f3, rmm # perform operation
fnmadd.s f8, f7, f12, f3, rne # perform operation
fnmadd.s f8, f7, f12, f3, rtz # perform operation
fnmadd.s f8, f7, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x4e8a76dc # load x3 with value 0x4e8a76dc
sw x3, 0(x2) # store 0x4e8a76dc in memory
flw f23, 0(x2) # load 0x4e8a76dc from memory into f23
fnmadd.s f8, f28, f21, f23, dyn # perform operation
fnmadd.s f8, f28, f21, f23, rdn # perform operation
fnmadd.s f8, f28, f21, f23, rmm # perform operation
fnmadd.s f8, f28, f21, f23, rne # perform operation
fnmadd.s f8, f28, f21, f23, rtz # perform operation
fnmadd.s f8, f28, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f28, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x97eeab5c # load x3 with value 0x97eeab5c
sw x3, 0(x2) # store 0x97eeab5c in memory
flw f6, 0(x2) # load 0x97eeab5c from memory into f6
fnmadd.s f17, f8, f31, f6, dyn # perform operation
fnmadd.s f17, f8, f31, f6, rdn # perform operation
fnmadd.s f17, f8, f31, f6, rmm # perform operation
fnmadd.s f17, f8, f31, f6, rne # perform operation
fnmadd.s f17, f8, f31, f6, rtz # perform operation
fnmadd.s f17, f8, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f8, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f8, f31, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x04cce1d8 # load x3 with value 0x04cce1d8
sw x3, 0(x2) # store 0x04cce1d8 in memory
flw f28, 0(x2) # load 0x04cce1d8 from memory into f28
fnmadd.s f17, f14, f19, f28, dyn # perform operation
fnmadd.s f17, f14, f19, f28, rdn # perform operation
fnmadd.s f17, f14, f19, f28, rmm # perform operation
fnmadd.s f17, f14, f19, f28, rne # perform operation
fnmadd.s f17, f14, f19, f28, rtz # perform operation
fnmadd.s f17, f14, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xff21a7d9 # load x3 with value 0xff21a7d9
sw x3, 0(x2) # store 0xff21a7d9 in memory
flw f14, 0(x2) # load 0xff21a7d9 from memory into f14
fnmadd.s f7, f6, f16, f14, dyn # perform operation
fnmadd.s f7, f6, f16, f14, rdn # perform operation
fnmadd.s f7, f6, f16, f14, rmm # perform operation
fnmadd.s f7, f6, f16, f14, rne # perform operation
fnmadd.s f7, f6, f16, f14, rtz # perform operation
fnmadd.s f7, f6, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f6, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f6, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x66440f1c # load x3 with value 0x66440f1c
sw x3, 0(x2) # store 0x66440f1c in memory
flw f11, 0(x2) # load 0x66440f1c from memory into f11
fnmadd.s f7, f24, f6, f11, dyn # perform operation
fnmadd.s f7, f24, f6, f11, rdn # perform operation
fnmadd.s f7, f24, f6, f11, rmm # perform operation
fnmadd.s f7, f24, f6, f11, rne # perform operation
fnmadd.s f7, f24, f6, f11, rtz # perform operation
fnmadd.s f7, f24, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x47b738bd # load x3 with value 0x47b738bd
sw x3, 0(x2) # store 0x47b738bd in memory
flw f13, 0(x2) # load 0x47b738bd from memory into f13
fnmadd.s f14, f16, f30, f13, dyn # perform operation
fnmadd.s f14, f16, f30, f13, rdn # perform operation
fnmadd.s f14, f16, f30, f13, rmm # perform operation
fnmadd.s f14, f16, f30, f13, rne # perform operation
fnmadd.s f14, f16, f30, f13, rtz # perform operation
fnmadd.s f14, f16, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f16, f30, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xf5c37898 # load x3 with value 0xf5c37898
sw x3, 0(x2) # store 0xf5c37898 in memory
flw f10, 0(x2) # load 0xf5c37898 from memory into f10
fnmadd.s f9, f28, f24, f10, dyn # perform operation
fnmadd.s f9, f28, f24, f10, rdn # perform operation
fnmadd.s f9, f28, f24, f10, rmm # perform operation
fnmadd.s f9, f28, f24, f10, rne # perform operation
fnmadd.s f9, f28, f24, f10, rtz # perform operation
fnmadd.s f9, f28, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f28, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f28, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f28, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f28, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f28, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x2808fc9c # load x3 with value 0x2808fc9c
sw x3, 0(x2) # store 0x2808fc9c in memory
flw f6, 0(x2) # load 0x2808fc9c from memory into f6
fnmadd.s f8, f7, f12, f6, dyn # perform operation
fnmadd.s f8, f7, f12, f6, rdn # perform operation
fnmadd.s f8, f7, f12, f6, rmm # perform operation
fnmadd.s f8, f7, f12, f6, rne # perform operation
fnmadd.s f8, f7, f12, f6, rtz # perform operation
fnmadd.s f8, f7, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xbfdb9c61 # load x3 with value 0xbfdb9c61
sw x3, 0(x2) # store 0xbfdb9c61 in memory
flw f25, 0(x2) # load 0xbfdb9c61 from memory into f25
fnmadd.s f29, f8, f18, f25, dyn # perform operation
fnmadd.s f29, f8, f18, f25, rdn # perform operation
fnmadd.s f29, f8, f18, f25, rmm # perform operation
fnmadd.s f29, f8, f18, f25, rne # perform operation
fnmadd.s f29, f8, f18, f25, rtz # perform operation
fnmadd.s f29, f8, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x97a58b9d # load x3 with value 0x97a58b9d
sw x3, 0(x2) # store 0x97a58b9d in memory
flw f14, 0(x2) # load 0x97a58b9d from memory into f14
fnmadd.s f29, f20, f17, f14, dyn # perform operation
fnmadd.s f29, f20, f17, f14, rdn # perform operation
fnmadd.s f29, f20, f17, f14, rmm # perform operation
fnmadd.s f29, f20, f17, f14, rne # perform operation
fnmadd.s f29, f20, f17, f14, rtz # perform operation
fnmadd.s f29, f20, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f20, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f20, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0xf8b0d5a1 # load x3 with value 0xf8b0d5a1
sw x3, 0(x2) # store 0xf8b0d5a1 in memory
flw f9, 0(x2) # load 0xf8b0d5a1 from memory into f9
fnmadd.s f11, f6, f28, f9, dyn # perform operation
fnmadd.s f11, f6, f28, f9, rdn # perform operation
fnmadd.s f11, f6, f28, f9, rmm # perform operation
fnmadd.s f11, f6, f28, f9, rne # perform operation
fnmadd.s f11, f6, f28, f9, rtz # perform operation
fnmadd.s f11, f6, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f6, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x281fe95e # load x3 with value 0x281fe95e
sw x3, 0(x2) # store 0x281fe95e in memory
flw f9, 0(x2) # load 0x281fe95e from memory into f9
fnmadd.s f20, f5, f26, f9, dyn # perform operation
fnmadd.s f20, f5, f26, f9, rdn # perform operation
fnmadd.s f20, f5, f26, f9, rmm # perform operation
fnmadd.s f20, f5, f26, f9, rne # perform operation
fnmadd.s f20, f5, f26, f9, rtz # perform operation
fnmadd.s f20, f5, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f5, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f5, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f5, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f5, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f5, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0x38c6699c # load x3 with value 0x38c6699c
sw x3, 0(x2) # store 0x38c6699c in memory
flw f22, 0(x2) # load 0x38c6699c from memory into f22
fnmadd.s f21, f8, f14, f22, dyn # perform operation
fnmadd.s f21, f8, f14, f22, rdn # perform operation
fnmadd.s f21, f8, f14, f22, rmm # perform operation
fnmadd.s f21, f8, f14, f22, rne # perform operation
fnmadd.s f21, f8, f14, f22, rtz # perform operation
fnmadd.s f21, f8, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f8, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f8, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x0395899a # load x3 with value 0x0395899a
sw x3, 0(x2) # store 0x0395899a in memory
flw f26, 0(x2) # load 0x0395899a from memory into f26
fnmadd.s f21, f6, f1, f26, dyn # perform operation
fnmadd.s f21, f6, f1, f26, rdn # perform operation
fnmadd.s f21, f6, f1, f26, rmm # perform operation
fnmadd.s f21, f6, f1, f26, rne # perform operation
fnmadd.s f21, f6, f1, f26, rtz # perform operation
fnmadd.s f21, f6, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xc8cd5203 # load x3 with value 0xc8cd5203
sw x3, 0(x2) # store 0xc8cd5203 in memory
flw f23, 0(x2) # load 0xc8cd5203 from memory into f23
fnmadd.s f30, f28, f1, f23, dyn # perform operation
fnmadd.s f30, f28, f1, f23, rdn # perform operation
fnmadd.s f30, f28, f1, f23, rmm # perform operation
fnmadd.s f30, f28, f1, f23, rne # perform operation
fnmadd.s f30, f28, f1, f23, rtz # perform operation
fnmadd.s f30, f28, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f28, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f28, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x34a608c9 # load x3 with value 0x34a608c9
sw x3, 0(x2) # store 0x34a608c9 in memory
flw f9, 0(x2) # load 0x34a608c9 from memory into f9
fnmadd.s f30, f21, f18, f9, dyn # perform operation
fnmadd.s f30, f21, f18, f9, rdn # perform operation
fnmadd.s f30, f21, f18, f9, rmm # perform operation
fnmadd.s f30, f21, f18, f9, rne # perform operation
fnmadd.s f30, f21, f18, f9, rtz # perform operation
fnmadd.s f30, f21, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xb9f543c1 # load x3 with value 0xb9f543c1
sw x3, 0(x2) # store 0xb9f543c1 in memory
flw f2, 0(x2) # load 0xb9f543c1 from memory into f2
fnmadd.s f3, f19, f13, f2, dyn # perform operation
fnmadd.s f3, f19, f13, f2, rdn # perform operation
fnmadd.s f3, f19, f13, f2, rmm # perform operation
fnmadd.s f3, f19, f13, f2, rne # perform operation
fnmadd.s f3, f19, f13, f2, rtz # perform operation
fnmadd.s f3, f19, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f19, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f19, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f12, 0(x2) # load 0xffbfffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x8ae130f4 # load x3 with value 0x8ae130f4
sw x3, 0(x2) # store 0x8ae130f4 in memory
flw f13, 0(x2) # load 0x8ae130f4 from memory into f13
fnmadd.s f7, f12, f8, f13, dyn # perform operation
fnmadd.s f7, f12, f8, f13, rdn # perform operation
fnmadd.s f7, f12, f8, f13, rmm # perform operation
fnmadd.s f7, f12, f8, f13, rne # perform operation
fnmadd.s f7, f12, f8, f13, rtz # perform operation
fnmadd.s f7, f12, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f12, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f12, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f12, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f12, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f12, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xe4a5729e # load x3 with value 0xe4a5729e
sw x3, 0(x2) # store 0xe4a5729e in memory
flw f13, 0(x2) # load 0xe4a5729e from memory into f13
fnmadd.s f21, f2, f22, f13, dyn # perform operation
fnmadd.s f21, f2, f22, f13, rdn # perform operation
fnmadd.s f21, f2, f22, f13, rmm # perform operation
fnmadd.s f21, f2, f22, f13, rne # perform operation
fnmadd.s f21, f2, f22, f13, rtz # perform operation
fnmadd.s f21, f2, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f2, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f2, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x523634bd # load x3 with value 0x523634bd
sw x3, 0(x2) # store 0x523634bd in memory
flw f21, 0(x2) # load 0x523634bd from memory into f21
fnmadd.s f22, f20, f12, f21, dyn # perform operation
fnmadd.s f22, f20, f12, f21, rdn # perform operation
fnmadd.s f22, f20, f12, f21, rmm # perform operation
fnmadd.s f22, f20, f12, f21, rne # perform operation
fnmadd.s f22, f20, f12, f21, rtz # perform operation
fnmadd.s f22, f20, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f12, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x59f80fd0 # load x3 with value 0x59f80fd0
sw x3, 0(x2) # store 0x59f80fd0 in memory
flw f26, 0(x2) # load 0x59f80fd0 from memory into f26
fnmadd.s f19, f23, f3, f26, dyn # perform operation
fnmadd.s f19, f23, f3, f26, rdn # perform operation
fnmadd.s f19, f23, f3, f26, rmm # perform operation
fnmadd.s f19, f23, f3, f26, rne # perform operation
fnmadd.s f19, f23, f3, f26, rtz # perform operation
fnmadd.s f19, f23, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f23, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f23, f3, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0xe1be410d # load x3 with value 0xe1be410d
sw x3, 0(x2) # store 0xe1be410d in memory
flw f12, 0(x2) # load 0xe1be410d from memory into f12
fnmadd.s f21, f10, f3, f12, dyn # perform operation
fnmadd.s f21, f10, f3, f12, rdn # perform operation
fnmadd.s f21, f10, f3, f12, rmm # perform operation
fnmadd.s f21, f10, f3, f12, rne # perform operation
fnmadd.s f21, f10, f3, f12, rtz # perform operation
fnmadd.s f21, f10, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f10, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x6bb848c2 # load x3 with value 0x6bb848c2
sw x3, 0(x2) # store 0x6bb848c2 in memory
flw f17, 0(x2) # load 0x6bb848c2 from memory into f17
fnmadd.s f21, f8, f14, f17, dyn # perform operation
fnmadd.s f21, f8, f14, f17, rdn # perform operation
fnmadd.s f21, f8, f14, f17, rmm # perform operation
fnmadd.s f21, f8, f14, f17, rne # perform operation
fnmadd.s f21, f8, f14, f17, rtz # perform operation
fnmadd.s f21, f8, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f8, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f8, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f8, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f8, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f8, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x87aef947 # load x3 with value 0x87aef947
sw x3, 0(x2) # store 0x87aef947 in memory
flw f6, 0(x2) # load 0x87aef947 from memory into f6
fnmadd.s f27, f13, f25, f6, dyn # perform operation
fnmadd.s f27, f13, f25, f6, rdn # perform operation
fnmadd.s f27, f13, f25, f6, rmm # perform operation
fnmadd.s f27, f13, f25, f6, rne # perform operation
fnmadd.s f27, f13, f25, f6, rtz # perform operation
fnmadd.s f27, f13, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f13, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f13, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x34d61064 # load x3 with value 0x34d61064
sw x3, 0(x2) # store 0x34d61064 in memory
flw f20, 0(x2) # load 0x34d61064 from memory into f20
fnmadd.s f1, f7, f3, f20, dyn # perform operation
fnmadd.s f1, f7, f3, f20, rdn # perform operation
fnmadd.s f1, f7, f3, f20, rmm # perform operation
fnmadd.s f1, f7, f3, f20, rne # perform operation
fnmadd.s f1, f7, f3, f20, rtz # perform operation
fnmadd.s f1, f7, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f7, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f7, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f7, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f7, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f7, f3, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x5d8bd169 # load x3 with value 0x5d8bd169
sw x3, 0(x2) # store 0x5d8bd169 in memory
flw f6, 0(x2) # load 0x5d8bd169 from memory into f6
fnmadd.s f20, f27, f21, f6, dyn # perform operation
fnmadd.s f20, f27, f21, f6, rdn # perform operation
fnmadd.s f20, f27, f21, f6, rmm # perform operation
fnmadd.s f20, f27, f21, f6, rne # perform operation
fnmadd.s f20, f27, f21, f6, rtz # perform operation
fnmadd.s f20, f27, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x04e31d81 # load x3 with value 0x04e31d81
sw x3, 0(x2) # store 0x04e31d81 in memory
flw f6, 0(x2) # load 0x04e31d81 from memory into f6
fnmadd.s f13, f8, f20, f6, dyn # perform operation
fnmadd.s f13, f8, f20, f6, rdn # perform operation
fnmadd.s f13, f8, f20, f6, rmm # perform operation
fnmadd.s f13, f8, f20, f6, rne # perform operation
fnmadd.s f13, f8, f20, f6, rtz # perform operation
fnmadd.s f13, f8, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f20, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x3fa16e58 # load x3 with value 0x3fa16e58
sw x3, 0(x2) # store 0x3fa16e58 in memory
flw f13, 0(x2) # load 0x3fa16e58 from memory into f13
fnmadd.s f22, f8, f17, f13, dyn # perform operation
fnmadd.s f22, f8, f17, f13, rdn # perform operation
fnmadd.s f22, f8, f17, f13, rmm # perform operation
fnmadd.s f22, f8, f17, f13, rne # perform operation
fnmadd.s f22, f8, f17, f13, rtz # perform operation
fnmadd.s f22, f8, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f8, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f8, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x5b855020 # load x3 with value 0x5b855020
sw x3, 0(x2) # store 0x5b855020 in memory
flw f21, 0(x2) # load 0x5b855020 from memory into f21
fnmadd.s f12, f23, f26, f21, dyn # perform operation
fnmadd.s f12, f23, f26, f21, rdn # perform operation
fnmadd.s f12, f23, f26, f21, rmm # perform operation
fnmadd.s f12, f23, f26, f21, rne # perform operation
fnmadd.s f12, f23, f26, f21, rtz # perform operation
fnmadd.s f12, f23, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f23, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0xbdb66d11 # load x3 with value 0xbdb66d11
sw x3, 0(x2) # store 0xbdb66d11 in memory
flw f21, 0(x2) # load 0xbdb66d11 from memory into f21
fnmadd.s f29, f27, f16, f21, dyn # perform operation
fnmadd.s f29, f27, f16, f21, rdn # perform operation
fnmadd.s f29, f27, f16, f21, rmm # perform operation
fnmadd.s f29, f27, f16, f21, rne # perform operation
fnmadd.s f29, f27, f16, f21, rtz # perform operation
fnmadd.s f29, f27, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f27, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0xbb676f29 # load x3 with value 0xbb676f29
sw x3, 0(x2) # store 0xbb676f29 in memory
flw f8, 0(x2) # load 0xbb676f29 from memory into f8
fnmadd.s f12, f26, f20, f8, dyn # perform operation
fnmadd.s f12, f26, f20, f8, rdn # perform operation
fnmadd.s f12, f26, f20, f8, rmm # perform operation
fnmadd.s f12, f26, f20, f8, rne # perform operation
fnmadd.s f12, f26, f20, f8, rtz # perform operation
fnmadd.s f12, f26, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f26, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f26, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x3a44bd9e # load x3 with value 0x3a44bd9e
sw x3, 0(x2) # store 0x3a44bd9e in memory
flw f17, 0(x2) # load 0x3a44bd9e from memory into f17
fnmadd.s f10, f7, f27, f17, dyn # perform operation
fnmadd.s f10, f7, f27, f17, rdn # perform operation
fnmadd.s f10, f7, f27, f17, rmm # perform operation
fnmadd.s f10, f7, f27, f17, rne # perform operation
fnmadd.s f10, f7, f27, f17, rtz # perform operation
fnmadd.s f10, f7, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f27, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x1d7bf557 # load x3 with value 0x1d7bf557
sw x3, 0(x2) # store 0x1d7bf557 in memory
flw f17, 0(x2) # load 0x1d7bf557 from memory into f17
fnmadd.s f19, f12, f23, f17, dyn # perform operation
fnmadd.s f19, f12, f23, f17, rdn # perform operation
fnmadd.s f19, f12, f23, f17, rmm # perform operation
fnmadd.s f19, f12, f23, f17, rne # perform operation
fnmadd.s f19, f12, f23, f17, rtz # perform operation
fnmadd.s f19, f12, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f12, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f12, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f12, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f12, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f12, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xa8f7accc # load x3 with value 0xa8f7accc
sw x3, 0(x2) # store 0xa8f7accc in memory
flw f24, 0(x2) # load 0xa8f7accc from memory into f24
fnmadd.s f10, f13, f26, f24, dyn # perform operation
fnmadd.s f10, f13, f26, f24, rdn # perform operation
fnmadd.s f10, f13, f26, f24, rmm # perform operation
fnmadd.s f10, f13, f26, f24, rne # perform operation
fnmadd.s f10, f13, f26, f24, rtz # perform operation
fnmadd.s f10, f13, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f13, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f13, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f13, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f13, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f13, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x72a68ef0 # load x3 with value 0x72a68ef0
sw x3, 0(x2) # store 0x72a68ef0 in memory
flw f13, 0(x2) # load 0x72a68ef0 from memory into f13
fnmadd.s f29, f16, f17, f13, dyn # perform operation
fnmadd.s f29, f16, f17, f13, rdn # perform operation
fnmadd.s f29, f16, f17, f13, rmm # perform operation
fnmadd.s f29, f16, f17, f13, rne # perform operation
fnmadd.s f29, f16, f17, f13, rtz # perform operation
fnmadd.s f29, f16, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x28c5eb77 # load x3 with value 0x28c5eb77
sw x3, 0(x2) # store 0x28c5eb77 in memory
flw f26, 0(x2) # load 0x28c5eb77 from memory into f26
fnmadd.s f21, f3, f28, f26, dyn # perform operation
fnmadd.s f21, f3, f28, f26, rdn # perform operation
fnmadd.s f21, f3, f28, f26, rmm # perform operation
fnmadd.s f21, f3, f28, f26, rne # perform operation
fnmadd.s f21, f3, f28, f26, rtz # perform operation
fnmadd.s f21, f3, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x2e47354f # load x3 with value 0x2e47354f
sw x3, 0(x2) # store 0x2e47354f in memory
flw f2, 0(x2) # load 0x2e47354f from memory into f2
fnmadd.s f7, f23, f12, f2, dyn # perform operation
fnmadd.s f7, f23, f12, f2, rdn # perform operation
fnmadd.s f7, f23, f12, f2, rmm # perform operation
fnmadd.s f7, f23, f12, f2, rne # perform operation
fnmadd.s f7, f23, f12, f2, rtz # perform operation
fnmadd.s f7, f23, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f23, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xbcff829c # load x3 with value 0xbcff829c
sw x3, 0(x2) # store 0xbcff829c in memory
flw f6, 0(x2) # load 0xbcff829c from memory into f6
fnmadd.s f13, f2, f1, f6, dyn # perform operation
fnmadd.s f13, f2, f1, f6, rdn # perform operation
fnmadd.s f13, f2, f1, f6, rmm # perform operation
fnmadd.s f13, f2, f1, f6, rne # perform operation
fnmadd.s f13, f2, f1, f6, rtz # perform operation
fnmadd.s f13, f2, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f1, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x99571785 # load x3 with value 0x99571785
sw x3, 0(x2) # store 0x99571785 in memory
flw f17, 0(x2) # load 0x99571785 from memory into f17
fnmadd.s f22, f16, f13, f17, dyn # perform operation
fnmadd.s f22, f16, f13, f17, rdn # perform operation
fnmadd.s f22, f16, f13, f17, rmm # perform operation
fnmadd.s f22, f16, f13, f17, rne # perform operation
fnmadd.s f22, f16, f13, f17, rtz # perform operation
fnmadd.s f22, f16, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f16, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f16, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x906aaa1f # load x3 with value 0x906aaa1f
sw x3, 0(x2) # store 0x906aaa1f in memory
flw f28, 0(x2) # load 0x906aaa1f from memory into f28
fnmadd.s f2, f24, f3, f28, dyn # perform operation
fnmadd.s f2, f24, f3, f28, rdn # perform operation
fnmadd.s f2, f24, f3, f28, rmm # perform operation
fnmadd.s f2, f24, f3, f28, rne # perform operation
fnmadd.s f2, f24, f3, f28, rtz # perform operation
fnmadd.s f2, f24, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8cd2dd9a # load x3 with value 0x8cd2dd9a
sw x3, 0(x2) # store 0x8cd2dd9a in memory
flw f24, 0(x2) # load 0x8cd2dd9a from memory into f24
fnmadd.s f5, f12, f19, f24, dyn # perform operation
fnmadd.s f5, f12, f19, f24, rdn # perform operation
fnmadd.s f5, f12, f19, f24, rmm # perform operation
fnmadd.s f5, f12, f19, f24, rne # perform operation
fnmadd.s f5, f12, f19, f24, rtz # perform operation
fnmadd.s f5, f12, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f12, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f12, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0xe5ceb45f # load x3 with value 0xe5ceb45f
sw x3, 0(x2) # store 0xe5ceb45f in memory
flw f10, 0(x2) # load 0xe5ceb45f from memory into f10
fnmadd.s f2, f19, f28, f10, dyn # perform operation
fnmadd.s f2, f19, f28, f10, rdn # perform operation
fnmadd.s f2, f19, f28, f10, rmm # perform operation
fnmadd.s f2, f19, f28, f10, rne # perform operation
fnmadd.s f2, f19, f28, f10, rtz # perform operation
fnmadd.s f2, f19, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f19, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f19, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x6a97f0f5 # load x3 with value 0x6a97f0f5
sw x3, 0(x2) # store 0x6a97f0f5 in memory
flw f21, 0(x2) # load 0x6a97f0f5 from memory into f21
fnmadd.s f6, f13, f24, f21, dyn # perform operation
fnmadd.s f6, f13, f24, f21, rdn # perform operation
fnmadd.s f6, f13, f24, f21, rmm # perform operation
fnmadd.s f6, f13, f24, f21, rne # perform operation
fnmadd.s f6, f13, f24, f21, rtz # perform operation
fnmadd.s f6, f13, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f13, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f13, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x563628ca # load x3 with value 0x563628ca
sw x3, 0(x2) # store 0x563628ca in memory
flw f5, 0(x2) # load 0x563628ca from memory into f5
fnmadd.s f15, f7, f31, f5, dyn # perform operation
fnmadd.s f15, f7, f31, f5, rdn # perform operation
fnmadd.s f15, f7, f31, f5, rmm # perform operation
fnmadd.s f15, f7, f31, f5, rne # perform operation
fnmadd.s f15, f7, f31, f5, rtz # perform operation
fnmadd.s f15, f7, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f7, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f7, f31, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x77468390 # load x3 with value 0x77468390
sw x3, 0(x2) # store 0x77468390 in memory
flw f27, 0(x2) # load 0x77468390 from memory into f27
fnmadd.s f29, f23, f30, f27, dyn # perform operation
fnmadd.s f29, f23, f30, f27, rdn # perform operation
fnmadd.s f29, f23, f30, f27, rmm # perform operation
fnmadd.s f29, f23, f30, f27, rne # perform operation
fnmadd.s f29, f23, f30, f27, rtz # perform operation
fnmadd.s f29, f23, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x4f21c6b0 # load x3 with value 0x4f21c6b0
sw x3, 0(x2) # store 0x4f21c6b0 in memory
flw f27, 0(x2) # load 0x4f21c6b0 from memory into f27
fnmadd.s f14, f29, f9, f27, dyn # perform operation
fnmadd.s f14, f29, f9, f27, rdn # perform operation
fnmadd.s f14, f29, f9, f27, rmm # perform operation
fnmadd.s f14, f29, f9, f27, rne # perform operation
fnmadd.s f14, f29, f9, f27, rtz # perform operation
fnmadd.s f14, f29, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f9, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x55be8eff # load x3 with value 0x55be8eff
sw x3, 0(x2) # store 0x55be8eff in memory
flw f16, 0(x2) # load 0x55be8eff from memory into f16
fnmadd.s f1, f13, f20, f16, dyn # perform operation
fnmadd.s f1, f13, f20, f16, rdn # perform operation
fnmadd.s f1, f13, f20, f16, rmm # perform operation
fnmadd.s f1, f13, f20, f16, rne # perform operation
fnmadd.s f1, f13, f20, f16, rtz # perform operation
fnmadd.s f1, f13, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x14c79e55 # load x3 with value 0x14c79e55
sw x3, 0(x2) # store 0x14c79e55 in memory
flw f24, 0(x2) # load 0x14c79e55 from memory into f24
fnmadd.s f15, f8, f28, f24, dyn # perform operation
fnmadd.s f15, f8, f28, f24, rdn # perform operation
fnmadd.s f15, f8, f28, f24, rmm # perform operation
fnmadd.s f15, f8, f28, f24, rne # perform operation
fnmadd.s f15, f8, f28, f24, rtz # perform operation
fnmadd.s f15, f8, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x934af671 # load x3 with value 0x934af671
sw x3, 0(x2) # store 0x934af671 in memory
flw f9, 0(x2) # load 0x934af671 from memory into f9
fnmadd.s f15, f10, f5, f9, dyn # perform operation
fnmadd.s f15, f10, f5, f9, rdn # perform operation
fnmadd.s f15, f10, f5, f9, rmm # perform operation
fnmadd.s f15, f10, f5, f9, rne # perform operation
fnmadd.s f15, f10, f5, f9, rtz # perform operation
fnmadd.s f15, f10, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x7b5eb37e # load x3 with value 0x7b5eb37e
sw x3, 0(x2) # store 0x7b5eb37e in memory
flw f6, 0(x2) # load 0x7b5eb37e from memory into f6
fnmadd.s f9, f5, f11, f6, dyn # perform operation
fnmadd.s f9, f5, f11, f6, rdn # perform operation
fnmadd.s f9, f5, f11, f6, rmm # perform operation
fnmadd.s f9, f5, f11, f6, rne # perform operation
fnmadd.s f9, f5, f11, f6, rtz # perform operation
fnmadd.s f9, f5, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f5, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f5, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f5, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f5, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f5, f11, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xc216af5f # load x3 with value 0xc216af5f
sw x3, 0(x2) # store 0xc216af5f in memory
flw f22, 0(x2) # load 0xc216af5f from memory into f22
fnmadd.s f31, f10, f8, f22, dyn # perform operation
fnmadd.s f31, f10, f8, f22, rdn # perform operation
fnmadd.s f31, f10, f8, f22, rmm # perform operation
fnmadd.s f31, f10, f8, f22, rne # perform operation
fnmadd.s f31, f10, f8, f22, rtz # perform operation
fnmadd.s f31, f10, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f8, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xa4c615ab # load x3 with value 0xa4c615ab
sw x3, 0(x2) # store 0xa4c615ab in memory
flw f17, 0(x2) # load 0xa4c615ab from memory into f17
fnmadd.s f21, f3, f11, f17, dyn # perform operation
fnmadd.s f21, f3, f11, f17, rdn # perform operation
fnmadd.s f21, f3, f11, f17, rmm # perform operation
fnmadd.s f21, f3, f11, f17, rne # perform operation
fnmadd.s f21, f3, f11, f17, rtz # perform operation
fnmadd.s f21, f3, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f3, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f3, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x4873f3c4 # load x3 with value 0x4873f3c4
sw x3, 0(x2) # store 0x4873f3c4 in memory
flw f7, 0(x2) # load 0x4873f3c4 from memory into f7
fnmadd.s f6, f30, f21, f7, dyn # perform operation
fnmadd.s f6, f30, f21, f7, rdn # perform operation
fnmadd.s f6, f30, f21, f7, rmm # perform operation
fnmadd.s f6, f30, f21, f7, rne # perform operation
fnmadd.s f6, f30, f21, f7, rtz # perform operation
fnmadd.s f6, f30, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f30, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f30, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x7ffe6ede # load x3 with value 0x7ffe6ede
sw x3, 0(x2) # store 0x7ffe6ede in memory
flw f17, 0(x2) # load 0x7ffe6ede from memory into f17
fnmadd.s f11, f15, f26, f17, dyn # perform operation
fnmadd.s f11, f15, f26, f17, rdn # perform operation
fnmadd.s f11, f15, f26, f17, rmm # perform operation
fnmadd.s f11, f15, f26, f17, rne # perform operation
fnmadd.s f11, f15, f26, f17, rtz # perform operation
fnmadd.s f11, f15, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x166365fa # load x3 with value 0x166365fa
sw x3, 0(x2) # store 0x166365fa in memory
flw f11, 0(x2) # load 0x166365fa from memory into f11
fnmadd.s f16, f24, f31, f11, dyn # perform operation
fnmadd.s f16, f24, f31, f11, rdn # perform operation
fnmadd.s f16, f24, f31, f11, rmm # perform operation
fnmadd.s f16, f24, f31, f11, rne # perform operation
fnmadd.s f16, f24, f31, f11, rtz # perform operation
fnmadd.s f16, f24, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f24, f31, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xcd975fea # load x3 with value 0xcd975fea
sw x3, 0(x2) # store 0xcd975fea in memory
flw f9, 0(x2) # load 0xcd975fea from memory into f9
fnmadd.s f3, f22, f7, f9, dyn # perform operation
fnmadd.s f3, f22, f7, f9, rdn # perform operation
fnmadd.s f3, f22, f7, f9, rmm # perform operation
fnmadd.s f3, f22, f7, f9, rne # perform operation
fnmadd.s f3, f22, f7, f9, rtz # perform operation
fnmadd.s f3, f22, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f22, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f22, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0xf68c9626 # load x3 with value 0xf68c9626
sw x3, 0(x2) # store 0xf68c9626 in memory
flw f28, 0(x2) # load 0xf68c9626 from memory into f28
fnmadd.s f5, f24, f2, f28, dyn # perform operation
fnmadd.s f5, f24, f2, f28, rdn # perform operation
fnmadd.s f5, f24, f2, f28, rmm # perform operation
fnmadd.s f5, f24, f2, f28, rne # perform operation
fnmadd.s f5, f24, f2, f28, rtz # perform operation
fnmadd.s f5, f24, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0xccc68e5c # load x3 with value 0xccc68e5c
sw x3, 0(x2) # store 0xccc68e5c in memory
flw f3, 0(x2) # load 0xccc68e5c from memory into f3
fnmadd.s f13, f11, f12, f3, dyn # perform operation
fnmadd.s f13, f11, f12, f3, rdn # perform operation
fnmadd.s f13, f11, f12, f3, rmm # perform operation
fnmadd.s f13, f11, f12, f3, rne # perform operation
fnmadd.s f13, f11, f12, f3, rtz # perform operation
fnmadd.s f13, f11, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f12, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x2e26b6b4 # load x3 with value 0x2e26b6b4
sw x3, 0(x2) # store 0x2e26b6b4 in memory
flw f9, 0(x2) # load 0x2e26b6b4 from memory into f9
fnmadd.s f29, f7, f25, f9, dyn # perform operation
fnmadd.s f29, f7, f25, f9, rdn # perform operation
fnmadd.s f29, f7, f25, f9, rmm # perform operation
fnmadd.s f29, f7, f25, f9, rne # perform operation
fnmadd.s f29, f7, f25, f9, rtz # perform operation
fnmadd.s f29, f7, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x8d249e02 # load x3 with value 0x8d249e02
sw x3, 0(x2) # store 0x8d249e02 in memory
flw f12, 0(x2) # load 0x8d249e02 from memory into f12
fnmadd.s f29, f5, f14, f12, dyn # perform operation
fnmadd.s f29, f5, f14, f12, rdn # perform operation
fnmadd.s f29, f5, f14, f12, rmm # perform operation
fnmadd.s f29, f5, f14, f12, rne # perform operation
fnmadd.s f29, f5, f14, f12, rtz # perform operation
fnmadd.s f29, f5, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0xa64f804c # load x3 with value 0xa64f804c
sw x3, 0(x2) # store 0xa64f804c in memory
flw f13, 0(x2) # load 0xa64f804c from memory into f13
fnmadd.s f25, f15, f6, f13, dyn # perform operation
fnmadd.s f25, f15, f6, f13, rdn # perform operation
fnmadd.s f25, f15, f6, f13, rmm # perform operation
fnmadd.s f25, f15, f6, f13, rne # perform operation
fnmadd.s f25, f15, f6, f13, rtz # perform operation
fnmadd.s f25, f15, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x84c1a0f6 # load x3 with value 0x84c1a0f6
sw x3, 0(x2) # store 0x84c1a0f6 in memory
flw f7, 0(x2) # load 0x84c1a0f6 from memory into f7
fnmadd.s f3, f19, f29, f7, dyn # perform operation
fnmadd.s f3, f19, f29, f7, rdn # perform operation
fnmadd.s f3, f19, f29, f7, rmm # perform operation
fnmadd.s f3, f19, f29, f7, rne # perform operation
fnmadd.s f3, f19, f29, f7, rtz # perform operation
fnmadd.s f3, f19, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f19, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xf6b00c51 # load x3 with value 0xf6b00c51
sw x3, 0(x2) # store 0xf6b00c51 in memory
flw f30, 0(x2) # load 0xf6b00c51 from memory into f30
fnmadd.s f12, f28, f7, f30, dyn # perform operation
fnmadd.s f12, f28, f7, f30, rdn # perform operation
fnmadd.s f12, f28, f7, f30, rmm # perform operation
fnmadd.s f12, f28, f7, f30, rne # perform operation
fnmadd.s f12, f28, f7, f30, rtz # perform operation
fnmadd.s f12, f28, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x0ac48518 # load x3 with value 0x0ac48518
sw x3, 0(x2) # store 0x0ac48518 in memory
flw f2, 0(x2) # load 0x0ac48518 from memory into f2
fnmadd.s f22, f25, f29, f2, dyn # perform operation
fnmadd.s f22, f25, f29, f2, rdn # perform operation
fnmadd.s f22, f25, f29, f2, rmm # perform operation
fnmadd.s f22, f25, f29, f2, rne # perform operation
fnmadd.s f22, f25, f29, f2, rtz # perform operation
fnmadd.s f22, f25, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0xcba1664f # load x3 with value 0xcba1664f
sw x3, 0(x2) # store 0xcba1664f in memory
flw f19, 0(x2) # load 0xcba1664f from memory into f19
fnmadd.s f26, f7, f29, f19, dyn # perform operation
fnmadd.s f26, f7, f29, f19, rdn # perform operation
fnmadd.s f26, f7, f29, f19, rmm # perform operation
fnmadd.s f26, f7, f29, f19, rne # perform operation
fnmadd.s f26, f7, f29, f19, rtz # perform operation
fnmadd.s f26, f7, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x710d2c1a # load x3 with value 0x710d2c1a
sw x3, 0(x2) # store 0x710d2c1a in memory
flw f2, 0(x2) # load 0x710d2c1a from memory into f2
fnmadd.s f11, f24, f10, f2, dyn # perform operation
fnmadd.s f11, f24, f10, f2, rdn # perform operation
fnmadd.s f11, f24, f10, f2, rmm # perform operation
fnmadd.s f11, f24, f10, f2, rne # perform operation
fnmadd.s f11, f24, f10, f2, rtz # perform operation
fnmadd.s f11, f24, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x01e2e5cb # load x3 with value 0x01e2e5cb
sw x3, 0(x2) # store 0x01e2e5cb in memory
flw f27, 0(x2) # load 0x01e2e5cb from memory into f27
fnmadd.s f13, f23, f14, f27, dyn # perform operation
fnmadd.s f13, f23, f14, f27, rdn # perform operation
fnmadd.s f13, f23, f14, f27, rmm # perform operation
fnmadd.s f13, f23, f14, f27, rne # perform operation
fnmadd.s f13, f23, f14, f27, rtz # perform operation
fnmadd.s f13, f23, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f23, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f23, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f23, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f23, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f23, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x0a3c8db6 # load x3 with value 0x0a3c8db6
sw x3, 0(x2) # store 0x0a3c8db6 in memory
flw f25, 0(x2) # load 0x0a3c8db6 from memory into f25
fnmadd.s f21, f24, f11, f25, dyn # perform operation
fnmadd.s f21, f24, f11, f25, rdn # perform operation
fnmadd.s f21, f24, f11, f25, rmm # perform operation
fnmadd.s f21, f24, f11, f25, rne # perform operation
fnmadd.s f21, f24, f11, f25, rtz # perform operation
fnmadd.s f21, f24, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f24, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f24, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f24, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f24, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f24, f11, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xbcc91c64 # load x3 with value 0xbcc91c64
sw x3, 0(x2) # store 0xbcc91c64 in memory
flw f3, 0(x2) # load 0xbcc91c64 from memory into f3
fnmadd.s f11, f7, f10, f3, dyn # perform operation
fnmadd.s f11, f7, f10, f3, rdn # perform operation
fnmadd.s f11, f7, f10, f3, rmm # perform operation
fnmadd.s f11, f7, f10, f3, rne # perform operation
fnmadd.s f11, f7, f10, f3, rtz # perform operation
fnmadd.s f11, f7, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x13f022c8 # load x3 with value 0x13f022c8
sw x3, 0(x2) # store 0x13f022c8 in memory
flw f20, 0(x2) # load 0x13f022c8 from memory into f20
fnmadd.s f21, f6, f24, f20, dyn # perform operation
fnmadd.s f21, f6, f24, f20, rdn # perform operation
fnmadd.s f21, f6, f24, f20, rmm # perform operation
fnmadd.s f21, f6, f24, f20, rne # perform operation
fnmadd.s f21, f6, f24, f20, rtz # perform operation
fnmadd.s f21, f6, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f24, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0x6a700dc3 # load x3 with value 0x6a700dc3
sw x3, 0(x2) # store 0x6a700dc3 in memory
flw f15, 0(x2) # load 0x6a700dc3 from memory into f15
fnmadd.s f31, f25, f28, f15, dyn # perform operation
fnmadd.s f31, f25, f28, f15, rdn # perform operation
fnmadd.s f31, f25, f28, f15, rmm # perform operation
fnmadd.s f31, f25, f28, f15, rne # perform operation
fnmadd.s f31, f25, f28, f15, rtz # perform operation
fnmadd.s f31, f25, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f25, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f25, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x98ee45eb # load x3 with value 0x98ee45eb
sw x3, 0(x2) # store 0x98ee45eb in memory
flw f18, 0(x2) # load 0x98ee45eb from memory into f18
fnmadd.s f28, f20, f14, f18, dyn # perform operation
fnmadd.s f28, f20, f14, f18, rdn # perform operation
fnmadd.s f28, f20, f14, f18, rmm # perform operation
fnmadd.s f28, f20, f14, f18, rne # perform operation
fnmadd.s f28, f20, f14, f18, rtz # perform operation
fnmadd.s f28, f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xa4ece09b # load x3 with value 0xa4ece09b
sw x3, 0(x2) # store 0xa4ece09b in memory
flw f10, 0(x2) # load 0xa4ece09b from memory into f10
fnmadd.s f25, f9, f30, f10, dyn # perform operation
fnmadd.s f25, f9, f30, f10, rdn # perform operation
fnmadd.s f25, f9, f30, f10, rmm # perform operation
fnmadd.s f25, f9, f30, f10, rne # perform operation
fnmadd.s f25, f9, f30, f10, rtz # perform operation
fnmadd.s f25, f9, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x579c8502 # load x3 with value 0x579c8502
sw x3, 0(x2) # store 0x579c8502 in memory
flw f23, 0(x2) # load 0x579c8502 from memory into f23
fnmadd.s f20, f14, f9, f23, dyn # perform operation
fnmadd.s f20, f14, f9, f23, rdn # perform operation
fnmadd.s f20, f14, f9, f23, rmm # perform operation
fnmadd.s f20, f14, f9, f23, rne # perform operation
fnmadd.s f20, f14, f9, f23, rtz # perform operation
fnmadd.s f20, f14, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x1604515d # load x3 with value 0x1604515d
sw x3, 0(x2) # store 0x1604515d in memory
flw f13, 0(x2) # load 0x1604515d from memory into f13
fnmadd.s f8, f2, f7, f13, dyn # perform operation
fnmadd.s f8, f2, f7, f13, rdn # perform operation
fnmadd.s f8, f2, f7, f13, rmm # perform operation
fnmadd.s f8, f2, f7, f13, rne # perform operation
fnmadd.s f8, f2, f7, f13, rtz # perform operation
fnmadd.s f8, f2, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f2, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f2, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x24bc2cc6 # load x3 with value 0x24bc2cc6
sw x3, 0(x2) # store 0x24bc2cc6 in memory
flw f7, 0(x2) # load 0x24bc2cc6 from memory into f7
fnmadd.s f27, f8, f6, f7, dyn # perform operation
fnmadd.s f27, f8, f6, f7, rdn # perform operation
fnmadd.s f27, f8, f6, f7, rmm # perform operation
fnmadd.s f27, f8, f6, f7, rne # perform operation
fnmadd.s f27, f8, f6, f7, rtz # perform operation
fnmadd.s f27, f8, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x1d6be367 # load x3 with value 0x1d6be367
sw x3, 0(x2) # store 0x1d6be367 in memory
flw f16, 0(x2) # load 0x1d6be367 from memory into f16
fnmadd.s f29, f23, f9, f16, dyn # perform operation
fnmadd.s f29, f23, f9, f16, rdn # perform operation
fnmadd.s f29, f23, f9, f16, rmm # perform operation
fnmadd.s f29, f23, f9, f16, rne # perform operation
fnmadd.s f29, f23, f9, f16, rtz # perform operation
fnmadd.s f29, f23, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f23, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x8b06a103 # load x3 with value 0x8b06a103
sw x3, 0(x2) # store 0x8b06a103 in memory
flw f9, 0(x2) # load 0x8b06a103 from memory into f9
fnmadd.s f29, f2, f3, f9, dyn # perform operation
fnmadd.s f29, f2, f3, f9, rdn # perform operation
fnmadd.s f29, f2, f3, f9, rmm # perform operation
fnmadd.s f29, f2, f3, f9, rne # perform operation
fnmadd.s f29, f2, f3, f9, rtz # perform operation
fnmadd.s f29, f2, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f2, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0xb1f1d1c1 # load x3 with value 0xb1f1d1c1
sw x3, 0(x2) # store 0xb1f1d1c1 in memory
flw f18, 0(x2) # load 0xb1f1d1c1 from memory into f18
fnmadd.s f31, f2, f23, f18, dyn # perform operation
fnmadd.s f31, f2, f23, f18, rdn # perform operation
fnmadd.s f31, f2, f23, f18, rmm # perform operation
fnmadd.s f31, f2, f23, f18, rne # perform operation
fnmadd.s f31, f2, f23, f18, rtz # perform operation
fnmadd.s f31, f2, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f2, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f2, f23, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x84eb8fe0 # load x3 with value 0x84eb8fe0
sw x3, 0(x2) # store 0x84eb8fe0 in memory
flw f18, 0(x2) # load 0x84eb8fe0 from memory into f18
fnmadd.s f24, f9, f17, f18, dyn # perform operation
fnmadd.s f24, f9, f17, f18, rdn # perform operation
fnmadd.s f24, f9, f17, f18, rmm # perform operation
fnmadd.s f24, f9, f17, f18, rne # perform operation
fnmadd.s f24, f9, f17, f18, rtz # perform operation
fnmadd.s f24, f9, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f17, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xb6fa489d # load x3 with value 0xb6fa489d
sw x3, 0(x2) # store 0xb6fa489d in memory
flw f5, 0(x2) # load 0xb6fa489d from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.s f12, f17, f5, f28, dyn # perform operation
fnmadd.s f12, f17, f5, f28, rdn # perform operation
fnmadd.s f12, f17, f5, f28, rmm # perform operation
fnmadd.s f12, f17, f5, f28, rne # perform operation
fnmadd.s f12, f17, f5, f28, rtz # perform operation
fnmadd.s f12, f17, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f17, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f17, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x7b112af2 # load x3 with value 0x7b112af2
sw x3, 0(x2) # store 0x7b112af2 in memory
flw f12, 0(x2) # load 0x7b112af2 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmadd.s f5, f13, f12, f30, dyn # perform operation
fnmadd.s f5, f13, f12, f30, rdn # perform operation
fnmadd.s f5, f13, f12, f30, rmm # perform operation
fnmadd.s f5, f13, f12, f30, rne # perform operation
fnmadd.s f5, f13, f12, f30, rtz # perform operation
fnmadd.s f5, f13, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f13, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x017eabb5 # load x3 with value 0x017eabb5
sw x3, 0(x2) # store 0x017eabb5 in memory
flw f13, 0(x2) # load 0x017eabb5 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmadd.s f15, f18, f13, f24, dyn # perform operation
fnmadd.s f15, f18, f13, f24, rdn # perform operation
fnmadd.s f15, f18, f13, f24, rmm # perform operation
fnmadd.s f15, f18, f13, f24, rne # perform operation
fnmadd.s f15, f18, f13, f24, rtz # perform operation
fnmadd.s f15, f18, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x19873a11 # load x3 with value 0x19873a11
sw x3, 0(x2) # store 0x19873a11 in memory
flw f16, 0(x2) # load 0x19873a11 from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fnmadd.s f3, f12, f16, f31, dyn # perform operation
fnmadd.s f3, f12, f16, f31, rdn # perform operation
fnmadd.s f3, f12, f16, f31, rmm # perform operation
fnmadd.s f3, f12, f16, f31, rne # perform operation
fnmadd.s f3, f12, f16, f31, rtz # perform operation
fnmadd.s f3, f12, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x4c24231d # load x3 with value 0x4c24231d
sw x3, 0(x2) # store 0x4c24231d in memory
flw f9, 0(x2) # load 0x4c24231d from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fnmadd.s f11, f31, f9, f16, dyn # perform operation
fnmadd.s f11, f31, f9, f16, rdn # perform operation
fnmadd.s f11, f31, f9, f16, rmm # perform operation
fnmadd.s f11, f31, f9, f16, rne # perform operation
fnmadd.s f11, f31, f9, f16, rtz # perform operation
fnmadd.s f11, f31, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f31, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f31, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f31, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f31, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f31, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xcfbbac65 # load x3 with value 0xcfbbac65
sw x3, 0(x2) # store 0xcfbbac65 in memory
flw f17, 0(x2) # load 0xcfbbac65 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f21, f22, f17, f9, dyn # perform operation
fnmadd.s f21, f22, f17, f9, rdn # perform operation
fnmadd.s f21, f22, f17, f9, rmm # perform operation
fnmadd.s f21, f22, f17, f9, rne # perform operation
fnmadd.s f21, f22, f17, f9, rtz # perform operation
fnmadd.s f21, f22, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f22, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f22, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x9e3db97a # load x3 with value 0x9e3db97a
sw x3, 0(x2) # store 0x9e3db97a in memory
flw f26, 0(x2) # load 0x9e3db97a from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fnmadd.s f5, f25, f26, f29, dyn # perform operation
fnmadd.s f5, f25, f26, f29, rdn # perform operation
fnmadd.s f5, f25, f26, f29, rmm # perform operation
fnmadd.s f5, f25, f26, f29, rne # perform operation
fnmadd.s f5, f25, f26, f29, rtz # perform operation
fnmadd.s f5, f25, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x9fdf9257 # load x3 with value 0x9fdf9257
sw x3, 0(x2) # store 0x9fdf9257 in memory
flw f24, 0(x2) # load 0x9fdf9257 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fnmadd.s f2, f22, f24, f6, dyn # perform operation
fnmadd.s f2, f22, f24, f6, rdn # perform operation
fnmadd.s f2, f22, f24, f6, rmm # perform operation
fnmadd.s f2, f22, f24, f6, rne # perform operation
fnmadd.s f2, f22, f24, f6, rtz # perform operation
fnmadd.s f2, f22, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f22, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f22, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x99125ef7 # load x3 with value 0x99125ef7
sw x3, 0(x2) # store 0x99125ef7 in memory
flw f21, 0(x2) # load 0x99125ef7 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fnmadd.s f7, f25, f21, f22, dyn # perform operation
fnmadd.s f7, f25, f21, f22, rdn # perform operation
fnmadd.s f7, f25, f21, f22, rmm # perform operation
fnmadd.s f7, f25, f21, f22, rne # perform operation
fnmadd.s f7, f25, f21, f22, rtz # perform operation
fnmadd.s f7, f25, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f25, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f25, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xcca09c14 # load x3 with value 0xcca09c14
sw x3, 0(x2) # store 0xcca09c14 in memory
flw f9, 0(x2) # load 0xcca09c14 from memory into f9
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fnmadd.s f16, f31, f9, f21, dyn # perform operation
fnmadd.s f16, f31, f9, f21, rdn # perform operation
fnmadd.s f16, f31, f9, f21, rmm # perform operation
fnmadd.s f16, f31, f9, f21, rne # perform operation
fnmadd.s f16, f31, f9, f21, rtz # perform operation
fnmadd.s f16, f31, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f31, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f31, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f31, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f31, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f31, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xee14b372 # load x3 with value 0xee14b372
sw x3, 0(x2) # store 0xee14b372 in memory
flw f3, 0(x2) # load 0xee14b372 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fnmadd.s f9, f22, f3, f17, dyn # perform operation
fnmadd.s f9, f22, f3, f17, rdn # perform operation
fnmadd.s f9, f22, f3, f17, rmm # perform operation
fnmadd.s f9, f22, f3, f17, rne # perform operation
fnmadd.s f9, f22, f3, f17, rtz # perform operation
fnmadd.s f9, f22, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f22, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f22, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f22, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f22, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f22, f3, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xb615c50a # load x3 with value 0xb615c50a
sw x3, 0(x2) # store 0xb615c50a in memory
flw f10, 0(x2) # load 0xb615c50a from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fnmadd.s f11, f19, f10, f25, dyn # perform operation
fnmadd.s f11, f19, f10, f25, rdn # perform operation
fnmadd.s f11, f19, f10, f25, rmm # perform operation
fnmadd.s f11, f19, f10, f25, rne # perform operation
fnmadd.s f11, f19, f10, f25, rtz # perform operation
fnmadd.s f11, f19, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x0bab36eb # load x3 with value 0x0bab36eb
sw x3, 0(x2) # store 0x0bab36eb in memory
flw f24, 0(x2) # load 0x0bab36eb from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fnmadd.s f9, f14, f24, f5, dyn # perform operation
fnmadd.s f9, f14, f24, f5, rdn # perform operation
fnmadd.s f9, f14, f24, f5, rmm # perform operation
fnmadd.s f9, f14, f24, f5, rne # perform operation
fnmadd.s f9, f14, f24, f5, rtz # perform operation
fnmadd.s f9, f14, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f14, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f14, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x71aea2fe # load x3 with value 0x71aea2fe
sw x3, 0(x2) # store 0x71aea2fe in memory
flw f10, 0(x2) # load 0x71aea2fe from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f22, f1, f10, f15, dyn # perform operation
fnmadd.s f22, f1, f10, f15, rdn # perform operation
fnmadd.s f22, f1, f10, f15, rmm # perform operation
fnmadd.s f22, f1, f10, f15, rne # perform operation
fnmadd.s f22, f1, f10, f15, rtz # perform operation
fnmadd.s f22, f1, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x47e94a63 # load x3 with value 0x47e94a63
sw x3, 0(x2) # store 0x47e94a63 in memory
flw f22, 0(x2) # load 0x47e94a63 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fnmadd.s f19, f2, f22, f21, dyn # perform operation
fnmadd.s f19, f2, f22, f21, rdn # perform operation
fnmadd.s f19, f2, f22, f21, rmm # perform operation
fnmadd.s f19, f2, f22, f21, rne # perform operation
fnmadd.s f19, f2, f22, f21, rtz # perform operation
fnmadd.s f19, f2, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f2, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f2, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x8ec60640 # load x3 with value 0x8ec60640
sw x3, 0(x2) # store 0x8ec60640 in memory
flw f6, 0(x2) # load 0x8ec60640 from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fnmadd.s f1, f29, f6, f7, dyn # perform operation
fnmadd.s f1, f29, f6, f7, rdn # perform operation
fnmadd.s f1, f29, f6, f7, rmm # perform operation
fnmadd.s f1, f29, f6, f7, rne # perform operation
fnmadd.s f1, f29, f6, f7, rtz # perform operation
fnmadd.s f1, f29, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f6, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
la x2, scratch
li x3, 0xbddd68b1 # load x3 with value 0xbddd68b1
sw x3, 0(x2) # store 0xbddd68b1 in memory
flw f1, 0(x2) # load 0xbddd68b1 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.s f25, f19, f1, f6, dyn # perform operation
fnmadd.s f25, f19, f1, f6, rdn # perform operation
fnmadd.s f25, f19, f1, f6, rmm # perform operation
fnmadd.s f25, f19, f1, f6, rne # perform operation
fnmadd.s f25, f19, f1, f6, rtz # perform operation
fnmadd.s f25, f19, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f19, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f19, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0x7390586d # load x3 with value 0x7390586d
sw x3, 0(x2) # store 0x7390586d in memory
flw f3, 0(x2) # load 0x7390586d from memory into f3
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fnmadd.s f12, f29, f3, f8, dyn # perform operation
fnmadd.s f12, f29, f3, f8, rdn # perform operation
fnmadd.s f12, f29, f3, f8, rmm # perform operation
fnmadd.s f12, f29, f3, f8, rne # perform operation
fnmadd.s f12, f29, f3, f8, rtz # perform operation
fnmadd.s f12, f29, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xdf60e1be # load x3 with value 0xdf60e1be
sw x3, 0(x2) # store 0xdf60e1be in memory
flw f24, 0(x2) # load 0xdf60e1be from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmadd.s f18, f29, f24, f11, dyn # perform operation
fnmadd.s f18, f29, f24, f11, rdn # perform operation
fnmadd.s f18, f29, f24, f11, rmm # perform operation
fnmadd.s f18, f29, f24, f11, rne # perform operation
fnmadd.s f18, f29, f24, f11, rtz # perform operation
fnmadd.s f18, f29, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f24, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x68810b3a # load x3 with value 0x68810b3a
sw x3, 0(x2) # store 0x68810b3a in memory
flw f31, 0(x2) # load 0x68810b3a from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fnmadd.s f5, f26, f31, f9, dyn # perform operation
fnmadd.s f5, f26, f31, f9, rdn # perform operation
fnmadd.s f5, f26, f31, f9, rmm # perform operation
fnmadd.s f5, f26, f31, f9, rne # perform operation
fnmadd.s f5, f26, f31, f9, rtz # perform operation
fnmadd.s f5, f26, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f26, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f26, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x6e70153e # load x3 with value 0x6e70153e
sw x3, 0(x2) # store 0x6e70153e in memory
flw f19, 0(x2) # load 0x6e70153e from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fnmadd.s f9, f30, f19, f15, dyn # perform operation
fnmadd.s f9, f30, f19, f15, rdn # perform operation
fnmadd.s f9, f30, f19, f15, rmm # perform operation
fnmadd.s f9, f30, f19, f15, rne # perform operation
fnmadd.s f9, f30, f19, f15, rtz # perform operation
fnmadd.s f9, f30, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f30, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f30, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xf814a98b # load x3 with value 0xf814a98b
sw x3, 0(x2) # store 0xf814a98b in memory
flw f21, 0(x2) # load 0xf814a98b from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fnmadd.s f29, f5, f21, f28, dyn # perform operation
fnmadd.s f29, f5, f21, f28, rdn # perform operation
fnmadd.s f29, f5, f21, f28, rmm # perform operation
fnmadd.s f29, f5, f21, f28, rne # perform operation
fnmadd.s f29, f5, f21, f28, rtz # perform operation
fnmadd.s f29, f5, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0xc0c39d0a # load x3 with value 0xc0c39d0a
sw x3, 0(x2) # store 0xc0c39d0a in memory
flw f26, 0(x2) # load 0xc0c39d0a from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
fnmadd.s f18, f13, f26, f5, dyn # perform operation
fnmadd.s f18, f13, f26, f5, rdn # perform operation
fnmadd.s f18, f13, f26, f5, rmm # perform operation
fnmadd.s f18, f13, f26, f5, rne # perform operation
fnmadd.s f18, f13, f26, f5, rtz # perform operation
fnmadd.s f18, f13, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x5c98935b # load x3 with value 0x5c98935b
sw x3, 0(x2) # store 0x5c98935b in memory
flw f18, 0(x2) # load 0x5c98935b from memory into f18
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fnmadd.s f15, f21, f18, f10, dyn # perform operation
fnmadd.s f15, f21, f18, f10, rdn # perform operation
fnmadd.s f15, f21, f18, f10, rmm # perform operation
fnmadd.s f15, f21, f18, f10, rne # perform operation
fnmadd.s f15, f21, f18, f10, rtz # perform operation
fnmadd.s f15, f21, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f21, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f21, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f21, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f21, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f21, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x802302c0 # load x3 with value 0x802302c0
sw x3, 0(x2) # store 0x802302c0 in memory
flw f19, 0(x2) # load 0x802302c0 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmadd.s f29, f22, f19, f25, dyn # perform operation
fnmadd.s f29, f22, f19, f25, rdn # perform operation
fnmadd.s f29, f22, f19, f25, rmm # perform operation
fnmadd.s f29, f22, f19, f25, rne # perform operation
fnmadd.s f29, f22, f19, f25, rtz # perform operation
fnmadd.s f29, f22, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f22, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f22, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f22, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f22, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f22, f19, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xb0e7d06f # load x3 with value 0xb0e7d06f
sw x3, 0(x2) # store 0xb0e7d06f in memory
flw f19, 0(x2) # load 0xb0e7d06f from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fnmadd.s f15, f26, f19, f18, dyn # perform operation
fnmadd.s f15, f26, f19, f18, rdn # perform operation
fnmadd.s f15, f26, f19, f18, rmm # perform operation
fnmadd.s f15, f26, f19, f18, rne # perform operation
fnmadd.s f15, f26, f19, f18, rtz # perform operation
fnmadd.s f15, f26, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f26, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0x61b9f480 # load x3 with value 0x61b9f480
sw x3, 0(x2) # store 0x61b9f480 in memory
flw f23, 0(x2) # load 0x61b9f480 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f14, f24, f23, f28, dyn # perform operation
fnmadd.s f14, f24, f23, f28, rdn # perform operation
fnmadd.s f14, f24, f23, f28, rmm # perform operation
fnmadd.s f14, f24, f23, f28, rne # perform operation
fnmadd.s f14, f24, f23, f28, rtz # perform operation
fnmadd.s f14, f24, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f24, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f24, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x7bb16255 # load x3 with value 0x7bb16255
sw x3, 0(x2) # store 0x7bb16255 in memory
flw f3, 0(x2) # load 0x7bb16255 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fnmadd.s f11, f16, f3, f29, dyn # perform operation
fnmadd.s f11, f16, f3, f29, rdn # perform operation
fnmadd.s f11, f16, f3, f29, rmm # perform operation
fnmadd.s f11, f16, f3, f29, rne # perform operation
fnmadd.s f11, f16, f3, f29, rtz # perform operation
fnmadd.s f11, f16, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f16, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f16, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x7f9f489b # load x3 with value 0x7f9f489b
sw x3, 0(x2) # store 0x7f9f489b in memory
flw f31, 0(x2) # load 0x7f9f489b from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmadd.s f27, f19, f31, f16, dyn # perform operation
fnmadd.s f27, f19, f31, f16, rdn # perform operation
fnmadd.s f27, f19, f31, f16, rmm # perform operation
fnmadd.s f27, f19, f31, f16, rne # perform operation
fnmadd.s f27, f19, f31, f16, rtz # perform operation
fnmadd.s f27, f19, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xa24c09ea # load x3 with value 0xa24c09ea
sw x3, 0(x2) # store 0xa24c09ea in memory
flw f27, 0(x2) # load 0xa24c09ea from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmadd.s f23, f2, f27, f6, dyn # perform operation
fnmadd.s f23, f2, f27, f6, rdn # perform operation
fnmadd.s f23, f2, f27, f6, rmm # perform operation
fnmadd.s f23, f2, f27, f6, rne # perform operation
fnmadd.s f23, f2, f27, f6, rtz # perform operation
fnmadd.s f23, f2, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x8cd7dc72 # load x3 with value 0x8cd7dc72
sw x3, 0(x2) # store 0x8cd7dc72 in memory
flw f17, 0(x2) # load 0x8cd7dc72 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fnmadd.s f13, f14, f17, f20, dyn # perform operation
fnmadd.s f13, f14, f17, f20, rdn # perform operation
fnmadd.s f13, f14, f17, f20, rmm # perform operation
fnmadd.s f13, f14, f17, f20, rne # perform operation
fnmadd.s f13, f14, f17, f20, rtz # perform operation
fnmadd.s f13, f14, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f14, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f14, f17, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x415f3e2d # load x3 with value 0x415f3e2d
sw x3, 0(x2) # store 0x415f3e2d in memory
flw f2, 0(x2) # load 0x415f3e2d from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
fnmadd.s f26, f7, f2, f28, dyn # perform operation
fnmadd.s f26, f7, f2, f28, rdn # perform operation
fnmadd.s f26, f7, f2, f28, rmm # perform operation
fnmadd.s f26, f7, f2, f28, rne # perform operation
fnmadd.s f26, f7, f2, f28, rtz # perform operation
fnmadd.s f26, f7, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x3c0934f8 # load x3 with value 0x3c0934f8
sw x3, 0(x2) # store 0x3c0934f8 in memory
flw f20, 0(x2) # load 0x3c0934f8 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmadd.s f8, f9, f20, f29, dyn # perform operation
fnmadd.s f8, f9, f20, f29, rdn # perform operation
fnmadd.s f8, f9, f20, f29, rmm # perform operation
fnmadd.s f8, f9, f20, f29, rne # perform operation
fnmadd.s f8, f9, f20, f29, rtz # perform operation
fnmadd.s f8, f9, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f9, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x08a9767e # load x3 with value 0x08a9767e
sw x3, 0(x2) # store 0x08a9767e in memory
flw f6, 0(x2) # load 0x08a9767e from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmadd.s f11, f22, f6, f2, dyn # perform operation
fnmadd.s f11, f22, f6, f2, rdn # perform operation
fnmadd.s f11, f22, f6, f2, rmm # perform operation
fnmadd.s f11, f22, f6, f2, rne # perform operation
fnmadd.s f11, f22, f6, f2, rtz # perform operation
fnmadd.s f11, f22, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x039947e1 # load x3 with value 0x039947e1
sw x3, 0(x2) # store 0x039947e1 in memory
flw f19, 0(x2) # load 0x039947e1 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fnmadd.s f25, f22, f19, f6, dyn # perform operation
fnmadd.s f25, f22, f19, f6, rdn # perform operation
fnmadd.s f25, f22, f19, f6, rmm # perform operation
fnmadd.s f25, f22, f19, f6, rne # perform operation
fnmadd.s f25, f22, f19, f6, rtz # perform operation
fnmadd.s f25, f22, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0xed468004 # load x3 with value 0xed468004
sw x3, 0(x2) # store 0xed468004 in memory
flw f11, 0(x2) # load 0xed468004 from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmadd.s f28, f3, f11, f10, dyn # perform operation
fnmadd.s f28, f3, f11, f10, rdn # perform operation
fnmadd.s f28, f3, f11, f10, rmm # perform operation
fnmadd.s f28, f3, f11, f10, rne # perform operation
fnmadd.s f28, f3, f11, f10, rtz # perform operation
fnmadd.s f28, f3, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xa5de4357 # load x3 with value 0xa5de4357
sw x3, 0(x2) # store 0xa5de4357 in memory
flw f2, 0(x2) # load 0xa5de4357 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmadd.s f25, f18, f2, f21, dyn # perform operation
fnmadd.s f25, f18, f2, f21, rdn # perform operation
fnmadd.s f25, f18, f2, f21, rmm # perform operation
fnmadd.s f25, f18, f2, f21, rne # perform operation
fnmadd.s f25, f18, f2, f21, rtz # perform operation
fnmadd.s f25, f18, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f18, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f18, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xc85dfb45 # load x3 with value 0xc85dfb45
sw x3, 0(x2) # store 0xc85dfb45 in memory
flw f10, 0(x2) # load 0xc85dfb45 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fnmadd.s f28, f8, f10, f27, dyn # perform operation
fnmadd.s f28, f8, f10, f27, rdn # perform operation
fnmadd.s f28, f8, f10, f27, rmm # perform operation
fnmadd.s f28, f8, f10, f27, rne # perform operation
fnmadd.s f28, f8, f10, f27, rtz # perform operation
fnmadd.s f28, f8, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f8, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f8, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f8, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f8, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f8, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xa9bc62d9 # load x3 with value 0xa9bc62d9
sw x3, 0(x2) # store 0xa9bc62d9 in memory
flw f2, 0(x2) # load 0xa9bc62d9 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f11, f23, f2, f27, dyn # perform operation
fnmadd.s f11, f23, f2, f27, rdn # perform operation
fnmadd.s f11, f23, f2, f27, rmm # perform operation
fnmadd.s f11, f23, f2, f27, rne # perform operation
fnmadd.s f11, f23, f2, f27, rtz # perform operation
fnmadd.s f11, f23, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f23, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f23, f2, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x8d50ee3f # load x3 with value 0x8d50ee3f
sw x3, 0(x2) # store 0x8d50ee3f in memory
flw f23, 0(x2) # load 0x8d50ee3f from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fnmadd.s f31, f27, f23, f18, dyn # perform operation
fnmadd.s f31, f27, f23, f18, rdn # perform operation
fnmadd.s f31, f27, f23, f18, rmm # perform operation
fnmadd.s f31, f27, f23, f18, rne # perform operation
fnmadd.s f31, f27, f23, f18, rtz # perform operation
fnmadd.s f31, f27, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x845d9188 # load x3 with value 0x845d9188
sw x3, 0(x2) # store 0x845d9188 in memory
flw f15, 0(x2) # load 0x845d9188 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmadd.s f23, f27, f15, f11, dyn # perform operation
fnmadd.s f23, f27, f15, f11, rdn # perform operation
fnmadd.s f23, f27, f15, f11, rmm # perform operation
fnmadd.s f23, f27, f15, f11, rne # perform operation
fnmadd.s f23, f27, f15, f11, rtz # perform operation
fnmadd.s f23, f27, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f27, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f27, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x86497bd8 # load x3 with value 0x86497bd8
sw x3, 0(x2) # store 0x86497bd8 in memory
flw f9, 0(x2) # load 0x86497bd8 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmadd.s f11, f26, f9, f29, dyn # perform operation
fnmadd.s f11, f26, f9, f29, rdn # perform operation
fnmadd.s f11, f26, f9, f29, rmm # perform operation
fnmadd.s f11, f26, f9, f29, rne # perform operation
fnmadd.s f11, f26, f9, f29, rtz # perform operation
fnmadd.s f11, f26, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f26, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f26, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f26, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f26, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f26, f9, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x782c8e86 # load x3 with value 0x782c8e86
sw x3, 0(x2) # store 0x782c8e86 in memory
flw f29, 0(x2) # load 0x782c8e86 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fnmadd.s f12, f16, f29, f17, dyn # perform operation
fnmadd.s f12, f16, f29, f17, rdn # perform operation
fnmadd.s f12, f16, f29, f17, rmm # perform operation
fnmadd.s f12, f16, f29, f17, rne # perform operation
fnmadd.s f12, f16, f29, f17, rtz # perform operation
fnmadd.s f12, f16, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f16, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f16, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0xd4f5f670 # load x3 with value 0xd4f5f670
sw x3, 0(x2) # store 0xd4f5f670 in memory
flw f3, 0(x2) # load 0xd4f5f670 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f31, f20, f3, f14, dyn # perform operation
fnmadd.s f31, f20, f3, f14, rdn # perform operation
fnmadd.s f31, f20, f3, f14, rmm # perform operation
fnmadd.s f31, f20, f3, f14, rne # perform operation
fnmadd.s f31, f20, f3, f14, rtz # perform operation
fnmadd.s f31, f20, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
la x2, scratch
li x3, 0x779dbf62 # load x3 with value 0x779dbf62
sw x3, 0(x2) # store 0x779dbf62 in memory
flw f30, 0(x2) # load 0x779dbf62 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fnmadd.s f28, f29, f30, f12, dyn # perform operation
fnmadd.s f28, f29, f30, f12, rdn # perform operation
fnmadd.s f28, f29, f30, f12, rmm # perform operation
fnmadd.s f28, f29, f30, f12, rne # perform operation
fnmadd.s f28, f29, f30, f12, rtz # perform operation
fnmadd.s f28, f29, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xb38f11ef # load x3 with value 0xb38f11ef
sw x3, 0(x2) # store 0xb38f11ef in memory
flw f13, 0(x2) # load 0xb38f11ef from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fnmadd.s f27, f28, f13, f5, dyn # perform operation
fnmadd.s f27, f28, f13, f5, rdn # perform operation
fnmadd.s f27, f28, f13, f5, rmm # perform operation
fnmadd.s f27, f28, f13, f5, rne # perform operation
fnmadd.s f27, f28, f13, f5, rtz # perform operation
fnmadd.s f27, f28, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f28, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f28, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x08346e84 # load x3 with value 0x08346e84
sw x3, 0(x2) # store 0x08346e84 in memory
flw f24, 0(x2) # load 0x08346e84 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f13, f25, f24, f20, dyn # perform operation
fnmadd.s f13, f25, f24, f20, rdn # perform operation
fnmadd.s f13, f25, f24, f20, rmm # perform operation
fnmadd.s f13, f25, f24, f20, rne # perform operation
fnmadd.s f13, f25, f24, f20, rtz # perform operation
fnmadd.s f13, f25, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0xd8b35f9c # load x3 with value 0xd8b35f9c
sw x3, 0(x2) # store 0xd8b35f9c in memory
flw f22, 0(x2) # load 0xd8b35f9c from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fnmadd.s f18, f12, f22, f21, dyn # perform operation
fnmadd.s f18, f12, f22, f21, rdn # perform operation
fnmadd.s f18, f12, f22, f21, rmm # perform operation
fnmadd.s f18, f12, f22, f21, rne # perform operation
fnmadd.s f18, f12, f22, f21, rtz # perform operation
fnmadd.s f18, f12, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f12, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f12, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0x12b9b7d7 # load x3 with value 0x12b9b7d7
sw x3, 0(x2) # store 0x12b9b7d7 in memory
flw f21, 0(x2) # load 0x12b9b7d7 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmadd.s f9, f19, f21, f20, dyn # perform operation
fnmadd.s f9, f19, f21, f20, rdn # perform operation
fnmadd.s f9, f19, f21, f20, rmm # perform operation
fnmadd.s f9, f19, f21, f20, rne # perform operation
fnmadd.s f9, f19, f21, f20, rtz # perform operation
fnmadd.s f9, f19, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x2387eda7 # load x3 with value 0x2387eda7
sw x3, 0(x2) # store 0x2387eda7 in memory
flw f21, 0(x2) # load 0x2387eda7 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fnmadd.s f22, f15, f21, f6, dyn # perform operation
fnmadd.s f22, f15, f21, f6, rdn # perform operation
fnmadd.s f22, f15, f21, f6, rmm # perform operation
fnmadd.s f22, f15, f21, f6, rne # perform operation
fnmadd.s f22, f15, f21, f6, rtz # perform operation
fnmadd.s f22, f15, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f15, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f15, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f15, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f15, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f15, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x4f944b4a # load x3 with value 0x4f944b4a
sw x3, 0(x2) # store 0x4f944b4a in memory
flw f26, 0(x2) # load 0x4f944b4a from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fnmadd.s f10, f28, f26, f9, dyn # perform operation
fnmadd.s f10, f28, f26, f9, rdn # perform operation
fnmadd.s f10, f28, f26, f9, rmm # perform operation
fnmadd.s f10, f28, f26, f9, rne # perform operation
fnmadd.s f10, f28, f26, f9, rtz # perform operation
fnmadd.s f10, f28, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f26, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xcf0f337d # load x3 with value 0xcf0f337d
sw x3, 0(x2) # store 0xcf0f337d in memory
flw f11, 0(x2) # load 0xcf0f337d from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f5, f23, f11, f1, dyn # perform operation
fnmadd.s f5, f23, f11, f1, rdn # perform operation
fnmadd.s f5, f23, f11, f1, rmm # perform operation
fnmadd.s f5, f23, f11, f1, rne # perform operation
fnmadd.s f5, f23, f11, f1, rtz # perform operation
fnmadd.s f5, f23, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xbf3dd4b7 # load x3 with value 0xbf3dd4b7
sw x3, 0(x2) # store 0xbf3dd4b7 in memory
flw f30, 0(x2) # load 0xbf3dd4b7 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f10, f13, f30, f1, dyn # perform operation
fnmadd.s f10, f13, f30, f1, rdn # perform operation
fnmadd.s f10, f13, f30, f1, rmm # perform operation
fnmadd.s f10, f13, f30, f1, rne # perform operation
fnmadd.s f10, f13, f30, f1, rtz # perform operation
fnmadd.s f10, f13, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f13, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f13, f30, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xc72c26cc # load x3 with value 0xc72c26cc
sw x3, 0(x2) # store 0xc72c26cc in memory
flw f15, 0(x2) # load 0xc72c26cc from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
fnmadd.s f22, f24, f15, f26, dyn # perform operation
fnmadd.s f22, f24, f15, f26, rdn # perform operation
fnmadd.s f22, f24, f15, f26, rmm # perform operation
fnmadd.s f22, f24, f15, f26, rne # perform operation
fnmadd.s f22, f24, f15, f26, rtz # perform operation
fnmadd.s f22, f24, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x2cb08113 # load x3 with value 0x2cb08113
sw x3, 0(x2) # store 0x2cb08113 in memory
flw f28, 0(x2) # load 0x2cb08113 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmadd.s f11, f5, f28, f19, dyn # perform operation
fnmadd.s f11, f5, f28, f19, rdn # perform operation
fnmadd.s f11, f5, f28, f19, rmm # perform operation
fnmadd.s f11, f5, f28, f19, rne # perform operation
fnmadd.s f11, f5, f28, f19, rtz # perform operation
fnmadd.s f11, f5, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f5, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
la x2, scratch
li x3, 0x6b5f17f8 # load x3 with value 0x6b5f17f8
sw x3, 0(x2) # store 0x6b5f17f8 in memory
flw f5, 0(x2) # load 0x6b5f17f8 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fnmadd.s f2, f16, f5, f23, dyn # perform operation
fnmadd.s f2, f16, f5, f23, rdn # perform operation
fnmadd.s f2, f16, f5, f23, rmm # perform operation
fnmadd.s f2, f16, f5, f23, rne # perform operation
fnmadd.s f2, f16, f5, f23, rtz # perform operation
fnmadd.s f2, f16, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f16, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f16, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f16, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f16, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f16, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xca02af78 # load x3 with value 0xca02af78
sw x3, 0(x2) # store 0xca02af78 in memory
flw f12, 0(x2) # load 0xca02af78 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f2, f3, f12, f15, dyn # perform operation
fnmadd.s f2, f3, f12, f15, rdn # perform operation
fnmadd.s f2, f3, f12, f15, rmm # perform operation
fnmadd.s f2, f3, f12, f15, rne # perform operation
fnmadd.s f2, f3, f12, f15, rtz # perform operation
fnmadd.s f2, f3, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f3, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f3, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x1f147759 # load x3 with value 0x1f147759
sw x3, 0(x2) # store 0x1f147759 in memory
flw f25, 0(x2) # load 0x1f147759 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f13, f11, f25, f21, dyn # perform operation
fnmadd.s f13, f11, f25, f21, rdn # perform operation
fnmadd.s f13, f11, f25, f21, rmm # perform operation
fnmadd.s f13, f11, f25, f21, rne # perform operation
fnmadd.s f13, f11, f25, f21, rtz # perform operation
fnmadd.s f13, f11, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f25, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0xccf13dc2 # load x3 with value 0xccf13dc2
sw x3, 0(x2) # store 0xccf13dc2 in memory
flw f28, 0(x2) # load 0xccf13dc2 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f5, f14, f28, f7, dyn # perform operation
fnmadd.s f5, f14, f28, f7, rdn # perform operation
fnmadd.s f5, f14, f28, f7, rmm # perform operation
fnmadd.s f5, f14, f28, f7, rne # perform operation
fnmadd.s f5, f14, f28, f7, rtz # perform operation
fnmadd.s f5, f14, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f14, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f14, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x351e4e6e # load x3 with value 0x351e4e6e
sw x3, 0(x2) # store 0x351e4e6e in memory
flw f9, 0(x2) # load 0x351e4e6e from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f16, f25, f9, f2, dyn # perform operation
fnmadd.s f16, f25, f9, f2, rdn # perform operation
fnmadd.s f16, f25, f9, f2, rmm # perform operation
fnmadd.s f16, f25, f9, f2, rne # perform operation
fnmadd.s f16, f25, f9, f2, rtz # perform operation
fnmadd.s f16, f25, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f9, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xdd7373ea # load x3 with value 0xdd7373ea
sw x3, 0(x2) # store 0xdd7373ea in memory
flw f11, 0(x2) # load 0xdd7373ea from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f17, f6, f11, f27, dyn # perform operation
fnmadd.s f17, f6, f11, f27, rdn # perform operation
fnmadd.s f17, f6, f11, f27, rmm # perform operation
fnmadd.s f17, f6, f11, f27, rne # perform operation
fnmadd.s f17, f6, f11, f27, rtz # perform operation
fnmadd.s f17, f6, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f6, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f6, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xd5dba872 # load x3 with value 0xd5dba872
sw x3, 0(x2) # store 0xd5dba872 in memory
flw f30, 0(x2) # load 0xd5dba872 from memory into f30
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fnmadd.s f6, f1, f30, f26, dyn # perform operation
fnmadd.s f6, f1, f30, f26, rdn # perform operation
fnmadd.s f6, f1, f30, f26, rmm # perform operation
fnmadd.s f6, f1, f30, f26, rne # perform operation
fnmadd.s f6, f1, f30, f26, rtz # perform operation
fnmadd.s f6, f1, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f1, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f1, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xcb04af69 # load x3 with value 0xcb04af69
sw x3, 0(x2) # store 0xcb04af69 in memory
flw f29, 0(x2) # load 0xcb04af69 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fnmadd.s f9, f24, f29, f23, dyn # perform operation
fnmadd.s f9, f24, f29, f23, rdn # perform operation
fnmadd.s f9, f24, f29, f23, rmm # perform operation
fnmadd.s f9, f24, f29, f23, rne # perform operation
fnmadd.s f9, f24, f29, f23, rtz # perform operation
fnmadd.s f9, f24, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f24, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f24, f29, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x2ccb9764 # load x3 with value 0x2ccb9764
sw x3, 0(x2) # store 0x2ccb9764 in memory
flw f8, 0(x2) # load 0x2ccb9764 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
fnmadd.s f26, f25, f8, f7, dyn # perform operation
fnmadd.s f26, f25, f8, f7, rdn # perform operation
fnmadd.s f26, f25, f8, f7, rmm # perform operation
fnmadd.s f26, f25, f8, f7, rne # perform operation
fnmadd.s f26, f25, f8, f7, rtz # perform operation
fnmadd.s f26, f25, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f25, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f25, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
la x2, scratch
li x3, 0x18b61c22 # load x3 with value 0x18b61c22
sw x3, 0(x2) # store 0x18b61c22 in memory
flw f31, 0(x2) # load 0x18b61c22 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmadd.s f19, f21, f31, f7, dyn # perform operation
fnmadd.s f19, f21, f31, f7, rdn # perform operation
fnmadd.s f19, f21, f31, f7, rmm # perform operation
fnmadd.s f19, f21, f31, f7, rne # perform operation
fnmadd.s f19, f21, f31, f7, rtz # perform operation
fnmadd.s f19, f21, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x4810572f # load x3 with value 0x4810572f
sw x3, 0(x2) # store 0x4810572f in memory
flw f11, 0(x2) # load 0x4810572f from memory into f11
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f16, f28, f11, f18, dyn # perform operation
fnmadd.s f16, f28, f11, f18, rdn # perform operation
fnmadd.s f16, f28, f11, f18, rmm # perform operation
fnmadd.s f16, f28, f11, f18, rne # perform operation
fnmadd.s f16, f28, f11, f18, rtz # perform operation
fnmadd.s f16, f28, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f28, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f28, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0x9639fc65 # load x3 with value 0x9639fc65
sw x3, 0(x2) # store 0x9639fc65 in memory
flw f24, 0(x2) # load 0x9639fc65 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fnmadd.s f9, f6, f24, f26, dyn # perform operation
fnmadd.s f9, f6, f24, f26, rdn # perform operation
fnmadd.s f9, f6, f24, f26, rmm # perform operation
fnmadd.s f9, f6, f24, f26, rne # perform operation
fnmadd.s f9, f6, f24, f26, rtz # perform operation
fnmadd.s f9, f6, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f6, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f6, f24, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xe4109b86 # load x3 with value 0xe4109b86
sw x3, 0(x2) # store 0xe4109b86 in memory
flw f3, 0(x2) # load 0xe4109b86 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fnmadd.s f5, f6, f3, f30, dyn # perform operation
fnmadd.s f5, f6, f3, f30, rdn # perform operation
fnmadd.s f5, f6, f3, f30, rmm # perform operation
fnmadd.s f5, f6, f3, f30, rne # perform operation
fnmadd.s f5, f6, f3, f30, rtz # perform operation
fnmadd.s f5, f6, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f6, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f6, f3, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x77734630 # load x3 with value 0x77734630
sw x3, 0(x2) # store 0x77734630 in memory
flw f10, 0(x2) # load 0x77734630 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmadd.s f3, f13, f10, f16, dyn # perform operation
fnmadd.s f3, f13, f10, f16, rdn # perform operation
fnmadd.s f3, f13, f10, f16, rmm # perform operation
fnmadd.s f3, f13, f10, f16, rne # perform operation
fnmadd.s f3, f13, f10, f16, rtz # perform operation
fnmadd.s f3, f13, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f13, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f13, f10, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x97aed744 # load x3 with value 0x97aed744
sw x3, 0(x2) # store 0x97aed744 in memory
flw f3, 0(x2) # load 0x97aed744 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmadd.s f19, f31, f3, f1, dyn # perform operation
fnmadd.s f19, f31, f3, f1, rdn # perform operation
fnmadd.s f19, f31, f3, f1, rmm # perform operation
fnmadd.s f19, f31, f3, f1, rne # perform operation
fnmadd.s f19, f31, f3, f1, rtz # perform operation
fnmadd.s f19, f31, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x33ff67c1 # load x3 with value 0x33ff67c1
sw x3, 0(x2) # store 0x33ff67c1 in memory
flw f3, 0(x2) # load 0x33ff67c1 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fnmadd.s f24, f18, f3, f9, dyn # perform operation
fnmadd.s f24, f18, f3, f9, rdn # perform operation
fnmadd.s f24, f18, f3, f9, rmm # perform operation
fnmadd.s f24, f18, f3, f9, rne # perform operation
fnmadd.s f24, f18, f3, f9, rtz # perform operation
fnmadd.s f24, f18, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
la x2, scratch
li x3, 0x58285c40 # load x3 with value 0x58285c40
sw x3, 0(x2) # store 0x58285c40 in memory
flw f7, 0(x2) # load 0x58285c40 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmadd.s f14, f23, f7, f9, dyn # perform operation
fnmadd.s f14, f23, f7, f9, rdn # perform operation
fnmadd.s f14, f23, f7, f9, rmm # perform operation
fnmadd.s f14, f23, f7, f9, rne # perform operation
fnmadd.s f14, f23, f7, f9, rtz # perform operation
fnmadd.s f14, f23, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x2a1bbd13 # load x3 with value 0x2a1bbd13
sw x3, 0(x2) # store 0x2a1bbd13 in memory
flw f9, 0(x2) # load 0x2a1bbd13 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fnmadd.s f7, f3, f9, f16, dyn # perform operation
fnmadd.s f7, f3, f9, f16, rdn # perform operation
fnmadd.s f7, f3, f9, f16, rmm # perform operation
fnmadd.s f7, f3, f9, f16, rne # perform operation
fnmadd.s f7, f3, f9, f16, rtz # perform operation
fnmadd.s f7, f3, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f3, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f3, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x45395959 # load x3 with value 0x45395959
sw x3, 0(x2) # store 0x45395959 in memory
flw f17, 0(x2) # load 0x45395959 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fnmadd.s f1, f13, f17, f9, dyn # perform operation
fnmadd.s f1, f13, f17, f9, rdn # perform operation
fnmadd.s f1, f13, f17, f9, rmm # perform operation
fnmadd.s f1, f13, f17, f9, rne # perform operation
fnmadd.s f1, f13, f17, f9, rtz # perform operation
fnmadd.s f1, f13, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f17, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x4df20e23 # load x3 with value 0x4df20e23
sw x3, 0(x2) # store 0x4df20e23 in memory
flw f3, 0(x2) # load 0x4df20e23 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmadd.s f13, f28, f3, f11, dyn # perform operation
fnmadd.s f13, f28, f3, f11, rdn # perform operation
fnmadd.s f13, f28, f3, f11, rmm # perform operation
fnmadd.s f13, f28, f3, f11, rne # perform operation
fnmadd.s f13, f28, f3, f11, rtz # perform operation
fnmadd.s f13, f28, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xc3978eb2 # load x3 with value 0xc3978eb2
sw x3, 0(x2) # store 0xc3978eb2 in memory
flw f6, 0(x2) # load 0xc3978eb2 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmadd.s f11, f30, f6, f14, dyn # perform operation
fnmadd.s f11, f30, f6, f14, rdn # perform operation
fnmadd.s f11, f30, f6, f14, rmm # perform operation
fnmadd.s f11, f30, f6, f14, rne # perform operation
fnmadd.s f11, f30, f6, f14, rtz # perform operation
fnmadd.s f11, f30, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x782dd9f2 # load x3 with value 0x782dd9f2
sw x3, 0(x2) # store 0x782dd9f2 in memory
flw f7, 0(x2) # load 0x782dd9f2 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f17, f30, f7, f16, dyn # perform operation
fnmadd.s f17, f30, f7, f16, rdn # perform operation
fnmadd.s f17, f30, f7, f16, rmm # perform operation
fnmadd.s f17, f30, f7, f16, rne # perform operation
fnmadd.s f17, f30, f7, f16, rtz # perform operation
fnmadd.s f17, f30, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f30, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x959b2ea4 # load x3 with value 0x959b2ea4
sw x3, 0(x2) # store 0x959b2ea4 in memory
flw f12, 0(x2) # load 0x959b2ea4 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmadd.s f20, f22, f12, f11, dyn # perform operation
fnmadd.s f20, f22, f12, f11, rdn # perform operation
fnmadd.s f20, f22, f12, f11, rmm # perform operation
fnmadd.s f20, f22, f12, f11, rne # perform operation
fnmadd.s f20, f22, f12, f11, rtz # perform operation
fnmadd.s f20, f22, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x55090abe # load x3 with value 0x55090abe
sw x3, 0(x2) # store 0x55090abe in memory
flw f27, 0(x2) # load 0x55090abe from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fnmadd.s f29, f13, f27, f30, dyn # perform operation
fnmadd.s f29, f13, f27, f30, rdn # perform operation
fnmadd.s f29, f13, f27, f30, rmm # perform operation
fnmadd.s f29, f13, f27, f30, rne # perform operation
fnmadd.s f29, f13, f27, f30, rtz # perform operation
fnmadd.s f29, f13, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0xdbdb3c6a # load x3 with value 0xdbdb3c6a
sw x3, 0(x2) # store 0xdbdb3c6a in memory
flw f28, 0(x2) # load 0xdbdb3c6a from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f3, f13, f28, f14, dyn # perform operation
fnmadd.s f3, f13, f28, f14, rdn # perform operation
fnmadd.s f3, f13, f28, f14, rmm # perform operation
fnmadd.s f3, f13, f28, f14, rne # perform operation
fnmadd.s f3, f13, f28, f14, rtz # perform operation
fnmadd.s f3, f13, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f13, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f13, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f13, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f13, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f13, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x3601f2ff # load x3 with value 0x3601f2ff
sw x3, 0(x2) # store 0x3601f2ff in memory
flw f12, 0(x2) # load 0x3601f2ff from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f18, f10, f12, f27, dyn # perform operation
fnmadd.s f18, f10, f12, f27, rdn # perform operation
fnmadd.s f18, f10, f12, f27, rmm # perform operation
fnmadd.s f18, f10, f12, f27, rne # perform operation
fnmadd.s f18, f10, f12, f27, rtz # perform operation
fnmadd.s f18, f10, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f10, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f10, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f10, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f10, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f10, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xc3e0a147 # load x3 with value 0xc3e0a147
sw x3, 0(x2) # store 0xc3e0a147 in memory
flw f6, 0(x2) # load 0xc3e0a147 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
fnmadd.s f9, f27, f6, f28, dyn # perform operation
fnmadd.s f9, f27, f6, f28, rdn # perform operation
fnmadd.s f9, f27, f6, f28, rmm # perform operation
fnmadd.s f9, f27, f6, f28, rne # perform operation
fnmadd.s f9, f27, f6, f28, rtz # perform operation
fnmadd.s f9, f27, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x29b8596a # load x3 with value 0x29b8596a
sw x3, 0(x2) # store 0x29b8596a in memory
flw f13, 0(x2) # load 0x29b8596a from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fnmadd.s f9, f26, f13, f29, dyn # perform operation
fnmadd.s f9, f26, f13, f29, rdn # perform operation
fnmadd.s f9, f26, f13, f29, rmm # perform operation
fnmadd.s f9, f26, f13, f29, rne # perform operation
fnmadd.s f9, f26, f13, f29, rtz # perform operation
fnmadd.s f9, f26, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f26, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f26, f13, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x84b5eb80 # load x3 with value 0x84b5eb80
sw x3, 0(x2) # store 0x84b5eb80 in memory
flw f9, 0(x2) # load 0x84b5eb80 from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f21, f12, f9, f11, dyn # perform operation
fnmadd.s f21, f12, f9, f11, rdn # perform operation
fnmadd.s f21, f12, f9, f11, rmm # perform operation
fnmadd.s f21, f12, f9, f11, rne # perform operation
fnmadd.s f21, f12, f9, f11, rtz # perform operation
fnmadd.s f21, f12, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f12, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f12, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f12, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f12, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f12, f9, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0xf196577c # load x3 with value 0xf196577c
sw x3, 0(x2) # store 0xf196577c in memory
flw f15, 0(x2) # load 0xf196577c from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.s f22, f20, f15, f10, dyn # perform operation
fnmadd.s f22, f20, f15, f10, rdn # perform operation
fnmadd.s f22, f20, f15, f10, rmm # perform operation
fnmadd.s f22, f20, f15, f10, rne # perform operation
fnmadd.s f22, f20, f15, f10, rtz # perform operation
fnmadd.s f22, f20, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f15, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0xebc216a1 # load x3 with value 0xebc216a1
sw x3, 0(x2) # store 0xebc216a1 in memory
flw f20, 0(x2) # load 0xebc216a1 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fnmadd.s f8, f28, f20, f3, dyn # perform operation
fnmadd.s f8, f28, f20, f3, rdn # perform operation
fnmadd.s f8, f28, f20, f3, rmm # perform operation
fnmadd.s f8, f28, f20, f3, rne # perform operation
fnmadd.s f8, f28, f20, f3, rtz # perform operation
fnmadd.s f8, f28, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f28, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f28, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xb1f1f3f8 # load x3 with value 0xb1f1f3f8
sw x3, 0(x2) # store 0xb1f1f3f8 in memory
flw f21, 0(x2) # load 0xb1f1f3f8 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fnmadd.s f18, f29, f21, f9, dyn # perform operation
fnmadd.s f18, f29, f21, f9, rdn # perform operation
fnmadd.s f18, f29, f21, f9, rmm # perform operation
fnmadd.s f18, f29, f21, f9, rne # perform operation
fnmadd.s f18, f29, f21, f9, rtz # perform operation
fnmadd.s f18, f29, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x470e66eb # load x3 with value 0x470e66eb
sw x3, 0(x2) # store 0x470e66eb in memory
flw f14, 0(x2) # load 0x470e66eb from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fnmadd.s f12, f13, f14, f5, dyn # perform operation
fnmadd.s f12, f13, f14, f5, rdn # perform operation
fnmadd.s f12, f13, f14, f5, rmm # perform operation
fnmadd.s f12, f13, f14, f5, rne # perform operation
fnmadd.s f12, f13, f14, f5, rtz # perform operation
fnmadd.s f12, f13, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f14, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x9b0d3776 # load x3 with value 0x9b0d3776
sw x3, 0(x2) # store 0x9b0d3776 in memory
flw f28, 0(x2) # load 0x9b0d3776 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmadd.s f14, f23, f28, f26, dyn # perform operation
fnmadd.s f14, f23, f28, f26, rdn # perform operation
fnmadd.s f14, f23, f28, f26, rmm # perform operation
fnmadd.s f14, f23, f28, f26, rne # perform operation
fnmadd.s f14, f23, f28, f26, rtz # perform operation
fnmadd.s f14, f23, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0xab1b4ab1 # load x3 with value 0xab1b4ab1
sw x3, 0(x2) # store 0xab1b4ab1 in memory
flw f1, 0(x2) # load 0xab1b4ab1 from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fnmadd.s f13, f9, f1, f3, dyn # perform operation
fnmadd.s f13, f9, f1, f3, rdn # perform operation
fnmadd.s f13, f9, f1, f3, rmm # perform operation
fnmadd.s f13, f9, f1, f3, rne # perform operation
fnmadd.s f13, f9, f1, f3, rtz # perform operation
fnmadd.s f13, f9, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f1, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x7775982c # load x3 with value 0x7775982c
sw x3, 0(x2) # store 0x7775982c in memory
flw f26, 0(x2) # load 0x7775982c from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmadd.s f22, f13, f26, f12, dyn # perform operation
fnmadd.s f22, f13, f26, f12, rdn # perform operation
fnmadd.s f22, f13, f26, f12, rmm # perform operation
fnmadd.s f22, f13, f26, f12, rne # perform operation
fnmadd.s f22, f13, f26, f12, rtz # perform operation
fnmadd.s f22, f13, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x69a3fe9a # load x3 with value 0x69a3fe9a
sw x3, 0(x2) # store 0x69a3fe9a in memory
flw f18, 0(x2) # load 0x69a3fe9a from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fnmadd.s f21, f16, f18, f6, dyn # perform operation
fnmadd.s f21, f16, f18, f6, rdn # perform operation
fnmadd.s f21, f16, f18, f6, rmm # perform operation
fnmadd.s f21, f16, f18, f6, rne # perform operation
fnmadd.s f21, f16, f18, f6, rtz # perform operation
fnmadd.s f21, f16, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f18, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0xee453216 # load x3 with value 0xee453216
sw x3, 0(x2) # store 0xee453216 in memory
flw f18, 0(x2) # load 0xee453216 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmadd.s f9, f25, f18, f10, dyn # perform operation
fnmadd.s f9, f25, f18, f10, rdn # perform operation
fnmadd.s f9, f25, f18, f10, rmm # perform operation
fnmadd.s f9, f25, f18, f10, rne # perform operation
fnmadd.s f9, f25, f18, f10, rtz # perform operation
fnmadd.s f9, f25, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x61f4b06e # load x3 with value 0x61f4b06e
sw x3, 0(x2) # store 0x61f4b06e in memory
flw f1, 0(x2) # load 0x61f4b06e from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f14, f8, f1, f18, dyn # perform operation
fnmadd.s f14, f8, f1, f18, rdn # perform operation
fnmadd.s f14, f8, f1, f18, rmm # perform operation
fnmadd.s f14, f8, f1, f18, rne # perform operation
fnmadd.s f14, f8, f1, f18, rtz # perform operation
fnmadd.s f14, f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xab87cdd3 # load x3 with value 0xab87cdd3
sw x3, 0(x2) # store 0xab87cdd3 in memory
flw f7, 0(x2) # load 0xab87cdd3 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fnmadd.s f23, f8, f7, f29, dyn # perform operation
fnmadd.s f23, f8, f7, f29, rdn # perform operation
fnmadd.s f23, f8, f7, f29, rmm # perform operation
fnmadd.s f23, f8, f7, f29, rne # perform operation
fnmadd.s f23, f8, f7, f29, rtz # perform operation
fnmadd.s f23, f8, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f8, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f8, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0xdee0de15 # load x3 with value 0xdee0de15
sw x3, 0(x2) # store 0xdee0de15 in memory
flw f24, 0(x2) # load 0xdee0de15 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmadd.s f16, f25, f24, f1, dyn # perform operation
fnmadd.s f16, f25, f24, f1, rdn # perform operation
fnmadd.s f16, f25, f24, f1, rmm # perform operation
fnmadd.s f16, f25, f24, f1, rne # perform operation
fnmadd.s f16, f25, f24, f1, rtz # perform operation
fnmadd.s f16, f25, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f25, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f25, f24, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x633713f9 # load x3 with value 0x633713f9
sw x3, 0(x2) # store 0x633713f9 in memory
flw f23, 0(x2) # load 0x633713f9 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
fnmadd.s f2, f28, f23, f9, dyn # perform operation
fnmadd.s f2, f28, f23, f9, rdn # perform operation
fnmadd.s f2, f28, f23, f9, rmm # perform operation
fnmadd.s f2, f28, f23, f9, rne # perform operation
fnmadd.s f2, f28, f23, f9, rtz # perform operation
fnmadd.s f2, f28, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x44b52d4e # load x3 with value 0x44b52d4e
sw x3, 0(x2) # store 0x44b52d4e in memory
flw f24, 0(x2) # load 0x44b52d4e from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fnmadd.s f23, f26, f24, f2, dyn # perform operation
fnmadd.s f23, f26, f24, f2, rdn # perform operation
fnmadd.s f23, f26, f24, f2, rmm # perform operation
fnmadd.s f23, f26, f24, f2, rne # perform operation
fnmadd.s f23, f26, f24, f2, rtz # perform operation
fnmadd.s f23, f26, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f24, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x58c8c3ab # load x3 with value 0x58c8c3ab
sw x3, 0(x2) # store 0x58c8c3ab in memory
flw f27, 0(x2) # load 0x58c8c3ab from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmadd.s f11, f28, f27, f3, dyn # perform operation
fnmadd.s f11, f28, f27, f3, rdn # perform operation
fnmadd.s f11, f28, f27, f3, rmm # perform operation
fnmadd.s f11, f28, f27, f3, rne # perform operation
fnmadd.s f11, f28, f27, f3, rtz # perform operation
fnmadd.s f11, f28, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f28, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f28, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0x7298017b # load x3 with value 0x7298017b
sw x3, 0(x2) # store 0x7298017b in memory
flw f3, 0(x2) # load 0x7298017b from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmadd.s f10, f15, f3, f11, dyn # perform operation
fnmadd.s f10, f15, f3, f11, rdn # perform operation
fnmadd.s f10, f15, f3, f11, rmm # perform operation
fnmadd.s f10, f15, f3, f11, rne # perform operation
fnmadd.s f10, f15, f3, f11, rtz # perform operation
fnmadd.s f10, f15, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f15, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f15, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x2ebef62d # load x3 with value 0x2ebef62d
sw x3, 0(x2) # store 0x2ebef62d in memory
flw f16, 0(x2) # load 0x2ebef62d from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.s f11, f7, f16, f9, dyn # perform operation
fnmadd.s f11, f7, f16, f9, rdn # perform operation
fnmadd.s f11, f7, f16, f9, rmm # perform operation
fnmadd.s f11, f7, f16, f9, rne # perform operation
fnmadd.s f11, f7, f16, f9, rtz # perform operation
fnmadd.s f11, f7, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0xb50fbe0d # load x3 with value 0xb50fbe0d
sw x3, 0(x2) # store 0xb50fbe0d in memory
flw f12, 0(x2) # load 0xb50fbe0d from memory into f12
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmadd.s f31, f30, f12, f20, dyn # perform operation
fnmadd.s f31, f30, f12, f20, rdn # perform operation
fnmadd.s f31, f30, f12, f20, rmm # perform operation
fnmadd.s f31, f30, f12, f20, rne # perform operation
fnmadd.s f31, f30, f12, f20, rtz # perform operation
fnmadd.s f31, f30, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f30, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x182f8b2b # load x3 with value 0x182f8b2b
sw x3, 0(x2) # store 0x182f8b2b in memory
flw f27, 0(x2) # load 0x182f8b2b from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmadd.s f1, f18, f27, f14, dyn # perform operation
fnmadd.s f1, f18, f27, f14, rdn # perform operation
fnmadd.s f1, f18, f27, f14, rmm # perform operation
fnmadd.s f1, f18, f27, f14, rne # perform operation
fnmadd.s f1, f18, f27, f14, rtz # perform operation
fnmadd.s f1, f18, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
la x2, scratch
li x3, 0x9bcd40e2 # load x3 with value 0x9bcd40e2
sw x3, 0(x2) # store 0x9bcd40e2 in memory
flw f12, 0(x2) # load 0x9bcd40e2 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fnmadd.s f19, f20, f12, f15, dyn # perform operation
fnmadd.s f19, f20, f12, f15, rdn # perform operation
fnmadd.s f19, f20, f12, f15, rmm # perform operation
fnmadd.s f19, f20, f12, f15, rne # perform operation
fnmadd.s f19, f20, f12, f15, rtz # perform operation
fnmadd.s f19, f20, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f20, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f20, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x1afd0b34 # load x3 with value 0x1afd0b34
sw x3, 0(x2) # store 0x1afd0b34 in memory
flw f19, 0(x2) # load 0x1afd0b34 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f20, f8, f19, f9, dyn # perform operation
fnmadd.s f20, f8, f19, f9, rdn # perform operation
fnmadd.s f20, f8, f19, f9, rmm # perform operation
fnmadd.s f20, f8, f19, f9, rne # perform operation
fnmadd.s f20, f8, f19, f9, rtz # perform operation
fnmadd.s f20, f8, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f8, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f8, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xe0cab095 # load x3 with value 0xe0cab095
sw x3, 0(x2) # store 0xe0cab095 in memory
flw f21, 0(x2) # load 0xe0cab095 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fnmadd.s f5, f1, f21, f20, dyn # perform operation
fnmadd.s f5, f1, f21, f20, rdn # perform operation
fnmadd.s f5, f1, f21, f20, rmm # perform operation
fnmadd.s f5, f1, f21, f20, rne # perform operation
fnmadd.s f5, f1, f21, f20, rtz # perform operation
fnmadd.s f5, f1, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f1, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f1, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0xdd4ad6dc # load x3 with value 0xdd4ad6dc
sw x3, 0(x2) # store 0xdd4ad6dc in memory
flw f3, 0(x2) # load 0xdd4ad6dc from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmadd.s f26, f7, f3, f15, dyn # perform operation
fnmadd.s f26, f7, f3, f15, rdn # perform operation
fnmadd.s f26, f7, f3, f15, rmm # perform operation
fnmadd.s f26, f7, f3, f15, rne # perform operation
fnmadd.s f26, f7, f3, f15, rtz # perform operation
fnmadd.s f26, f7, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0x9a77f297 # load x3 with value 0x9a77f297
sw x3, 0(x2) # store 0x9a77f297 in memory
flw f13, 0(x2) # load 0x9a77f297 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fnmadd.s f28, f1, f13, f3, dyn # perform operation
fnmadd.s f28, f1, f13, f3, rdn # perform operation
fnmadd.s f28, f1, f13, f3, rmm # perform operation
fnmadd.s f28, f1, f13, f3, rne # perform operation
fnmadd.s f28, f1, f13, f3, rtz # perform operation
fnmadd.s f28, f1, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f1, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f1, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f1, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f1, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f1, f13, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x39a0a42f # load x3 with value 0x39a0a42f
sw x3, 0(x2) # store 0x39a0a42f in memory
flw f2, 0(x2) # load 0x39a0a42f from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fnmadd.s f23, f9, f2, f7, dyn # perform operation
fnmadd.s f23, f9, f2, f7, rdn # perform operation
fnmadd.s f23, f9, f2, f7, rmm # perform operation
fnmadd.s f23, f9, f2, f7, rne # perform operation
fnmadd.s f23, f9, f2, f7, rtz # perform operation
fnmadd.s f23, f9, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x3a676f94 # load x3 with value 0x3a676f94
sw x3, 0(x2) # store 0x3a676f94 in memory
flw f10, 0(x2) # load 0x3a676f94 from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmadd.s f20, f6, f10, f13, dyn # perform operation
fnmadd.s f20, f6, f10, f13, rdn # perform operation
fnmadd.s f20, f6, f10, f13, rmm # perform operation
fnmadd.s f20, f6, f10, f13, rne # perform operation
fnmadd.s f20, f6, f10, f13, rtz # perform operation
fnmadd.s f20, f6, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f6, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0xbda1e2a4 # load x3 with value 0xbda1e2a4
sw x3, 0(x2) # store 0xbda1e2a4 in memory
flw f15, 0(x2) # load 0xbda1e2a4 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmadd.s f30, f21, f15, f9, dyn # perform operation
fnmadd.s f30, f21, f15, f9, rdn # perform operation
fnmadd.s f30, f21, f15, f9, rmm # perform operation
fnmadd.s f30, f21, f15, f9, rne # perform operation
fnmadd.s f30, f21, f15, f9, rtz # perform operation
fnmadd.s f30, f21, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0xa89dc0d6 # load x3 with value 0xa89dc0d6
sw x3, 0(x2) # store 0xa89dc0d6 in memory
flw f18, 0(x2) # load 0xa89dc0d6 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fnmadd.s f27, f5, f18, f30, dyn # perform operation
fnmadd.s f27, f5, f18, f30, rdn # perform operation
fnmadd.s f27, f5, f18, f30, rmm # perform operation
fnmadd.s f27, f5, f18, f30, rne # perform operation
fnmadd.s f27, f5, f18, f30, rtz # perform operation
fnmadd.s f27, f5, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x1d25235b # load x3 with value 0x1d25235b
sw x3, 0(x2) # store 0x1d25235b in memory
flw f9, 0(x2) # load 0x1d25235b from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.s f29, f17, f9, f1, dyn # perform operation
fnmadd.s f29, f17, f9, f1, rdn # perform operation
fnmadd.s f29, f17, f9, f1, rmm # perform operation
fnmadd.s f29, f17, f9, f1, rne # perform operation
fnmadd.s f29, f17, f9, f1, rtz # perform operation
fnmadd.s f29, f17, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f17, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f17, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x4f6729be # load x3 with value 0x4f6729be
sw x3, 0(x2) # store 0x4f6729be in memory
flw f6, 0(x2) # load 0x4f6729be from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fnmadd.s f5, f11, f6, f25, dyn # perform operation
fnmadd.s f5, f11, f6, f25, rdn # perform operation
fnmadd.s f5, f11, f6, f25, rmm # perform operation
fnmadd.s f5, f11, f6, f25, rne # perform operation
fnmadd.s f5, f11, f6, f25, rtz # perform operation
fnmadd.s f5, f11, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xa882400c # load x3 with value 0xa882400c
sw x3, 0(x2) # store 0xa882400c in memory
flw f8, 0(x2) # load 0xa882400c from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f17, f14, f8, f30, dyn # perform operation
fnmadd.s f17, f14, f8, f30, rdn # perform operation
fnmadd.s f17, f14, f8, f30, rmm # perform operation
fnmadd.s f17, f14, f8, f30, rne # perform operation
fnmadd.s f17, f14, f8, f30, rtz # perform operation
fnmadd.s f17, f14, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f14, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f14, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0xb997e507 # load x3 with value 0xb997e507
sw x3, 0(x2) # store 0xb997e507 in memory
flw f28, 0(x2) # load 0xb997e507 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmadd.s f29, f9, f28, f21, dyn # perform operation
fnmadd.s f29, f9, f28, f21, rdn # perform operation
fnmadd.s f29, f9, f28, f21, rmm # perform operation
fnmadd.s f29, f9, f28, f21, rne # perform operation
fnmadd.s f29, f9, f28, f21, rtz # perform operation
fnmadd.s f29, f9, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f9, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f9, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0xa16da3be # load x3 with value 0xa16da3be
sw x3, 0(x2) # store 0xa16da3be in memory
flw f18, 0(x2) # load 0xa16da3be from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmadd.s f24, f31, f18, f21, dyn # perform operation
fnmadd.s f24, f31, f18, f21, rdn # perform operation
fnmadd.s f24, f31, f18, f21, rmm # perform operation
fnmadd.s f24, f31, f18, f21, rne # perform operation
fnmadd.s f24, f31, f18, f21, rtz # perform operation
fnmadd.s f24, f31, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x68136e3c # load x3 with value 0x68136e3c
sw x3, 0(x2) # store 0x68136e3c in memory
flw f13, 0(x2) # load 0x68136e3c from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fnmadd.s f24, f3, f13, f9, dyn # perform operation
fnmadd.s f24, f3, f13, f9, rdn # perform operation
fnmadd.s f24, f3, f13, f9, rmm # perform operation
fnmadd.s f24, f3, f13, f9, rne # perform operation
fnmadd.s f24, f3, f13, f9, rtz # perform operation
fnmadd.s f24, f3, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f3, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f3, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f3, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f3, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f3, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xdbbf4795 # load x3 with value 0xdbbf4795
sw x3, 0(x2) # store 0xdbbf4795 in memory
flw f24, 0(x2) # load 0xdbbf4795 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmadd.s f16, f22, f24, f31, dyn # perform operation
fnmadd.s f16, f22, f24, f31, rdn # perform operation
fnmadd.s f16, f22, f24, f31, rmm # perform operation
fnmadd.s f16, f22, f24, f31, rne # perform operation
fnmadd.s f16, f22, f24, f31, rtz # perform operation
fnmadd.s f16, f22, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f22, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f22, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x8fd77e76 # load x3 with value 0x8fd77e76
sw x3, 0(x2) # store 0x8fd77e76 in memory
flw f9, 0(x2) # load 0x8fd77e76 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f5, f25, f9, f19, dyn # perform operation
fnmadd.s f5, f25, f9, f19, rdn # perform operation
fnmadd.s f5, f25, f9, f19, rmm # perform operation
fnmadd.s f5, f25, f9, f19, rne # perform operation
fnmadd.s f5, f25, f9, f19, rtz # perform operation
fnmadd.s f5, f25, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x9f415fe2 # load x3 with value 0x9f415fe2
sw x3, 0(x2) # store 0x9f415fe2 in memory
flw f1, 0(x2) # load 0x9f415fe2 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fnmadd.s f5, f23, f1, f11, dyn # perform operation
fnmadd.s f5, f23, f1, f11, rdn # perform operation
fnmadd.s f5, f23, f1, f11, rmm # perform operation
fnmadd.s f5, f23, f1, f11, rne # perform operation
fnmadd.s f5, f23, f1, f11, rtz # perform operation
fnmadd.s f5, f23, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f23, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f23, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x05d5637d # load x3 with value 0x05d5637d
sw x3, 0(x2) # store 0x05d5637d in memory
flw f28, 0(x2) # load 0x05d5637d from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fnmadd.s f30, f18, f28, f31, dyn # perform operation
fnmadd.s f30, f18, f28, f31, rdn # perform operation
fnmadd.s f30, f18, f28, f31, rmm # perform operation
fnmadd.s f30, f18, f28, f31, rne # perform operation
fnmadd.s f30, f18, f28, f31, rtz # perform operation
fnmadd.s f30, f18, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f18, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f18, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x2deb24e2 # load x3 with value 0x2deb24e2
sw x3, 0(x2) # store 0x2deb24e2 in memory
flw f21, 0(x2) # load 0x2deb24e2 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f20, f2, f21, f3, dyn # perform operation
fnmadd.s f20, f2, f21, f3, rdn # perform operation
fnmadd.s f20, f2, f21, f3, rmm # perform operation
fnmadd.s f20, f2, f21, f3, rne # perform operation
fnmadd.s f20, f2, f21, f3, rtz # perform operation
fnmadd.s f20, f2, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f21, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x7f42beaa # load x3 with value 0x7f42beaa
sw x3, 0(x2) # store 0x7f42beaa in memory
flw f22, 0(x2) # load 0x7f42beaa from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fnmadd.s f6, f3, f22, f24, dyn # perform operation
fnmadd.s f6, f3, f22, f24, rdn # perform operation
fnmadd.s f6, f3, f22, f24, rmm # perform operation
fnmadd.s f6, f3, f22, f24, rne # perform operation
fnmadd.s f6, f3, f22, f24, rtz # perform operation
fnmadd.s f6, f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f3, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xfaf6a403 # load x3 with value 0xfaf6a403
sw x3, 0(x2) # store 0xfaf6a403 in memory
flw f14, 0(x2) # load 0xfaf6a403 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fnmadd.s f31, f26, f14, f16, dyn # perform operation
fnmadd.s f31, f26, f14, f16, rdn # perform operation
fnmadd.s f31, f26, f14, f16, rmm # perform operation
fnmadd.s f31, f26, f14, f16, rne # perform operation
fnmadd.s f31, f26, f14, f16, rtz # perform operation
fnmadd.s f31, f26, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f26, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f26, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f26, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f26, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f26, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x1d620057 # load x3 with value 0x1d620057
sw x3, 0(x2) # store 0x1d620057 in memory
flw f18, 0(x2) # load 0x1d620057 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fnmadd.s f28, f10, f18, f26, dyn # perform operation
fnmadd.s f28, f10, f18, f26, rdn # perform operation
fnmadd.s f28, f10, f18, f26, rmm # perform operation
fnmadd.s f28, f10, f18, f26, rne # perform operation
fnmadd.s f28, f10, f18, f26, rtz # perform operation
fnmadd.s f28, f10, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x4a7420e3 # load x3 with value 0x4a7420e3
sw x3, 0(x2) # store 0x4a7420e3 in memory
flw f1, 0(x2) # load 0x4a7420e3 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f5, f30, f1, f24, dyn # perform operation
fnmadd.s f5, f30, f1, f24, rdn # perform operation
fnmadd.s f5, f30, f1, f24, rmm # perform operation
fnmadd.s f5, f30, f1, f24, rne # perform operation
fnmadd.s f5, f30, f1, f24, rtz # perform operation
fnmadd.s f5, f30, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f30, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f30, f1, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0xf56e27f6 # load x3 with value 0xf56e27f6
sw x3, 0(x2) # store 0xf56e27f6 in memory
flw f10, 0(x2) # load 0xf56e27f6 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmadd.s f16, f23, f10, f29, dyn # perform operation
fnmadd.s f16, f23, f10, f29, rdn # perform operation
fnmadd.s f16, f23, f10, f29, rmm # perform operation
fnmadd.s f16, f23, f10, f29, rne # perform operation
fnmadd.s f16, f23, f10, f29, rtz # perform operation
fnmadd.s f16, f23, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0xe3f899ff # load x3 with value 0xe3f899ff
sw x3, 0(x2) # store 0xe3f899ff in memory
flw f23, 0(x2) # load 0xe3f899ff from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fnmadd.s f25, f17, f23, f6, dyn # perform operation
fnmadd.s f25, f17, f23, f6, rdn # perform operation
fnmadd.s f25, f17, f23, f6, rmm # perform operation
fnmadd.s f25, f17, f23, f6, rne # perform operation
fnmadd.s f25, f17, f23, f6, rtz # perform operation
fnmadd.s f25, f17, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f17, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xdfa6fcad # load x3 with value 0xdfa6fcad
sw x3, 0(x2) # store 0xdfa6fcad in memory
flw f11, 0(x2) # load 0xdfa6fcad from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fnmadd.s f5, f16, f11, f30, dyn # perform operation
fnmadd.s f5, f16, f11, f30, rdn # perform operation
fnmadd.s f5, f16, f11, f30, rmm # perform operation
fnmadd.s f5, f16, f11, f30, rne # perform operation
fnmadd.s f5, f16, f11, f30, rtz # perform operation
fnmadd.s f5, f16, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f16, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f16, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f16, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f16, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f16, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0xa271cec5 # load x3 with value 0xa271cec5
sw x3, 0(x2) # store 0xa271cec5 in memory
flw f24, 0(x2) # load 0xa271cec5 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fnmadd.s f14, f29, f24, f30, dyn # perform operation
fnmadd.s f14, f29, f24, f30, rdn # perform operation
fnmadd.s f14, f29, f24, f30, rmm # perform operation
fnmadd.s f14, f29, f24, f30, rne # perform operation
fnmadd.s f14, f29, f24, f30, rtz # perform operation
fnmadd.s f14, f29, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f24, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x44c577bf # load x3 with value 0x44c577bf
sw x3, 0(x2) # store 0x44c577bf in memory
flw f23, 0(x2) # load 0x44c577bf from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmadd.s f18, f15, f23, f12, dyn # perform operation
fnmadd.s f18, f15, f23, f12, rdn # perform operation
fnmadd.s f18, f15, f23, f12, rmm # perform operation
fnmadd.s f18, f15, f23, f12, rne # perform operation
fnmadd.s f18, f15, f23, f12, rtz # perform operation
fnmadd.s f18, f15, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f15, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f15, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x962b0b19 # load x3 with value 0x962b0b19
sw x3, 0(x2) # store 0x962b0b19 in memory
flw f17, 0(x2) # load 0x962b0b19 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fnmadd.s f16, f18, f17, f1, dyn # perform operation
fnmadd.s f16, f18, f17, f1, rdn # perform operation
fnmadd.s f16, f18, f17, f1, rmm # perform operation
fnmadd.s f16, f18, f17, f1, rne # perform operation
fnmadd.s f16, f18, f17, f1, rtz # perform operation
fnmadd.s f16, f18, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x9245d676 # load x3 with value 0x9245d676
sw x3, 0(x2) # store 0x9245d676 in memory
flw f23, 0(x2) # load 0x9245d676 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmadd.s f25, f9, f23, f26, dyn # perform operation
fnmadd.s f25, f9, f23, f26, rdn # perform operation
fnmadd.s f25, f9, f23, f26, rmm # perform operation
fnmadd.s f25, f9, f23, f26, rne # perform operation
fnmadd.s f25, f9, f23, f26, rtz # perform operation
fnmadd.s f25, f9, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f23, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xe49f425e # load x3 with value 0xe49f425e
sw x3, 0(x2) # store 0xe49f425e in memory
flw f28, 0(x2) # load 0xe49f425e from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f24, f6, f28, f26, dyn # perform operation
fnmadd.s f24, f6, f28, f26, rdn # perform operation
fnmadd.s f24, f6, f28, f26, rmm # perform operation
fnmadd.s f24, f6, f28, f26, rne # perform operation
fnmadd.s f24, f6, f28, f26, rtz # perform operation
fnmadd.s f24, f6, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x3e6f2b49 # load x3 with value 0x3e6f2b49
sw x3, 0(x2) # store 0x3e6f2b49 in memory
flw f1, 0(x2) # load 0x3e6f2b49 from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fnmadd.s f30, f2, f1, f31, dyn # perform operation
fnmadd.s f30, f2, f1, f31, rdn # perform operation
fnmadd.s f30, f2, f1, f31, rmm # perform operation
fnmadd.s f30, f2, f1, f31, rne # perform operation
fnmadd.s f30, f2, f1, f31, rtz # perform operation
fnmadd.s f30, f2, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
la x2, scratch
li x3, 0xa4034be6 # load x3 with value 0xa4034be6
sw x3, 0(x2) # store 0xa4034be6 in memory
flw f15, 0(x2) # load 0xa4034be6 from memory into f15
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f6, f12, f15, f2, dyn # perform operation
fnmadd.s f6, f12, f15, f2, rdn # perform operation
fnmadd.s f6, f12, f15, f2, rmm # perform operation
fnmadd.s f6, f12, f15, f2, rne # perform operation
fnmadd.s f6, f12, f15, f2, rtz # perform operation
fnmadd.s f6, f12, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x41953c8e # load x3 with value 0x41953c8e
sw x3, 0(x2) # store 0x41953c8e in memory
flw f7, 0(x2) # load 0x41953c8e from memory into f7
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmadd.s f28, f19, f7, f14, dyn # perform operation
fnmadd.s f28, f19, f7, f14, rdn # perform operation
fnmadd.s f28, f19, f7, f14, rmm # perform operation
fnmadd.s f28, f19, f7, f14, rne # perform operation
fnmadd.s f28, f19, f7, f14, rtz # perform operation
fnmadd.s f28, f19, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0xdd85878b # load x3 with value 0xdd85878b
sw x3, 0(x2) # store 0xdd85878b in memory
flw f19, 0(x2) # load 0xdd85878b from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fnmadd.s f2, f24, f19, f6, dyn # perform operation
fnmadd.s f2, f24, f19, f6, rdn # perform operation
fnmadd.s f2, f24, f19, f6, rmm # perform operation
fnmadd.s f2, f24, f19, f6, rne # perform operation
fnmadd.s f2, f24, f19, f6, rtz # perform operation
fnmadd.s f2, f24, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f24, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f24, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f24, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f24, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f24, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xe0ff8278 # load x3 with value 0xe0ff8278
sw x3, 0(x2) # store 0xe0ff8278 in memory
flw f23, 0(x2) # load 0xe0ff8278 from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmadd.s f31, f10, f23, f8, dyn # perform operation
fnmadd.s f31, f10, f23, f8, rdn # perform operation
fnmadd.s f31, f10, f23, f8, rmm # perform operation
fnmadd.s f31, f10, f23, f8, rne # perform operation
fnmadd.s f31, f10, f23, f8, rtz # perform operation
fnmadd.s f31, f10, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x60083609 # load x3 with value 0x60083609
sw x3, 0(x2) # store 0x60083609 in memory
flw f7, 0(x2) # load 0x60083609 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fnmadd.s f20, f30, f7, f16, dyn # perform operation
fnmadd.s f20, f30, f7, f16, rdn # perform operation
fnmadd.s f20, f30, f7, f16, rmm # perform operation
fnmadd.s f20, f30, f7, f16, rne # perform operation
fnmadd.s f20, f30, f7, f16, rtz # perform operation
fnmadd.s f20, f30, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f30, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f30, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x8083ec01 # load x3 with value 0x8083ec01
sw x3, 0(x2) # store 0x8083ec01 in memory
flw f13, 0(x2) # load 0x8083ec01 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fnmadd.s f10, f17, f13, f23, dyn # perform operation
fnmadd.s f10, f17, f13, f23, rdn # perform operation
fnmadd.s f10, f17, f13, f23, rmm # perform operation
fnmadd.s f10, f17, f13, f23, rne # perform operation
fnmadd.s f10, f17, f13, f23, rtz # perform operation
fnmadd.s f10, f17, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f17, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f17, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x3c3c0341 # load x3 with value 0x3c3c0341
sw x3, 0(x2) # store 0x3c3c0341 in memory
flw f15, 0(x2) # load 0x3c3c0341 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fnmadd.s f25, f14, f15, f30, dyn # perform operation
fnmadd.s f25, f14, f15, f30, rdn # perform operation
fnmadd.s f25, f14, f15, f30, rmm # perform operation
fnmadd.s f25, f14, f15, f30, rne # perform operation
fnmadd.s f25, f14, f15, f30, rtz # perform operation
fnmadd.s f25, f14, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f15, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x3d9b3bc1 # load x3 with value 0x3d9b3bc1
sw x3, 0(x2) # store 0x3d9b3bc1 in memory
flw f11, 0(x2) # load 0x3d9b3bc1 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fnmadd.s f1, f23, f11, f10, dyn # perform operation
fnmadd.s f1, f23, f11, f10, rdn # perform operation
fnmadd.s f1, f23, f11, f10, rmm # perform operation
fnmadd.s f1, f23, f11, f10, rne # perform operation
fnmadd.s f1, f23, f11, f10, rtz # perform operation
fnmadd.s f1, f23, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f23, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f23, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0xc61cb020 # load x3 with value 0xc61cb020
sw x3, 0(x2) # store 0xc61cb020 in memory
flw f8, 0(x2) # load 0xc61cb020 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmadd.s f15, f19, f8, f30, dyn # perform operation
fnmadd.s f15, f19, f8, f30, rdn # perform operation
fnmadd.s f15, f19, f8, f30, rmm # perform operation
fnmadd.s f15, f19, f8, f30, rne # perform operation
fnmadd.s f15, f19, f8, f30, rtz # perform operation
fnmadd.s f15, f19, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f19, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f19, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xbf49e6ad # load x3 with value 0xbf49e6ad
sw x3, 0(x2) # store 0xbf49e6ad in memory
flw f19, 0(x2) # load 0xbf49e6ad from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmadd.s f13, f26, f19, f24, dyn # perform operation
fnmadd.s f13, f26, f19, f24, rdn # perform operation
fnmadd.s f13, f26, f19, f24, rmm # perform operation
fnmadd.s f13, f26, f19, f24, rne # perform operation
fnmadd.s f13, f26, f19, f24, rtz # perform operation
fnmadd.s f13, f26, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x5a678a9b # load x3 with value 0x5a678a9b
sw x3, 0(x2) # store 0x5a678a9b in memory
flw f28, 0(x2) # load 0x5a678a9b from memory into f28
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f26, f12, f28, f13, dyn # perform operation
fnmadd.s f26, f12, f28, f13, rdn # perform operation
fnmadd.s f26, f12, f28, f13, rmm # perform operation
fnmadd.s f26, f12, f28, f13, rne # perform operation
fnmadd.s f26, f12, f28, f13, rtz # perform operation
fnmadd.s f26, f12, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f12, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f12, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xb0a71be2 # load x3 with value 0xb0a71be2
sw x3, 0(x2) # store 0xb0a71be2 in memory
flw f12, 0(x2) # load 0xb0a71be2 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fnmadd.s f21, f5, f12, f24, dyn # perform operation
fnmadd.s f21, f5, f12, f24, rdn # perform operation
fnmadd.s f21, f5, f12, f24, rmm # perform operation
fnmadd.s f21, f5, f12, f24, rne # perform operation
fnmadd.s f21, f5, f12, f24, rtz # perform operation
fnmadd.s f21, f5, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f5, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f5, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xa4b8568a # load x3 with value 0xa4b8568a
sw x3, 0(x2) # store 0xa4b8568a in memory
flw f16, 0(x2) # load 0xa4b8568a from memory into f16
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fnmadd.s f11, f15, f16, f13, dyn # perform operation
fnmadd.s f11, f15, f16, f13, rdn # perform operation
fnmadd.s f11, f15, f16, f13, rmm # perform operation
fnmadd.s f11, f15, f16, f13, rne # perform operation
fnmadd.s f11, f15, f16, f13, rtz # perform operation
fnmadd.s f11, f15, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0x858dfa4a # load x3 with value 0x858dfa4a
sw x3, 0(x2) # store 0x858dfa4a in memory
flw f27, 0(x2) # load 0x858dfa4a from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmadd.s f15, f11, f27, f17, dyn # perform operation
fnmadd.s f15, f11, f27, f17, rdn # perform operation
fnmadd.s f15, f11, f27, f17, rmm # perform operation
fnmadd.s f15, f11, f27, f17, rne # perform operation
fnmadd.s f15, f11, f27, f17, rtz # perform operation
fnmadd.s f15, f11, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f11, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f11, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x75cf90ce # load x3 with value 0x75cf90ce
sw x3, 0(x2) # store 0x75cf90ce in memory
flw f19, 0(x2) # load 0x75cf90ce from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fnmadd.s f1, f13, f19, f8, dyn # perform operation
fnmadd.s f1, f13, f19, f8, rdn # perform operation
fnmadd.s f1, f13, f19, f8, rmm # perform operation
fnmadd.s f1, f13, f19, f8, rne # perform operation
fnmadd.s f1, f13, f19, f8, rtz # perform operation
fnmadd.s f1, f13, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x0bf60eb8 # load x3 with value 0x0bf60eb8
sw x3, 0(x2) # store 0x0bf60eb8 in memory
flw f3, 0(x2) # load 0x0bf60eb8 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmadd.s f12, f8, f3, f22, dyn # perform operation
fnmadd.s f12, f8, f3, f22, rdn # perform operation
fnmadd.s f12, f8, f3, f22, rmm # perform operation
fnmadd.s f12, f8, f3, f22, rne # perform operation
fnmadd.s f12, f8, f3, f22, rtz # perform operation
fnmadd.s f12, f8, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f3, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xc21658d2 # load x3 with value 0xc21658d2
sw x3, 0(x2) # store 0xc21658d2 in memory
flw f5, 0(x2) # load 0xc21658d2 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fnmadd.s f7, f27, f5, f20, dyn # perform operation
fnmadd.s f7, f27, f5, f20, rdn # perform operation
fnmadd.s f7, f27, f5, f20, rmm # perform operation
fnmadd.s f7, f27, f5, f20, rne # perform operation
fnmadd.s f7, f27, f5, f20, rtz # perform operation
fnmadd.s f7, f27, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xf1009479 # load x3 with value 0xf1009479
sw x3, 0(x2) # store 0xf1009479 in memory
flw f31, 0(x2) # load 0xf1009479 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f20, f3, f31, f23, dyn # perform operation
fnmadd.s f20, f3, f31, f23, rdn # perform operation
fnmadd.s f20, f3, f31, f23, rmm # perform operation
fnmadd.s f20, f3, f31, f23, rne # perform operation
fnmadd.s f20, f3, f31, f23, rtz # perform operation
fnmadd.s f20, f3, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xb63395c1 # load x3 with value 0xb63395c1
sw x3, 0(x2) # store 0xb63395c1 in memory
flw f18, 0(x2) # load 0xb63395c1 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fnmadd.s f5, f24, f18, f19, dyn # perform operation
fnmadd.s f5, f24, f18, f19, rdn # perform operation
fnmadd.s f5, f24, f18, f19, rmm # perform operation
fnmadd.s f5, f24, f18, f19, rne # perform operation
fnmadd.s f5, f24, f18, f19, rtz # perform operation
fnmadd.s f5, f24, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x97936f1f # load x3 with value 0x97936f1f
sw x3, 0(x2) # store 0x97936f1f in memory
flw f21, 0(x2) # load 0x97936f1f from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmadd.s f11, f19, f21, f22, dyn # perform operation
fnmadd.s f11, f19, f21, f22, rdn # perform operation
fnmadd.s f11, f19, f21, f22, rmm # perform operation
fnmadd.s f11, f19, f21, f22, rne # perform operation
fnmadd.s f11, f19, f21, f22, rtz # perform operation
fnmadd.s f11, f19, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x6175e17c # load x3 with value 0x6175e17c
sw x3, 0(x2) # store 0x6175e17c in memory
flw f2, 0(x2) # load 0x6175e17c from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f29, f16, f2, f22, dyn # perform operation
fnmadd.s f29, f16, f2, f22, rdn # perform operation
fnmadd.s f29, f16, f2, f22, rmm # perform operation
fnmadd.s f29, f16, f2, f22, rne # perform operation
fnmadd.s f29, f16, f2, f22, rtz # perform operation
fnmadd.s f29, f16, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f2, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xa544337a # load x3 with value 0xa544337a
sw x3, 0(x2) # store 0xa544337a in memory
flw f30, 0(x2) # load 0xa544337a from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fnmadd.s f19, f7, f30, f31, dyn # perform operation
fnmadd.s f19, f7, f30, f31, rdn # perform operation
fnmadd.s f19, f7, f30, f31, rmm # perform operation
fnmadd.s f19, f7, f30, f31, rne # perform operation
fnmadd.s f19, f7, f30, f31, rtz # perform operation
fnmadd.s f19, f7, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f7, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f7, f30, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x1c5c048d # load x3 with value 0x1c5c048d
sw x3, 0(x2) # store 0x1c5c048d in memory
flw f23, 0(x2) # load 0x1c5c048d from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f25, f16, f23, f20, dyn # perform operation
fnmadd.s f25, f16, f23, f20, rdn # perform operation
fnmadd.s f25, f16, f23, f20, rmm # perform operation
fnmadd.s f25, f16, f23, f20, rne # perform operation
fnmadd.s f25, f16, f23, f20, rtz # perform operation
fnmadd.s f25, f16, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f16, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f16, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f16, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f16, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f16, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x2838c021 # load x3 with value 0x2838c021
sw x3, 0(x2) # store 0x2838c021 in memory
flw f23, 0(x2) # load 0x2838c021 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fnmadd.s f18, f30, f23, f27, dyn # perform operation
fnmadd.s f18, f30, f23, f27, rdn # perform operation
fnmadd.s f18, f30, f23, f27, rmm # perform operation
fnmadd.s f18, f30, f23, f27, rne # perform operation
fnmadd.s f18, f30, f23, f27, rtz # perform operation
fnmadd.s f18, f30, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f30, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f30, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x8e66b17f # load x3 with value 0x8e66b17f
sw x3, 0(x2) # store 0x8e66b17f in memory
flw f25, 0(x2) # load 0x8e66b17f from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fnmadd.s f15, f10, f25, f20, dyn # perform operation
fnmadd.s f15, f10, f25, f20, rdn # perform operation
fnmadd.s f15, f10, f25, f20, rmm # perform operation
fnmadd.s f15, f10, f25, f20, rne # perform operation
fnmadd.s f15, f10, f25, f20, rtz # perform operation
fnmadd.s f15, f10, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f10, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f10, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x30e0de9e # load x3 with value 0x30e0de9e
sw x3, 0(x2) # store 0x30e0de9e in memory
flw f22, 0(x2) # load 0x30e0de9e from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fnmadd.s f26, f29, f22, f9, dyn # perform operation
fnmadd.s f26, f29, f22, f9, rdn # perform operation
fnmadd.s f26, f29, f22, f9, rmm # perform operation
fnmadd.s f26, f29, f22, f9, rne # perform operation
fnmadd.s f26, f29, f22, f9, rtz # perform operation
fnmadd.s f26, f29, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f29, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f29, f22, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0x2a348352 # load x3 with value 0x2a348352
sw x3, 0(x2) # store 0x2a348352 in memory
flw f25, 0(x2) # load 0x2a348352 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmadd.s f9, f8, f25, f10, dyn # perform operation
fnmadd.s f9, f8, f25, f10, rdn # perform operation
fnmadd.s f9, f8, f25, f10, rmm # perform operation
fnmadd.s f9, f8, f25, f10, rne # perform operation
fnmadd.s f9, f8, f25, f10, rtz # perform operation
fnmadd.s f9, f8, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x18b82b8c # load x3 with value 0x18b82b8c
sw x3, 0(x2) # store 0x18b82b8c in memory
flw f11, 0(x2) # load 0x18b82b8c from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f13, f17, f11, f22, dyn # perform operation
fnmadd.s f13, f17, f11, f22, rdn # perform operation
fnmadd.s f13, f17, f11, f22, rmm # perform operation
fnmadd.s f13, f17, f11, f22, rne # perform operation
fnmadd.s f13, f17, f11, f22, rtz # perform operation
fnmadd.s f13, f17, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x1e365ef7 # load x3 with value 0x1e365ef7
sw x3, 0(x2) # store 0x1e365ef7 in memory
flw f29, 0(x2) # load 0x1e365ef7 from memory into f29
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fnmadd.s f21, f20, f29, f24, dyn # perform operation
fnmadd.s f21, f20, f29, f24, rdn # perform operation
fnmadd.s f21, f20, f29, f24, rmm # perform operation
fnmadd.s f21, f20, f29, f24, rne # perform operation
fnmadd.s f21, f20, f29, f24, rtz # perform operation
fnmadd.s f21, f20, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f20, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f20, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x0a3eff30 # load x3 with value 0x0a3eff30
sw x3, 0(x2) # store 0x0a3eff30 in memory
flw f19, 0(x2) # load 0x0a3eff30 from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fnmadd.s f27, f1, f19, f17, dyn # perform operation
fnmadd.s f27, f1, f19, f17, rdn # perform operation
fnmadd.s f27, f1, f19, f17, rmm # perform operation
fnmadd.s f27, f1, f19, f17, rne # perform operation
fnmadd.s f27, f1, f19, f17, rtz # perform operation
fnmadd.s f27, f1, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f1, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x7ea160eb # load x3 with value 0x7ea160eb
sw x3, 0(x2) # store 0x7ea160eb in memory
flw f2, 0(x2) # load 0x7ea160eb from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fnmadd.s f17, f7, f2, f28, dyn # perform operation
fnmadd.s f17, f7, f2, f28, rdn # perform operation
fnmadd.s f17, f7, f2, f28, rmm # perform operation
fnmadd.s f17, f7, f2, f28, rne # perform operation
fnmadd.s f17, f7, f2, f28, rtz # perform operation
fnmadd.s f17, f7, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x7324e042 # load x3 with value 0x7324e042
sw x3, 0(x2) # store 0x7324e042 in memory
flw f12, 0(x2) # load 0x7324e042 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmadd.s f6, f20, f12, f10, dyn # perform operation
fnmadd.s f6, f20, f12, f10, rdn # perform operation
fnmadd.s f6, f20, f12, f10, rmm # perform operation
fnmadd.s f6, f20, f12, f10, rne # perform operation
fnmadd.s f6, f20, f12, f10, rtz # perform operation
fnmadd.s f6, f20, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f20, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f20, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0xfa4f64f2 # load x3 with value 0xfa4f64f2
sw x3, 0(x2) # store 0xfa4f64f2 in memory
flw f3, 0(x2) # load 0xfa4f64f2 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fnmadd.s f18, f19, f3, f29, dyn # perform operation
fnmadd.s f18, f19, f3, f29, rdn # perform operation
fnmadd.s f18, f19, f3, f29, rmm # perform operation
fnmadd.s f18, f19, f3, f29, rne # perform operation
fnmadd.s f18, f19, f3, f29, rtz # perform operation
fnmadd.s f18, f19, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f19, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f19, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f19, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f19, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f19, f3, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xd14e5afa # load x3 with value 0xd14e5afa
sw x3, 0(x2) # store 0xd14e5afa in memory
flw f5, 0(x2) # load 0xd14e5afa from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmadd.s f17, f2, f5, f12, dyn # perform operation
fnmadd.s f17, f2, f5, f12, rdn # perform operation
fnmadd.s f17, f2, f5, f12, rmm # perform operation
fnmadd.s f17, f2, f5, f12, rne # perform operation
fnmadd.s f17, f2, f5, f12, rtz # perform operation
fnmadd.s f17, f2, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x0a1a5199 # load x3 with value 0x0a1a5199
sw x3, 0(x2) # store 0x0a1a5199 in memory
flw f29, 0(x2) # load 0x0a1a5199 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fnmadd.s f7, f24, f29, f17, dyn # perform operation
fnmadd.s f7, f24, f29, f17, rdn # perform operation
fnmadd.s f7, f24, f29, f17, rmm # perform operation
fnmadd.s f7, f24, f29, f17, rne # perform operation
fnmadd.s f7, f24, f29, f17, rtz # perform operation
fnmadd.s f7, f24, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f29, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x4377d7ed # load x3 with value 0x4377d7ed
sw x3, 0(x2) # store 0x4377d7ed in memory
flw f3, 0(x2) # load 0x4377d7ed from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f30, f26, f3, f2, dyn # perform operation
fnmadd.s f30, f26, f3, f2, rdn # perform operation
fnmadd.s f30, f26, f3, f2, rmm # perform operation
fnmadd.s f30, f26, f3, f2, rne # perform operation
fnmadd.s f30, f26, f3, f2, rtz # perform operation
fnmadd.s f30, f26, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f26, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f26, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f26, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f26, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f26, f3, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x52416934 # load x3 with value 0x52416934
sw x3, 0(x2) # store 0x52416934 in memory
flw f28, 0(x2) # load 0x52416934 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmadd.s f23, f1, f28, f29, dyn # perform operation
fnmadd.s f23, f1, f28, f29, rdn # perform operation
fnmadd.s f23, f1, f28, f29, rmm # perform operation
fnmadd.s f23, f1, f28, f29, rne # perform operation
fnmadd.s f23, f1, f28, f29, rtz # perform operation
fnmadd.s f23, f1, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xda448a72 # load x3 with value 0xda448a72
sw x3, 0(x2) # store 0xda448a72 in memory
flw f13, 0(x2) # load 0xda448a72 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f5, f25, f13, f8, dyn # perform operation
fnmadd.s f5, f25, f13, f8, rdn # perform operation
fnmadd.s f5, f25, f13, f8, rmm # perform operation
fnmadd.s f5, f25, f13, f8, rne # perform operation
fnmadd.s f5, f25, f13, f8, rtz # perform operation
fnmadd.s f5, f25, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f25, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f25, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0xa8363949 # load x3 with value 0xa8363949
sw x3, 0(x2) # store 0xa8363949 in memory
flw f19, 0(x2) # load 0xa8363949 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f5, f8, f19, f13, dyn # perform operation
fnmadd.s f5, f8, f19, f13, rdn # perform operation
fnmadd.s f5, f8, f19, f13, rmm # perform operation
fnmadd.s f5, f8, f19, f13, rne # perform operation
fnmadd.s f5, f8, f19, f13, rtz # perform operation
fnmadd.s f5, f8, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x56a0acbb # load x3 with value 0x56a0acbb
sw x3, 0(x2) # store 0x56a0acbb in memory
flw f13, 0(x2) # load 0x56a0acbb from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f27, f16, f13, f21, dyn # perform operation
fnmadd.s f27, f16, f13, f21, rdn # perform operation
fnmadd.s f27, f16, f13, f21, rmm # perform operation
fnmadd.s f27, f16, f13, f21, rne # perform operation
fnmadd.s f27, f16, f13, f21, rtz # perform operation
fnmadd.s f27, f16, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f16, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x07dd45d0 # load x3 with value 0x07dd45d0
sw x3, 0(x2) # store 0x07dd45d0 in memory
flw f25, 0(x2) # load 0x07dd45d0 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fnmadd.s f2, f6, f25, f15, dyn # perform operation
fnmadd.s f2, f6, f25, f15, rdn # perform operation
fnmadd.s f2, f6, f25, f15, rmm # perform operation
fnmadd.s f2, f6, f25, f15, rne # perform operation
fnmadd.s f2, f6, f25, f15, rtz # perform operation
fnmadd.s f2, f6, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xc3b428f1 # load x3 with value 0xc3b428f1
sw x3, 0(x2) # store 0xc3b428f1 in memory
flw f5, 0(x2) # load 0xc3b428f1 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fnmadd.s f17, f23, f5, f8, dyn # perform operation
fnmadd.s f17, f23, f5, f8, rdn # perform operation
fnmadd.s f17, f23, f5, f8, rmm # perform operation
fnmadd.s f17, f23, f5, f8, rne # perform operation
fnmadd.s f17, f23, f5, f8, rtz # perform operation
fnmadd.s f17, f23, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f5, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0x5fecd197 # load x3 with value 0x5fecd197
sw x3, 0(x2) # store 0x5fecd197 in memory
flw f5, 0(x2) # load 0x5fecd197 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fnmadd.s f15, f24, f5, f12, dyn # perform operation
fnmadd.s f15, f24, f5, f12, rdn # perform operation
fnmadd.s f15, f24, f5, f12, rmm # perform operation
fnmadd.s f15, f24, f5, f12, rne # perform operation
fnmadd.s f15, f24, f5, f12, rtz # perform operation
fnmadd.s f15, f24, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f24, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f24, f5, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xad30065b # load x3 with value 0xad30065b
sw x3, 0(x2) # store 0xad30065b in memory
flw f13, 0(x2) # load 0xad30065b from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f31, f18, f13, f27, dyn # perform operation
fnmadd.s f31, f18, f13, f27, rdn # perform operation
fnmadd.s f31, f18, f13, f27, rmm # perform operation
fnmadd.s f31, f18, f13, f27, rne # perform operation
fnmadd.s f31, f18, f13, f27, rtz # perform operation
fnmadd.s f31, f18, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f18, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f18, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xad87d83d # load x3 with value 0xad87d83d
sw x3, 0(x2) # store 0xad87d83d in memory
flw f5, 0(x2) # load 0xad87d83d from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmadd.s f30, f15, f5, f2, dyn # perform operation
fnmadd.s f30, f15, f5, f2, rdn # perform operation
fnmadd.s f30, f15, f5, f2, rmm # perform operation
fnmadd.s f30, f15, f5, f2, rne # perform operation
fnmadd.s f30, f15, f5, f2, rtz # perform operation
fnmadd.s f30, f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x5982a7e2 # load x3 with value 0x5982a7e2
sw x3, 0(x2) # store 0x5982a7e2 in memory
flw f1, 0(x2) # load 0x5982a7e2 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fnmadd.s f23, f21, f1, f17, dyn # perform operation
fnmadd.s f23, f21, f1, f17, rdn # perform operation
fnmadd.s f23, f21, f1, f17, rmm # perform operation
fnmadd.s f23, f21, f1, f17, rne # perform operation
fnmadd.s f23, f21, f1, f17, rtz # perform operation
fnmadd.s f23, f21, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f21, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f21, f1, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x81452308 # load x3 with value 0x81452308
sw x3, 0(x2) # store 0x81452308 in memory
flw f6, 0(x2) # load 0x81452308 from memory into f6
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fnmadd.s f30, f23, f6, f26, dyn # perform operation
fnmadd.s f30, f23, f6, f26, rdn # perform operation
fnmadd.s f30, f23, f6, f26, rmm # perform operation
fnmadd.s f30, f23, f6, f26, rne # perform operation
fnmadd.s f30, f23, f6, f26, rtz # perform operation
fnmadd.s f30, f23, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0xf70a85fb # load x3 with value 0xf70a85fb
sw x3, 0(x2) # store 0xf70a85fb in memory
flw f11, 0(x2) # load 0xf70a85fb from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fnmadd.s f17, f12, f11, f28, dyn # perform operation
fnmadd.s f17, f12, f11, f28, rdn # perform operation
fnmadd.s f17, f12, f11, f28, rmm # perform operation
fnmadd.s f17, f12, f11, f28, rne # perform operation
fnmadd.s f17, f12, f11, f28, rtz # perform operation
fnmadd.s f17, f12, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0xd66ef9c9 # load x3 with value 0xd66ef9c9
sw x3, 0(x2) # store 0xd66ef9c9 in memory
flw f24, 0(x2) # load 0xd66ef9c9 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fnmadd.s f9, f27, f24, f7, dyn # perform operation
fnmadd.s f9, f27, f24, f7, rdn # perform operation
fnmadd.s f9, f27, f24, f7, rmm # perform operation
fnmadd.s f9, f27, f24, f7, rne # perform operation
fnmadd.s f9, f27, f24, f7, rtz # perform operation
fnmadd.s f9, f27, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x60bbdb81 # load x3 with value 0x60bbdb81
sw x3, 0(x2) # store 0x60bbdb81 in memory
flw f6, 0(x2) # load 0x60bbdb81 from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fnmadd.s f5, f7, f6, f28, dyn # perform operation
fnmadd.s f5, f7, f6, f28, rdn # perform operation
fnmadd.s f5, f7, f6, f28, rmm # perform operation
fnmadd.s f5, f7, f6, f28, rne # perform operation
fnmadd.s f5, f7, f6, f28, rtz # perform operation
fnmadd.s f5, f7, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x6199e2c4 # load x3 with value 0x6199e2c4
sw x3, 0(x2) # store 0x6199e2c4 in memory
flw f6, 0(x2) # load 0x6199e2c4 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f17, f7, f6, f2, dyn # perform operation
fnmadd.s f17, f7, f6, f2, rdn # perform operation
fnmadd.s f17, f7, f6, f2, rmm # perform operation
fnmadd.s f17, f7, f6, f2, rne # perform operation
fnmadd.s f17, f7, f6, f2, rtz # perform operation
fnmadd.s f17, f7, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x52a552dc # load x3 with value 0x52a552dc
sw x3, 0(x2) # store 0x52a552dc in memory
flw f18, 0(x2) # load 0x52a552dc from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fnmadd.s f19, f1, f18, f29, dyn # perform operation
fnmadd.s f19, f1, f18, f29, rdn # perform operation
fnmadd.s f19, f1, f18, f29, rmm # perform operation
fnmadd.s f19, f1, f18, f29, rne # perform operation
fnmadd.s f19, f1, f18, f29, rtz # perform operation
fnmadd.s f19, f1, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f18, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0x52b78477 # load x3 with value 0x52b78477
sw x3, 0(x2) # store 0x52b78477 in memory
flw f23, 0(x2) # load 0x52b78477 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f8, f18, f23, f28, dyn # perform operation
fnmadd.s f8, f18, f23, f28, rdn # perform operation
fnmadd.s f8, f18, f23, f28, rmm # perform operation
fnmadd.s f8, f18, f23, f28, rne # perform operation
fnmadd.s f8, f18, f23, f28, rtz # perform operation
fnmadd.s f8, f18, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f18, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
la x2, scratch
li x3, 0x9ae8619d # load x3 with value 0x9ae8619d
sw x3, 0(x2) # store 0x9ae8619d in memory
flw f28, 0(x2) # load 0x9ae8619d from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f31, f1, f28, f24, dyn # perform operation
fnmadd.s f31, f1, f28, f24, rdn # perform operation
fnmadd.s f31, f1, f28, f24, rmm # perform operation
fnmadd.s f31, f1, f28, f24, rne # perform operation
fnmadd.s f31, f1, f28, f24, rtz # perform operation
fnmadd.s f31, f1, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f28, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0xa3967f9a # load x3 with value 0xa3967f9a
sw x3, 0(x2) # store 0xa3967f9a in memory
flw f9, 0(x2) # load 0xa3967f9a from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
fnmadd.s f20, f2, f9, f25, dyn # perform operation
fnmadd.s f20, f2, f9, f25, rdn # perform operation
fnmadd.s f20, f2, f9, f25, rmm # perform operation
fnmadd.s f20, f2, f9, f25, rne # perform operation
fnmadd.s f20, f2, f9, f25, rtz # perform operation
fnmadd.s f20, f2, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f2, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f2, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x05335438 # load x3 with value 0x05335438
sw x3, 0(x2) # store 0x05335438 in memory
flw f7, 0(x2) # load 0x05335438 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmadd.s f30, f15, f7, f2, dyn # perform operation
fnmadd.s f30, f15, f7, f2, rdn # perform operation
fnmadd.s f30, f15, f7, f2, rmm # perform operation
fnmadd.s f30, f15, f7, f2, rne # perform operation
fnmadd.s f30, f15, f7, f2, rtz # perform operation
fnmadd.s f30, f15, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f15, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f15, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xd753cbeb # load x3 with value 0xd753cbeb
sw x3, 0(x2) # store 0xd753cbeb in memory
flw f31, 0(x2) # load 0xd753cbeb from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fnmadd.s f2, f15, f31, f12, dyn # perform operation
fnmadd.s f2, f15, f31, f12, rdn # perform operation
fnmadd.s f2, f15, f31, f12, rmm # perform operation
fnmadd.s f2, f15, f31, f12, rne # perform operation
fnmadd.s f2, f15, f31, f12, rtz # perform operation
fnmadd.s f2, f15, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f15, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xa4a1de63 # load x3 with value 0xa4a1de63
sw x3, 0(x2) # store 0xa4a1de63 in memory
flw f15, 0(x2) # load 0xa4a1de63 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fnmadd.s f28, f22, f15, f29, dyn # perform operation
fnmadd.s f28, f22, f15, f29, rdn # perform operation
fnmadd.s f28, f22, f15, f29, rmm # perform operation
fnmadd.s f28, f22, f15, f29, rne # perform operation
fnmadd.s f28, f22, f15, f29, rtz # perform operation
fnmadd.s f28, f22, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xb20d7c60 # load x3 with value 0xb20d7c60
sw x3, 0(x2) # store 0xb20d7c60 in memory
flw f25, 0(x2) # load 0xb20d7c60 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f6, f11, f25, f10, dyn # perform operation
fnmadd.s f6, f11, f25, f10, rdn # perform operation
fnmadd.s f6, f11, f25, f10, rmm # perform operation
fnmadd.s f6, f11, f25, f10, rne # perform operation
fnmadd.s f6, f11, f25, f10, rtz # perform operation
fnmadd.s f6, f11, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f11, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f11, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x5aabffe9 # load x3 with value 0x5aabffe9
sw x3, 0(x2) # store 0x5aabffe9 in memory
flw f29, 0(x2) # load 0x5aabffe9 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmadd.s f12, f13, f29, f16, dyn # perform operation
fnmadd.s f12, f13, f29, f16, rdn # perform operation
fnmadd.s f12, f13, f29, f16, rmm # perform operation
fnmadd.s f12, f13, f29, f16, rne # perform operation
fnmadd.s f12, f13, f29, f16, rtz # perform operation
fnmadd.s f12, f13, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f29, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x64d1df47 # load x3 with value 0x64d1df47
sw x3, 0(x2) # store 0x64d1df47 in memory
flw f20, 0(x2) # load 0x64d1df47 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
fnmadd.s f1, f3, f20, f18, dyn # perform operation
fnmadd.s f1, f3, f20, f18, rdn # perform operation
fnmadd.s f1, f3, f20, f18, rmm # perform operation
fnmadd.s f1, f3, f20, f18, rne # perform operation
fnmadd.s f1, f3, f20, f18, rtz # perform operation
fnmadd.s f1, f3, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f3, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f3, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x16fcb462 # load x3 with value 0x16fcb462
sw x3, 0(x2) # store 0x16fcb462 in memory
flw f20, 0(x2) # load 0x16fcb462 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f18, f14, f20, f8, dyn # perform operation
fnmadd.s f18, f14, f20, f8, rdn # perform operation
fnmadd.s f18, f14, f20, f8, rmm # perform operation
fnmadd.s f18, f14, f20, f8, rne # perform operation
fnmadd.s f18, f14, f20, f8, rtz # perform operation
fnmadd.s f18, f14, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x28923b91 # load x3 with value 0x28923b91
sw x3, 0(x2) # store 0x28923b91 in memory
flw f17, 0(x2) # load 0x28923b91 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fnmadd.s f16, f8, f17, f24, dyn # perform operation
fnmadd.s f16, f8, f17, f24, rdn # perform operation
fnmadd.s f16, f8, f17, f24, rmm # perform operation
fnmadd.s f16, f8, f17, f24, rne # perform operation
fnmadd.s f16, f8, f17, f24, rtz # perform operation
fnmadd.s f16, f8, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xc97b9944 # load x3 with value 0xc97b9944
sw x3, 0(x2) # store 0xc97b9944 in memory
flw f26, 0(x2) # load 0xc97b9944 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f6, f16, f26, f14, dyn # perform operation
fnmadd.s f6, f16, f26, f14, rdn # perform operation
fnmadd.s f6, f16, f26, f14, rmm # perform operation
fnmadd.s f6, f16, f26, f14, rne # perform operation
fnmadd.s f6, f16, f26, f14, rtz # perform operation
fnmadd.s f6, f16, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7eae1de0 # load x3 with value 0x7eae1de0
sw x3, 0(x2) # store 0x7eae1de0 in memory
flw f16, 0(x2) # load 0x7eae1de0 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmadd.s f23, f22, f16, f29, dyn # perform operation
fnmadd.s f23, f22, f16, f29, rdn # perform operation
fnmadd.s f23, f22, f16, f29, rmm # perform operation
fnmadd.s f23, f22, f16, f29, rne # perform operation
fnmadd.s f23, f22, f16, f29, rtz # perform operation
fnmadd.s f23, f22, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f22, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f22, f16, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0xed925ae0 # load x3 with value 0xed925ae0
sw x3, 0(x2) # store 0xed925ae0 in memory
flw f20, 0(x2) # load 0xed925ae0 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f5, f27, f20, f14, dyn # perform operation
fnmadd.s f5, f27, f20, f14, rdn # perform operation
fnmadd.s f5, f27, f20, f14, rmm # perform operation
fnmadd.s f5, f27, f20, f14, rne # perform operation
fnmadd.s f5, f27, f20, f14, rtz # perform operation
fnmadd.s f5, f27, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f20, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
la x2, scratch
li x3, 0xfb93cad5 # load x3 with value 0xfb93cad5
sw x3, 0(x2) # store 0xfb93cad5 in memory
flw f12, 0(x2) # load 0xfb93cad5 from memory into f12
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f10, f24, f12, f25, dyn # perform operation
fnmadd.s f10, f24, f12, f25, rdn # perform operation
fnmadd.s f10, f24, f12, f25, rmm # perform operation
fnmadd.s f10, f24, f12, f25, rne # perform operation
fnmadd.s f10, f24, f12, f25, rtz # perform operation
fnmadd.s f10, f24, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f24, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f24, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f24, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f24, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f24, f12, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xae986024 # load x3 with value 0xae986024
sw x3, 0(x2) # store 0xae986024 in memory
flw f8, 0(x2) # load 0xae986024 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fnmadd.s f19, f29, f8, f31, dyn # perform operation
fnmadd.s f19, f29, f8, f31, rdn # perform operation
fnmadd.s f19, f29, f8, f31, rmm # perform operation
fnmadd.s f19, f29, f8, f31, rne # perform operation
fnmadd.s f19, f29, f8, f31, rtz # perform operation
fnmadd.s f19, f29, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f8, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0xa685a376 # load x3 with value 0xa685a376
sw x3, 0(x2) # store 0xa685a376 in memory
flw f31, 0(x2) # load 0xa685a376 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fnmadd.s f27, f2, f31, f7, dyn # perform operation
fnmadd.s f27, f2, f31, f7, rdn # perform operation
fnmadd.s f27, f2, f31, f7, rmm # perform operation
fnmadd.s f27, f2, f31, f7, rne # perform operation
fnmadd.s f27, f2, f31, f7, rtz # perform operation
fnmadd.s f27, f2, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f2, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f2, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x00c0078b # load x3 with value 0x00c0078b
sw x3, 0(x2) # store 0x00c0078b in memory
flw f29, 0(x2) # load 0x00c0078b from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmadd.s f15, f8, f29, f7, dyn # perform operation
fnmadd.s f15, f8, f29, f7, rdn # perform operation
fnmadd.s f15, f8, f29, f7, rmm # perform operation
fnmadd.s f15, f8, f29, f7, rne # perform operation
fnmadd.s f15, f8, f29, f7, rtz # perform operation
fnmadd.s f15, f8, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x2d2f87c8 # load x3 with value 0x2d2f87c8
sw x3, 0(x2) # store 0x2d2f87c8 in memory
flw f20, 0(x2) # load 0x2d2f87c8 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fnmadd.s f12, f23, f20, f3, dyn # perform operation
fnmadd.s f12, f23, f20, f3, rdn # perform operation
fnmadd.s f12, f23, f20, f3, rmm # perform operation
fnmadd.s f12, f23, f20, f3, rne # perform operation
fnmadd.s f12, f23, f20, f3, rtz # perform operation
fnmadd.s f12, f23, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f23, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f23, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xf016ba01 # load x3 with value 0xf016ba01
sw x3, 0(x2) # store 0xf016ba01 in memory
flw f25, 0(x2) # load 0xf016ba01 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f30, f31, f25, f27, dyn # perform operation
fnmadd.s f30, f31, f25, f27, rdn # perform operation
fnmadd.s f30, f31, f25, f27, rmm # perform operation
fnmadd.s f30, f31, f25, f27, rne # perform operation
fnmadd.s f30, f31, f25, f27, rtz # perform operation
fnmadd.s f30, f31, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f31, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f31, f25, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x437aba55 # load x3 with value 0x437aba55
sw x3, 0(x2) # store 0x437aba55 in memory
flw f19, 0(x2) # load 0x437aba55 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fnmadd.s f9, f18, f19, f1, dyn # perform operation
fnmadd.s f9, f18, f19, f1, rdn # perform operation
fnmadd.s f9, f18, f19, f1, rmm # perform operation
fnmadd.s f9, f18, f19, f1, rne # perform operation
fnmadd.s f9, f18, f19, f1, rtz # perform operation
fnmadd.s f9, f18, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x514db715 # load x3 with value 0x514db715
sw x3, 0(x2) # store 0x514db715 in memory
flw f24, 0(x2) # load 0x514db715 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f8, f27, f24, f15, dyn # perform operation
fnmadd.s f8, f27, f24, f15, rdn # perform operation
fnmadd.s f8, f27, f24, f15, rmm # perform operation
fnmadd.s f8, f27, f24, f15, rne # perform operation
fnmadd.s f8, f27, f24, f15, rtz # perform operation
fnmadd.s f8, f27, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f27, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f27, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xa81c2e00 # load x3 with value 0xa81c2e00
sw x3, 0(x2) # store 0xa81c2e00 in memory
flw f13, 0(x2) # load 0xa81c2e00 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f12, f14, f13, f15, dyn # perform operation
fnmadd.s f12, f14, f13, f15, rdn # perform operation
fnmadd.s f12, f14, f13, f15, rmm # perform operation
fnmadd.s f12, f14, f13, f15, rne # perform operation
fnmadd.s f12, f14, f13, f15, rtz # perform operation
fnmadd.s f12, f14, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x57adcb3d # load x3 with value 0x57adcb3d
sw x3, 0(x2) # store 0x57adcb3d in memory
flw f21, 0(x2) # load 0x57adcb3d from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmadd.s f8, f20, f21, f6, dyn # perform operation
fnmadd.s f8, f20, f21, f6, rdn # perform operation
fnmadd.s f8, f20, f21, f6, rmm # perform operation
fnmadd.s f8, f20, f21, f6, rne # perform operation
fnmadd.s f8, f20, f21, f6, rtz # perform operation
fnmadd.s f8, f20, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f20, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f20, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f20, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f20, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f20, f21, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xed37da08 # load x3 with value 0xed37da08
sw x3, 0(x2) # store 0xed37da08 in memory
flw f23, 0(x2) # load 0xed37da08 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f19, f18, f23, f10, dyn # perform operation
fnmadd.s f19, f18, f23, f10, rdn # perform operation
fnmadd.s f19, f18, f23, f10, rmm # perform operation
fnmadd.s f19, f18, f23, f10, rne # perform operation
fnmadd.s f19, f18, f23, f10, rtz # perform operation
fnmadd.s f19, f18, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f18, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f18, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x68de703b # load x3 with value 0x68de703b
sw x3, 0(x2) # store 0x68de703b in memory
flw f24, 0(x2) # load 0x68de703b from memory into f24
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fnmadd.s f1, f16, f24, f20, dyn # perform operation
fnmadd.s f1, f16, f24, f20, rdn # perform operation
fnmadd.s f1, f16, f24, f20, rmm # perform operation
fnmadd.s f1, f16, f24, f20, rne # perform operation
fnmadd.s f1, f16, f24, f20, rtz # perform operation
fnmadd.s f1, f16, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f16, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f16, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f16, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f16, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f16, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xa81ea5c8 # load x3 with value 0xa81ea5c8
sw x3, 0(x2) # store 0xa81ea5c8 in memory
flw f24, 0(x2) # load 0xa81ea5c8 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fnmadd.s f3, f15, f24, f22, dyn # perform operation
fnmadd.s f3, f15, f24, f22, rdn # perform operation
fnmadd.s f3, f15, f24, f22, rmm # perform operation
fnmadd.s f3, f15, f24, f22, rne # perform operation
fnmadd.s f3, f15, f24, f22, rtz # perform operation
fnmadd.s f3, f15, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f15, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xb997aed0 # load x3 with value 0xb997aed0
sw x3, 0(x2) # store 0xb997aed0 in memory
flw f5, 0(x2) # load 0xb997aed0 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fnmadd.s f20, f25, f5, f28, dyn # perform operation
fnmadd.s f20, f25, f5, f28, rdn # perform operation
fnmadd.s f20, f25, f5, f28, rmm # perform operation
fnmadd.s f20, f25, f5, f28, rne # perform operation
fnmadd.s f20, f25, f5, f28, rtz # perform operation
fnmadd.s f20, f25, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f25, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f25, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0x7a7d09d8 # load x3 with value 0x7a7d09d8
sw x3, 0(x2) # store 0x7a7d09d8 in memory
flw f11, 0(x2) # load 0x7a7d09d8 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fnmadd.s f10, f25, f11, f29, dyn # perform operation
fnmadd.s f10, f25, f11, f29, rdn # perform operation
fnmadd.s f10, f25, f11, f29, rmm # perform operation
fnmadd.s f10, f25, f11, f29, rne # perform operation
fnmadd.s f10, f25, f11, f29, rtz # perform operation
fnmadd.s f10, f25, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f25, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f25, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xef951f54 # load x3 with value 0xef951f54
sw x3, 0(x2) # store 0xef951f54 in memory
flw f15, 0(x2) # load 0xef951f54 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmadd.s f10, f26, f15, f7, dyn # perform operation
fnmadd.s f10, f26, f15, f7, rdn # perform operation
fnmadd.s f10, f26, f15, f7, rmm # perform operation
fnmadd.s f10, f26, f15, f7, rne # perform operation
fnmadd.s f10, f26, f15, f7, rtz # perform operation
fnmadd.s f10, f26, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xde4c34d2 # load x3 with value 0xde4c34d2
sw x3, 0(x2) # store 0xde4c34d2 in memory
flw f21, 0(x2) # load 0xde4c34d2 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fnmadd.s f24, f31, f21, f18, dyn # perform operation
fnmadd.s f24, f31, f21, f18, rdn # perform operation
fnmadd.s f24, f31, f21, f18, rmm # perform operation
fnmadd.s f24, f31, f21, f18, rne # perform operation
fnmadd.s f24, f31, f21, f18, rtz # perform operation
fnmadd.s f24, f31, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f31, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f31, f21, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x61530b7f # load x3 with value 0x61530b7f
sw x3, 0(x2) # store 0x61530b7f in memory
flw f8, 0(x2) # load 0x61530b7f from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fnmadd.s f17, f7, f8, f16, dyn # perform operation
fnmadd.s f17, f7, f8, f16, rdn # perform operation
fnmadd.s f17, f7, f8, f16, rmm # perform operation
fnmadd.s f17, f7, f8, f16, rne # perform operation
fnmadd.s f17, f7, f8, f16, rtz # perform operation
fnmadd.s f17, f7, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f7, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f7, f8, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
la x2, scratch
li x3, 0x8f2de6a8 # load x3 with value 0x8f2de6a8
sw x3, 0(x2) # store 0x8f2de6a8 in memory
flw f16, 0(x2) # load 0x8f2de6a8 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fnmadd.s f28, f10, f16, f1, dyn # perform operation
fnmadd.s f28, f10, f16, f1, rdn # perform operation
fnmadd.s f28, f10, f16, f1, rmm # perform operation
fnmadd.s f28, f10, f16, f1, rne # perform operation
fnmadd.s f28, f10, f16, f1, rtz # perform operation
fnmadd.s f28, f10, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x4d228dbc # load x3 with value 0x4d228dbc
sw x3, 0(x2) # store 0x4d228dbc in memory
flw f9, 0(x2) # load 0x4d228dbc from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fnmadd.s f1, f5, f9, f14, dyn # perform operation
fnmadd.s f1, f5, f9, f14, rdn # perform operation
fnmadd.s f1, f5, f9, f14, rmm # perform operation
fnmadd.s f1, f5, f9, f14, rne # perform operation
fnmadd.s f1, f5, f9, f14, rtz # perform operation
fnmadd.s f1, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f5, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x586a5fed # load x3 with value 0x586a5fed
sw x3, 0(x2) # store 0x586a5fed in memory
flw f10, 0(x2) # load 0x586a5fed from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fnmadd.s f16, f30, f10, f25, dyn # perform operation
fnmadd.s f16, f30, f10, f25, rdn # perform operation
fnmadd.s f16, f30, f10, f25, rmm # perform operation
fnmadd.s f16, f30, f10, f25, rne # perform operation
fnmadd.s f16, f30, f10, f25, rtz # perform operation
fnmadd.s f16, f30, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f10, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x13b53a13 # load x3 with value 0x13b53a13
sw x3, 0(x2) # store 0x13b53a13 in memory
flw f17, 0(x2) # load 0x13b53a13 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmadd.s f18, f28, f17, f14, dyn # perform operation
fnmadd.s f18, f28, f17, f14, rdn # perform operation
fnmadd.s f18, f28, f17, f14, rmm # perform operation
fnmadd.s f18, f28, f17, f14, rne # perform operation
fnmadd.s f18, f28, f17, f14, rtz # perform operation
fnmadd.s f18, f28, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x73a80fc6 # load x3 with value 0x73a80fc6
sw x3, 0(x2) # store 0x73a80fc6 in memory
flw f1, 0(x2) # load 0x73a80fc6 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fnmadd.s f12, f8, f1, f2, dyn # perform operation
fnmadd.s f12, f8, f1, f2, rdn # perform operation
fnmadd.s f12, f8, f1, f2, rmm # perform operation
fnmadd.s f12, f8, f1, f2, rne # perform operation
fnmadd.s f12, f8, f1, f2, rtz # perform operation
fnmadd.s f12, f8, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f8, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f8, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0xeb03aca2 # load x3 with value 0xeb03aca2
sw x3, 0(x2) # store 0xeb03aca2 in memory
flw f9, 0(x2) # load 0xeb03aca2 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fnmadd.s f3, f27, f9, f22, dyn # perform operation
fnmadd.s f3, f27, f9, f22, rdn # perform operation
fnmadd.s f3, f27, f9, f22, rmm # perform operation
fnmadd.s f3, f27, f9, f22, rne # perform operation
fnmadd.s f3, f27, f9, f22, rtz # perform operation
fnmadd.s f3, f27, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f9, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x1e497d1d # load x3 with value 0x1e497d1d
sw x3, 0(x2) # store 0x1e497d1d in memory
flw f21, 0(x2) # load 0x1e497d1d from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
fnmadd.s f9, f20, f21, f26, dyn # perform operation
fnmadd.s f9, f20, f21, f26, rdn # perform operation
fnmadd.s f9, f20, f21, f26, rmm # perform operation
fnmadd.s f9, f20, f21, f26, rne # perform operation
fnmadd.s f9, f20, f21, f26, rtz # perform operation
fnmadd.s f9, f20, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f20, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f20, f21, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x8db39fa3 # load x3 with value 0x8db39fa3
sw x3, 0(x2) # store 0x8db39fa3 in memory
flw f3, 0(x2) # load 0x8db39fa3 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f1, f26, f3, f14, dyn # perform operation
fnmadd.s f1, f26, f3, f14, rdn # perform operation
fnmadd.s f1, f26, f3, f14, rmm # perform operation
fnmadd.s f1, f26, f3, f14, rne # perform operation
fnmadd.s f1, f26, f3, f14, rtz # perform operation
fnmadd.s f1, f26, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f26, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f26, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xa4e4916a # load x3 with value 0xa4e4916a
sw x3, 0(x2) # store 0xa4e4916a in memory
flw f6, 0(x2) # load 0xa4e4916a from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fnmadd.s f27, f9, f6, f21, dyn # perform operation
fnmadd.s f27, f9, f6, f21, rdn # perform operation
fnmadd.s f27, f9, f6, f21, rmm # perform operation
fnmadd.s f27, f9, f6, f21, rne # perform operation
fnmadd.s f27, f9, f6, f21, rtz # perform operation
fnmadd.s f27, f9, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f9, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f9, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x9682fb39 # load x3 with value 0x9682fb39
sw x3, 0(x2) # store 0x9682fb39 in memory
flw f29, 0(x2) # load 0x9682fb39 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fnmadd.s f21, f14, f29, f1, dyn # perform operation
fnmadd.s f21, f14, f29, f1, rdn # perform operation
fnmadd.s f21, f14, f29, f1, rmm # perform operation
fnmadd.s f21, f14, f29, f1, rne # perform operation
fnmadd.s f21, f14, f29, f1, rtz # perform operation
fnmadd.s f21, f14, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f14, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f14, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x79a2f1e5 # load x3 with value 0x79a2f1e5
sw x3, 0(x2) # store 0x79a2f1e5 in memory
flw f18, 0(x2) # load 0x79a2f1e5 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmadd.s f22, f7, f18, f31, dyn # perform operation
fnmadd.s f22, f7, f18, f31, rdn # perform operation
fnmadd.s f22, f7, f18, f31, rmm # perform operation
fnmadd.s f22, f7, f18, f31, rne # perform operation
fnmadd.s f22, f7, f18, f31, rtz # perform operation
fnmadd.s f22, f7, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f7, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f7, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f7, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f7, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f7, f18, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xdba60d04 # load x3 with value 0xdba60d04
sw x3, 0(x2) # store 0xdba60d04 in memory
flw f30, 0(x2) # load 0xdba60d04 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f10, f23, f30, f11, dyn # perform operation
fnmadd.s f10, f23, f30, f11, rdn # perform operation
fnmadd.s f10, f23, f30, f11, rmm # perform operation
fnmadd.s f10, f23, f30, f11, rne # perform operation
fnmadd.s f10, f23, f30, f11, rtz # perform operation
fnmadd.s f10, f23, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f30, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x9ca7029b # load x3 with value 0x9ca7029b
sw x3, 0(x2) # store 0x9ca7029b in memory
flw f31, 0(x2) # load 0x9ca7029b from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fnmadd.s f14, f1, f31, f23, dyn # perform operation
fnmadd.s f14, f1, f31, f23, rdn # perform operation
fnmadd.s f14, f1, f31, f23, rmm # perform operation
fnmadd.s f14, f1, f31, f23, rne # perform operation
fnmadd.s f14, f1, f31, f23, rtz # perform operation
fnmadd.s f14, f1, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f31, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xd16bc4eb # load x3 with value 0xd16bc4eb
sw x3, 0(x2) # store 0xd16bc4eb in memory
flw f10, 0(x2) # load 0xd16bc4eb from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fnmadd.s f27, f2, f10, f17, dyn # perform operation
fnmadd.s f27, f2, f10, f17, rdn # perform operation
fnmadd.s f27, f2, f10, f17, rmm # perform operation
fnmadd.s f27, f2, f10, f17, rne # perform operation
fnmadd.s f27, f2, f10, f17, rtz # perform operation
fnmadd.s f27, f2, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f2, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x43d00ddf # load x3 with value 0x43d00ddf
sw x3, 0(x2) # store 0x43d00ddf in memory
flw f2, 0(x2) # load 0x43d00ddf from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmadd.s f29, f11, f2, f18, dyn # perform operation
fnmadd.s f29, f11, f2, f18, rdn # perform operation
fnmadd.s f29, f11, f2, f18, rmm # perform operation
fnmadd.s f29, f11, f2, f18, rne # perform operation
fnmadd.s f29, f11, f2, f18, rtz # perform operation
fnmadd.s f29, f11, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
la x2, scratch
li x3, 0x41c120c1 # load x3 with value 0x41c120c1
sw x3, 0(x2) # store 0x41c120c1 in memory
flw f2, 0(x2) # load 0x41c120c1 from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fnmadd.s f21, f27, f2, f29, dyn # perform operation
fnmadd.s f21, f27, f2, f29, rdn # perform operation
fnmadd.s f21, f27, f2, f29, rmm # perform operation
fnmadd.s f21, f27, f2, f29, rne # perform operation
fnmadd.s f21, f27, f2, f29, rtz # perform operation
fnmadd.s f21, f27, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f27, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f27, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f27, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f27, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f27, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xbd1a85f5 # load x3 with value 0xbd1a85f5
sw x3, 0(x2) # store 0xbd1a85f5 in memory
flw f5, 0(x2) # load 0xbd1a85f5 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fnmadd.s f9, f26, f5, f2, dyn # perform operation
fnmadd.s f9, f26, f5, f2, rdn # perform operation
fnmadd.s f9, f26, f5, f2, rmm # perform operation
fnmadd.s f9, f26, f5, f2, rne # perform operation
fnmadd.s f9, f26, f5, f2, rtz # perform operation
fnmadd.s f9, f26, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f26, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f26, f5, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0xf9f9fea0 # load x3 with value 0xf9f9fea0
sw x3, 0(x2) # store 0xf9f9fea0 in memory
flw f29, 0(x2) # load 0xf9f9fea0 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f19, f30, f29, f9, dyn # perform operation
fnmadd.s f19, f30, f29, f9, rdn # perform operation
fnmadd.s f19, f30, f29, f9, rmm # perform operation
fnmadd.s f19, f30, f29, f9, rne # perform operation
fnmadd.s f19, f30, f29, f9, rtz # perform operation
fnmadd.s f19, f30, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
la x2, scratch
li x3, 0x09f6fae1 # load x3 with value 0x09f6fae1
sw x3, 0(x2) # store 0x09f6fae1 in memory
flw f17, 0(x2) # load 0x09f6fae1 from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmadd.s f11, f13, f17, f3, dyn # perform operation
fnmadd.s f11, f13, f17, f3, rdn # perform operation
fnmadd.s f11, f13, f17, f3, rmm # perform operation
fnmadd.s f11, f13, f17, f3, rne # perform operation
fnmadd.s f11, f13, f17, f3, rtz # perform operation
fnmadd.s f11, f13, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f13, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f13, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x641db878 # load x3 with value 0x641db878
sw x3, 0(x2) # store 0x641db878 in memory
flw f28, 0(x2) # load 0x641db878 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmadd.s f29, f14, f28, f22, dyn # perform operation
fnmadd.s f29, f14, f28, f22, rdn # perform operation
fnmadd.s f29, f14, f28, f22, rmm # perform operation
fnmadd.s f29, f14, f28, f22, rne # perform operation
fnmadd.s f29, f14, f28, f22, rtz # perform operation
fnmadd.s f29, f14, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x5ed483aa # load x3 with value 0x5ed483aa
sw x3, 0(x2) # store 0x5ed483aa in memory
flw f27, 0(x2) # load 0x5ed483aa from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.s f8, f23, f27, f21, dyn # perform operation
fnmadd.s f8, f23, f27, f21, rdn # perform operation
fnmadd.s f8, f23, f27, f21, rmm # perform operation
fnmadd.s f8, f23, f27, f21, rne # perform operation
fnmadd.s f8, f23, f27, f21, rtz # perform operation
fnmadd.s f8, f23, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x4210f5c6 # load x3 with value 0x4210f5c6
sw x3, 0(x2) # store 0x4210f5c6 in memory
flw f29, 0(x2) # load 0x4210f5c6 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmadd.s f2, f23, f29, f12, dyn # perform operation
fnmadd.s f2, f23, f29, f12, rdn # perform operation
fnmadd.s f2, f23, f29, f12, rmm # perform operation
fnmadd.s f2, f23, f29, f12, rne # perform operation
fnmadd.s f2, f23, f29, f12, rtz # perform operation
fnmadd.s f2, f23, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f23, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f23, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0x9f1f00f1 # load x3 with value 0x9f1f00f1
sw x3, 0(x2) # store 0x9f1f00f1 in memory
flw f31, 0(x2) # load 0x9f1f00f1 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fnmadd.s f26, f21, f31, f7, dyn # perform operation
fnmadd.s f26, f21, f31, f7, rdn # perform operation
fnmadd.s f26, f21, f31, f7, rmm # perform operation
fnmadd.s f26, f21, f31, f7, rne # perform operation
fnmadd.s f26, f21, f31, f7, rtz # perform operation
fnmadd.s f26, f21, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f21, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f21, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x4a1ed116 # load x3 with value 0x4a1ed116
sw x3, 0(x2) # store 0x4a1ed116 in memory
flw f25, 0(x2) # load 0x4a1ed116 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fnmadd.s f16, f9, f25, f14, dyn # perform operation
fnmadd.s f16, f9, f25, f14, rdn # perform operation
fnmadd.s f16, f9, f25, f14, rmm # perform operation
fnmadd.s f16, f9, f25, f14, rne # perform operation
fnmadd.s f16, f9, f25, f14, rtz # perform operation
fnmadd.s f16, f9, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f9, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f9, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f9, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f9, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f9, f25, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x7d1c9560 # load x3 with value 0x7d1c9560
sw x3, 0(x2) # store 0x7d1c9560 in memory
flw f15, 0(x2) # load 0x7d1c9560 from memory into f15
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f29, f30, f15, f24, dyn # perform operation
fnmadd.s f29, f30, f15, f24, rdn # perform operation
fnmadd.s f29, f30, f15, f24, rmm # perform operation
fnmadd.s f29, f30, f15, f24, rne # perform operation
fnmadd.s f29, f30, f15, f24, rtz # perform operation
fnmadd.s f29, f30, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f30, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f30, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x8287f90a # load x3 with value 0x8287f90a
sw x3, 0(x2) # store 0x8287f90a in memory
flw f17, 0(x2) # load 0x8287f90a from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmadd.s f29, f6, f17, f14, dyn # perform operation
fnmadd.s f29, f6, f17, f14, rdn # perform operation
fnmadd.s f29, f6, f17, f14, rmm # perform operation
fnmadd.s f29, f6, f17, f14, rne # perform operation
fnmadd.s f29, f6, f17, f14, rtz # perform operation
fnmadd.s f29, f6, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f6, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f6, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xe18aa4ac # load x3 with value 0xe18aa4ac
sw x3, 0(x2) # store 0xe18aa4ac in memory
flw f12, 0(x2) # load 0xe18aa4ac from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fnmadd.s f8, f17, f12, f19, dyn # perform operation
fnmadd.s f8, f17, f12, f19, rdn # perform operation
fnmadd.s f8, f17, f12, f19, rmm # perform operation
fnmadd.s f8, f17, f12, f19, rne # perform operation
fnmadd.s f8, f17, f12, f19, rtz # perform operation
fnmadd.s f8, f17, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f17, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f17, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f17, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f17, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f17, f12, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x6ee0083d # load x3 with value 0x6ee0083d
sw x3, 0(x2) # store 0x6ee0083d in memory
flw f25, 0(x2) # load 0x6ee0083d from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmadd.s f15, f3, f25, f2, dyn # perform operation
fnmadd.s f15, f3, f25, f2, rdn # perform operation
fnmadd.s f15, f3, f25, f2, rmm # perform operation
fnmadd.s f15, f3, f25, f2, rne # perform operation
fnmadd.s f15, f3, f25, f2, rtz # perform operation
fnmadd.s f15, f3, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f3, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f3, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0xb7e853c4 # load x3 with value 0xb7e853c4
sw x3, 0(x2) # store 0xb7e853c4 in memory
flw f10, 0(x2) # load 0xb7e853c4 from memory into f10
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f31, f24, f10, f2, dyn # perform operation
fnmadd.s f31, f24, f10, f2, rdn # perform operation
fnmadd.s f31, f24, f10, f2, rmm # perform operation
fnmadd.s f31, f24, f10, f2, rne # perform operation
fnmadd.s f31, f24, f10, f2, rtz # perform operation
fnmadd.s f31, f24, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x16a02396 # load x3 with value 0x16a02396
sw x3, 0(x2) # store 0x16a02396 in memory
flw f12, 0(x2) # load 0x16a02396 from memory into f12
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmadd.s f13, f26, f12, f22, dyn # perform operation
fnmadd.s f13, f26, f12, f22, rdn # perform operation
fnmadd.s f13, f26, f12, f22, rmm # perform operation
fnmadd.s f13, f26, f12, f22, rne # perform operation
fnmadd.s f13, f26, f12, f22, rtz # perform operation
fnmadd.s f13, f26, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
la x2, scratch
li x3, 0x99fe9a7b # load x3 with value 0x99fe9a7b
sw x3, 0(x2) # store 0x99fe9a7b in memory
flw f20, 0(x2) # load 0x99fe9a7b from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fnmadd.s f24, f6, f20, f10, dyn # perform operation
fnmadd.s f24, f6, f20, f10, rdn # perform operation
fnmadd.s f24, f6, f20, f10, rmm # perform operation
fnmadd.s f24, f6, f20, f10, rne # perform operation
fnmadd.s f24, f6, f20, f10, rtz # perform operation
fnmadd.s f24, f6, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f6, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f6, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0x8a8c497c # load x3 with value 0x8a8c497c
sw x3, 0(x2) # store 0x8a8c497c in memory
flw f22, 0(x2) # load 0x8a8c497c from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f23, f20, f22, f21, dyn # perform operation
fnmadd.s f23, f20, f22, f21, rdn # perform operation
fnmadd.s f23, f20, f22, f21, rmm # perform operation
fnmadd.s f23, f20, f22, f21, rne # perform operation
fnmadd.s f23, f20, f22, f21, rtz # perform operation
fnmadd.s f23, f20, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f22, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x28fecc37 # load x3 with value 0x28fecc37
sw x3, 0(x2) # store 0x28fecc37 in memory
flw f17, 0(x2) # load 0x28fecc37 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fnmadd.s f25, f14, f17, f12, dyn # perform operation
fnmadd.s f25, f14, f17, f12, rdn # perform operation
fnmadd.s f25, f14, f17, f12, rmm # perform operation
fnmadd.s f25, f14, f17, f12, rne # perform operation
fnmadd.s f25, f14, f17, f12, rtz # perform operation
fnmadd.s f25, f14, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f17, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xfcf1f6eb # load x3 with value 0xfcf1f6eb
sw x3, 0(x2) # store 0xfcf1f6eb in memory
flw f18, 0(x2) # load 0xfcf1f6eb from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f6, f9, f18, f21, dyn # perform operation
fnmadd.s f6, f9, f18, f21, rdn # perform operation
fnmadd.s f6, f9, f18, f21, rmm # perform operation
fnmadd.s f6, f9, f18, f21, rne # perform operation
fnmadd.s f6, f9, f18, f21, rtz # perform operation
fnmadd.s f6, f9, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f9, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f9, f18, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x83e08e9f # load x3 with value 0x83e08e9f
sw x3, 0(x2) # store 0x83e08e9f in memory
flw f1, 0(x2) # load 0x83e08e9f from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f15, f27, f1, f19, dyn # perform operation
fnmadd.s f15, f27, f1, f19, rdn # perform operation
fnmadd.s f15, f27, f1, f19, rmm # perform operation
fnmadd.s f15, f27, f1, f19, rne # perform operation
fnmadd.s f15, f27, f1, f19, rtz # perform operation
fnmadd.s f15, f27, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f27, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f27, f1, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xd0fc8f9f # load x3 with value 0xd0fc8f9f
sw x3, 0(x2) # store 0xd0fc8f9f in memory
flw f22, 0(x2) # load 0xd0fc8f9f from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fnmadd.s f19, f31, f22, f5, dyn # perform operation
fnmadd.s f19, f31, f22, f5, rdn # perform operation
fnmadd.s f19, f31, f22, f5, rmm # perform operation
fnmadd.s f19, f31, f22, f5, rne # perform operation
fnmadd.s f19, f31, f22, f5, rtz # perform operation
fnmadd.s f19, f31, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f22, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x7e6ebc9d # load x3 with value 0x7e6ebc9d
sw x3, 0(x2) # store 0x7e6ebc9d in memory
flw f25, 0(x2) # load 0x7e6ebc9d from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmadd.s f30, f23, f25, f28, dyn # perform operation
fnmadd.s f30, f23, f25, f28, rdn # perform operation
fnmadd.s f30, f23, f25, f28, rmm # perform operation
fnmadd.s f30, f23, f25, f28, rne # perform operation
fnmadd.s f30, f23, f25, f28, rtz # perform operation
fnmadd.s f30, f23, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f23, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xaf349118 # load x3 with value 0xaf349118
sw x3, 0(x2) # store 0xaf349118 in memory
flw f3, 0(x2) # load 0xaf349118 from memory into f3
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmadd.s f18, f20, f3, f31, dyn # perform operation
fnmadd.s f18, f20, f3, f31, rdn # perform operation
fnmadd.s f18, f20, f3, f31, rmm # perform operation
fnmadd.s f18, f20, f3, f31, rne # perform operation
fnmadd.s f18, f20, f3, f31, rtz # perform operation
fnmadd.s f18, f20, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f3, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x85ee09d7 # load x3 with value 0x85ee09d7
sw x3, 0(x2) # store 0x85ee09d7 in memory
flw f16, 0(x2) # load 0x85ee09d7 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f10, f1, f16, f13, dyn # perform operation
fnmadd.s f10, f1, f16, f13, rdn # perform operation
fnmadd.s f10, f1, f16, f13, rmm # perform operation
fnmadd.s f10, f1, f16, f13, rne # perform operation
fnmadd.s f10, f1, f16, f13, rtz # perform operation
fnmadd.s f10, f1, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x65b957c3 # load x3 with value 0x65b957c3
sw x3, 0(x2) # store 0x65b957c3 in memory
flw f18, 0(x2) # load 0x65b957c3 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmadd.s f11, f29, f18, f9, dyn # perform operation
fnmadd.s f11, f29, f18, f9, rdn # perform operation
fnmadd.s f11, f29, f18, f9, rmm # perform operation
fnmadd.s f11, f29, f18, f9, rne # perform operation
fnmadd.s f11, f29, f18, f9, rtz # perform operation
fnmadd.s f11, f29, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f29, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f29, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f29, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f29, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f29, f18, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0xf9591fbf # load x3 with value 0xf9591fbf
sw x3, 0(x2) # store 0xf9591fbf in memory
flw f22, 0(x2) # load 0xf9591fbf from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fnmadd.s f29, f18, f22, f12, dyn # perform operation
fnmadd.s f29, f18, f22, f12, rdn # perform operation
fnmadd.s f29, f18, f22, f12, rmm # perform operation
fnmadd.s f29, f18, f22, f12, rne # perform operation
fnmadd.s f29, f18, f22, f12, rtz # perform operation
fnmadd.s f29, f18, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f18, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x585da50c # load x3 with value 0x585da50c
sw x3, 0(x2) # store 0x585da50c in memory
flw f16, 0(x2) # load 0x585da50c from memory into f16
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f17, f2, f16, f6, dyn # perform operation
fnmadd.s f17, f2, f16, f6, rdn # perform operation
fnmadd.s f17, f2, f16, f6, rmm # perform operation
fnmadd.s f17, f2, f16, f6, rne # perform operation
fnmadd.s f17, f2, f16, f6, rtz # perform operation
fnmadd.s f17, f2, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x16604346 # load x3 with value 0x16604346
sw x3, 0(x2) # store 0x16604346 in memory
flw f20, 0(x2) # load 0x16604346 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f23, f17, f20, f28, dyn # perform operation
fnmadd.s f23, f17, f20, f28, rdn # perform operation
fnmadd.s f23, f17, f20, f28, rmm # perform operation
fnmadd.s f23, f17, f20, f28, rne # perform operation
fnmadd.s f23, f17, f20, f28, rtz # perform operation
fnmadd.s f23, f17, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x429896a2 # load x3 with value 0x429896a2
sw x3, 0(x2) # store 0x429896a2 in memory
flw f11, 0(x2) # load 0x429896a2 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fnmadd.s f16, f30, f11, f1, dyn # perform operation
fnmadd.s f16, f30, f11, f1, rdn # perform operation
fnmadd.s f16, f30, f11, f1, rmm # perform operation
fnmadd.s f16, f30, f11, f1, rne # perform operation
fnmadd.s f16, f30, f11, f1, rtz # perform operation
fnmadd.s f16, f30, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f30, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f30, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xf020070e # load x3 with value 0xf020070e
sw x3, 0(x2) # store 0xf020070e in memory
flw f15, 0(x2) # load 0xf020070e from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
fnmadd.s f11, f22, f15, f6, dyn # perform operation
fnmadd.s f11, f22, f15, f6, rdn # perform operation
fnmadd.s f11, f22, f15, f6, rmm # perform operation
fnmadd.s f11, f22, f15, f6, rne # perform operation
fnmadd.s f11, f22, f15, f6, rtz # perform operation
fnmadd.s f11, f22, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f22, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f22, f15, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0x8f0b3efd # load x3 with value 0x8f0b3efd
sw x3, 0(x2) # store 0x8f0b3efd in memory
flw f1, 0(x2) # load 0x8f0b3efd from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f17, f2, f1, f16, dyn # perform operation
fnmadd.s f17, f2, f1, f16, rdn # perform operation
fnmadd.s f17, f2, f1, f16, rmm # perform operation
fnmadd.s f17, f2, f1, f16, rne # perform operation
fnmadd.s f17, f2, f1, f16, rtz # perform operation
fnmadd.s f17, f2, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f2, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f2, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xc02b2711 # load x3 with value 0xc02b2711
sw x3, 0(x2) # store 0xc02b2711 in memory
flw f16, 0(x2) # load 0xc02b2711 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f28, f19, f16, f24, dyn # perform operation
fnmadd.s f28, f19, f16, f24, rdn # perform operation
fnmadd.s f28, f19, f16, f24, rmm # perform operation
fnmadd.s f28, f19, f16, f24, rne # perform operation
fnmadd.s f28, f19, f16, f24, rtz # perform operation
fnmadd.s f28, f19, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xe8dfe055 # load x3 with value 0xe8dfe055
sw x3, 0(x2) # store 0xe8dfe055 in memory
flw f27, 0(x2) # load 0xe8dfe055 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f16, f8, f27, f10, dyn # perform operation
fnmadd.s f16, f8, f27, f10, rdn # perform operation
fnmadd.s f16, f8, f27, f10, rmm # perform operation
fnmadd.s f16, f8, f27, f10, rne # perform operation
fnmadd.s f16, f8, f27, f10, rtz # perform operation
fnmadd.s f16, f8, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f8, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x40faea49 # load x3 with value 0x40faea49
sw x3, 0(x2) # store 0x40faea49 in memory
flw f22, 0(x2) # load 0x40faea49 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f11, f26, f22, f14, dyn # perform operation
fnmadd.s f11, f26, f22, f14, rdn # perform operation
fnmadd.s f11, f26, f22, f14, rmm # perform operation
fnmadd.s f11, f26, f22, f14, rne # perform operation
fnmadd.s f11, f26, f22, f14, rtz # perform operation
fnmadd.s f11, f26, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f26, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f26, f22, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x98fb1059 # load x3 with value 0x98fb1059
sw x3, 0(x2) # store 0x98fb1059 in memory
flw f2, 0(x2) # load 0x98fb1059 from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fnmadd.s f22, f29, f2, f3, dyn # perform operation
fnmadd.s f22, f29, f2, f3, rdn # perform operation
fnmadd.s f22, f29, f2, f3, rmm # perform operation
fnmadd.s f22, f29, f2, f3, rne # perform operation
fnmadd.s f22, f29, f2, f3, rtz # perform operation
fnmadd.s f22, f29, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x5e53733f # load x3 with value 0x5e53733f
sw x3, 0(x2) # store 0x5e53733f in memory
flw f1, 0(x2) # load 0x5e53733f from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fnmadd.s f9, f8, f1, f21, dyn # perform operation
fnmadd.s f9, f8, f1, f21, rdn # perform operation
fnmadd.s f9, f8, f1, f21, rmm # perform operation
fnmadd.s f9, f8, f1, f21, rne # perform operation
fnmadd.s f9, f8, f1, f21, rtz # perform operation
fnmadd.s f9, f8, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f8, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f8, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0xf0568cdf # load x3 with value 0xf0568cdf
sw x3, 0(x2) # store 0xf0568cdf in memory
flw f30, 0(x2) # load 0xf0568cdf from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fnmadd.s f14, f21, f30, f5, dyn # perform operation
fnmadd.s f14, f21, f30, f5, rdn # perform operation
fnmadd.s f14, f21, f30, f5, rmm # perform operation
fnmadd.s f14, f21, f30, f5, rne # perform operation
fnmadd.s f14, f21, f30, f5, rtz # perform operation
fnmadd.s f14, f21, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f21, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f21, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xc7ef761c # load x3 with value 0xc7ef761c
sw x3, 0(x2) # store 0xc7ef761c in memory
flw f10, 0(x2) # load 0xc7ef761c from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fnmadd.s f6, f26, f10, f7, dyn # perform operation
fnmadd.s f6, f26, f10, f7, rdn # perform operation
fnmadd.s f6, f26, f10, f7, rmm # perform operation
fnmadd.s f6, f26, f10, f7, rne # perform operation
fnmadd.s f6, f26, f10, f7, rtz # perform operation
fnmadd.s f6, f26, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f26, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f26, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f26, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f26, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f26, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x314fc4bb # load x3 with value 0x314fc4bb
sw x3, 0(x2) # store 0x314fc4bb in memory
flw f1, 0(x2) # load 0x314fc4bb from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmadd.s f12, f13, f1, f27, dyn # perform operation
fnmadd.s f12, f13, f1, f27, rdn # perform operation
fnmadd.s f12, f13, f1, f27, rmm # perform operation
fnmadd.s f12, f13, f1, f27, rne # perform operation
fnmadd.s f12, f13, f1, f27, rtz # perform operation
fnmadd.s f12, f13, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f13, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f13, f1, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x45c6b631 # load x3 with value 0x45c6b631
sw x3, 0(x2) # store 0x45c6b631 in memory
flw f5, 0(x2) # load 0x45c6b631 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fnmadd.s f29, f13, f5, f10, dyn # perform operation
fnmadd.s f29, f13, f5, f10, rdn # perform operation
fnmadd.s f29, f13, f5, f10, rmm # perform operation
fnmadd.s f29, f13, f5, f10, rne # perform operation
fnmadd.s f29, f13, f5, f10, rtz # perform operation
fnmadd.s f29, f13, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f13, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f13, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f13, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f13, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f13, f5, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x51ef1e78 # load x3 with value 0x51ef1e78
sw x3, 0(x2) # store 0x51ef1e78 in memory
flw f21, 0(x2) # load 0x51ef1e78 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fnmadd.s f22, f30, f21, f29, dyn # perform operation
fnmadd.s f22, f30, f21, f29, rdn # perform operation
fnmadd.s f22, f30, f21, f29, rmm # perform operation
fnmadd.s f22, f30, f21, f29, rne # perform operation
fnmadd.s f22, f30, f21, f29, rtz # perform operation
fnmadd.s f22, f30, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f30, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f30, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x57430e6f # load x3 with value 0x57430e6f
sw x3, 0(x2) # store 0x57430e6f in memory
flw f31, 0(x2) # load 0x57430e6f from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmadd.s f19, f1, f31, f9, dyn # perform operation
fnmadd.s f19, f1, f31, f9, rdn # perform operation
fnmadd.s f19, f1, f31, f9, rmm # perform operation
fnmadd.s f19, f1, f31, f9, rne # perform operation
fnmadd.s f19, f1, f31, f9, rtz # perform operation
fnmadd.s f19, f1, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f1, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f1, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x1119667b # load x3 with value 0x1119667b
sw x3, 0(x2) # store 0x1119667b in memory
flw f11, 0(x2) # load 0x1119667b from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fnmadd.s f28, f3, f11, f21, dyn # perform operation
fnmadd.s f28, f3, f11, f21, rdn # perform operation
fnmadd.s f28, f3, f11, f21, rmm # perform operation
fnmadd.s f28, f3, f11, f21, rne # perform operation
fnmadd.s f28, f3, f11, f21, rtz # perform operation
fnmadd.s f28, f3, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x2fe3e311 # load x3 with value 0x2fe3e311
sw x3, 0(x2) # store 0x2fe3e311 in memory
flw f2, 0(x2) # load 0x2fe3e311 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fnmadd.s f23, f16, f2, f14, dyn # perform operation
fnmadd.s f23, f16, f2, f14, rdn # perform operation
fnmadd.s f23, f16, f2, f14, rmm # perform operation
fnmadd.s f23, f16, f2, f14, rne # perform operation
fnmadd.s f23, f16, f2, f14, rtz # perform operation
fnmadd.s f23, f16, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0xf8147132 # load x3 with value 0xf8147132
sw x3, 0(x2) # store 0xf8147132 in memory
flw f24, 0(x2) # load 0xf8147132 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f13, f12, f24, f21, dyn # perform operation
fnmadd.s f13, f12, f24, f21, rdn # perform operation
fnmadd.s f13, f12, f24, f21, rmm # perform operation
fnmadd.s f13, f12, f24, f21, rne # perform operation
fnmadd.s f13, f12, f24, f21, rtz # perform operation
fnmadd.s f13, f12, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xe7bb591c # load x3 with value 0xe7bb591c
sw x3, 0(x2) # store 0xe7bb591c in memory
flw f14, 0(x2) # load 0xe7bb591c from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fnmadd.s f24, f28, f14, f1, dyn # perform operation
fnmadd.s f24, f28, f14, f1, rdn # perform operation
fnmadd.s f24, f28, f14, f1, rmm # perform operation
fnmadd.s f24, f28, f14, f1, rne # perform operation
fnmadd.s f24, f28, f14, f1, rtz # perform operation
fnmadd.s f24, f28, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f28, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f28, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f28, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f28, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f28, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x94ea694b # load x3 with value 0x94ea694b
sw x3, 0(x2) # store 0x94ea694b in memory
flw f26, 0(x2) # load 0x94ea694b from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmadd.s f22, f5, f26, f17, dyn # perform operation
fnmadd.s f22, f5, f26, f17, rdn # perform operation
fnmadd.s f22, f5, f26, f17, rmm # perform operation
fnmadd.s f22, f5, f26, f17, rne # perform operation
fnmadd.s f22, f5, f26, f17, rtz # perform operation
fnmadd.s f22, f5, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f5, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f5, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f5, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f5, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f5, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xcaf847b5 # load x3 with value 0xcaf847b5
sw x3, 0(x2) # store 0xcaf847b5 in memory
flw f10, 0(x2) # load 0xcaf847b5 from memory into f10
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f5, f11, f10, f19, dyn # perform operation
fnmadd.s f5, f11, f10, f19, rdn # perform operation
fnmadd.s f5, f11, f10, f19, rmm # perform operation
fnmadd.s f5, f11, f10, f19, rne # perform operation
fnmadd.s f5, f11, f10, f19, rtz # perform operation
fnmadd.s f5, f11, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0xe250e019 # load x3 with value 0xe250e019
sw x3, 0(x2) # store 0xe250e019 in memory
flw f8, 0(x2) # load 0xe250e019 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fnmadd.s f19, f30, f8, f18, dyn # perform operation
fnmadd.s f19, f30, f8, f18, rdn # perform operation
fnmadd.s f19, f30, f8, f18, rmm # perform operation
fnmadd.s f19, f30, f8, f18, rne # perform operation
fnmadd.s f19, f30, f8, f18, rtz # perform operation
fnmadd.s f19, f30, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x311372d8 # load x3 with value 0x311372d8
sw x3, 0(x2) # store 0x311372d8 in memory
flw f31, 0(x2) # load 0x311372d8 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f10, f28, f31, f9, dyn # perform operation
fnmadd.s f10, f28, f31, f9, rdn # perform operation
fnmadd.s f10, f28, f31, f9, rmm # perform operation
fnmadd.s f10, f28, f31, f9, rne # perform operation
fnmadd.s f10, f28, f31, f9, rtz # perform operation
fnmadd.s f10, f28, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f31, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x0b574700 # load x3 with value 0x0b574700
sw x3, 0(x2) # store 0x0b574700 in memory
flw f22, 0(x2) # load 0x0b574700 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fnmadd.s f12, f10, f22, f2, dyn # perform operation
fnmadd.s f12, f10, f22, f2, rdn # perform operation
fnmadd.s f12, f10, f22, f2, rmm # perform operation
fnmadd.s f12, f10, f22, f2, rne # perform operation
fnmadd.s f12, f10, f22, f2, rtz # perform operation
fnmadd.s f12, f10, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f10, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f10, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x7b273ac6 # load x3 with value 0x7b273ac6
sw x3, 0(x2) # store 0x7b273ac6 in memory
flw f29, 0(x2) # load 0x7b273ac6 from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmadd.s f27, f21, f29, f31, dyn # perform operation
fnmadd.s f27, f21, f29, f31, rdn # perform operation
fnmadd.s f27, f21, f29, f31, rmm # perform operation
fnmadd.s f27, f21, f29, f31, rne # perform operation
fnmadd.s f27, f21, f29, f31, rtz # perform operation
fnmadd.s f27, f21, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f21, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f21, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xfb63d6bc # load x3 with value 0xfb63d6bc
sw x3, 0(x2) # store 0xfb63d6bc in memory
flw f28, 0(x2) # load 0xfb63d6bc from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fnmadd.s f24, f20, f28, f13, dyn # perform operation
fnmadd.s f24, f20, f28, f13, rdn # perform operation
fnmadd.s f24, f20, f28, f13, rmm # perform operation
fnmadd.s f24, f20, f28, f13, rne # perform operation
fnmadd.s f24, f20, f28, f13, rtz # perform operation
fnmadd.s f24, f20, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x14f35ce0 # load x3 with value 0x14f35ce0
sw x3, 0(x2) # store 0x14f35ce0 in memory
flw f8, 0(x2) # load 0x14f35ce0 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fnmadd.s f10, f5, f8, f3, dyn # perform operation
fnmadd.s f10, f5, f8, f3, rdn # perform operation
fnmadd.s f10, f5, f8, f3, rmm # perform operation
fnmadd.s f10, f5, f8, f3, rne # perform operation
fnmadd.s f10, f5, f8, f3, rtz # perform operation
fnmadd.s f10, f5, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f5, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f5, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f5, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f5, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f5, f8, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x615ee482 # load x3 with value 0x615ee482
sw x3, 0(x2) # store 0x615ee482 in memory
flw f7, 0(x2) # load 0x615ee482 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fnmadd.s f13, f11, f7, f20, dyn # perform operation
fnmadd.s f13, f11, f7, f20, rdn # perform operation
fnmadd.s f13, f11, f7, f20, rmm # perform operation
fnmadd.s f13, f11, f7, f20, rne # perform operation
fnmadd.s f13, f11, f7, f20, rtz # perform operation
fnmadd.s f13, f11, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f11, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f11, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x673fda2a # load x3 with value 0x673fda2a
sw x3, 0(x2) # store 0x673fda2a in memory
flw f10, 0(x2) # load 0x673fda2a from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmadd.s f5, f21, f10, f11, dyn # perform operation
fnmadd.s f5, f21, f10, f11, rdn # perform operation
fnmadd.s f5, f21, f10, f11, rmm # perform operation
fnmadd.s f5, f21, f10, f11, rne # perform operation
fnmadd.s f5, f21, f10, f11, rtz # perform operation
fnmadd.s f5, f21, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f21, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f21, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f21, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f21, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f21, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x7ffc6c44 # load x3 with value 0x7ffc6c44
sw x3, 0(x2) # store 0x7ffc6c44 in memory
flw f27, 0(x2) # load 0x7ffc6c44 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fnmadd.s f14, f12, f27, f7, dyn # perform operation
fnmadd.s f14, f12, f27, f7, rdn # perform operation
fnmadd.s f14, f12, f27, f7, rmm # perform operation
fnmadd.s f14, f12, f27, f7, rne # perform operation
fnmadd.s f14, f12, f27, f7, rtz # perform operation
fnmadd.s f14, f12, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f12, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f12, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
la x2, scratch
li x3, 0xc6c7d139 # load x3 with value 0xc6c7d139
sw x3, 0(x2) # store 0xc6c7d139 in memory
flw f29, 0(x2) # load 0xc6c7d139 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmadd.s f2, f18, f29, f12, dyn # perform operation
fnmadd.s f2, f18, f29, f12, rdn # perform operation
fnmadd.s f2, f18, f29, f12, rmm # perform operation
fnmadd.s f2, f18, f29, f12, rne # perform operation
fnmadd.s f2, f18, f29, f12, rtz # perform operation
fnmadd.s f2, f18, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f18, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f18, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f18, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f18, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f18, f29, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x75c40661 # load x3 with value 0x75c40661
sw x3, 0(x2) # store 0x75c40661 in memory
flw f7, 0(x2) # load 0x75c40661 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmadd.s f11, f30, f7, f1, dyn # perform operation
fnmadd.s f11, f30, f7, f1, rdn # perform operation
fnmadd.s f11, f30, f7, f1, rmm # perform operation
fnmadd.s f11, f30, f7, f1, rne # perform operation
fnmadd.s f11, f30, f7, f1, rtz # perform operation
fnmadd.s f11, f30, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x634deb29 # load x3 with value 0x634deb29
sw x3, 0(x2) # store 0x634deb29 in memory
flw f18, 0(x2) # load 0x634deb29 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmadd.s f1, f6, f18, f13, dyn # perform operation
fnmadd.s f1, f6, f18, f13, rdn # perform operation
fnmadd.s f1, f6, f18, f13, rmm # perform operation
fnmadd.s f1, f6, f18, f13, rne # perform operation
fnmadd.s f1, f6, f18, f13, rtz # perform operation
fnmadd.s f1, f6, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xe28948c8 # load x3 with value 0xe28948c8
sw x3, 0(x2) # store 0xe28948c8 in memory
flw f9, 0(x2) # load 0xe28948c8 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fnmadd.s f31, f25, f9, f17, dyn # perform operation
fnmadd.s f31, f25, f9, f17, rdn # perform operation
fnmadd.s f31, f25, f9, f17, rmm # perform operation
fnmadd.s f31, f25, f9, f17, rne # perform operation
fnmadd.s f31, f25, f9, f17, rtz # perform operation
fnmadd.s f31, f25, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f25, f9, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
la x2, scratch
li x3, 0x5b5f4acb # load x3 with value 0x5b5f4acb
sw x3, 0(x2) # store 0x5b5f4acb in memory
flw f25, 0(x2) # load 0x5b5f4acb from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f13, f27, f25, f1, dyn # perform operation
fnmadd.s f13, f27, f25, f1, rdn # perform operation
fnmadd.s f13, f27, f25, f1, rmm # perform operation
fnmadd.s f13, f27, f25, f1, rne # perform operation
fnmadd.s f13, f27, f25, f1, rtz # perform operation
fnmadd.s f13, f27, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f27, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f27, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f27, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f27, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f27, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x19e56aa3 # load x3 with value 0x19e56aa3
sw x3, 0(x2) # store 0x19e56aa3 in memory
flw f8, 0(x2) # load 0x19e56aa3 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f23, f3, f8, f18, dyn # perform operation
fnmadd.s f23, f3, f8, f18, rdn # perform operation
fnmadd.s f23, f3, f8, f18, rmm # perform operation
fnmadd.s f23, f3, f8, f18, rne # perform operation
fnmadd.s f23, f3, f8, f18, rtz # perform operation
fnmadd.s f23, f3, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xe249a3a4 # load x3 with value 0xe249a3a4
sw x3, 0(x2) # store 0xe249a3a4 in memory
flw f30, 0(x2) # load 0xe249a3a4 from memory into f30
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f14, f13, f30, f2, dyn # perform operation
fnmadd.s f14, f13, f30, f2, rdn # perform operation
fnmadd.s f14, f13, f30, f2, rmm # perform operation
fnmadd.s f14, f13, f30, f2, rne # perform operation
fnmadd.s f14, f13, f30, f2, rtz # perform operation
fnmadd.s f14, f13, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x27783da7 # load x3 with value 0x27783da7
sw x3, 0(x2) # store 0x27783da7 in memory
flw f27, 0(x2) # load 0x27783da7 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
fnmadd.s f29, f15, f27, f22, dyn # perform operation
fnmadd.s f29, f15, f27, f22, rdn # perform operation
fnmadd.s f29, f15, f27, f22, rmm # perform operation
fnmadd.s f29, f15, f27, f22, rne # perform operation
fnmadd.s f29, f15, f27, f22, rtz # perform operation
fnmadd.s f29, f15, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f15, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f15, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0xcb6c9ff6 # load x3 with value 0xcb6c9ff6
sw x3, 0(x2) # store 0xcb6c9ff6 in memory
flw f11, 0(x2) # load 0xcb6c9ff6 from memory into f11
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f17, f25, f11, f24, dyn # perform operation
fnmadd.s f17, f25, f11, f24, rdn # perform operation
fnmadd.s f17, f25, f11, f24, rmm # perform operation
fnmadd.s f17, f25, f11, f24, rne # perform operation
fnmadd.s f17, f25, f11, f24, rtz # perform operation
fnmadd.s f17, f25, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x75b0f8f1 # load x3 with value 0x75b0f8f1
sw x3, 0(x2) # store 0x75b0f8f1 in memory
flw f6, 0(x2) # load 0x75b0f8f1 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmadd.s f23, f15, f6, f16, dyn # perform operation
fnmadd.s f23, f15, f6, f16, rdn # perform operation
fnmadd.s f23, f15, f6, f16, rmm # perform operation
fnmadd.s f23, f15, f6, f16, rne # perform operation
fnmadd.s f23, f15, f6, f16, rtz # perform operation
fnmadd.s f23, f15, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f15, f6, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0xdc12931c # load x3 with value 0xdc12931c
sw x3, 0(x2) # store 0xdc12931c in memory
flw f29, 0(x2) # load 0xdc12931c from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f20, f24, f29, f26, dyn # perform operation
fnmadd.s f20, f24, f29, f26, rdn # perform operation
fnmadd.s f20, f24, f29, f26, rmm # perform operation
fnmadd.s f20, f24, f29, f26, rne # perform operation
fnmadd.s f20, f24, f29, f26, rtz # perform operation
fnmadd.s f20, f24, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f24, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f24, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f24, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f24, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f24, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xb38e017e # load x3 with value 0xb38e017e
sw x3, 0(x2) # store 0xb38e017e in memory
flw f26, 0(x2) # load 0xb38e017e from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmadd.s f11, f7, f26, f24, dyn # perform operation
fnmadd.s f11, f7, f26, f24, rdn # perform operation
fnmadd.s f11, f7, f26, f24, rmm # perform operation
fnmadd.s f11, f7, f26, f24, rne # perform operation
fnmadd.s f11, f7, f26, f24, rtz # perform operation
fnmadd.s f11, f7, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f7, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f7, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f7, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f7, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f7, f26, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x36848f7f # load x3 with value 0x36848f7f
sw x3, 0(x2) # store 0x36848f7f in memory
flw f13, 0(x2) # load 0x36848f7f from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f8, f7, f13, f17, dyn # perform operation
fnmadd.s f8, f7, f13, f17, rdn # perform operation
fnmadd.s f8, f7, f13, f17, rmm # perform operation
fnmadd.s f8, f7, f13, f17, rne # perform operation
fnmadd.s f8, f7, f13, f17, rtz # perform operation
fnmadd.s f8, f7, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x5e416027 # load x3 with value 0x5e416027
sw x3, 0(x2) # store 0x5e416027 in memory
flw f15, 0(x2) # load 0x5e416027 from memory into f15
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fnmadd.s f3, f14, f15, f16, dyn # perform operation
fnmadd.s f3, f14, f15, f16, rdn # perform operation
fnmadd.s f3, f14, f15, f16, rmm # perform operation
fnmadd.s f3, f14, f15, f16, rne # perform operation
fnmadd.s f3, f14, f15, f16, rtz # perform operation
fnmadd.s f3, f14, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f14, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f14, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f14, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f14, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f14, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x8215e9a4 # load x3 with value 0x8215e9a4
sw x3, 0(x2) # store 0x8215e9a4 in memory
flw f8, 0(x2) # load 0x8215e9a4 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f22, f17, f8, f26, dyn # perform operation
fnmadd.s f22, f17, f8, f26, rdn # perform operation
fnmadd.s f22, f17, f8, f26, rmm # perform operation
fnmadd.s f22, f17, f8, f26, rne # perform operation
fnmadd.s f22, f17, f8, f26, rtz # perform operation
fnmadd.s f22, f17, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f8, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0x6ec7824f # load x3 with value 0x6ec7824f
sw x3, 0(x2) # store 0x6ec7824f in memory
flw f18, 0(x2) # load 0x6ec7824f from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmadd.s f10, f29, f18, f26, dyn # perform operation
fnmadd.s f10, f29, f18, f26, rdn # perform operation
fnmadd.s f10, f29, f18, f26, rmm # perform operation
fnmadd.s f10, f29, f18, f26, rne # perform operation
fnmadd.s f10, f29, f18, f26, rtz # perform operation
fnmadd.s f10, f29, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f29, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f29, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xe26c1314 # load x3 with value 0xe26c1314
sw x3, 0(x2) # store 0xe26c1314 in memory
flw f5, 0(x2) # load 0xe26c1314 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.s f10, f21, f5, f11, dyn # perform operation
fnmadd.s f10, f21, f5, f11, rdn # perform operation
fnmadd.s f10, f21, f5, f11, rmm # perform operation
fnmadd.s f10, f21, f5, f11, rne # perform operation
fnmadd.s f10, f21, f5, f11, rtz # perform operation
fnmadd.s f10, f21, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x5db3d278 # load x3 with value 0x5db3d278
sw x3, 0(x2) # store 0x5db3d278 in memory
flw f8, 0(x2) # load 0x5db3d278 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fnmadd.s f30, f12, f8, f6, dyn # perform operation
fnmadd.s f30, f12, f8, f6, rdn # perform operation
fnmadd.s f30, f12, f8, f6, rmm # perform operation
fnmadd.s f30, f12, f8, f6, rne # perform operation
fnmadd.s f30, f12, f8, f6, rtz # perform operation
fnmadd.s f30, f12, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f8, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xa7e2a02d # load x3 with value 0xa7e2a02d
sw x3, 0(x2) # store 0xa7e2a02d in memory
flw f19, 0(x2) # load 0xa7e2a02d from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f22, f29, f19, f27, dyn # perform operation
fnmadd.s f22, f29, f19, f27, rdn # perform operation
fnmadd.s f22, f29, f19, f27, rmm # perform operation
fnmadd.s f22, f29, f19, f27, rne # perform operation
fnmadd.s f22, f29, f19, f27, rtz # perform operation
fnmadd.s f22, f29, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0xaa869401 # load x3 with value 0xaa869401
sw x3, 0(x2) # store 0xaa869401 in memory
flw f30, 0(x2) # load 0xaa869401 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f13, f25, f30, f2, dyn # perform operation
fnmadd.s f13, f25, f30, f2, rdn # perform operation
fnmadd.s f13, f25, f30, f2, rmm # perform operation
fnmadd.s f13, f25, f30, f2, rne # perform operation
fnmadd.s f13, f25, f30, f2, rtz # perform operation
fnmadd.s f13, f25, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f30, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x5667819d # load x3 with value 0x5667819d
sw x3, 0(x2) # store 0x5667819d in memory
flw f30, 0(x2) # load 0x5667819d from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fnmadd.s f17, f12, f30, f7, dyn # perform operation
fnmadd.s f17, f12, f30, f7, rdn # perform operation
fnmadd.s f17, f12, f30, f7, rmm # perform operation
fnmadd.s f17, f12, f30, f7, rne # perform operation
fnmadd.s f17, f12, f30, f7, rtz # perform operation
fnmadd.s f17, f12, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f12, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f12, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f12, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f12, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f12, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0x1e42c1e1 # load x3 with value 0x1e42c1e1
sw x3, 0(x2) # store 0x1e42c1e1 in memory
flw f1, 0(x2) # load 0x1e42c1e1 from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fnmadd.s f29, f5, f1, f18, dyn # perform operation
fnmadd.s f29, f5, f1, f18, rdn # perform operation
fnmadd.s f29, f5, f1, f18, rmm # perform operation
fnmadd.s f29, f5, f1, f18, rne # perform operation
fnmadd.s f29, f5, f1, f18, rtz # perform operation
fnmadd.s f29, f5, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xb4e8fbd1 # load x3 with value 0xb4e8fbd1
sw x3, 0(x2) # store 0xb4e8fbd1 in memory
flw f8, 0(x2) # load 0xb4e8fbd1 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
fnmadd.s f12, f29, f8, f20, dyn # perform operation
fnmadd.s f12, f29, f8, f20, rdn # perform operation
fnmadd.s f12, f29, f8, f20, rmm # perform operation
fnmadd.s f12, f29, f8, f20, rne # perform operation
fnmadd.s f12, f29, f8, f20, rtz # perform operation
fnmadd.s f12, f29, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f29, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f29, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f29, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f29, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f29, f8, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xac6d352e # load x3 with value 0xac6d352e
sw x3, 0(x2) # store 0xac6d352e in memory
flw f24, 0(x2) # load 0xac6d352e from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fnmadd.s f14, f13, f24, f8, dyn # perform operation
fnmadd.s f14, f13, f24, f8, rdn # perform operation
fnmadd.s f14, f13, f24, f8, rmm # perform operation
fnmadd.s f14, f13, f24, f8, rne # perform operation
fnmadd.s f14, f13, f24, f8, rtz # perform operation
fnmadd.s f14, f13, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x02deda01 # load x3 with value 0x02deda01
sw x3, 0(x2) # store 0x02deda01 in memory
flw f15, 0(x2) # load 0x02deda01 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fnmadd.s f10, f23, f15, f16, dyn # perform operation
fnmadd.s f10, f23, f15, f16, rdn # perform operation
fnmadd.s f10, f23, f15, f16, rmm # perform operation
fnmadd.s f10, f23, f15, f16, rne # perform operation
fnmadd.s f10, f23, f15, f16, rtz # perform operation
fnmadd.s f10, f23, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f23, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f23, f15, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x8ea2ae0e # load x3 with value 0x8ea2ae0e
sw x3, 0(x2) # store 0x8ea2ae0e in memory
flw f8, 0(x2) # load 0x8ea2ae0e from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fnmadd.s f10, f11, f8, f7, dyn # perform operation
fnmadd.s f10, f11, f8, f7, rdn # perform operation
fnmadd.s f10, f11, f8, f7, rmm # perform operation
fnmadd.s f10, f11, f8, f7, rne # perform operation
fnmadd.s f10, f11, f8, f7, rtz # perform operation
fnmadd.s f10, f11, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f11, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f11, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f11, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f11, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f11, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xd53839d5 # load x3 with value 0xd53839d5
sw x3, 0(x2) # store 0xd53839d5 in memory
flw f7, 0(x2) # load 0xd53839d5 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
fnmadd.s f12, f20, f7, f9, dyn # perform operation
fnmadd.s f12, f20, f7, f9, rdn # perform operation
fnmadd.s f12, f20, f7, f9, rmm # perform operation
fnmadd.s f12, f20, f7, f9, rne # perform operation
fnmadd.s f12, f20, f7, f9, rtz # perform operation
fnmadd.s f12, f20, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f20, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f20, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f20, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f20, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f20, f7, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xad12dbd5 # load x3 with value 0xad12dbd5
sw x3, 0(x2) # store 0xad12dbd5 in memory
flw f18, 0(x2) # load 0xad12dbd5 from memory into f18
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fnmadd.s f5, f7, f18, f8, dyn # perform operation
fnmadd.s f5, f7, f18, f8, rdn # perform operation
fnmadd.s f5, f7, f18, f8, rmm # perform operation
fnmadd.s f5, f7, f18, f8, rne # perform operation
fnmadd.s f5, f7, f18, f8, rtz # perform operation
fnmadd.s f5, f7, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f7, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f7, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x7d526197 # load x3 with value 0x7d526197
sw x3, 0(x2) # store 0x7d526197 in memory
flw f11, 0(x2) # load 0x7d526197 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmadd.s f2, f1, f11, f14, dyn # perform operation
fnmadd.s f2, f1, f11, f14, rdn # perform operation
fnmadd.s f2, f1, f11, f14, rmm # perform operation
fnmadd.s f2, f1, f11, f14, rne # perform operation
fnmadd.s f2, f1, f11, f14, rtz # perform operation
fnmadd.s f2, f1, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f1, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f1, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f1, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f1, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f1, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xa4302778 # load x3 with value 0xa4302778
sw x3, 0(x2) # store 0xa4302778 in memory
flw f16, 0(x2) # load 0xa4302778 from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fnmadd.s f18, f31, f16, f5, dyn # perform operation
fnmadd.s f18, f31, f16, f5, rdn # perform operation
fnmadd.s f18, f31, f16, f5, rmm # perform operation
fnmadd.s f18, f31, f16, f5, rne # perform operation
fnmadd.s f18, f31, f16, f5, rtz # perform operation
fnmadd.s f18, f31, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f31, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f31, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x203215ca # load x3 with value 0x203215ca
sw x3, 0(x2) # store 0x203215ca in memory
flw f19, 0(x2) # load 0x203215ca from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f10, f26, f19, f6, dyn # perform operation
fnmadd.s f10, f26, f19, f6, rdn # perform operation
fnmadd.s f10, f26, f19, f6, rmm # perform operation
fnmadd.s f10, f26, f19, f6, rne # perform operation
fnmadd.s f10, f26, f19, f6, rtz # perform operation
fnmadd.s f10, f26, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f26, f19, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x702375d3 # load x3 with value 0x702375d3
sw x3, 0(x2) # store 0x702375d3 in memory
flw f16, 0(x2) # load 0x702375d3 from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fnmadd.s f2, f13, f16, f6, dyn # perform operation
fnmadd.s f2, f13, f16, f6, rdn # perform operation
fnmadd.s f2, f13, f16, f6, rmm # perform operation
fnmadd.s f2, f13, f16, f6, rne # perform operation
fnmadd.s f2, f13, f16, f6, rtz # perform operation
fnmadd.s f2, f13, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f16, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x3e16cb25 # load x3 with value 0x3e16cb25
sw x3, 0(x2) # store 0x3e16cb25 in memory
flw f15, 0(x2) # load 0x3e16cb25 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fnmadd.s f7, f22, f15, f9, dyn # perform operation
fnmadd.s f7, f22, f15, f9, rdn # perform operation
fnmadd.s f7, f22, f15, f9, rmm # perform operation
fnmadd.s f7, f22, f15, f9, rne # perform operation
fnmadd.s f7, f22, f15, f9, rtz # perform operation
fnmadd.s f7, f22, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f22, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f22, f15, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x59984fec # load x3 with value 0x59984fec
sw x3, 0(x2) # store 0x59984fec in memory
flw f5, 0(x2) # load 0x59984fec from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fnmadd.s f13, f6, f5, f25, dyn # perform operation
fnmadd.s f13, f6, f5, f25, rdn # perform operation
fnmadd.s f13, f6, f5, f25, rmm # perform operation
fnmadd.s f13, f6, f5, f25, rne # perform operation
fnmadd.s f13, f6, f5, f25, rtz # perform operation
fnmadd.s f13, f6, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f5, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xebee543f # load x3 with value 0xebee543f
sw x3, 0(x2) # store 0xebee543f in memory
flw f31, 0(x2) # load 0xebee543f from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fnmadd.s f13, f29, f31, f24, dyn # perform operation
fnmadd.s f13, f29, f31, f24, rdn # perform operation
fnmadd.s f13, f29, f31, f24, rmm # perform operation
fnmadd.s f13, f29, f31, f24, rne # perform operation
fnmadd.s f13, f29, f31, f24, rtz # perform operation
fnmadd.s f13, f29, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f29, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f29, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x07f7c9ed # load x3 with value 0x07f7c9ed
sw x3, 0(x2) # store 0x07f7c9ed in memory
flw f27, 0(x2) # load 0x07f7c9ed from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fnmadd.s f31, f10, f27, f30, dyn # perform operation
fnmadd.s f31, f10, f27, f30, rdn # perform operation
fnmadd.s f31, f10, f27, f30, rmm # perform operation
fnmadd.s f31, f10, f27, f30, rne # perform operation
fnmadd.s f31, f10, f27, f30, rtz # perform operation
fnmadd.s f31, f10, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f10, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f10, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0xfb5cfde0 # load x3 with value 0xfb5cfde0
sw x3, 0(x2) # store 0xfb5cfde0 in memory
flw f24, 0(x2) # load 0xfb5cfde0 from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fnmadd.s f8, f29, f24, f12, dyn # perform operation
fnmadd.s f8, f29, f24, f12, rdn # perform operation
fnmadd.s f8, f29, f24, f12, rmm # perform operation
fnmadd.s f8, f29, f24, f12, rne # perform operation
fnmadd.s f8, f29, f24, f12, rtz # perform operation
fnmadd.s f8, f29, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f29, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f29, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0xd42bf601 # load x3 with value 0xd42bf601
sw x3, 0(x2) # store 0xd42bf601 in memory
flw f8, 0(x2) # load 0xd42bf601 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fnmadd.s f6, f7, f8, f5, dyn # perform operation
fnmadd.s f6, f7, f8, f5, rdn # perform operation
fnmadd.s f6, f7, f8, f5, rmm # perform operation
fnmadd.s f6, f7, f8, f5, rne # perform operation
fnmadd.s f6, f7, f8, f5, rtz # perform operation
fnmadd.s f6, f7, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f7, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f7, f8, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x810b8224 # load x3 with value 0x810b8224
sw x3, 0(x2) # store 0x810b8224 in memory
flw f10, 0(x2) # load 0x810b8224 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fnmadd.s f13, f26, f10, f2, dyn # perform operation
fnmadd.s f13, f26, f10, f2, rdn # perform operation
fnmadd.s f13, f26, f10, f2, rmm # perform operation
fnmadd.s f13, f26, f10, f2, rne # perform operation
fnmadd.s f13, f26, f10, f2, rtz # perform operation
fnmadd.s f13, f26, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xf846354c # load x3 with value 0xf846354c
sw x3, 0(x2) # store 0xf846354c in memory
flw f15, 0(x2) # load 0xf846354c from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f13, f9, f15, f11, dyn # perform operation
fnmadd.s f13, f9, f15, f11, rdn # perform operation
fnmadd.s f13, f9, f15, f11, rmm # perform operation
fnmadd.s f13, f9, f15, f11, rne # perform operation
fnmadd.s f13, f9, f15, f11, rtz # perform operation
fnmadd.s f13, f9, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f9, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f9, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f9, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f9, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f9, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xfaede112 # load x3 with value 0xfaede112
sw x3, 0(x2) # store 0xfaede112 in memory
flw f17, 0(x2) # load 0xfaede112 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
fnmadd.s f7, f2, f17, f26, dyn # perform operation
fnmadd.s f7, f2, f17, f26, rdn # perform operation
fnmadd.s f7, f2, f17, f26, rmm # perform operation
fnmadd.s f7, f2, f17, f26, rne # perform operation
fnmadd.s f7, f2, f17, f26, rtz # perform operation
fnmadd.s f7, f2, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x61f4d64b # load x3 with value 0x61f4d64b
sw x3, 0(x2) # store 0x61f4d64b in memory
flw f10, 0(x2) # load 0x61f4d64b from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fnmadd.s f14, f23, f10, f30, dyn # perform operation
fnmadd.s f14, f23, f10, f30, rdn # perform operation
fnmadd.s f14, f23, f10, f30, rmm # perform operation
fnmadd.s f14, f23, f10, f30, rne # perform operation
fnmadd.s f14, f23, f10, f30, rtz # perform operation
fnmadd.s f14, f23, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0xbf284849 # load x3 with value 0xbf284849
sw x3, 0(x2) # store 0xbf284849 in memory
flw f21, 0(x2) # load 0xbf284849 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fnmadd.s f5, f20, f21, f16, dyn # perform operation
fnmadd.s f5, f20, f21, f16, rdn # perform operation
fnmadd.s f5, f20, f21, f16, rmm # perform operation
fnmadd.s f5, f20, f21, f16, rne # perform operation
fnmadd.s f5, f20, f21, f16, rtz # perform operation
fnmadd.s f5, f20, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f20, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f20, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f20, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f20, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f20, f21, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x62d92ca8 # load x3 with value 0x62d92ca8
sw x3, 0(x2) # store 0x62d92ca8 in memory
flw f22, 0(x2) # load 0x62d92ca8 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fnmadd.s f16, f26, f22, f2, dyn # perform operation
fnmadd.s f16, f26, f22, f2, rdn # perform operation
fnmadd.s f16, f26, f22, f2, rmm # perform operation
fnmadd.s f16, f26, f22, f2, rne # perform operation
fnmadd.s f16, f26, f22, f2, rtz # perform operation
fnmadd.s f16, f26, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f26, f22, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x4632a5e2 # load x3 with value 0x4632a5e2
sw x3, 0(x2) # store 0x4632a5e2 in memory
flw f15, 0(x2) # load 0x4632a5e2 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
fnmadd.s f16, f10, f15, f21, dyn # perform operation
fnmadd.s f16, f10, f15, f21, rdn # perform operation
fnmadd.s f16, f10, f15, f21, rmm # perform operation
fnmadd.s f16, f10, f15, f21, rne # perform operation
fnmadd.s f16, f10, f15, f21, rtz # perform operation
fnmadd.s f16, f10, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f10, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f10, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f10, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f10, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f10, f15, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
la x2, scratch
li x3, 0x2d09ba16 # load x3 with value 0x2d09ba16
sw x3, 0(x2) # store 0x2d09ba16 in memory
flw f5, 0(x2) # load 0x2d09ba16 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fnmadd.s f20, f8, f5, f21, dyn # perform operation
fnmadd.s f20, f8, f5, f21, rdn # perform operation
fnmadd.s f20, f8, f5, f21, rmm # perform operation
fnmadd.s f20, f8, f5, f21, rne # perform operation
fnmadd.s f20, f8, f5, f21, rtz # perform operation
fnmadd.s f20, f8, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f8, f5, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0xf6ed6fc9 # load x3 with value 0xf6ed6fc9
sw x3, 0(x2) # store 0xf6ed6fc9 in memory
flw f24, 0(x2) # load 0xf6ed6fc9 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmadd.s f8, f23, f24, f25, dyn # perform operation
fnmadd.s f8, f23, f24, f25, rdn # perform operation
fnmadd.s f8, f23, f24, f25, rmm # perform operation
fnmadd.s f8, f23, f24, f25, rne # perform operation
fnmadd.s f8, f23, f24, f25, rtz # perform operation
fnmadd.s f8, f23, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f23, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f23, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f23, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f23, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f23, f24, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xad73a864 # load x3 with value 0xad73a864
sw x3, 0(x2) # store 0xad73a864 in memory
flw f13, 0(x2) # load 0xad73a864 from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmadd.s f18, f10, f13, f21, dyn # perform operation
fnmadd.s f18, f10, f13, f21, rdn # perform operation
fnmadd.s f18, f10, f13, f21, rmm # perform operation
fnmadd.s f18, f10, f13, f21, rne # perform operation
fnmadd.s f18, f10, f13, f21, rtz # perform operation
fnmadd.s f18, f10, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f10, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f10, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0xdb2b1456 # load x3 with value 0xdb2b1456
sw x3, 0(x2) # store 0xdb2b1456 in memory
flw f13, 0(x2) # load 0xdb2b1456 from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f14, f1, f13, f9, dyn # perform operation
fnmadd.s f14, f1, f13, f9, rdn # perform operation
fnmadd.s f14, f1, f13, f9, rmm # perform operation
fnmadd.s f14, f1, f13, f9, rne # perform operation
fnmadd.s f14, f1, f13, f9, rtz # perform operation
fnmadd.s f14, f1, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f1, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f1, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f1, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f1, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f1, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x778872a1 # load x3 with value 0x778872a1
sw x3, 0(x2) # store 0x778872a1 in memory
flw f11, 0(x2) # load 0x778872a1 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f7, f24, f11, f14, dyn # perform operation
fnmadd.s f7, f24, f11, f14, rdn # perform operation
fnmadd.s f7, f24, f11, f14, rmm # perform operation
fnmadd.s f7, f24, f11, f14, rne # perform operation
fnmadd.s f7, f24, f11, f14, rtz # perform operation
fnmadd.s f7, f24, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f11, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x1aef6734 # load x3 with value 0x1aef6734
sw x3, 0(x2) # store 0x1aef6734 in memory
flw f14, 0(x2) # load 0x1aef6734 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fnmadd.s f16, f3, f14, f25, dyn # perform operation
fnmadd.s f16, f3, f14, f25, rdn # perform operation
fnmadd.s f16, f3, f14, f25, rmm # perform operation
fnmadd.s f16, f3, f14, f25, rne # perform operation
fnmadd.s f16, f3, f14, f25, rtz # perform operation
fnmadd.s f16, f3, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f3, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f3, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xa2ffce2a # load x3 with value 0xa2ffce2a
sw x3, 0(x2) # store 0xa2ffce2a in memory
flw f27, 0(x2) # load 0xa2ffce2a from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fnmadd.s f20, f22, f27, f11, dyn # perform operation
fnmadd.s f20, f22, f27, f11, rdn # perform operation
fnmadd.s f20, f22, f27, f11, rmm # perform operation
fnmadd.s f20, f22, f27, f11, rne # perform operation
fnmadd.s f20, f22, f27, f11, rtz # perform operation
fnmadd.s f20, f22, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f27, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0xf6f436ac # load x3 with value 0xf6f436ac
sw x3, 0(x2) # store 0xf6f436ac in memory
flw f14, 0(x2) # load 0xf6f436ac from memory into f14
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fnmadd.s f5, f19, f14, f31, dyn # perform operation
fnmadd.s f5, f19, f14, f31, rdn # perform operation
fnmadd.s f5, f19, f14, f31, rmm # perform operation
fnmadd.s f5, f19, f14, f31, rne # perform operation
fnmadd.s f5, f19, f14, f31, rtz # perform operation
fnmadd.s f5, f19, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x49d0be65 # load x3 with value 0x49d0be65
sw x3, 0(x2) # store 0x49d0be65 in memory
flw f29, 0(x2) # load 0x49d0be65 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmadd.s f17, f19, f29, f30, dyn # perform operation
fnmadd.s f17, f19, f29, f30, rdn # perform operation
fnmadd.s f17, f19, f29, f30, rmm # perform operation
fnmadd.s f17, f19, f29, f30, rne # perform operation
fnmadd.s f17, f19, f29, f30, rtz # perform operation
fnmadd.s f17, f19, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xe49767bb # load x3 with value 0xe49767bb
sw x3, 0(x2) # store 0xe49767bb in memory
flw f27, 0(x2) # load 0xe49767bb from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fnmadd.s f19, f30, f27, f7, dyn # perform operation
fnmadd.s f19, f30, f27, f7, rdn # perform operation
fnmadd.s f19, f30, f27, f7, rmm # perform operation
fnmadd.s f19, f30, f27, f7, rne # perform operation
fnmadd.s f19, f30, f27, f7, rtz # perform operation
fnmadd.s f19, f30, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f30, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f30, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xa29ed647 # load x3 with value 0xa29ed647
sw x3, 0(x2) # store 0xa29ed647 in memory
flw f23, 0(x2) # load 0xa29ed647 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f24, f9, f23, f10, dyn # perform operation
fnmadd.s f24, f9, f23, f10, rdn # perform operation
fnmadd.s f24, f9, f23, f10, rmm # perform operation
fnmadd.s f24, f9, f23, f10, rne # perform operation
fnmadd.s f24, f9, f23, f10, rtz # perform operation
fnmadd.s f24, f9, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f9, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f9, f23, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0x3ff18579 # load x3 with value 0x3ff18579
sw x3, 0(x2) # store 0x3ff18579 in memory
flw f2, 0(x2) # load 0x3ff18579 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmadd.s f29, f5, f2, f23, dyn # perform operation
fnmadd.s f29, f5, f2, f23, rdn # perform operation
fnmadd.s f29, f5, f2, f23, rmm # perform operation
fnmadd.s f29, f5, f2, f23, rne # perform operation
fnmadd.s f29, f5, f2, f23, rtz # perform operation
fnmadd.s f29, f5, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f5, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f5, f2, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x8c754c0c # load x3 with value 0x8c754c0c
sw x3, 0(x2) # store 0x8c754c0c in memory
flw f16, 0(x2) # load 0x8c754c0c from memory into f16
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f30, f21, f16, f9, dyn # perform operation
fnmadd.s f30, f21, f16, f9, rdn # perform operation
fnmadd.s f30, f21, f16, f9, rmm # perform operation
fnmadd.s f30, f21, f16, f9, rne # perform operation
fnmadd.s f30, f21, f16, f9, rtz # perform operation
fnmadd.s f30, f21, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x0c0aa2a7 # load x3 with value 0x0c0aa2a7
sw x3, 0(x2) # store 0x0c0aa2a7 in memory
flw f28, 0(x2) # load 0x0c0aa2a7 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fnmadd.s f25, f20, f28, f3, dyn # perform operation
fnmadd.s f25, f20, f28, f3, rdn # perform operation
fnmadd.s f25, f20, f28, f3, rmm # perform operation
fnmadd.s f25, f20, f28, f3, rne # perform operation
fnmadd.s f25, f20, f28, f3, rtz # perform operation
fnmadd.s f25, f20, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f20, f28, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xfa784acf # load x3 with value 0xfa784acf
sw x3, 0(x2) # store 0xfa784acf in memory
flw f23, 0(x2) # load 0xfa784acf from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fnmadd.s f31, f5, f23, f16, dyn # perform operation
fnmadd.s f31, f5, f23, f16, rdn # perform operation
fnmadd.s f31, f5, f23, f16, rmm # perform operation
fnmadd.s f31, f5, f23, f16, rne # perform operation
fnmadd.s f31, f5, f23, f16, rtz # perform operation
fnmadd.s f31, f5, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x7f152920 # load x3 with value 0x7f152920
sw x3, 0(x2) # store 0x7f152920 in memory
flw f8, 0(x2) # load 0x7f152920 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fnmadd.s f16, f10, f8, f1, dyn # perform operation
fnmadd.s f16, f10, f8, f1, rdn # perform operation
fnmadd.s f16, f10, f8, f1, rmm # perform operation
fnmadd.s f16, f10, f8, f1, rne # perform operation
fnmadd.s f16, f10, f8, f1, rtz # perform operation
fnmadd.s f16, f10, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f10, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f10, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f10, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f10, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f10, f8, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x8cfec31d # load x3 with value 0x8cfec31d
sw x3, 0(x2) # store 0x8cfec31d in memory
flw f1, 0(x2) # load 0x8cfec31d from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f10, f21, f1, f23, dyn # perform operation
fnmadd.s f10, f21, f1, f23, rdn # perform operation
fnmadd.s f10, f21, f1, f23, rmm # perform operation
fnmadd.s f10, f21, f1, f23, rne # perform operation
fnmadd.s f10, f21, f1, f23, rtz # perform operation
fnmadd.s f10, f21, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xc2cc329d # load x3 with value 0xc2cc329d
sw x3, 0(x2) # store 0xc2cc329d in memory
flw f24, 0(x2) # load 0xc2cc329d from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fnmadd.s f25, f22, f24, f28, dyn # perform operation
fnmadd.s f25, f22, f24, f28, rdn # perform operation
fnmadd.s f25, f22, f24, f28, rmm # perform operation
fnmadd.s f25, f22, f24, f28, rne # perform operation
fnmadd.s f25, f22, f24, f28, rtz # perform operation
fnmadd.s f25, f22, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f22, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f22, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x3c25f3dc # load x3 with value 0x3c25f3dc
sw x3, 0(x2) # store 0x3c25f3dc in memory
flw f9, 0(x2) # load 0x3c25f3dc from memory into f9
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fnmadd.s f17, f27, f9, f11, dyn # perform operation
fnmadd.s f17, f27, f9, f11, rdn # perform operation
fnmadd.s f17, f27, f9, f11, rmm # perform operation
fnmadd.s f17, f27, f9, f11, rne # perform operation
fnmadd.s f17, f27, f9, f11, rtz # perform operation
fnmadd.s f17, f27, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f27, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f27, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f27, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f27, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f27, f9, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7d588de9 # load x3 with value 0x7d588de9
sw x3, 0(x2) # store 0x7d588de9 in memory
flw f27, 0(x2) # load 0x7d588de9 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
fnmadd.s f14, f2, f27, f24, dyn # perform operation
fnmadd.s f14, f2, f27, f24, rdn # perform operation
fnmadd.s f14, f2, f27, f24, rmm # perform operation
fnmadd.s f14, f2, f27, f24, rne # perform operation
fnmadd.s f14, f2, f27, f24, rtz # perform operation
fnmadd.s f14, f2, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f2, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f2, f27, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x67da9b2a # load x3 with value 0x67da9b2a
sw x3, 0(x2) # store 0x67da9b2a in memory
flw f9, 0(x2) # load 0x67da9b2a from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fnmadd.s f6, f15, f9, f24, dyn # perform operation
fnmadd.s f6, f15, f9, f24, rdn # perform operation
fnmadd.s f6, f15, f9, f24, rmm # perform operation
fnmadd.s f6, f15, f9, f24, rne # perform operation
fnmadd.s f6, f15, f9, f24, rtz # perform operation
fnmadd.s f6, f15, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f15, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xbab3fca9 # load x3 with value 0xbab3fca9
sw x3, 0(x2) # store 0xbab3fca9 in memory
flw f28, 0(x2) # load 0xbab3fca9 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmadd.s f18, f20, f28, f13, dyn # perform operation
fnmadd.s f18, f20, f28, f13, rdn # perform operation
fnmadd.s f18, f20, f28, f13, rmm # perform operation
fnmadd.s f18, f20, f28, f13, rne # perform operation
fnmadd.s f18, f20, f28, f13, rtz # perform operation
fnmadd.s f18, f20, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f20, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x8020c8f7 # load x3 with value 0x8020c8f7
sw x3, 0(x2) # store 0x8020c8f7 in memory
flw f30, 0(x2) # load 0x8020c8f7 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f2, f29, f30, f22, dyn # perform operation
fnmadd.s f2, f29, f30, f22, rdn # perform operation
fnmadd.s f2, f29, f30, f22, rmm # perform operation
fnmadd.s f2, f29, f30, f22, rne # perform operation
fnmadd.s f2, f29, f30, f22, rtz # perform operation
fnmadd.s f2, f29, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f30, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0xa63637d7 # load x3 with value 0xa63637d7
sw x3, 0(x2) # store 0xa63637d7 in memory
flw f16, 0(x2) # load 0xa63637d7 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmadd.s f3, f27, f16, f13, dyn # perform operation
fnmadd.s f3, f27, f16, f13, rdn # perform operation
fnmadd.s f3, f27, f16, f13, rmm # perform operation
fnmadd.s f3, f27, f16, f13, rne # perform operation
fnmadd.s f3, f27, f16, f13, rtz # perform operation
fnmadd.s f3, f27, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x280f511b # load x3 with value 0x280f511b
sw x3, 0(x2) # store 0x280f511b in memory
flw f19, 0(x2) # load 0x280f511b from memory into f19
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fnmadd.s f21, f24, f19, f17, dyn # perform operation
fnmadd.s f21, f24, f19, f17, rdn # perform operation
fnmadd.s f21, f24, f19, f17, rmm # perform operation
fnmadd.s f21, f24, f19, f17, rne # perform operation
fnmadd.s f21, f24, f19, f17, rtz # perform operation
fnmadd.s f21, f24, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f24, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f24, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x42957428 # load x3 with value 0x42957428
sw x3, 0(x2) # store 0x42957428 in memory
flw f25, 0(x2) # load 0x42957428 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f30, f12, f25, f1, dyn # perform operation
fnmadd.s f30, f12, f25, f1, rdn # perform operation
fnmadd.s f30, f12, f25, f1, rmm # perform operation
fnmadd.s f30, f12, f25, f1, rne # perform operation
fnmadd.s f30, f12, f25, f1, rtz # perform operation
fnmadd.s f30, f12, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f12, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f12, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x74efb530 # load x3 with value 0x74efb530
sw x3, 0(x2) # store 0x74efb530 in memory
flw f10, 0(x2) # load 0x74efb530 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fnmadd.s f28, f18, f10, f19, dyn # perform operation
fnmadd.s f28, f18, f10, f19, rdn # perform operation
fnmadd.s f28, f18, f10, f19, rmm # perform operation
fnmadd.s f28, f18, f10, f19, rne # perform operation
fnmadd.s f28, f18, f10, f19, rtz # perform operation
fnmadd.s f28, f18, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f18, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f18, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f18, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f18, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f18, f10, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x7e1a8371 # load x3 with value 0x7e1a8371
sw x3, 0(x2) # store 0x7e1a8371 in memory
flw f20, 0(x2) # load 0x7e1a8371 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fnmadd.s f23, f30, f20, f13, dyn # perform operation
fnmadd.s f23, f30, f20, f13, rdn # perform operation
fnmadd.s f23, f30, f20, f13, rmm # perform operation
fnmadd.s f23, f30, f20, f13, rne # perform operation
fnmadd.s f23, f30, f20, f13, rtz # perform operation
fnmadd.s f23, f30, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f30, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f30, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xb059b946 # load x3 with value 0xb059b946
sw x3, 0(x2) # store 0xb059b946 in memory
flw f5, 0(x2) # load 0xb059b946 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fnmadd.s f13, f15, f5, f31, dyn # perform operation
fnmadd.s f13, f15, f5, f31, rdn # perform operation
fnmadd.s f13, f15, f5, f31, rmm # perform operation
fnmadd.s f13, f15, f5, f31, rne # perform operation
fnmadd.s f13, f15, f5, f31, rtz # perform operation
fnmadd.s f13, f15, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f5, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x8b1739cc # load x3 with value 0x8b1739cc
sw x3, 0(x2) # store 0x8b1739cc in memory
flw f16, 0(x2) # load 0x8b1739cc from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f17, f22, f16, f19, dyn # perform operation
fnmadd.s f17, f22, f16, f19, rdn # perform operation
fnmadd.s f17, f22, f16, f19, rmm # perform operation
fnmadd.s f17, f22, f16, f19, rne # perform operation
fnmadd.s f17, f22, f16, f19, rtz # perform operation
fnmadd.s f17, f22, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x2ced138e # load x3 with value 0x2ced138e
sw x3, 0(x2) # store 0x2ced138e in memory
flw f10, 0(x2) # load 0x2ced138e from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fnmadd.s f31, f6, f10, f14, dyn # perform operation
fnmadd.s f31, f6, f10, f14, rdn # perform operation
fnmadd.s f31, f6, f10, f14, rmm # perform operation
fnmadd.s f31, f6, f10, f14, rne # perform operation
fnmadd.s f31, f6, f10, f14, rtz # perform operation
fnmadd.s f31, f6, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f6, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f6, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f6, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f6, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f6, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x3610f791 # load x3 with value 0x3610f791
sw x3, 0(x2) # store 0x3610f791 in memory
flw f8, 0(x2) # load 0x3610f791 from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fnmadd.s f17, f9, f8, f26, dyn # perform operation
fnmadd.s f17, f9, f8, f26, rdn # perform operation
fnmadd.s f17, f9, f8, f26, rmm # perform operation
fnmadd.s f17, f9, f8, f26, rne # perform operation
fnmadd.s f17, f9, f8, f26, rtz # perform operation
fnmadd.s f17, f9, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f9, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f9, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f9, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f9, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f9, f8, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x41fffab9 # load x3 with value 0x41fffab9
sw x3, 0(x2) # store 0x41fffab9 in memory
flw f2, 0(x2) # load 0x41fffab9 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f6, f25, f2, f19, dyn # perform operation
fnmadd.s f6, f25, f2, f19, rdn # perform operation
fnmadd.s f6, f25, f2, f19, rmm # perform operation
fnmadd.s f6, f25, f2, f19, rne # perform operation
fnmadd.s f6, f25, f2, f19, rtz # perform operation
fnmadd.s f6, f25, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f25, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xb99a68ae # load x3 with value 0xb99a68ae
sw x3, 0(x2) # store 0xb99a68ae in memory
flw f26, 0(x2) # load 0xb99a68ae from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fnmadd.s f25, f15, f26, f2, dyn # perform operation
fnmadd.s f25, f15, f26, f2, rdn # perform operation
fnmadd.s f25, f15, f26, f2, rmm # perform operation
fnmadd.s f25, f15, f26, f2, rne # perform operation
fnmadd.s f25, f15, f26, f2, rtz # perform operation
fnmadd.s f25, f15, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x7b7ab5f3 # load x3 with value 0x7b7ab5f3
sw x3, 0(x2) # store 0x7b7ab5f3 in memory
flw f16, 0(x2) # load 0x7b7ab5f3 from memory into f16
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fnmadd.s f14, f29, f16, f22, dyn # perform operation
fnmadd.s f14, f29, f16, f22, rdn # perform operation
fnmadd.s f14, f29, f16, f22, rmm # perform operation
fnmadd.s f14, f29, f16, f22, rne # perform operation
fnmadd.s f14, f29, f16, f22, rtz # perform operation
fnmadd.s f14, f29, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x8b988cd6 # load x3 with value 0x8b988cd6
sw x3, 0(x2) # store 0x8b988cd6 in memory
flw f20, 0(x2) # load 0x8b988cd6 from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmadd.s f31, f9, f20, f2, dyn # perform operation
fnmadd.s f31, f9, f20, f2, rdn # perform operation
fnmadd.s f31, f9, f20, f2, rmm # perform operation
fnmadd.s f31, f9, f20, f2, rne # perform operation
fnmadd.s f31, f9, f20, f2, rtz # perform operation
fnmadd.s f31, f9, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xa578a7ea # load x3 with value 0xa578a7ea
sw x3, 0(x2) # store 0xa578a7ea in memory
flw f25, 0(x2) # load 0xa578a7ea from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
fnmadd.s f16, f19, f25, f6, dyn # perform operation
fnmadd.s f16, f19, f25, f6, rdn # perform operation
fnmadd.s f16, f19, f25, f6, rmm # perform operation
fnmadd.s f16, f19, f25, f6, rne # perform operation
fnmadd.s f16, f19, f25, f6, rtz # perform operation
fnmadd.s f16, f19, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f19, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f19, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f19, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f19, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f19, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x1d4bc6cc # load x3 with value 0x1d4bc6cc
sw x3, 0(x2) # store 0x1d4bc6cc in memory
flw f7, 0(x2) # load 0x1d4bc6cc from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f13, f8, f7, f24, dyn # perform operation
fnmadd.s f13, f8, f7, f24, rdn # perform operation
fnmadd.s f13, f8, f7, f24, rmm # perform operation
fnmadd.s f13, f8, f7, f24, rne # perform operation
fnmadd.s f13, f8, f7, f24, rtz # perform operation
fnmadd.s f13, f8, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f8, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f8, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xf1aed36b # load x3 with value 0xf1aed36b
sw x3, 0(x2) # store 0xf1aed36b in memory
flw f17, 0(x2) # load 0xf1aed36b from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fnmadd.s f23, f7, f17, f5, dyn # perform operation
fnmadd.s f23, f7, f17, f5, rdn # perform operation
fnmadd.s f23, f7, f17, f5, rmm # perform operation
fnmadd.s f23, f7, f17, f5, rne # perform operation
fnmadd.s f23, f7, f17, f5, rtz # perform operation
fnmadd.s f23, f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f7, f17, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x0e025931 # load x3 with value 0x0e025931
sw x3, 0(x2) # store 0x0e025931 in memory
flw f14, 0(x2) # load 0x0e025931 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fnmadd.s f16, f23, f14, f30, dyn # perform operation
fnmadd.s f16, f23, f14, f30, rdn # perform operation
fnmadd.s f16, f23, f14, f30, rmm # perform operation
fnmadd.s f16, f23, f14, f30, rne # perform operation
fnmadd.s f16, f23, f14, f30, rtz # perform operation
fnmadd.s f16, f23, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f23, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f23, f14, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x68376743 # load x3 with value 0x68376743
sw x3, 0(x2) # store 0x68376743 in memory
flw f13, 0(x2) # load 0x68376743 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmadd.s f15, f2, f13, f12, dyn # perform operation
fnmadd.s f15, f2, f13, f12, rdn # perform operation
fnmadd.s f15, f2, f13, f12, rmm # perform operation
fnmadd.s f15, f2, f13, f12, rne # perform operation
fnmadd.s f15, f2, f13, f12, rtz # perform operation
fnmadd.s f15, f2, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f2, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f2, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f2, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f2, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f2, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x0475c239 # load x3 with value 0x0475c239
sw x3, 0(x2) # store 0x0475c239 in memory
flw f11, 0(x2) # load 0x0475c239 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fnmadd.s f28, f14, f11, f24, dyn # perform operation
fnmadd.s f28, f14, f11, f24, rdn # perform operation
fnmadd.s f28, f14, f11, f24, rmm # perform operation
fnmadd.s f28, f14, f11, f24, rne # perform operation
fnmadd.s f28, f14, f11, f24, rtz # perform operation
fnmadd.s f28, f14, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f14, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f14, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x785ac0bd # load x3 with value 0x785ac0bd
sw x3, 0(x2) # store 0x785ac0bd in memory
flw f18, 0(x2) # load 0x785ac0bd from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmadd.s f3, f26, f18, f11, dyn # perform operation
fnmadd.s f3, f26, f18, f11, rdn # perform operation
fnmadd.s f3, f26, f18, f11, rmm # perform operation
fnmadd.s f3, f26, f18, f11, rne # perform operation
fnmadd.s f3, f26, f18, f11, rtz # perform operation
fnmadd.s f3, f26, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f26, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f26, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f26, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f26, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f26, f18, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0xdff37d31 # load x3 with value 0xdff37d31
sw x3, 0(x2) # store 0xdff37d31 in memory
flw f1, 0(x2) # load 0xdff37d31 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f5, f3, f1, f10, dyn # perform operation
fnmadd.s f5, f3, f1, f10, rdn # perform operation
fnmadd.s f5, f3, f1, f10, rmm # perform operation
fnmadd.s f5, f3, f1, f10, rne # perform operation
fnmadd.s f5, f3, f1, f10, rtz # perform operation
fnmadd.s f5, f3, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0x476b5a80 # load x3 with value 0x476b5a80
sw x3, 0(x2) # store 0x476b5a80 in memory
flw f21, 0(x2) # load 0x476b5a80 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fnmadd.s f14, f23, f21, f31, dyn # perform operation
fnmadd.s f14, f23, f21, f31, rdn # perform operation
fnmadd.s f14, f23, f21, f31, rmm # perform operation
fnmadd.s f14, f23, f21, f31, rne # perform operation
fnmadd.s f14, f23, f21, f31, rtz # perform operation
fnmadd.s f14, f23, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f23, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f23, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xc7ff7863 # load x3 with value 0xc7ff7863
sw x3, 0(x2) # store 0xc7ff7863 in memory
flw f7, 0(x2) # load 0xc7ff7863 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fnmadd.s f9, f16, f7, f19, dyn # perform operation
fnmadd.s f9, f16, f7, f19, rdn # perform operation
fnmadd.s f9, f16, f7, f19, rmm # perform operation
fnmadd.s f9, f16, f7, f19, rne # perform operation
fnmadd.s f9, f16, f7, f19, rtz # perform operation
fnmadd.s f9, f16, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x623a6ce7 # load x3 with value 0x623a6ce7
sw x3, 0(x2) # store 0x623a6ce7 in memory
flw f31, 0(x2) # load 0x623a6ce7 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fnmadd.s f16, f18, f31, f24, dyn # perform operation
fnmadd.s f16, f18, f31, f24, rdn # perform operation
fnmadd.s f16, f18, f31, f24, rmm # perform operation
fnmadd.s f16, f18, f31, f24, rne # perform operation
fnmadd.s f16, f18, f31, f24, rtz # perform operation
fnmadd.s f16, f18, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x30789a8b # load x3 with value 0x30789a8b
sw x3, 0(x2) # store 0x30789a8b in memory
flw f8, 0(x2) # load 0x30789a8b from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fnmadd.s f28, f3, f8, f9, dyn # perform operation
fnmadd.s f28, f3, f8, f9, rdn # perform operation
fnmadd.s f28, f3, f8, f9, rmm # perform operation
fnmadd.s f28, f3, f8, f9, rne # perform operation
fnmadd.s f28, f3, f8, f9, rtz # perform operation
fnmadd.s f28, f3, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x764088ac # load x3 with value 0x764088ac
sw x3, 0(x2) # store 0x764088ac in memory
flw f2, 0(x2) # load 0x764088ac from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fnmadd.s f1, f15, f2, f11, dyn # perform operation
fnmadd.s f1, f15, f2, f11, rdn # perform operation
fnmadd.s f1, f15, f2, f11, rmm # perform operation
fnmadd.s f1, f15, f2, f11, rne # perform operation
fnmadd.s f1, f15, f2, f11, rtz # perform operation
fnmadd.s f1, f15, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f2, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xf80e90aa # load x3 with value 0xf80e90aa
sw x3, 0(x2) # store 0xf80e90aa in memory
flw f6, 0(x2) # load 0xf80e90aa from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f9, f31, f6, f26, dyn # perform operation
fnmadd.s f9, f31, f6, f26, rdn # perform operation
fnmadd.s f9, f31, f6, f26, rmm # perform operation
fnmadd.s f9, f31, f6, f26, rne # perform operation
fnmadd.s f9, f31, f6, f26, rtz # perform operation
fnmadd.s f9, f31, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f31, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f31, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x56240790 # load x3 with value 0x56240790
sw x3, 0(x2) # store 0x56240790 in memory
flw f9, 0(x2) # load 0x56240790 from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fnmadd.s f24, f18, f9, f1, dyn # perform operation
fnmadd.s f24, f18, f9, f1, rdn # perform operation
fnmadd.s f24, f18, f9, f1, rmm # perform operation
fnmadd.s f24, f18, f9, f1, rne # perform operation
fnmadd.s f24, f18, f9, f1, rtz # perform operation
fnmadd.s f24, f18, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x3f40a7a1 # load x3 with value 0x3f40a7a1
sw x3, 0(x2) # store 0x3f40a7a1 in memory
flw f23, 0(x2) # load 0x3f40a7a1 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fnmadd.s f5, f18, f23, f30, dyn # perform operation
fnmadd.s f5, f18, f23, f30, rdn # perform operation
fnmadd.s f5, f18, f23, f30, rmm # perform operation
fnmadd.s f5, f18, f23, f30, rne # perform operation
fnmadd.s f5, f18, f23, f30, rtz # perform operation
fnmadd.s f5, f18, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x75427cf9 # load x3 with value 0x75427cf9
sw x3, 0(x2) # store 0x75427cf9 in memory
flw f27, 0(x2) # load 0x75427cf9 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
fnmadd.s f13, f5, f27, f22, dyn # perform operation
fnmadd.s f13, f5, f27, f22, rdn # perform operation
fnmadd.s f13, f5, f27, f22, rmm # perform operation
fnmadd.s f13, f5, f27, f22, rne # perform operation
fnmadd.s f13, f5, f27, f22, rtz # perform operation
fnmadd.s f13, f5, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f5, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f5, f27, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x8e37ff3f # load x3 with value 0x8e37ff3f
sw x3, 0(x2) # store 0x8e37ff3f in memory
flw f29, 0(x2) # load 0x8e37ff3f from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fnmadd.s f12, f3, f29, f14, dyn # perform operation
fnmadd.s f12, f3, f29, f14, rdn # perform operation
fnmadd.s f12, f3, f29, f14, rmm # perform operation
fnmadd.s f12, f3, f29, f14, rne # perform operation
fnmadd.s f12, f3, f29, f14, rtz # perform operation
fnmadd.s f12, f3, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f29, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x7c2234a0 # load x3 with value 0x7c2234a0
sw x3, 0(x2) # store 0x7c2234a0 in memory
flw f25, 0(x2) # load 0x7c2234a0 from memory into f25
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fnmadd.s f29, f26, f25, f3, dyn # perform operation
fnmadd.s f29, f26, f25, f3, rdn # perform operation
fnmadd.s f29, f26, f25, f3, rmm # perform operation
fnmadd.s f29, f26, f25, f3, rne # perform operation
fnmadd.s f29, f26, f25, f3, rtz # perform operation
fnmadd.s f29, f26, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f26, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f26, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x732e37b2 # load x3 with value 0x732e37b2
sw x3, 0(x2) # store 0x732e37b2 in memory
flw f16, 0(x2) # load 0x732e37b2 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fnmadd.s f12, f14, f16, f30, dyn # perform operation
fnmadd.s f12, f14, f16, f30, rdn # perform operation
fnmadd.s f12, f14, f16, f30, rmm # perform operation
fnmadd.s f12, f14, f16, f30, rne # perform operation
fnmadd.s f12, f14, f16, f30, rtz # perform operation
fnmadd.s f12, f14, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xbf32896a # load x3 with value 0xbf32896a
sw x3, 0(x2) # store 0xbf32896a in memory
flw f24, 0(x2) # load 0xbf32896a from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fnmadd.s f19, f9, f24, f15, dyn # perform operation
fnmadd.s f19, f9, f24, f15, rdn # perform operation
fnmadd.s f19, f9, f24, f15, rmm # perform operation
fnmadd.s f19, f9, f24, f15, rne # perform operation
fnmadd.s f19, f9, f24, f15, rtz # perform operation
fnmadd.s f19, f9, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f9, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f9, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x19d24084 # load x3 with value 0x19d24084
sw x3, 0(x2) # store 0x19d24084 in memory
flw f30, 0(x2) # load 0x19d24084 from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f23, f9, f30, f27, dyn # perform operation
fnmadd.s f23, f9, f30, f27, rdn # perform operation
fnmadd.s f23, f9, f30, f27, rmm # perform operation
fnmadd.s f23, f9, f30, f27, rne # perform operation
fnmadd.s f23, f9, f30, f27, rtz # perform operation
fnmadd.s f23, f9, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f9, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f9, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f9, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f9, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f9, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x7119ecba # load x3 with value 0x7119ecba
sw x3, 0(x2) # store 0x7119ecba in memory
flw f2, 0(x2) # load 0x7119ecba from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fnmadd.s f27, f29, f2, f13, dyn # perform operation
fnmadd.s f27, f29, f2, f13, rdn # perform operation
fnmadd.s f27, f29, f2, f13, rmm # perform operation
fnmadd.s f27, f29, f2, f13, rne # perform operation
fnmadd.s f27, f29, f2, f13, rtz # perform operation
fnmadd.s f27, f29, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f29, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f29, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x06cd64fa # load x3 with value 0x06cd64fa
sw x3, 0(x2) # store 0x06cd64fa in memory
flw f6, 0(x2) # load 0x06cd64fa from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fnmadd.s f29, f10, f6, f24, dyn # perform operation
fnmadd.s f29, f10, f6, f24, rdn # perform operation
fnmadd.s f29, f10, f6, f24, rmm # perform operation
fnmadd.s f29, f10, f6, f24, rne # perform operation
fnmadd.s f29, f10, f6, f24, rtz # perform operation
fnmadd.s f29, f10, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f10, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0xc910b0ac # load x3 with value 0xc910b0ac
sw x3, 0(x2) # store 0xc910b0ac in memory
flw f5, 0(x2) # load 0xc910b0ac from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmadd.s f20, f22, f5, f15, dyn # perform operation
fnmadd.s f20, f22, f5, f15, rdn # perform operation
fnmadd.s f20, f22, f5, f15, rmm # perform operation
fnmadd.s f20, f22, f5, f15, rne # perform operation
fnmadd.s f20, f22, f5, f15, rtz # perform operation
fnmadd.s f20, f22, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f22, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f22, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f22, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f22, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f22, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xd863562b # load x3 with value 0xd863562b
sw x3, 0(x2) # store 0xd863562b in memory
flw f7, 0(x2) # load 0xd863562b from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fnmadd.s f22, f25, f7, f12, dyn # perform operation
fnmadd.s f22, f25, f7, f12, rdn # perform operation
fnmadd.s f22, f25, f7, f12, rmm # perform operation
fnmadd.s f22, f25, f7, f12, rne # perform operation
fnmadd.s f22, f25, f7, f12, rtz # perform operation
fnmadd.s f22, f25, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f25, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f25, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x40cf4766 # load x3 with value 0x40cf4766
sw x3, 0(x2) # store 0x40cf4766 in memory
flw f24, 0(x2) # load 0x40cf4766 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fnmadd.s f9, f18, f24, f31, dyn # perform operation
fnmadd.s f9, f18, f24, f31, rdn # perform operation
fnmadd.s f9, f18, f24, f31, rmm # perform operation
fnmadd.s f9, f18, f24, f31, rne # perform operation
fnmadd.s f9, f18, f24, f31, rtz # perform operation
fnmadd.s f9, f18, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f18, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f18, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f18, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f18, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f18, f24, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x0bf5d6bd # load x3 with value 0x0bf5d6bd
sw x3, 0(x2) # store 0x0bf5d6bd in memory
flw f6, 0(x2) # load 0x0bf5d6bd from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fnmadd.s f11, f30, f6, f25, dyn # perform operation
fnmadd.s f11, f30, f6, f25, rdn # perform operation
fnmadd.s f11, f30, f6, f25, rmm # perform operation
fnmadd.s f11, f30, f6, f25, rne # perform operation
fnmadd.s f11, f30, f6, f25, rtz # perform operation
fnmadd.s f11, f30, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xb86d3bcd # load x3 with value 0xb86d3bcd
sw x3, 0(x2) # store 0xb86d3bcd in memory
flw f19, 0(x2) # load 0xb86d3bcd from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fnmadd.s f22, f13, f19, f10, dyn # perform operation
fnmadd.s f22, f13, f19, f10, rdn # perform operation
fnmadd.s f22, f13, f19, f10, rmm # perform operation
fnmadd.s f22, f13, f19, f10, rne # perform operation
fnmadd.s f22, f13, f19, f10, rtz # perform operation
fnmadd.s f22, f13, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f13, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f13, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f13, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f13, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f13, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x680364c4 # load x3 with value 0x680364c4
sw x3, 0(x2) # store 0x680364c4 in memory
flw f16, 0(x2) # load 0x680364c4 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmadd.s f22, f20, f16, f5, dyn # perform operation
fnmadd.s f22, f20, f16, f5, rdn # perform operation
fnmadd.s f22, f20, f16, f5, rmm # perform operation
fnmadd.s f22, f20, f16, f5, rne # perform operation
fnmadd.s f22, f20, f16, f5, rtz # perform operation
fnmadd.s f22, f20, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f16, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0xe0a837c7 # load x3 with value 0xe0a837c7
sw x3, 0(x2) # store 0xe0a837c7 in memory
flw f8, 0(x2) # load 0xe0a837c7 from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f20, f14, f8, f10, dyn # perform operation
fnmadd.s f20, f14, f8, f10, rdn # perform operation
fnmadd.s f20, f14, f8, f10, rmm # perform operation
fnmadd.s f20, f14, f8, f10, rne # perform operation
fnmadd.s f20, f14, f8, f10, rtz # perform operation
fnmadd.s f20, f14, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xed9e02a1 # load x3 with value 0xed9e02a1
sw x3, 0(x2) # store 0xed9e02a1 in memory
flw f28, 0(x2) # load 0xed9e02a1 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fnmadd.s f8, f6, f28, f11, dyn # perform operation
fnmadd.s f8, f6, f28, f11, rdn # perform operation
fnmadd.s f8, f6, f28, f11, rmm # perform operation
fnmadd.s f8, f6, f28, f11, rne # perform operation
fnmadd.s f8, f6, f28, f11, rtz # perform operation
fnmadd.s f8, f6, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f6, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f6, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0x364fcf5a # load x3 with value 0x364fcf5a
sw x3, 0(x2) # store 0x364fcf5a in memory
flw f1, 0(x2) # load 0x364fcf5a from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fnmadd.s f24, f5, f1, f12, dyn # perform operation
fnmadd.s f24, f5, f1, f12, rdn # perform operation
fnmadd.s f24, f5, f1, f12, rmm # perform operation
fnmadd.s f24, f5, f1, f12, rne # perform operation
fnmadd.s f24, f5, f1, f12, rtz # perform operation
fnmadd.s f24, f5, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f5, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f5, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x307da56b # load x3 with value 0x307da56b
sw x3, 0(x2) # store 0x307da56b in memory
flw f19, 0(x2) # load 0x307da56b from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmadd.s f18, f6, f19, f27, dyn # perform operation
fnmadd.s f18, f6, f19, f27, rdn # perform operation
fnmadd.s f18, f6, f19, f27, rmm # perform operation
fnmadd.s f18, f6, f19, f27, rne # perform operation
fnmadd.s f18, f6, f19, f27, rtz # perform operation
fnmadd.s f18, f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f6, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x9dfb64c5 # load x3 with value 0x9dfb64c5
sw x3, 0(x2) # store 0x9dfb64c5 in memory
flw f12, 0(x2) # load 0x9dfb64c5 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fnmadd.s f7, f11, f12, f9, dyn # perform operation
fnmadd.s f7, f11, f12, f9, rdn # perform operation
fnmadd.s f7, f11, f12, f9, rmm # perform operation
fnmadd.s f7, f11, f12, f9, rne # perform operation
fnmadd.s f7, f11, f12, f9, rtz # perform operation
fnmadd.s f7, f11, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f11, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f11, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f11, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f11, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f11, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xa943267f # load x3 with value 0xa943267f
sw x3, 0(x2) # store 0xa943267f in memory
flw f8, 0(x2) # load 0xa943267f from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.s f3, f31, f8, f11, dyn # perform operation
fnmadd.s f3, f31, f8, f11, rdn # perform operation
fnmadd.s f3, f31, f8, f11, rmm # perform operation
fnmadd.s f3, f31, f8, f11, rne # perform operation
fnmadd.s f3, f31, f8, f11, rtz # perform operation
fnmadd.s f3, f31, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0x6e376678 # load x3 with value 0x6e376678
sw x3, 0(x2) # store 0x6e376678 in memory
flw f29, 0(x2) # load 0x6e376678 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fnmadd.s f2, f30, f29, f19, dyn # perform operation
fnmadd.s f2, f30, f29, f19, rdn # perform operation
fnmadd.s f2, f30, f29, f19, rmm # perform operation
fnmadd.s f2, f30, f29, f19, rne # perform operation
fnmadd.s f2, f30, f29, f19, rtz # perform operation
fnmadd.s f2, f30, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f30, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f30, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f30, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f30, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f30, f29, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x47860a38 # load x3 with value 0x47860a38
sw x3, 0(x2) # store 0x47860a38 in memory
flw f15, 0(x2) # load 0x47860a38 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmadd.s f7, f16, f15, f1, dyn # perform operation
fnmadd.s f7, f16, f15, f1, rdn # perform operation
fnmadd.s f7, f16, f15, f1, rmm # perform operation
fnmadd.s f7, f16, f15, f1, rne # perform operation
fnmadd.s f7, f16, f15, f1, rtz # perform operation
fnmadd.s f7, f16, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f16, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f16, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f16, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f16, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f16, f15, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x0f41dade # load x3 with value 0x0f41dade
sw x3, 0(x2) # store 0x0f41dade in memory
flw f27, 0(x2) # load 0x0f41dade from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fnmadd.s f14, f22, f27, f30, dyn # perform operation
fnmadd.s f14, f22, f27, f30, rdn # perform operation
fnmadd.s f14, f22, f27, f30, rmm # perform operation
fnmadd.s f14, f22, f27, f30, rne # perform operation
fnmadd.s f14, f22, f27, f30, rtz # perform operation
fnmadd.s f14, f22, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f27, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xc855833d # load x3 with value 0xc855833d
sw x3, 0(x2) # store 0xc855833d in memory
flw f24, 0(x2) # load 0xc855833d from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f20, f29, f24, f14, dyn # perform operation
fnmadd.s f20, f29, f24, f14, rdn # perform operation
fnmadd.s f20, f29, f24, f14, rmm # perform operation
fnmadd.s f20, f29, f24, f14, rne # perform operation
fnmadd.s f20, f29, f24, f14, rtz # perform operation
fnmadd.s f20, f29, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x1cc30907 # load x3 with value 0x1cc30907
sw x3, 0(x2) # store 0x1cc30907 in memory
flw f3, 0(x2) # load 0x1cc30907 from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmadd.s f17, f31, f3, f26, dyn # perform operation
fnmadd.s f17, f31, f3, f26, rdn # perform operation
fnmadd.s f17, f31, f3, f26, rmm # perform operation
fnmadd.s f17, f31, f3, f26, rne # perform operation
fnmadd.s f17, f31, f3, f26, rtz # perform operation
fnmadd.s f17, f31, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f31, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f31, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xea5db4c5 # load x3 with value 0xea5db4c5
sw x3, 0(x2) # store 0xea5db4c5 in memory
flw f29, 0(x2) # load 0xea5db4c5 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
fnmadd.s f11, f30, f29, f25, dyn # perform operation
fnmadd.s f11, f30, f29, f25, rdn # perform operation
fnmadd.s f11, f30, f29, f25, rmm # perform operation
fnmadd.s f11, f30, f29, f25, rne # perform operation
fnmadd.s f11, f30, f29, f25, rtz # perform operation
fnmadd.s f11, f30, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f30, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f30, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f30, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f30, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f30, f29, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x27a6a868 # load x3 with value 0x27a6a868
sw x3, 0(x2) # store 0x27a6a868 in memory
flw f30, 0(x2) # load 0x27a6a868 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fnmadd.s f12, f14, f30, f8, dyn # perform operation
fnmadd.s f12, f14, f30, f8, rdn # perform operation
fnmadd.s f12, f14, f30, f8, rmm # perform operation
fnmadd.s f12, f14, f30, f8, rne # perform operation
fnmadd.s f12, f14, f30, f8, rtz # perform operation
fnmadd.s f12, f14, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x7ec03827 # load x3 with value 0x7ec03827
sw x3, 0(x2) # store 0x7ec03827 in memory
flw f24, 0(x2) # load 0x7ec03827 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fnmadd.s f18, f21, f24, f17, dyn # perform operation
fnmadd.s f18, f21, f24, f17, rdn # perform operation
fnmadd.s f18, f21, f24, f17, rmm # perform operation
fnmadd.s f18, f21, f24, f17, rne # perform operation
fnmadd.s f18, f21, f24, f17, rtz # perform operation
fnmadd.s f18, f21, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f24, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x815f2647 # load x3 with value 0x815f2647
sw x3, 0(x2) # store 0x815f2647 in memory
flw f30, 0(x2) # load 0x815f2647 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
fnmadd.s f17, f11, f30, f26, dyn # perform operation
fnmadd.s f17, f11, f30, f26, rdn # perform operation
fnmadd.s f17, f11, f30, f26, rmm # perform operation
fnmadd.s f17, f11, f30, f26, rne # perform operation
fnmadd.s f17, f11, f30, f26, rtz # perform operation
fnmadd.s f17, f11, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0xf6a6bc14 # load x3 with value 0xf6a6bc14
sw x3, 0(x2) # store 0xf6a6bc14 in memory
flw f11, 0(x2) # load 0xf6a6bc14 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
fnmadd.s f25, f13, f11, f1, dyn # perform operation
fnmadd.s f25, f13, f11, f1, rdn # perform operation
fnmadd.s f25, f13, f11, f1, rmm # perform operation
fnmadd.s f25, f13, f11, f1, rne # perform operation
fnmadd.s f25, f13, f11, f1, rtz # perform operation
fnmadd.s f25, f13, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f13, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f13, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f13, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f13, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f13, f11, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x365186ef # load x3 with value 0x365186ef
sw x3, 0(x2) # store 0x365186ef in memory
flw f19, 0(x2) # load 0x365186ef from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fnmadd.s f24, f16, f19, f5, dyn # perform operation
fnmadd.s f24, f16, f19, f5, rdn # perform operation
fnmadd.s f24, f16, f19, f5, rmm # perform operation
fnmadd.s f24, f16, f19, f5, rne # perform operation
fnmadd.s f24, f16, f19, f5, rtz # perform operation
fnmadd.s f24, f16, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f16, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f16, f19, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x4f3c671a # load x3 with value 0x4f3c671a
sw x3, 0(x2) # store 0x4f3c671a in memory
flw f7, 0(x2) # load 0x4f3c671a from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f2, f17, f7, f15, dyn # perform operation
fnmadd.s f2, f17, f7, f15, rdn # perform operation
fnmadd.s f2, f17, f7, f15, rmm # perform operation
fnmadd.s f2, f17, f7, f15, rne # perform operation
fnmadd.s f2, f17, f7, f15, rtz # perform operation
fnmadd.s f2, f17, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xbf1d5554 # load x3 with value 0xbf1d5554
sw x3, 0(x2) # store 0xbf1d5554 in memory
flw f1, 0(x2) # load 0xbf1d5554 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fnmadd.s f15, f18, f1, f5, dyn # perform operation
fnmadd.s f15, f18, f1, f5, rdn # perform operation
fnmadd.s f15, f18, f1, f5, rmm # perform operation
fnmadd.s f15, f18, f1, f5, rne # perform operation
fnmadd.s f15, f18, f1, f5, rtz # perform operation
fnmadd.s f15, f18, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0xa396b390 # load x3 with value 0xa396b390
sw x3, 0(x2) # store 0xa396b390 in memory
flw f24, 0(x2) # load 0xa396b390 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f26, f1, f24, f7, dyn # perform operation
fnmadd.s f26, f1, f24, f7, rdn # perform operation
fnmadd.s f26, f1, f24, f7, rmm # perform operation
fnmadd.s f26, f1, f24, f7, rne # perform operation
fnmadd.s f26, f1, f24, f7, rtz # perform operation
fnmadd.s f26, f1, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f1, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0xe3b5eeb7 # load x3 with value 0xe3b5eeb7
sw x3, 0(x2) # store 0xe3b5eeb7 in memory
flw f8, 0(x2) # load 0xe3b5eeb7 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmadd.s f23, f3, f8, f15, dyn # perform operation
fnmadd.s f23, f3, f8, f15, rdn # perform operation
fnmadd.s f23, f3, f8, f15, rmm # perform operation
fnmadd.s f23, f3, f8, f15, rne # perform operation
fnmadd.s f23, f3, f8, f15, rtz # perform operation
fnmadd.s f23, f3, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f3, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f3, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xbb6427ec # load x3 with value 0xbb6427ec
sw x3, 0(x2) # store 0xbb6427ec in memory
flw f28, 0(x2) # load 0xbb6427ec from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fnmadd.s f31, f20, f28, f13, dyn # perform operation
fnmadd.s f31, f20, f28, f13, rdn # perform operation
fnmadd.s f31, f20, f28, f13, rmm # perform operation
fnmadd.s f31, f20, f28, f13, rne # perform operation
fnmadd.s f31, f20, f28, f13, rtz # perform operation
fnmadd.s f31, f20, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f20, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f20, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xf9a88981 # load x3 with value 0xf9a88981
sw x3, 0(x2) # store 0xf9a88981 in memory
flw f6, 0(x2) # load 0xf9a88981 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f14, f20, f6, f8, dyn # perform operation
fnmadd.s f14, f20, f6, f8, rdn # perform operation
fnmadd.s f14, f20, f6, f8, rmm # perform operation
fnmadd.s f14, f20, f6, f8, rne # perform operation
fnmadd.s f14, f20, f6, f8, rtz # perform operation
fnmadd.s f14, f20, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f20, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f20, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f20, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f20, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f20, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0xb566e18c # load x3 with value 0xb566e18c
sw x3, 0(x2) # store 0xb566e18c in memory
flw f8, 0(x2) # load 0xb566e18c from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmadd.s f3, f5, f8, f7, dyn # perform operation
fnmadd.s f3, f5, f8, f7, rdn # perform operation
fnmadd.s f3, f5, f8, f7, rmm # perform operation
fnmadd.s f3, f5, f8, f7, rne # perform operation
fnmadd.s f3, f5, f8, f7, rtz # perform operation
fnmadd.s f3, f5, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x7b54ef65 # load x3 with value 0x7b54ef65
sw x3, 0(x2) # store 0x7b54ef65 in memory
flw f3, 0(x2) # load 0x7b54ef65 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fnmadd.s f14, f31, f3, f9, dyn # perform operation
fnmadd.s f14, f31, f3, f9, rdn # perform operation
fnmadd.s f14, f31, f3, f9, rmm # perform operation
fnmadd.s f14, f31, f3, f9, rne # perform operation
fnmadd.s f14, f31, f3, f9, rtz # perform operation
fnmadd.s f14, f31, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f31, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0xd913e858 # load x3 with value 0xd913e858
sw x3, 0(x2) # store 0xd913e858 in memory
flw f9, 0(x2) # load 0xd913e858 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmadd.s f15, f1, f9, f21, dyn # perform operation
fnmadd.s f15, f1, f9, f21, rdn # perform operation
fnmadd.s f15, f1, f9, f21, rmm # perform operation
fnmadd.s f15, f1, f9, f21, rne # perform operation
fnmadd.s f15, f1, f9, f21, rtz # perform operation
fnmadd.s f15, f1, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f1, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f1, f9, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x79088e1a # load x3 with value 0x79088e1a
sw x3, 0(x2) # store 0x79088e1a in memory
flw f27, 0(x2) # load 0x79088e1a from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fnmadd.s f31, f6, f27, f13, dyn # perform operation
fnmadd.s f31, f6, f27, f13, rdn # perform operation
fnmadd.s f31, f6, f27, f13, rmm # perform operation
fnmadd.s f31, f6, f27, f13, rne # perform operation
fnmadd.s f31, f6, f27, f13, rtz # perform operation
fnmadd.s f31, f6, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f6, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f6, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x1288edab # load x3 with value 0x1288edab
sw x3, 0(x2) # store 0x1288edab in memory
flw f19, 0(x2) # load 0x1288edab from memory into f19
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fnmadd.s f22, f28, f19, f15, dyn # perform operation
fnmadd.s f22, f28, f19, f15, rdn # perform operation
fnmadd.s f22, f28, f19, f15, rmm # perform operation
fnmadd.s f22, f28, f19, f15, rne # perform operation
fnmadd.s f22, f28, f19, f15, rtz # perform operation
fnmadd.s f22, f28, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f28, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f28, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f28, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f28, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f28, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x5a7967c4 # load x3 with value 0x5a7967c4
sw x3, 0(x2) # store 0x5a7967c4 in memory
flw f22, 0(x2) # load 0x5a7967c4 from memory into f22
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fnmadd.s f8, f5, f22, f3, dyn # perform operation
fnmadd.s f8, f5, f22, f3, rdn # perform operation
fnmadd.s f8, f5, f22, f3, rmm # perform operation
fnmadd.s f8, f5, f22, f3, rne # perform operation
fnmadd.s f8, f5, f22, f3, rtz # perform operation
fnmadd.s f8, f5, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x2c158738 # load x3 with value 0x2c158738
sw x3, 0(x2) # store 0x2c158738 in memory
flw f6, 0(x2) # load 0x2c158738 from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fnmadd.s f23, f31, f6, f29, dyn # perform operation
fnmadd.s f23, f31, f6, f29, rdn # perform operation
fnmadd.s f23, f31, f6, f29, rmm # perform operation
fnmadd.s f23, f31, f6, f29, rne # perform operation
fnmadd.s f23, f31, f6, f29, rtz # perform operation
fnmadd.s f23, f31, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x938d054b # load x3 with value 0x938d054b
sw x3, 0(x2) # store 0x938d054b in memory
flw f27, 0(x2) # load 0x938d054b from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fnmadd.s f10, f11, f27, f3, dyn # perform operation
fnmadd.s f10, f11, f27, f3, rdn # perform operation
fnmadd.s f10, f11, f27, f3, rmm # perform operation
fnmadd.s f10, f11, f27, f3, rne # perform operation
fnmadd.s f10, f11, f27, f3, rtz # perform operation
fnmadd.s f10, f11, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f11, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f11, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f11, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f11, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f11, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xc25c2ec8 # load x3 with value 0xc25c2ec8
sw x3, 0(x2) # store 0xc25c2ec8 in memory
flw f27, 0(x2) # load 0xc25c2ec8 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fnmadd.s f22, f17, f27, f5, dyn # perform operation
fnmadd.s f22, f17, f27, f5, rdn # perform operation
fnmadd.s f22, f17, f27, f5, rmm # perform operation
fnmadd.s f22, f17, f27, f5, rne # perform operation
fnmadd.s f22, f17, f27, f5, rtz # perform operation
fnmadd.s f22, f17, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f17, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f17, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f17, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f17, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f17, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
la x2, scratch
li x3, 0xf4cbd9ab # load x3 with value 0xf4cbd9ab
sw x3, 0(x2) # store 0xf4cbd9ab in memory
flw f24, 0(x2) # load 0xf4cbd9ab from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fnmadd.s f18, f14, f24, f20, dyn # perform operation
fnmadd.s f18, f14, f24, f20, rdn # perform operation
fnmadd.s f18, f14, f24, f20, rmm # perform operation
fnmadd.s f18, f14, f24, f20, rne # perform operation
fnmadd.s f18, f14, f24, f20, rtz # perform operation
fnmadd.s f18, f14, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x8287e8d7 # load x3 with value 0x8287e8d7
sw x3, 0(x2) # store 0x8287e8d7 in memory
flw f31, 0(x2) # load 0x8287e8d7 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fnmadd.s f14, f2, f31, f24, dyn # perform operation
fnmadd.s f14, f2, f31, f24, rdn # perform operation
fnmadd.s f14, f2, f31, f24, rmm # perform operation
fnmadd.s f14, f2, f31, f24, rne # perform operation
fnmadd.s f14, f2, f31, f24, rtz # perform operation
fnmadd.s f14, f2, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f2, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f2, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x7463015e # load x3 with value 0x7463015e
sw x3, 0(x2) # store 0x7463015e in memory
flw f19, 0(x2) # load 0x7463015e from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fnmadd.s f12, f3, f19, f11, dyn # perform operation
fnmadd.s f12, f3, f19, f11, rdn # perform operation
fnmadd.s f12, f3, f19, f11, rmm # perform operation
fnmadd.s f12, f3, f19, f11, rne # perform operation
fnmadd.s f12, f3, f19, f11, rtz # perform operation
fnmadd.s f12, f3, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f19, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0xae3315ed # load x3 with value 0xae3315ed
sw x3, 0(x2) # store 0xae3315ed in memory
flw f6, 0(x2) # load 0xae3315ed from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fnmadd.s f27, f17, f6, f8, dyn # perform operation
fnmadd.s f27, f17, f6, f8, rdn # perform operation
fnmadd.s f27, f17, f6, f8, rmm # perform operation
fnmadd.s f27, f17, f6, f8, rne # perform operation
fnmadd.s f27, f17, f6, f8, rtz # perform operation
fnmadd.s f27, f17, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f17, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f17, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x35f12973 # load x3 with value 0x35f12973
sw x3, 0(x2) # store 0x35f12973 in memory
flw f23, 0(x2) # load 0x35f12973 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fnmadd.s f30, f16, f23, f17, dyn # perform operation
fnmadd.s f30, f16, f23, f17, rdn # perform operation
fnmadd.s f30, f16, f23, f17, rmm # perform operation
fnmadd.s f30, f16, f23, f17, rne # perform operation
fnmadd.s f30, f16, f23, f17, rtz # perform operation
fnmadd.s f30, f16, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f16, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f16, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xd9949081 # load x3 with value 0xd9949081
sw x3, 0(x2) # store 0xd9949081 in memory
flw f8, 0(x2) # load 0xd9949081 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f17, f13, f8, f14, dyn # perform operation
fnmadd.s f17, f13, f8, f14, rdn # perform operation
fnmadd.s f17, f13, f8, f14, rmm # perform operation
fnmadd.s f17, f13, f8, f14, rne # perform operation
fnmadd.s f17, f13, f8, f14, rtz # perform operation
fnmadd.s f17, f13, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f13, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x96b8dd1d # load x3 with value 0x96b8dd1d
sw x3, 0(x2) # store 0x96b8dd1d in memory
flw f26, 0(x2) # load 0x96b8dd1d from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fnmadd.s f11, f25, f26, f14, dyn # perform operation
fnmadd.s f11, f25, f26, f14, rdn # perform operation
fnmadd.s f11, f25, f26, f14, rmm # perform operation
fnmadd.s f11, f25, f26, f14, rne # perform operation
fnmadd.s f11, f25, f26, f14, rtz # perform operation
fnmadd.s f11, f25, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f25, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f25, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x18156f05 # load x3 with value 0x18156f05
sw x3, 0(x2) # store 0x18156f05 in memory
flw f16, 0(x2) # load 0x18156f05 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f7, f27, f16, f26, dyn # perform operation
fnmadd.s f7, f27, f16, f26, rdn # perform operation
fnmadd.s f7, f27, f16, f26, rmm # perform operation
fnmadd.s f7, f27, f16, f26, rne # perform operation
fnmadd.s f7, f27, f16, f26, rtz # perform operation
fnmadd.s f7, f27, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f27, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f27, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x78a21fe8 # load x3 with value 0x78a21fe8
sw x3, 0(x2) # store 0x78a21fe8 in memory
flw f22, 0(x2) # load 0x78a21fe8 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fnmadd.s f12, f15, f22, f30, dyn # perform operation
fnmadd.s f12, f15, f22, f30, rdn # perform operation
fnmadd.s f12, f15, f22, f30, rmm # perform operation
fnmadd.s f12, f15, f22, f30, rne # perform operation
fnmadd.s f12, f15, f22, f30, rtz # perform operation
fnmadd.s f12, f15, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f15, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f15, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x15b748cc # load x3 with value 0x15b748cc
sw x3, 0(x2) # store 0x15b748cc in memory
flw f8, 0(x2) # load 0x15b748cc from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fnmadd.s f28, f22, f8, f9, dyn # perform operation
fnmadd.s f28, f22, f8, f9, rdn # perform operation
fnmadd.s f28, f22, f8, f9, rmm # perform operation
fnmadd.s f28, f22, f8, f9, rne # perform operation
fnmadd.s f28, f22, f8, f9, rtz # perform operation
fnmadd.s f28, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x47ea42f4 # load x3 with value 0x47ea42f4
sw x3, 0(x2) # store 0x47ea42f4 in memory
flw f29, 0(x2) # load 0x47ea42f4 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
fnmadd.s f31, f7, f29, f24, dyn # perform operation
fnmadd.s f31, f7, f29, f24, rdn # perform operation
fnmadd.s f31, f7, f29, f24, rmm # perform operation
fnmadd.s f31, f7, f29, f24, rne # perform operation
fnmadd.s f31, f7, f29, f24, rtz # perform operation
fnmadd.s f31, f7, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f29, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x11fcd0ae # load x3 with value 0x11fcd0ae
sw x3, 0(x2) # store 0x11fcd0ae in memory
flw f30, 0(x2) # load 0x11fcd0ae from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fnmadd.s f1, f21, f30, f16, dyn # perform operation
fnmadd.s f1, f21, f30, f16, rdn # perform operation
fnmadd.s f1, f21, f30, f16, rmm # perform operation
fnmadd.s f1, f21, f30, f16, rne # perform operation
fnmadd.s f1, f21, f30, f16, rtz # perform operation
fnmadd.s f1, f21, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f30, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x8dedd8ce # load x3 with value 0x8dedd8ce
sw x3, 0(x2) # store 0x8dedd8ce in memory
flw f9, 0(x2) # load 0x8dedd8ce from memory into f9
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fnmadd.s f14, f22, f9, f20, dyn # perform operation
fnmadd.s f14, f22, f9, f20, rdn # perform operation
fnmadd.s f14, f22, f9, f20, rmm # perform operation
fnmadd.s f14, f22, f9, f20, rne # perform operation
fnmadd.s f14, f22, f9, f20, rtz # perform operation
fnmadd.s f14, f22, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x5fe8efce # load x3 with value 0x5fe8efce
sw x3, 0(x2) # store 0x5fe8efce in memory
flw f2, 0(x2) # load 0x5fe8efce from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fnmadd.s f29, f19, f2, f5, dyn # perform operation
fnmadd.s f29, f19, f2, f5, rdn # perform operation
fnmadd.s f29, f19, f2, f5, rmm # perform operation
fnmadd.s f29, f19, f2, f5, rne # perform operation
fnmadd.s f29, f19, f2, f5, rtz # perform operation
fnmadd.s f29, f19, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f19, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f19, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x87192ccb # load x3 with value 0x87192ccb
sw x3, 0(x2) # store 0x87192ccb in memory
flw f6, 0(x2) # load 0x87192ccb from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fnmadd.s f9, f16, f6, f8, dyn # perform operation
fnmadd.s f9, f16, f6, f8, rdn # perform operation
fnmadd.s f9, f16, f6, f8, rmm # perform operation
fnmadd.s f9, f16, f6, f8, rne # perform operation
fnmadd.s f9, f16, f6, f8, rtz # perform operation
fnmadd.s f9, f16, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xcdde7636 # load x3 with value 0xcdde7636
sw x3, 0(x2) # store 0xcdde7636 in memory
flw f26, 0(x2) # load 0xcdde7636 from memory into f26
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fnmadd.s f28, f10, f26, f31, dyn # perform operation
fnmadd.s f28, f10, f26, f31, rdn # perform operation
fnmadd.s f28, f10, f26, f31, rmm # perform operation
fnmadd.s f28, f10, f26, f31, rne # perform operation
fnmadd.s f28, f10, f26, f31, rtz # perform operation
fnmadd.s f28, f10, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f10, f26, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xbd5a1cb9 # load x3 with value 0xbd5a1cb9
sw x3, 0(x2) # store 0xbd5a1cb9 in memory
flw f12, 0(x2) # load 0xbd5a1cb9 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fnmadd.s f31, f27, f12, f23, dyn # perform operation
fnmadd.s f31, f27, f12, f23, rdn # perform operation
fnmadd.s f31, f27, f12, f23, rmm # perform operation
fnmadd.s f31, f27, f12, f23, rne # perform operation
fnmadd.s f31, f27, f12, f23, rtz # perform operation
fnmadd.s f31, f27, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f12, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0xb502d591 # load x3 with value 0xb502d591
sw x3, 0(x2) # store 0xb502d591 in memory
flw f22, 0(x2) # load 0xb502d591 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fnmadd.s f11, f26, f22, f10, dyn # perform operation
fnmadd.s f11, f26, f22, f10, rdn # perform operation
fnmadd.s f11, f26, f22, f10, rmm # perform operation
fnmadd.s f11, f26, f22, f10, rne # perform operation
fnmadd.s f11, f26, f22, f10, rtz # perform operation
fnmadd.s f11, f26, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f26, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f26, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xa10556c1 # load x3 with value 0xa10556c1
sw x3, 0(x2) # store 0xa10556c1 in memory
flw f28, 0(x2) # load 0xa10556c1 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fnmadd.s f9, f19, f28, f8, dyn # perform operation
fnmadd.s f9, f19, f28, f8, rdn # perform operation
fnmadd.s f9, f19, f28, f8, rmm # perform operation
fnmadd.s f9, f19, f28, f8, rne # perform operation
fnmadd.s f9, f19, f28, f8, rtz # perform operation
fnmadd.s f9, f19, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f19, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f19, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x047f3292 # load x3 with value 0x047f3292
sw x3, 0(x2) # store 0x047f3292 in memory
flw f23, 0(x2) # load 0x047f3292 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fnmadd.s f9, f16, f23, f31, dyn # perform operation
fnmadd.s f9, f16, f23, f31, rdn # perform operation
fnmadd.s f9, f16, f23, f31, rmm # perform operation
fnmadd.s f9, f16, f23, f31, rne # perform operation
fnmadd.s f9, f16, f23, f31, rtz # perform operation
fnmadd.s f9, f16, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f16, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f16, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x52f2f279 # load x3 with value 0x52f2f279
sw x3, 0(x2) # store 0x52f2f279 in memory
flw f30, 0(x2) # load 0x52f2f279 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmadd.s f23, f16, f30, f10, dyn # perform operation
fnmadd.s f23, f16, f30, f10, rdn # perform operation
fnmadd.s f23, f16, f30, f10, rmm # perform operation
fnmadd.s f23, f16, f30, f10, rne # perform operation
fnmadd.s f23, f16, f30, f10, rtz # perform operation
fnmadd.s f23, f16, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x2bc2a412 # load x3 with value 0x2bc2a412
sw x3, 0(x2) # store 0x2bc2a412 in memory
flw f31, 0(x2) # load 0x2bc2a412 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f27, f30, f31, f8, dyn # perform operation
fnmadd.s f27, f30, f31, f8, rdn # perform operation
fnmadd.s f27, f30, f31, f8, rmm # perform operation
fnmadd.s f27, f30, f31, f8, rne # perform operation
fnmadd.s f27, f30, f31, f8, rtz # perform operation
fnmadd.s f27, f30, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f30, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x2fbddb45 # load x3 with value 0x2fbddb45
sw x3, 0(x2) # store 0x2fbddb45 in memory
flw f25, 0(x2) # load 0x2fbddb45 from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmadd.s f9, f27, f25, f24, dyn # perform operation
fnmadd.s f9, f27, f25, f24, rdn # perform operation
fnmadd.s f9, f27, f25, f24, rmm # perform operation
fnmadd.s f9, f27, f25, f24, rne # perform operation
fnmadd.s f9, f27, f25, f24, rtz # perform operation
fnmadd.s f9, f27, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xcbdb557f # load x3 with value 0xcbdb557f
sw x3, 0(x2) # store 0xcbdb557f in memory
flw f30, 0(x2) # load 0xcbdb557f from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f22, f29, f30, f27, dyn # perform operation
fnmadd.s f22, f29, f30, f27, rdn # perform operation
fnmadd.s f22, f29, f30, f27, rmm # perform operation
fnmadd.s f22, f29, f30, f27, rne # perform operation
fnmadd.s f22, f29, f30, f27, rtz # perform operation
fnmadd.s f22, f29, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f29, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f29, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xa6a4676e # load x3 with value 0xa6a4676e
sw x3, 0(x2) # store 0xa6a4676e in memory
flw f11, 0(x2) # load 0xa6a4676e from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fnmadd.s f1, f8, f11, f10, dyn # perform operation
fnmadd.s f1, f8, f11, f10, rdn # perform operation
fnmadd.s f1, f8, f11, f10, rmm # perform operation
fnmadd.s f1, f8, f11, f10, rne # perform operation
fnmadd.s f1, f8, f11, f10, rtz # perform operation
fnmadd.s f1, f8, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f8, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f8, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x8ffbde78 # load x3 with value 0x8ffbde78
sw x3, 0(x2) # store 0x8ffbde78 in memory
flw f22, 0(x2) # load 0x8ffbde78 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f30, f2, f22, f10, dyn # perform operation
fnmadd.s f30, f2, f22, f10, rdn # perform operation
fnmadd.s f30, f2, f22, f10, rmm # perform operation
fnmadd.s f30, f2, f22, f10, rne # perform operation
fnmadd.s f30, f2, f22, f10, rtz # perform operation
fnmadd.s f30, f2, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f2, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f2, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x5d36400e # load x3 with value 0x5d36400e
sw x3, 0(x2) # store 0x5d36400e in memory
flw f1, 0(x2) # load 0x5d36400e from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fnmadd.s f17, f6, f1, f18, dyn # perform operation
fnmadd.s f17, f6, f1, f18, rdn # perform operation
fnmadd.s f17, f6, f1, f18, rmm # perform operation
fnmadd.s f17, f6, f1, f18, rne # perform operation
fnmadd.s f17, f6, f1, f18, rtz # perform operation
fnmadd.s f17, f6, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f6, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f6, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f6, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f6, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f6, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xd5113d38 # load x3 with value 0xd5113d38
sw x3, 0(x2) # store 0xd5113d38 in memory
flw f30, 0(x2) # load 0xd5113d38 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fnmadd.s f31, f12, f30, f17, dyn # perform operation
fnmadd.s f31, f12, f30, f17, rdn # perform operation
fnmadd.s f31, f12, f30, f17, rmm # perform operation
fnmadd.s f31, f12, f30, f17, rne # perform operation
fnmadd.s f31, f12, f30, f17, rtz # perform operation
fnmadd.s f31, f12, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f12, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f12, f30, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x152cee75 # load x3 with value 0x152cee75
sw x3, 0(x2) # store 0x152cee75 in memory
flw f30, 0(x2) # load 0x152cee75 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fnmadd.s f15, f17, f30, f14, dyn # perform operation
fnmadd.s f15, f17, f30, f14, rdn # perform operation
fnmadd.s f15, f17, f30, f14, rmm # perform operation
fnmadd.s f15, f17, f30, f14, rne # perform operation
fnmadd.s f15, f17, f30, f14, rtz # perform operation
fnmadd.s f15, f17, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f17, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f17, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x6bf0b574 # load x3 with value 0x6bf0b574
sw x3, 0(x2) # store 0x6bf0b574 in memory
flw f28, 0(x2) # load 0x6bf0b574 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fnmadd.s f2, f17, f28, f21, dyn # perform operation
fnmadd.s f2, f17, f28, f21, rdn # perform operation
fnmadd.s f2, f17, f28, f21, rmm # perform operation
fnmadd.s f2, f17, f28, f21, rne # perform operation
fnmadd.s f2, f17, f28, f21, rtz # perform operation
fnmadd.s f2, f17, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f17, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f17, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0xa5f69c0b # load x3 with value 0xa5f69c0b
sw x3, 0(x2) # store 0xa5f69c0b in memory
flw f9, 0(x2) # load 0xa5f69c0b from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f13, f6, f9, f18, dyn # perform operation
fnmadd.s f13, f6, f9, f18, rdn # perform operation
fnmadd.s f13, f6, f9, f18, rmm # perform operation
fnmadd.s f13, f6, f9, f18, rne # perform operation
fnmadd.s f13, f6, f9, f18, rtz # perform operation
fnmadd.s f13, f6, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f6, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f6, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f6, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f6, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f6, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x4426d9ab # load x3 with value 0x4426d9ab
sw x3, 0(x2) # store 0x4426d9ab in memory
flw f3, 0(x2) # load 0x4426d9ab from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fnmadd.s f11, f15, f3, f1, dyn # perform operation
fnmadd.s f11, f15, f3, f1, rdn # perform operation
fnmadd.s f11, f15, f3, f1, rmm # perform operation
fnmadd.s f11, f15, f3, f1, rne # perform operation
fnmadd.s f11, f15, f3, f1, rtz # perform operation
fnmadd.s f11, f15, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f15, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f15, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f15, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f15, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f15, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0xad0e8246 # load x3 with value 0xad0e8246
sw x3, 0(x2) # store 0xad0e8246 in memory
flw f28, 0(x2) # load 0xad0e8246 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
fnmadd.s f7, f5, f28, f30, dyn # perform operation
fnmadd.s f7, f5, f28, f30, rdn # perform operation
fnmadd.s f7, f5, f28, f30, rmm # perform operation
fnmadd.s f7, f5, f28, f30, rne # perform operation
fnmadd.s f7, f5, f28, f30, rtz # perform operation
fnmadd.s f7, f5, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f5, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f5, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x6edd9e48 # load x3 with value 0x6edd9e48
sw x3, 0(x2) # store 0x6edd9e48 in memory
flw f20, 0(x2) # load 0x6edd9e48 from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fnmadd.s f27, f11, f20, f16, dyn # perform operation
fnmadd.s f27, f11, f20, f16, rdn # perform operation
fnmadd.s f27, f11, f20, f16, rmm # perform operation
fnmadd.s f27, f11, f20, f16, rne # perform operation
fnmadd.s f27, f11, f20, f16, rtz # perform operation
fnmadd.s f27, f11, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f11, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f11, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x8856d834 # load x3 with value 0x8856d834
sw x3, 0(x2) # store 0x8856d834 in memory
flw f25, 0(x2) # load 0x8856d834 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f21, f19, f25, f22, dyn # perform operation
fnmadd.s f21, f19, f25, f22, rdn # perform operation
fnmadd.s f21, f19, f25, f22, rmm # perform operation
fnmadd.s f21, f19, f25, f22, rne # perform operation
fnmadd.s f21, f19, f25, f22, rtz # perform operation
fnmadd.s f21, f19, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f19, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f19, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f19, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f19, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f19, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x76691303 # load x3 with value 0x76691303
sw x3, 0(x2) # store 0x76691303 in memory
flw f22, 0(x2) # load 0x76691303 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fnmadd.s f30, f21, f22, f20, dyn # perform operation
fnmadd.s f30, f21, f22, f20, rdn # perform operation
fnmadd.s f30, f21, f22, f20, rmm # perform operation
fnmadd.s f30, f21, f22, f20, rne # perform operation
fnmadd.s f30, f21, f22, f20, rtz # perform operation
fnmadd.s f30, f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f21, f22, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0xa0ecd9be # load x3 with value 0xa0ecd9be
sw x3, 0(x2) # store 0xa0ecd9be in memory
flw f9, 0(x2) # load 0xa0ecd9be from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fnmadd.s f1, f15, f9, f16, dyn # perform operation
fnmadd.s f1, f15, f9, f16, rdn # perform operation
fnmadd.s f1, f15, f9, f16, rmm # perform operation
fnmadd.s f1, f15, f9, f16, rne # perform operation
fnmadd.s f1, f15, f9, f16, rtz # perform operation
fnmadd.s f1, f15, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f15, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f15, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f15, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f15, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f15, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x1a858203 # load x3 with value 0x1a858203
sw x3, 0(x2) # store 0x1a858203 in memory
flw f27, 0(x2) # load 0x1a858203 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fnmadd.s f31, f24, f27, f23, dyn # perform operation
fnmadd.s f31, f24, f27, f23, rdn # perform operation
fnmadd.s f31, f24, f27, f23, rmm # perform operation
fnmadd.s f31, f24, f27, f23, rne # perform operation
fnmadd.s f31, f24, f27, f23, rtz # perform operation
fnmadd.s f31, f24, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f24, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f24, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x01537ccb # load x3 with value 0x01537ccb
sw x3, 0(x2) # store 0x01537ccb in memory
flw f22, 0(x2) # load 0x01537ccb from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fnmadd.s f2, f29, f22, f31, dyn # perform operation
fnmadd.s f2, f29, f22, f31, rdn # perform operation
fnmadd.s f2, f29, f22, f31, rmm # perform operation
fnmadd.s f2, f29, f22, f31, rne # perform operation
fnmadd.s f2, f29, f22, f31, rtz # perform operation
fnmadd.s f2, f29, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f29, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f29, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x4fd0b788 # load x3 with value 0x4fd0b788
sw x3, 0(x2) # store 0x4fd0b788 in memory
flw f5, 0(x2) # load 0x4fd0b788 from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fnmadd.s f24, f19, f5, f27, dyn # perform operation
fnmadd.s f24, f19, f5, f27, rdn # perform operation
fnmadd.s f24, f19, f5, f27, rmm # perform operation
fnmadd.s f24, f19, f5, f27, rne # perform operation
fnmadd.s f24, f19, f5, f27, rtz # perform operation
fnmadd.s f24, f19, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f19, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xc4544b28 # load x3 with value 0xc4544b28
sw x3, 0(x2) # store 0xc4544b28 in memory
flw f5, 0(x2) # load 0xc4544b28 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fnmadd.s f12, f14, f5, f11, dyn # perform operation
fnmadd.s f12, f14, f5, f11, rdn # perform operation
fnmadd.s f12, f14, f5, f11, rmm # perform operation
fnmadd.s f12, f14, f5, f11, rne # perform operation
fnmadd.s f12, f14, f5, f11, rtz # perform operation
fnmadd.s f12, f14, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xe1750171 # load x3 with value 0xe1750171
sw x3, 0(x2) # store 0xe1750171 in memory
flw f2, 0(x2) # load 0xe1750171 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.s f18, f29, f2, f28, dyn # perform operation
fnmadd.s f18, f29, f2, f28, rdn # perform operation
fnmadd.s f18, f29, f2, f28, rmm # perform operation
fnmadd.s f18, f29, f2, f28, rne # perform operation
fnmadd.s f18, f29, f2, f28, rtz # perform operation
fnmadd.s f18, f29, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f29, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f29, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0xac0913fb # load x3 with value 0xac0913fb
sw x3, 0(x2) # store 0xac0913fb in memory
flw f18, 0(x2) # load 0xac0913fb from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fnmadd.s f21, f15, f18, f20, dyn # perform operation
fnmadd.s f21, f15, f18, f20, rdn # perform operation
fnmadd.s f21, f15, f18, f20, rmm # perform operation
fnmadd.s f21, f15, f18, f20, rne # perform operation
fnmadd.s f21, f15, f18, f20, rtz # perform operation
fnmadd.s f21, f15, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f15, f18, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x1f4c4cdb # load x3 with value 0x1f4c4cdb
sw x3, 0(x2) # store 0x1f4c4cdb in memory
flw f1, 0(x2) # load 0x1f4c4cdb from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fnmadd.s f2, f26, f1, f28, dyn # perform operation
fnmadd.s f2, f26, f1, f28, rdn # perform operation
fnmadd.s f2, f26, f1, f28, rmm # perform operation
fnmadd.s f2, f26, f1, f28, rne # perform operation
fnmadd.s f2, f26, f1, f28, rtz # perform operation
fnmadd.s f2, f26, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f26, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f26, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x3f8bc280 # load x3 with value 0x3f8bc280
sw x3, 0(x2) # store 0x3f8bc280 in memory
flw f20, 0(x2) # load 0x3f8bc280 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f6, f16, f20, f8, dyn # perform operation
fnmadd.s f6, f16, f20, f8, rdn # perform operation
fnmadd.s f6, f16, f20, f8, rmm # perform operation
fnmadd.s f6, f16, f20, f8, rne # perform operation
fnmadd.s f6, f16, f20, f8, rtz # perform operation
fnmadd.s f6, f16, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f16, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f16, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x08903633 # load x3 with value 0x08903633
sw x3, 0(x2) # store 0x08903633 in memory
flw f1, 0(x2) # load 0x08903633 from memory into f1
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmadd.s f24, f21, f1, f15, dyn # perform operation
fnmadd.s f24, f21, f1, f15, rdn # perform operation
fnmadd.s f24, f21, f1, f15, rmm # perform operation
fnmadd.s f24, f21, f1, f15, rne # perform operation
fnmadd.s f24, f21, f1, f15, rtz # perform operation
fnmadd.s f24, f21, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f1, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0xb093be3e # load x3 with value 0xb093be3e
sw x3, 0(x2) # store 0xb093be3e in memory
flw f5, 0(x2) # load 0xb093be3e from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmadd.s f25, f8, f5, f24, dyn # perform operation
fnmadd.s f25, f8, f5, f24, rdn # perform operation
fnmadd.s f25, f8, f5, f24, rmm # perform operation
fnmadd.s f25, f8, f5, f24, rne # perform operation
fnmadd.s f25, f8, f5, f24, rtz # perform operation
fnmadd.s f25, f8, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f8, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f8, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xa787edb1 # load x3 with value 0xa787edb1
sw x3, 0(x2) # store 0xa787edb1 in memory
flw f2, 0(x2) # load 0xa787edb1 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fnmadd.s f23, f20, f2, f28, dyn # perform operation
fnmadd.s f23, f20, f2, f28, rdn # perform operation
fnmadd.s f23, f20, f2, f28, rmm # perform operation
fnmadd.s f23, f20, f2, f28, rne # perform operation
fnmadd.s f23, f20, f2, f28, rtz # perform operation
fnmadd.s f23, f20, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f20, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f20, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0x8d3163f2 # load x3 with value 0x8d3163f2
sw x3, 0(x2) # store 0x8d3163f2 in memory
flw f5, 0(x2) # load 0x8d3163f2 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fnmadd.s f16, f18, f5, f27, dyn # perform operation
fnmadd.s f16, f18, f5, f27, rdn # perform operation
fnmadd.s f16, f18, f5, f27, rmm # perform operation
fnmadd.s f16, f18, f5, f27, rne # perform operation
fnmadd.s f16, f18, f5, f27, rtz # perform operation
fnmadd.s f16, f18, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f18, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f18, f5, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0x734ca889 # load x3 with value 0x734ca889
sw x3, 0(x2) # store 0x734ca889 in memory
flw f8, 0(x2) # load 0x734ca889 from memory into f8
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fnmadd.s f31, f29, f8, f18, dyn # perform operation
fnmadd.s f31, f29, f8, f18, rdn # perform operation
fnmadd.s f31, f29, f8, f18, rmm # perform operation
fnmadd.s f31, f29, f8, f18, rne # perform operation
fnmadd.s f31, f29, f8, f18, rtz # perform operation
fnmadd.s f31, f29, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f29, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0xf706be19 # load x3 with value 0xf706be19
sw x3, 0(x2) # store 0xf706be19 in memory
flw f19, 0(x2) # load 0xf706be19 from memory into f19
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmadd.s f13, f28, f19, f24, dyn # perform operation
fnmadd.s f13, f28, f19, f24, rdn # perform operation
fnmadd.s f13, f28, f19, f24, rmm # perform operation
fnmadd.s f13, f28, f19, f24, rne # perform operation
fnmadd.s f13, f28, f19, f24, rtz # perform operation
fnmadd.s f13, f28, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f28, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f28, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x9e683747 # load x3 with value 0x9e683747
sw x3, 0(x2) # store 0x9e683747 in memory
flw f12, 0(x2) # load 0x9e683747 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fnmadd.s f2, f13, f12, f27, dyn # perform operation
fnmadd.s f2, f13, f12, f27, rdn # perform operation
fnmadd.s f2, f13, f12, f27, rmm # perform operation
fnmadd.s f2, f13, f12, f27, rne # perform operation
fnmadd.s f2, f13, f12, f27, rtz # perform operation
fnmadd.s f2, f13, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f12, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x56f3fdba # load x3 with value 0x56f3fdba
sw x3, 0(x2) # store 0x56f3fdba in memory
flw f14, 0(x2) # load 0x56f3fdba from memory into f14
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fnmadd.s f25, f6, f14, f2, dyn # perform operation
fnmadd.s f25, f6, f14, f2, rdn # perform operation
fnmadd.s f25, f6, f14, f2, rmm # perform operation
fnmadd.s f25, f6, f14, f2, rne # perform operation
fnmadd.s f25, f6, f14, f2, rtz # perform operation
fnmadd.s f25, f6, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f6, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x56a01bc2 # load x3 with value 0x56a01bc2
sw x3, 0(x2) # store 0x56a01bc2 in memory
flw f13, 0(x2) # load 0x56a01bc2 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fnmadd.s f29, f11, f13, f10, dyn # perform operation
fnmadd.s f29, f11, f13, f10, rdn # perform operation
fnmadd.s f29, f11, f13, f10, rmm # perform operation
fnmadd.s f29, f11, f13, f10, rne # perform operation
fnmadd.s f29, f11, f13, f10, rtz # perform operation
fnmadd.s f29, f11, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xf1596c10 # load x3 with value 0xf1596c10
sw x3, 0(x2) # store 0xf1596c10 in memory
flw f19, 0(x2) # load 0xf1596c10 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f1, f21, f19, f15, dyn # perform operation
fnmadd.s f1, f21, f19, f15, rdn # perform operation
fnmadd.s f1, f21, f19, f15, rmm # perform operation
fnmadd.s f1, f21, f19, f15, rne # perform operation
fnmadd.s f1, f21, f19, f15, rtz # perform operation
fnmadd.s f1, f21, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x58311ade # load x3 with value 0x58311ade
sw x3, 0(x2) # store 0x58311ade in memory
flw f21, 0(x2) # load 0x58311ade from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fnmadd.s f8, f6, f21, f29, dyn # perform operation
fnmadd.s f8, f6, f21, f29, rdn # perform operation
fnmadd.s f8, f6, f21, f29, rmm # perform operation
fnmadd.s f8, f6, f21, f29, rne # perform operation
fnmadd.s f8, f6, f21, f29, rtz # perform operation
fnmadd.s f8, f6, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f6, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f6, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x16d73778 # load x3 with value 0x16d73778
sw x3, 0(x2) # store 0x16d73778 in memory
flw f10, 0(x2) # load 0x16d73778 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fnmadd.s f15, f22, f10, f1, dyn # perform operation
fnmadd.s f15, f22, f10, f1, rdn # perform operation
fnmadd.s f15, f22, f10, f1, rmm # perform operation
fnmadd.s f15, f22, f10, f1, rne # perform operation
fnmadd.s f15, f22, f10, f1, rtz # perform operation
fnmadd.s f15, f22, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x5a7c4e1b # load x3 with value 0x5a7c4e1b
sw x3, 0(x2) # store 0x5a7c4e1b in memory
flw f7, 0(x2) # load 0x5a7c4e1b from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fnmadd.s f29, f28, f7, f17, dyn # perform operation
fnmadd.s f29, f28, f7, f17, rdn # perform operation
fnmadd.s f29, f28, f7, f17, rmm # perform operation
fnmadd.s f29, f28, f7, f17, rne # perform operation
fnmadd.s f29, f28, f7, f17, rtz # perform operation
fnmadd.s f29, f28, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f28, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f28, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f28, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f28, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f28, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x3d1efad4 # load x3 with value 0x3d1efad4
sw x3, 0(x2) # store 0x3d1efad4 in memory
flw f31, 0(x2) # load 0x3d1efad4 from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fnmadd.s f1, f6, f31, f22, dyn # perform operation
fnmadd.s f1, f6, f31, f22, rdn # perform operation
fnmadd.s f1, f6, f31, f22, rmm # perform operation
fnmadd.s f1, f6, f31, f22, rne # perform operation
fnmadd.s f1, f6, f31, f22, rtz # perform operation
fnmadd.s f1, f6, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f6, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f6, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xcac91e07 # load x3 with value 0xcac91e07
sw x3, 0(x2) # store 0xcac91e07 in memory
flw f22, 0(x2) # load 0xcac91e07 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fnmadd.s f21, f23, f22, f17, dyn # perform operation
fnmadd.s f21, f23, f22, f17, rdn # perform operation
fnmadd.s f21, f23, f22, f17, rmm # perform operation
fnmadd.s f21, f23, f22, f17, rne # perform operation
fnmadd.s f21, f23, f22, f17, rtz # perform operation
fnmadd.s f21, f23, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f23, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f23, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x1762e1f2 # load x3 with value 0x1762e1f2
sw x3, 0(x2) # store 0x1762e1f2 in memory
flw f25, 0(x2) # load 0x1762e1f2 from memory into f25
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fnmadd.s f26, f10, f25, f1, dyn # perform operation
fnmadd.s f26, f10, f25, f1, rdn # perform operation
fnmadd.s f26, f10, f25, f1, rmm # perform operation
fnmadd.s f26, f10, f25, f1, rne # perform operation
fnmadd.s f26, f10, f25, f1, rtz # perform operation
fnmadd.s f26, f10, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f25, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x4fe4290a # load x3 with value 0x4fe4290a
sw x3, 0(x2) # store 0x4fe4290a in memory
flw f18, 0(x2) # load 0x4fe4290a from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fnmadd.s f3, f28, f18, f19, dyn # perform operation
fnmadd.s f3, f28, f18, f19, rdn # perform operation
fnmadd.s f3, f28, f18, f19, rmm # perform operation
fnmadd.s f3, f28, f18, f19, rne # perform operation
fnmadd.s f3, f28, f18, f19, rtz # perform operation
fnmadd.s f3, f28, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f28, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f28, f18, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x7bfc96d8 # load x3 with value 0x7bfc96d8
sw x3, 0(x2) # store 0x7bfc96d8 in memory
flw f21, 0(x2) # load 0x7bfc96d8 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmadd.s f16, f12, f21, f19, dyn # perform operation
fnmadd.s f16, f12, f21, f19, rdn # perform operation
fnmadd.s f16, f12, f21, f19, rmm # perform operation
fnmadd.s f16, f12, f21, f19, rne # perform operation
fnmadd.s f16, f12, f21, f19, rtz # perform operation
fnmadd.s f16, f12, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f12, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f12, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f12, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f12, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f12, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xef23fc1a # load x3 with value 0xef23fc1a
sw x3, 0(x2) # store 0xef23fc1a in memory
flw f14, 0(x2) # load 0xef23fc1a from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fnmadd.s f29, f16, f14, f19, dyn # perform operation
fnmadd.s f29, f16, f14, f19, rdn # perform operation
fnmadd.s f29, f16, f14, f19, rmm # perform operation
fnmadd.s f29, f16, f14, f19, rne # perform operation
fnmadd.s f29, f16, f14, f19, rtz # perform operation
fnmadd.s f29, f16, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f16, f14, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0xb559d0fd # load x3 with value 0xb559d0fd
sw x3, 0(x2) # store 0xb559d0fd in memory
flw f21, 0(x2) # load 0xb559d0fd from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f11, f19, f21, f14, dyn # perform operation
fnmadd.s f11, f19, f21, f14, rdn # perform operation
fnmadd.s f11, f19, f21, f14, rmm # perform operation
fnmadd.s f11, f19, f21, f14, rne # perform operation
fnmadd.s f11, f19, f21, f14, rtz # perform operation
fnmadd.s f11, f19, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0x06abc3a8 # load x3 with value 0x06abc3a8
sw x3, 0(x2) # store 0x06abc3a8 in memory
flw f2, 0(x2) # load 0x06abc3a8 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fnmadd.s f15, f22, f2, f21, dyn # perform operation
fnmadd.s f15, f22, f2, f21, rdn # perform operation
fnmadd.s f15, f22, f2, f21, rmm # perform operation
fnmadd.s f15, f22, f2, f21, rne # perform operation
fnmadd.s f15, f22, f2, f21, rtz # perform operation
fnmadd.s f15, f22, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f22, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
la x2, scratch
li x3, 0x02249891 # load x3 with value 0x02249891
sw x3, 0(x2) # store 0x02249891 in memory
flw f5, 0(x2) # load 0x02249891 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fnmadd.s f13, f26, f5, f1, dyn # perform operation
fnmadd.s f13, f26, f5, f1, rdn # perform operation
fnmadd.s f13, f26, f5, f1, rmm # perform operation
fnmadd.s f13, f26, f5, f1, rne # perform operation
fnmadd.s f13, f26, f5, f1, rtz # perform operation
fnmadd.s f13, f26, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f5, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x508b9293 # load x3 with value 0x508b9293
sw x3, 0(x2) # store 0x508b9293 in memory
flw f27, 0(x2) # load 0x508b9293 from memory into f27
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fnmadd.s f7, f10, f27, f9, dyn # perform operation
fnmadd.s f7, f10, f27, f9, rdn # perform operation
fnmadd.s f7, f10, f27, f9, rmm # perform operation
fnmadd.s f7, f10, f27, f9, rne # perform operation
fnmadd.s f7, f10, f27, f9, rtz # perform operation
fnmadd.s f7, f10, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f10, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f10, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0xc23a20c6 # load x3 with value 0xc23a20c6
sw x3, 0(x2) # store 0xc23a20c6 in memory
flw f19, 0(x2) # load 0xc23a20c6 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmadd.s f5, f16, f19, f9, dyn # perform operation
fnmadd.s f5, f16, f19, f9, rdn # perform operation
fnmadd.s f5, f16, f19, f9, rmm # perform operation
fnmadd.s f5, f16, f19, f9, rne # perform operation
fnmadd.s f5, f16, f19, f9, rtz # perform operation
fnmadd.s f5, f16, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f16, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f16, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f16, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f16, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f16, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x0b5e4a53 # load x3 with value 0x0b5e4a53
sw x3, 0(x2) # store 0x0b5e4a53 in memory
flw f8, 0(x2) # load 0x0b5e4a53 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.s f5, f3, f8, f11, dyn # perform operation
fnmadd.s f5, f3, f8, f11, rdn # perform operation
fnmadd.s f5, f3, f8, f11, rmm # perform operation
fnmadd.s f5, f3, f8, f11, rne # perform operation
fnmadd.s f5, f3, f8, f11, rtz # perform operation
fnmadd.s f5, f3, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f3, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f3, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x6c3e8f40 # load x3 with value 0x6c3e8f40
sw x3, 0(x2) # store 0x6c3e8f40 in memory
flw f7, 0(x2) # load 0x6c3e8f40 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fnmadd.s f13, f21, f7, f30, dyn # perform operation
fnmadd.s f13, f21, f7, f30, rdn # perform operation
fnmadd.s f13, f21, f7, f30, rmm # perform operation
fnmadd.s f13, f21, f7, f30, rne # perform operation
fnmadd.s f13, f21, f7, f30, rtz # perform operation
fnmadd.s f13, f21, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f21, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f21, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f21, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f21, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f21, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x3dc59cb1 # load x3 with value 0x3dc59cb1
sw x3, 0(x2) # store 0x3dc59cb1 in memory
flw f6, 0(x2) # load 0x3dc59cb1 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fnmadd.s f17, f22, f6, f31, dyn # perform operation
fnmadd.s f17, f22, f6, f31, rdn # perform operation
fnmadd.s f17, f22, f6, f31, rmm # perform operation
fnmadd.s f17, f22, f6, f31, rne # perform operation
fnmadd.s f17, f22, f6, f31, rtz # perform operation
fnmadd.s f17, f22, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f22, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x72a026ef # load x3 with value 0x72a026ef
sw x3, 0(x2) # store 0x72a026ef in memory
flw f23, 0(x2) # load 0x72a026ef from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmadd.s f5, f27, f23, f15, dyn # perform operation
fnmadd.s f5, f27, f23, f15, rdn # perform operation
fnmadd.s f5, f27, f23, f15, rmm # perform operation
fnmadd.s f5, f27, f23, f15, rne # perform operation
fnmadd.s f5, f27, f23, f15, rtz # perform operation
fnmadd.s f5, f27, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f27, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f27, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0xa6cd72ea # load x3 with value 0xa6cd72ea
sw x3, 0(x2) # store 0xa6cd72ea in memory
flw f22, 0(x2) # load 0xa6cd72ea from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmadd.s f23, f29, f22, f30, dyn # perform operation
fnmadd.s f23, f29, f22, f30, rdn # perform operation
fnmadd.s f23, f29, f22, f30, rmm # perform operation
fnmadd.s f23, f29, f22, f30, rne # perform operation
fnmadd.s f23, f29, f22, f30, rtz # perform operation
fnmadd.s f23, f29, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f29, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f29, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f29, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f29, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f29, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x4278bde0 # load x3 with value 0x4278bde0
sw x3, 0(x2) # store 0x4278bde0 in memory
flw f29, 0(x2) # load 0x4278bde0 from memory into f29
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmadd.s f27, f8, f29, f15, dyn # perform operation
fnmadd.s f27, f8, f29, f15, rdn # perform operation
fnmadd.s f27, f8, f29, f15, rmm # perform operation
fnmadd.s f27, f8, f29, f15, rne # perform operation
fnmadd.s f27, f8, f29, f15, rtz # perform operation
fnmadd.s f27, f8, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0xd09c10b2 # load x3 with value 0xd09c10b2
sw x3, 0(x2) # store 0xd09c10b2 in memory
flw f16, 0(x2) # load 0xd09c10b2 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fnmadd.s f31, f27, f16, f7, dyn # perform operation
fnmadd.s f31, f27, f16, f7, rdn # perform operation
fnmadd.s f31, f27, f16, f7, rmm # perform operation
fnmadd.s f31, f27, f16, f7, rne # perform operation
fnmadd.s f31, f27, f16, f7, rtz # perform operation
fnmadd.s f31, f27, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f27, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f27, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f27, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f27, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f27, f16, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x3cd7cc58 # load x3 with value 0x3cd7cc58
sw x3, 0(x2) # store 0x3cd7cc58 in memory
flw f28, 0(x2) # load 0x3cd7cc58 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f25, f27, f28, f21, dyn # perform operation
fnmadd.s f25, f27, f28, f21, rdn # perform operation
fnmadd.s f25, f27, f28, f21, rmm # perform operation
fnmadd.s f25, f27, f28, f21, rne # perform operation
fnmadd.s f25, f27, f28, f21, rtz # perform operation
fnmadd.s f25, f27, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f27, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f27, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x70891d06 # load x3 with value 0x70891d06
sw x3, 0(x2) # store 0x70891d06 in memory
flw f10, 0(x2) # load 0x70891d06 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmadd.s f28, f24, f10, f2, dyn # perform operation
fnmadd.s f28, f24, f10, f2, rdn # perform operation
fnmadd.s f28, f24, f10, f2, rmm # perform operation
fnmadd.s f28, f24, f10, f2, rne # perform operation
fnmadd.s f28, f24, f10, f2, rtz # perform operation
fnmadd.s f28, f24, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f24, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f24, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x7cc2fbde # load x3 with value 0x7cc2fbde
sw x3, 0(x2) # store 0x7cc2fbde in memory
flw f22, 0(x2) # load 0x7cc2fbde from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fnmadd.s f9, f23, f22, f18, dyn # perform operation
fnmadd.s f9, f23, f22, f18, rdn # perform operation
fnmadd.s f9, f23, f22, f18, rmm # perform operation
fnmadd.s f9, f23, f22, f18, rne # perform operation
fnmadd.s f9, f23, f22, f18, rtz # perform operation
fnmadd.s f9, f23, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f23, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f23, f22, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xbe0df17b # load x3 with value 0xbe0df17b
sw x3, 0(x2) # store 0xbe0df17b in memory
flw f31, 0(x2) # load 0xbe0df17b from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmadd.s f11, f6, f31, f5, dyn # perform operation
fnmadd.s f11, f6, f31, f5, rdn # perform operation
fnmadd.s f11, f6, f31, f5, rmm # perform operation
fnmadd.s f11, f6, f31, f5, rne # perform operation
fnmadd.s f11, f6, f31, f5, rtz # perform operation
fnmadd.s f11, f6, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f6, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f6, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x5a4142e2 # load x3 with value 0x5a4142e2
sw x3, 0(x2) # store 0x5a4142e2 in memory
flw f23, 0(x2) # load 0x5a4142e2 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fnmadd.s f19, f13, f23, f18, dyn # perform operation
fnmadd.s f19, f13, f23, f18, rdn # perform operation
fnmadd.s f19, f13, f23, f18, rmm # perform operation
fnmadd.s f19, f13, f23, f18, rne # perform operation
fnmadd.s f19, f13, f23, f18, rtz # perform operation
fnmadd.s f19, f13, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f13, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
la x2, scratch
li x3, 0xf42b1d9a # load x3 with value 0xf42b1d9a
sw x3, 0(x2) # store 0xf42b1d9a in memory
flw f15, 0(x2) # load 0xf42b1d9a from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fnmadd.s f12, f28, f15, f23, dyn # perform operation
fnmadd.s f12, f28, f15, f23, rdn # perform operation
fnmadd.s f12, f28, f15, f23, rmm # perform operation
fnmadd.s f12, f28, f15, f23, rne # perform operation
fnmadd.s f12, f28, f15, f23, rtz # perform operation
fnmadd.s f12, f28, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f15, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x9198fe19 # load x3 with value 0x9198fe19
sw x3, 0(x2) # store 0x9198fe19 in memory
flw f13, 0(x2) # load 0x9198fe19 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fnmadd.s f15, f14, f13, f24, dyn # perform operation
fnmadd.s f15, f14, f13, f24, rdn # perform operation
fnmadd.s f15, f14, f13, f24, rmm # perform operation
fnmadd.s f15, f14, f13, f24, rne # perform operation
fnmadd.s f15, f14, f13, f24, rtz # perform operation
fnmadd.s f15, f14, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f14, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f14, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f14, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f14, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f14, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xdb17e6fb # load x3 with value 0xdb17e6fb
sw x3, 0(x2) # store 0xdb17e6fb in memory
flw f15, 0(x2) # load 0xdb17e6fb from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fnmadd.s f18, f1, f15, f12, dyn # perform operation
fnmadd.s f18, f1, f15, f12, rdn # perform operation
fnmadd.s f18, f1, f15, f12, rmm # perform operation
fnmadd.s f18, f1, f15, f12, rne # perform operation
fnmadd.s f18, f1, f15, f12, rtz # perform operation
fnmadd.s f18, f1, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f1, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f1, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
la x2, scratch
li x3, 0x948d4850 # load x3 with value 0x948d4850
sw x3, 0(x2) # store 0x948d4850 in memory
flw f15, 0(x2) # load 0x948d4850 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fnmadd.s f19, f31, f15, f5, dyn # perform operation
fnmadd.s f19, f31, f15, f5, rdn # perform operation
fnmadd.s f19, f31, f15, f5, rmm # perform operation
fnmadd.s f19, f31, f15, f5, rne # perform operation
fnmadd.s f19, f31, f15, f5, rtz # perform operation
fnmadd.s f19, f31, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f31, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f31, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x765befa8 # load x3 with value 0x765befa8
sw x3, 0(x2) # store 0x765befa8 in memory
flw f3, 0(x2) # load 0x765befa8 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f26, f7, f3, f10, dyn # perform operation
fnmadd.s f26, f7, f3, f10, rdn # perform operation
fnmadd.s f26, f7, f3, f10, rmm # perform operation
fnmadd.s f26, f7, f3, f10, rne # perform operation
fnmadd.s f26, f7, f3, f10, rtz # perform operation
fnmadd.s f26, f7, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xaa9be503 # load x3 with value 0xaa9be503
sw x3, 0(x2) # store 0xaa9be503 in memory
flw f23, 0(x2) # load 0xaa9be503 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fnmadd.s f27, f5, f23, f21, dyn # perform operation
fnmadd.s f27, f5, f23, f21, rdn # perform operation
fnmadd.s f27, f5, f23, f21, rmm # perform operation
fnmadd.s f27, f5, f23, f21, rne # perform operation
fnmadd.s f27, f5, f23, f21, rtz # perform operation
fnmadd.s f27, f5, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f5, f23, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0x632c3012 # load x3 with value 0x632c3012
sw x3, 0(x2) # store 0x632c3012 in memory
flw f25, 0(x2) # load 0x632c3012 from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
fnmadd.s f26, f18, f25, f9, dyn # perform operation
fnmadd.s f26, f18, f25, f9, rdn # perform operation
fnmadd.s f26, f18, f25, f9, rmm # perform operation
fnmadd.s f26, f18, f25, f9, rne # perform operation
fnmadd.s f26, f18, f25, f9, rtz # perform operation
fnmadd.s f26, f18, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f18, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f18, f25, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xad99dda6 # load x3 with value 0xad99dda6
sw x3, 0(x2) # store 0xad99dda6 in memory
flw f28, 0(x2) # load 0xad99dda6 from memory into f28
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fnmadd.s f29, f14, f28, f23, dyn # perform operation
fnmadd.s f29, f14, f28, f23, rdn # perform operation
fnmadd.s f29, f14, f28, f23, rmm # perform operation
fnmadd.s f29, f14, f28, f23, rne # perform operation
fnmadd.s f29, f14, f28, f23, rtz # perform operation
fnmadd.s f29, f14, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f14, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f14, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f14, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f14, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f14, f28, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x6af76766 # load x3 with value 0x6af76766
sw x3, 0(x2) # store 0x6af76766 in memory
flw f2, 0(x2) # load 0x6af76766 from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fnmadd.s f1, f30, f2, f25, dyn # perform operation
fnmadd.s f1, f30, f2, f25, rdn # perform operation
fnmadd.s f1, f30, f2, f25, rmm # perform operation
fnmadd.s f1, f30, f2, f25, rne # perform operation
fnmadd.s f1, f30, f2, f25, rtz # perform operation
fnmadd.s f1, f30, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f30, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f30, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f30, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f30, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f30, f2, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x4352817d # load x3 with value 0x4352817d
sw x3, 0(x2) # store 0x4352817d in memory
flw f17, 0(x2) # load 0x4352817d from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fnmadd.s f18, f3, f17, f19, dyn # perform operation
fnmadd.s f18, f3, f17, f19, rdn # perform operation
fnmadd.s f18, f3, f17, f19, rmm # perform operation
fnmadd.s f18, f3, f17, f19, rne # perform operation
fnmadd.s f18, f3, f17, f19, rtz # perform operation
fnmadd.s f18, f3, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f3, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f3, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0xd168ca6f # load x3 with value 0xd168ca6f
sw x3, 0(x2) # store 0xd168ca6f in memory
flw f22, 0(x2) # load 0xd168ca6f from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
fnmadd.s f13, f1, f22, f24, dyn # perform operation
fnmadd.s f13, f1, f22, f24, rdn # perform operation
fnmadd.s f13, f1, f22, f24, rmm # perform operation
fnmadd.s f13, f1, f22, f24, rne # perform operation
fnmadd.s f13, f1, f22, f24, rtz # perform operation
fnmadd.s f13, f1, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f1, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f1, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
la x2, scratch
li x3, 0x7d25d6c9 # load x3 with value 0x7d25d6c9
sw x3, 0(x2) # store 0x7d25d6c9 in memory
flw f27, 0(x2) # load 0x7d25d6c9 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fnmadd.s f15, f29, f27, f14, dyn # perform operation
fnmadd.s f15, f29, f27, f14, rdn # perform operation
fnmadd.s f15, f29, f27, f14, rmm # perform operation
fnmadd.s f15, f29, f27, f14, rne # perform operation
fnmadd.s f15, f29, f27, f14, rtz # perform operation
fnmadd.s f15, f29, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f27, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x8ca99e76 # load x3 with value 0x8ca99e76
sw x3, 0(x2) # store 0x8ca99e76 in memory
flw f26, 0(x2) # load 0x8ca99e76 from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fnmadd.s f28, f20, f26, f19, dyn # perform operation
fnmadd.s f28, f20, f26, f19, rdn # perform operation
fnmadd.s f28, f20, f26, f19, rmm # perform operation
fnmadd.s f28, f20, f26, f19, rne # perform operation
fnmadd.s f28, f20, f26, f19, rtz # perform operation
fnmadd.s f28, f20, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x74e04ef4 # load x3 with value 0x74e04ef4
sw x3, 0(x2) # store 0x74e04ef4 in memory
flw f6, 0(x2) # load 0x74e04ef4 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmadd.s f8, f22, f6, f13, dyn # perform operation
fnmadd.s f8, f22, f6, f13, rdn # perform operation
fnmadd.s f8, f22, f6, f13, rmm # perform operation
fnmadd.s f8, f22, f6, f13, rne # perform operation
fnmadd.s f8, f22, f6, f13, rtz # perform operation
fnmadd.s f8, f22, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f6, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xe2be5a29 # load x3 with value 0xe2be5a29
sw x3, 0(x2) # store 0xe2be5a29 in memory
flw f18, 0(x2) # load 0xe2be5a29 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fnmadd.s f27, f14, f18, f13, dyn # perform operation
fnmadd.s f27, f14, f18, f13, rdn # perform operation
fnmadd.s f27, f14, f18, f13, rmm # perform operation
fnmadd.s f27, f14, f18, f13, rne # perform operation
fnmadd.s f27, f14, f18, f13, rtz # perform operation
fnmadd.s f27, f14, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f14, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f14, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f14, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f14, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f14, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0xefdebebd # load x3 with value 0xefdebebd
sw x3, 0(x2) # store 0xefdebebd in memory
flw f29, 0(x2) # load 0xefdebebd from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fnmadd.s f31, f23, f29, f7, dyn # perform operation
fnmadd.s f31, f23, f29, f7, rdn # perform operation
fnmadd.s f31, f23, f29, f7, rmm # perform operation
fnmadd.s f31, f23, f29, f7, rne # perform operation
fnmadd.s f31, f23, f29, f7, rtz # perform operation
fnmadd.s f31, f23, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f23, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f23, f29, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x97d118bf # load x3 with value 0x97d118bf
sw x3, 0(x2) # store 0x97d118bf in memory
flw f22, 0(x2) # load 0x97d118bf from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fnmadd.s f6, f12, f22, f10, dyn # perform operation
fnmadd.s f6, f12, f22, f10, rdn # perform operation
fnmadd.s f6, f12, f22, f10, rmm # perform operation
fnmadd.s f6, f12, f22, f10, rne # perform operation
fnmadd.s f6, f12, f22, f10, rtz # perform operation
fnmadd.s f6, f12, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f12, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f12, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f12, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f12, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f12, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xf61a1c3b # load x3 with value 0xf61a1c3b
sw x3, 0(x2) # store 0xf61a1c3b in memory
flw f20, 0(x2) # load 0xf61a1c3b from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmadd.s f5, f28, f20, f16, dyn # perform operation
fnmadd.s f5, f28, f20, f16, rdn # perform operation
fnmadd.s f5, f28, f20, f16, rmm # perform operation
fnmadd.s f5, f28, f20, f16, rne # perform operation
fnmadd.s f5, f28, f20, f16, rtz # perform operation
fnmadd.s f5, f28, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f28, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f28, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x4d331b55 # load x3 with value 0x4d331b55
sw x3, 0(x2) # store 0x4d331b55 in memory
flw f6, 0(x2) # load 0x4d331b55 from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fnmadd.s f27, f19, f6, f10, dyn # perform operation
fnmadd.s f27, f19, f6, f10, rdn # perform operation
fnmadd.s f27, f19, f6, f10, rmm # perform operation
fnmadd.s f27, f19, f6, f10, rne # perform operation
fnmadd.s f27, f19, f6, f10, rtz # perform operation
fnmadd.s f27, f19, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x9d850530 # load x3 with value 0x9d850530
sw x3, 0(x2) # store 0x9d850530 in memory
flw f14, 0(x2) # load 0x9d850530 from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fnmadd.s f13, f3, f14, f15, dyn # perform operation
fnmadd.s f13, f3, f14, f15, rdn # perform operation
fnmadd.s f13, f3, f14, f15, rmm # perform operation
fnmadd.s f13, f3, f14, f15, rne # perform operation
fnmadd.s f13, f3, f14, f15, rtz # perform operation
fnmadd.s f13, f3, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f3, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f3, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x8e744573 # load x3 with value 0x8e744573
sw x3, 0(x2) # store 0x8e744573 in memory
flw f20, 0(x2) # load 0x8e744573 from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fnmadd.s f26, f22, f20, f15, dyn # perform operation
fnmadd.s f26, f22, f20, f15, rdn # perform operation
fnmadd.s f26, f22, f20, f15, rmm # perform operation
fnmadd.s f26, f22, f20, f15, rne # perform operation
fnmadd.s f26, f22, f20, f15, rtz # perform operation
fnmadd.s f26, f22, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f22, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f22, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x0f868edf # load x3 with value 0x0f868edf
sw x3, 0(x2) # store 0x0f868edf in memory
flw f13, 0(x2) # load 0x0f868edf from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
fnmadd.s f11, f10, f13, f27, dyn # perform operation
fnmadd.s f11, f10, f13, f27, rdn # perform operation
fnmadd.s f11, f10, f13, f27, rmm # perform operation
fnmadd.s f11, f10, f13, f27, rne # perform operation
fnmadd.s f11, f10, f13, f27, rtz # perform operation
fnmadd.s f11, f10, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f10, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f10, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f10, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f10, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f10, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xdefe64b8 # load x3 with value 0xdefe64b8
sw x3, 0(x2) # store 0xdefe64b8 in memory
flw f2, 0(x2) # load 0xdefe64b8 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fnmadd.s f12, f14, f2, f21, dyn # perform operation
fnmadd.s f12, f14, f2, f21, rdn # perform operation
fnmadd.s f12, f14, f2, f21, rmm # perform operation
fnmadd.s f12, f14, f2, f21, rne # perform operation
fnmadd.s f12, f14, f2, f21, rtz # perform operation
fnmadd.s f12, f14, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f14, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x5d69b19a # load x3 with value 0x5d69b19a
sw x3, 0(x2) # store 0x5d69b19a in memory
flw f13, 0(x2) # load 0x5d69b19a from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmadd.s f11, f3, f13, f15, dyn # perform operation
fnmadd.s f11, f3, f13, f15, rdn # perform operation
fnmadd.s f11, f3, f13, f15, rmm # perform operation
fnmadd.s f11, f3, f13, f15, rne # perform operation
fnmadd.s f11, f3, f13, f15, rtz # perform operation
fnmadd.s f11, f3, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f3, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f3, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f3, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f3, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f3, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xc84a0c0d # load x3 with value 0xc84a0c0d
sw x3, 0(x2) # store 0xc84a0c0d in memory
flw f19, 0(x2) # load 0xc84a0c0d from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f10, f16, f19, f8, dyn # perform operation
fnmadd.s f10, f16, f19, f8, rdn # perform operation
fnmadd.s f10, f16, f19, f8, rmm # perform operation
fnmadd.s f10, f16, f19, f8, rne # perform operation
fnmadd.s f10, f16, f19, f8, rtz # perform operation
fnmadd.s f10, f16, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f16, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f16, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x37ffea2f # load x3 with value 0x37ffea2f
sw x3, 0(x2) # store 0x37ffea2f in memory
flw f21, 0(x2) # load 0x37ffea2f from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmadd.s f6, f17, f21, f19, dyn # perform operation
fnmadd.s f6, f17, f21, f19, rdn # perform operation
fnmadd.s f6, f17, f21, f19, rmm # perform operation
fnmadd.s f6, f17, f21, f19, rne # perform operation
fnmadd.s f6, f17, f21, f19, rtz # perform operation
fnmadd.s f6, f17, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
la x2, scratch
li x3, 0x81334040 # load x3 with value 0x81334040
sw x3, 0(x2) # store 0x81334040 in memory
flw f3, 0(x2) # load 0x81334040 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fnmadd.s f7, f2, f3, f5, dyn # perform operation
fnmadd.s f7, f2, f3, f5, rdn # perform operation
fnmadd.s f7, f2, f3, f5, rmm # perform operation
fnmadd.s f7, f2, f3, f5, rne # perform operation
fnmadd.s f7, f2, f3, f5, rtz # perform operation
fnmadd.s f7, f2, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f2, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f2, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0xc5325abb # load x3 with value 0xc5325abb
sw x3, 0(x2) # store 0xc5325abb in memory
flw f3, 0(x2) # load 0xc5325abb from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fnmadd.s f23, f16, f3, f28, dyn # perform operation
fnmadd.s f23, f16, f3, f28, rdn # perform operation
fnmadd.s f23, f16, f3, f28, rmm # perform operation
fnmadd.s f23, f16, f3, f28, rne # perform operation
fnmadd.s f23, f16, f3, f28, rtz # perform operation
fnmadd.s f23, f16, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f3, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xae4dd409 # load x3 with value 0xae4dd409
sw x3, 0(x2) # store 0xae4dd409 in memory
flw f21, 0(x2) # load 0xae4dd409 from memory into f21
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fnmadd.s f11, f24, f21, f27, dyn # perform operation
fnmadd.s f11, f24, f21, f27, rdn # perform operation
fnmadd.s f11, f24, f21, f27, rmm # perform operation
fnmadd.s f11, f24, f21, f27, rne # perform operation
fnmadd.s f11, f24, f21, f27, rtz # perform operation
fnmadd.s f11, f24, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f24, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f24, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x66365d1f # load x3 with value 0x66365d1f
sw x3, 0(x2) # store 0x66365d1f in memory
flw f1, 0(x2) # load 0x66365d1f from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fnmadd.s f14, f13, f1, f22, dyn # perform operation
fnmadd.s f14, f13, f1, f22, rdn # perform operation
fnmadd.s f14, f13, f1, f22, rmm # perform operation
fnmadd.s f14, f13, f1, f22, rne # perform operation
fnmadd.s f14, f13, f1, f22, rtz # perform operation
fnmadd.s f14, f13, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f13, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0xc8915d51 # load x3 with value 0xc8915d51
sw x3, 0(x2) # store 0xc8915d51 in memory
flw f8, 0(x2) # load 0xc8915d51 from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f16, f14, f8, f15, dyn # perform operation
fnmadd.s f16, f14, f8, f15, rdn # perform operation
fnmadd.s f16, f14, f8, f15, rmm # perform operation
fnmadd.s f16, f14, f8, f15, rne # perform operation
fnmadd.s f16, f14, f8, f15, rtz # perform operation
fnmadd.s f16, f14, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f14, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f14, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f14, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f14, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f14, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x2dbf8a16 # load x3 with value 0x2dbf8a16
sw x3, 0(x2) # store 0x2dbf8a16 in memory
flw f5, 0(x2) # load 0x2dbf8a16 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fnmadd.s f16, f1, f5, f18, dyn # perform operation
fnmadd.s f16, f1, f5, f18, rdn # perform operation
fnmadd.s f16, f1, f5, f18, rmm # perform operation
fnmadd.s f16, f1, f5, f18, rne # perform operation
fnmadd.s f16, f1, f5, f18, rtz # perform operation
fnmadd.s f16, f1, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f5, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x65806959 # load x3 with value 0x65806959
sw x3, 0(x2) # store 0x65806959 in memory
flw f2, 0(x2) # load 0x65806959 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fnmadd.s f24, f21, f2, f13, dyn # perform operation
fnmadd.s f24, f21, f2, f13, rdn # perform operation
fnmadd.s f24, f21, f2, f13, rmm # perform operation
fnmadd.s f24, f21, f2, f13, rne # perform operation
fnmadd.s f24, f21, f2, f13, rtz # perform operation
fnmadd.s f24, f21, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f21, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f21, f2, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x55209fc9 # load x3 with value 0x55209fc9
sw x3, 0(x2) # store 0x55209fc9 in memory
flw f13, 0(x2) # load 0x55209fc9 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fnmadd.s f18, f19, f13, f1, dyn # perform operation
fnmadd.s f18, f19, f13, f1, rdn # perform operation
fnmadd.s f18, f19, f13, f1, rmm # perform operation
fnmadd.s f18, f19, f13, f1, rne # perform operation
fnmadd.s f18, f19, f13, f1, rtz # perform operation
fnmadd.s f18, f19, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f19, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xb6942544 # load x3 with value 0xb6942544
sw x3, 0(x2) # store 0xb6942544 in memory
flw f11, 0(x2) # load 0xb6942544 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fnmadd.s f9, f25, f11, f20, dyn # perform operation
fnmadd.s f9, f25, f11, f20, rdn # perform operation
fnmadd.s f9, f25, f11, f20, rmm # perform operation
fnmadd.s f9, f25, f11, f20, rne # perform operation
fnmadd.s f9, f25, f11, f20, rtz # perform operation
fnmadd.s f9, f25, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f11, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x76762fbf # load x3 with value 0x76762fbf
sw x3, 0(x2) # store 0x76762fbf in memory
flw f16, 0(x2) # load 0x76762fbf from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmadd.s f3, f21, f16, f12, dyn # perform operation
fnmadd.s f3, f21, f16, f12, rdn # perform operation
fnmadd.s f3, f21, f16, f12, rmm # perform operation
fnmadd.s f3, f21, f16, f12, rne # perform operation
fnmadd.s f3, f21, f16, f12, rtz # perform operation
fnmadd.s f3, f21, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f21, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f21, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x4085940f # load x3 with value 0x4085940f
sw x3, 0(x2) # store 0x4085940f in memory
flw f17, 0(x2) # load 0x4085940f from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fnmadd.s f26, f9, f17, f21, dyn # perform operation
fnmadd.s f26, f9, f17, f21, rdn # perform operation
fnmadd.s f26, f9, f17, f21, rmm # perform operation
fnmadd.s f26, f9, f17, f21, rne # perform operation
fnmadd.s f26, f9, f17, f21, rtz # perform operation
fnmadd.s f26, f9, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0xd98716b6 # load x3 with value 0xd98716b6
sw x3, 0(x2) # store 0xd98716b6 in memory
flw f17, 0(x2) # load 0xd98716b6 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fnmadd.s f5, f18, f17, f21, dyn # perform operation
fnmadd.s f5, f18, f17, f21, rdn # perform operation
fnmadd.s f5, f18, f17, f21, rmm # perform operation
fnmadd.s f5, f18, f17, f21, rne # perform operation
fnmadd.s f5, f18, f17, f21, rtz # perform operation
fnmadd.s f5, f18, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f18, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0xdf806e3a # load x3 with value 0xdf806e3a
sw x3, 0(x2) # store 0xdf806e3a in memory
flw f7, 0(x2) # load 0xdf806e3a from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fnmadd.s f13, f15, f7, f17, dyn # perform operation
fnmadd.s f13, f15, f7, f17, rdn # perform operation
fnmadd.s f13, f15, f7, f17, rmm # perform operation
fnmadd.s f13, f15, f7, f17, rne # perform operation
fnmadd.s f13, f15, f7, f17, rtz # perform operation
fnmadd.s f13, f15, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f15, f7, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xf399a9b6 # load x3 with value 0xf399a9b6
sw x3, 0(x2) # store 0xf399a9b6 in memory
flw f16, 0(x2) # load 0xf399a9b6 from memory into f16
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmadd.s f27, f19, f16, f21, dyn # perform operation
fnmadd.s f27, f19, f16, f21, rdn # perform operation
fnmadd.s f27, f19, f16, f21, rmm # perform operation
fnmadd.s f27, f19, f16, f21, rne # perform operation
fnmadd.s f27, f19, f16, f21, rtz # perform operation
fnmadd.s f27, f19, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f19, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f19, f16, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xa30554a1 # load x3 with value 0xa30554a1
sw x3, 0(x2) # store 0xa30554a1 in memory
flw f28, 0(x2) # load 0xa30554a1 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fnmadd.s f27, f26, f28, f25, dyn # perform operation
fnmadd.s f27, f26, f28, f25, rdn # perform operation
fnmadd.s f27, f26, f28, f25, rmm # perform operation
fnmadd.s f27, f26, f28, f25, rne # perform operation
fnmadd.s f27, f26, f28, f25, rtz # perform operation
fnmadd.s f27, f26, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f26, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f26, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x5bae48d9 # load x3 with value 0x5bae48d9
sw x3, 0(x2) # store 0x5bae48d9 in memory
flw f24, 0(x2) # load 0x5bae48d9 from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fnmadd.s f31, f1, f24, f6, dyn # perform operation
fnmadd.s f31, f1, f24, f6, rdn # perform operation
fnmadd.s f31, f1, f24, f6, rmm # perform operation
fnmadd.s f31, f1, f24, f6, rne # perform operation
fnmadd.s f31, f1, f24, f6, rtz # perform operation
fnmadd.s f31, f1, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f1, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f1, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x5337e861 # load x3 with value 0x5337e861
sw x3, 0(x2) # store 0x5337e861 in memory
flw f9, 0(x2) # load 0x5337e861 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fnmadd.s f2, f28, f9, f26, dyn # perform operation
fnmadd.s f2, f28, f9, f26, rdn # perform operation
fnmadd.s f2, f28, f9, f26, rmm # perform operation
fnmadd.s f2, f28, f9, f26, rne # perform operation
fnmadd.s f2, f28, f9, f26, rtz # perform operation
fnmadd.s f2, f28, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f9, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xf5c4c375 # load x3 with value 0xf5c4c375
sw x3, 0(x2) # store 0xf5c4c375 in memory
flw f19, 0(x2) # load 0xf5c4c375 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fnmadd.s f6, f17, f19, f26, dyn # perform operation
fnmadd.s f6, f17, f19, f26, rdn # perform operation
fnmadd.s f6, f17, f19, f26, rmm # perform operation
fnmadd.s f6, f17, f19, f26, rne # perform operation
fnmadd.s f6, f17, f19, f26, rtz # perform operation
fnmadd.s f6, f17, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f17, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f17, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f17, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f17, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f17, f19, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x155c7b37 # load x3 with value 0x155c7b37
sw x3, 0(x2) # store 0x155c7b37 in memory
flw f14, 0(x2) # load 0x155c7b37 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f29, f8, f14, f24, dyn # perform operation
fnmadd.s f29, f8, f14, f24, rdn # perform operation
fnmadd.s f29, f8, f14, f24, rmm # perform operation
fnmadd.s f29, f8, f14, f24, rne # perform operation
fnmadd.s f29, f8, f14, f24, rtz # perform operation
fnmadd.s f29, f8, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f8, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f8, f14, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xcf418846 # load x3 with value 0xcf418846
sw x3, 0(x2) # store 0xcf418846 in memory
flw f20, 0(x2) # load 0xcf418846 from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fnmadd.s f23, f13, f20, f11, dyn # perform operation
fnmadd.s f23, f13, f20, f11, rdn # perform operation
fnmadd.s f23, f13, f20, f11, rmm # perform operation
fnmadd.s f23, f13, f20, f11, rne # perform operation
fnmadd.s f23, f13, f20, f11, rtz # perform operation
fnmadd.s f23, f13, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xc6f399d4 # load x3 with value 0xc6f399d4
sw x3, 0(x2) # store 0xc6f399d4 in memory
flw f27, 0(x2) # load 0xc6f399d4 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fnmadd.s f11, f18, f27, f2, dyn # perform operation
fnmadd.s f11, f18, f27, f2, rdn # perform operation
fnmadd.s f11, f18, f27, f2, rmm # perform operation
fnmadd.s f11, f18, f27, f2, rne # perform operation
fnmadd.s f11, f18, f27, f2, rtz # perform operation
fnmadd.s f11, f18, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x7cf13a92 # load x3 with value 0x7cf13a92
sw x3, 0(x2) # store 0x7cf13a92 in memory
flw f28, 0(x2) # load 0x7cf13a92 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fnmadd.s f17, f25, f28, f8, dyn # perform operation
fnmadd.s f17, f25, f28, f8, rdn # perform operation
fnmadd.s f17, f25, f28, f8, rmm # perform operation
fnmadd.s f17, f25, f28, f8, rne # perform operation
fnmadd.s f17, f25, f28, f8, rtz # perform operation
fnmadd.s f17, f25, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x69fa6ede # load x3 with value 0x69fa6ede
sw x3, 0(x2) # store 0x69fa6ede in memory
flw f20, 0(x2) # load 0x69fa6ede from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
fnmadd.s f19, f15, f20, f9, dyn # perform operation
fnmadd.s f19, f15, f20, f9, rdn # perform operation
fnmadd.s f19, f15, f20, f9, rmm # perform operation
fnmadd.s f19, f15, f20, f9, rne # perform operation
fnmadd.s f19, f15, f20, f9, rtz # perform operation
fnmadd.s f19, f15, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f15, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f15, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
la x2, scratch
li x3, 0x13cd2fdb # load x3 with value 0x13cd2fdb
sw x3, 0(x2) # store 0x13cd2fdb in memory
flw f2, 0(x2) # load 0x13cd2fdb from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fnmadd.s f30, f20, f2, f31, dyn # perform operation
fnmadd.s f30, f20, f2, f31, rdn # perform operation
fnmadd.s f30, f20, f2, f31, rmm # perform operation
fnmadd.s f30, f20, f2, f31, rne # perform operation
fnmadd.s f30, f20, f2, f31, rtz # perform operation
fnmadd.s f30, f20, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f20, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f20, f2, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x9b6a7dec # load x3 with value 0x9b6a7dec
sw x3, 0(x2) # store 0x9b6a7dec in memory
flw f29, 0(x2) # load 0x9b6a7dec from memory into f29
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fnmadd.s f20, f23, f29, f1, dyn # perform operation
fnmadd.s f20, f23, f29, f1, rdn # perform operation
fnmadd.s f20, f23, f29, f1, rmm # perform operation
fnmadd.s f20, f23, f29, f1, rne # perform operation
fnmadd.s f20, f23, f29, f1, rtz # perform operation
fnmadd.s f20, f23, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x810193b0 # load x3 with value 0x810193b0
sw x3, 0(x2) # store 0x810193b0 in memory
flw f7, 0(x2) # load 0x810193b0 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fnmadd.s f1, f27, f7, f15, dyn # perform operation
fnmadd.s f1, f27, f7, f15, rdn # perform operation
fnmadd.s f1, f27, f7, f15, rmm # perform operation
fnmadd.s f1, f27, f7, f15, rne # perform operation
fnmadd.s f1, f27, f7, f15, rtz # perform operation
fnmadd.s f1, f27, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f27, f7, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x8c7317c3 # load x3 with value 0x8c7317c3
sw x3, 0(x2) # store 0x8c7317c3 in memory
flw f25, 0(x2) # load 0x8c7317c3 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fnmadd.s f16, f31, f25, f23, dyn # perform operation
fnmadd.s f16, f31, f25, f23, rdn # perform operation
fnmadd.s f16, f31, f25, f23, rmm # perform operation
fnmadd.s f16, f31, f25, f23, rne # perform operation
fnmadd.s f16, f31, f25, f23, rtz # perform operation
fnmadd.s f16, f31, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f31, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f31, f25, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xa22d22ae # load x3 with value 0xa22d22ae
sw x3, 0(x2) # store 0xa22d22ae in memory
flw f15, 0(x2) # load 0xa22d22ae from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fnmadd.s f23, f13, f15, f19, dyn # perform operation
fnmadd.s f23, f13, f15, f19, rdn # perform operation
fnmadd.s f23, f13, f15, f19, rmm # perform operation
fnmadd.s f23, f13, f15, f19, rne # perform operation
fnmadd.s f23, f13, f15, f19, rtz # perform operation
fnmadd.s f23, f13, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f13, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f13, f15, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xcd31b7d7 # load x3 with value 0xcd31b7d7
sw x3, 0(x2) # store 0xcd31b7d7 in memory
flw f27, 0(x2) # load 0xcd31b7d7 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmadd.s f22, f11, f27, f20, dyn # perform operation
fnmadd.s f22, f11, f27, f20, rdn # perform operation
fnmadd.s f22, f11, f27, f20, rmm # perform operation
fnmadd.s f22, f11, f27, f20, rne # perform operation
fnmadd.s f22, f11, f27, f20, rtz # perform operation
fnmadd.s f22, f11, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f11, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f11, f27, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xffff8bb9 # load x3 with value 0xffff8bb9
sw x3, 0(x2) # store 0xffff8bb9 in memory
flw f15, 0(x2) # load 0xffff8bb9 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmadd.s f26, f6, f15, f22, dyn # perform operation
fnmadd.s f26, f6, f15, f22, rdn # perform operation
fnmadd.s f26, f6, f15, f22, rmm # perform operation
fnmadd.s f26, f6, f15, f22, rne # perform operation
fnmadd.s f26, f6, f15, f22, rtz # perform operation
fnmadd.s f26, f6, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f6, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f6, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xe80c425d # load x3 with value 0xe80c425d
sw x3, 0(x2) # store 0xe80c425d in memory
flw f7, 0(x2) # load 0xe80c425d from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fnmadd.s f8, f10, f7, f3, dyn # perform operation
fnmadd.s f8, f10, f7, f3, rdn # perform operation
fnmadd.s f8, f10, f7, f3, rmm # perform operation
fnmadd.s f8, f10, f7, f3, rne # perform operation
fnmadd.s f8, f10, f7, f3, rtz # perform operation
fnmadd.s f8, f10, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xc677258d # load x3 with value 0xc677258d
sw x3, 0(x2) # store 0xc677258d in memory
flw f3, 0(x2) # load 0xc677258d from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fnmadd.s f10, f14, f3, f16, dyn # perform operation
fnmadd.s f10, f14, f3, f16, rdn # perform operation
fnmadd.s f10, f14, f3, f16, rmm # perform operation
fnmadd.s f10, f14, f3, f16, rne # perform operation
fnmadd.s f10, f14, f3, f16, rtz # perform operation
fnmadd.s f10, f14, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x3af478fc # load x3 with value 0x3af478fc
sw x3, 0(x2) # store 0x3af478fc in memory
flw f20, 0(x2) # load 0x3af478fc from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fnmadd.s f6, f27, f20, f13, dyn # perform operation
fnmadd.s f6, f27, f20, f13, rdn # perform operation
fnmadd.s f6, f27, f20, f13, rmm # perform operation
fnmadd.s f6, f27, f20, f13, rne # perform operation
fnmadd.s f6, f27, f20, f13, rtz # perform operation
fnmadd.s f6, f27, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f27, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f27, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xfba8d49e # load x3 with value 0xfba8d49e
sw x3, 0(x2) # store 0xfba8d49e in memory
flw f11, 0(x2) # load 0xfba8d49e from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fnmadd.s f29, f12, f11, f22, dyn # perform operation
fnmadd.s f29, f12, f11, f22, rdn # perform operation
fnmadd.s f29, f12, f11, f22, rmm # perform operation
fnmadd.s f29, f12, f11, f22, rne # perform operation
fnmadd.s f29, f12, f11, f22, rtz # perform operation
fnmadd.s f29, f12, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f11, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xb27ba82e # load x3 with value 0xb27ba82e
sw x3, 0(x2) # store 0xb27ba82e in memory
flw f3, 0(x2) # load 0xb27ba82e from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fnmadd.s f13, f26, f3, f10, dyn # perform operation
fnmadd.s f13, f26, f3, f10, rdn # perform operation
fnmadd.s f13, f26, f3, f10, rmm # perform operation
fnmadd.s f13, f26, f3, f10, rne # perform operation
fnmadd.s f13, f26, f3, f10, rtz # perform operation
fnmadd.s f13, f26, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f26, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f26, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x9f9ab922 # load x3 with value 0x9f9ab922
sw x3, 0(x2) # store 0x9f9ab922 in memory
flw f8, 0(x2) # load 0x9f9ab922 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fnmadd.s f3, f5, f8, f18, dyn # perform operation
fnmadd.s f3, f5, f8, f18, rdn # perform operation
fnmadd.s f3, f5, f8, f18, rmm # perform operation
fnmadd.s f3, f5, f8, f18, rne # perform operation
fnmadd.s f3, f5, f8, f18, rtz # perform operation
fnmadd.s f3, f5, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f5, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x360d008c # load x3 with value 0x360d008c
sw x3, 0(x2) # store 0x360d008c in memory
flw f2, 0(x2) # load 0x360d008c from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fnmadd.s f26, f17, f2, f16, dyn # perform operation
fnmadd.s f26, f17, f2, f16, rdn # perform operation
fnmadd.s f26, f17, f2, f16, rmm # perform operation
fnmadd.s f26, f17, f2, f16, rne # perform operation
fnmadd.s f26, f17, f2, f16, rtz # perform operation
fnmadd.s f26, f17, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f17, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f17, f2, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
la x2, scratch
li x3, 0xa6eb717e # load x3 with value 0xa6eb717e
sw x3, 0(x2) # store 0xa6eb717e in memory
flw f26, 0(x2) # load 0xa6eb717e from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fnmadd.s f22, f11, f26, f3, dyn # perform operation
fnmadd.s f22, f11, f26, f3, rdn # perform operation
fnmadd.s f22, f11, f26, f3, rmm # perform operation
fnmadd.s f22, f11, f26, f3, rne # perform operation
fnmadd.s f22, f11, f26, f3, rtz # perform operation
fnmadd.s f22, f11, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f11, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f11, f26, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xf6a5930d # load x3 with value 0xf6a5930d
sw x3, 0(x2) # store 0xf6a5930d in memory
flw f21, 0(x2) # load 0xf6a5930d from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fnmadd.s f10, f22, f21, f5, dyn # perform operation
fnmadd.s f10, f22, f21, f5, rdn # perform operation
fnmadd.s f10, f22, f21, f5, rmm # perform operation
fnmadd.s f10, f22, f21, f5, rne # perform operation
fnmadd.s f10, f22, f21, f5, rtz # perform operation
fnmadd.s f10, f22, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xe0e684a0 # load x3 with value 0xe0e684a0
sw x3, 0(x2) # store 0xe0e684a0 in memory
flw f13, 0(x2) # load 0xe0e684a0 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fnmadd.s f8, f22, f13, f7, dyn # perform operation
fnmadd.s f8, f22, f13, f7, rdn # perform operation
fnmadd.s f8, f22, f13, f7, rmm # perform operation
fnmadd.s f8, f22, f13, f7, rne # perform operation
fnmadd.s f8, f22, f13, f7, rtz # perform operation
fnmadd.s f8, f22, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f22, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f22, f13, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xc980e2f0 # load x3 with value 0xc980e2f0
sw x3, 0(x2) # store 0xc980e2f0 in memory
flw f30, 0(x2) # load 0xc980e2f0 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fnmadd.s f25, f26, f30, f13, dyn # perform operation
fnmadd.s f25, f26, f30, f13, rdn # perform operation
fnmadd.s f25, f26, f30, f13, rmm # perform operation
fnmadd.s f25, f26, f30, f13, rne # perform operation
fnmadd.s f25, f26, f30, f13, rtz # perform operation
fnmadd.s f25, f26, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f26, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x5d088436 # load x3 with value 0x5d088436
sw x3, 0(x2) # store 0x5d088436 in memory
flw f12, 0(x2) # load 0x5d088436 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fnmadd.s f20, f29, f12, f21, dyn # perform operation
fnmadd.s f20, f29, f12, f21, rdn # perform operation
fnmadd.s f20, f29, f12, f21, rmm # perform operation
fnmadd.s f20, f29, f12, f21, rne # perform operation
fnmadd.s f20, f29, f12, f21, rtz # perform operation
fnmadd.s f20, f29, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f12, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x428b982f # load x3 with value 0x428b982f
sw x3, 0(x2) # store 0x428b982f in memory
flw f18, 0(x2) # load 0x428b982f from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fnmadd.s f10, f1, f18, f2, dyn # perform operation
fnmadd.s f10, f1, f18, f2, rdn # perform operation
fnmadd.s f10, f1, f18, f2, rmm # perform operation
fnmadd.s f10, f1, f18, f2, rne # perform operation
fnmadd.s f10, f1, f18, f2, rtz # perform operation
fnmadd.s f10, f1, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f1, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f1, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f1, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f1, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f1, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xd093406b # load x3 with value 0xd093406b
sw x3, 0(x2) # store 0xd093406b in memory
flw f28, 0(x2) # load 0xd093406b from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
fnmadd.s f19, f14, f28, f26, dyn # perform operation
fnmadd.s f19, f14, f28, f26, rdn # perform operation
fnmadd.s f19, f14, f28, f26, rmm # perform operation
fnmadd.s f19, f14, f28, f26, rne # perform operation
fnmadd.s f19, f14, f28, f26, rtz # perform operation
fnmadd.s f19, f14, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f14, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xc9351b35 # load x3 with value 0xc9351b35
sw x3, 0(x2) # store 0xc9351b35 in memory
flw f1, 0(x2) # load 0xc9351b35 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
fnmadd.s f28, f31, f1, f22, dyn # perform operation
fnmadd.s f28, f31, f1, f22, rdn # perform operation
fnmadd.s f28, f31, f1, f22, rmm # perform operation
fnmadd.s f28, f31, f1, f22, rne # perform operation
fnmadd.s f28, f31, f1, f22, rtz # perform operation
fnmadd.s f28, f31, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f31, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0xe78b706a # load x3 with value 0xe78b706a
sw x3, 0(x2) # store 0xe78b706a in memory
flw f20, 0(x2) # load 0xe78b706a from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fnmadd.s f13, f31, f20, f16, dyn # perform operation
fnmadd.s f13, f31, f20, f16, rdn # perform operation
fnmadd.s f13, f31, f20, f16, rmm # perform operation
fnmadd.s f13, f31, f20, f16, rne # perform operation
fnmadd.s f13, f31, f20, f16, rtz # perform operation
fnmadd.s f13, f31, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f31, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x05b05919 # load x3 with value 0x05b05919
sw x3, 0(x2) # store 0x05b05919 in memory
flw f19, 0(x2) # load 0x05b05919 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fnmadd.s f18, f2, f19, f24, dyn # perform operation
fnmadd.s f18, f2, f19, f24, rdn # perform operation
fnmadd.s f18, f2, f19, f24, rmm # perform operation
fnmadd.s f18, f2, f19, f24, rne # perform operation
fnmadd.s f18, f2, f19, f24, rtz # perform operation
fnmadd.s f18, f2, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f2, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f2, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f2, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f2, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f2, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0xf2f2765e # load x3 with value 0xf2f2765e
sw x3, 0(x2) # store 0xf2f2765e in memory
flw f23, 0(x2) # load 0xf2f2765e from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fnmadd.s f22, f24, f23, f19, dyn # perform operation
fnmadd.s f22, f24, f23, f19, rdn # perform operation
fnmadd.s f22, f24, f23, f19, rmm # perform operation
fnmadd.s f22, f24, f23, f19, rne # perform operation
fnmadd.s f22, f24, f23, f19, rtz # perform operation
fnmadd.s f22, f24, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f24, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f24, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f24, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f24, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f24, f23, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0xcedda05b # load x3 with value 0xcedda05b
sw x3, 0(x2) # store 0xcedda05b in memory
flw f6, 0(x2) # load 0xcedda05b from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmadd.s f26, f13, f6, f29, dyn # perform operation
fnmadd.s f26, f13, f6, f29, rdn # perform operation
fnmadd.s f26, f13, f6, f29, rmm # perform operation
fnmadd.s f26, f13, f6, f29, rne # perform operation
fnmadd.s f26, f13, f6, f29, rtz # perform operation
fnmadd.s f26, f13, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f13, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f13, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f13, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f13, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f13, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x1288f2e0 # load x3 with value 0x1288f2e0
sw x3, 0(x2) # store 0x1288f2e0 in memory
flw f8, 0(x2) # load 0x1288f2e0 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fnmadd.s f20, f23, f8, f2, dyn # perform operation
fnmadd.s f20, f23, f8, f2, rdn # perform operation
fnmadd.s f20, f23, f8, f2, rmm # perform operation
fnmadd.s f20, f23, f8, f2, rne # perform operation
fnmadd.s f20, f23, f8, f2, rtz # perform operation
fnmadd.s f20, f23, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x390fc678 # load x3 with value 0x390fc678
sw x3, 0(x2) # store 0x390fc678 in memory
flw f19, 0(x2) # load 0x390fc678 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fnmadd.s f25, f2, f19, f27, dyn # perform operation
fnmadd.s f25, f2, f19, f27, rdn # perform operation
fnmadd.s f25, f2, f19, f27, rmm # perform operation
fnmadd.s f25, f2, f19, f27, rne # perform operation
fnmadd.s f25, f2, f19, f27, rtz # perform operation
fnmadd.s f25, f2, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f2, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f2, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0xc221ce01 # load x3 with value 0xc221ce01
sw x3, 0(x2) # store 0xc221ce01 in memory
flw f5, 0(x2) # load 0xc221ce01 from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fnmadd.s f20, f29, f5, f19, dyn # perform operation
fnmadd.s f20, f29, f5, f19, rdn # perform operation
fnmadd.s f20, f29, f5, f19, rmm # perform operation
fnmadd.s f20, f29, f5, f19, rne # perform operation
fnmadd.s f20, f29, f5, f19, rtz # perform operation
fnmadd.s f20, f29, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f29, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f29, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x5c9b0a1f # load x3 with value 0x5c9b0a1f
sw x3, 0(x2) # store 0x5c9b0a1f in memory
flw f18, 0(x2) # load 0x5c9b0a1f from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fnmadd.s f6, f24, f18, f16, dyn # perform operation
fnmadd.s f6, f24, f18, f16, rdn # perform operation
fnmadd.s f6, f24, f18, f16, rmm # perform operation
fnmadd.s f6, f24, f18, f16, rne # perform operation
fnmadd.s f6, f24, f18, f16, rtz # perform operation
fnmadd.s f6, f24, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f24, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f24, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f24, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f24, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f24, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xf5a90059 # load x3 with value 0xf5a90059
sw x3, 0(x2) # store 0xf5a90059 in memory
flw f26, 0(x2) # load 0xf5a90059 from memory into f26
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
fnmadd.s f6, f10, f26, f17, dyn # perform operation
fnmadd.s f6, f10, f26, f17, rdn # perform operation
fnmadd.s f6, f10, f26, f17, rmm # perform operation
fnmadd.s f6, f10, f26, f17, rne # perform operation
fnmadd.s f6, f10, f26, f17, rtz # perform operation
fnmadd.s f6, f10, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f26, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
la x2, scratch
li x3, 0xfbab3f97 # load x3 with value 0xfbab3f97
sw x3, 0(x2) # store 0xfbab3f97 in memory
flw f25, 0(x2) # load 0xfbab3f97 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fnmadd.s f5, f22, f25, f10, dyn # perform operation
fnmadd.s f5, f22, f25, f10, rdn # perform operation
fnmadd.s f5, f22, f25, f10, rmm # perform operation
fnmadd.s f5, f22, f25, f10, rne # perform operation
fnmadd.s f5, f22, f25, f10, rtz # perform operation
fnmadd.s f5, f22, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f25, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x5c75c4a1 # load x3 with value 0x5c75c4a1
sw x3, 0(x2) # store 0x5c75c4a1 in memory
flw f15, 0(x2) # load 0x5c75c4a1 from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fnmadd.s f21, f17, f15, f22, dyn # perform operation
fnmadd.s f21, f17, f15, f22, rdn # perform operation
fnmadd.s f21, f17, f15, f22, rmm # perform operation
fnmadd.s f21, f17, f15, f22, rne # perform operation
fnmadd.s f21, f17, f15, f22, rtz # perform operation
fnmadd.s f21, f17, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f15, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xe7690e6e # load x3 with value 0xe7690e6e
sw x3, 0(x2) # store 0xe7690e6e in memory
flw f27, 0(x2) # load 0xe7690e6e from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fnmadd.s f16, f21, f27, f28, dyn # perform operation
fnmadd.s f16, f21, f27, f28, rdn # perform operation
fnmadd.s f16, f21, f27, f28, rmm # perform operation
fnmadd.s f16, f21, f27, f28, rne # perform operation
fnmadd.s f16, f21, f27, f28, rtz # perform operation
fnmadd.s f16, f21, f27, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f21, f27, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f21, f27, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f21, f27, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f21, f27, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f21, f27, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0xe176e1f3 # load x3 with value 0xe176e1f3
sw x3, 0(x2) # store 0xe176e1f3 in memory
flw f13, 0(x2) # load 0xe176e1f3 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
fnmadd.s f8, f7, f13, f22, dyn # perform operation
fnmadd.s f8, f7, f13, f22, rdn # perform operation
fnmadd.s f8, f7, f13, f22, rmm # perform operation
fnmadd.s f8, f7, f13, f22, rne # perform operation
fnmadd.s f8, f7, f13, f22, rtz # perform operation
fnmadd.s f8, f7, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x7c972758 # load x3 with value 0x7c972758
sw x3, 0(x2) # store 0x7c972758 in memory
flw f13, 0(x2) # load 0x7c972758 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fnmadd.s f8, f16, f13, f14, dyn # perform operation
fnmadd.s f8, f16, f13, f14, rdn # perform operation
fnmadd.s f8, f16, f13, f14, rmm # perform operation
fnmadd.s f8, f16, f13, f14, rne # perform operation
fnmadd.s f8, f16, f13, f14, rtz # perform operation
fnmadd.s f8, f16, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f16, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f16, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f16, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f16, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f16, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xc6e9667b # load x3 with value 0xc6e9667b
sw x3, 0(x2) # store 0xc6e9667b in memory
flw f22, 0(x2) # load 0xc6e9667b from memory into f22
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f29, f11, f22, f15, dyn # perform operation
fnmadd.s f29, f11, f22, f15, rdn # perform operation
fnmadd.s f29, f11, f22, f15, rmm # perform operation
fnmadd.s f29, f11, f22, f15, rne # perform operation
fnmadd.s f29, f11, f22, f15, rtz # perform operation
fnmadd.s f29, f11, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f11, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f11, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x742836d0 # load x3 with value 0x742836d0
sw x3, 0(x2) # store 0x742836d0 in memory
flw f9, 0(x2) # load 0x742836d0 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f31, f13, f9, f6, dyn # perform operation
fnmadd.s f31, f13, f9, f6, rdn # perform operation
fnmadd.s f31, f13, f9, f6, rmm # perform operation
fnmadd.s f31, f13, f9, f6, rne # perform operation
fnmadd.s f31, f13, f9, f6, rtz # perform operation
fnmadd.s f31, f13, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f13, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f13, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xae97ced4 # load x3 with value 0xae97ced4
sw x3, 0(x2) # store 0xae97ced4 in memory
flw f28, 0(x2) # load 0xae97ced4 from memory into f28
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fnmadd.s f3, f27, f28, f29, dyn # perform operation
fnmadd.s f3, f27, f28, f29, rdn # perform operation
fnmadd.s f3, f27, f28, f29, rmm # perform operation
fnmadd.s f3, f27, f28, f29, rne # perform operation
fnmadd.s f3, f27, f28, f29, rtz # perform operation
fnmadd.s f3, f27, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x646660d0 # load x3 with value 0x646660d0
sw x3, 0(x2) # store 0x646660d0 in memory
flw f20, 0(x2) # load 0x646660d0 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fnmadd.s f15, f8, f20, f22, dyn # perform operation
fnmadd.s f15, f8, f20, f22, rdn # perform operation
fnmadd.s f15, f8, f20, f22, rmm # perform operation
fnmadd.s f15, f8, f20, f22, rne # perform operation
fnmadd.s f15, f8, f20, f22, rtz # perform operation
fnmadd.s f15, f8, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f8, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f8, f20, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x4d9bc78c # load x3 with value 0x4d9bc78c
sw x3, 0(x2) # store 0x4d9bc78c in memory
flw f2, 0(x2) # load 0x4d9bc78c from memory into f2
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fnmadd.s f3, f9, f2, f12, dyn # perform operation
fnmadd.s f3, f9, f2, f12, rdn # perform operation
fnmadd.s f3, f9, f2, f12, rmm # perform operation
fnmadd.s f3, f9, f2, f12, rne # perform operation
fnmadd.s f3, f9, f2, f12, rtz # perform operation
fnmadd.s f3, f9, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f9, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f9, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0xdc610b94 # load x3 with value 0xdc610b94
sw x3, 0(x2) # store 0xdc610b94 in memory
flw f10, 0(x2) # load 0xdc610b94 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fnmadd.s f13, f18, f10, f2, dyn # perform operation
fnmadd.s f13, f18, f10, f2, rdn # perform operation
fnmadd.s f13, f18, f10, f2, rmm # perform operation
fnmadd.s f13, f18, f10, f2, rne # perform operation
fnmadd.s f13, f18, f10, f2, rtz # perform operation
fnmadd.s f13, f18, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f18, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f18, f10, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xe353c49c # load x3 with value 0xe353c49c
sw x3, 0(x2) # store 0xe353c49c in memory
flw f10, 0(x2) # load 0xe353c49c from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
fnmadd.s f24, f20, f10, f29, dyn # perform operation
fnmadd.s f24, f20, f10, f29, rdn # perform operation
fnmadd.s f24, f20, f10, f29, rmm # perform operation
fnmadd.s f24, f20, f10, f29, rne # perform operation
fnmadd.s f24, f20, f10, f29, rtz # perform operation
fnmadd.s f24, f20, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f20, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f20, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x94562ae4 # load x3 with value 0x94562ae4
sw x3, 0(x2) # store 0x94562ae4 in memory
flw f29, 0(x2) # load 0x94562ae4 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fnmadd.s f26, f9, f29, f18, dyn # perform operation
fnmadd.s f26, f9, f29, f18, rdn # perform operation
fnmadd.s f26, f9, f29, f18, rmm # perform operation
fnmadd.s f26, f9, f29, f18, rne # perform operation
fnmadd.s f26, f9, f29, f18, rtz # perform operation
fnmadd.s f26, f9, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f9, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x8bb99632 # load x3 with value 0x8bb99632
sw x3, 0(x2) # store 0x8bb99632 in memory
flw f10, 0(x2) # load 0x8bb99632 from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmadd.s f28, f20, f10, f16, dyn # perform operation
fnmadd.s f28, f20, f10, f16, rdn # perform operation
fnmadd.s f28, f20, f10, f16, rmm # perform operation
fnmadd.s f28, f20, f10, f16, rne # perform operation
fnmadd.s f28, f20, f10, f16, rtz # perform operation
fnmadd.s f28, f20, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f10, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x5720e23e # load x3 with value 0x5720e23e
sw x3, 0(x2) # store 0x5720e23e in memory
flw f25, 0(x2) # load 0x5720e23e from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmadd.s f8, f5, f25, f15, dyn # perform operation
fnmadd.s f8, f5, f25, f15, rdn # perform operation
fnmadd.s f8, f5, f25, f15, rmm # perform operation
fnmadd.s f8, f5, f25, f15, rne # perform operation
fnmadd.s f8, f5, f25, f15, rtz # perform operation
fnmadd.s f8, f5, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f5, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f5, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x928d96aa # load x3 with value 0x928d96aa
sw x3, 0(x2) # store 0x928d96aa in memory
flw f1, 0(x2) # load 0x928d96aa from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fnmadd.s f25, f9, f1, f20, dyn # perform operation
fnmadd.s f25, f9, f1, f20, rdn # perform operation
fnmadd.s f25, f9, f1, f20, rmm # perform operation
fnmadd.s f25, f9, f1, f20, rne # perform operation
fnmadd.s f25, f9, f1, f20, rtz # perform operation
fnmadd.s f25, f9, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f9, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f9, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f9, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f9, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f9, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x78109eb8 # load x3 with value 0x78109eb8
sw x3, 0(x2) # store 0x78109eb8 in memory
flw f11, 0(x2) # load 0x78109eb8 from memory into f11
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmadd.s f14, f7, f11, f29, dyn # perform operation
fnmadd.s f14, f7, f11, f29, rdn # perform operation
fnmadd.s f14, f7, f11, f29, rmm # perform operation
fnmadd.s f14, f7, f11, f29, rne # perform operation
fnmadd.s f14, f7, f11, f29, rtz # perform operation
fnmadd.s f14, f7, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f7, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x39a9e932 # load x3 with value 0x39a9e932
sw x3, 0(x2) # store 0x39a9e932 in memory
flw f1, 0(x2) # load 0x39a9e932 from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
fnmadd.s f23, f6, f1, f20, dyn # perform operation
fnmadd.s f23, f6, f1, f20, rdn # perform operation
fnmadd.s f23, f6, f1, f20, rmm # perform operation
fnmadd.s f23, f6, f1, f20, rne # perform operation
fnmadd.s f23, f6, f1, f20, rtz # perform operation
fnmadd.s f23, f6, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f6, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f6, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
la x2, scratch
li x3, 0x5147eec9 # load x3 with value 0x5147eec9
sw x3, 0(x2) # store 0x5147eec9 in memory
flw f10, 0(x2) # load 0x5147eec9 from memory into f10
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmadd.s f15, f29, f10, f30, dyn # perform operation
fnmadd.s f15, f29, f10, f30, rdn # perform operation
fnmadd.s f15, f29, f10, f30, rmm # perform operation
fnmadd.s f15, f29, f10, f30, rne # perform operation
fnmadd.s f15, f29, f10, f30, rtz # perform operation
fnmadd.s f15, f29, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f29, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f29, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x96f0fcf1 # load x3 with value 0x96f0fcf1
sw x3, 0(x2) # store 0x96f0fcf1 in memory
flw f28, 0(x2) # load 0x96f0fcf1 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fnmadd.s f26, f19, f28, f17, dyn # perform operation
fnmadd.s f26, f19, f28, f17, rdn # perform operation
fnmadd.s f26, f19, f28, f17, rmm # perform operation
fnmadd.s f26, f19, f28, f17, rne # perform operation
fnmadd.s f26, f19, f28, f17, rtz # perform operation
fnmadd.s f26, f19, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f19, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f19, f28, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x6102f7b8 # load x3 with value 0x6102f7b8
sw x3, 0(x2) # store 0x6102f7b8 in memory
flw f8, 0(x2) # load 0x6102f7b8 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f31, f15, f8, f19, dyn # perform operation
fnmadd.s f31, f15, f8, f19, rdn # perform operation
fnmadd.s f31, f15, f8, f19, rmm # perform operation
fnmadd.s f31, f15, f8, f19, rne # perform operation
fnmadd.s f31, f15, f8, f19, rtz # perform operation
fnmadd.s f31, f15, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f15, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f15, f8, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xa0ee22f7 # load x3 with value 0xa0ee22f7
sw x3, 0(x2) # store 0xa0ee22f7 in memory
flw f10, 0(x2) # load 0xa0ee22f7 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fnmadd.s f11, f14, f10, f18, dyn # perform operation
fnmadd.s f11, f14, f10, f18, rdn # perform operation
fnmadd.s f11, f14, f10, f18, rmm # perform operation
fnmadd.s f11, f14, f10, f18, rne # perform operation
fnmadd.s f11, f14, f10, f18, rtz # perform operation
fnmadd.s f11, f14, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f14, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f14, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f14, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f14, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f14, f10, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xcdca260d # load x3 with value 0xcdca260d
sw x3, 0(x2) # store 0xcdca260d in memory
flw f30, 0(x2) # load 0xcdca260d from memory into f30
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
fnmadd.s f28, f29, f30, f14, dyn # perform operation
fnmadd.s f28, f29, f30, f14, rdn # perform operation
fnmadd.s f28, f29, f30, f14, rmm # perform operation
fnmadd.s f28, f29, f30, f14, rne # perform operation
fnmadd.s f28, f29, f30, f14, rtz # perform operation
fnmadd.s f28, f29, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f29, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f29, f30, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x139f5b8a # load x3 with value 0x139f5b8a
sw x3, 0(x2) # store 0x139f5b8a in memory
flw f13, 0(x2) # load 0x139f5b8a from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fnmadd.s f29, f7, f13, f21, dyn # perform operation
fnmadd.s f29, f7, f13, f21, rdn # perform operation
fnmadd.s f29, f7, f13, f21, rmm # perform operation
fnmadd.s f29, f7, f13, f21, rne # perform operation
fnmadd.s f29, f7, f13, f21, rtz # perform operation
fnmadd.s f29, f7, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f7, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f7, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0xe9b3514c # load x3 with value 0xe9b3514c
sw x3, 0(x2) # store 0xe9b3514c in memory
flw f11, 0(x2) # load 0xe9b3514c from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmadd.s f26, f23, f11, f2, dyn # perform operation
fnmadd.s f26, f23, f11, f2, rdn # perform operation
fnmadd.s f26, f23, f11, f2, rmm # perform operation
fnmadd.s f26, f23, f11, f2, rne # perform operation
fnmadd.s f26, f23, f11, f2, rtz # perform operation
fnmadd.s f26, f23, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f23, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f23, f11, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xde375f85 # load x3 with value 0xde375f85
sw x3, 0(x2) # store 0xde375f85 in memory
flw f10, 0(x2) # load 0xde375f85 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fnmadd.s f31, f5, f10, f7, dyn # perform operation
fnmadd.s f31, f5, f10, f7, rdn # perform operation
fnmadd.s f31, f5, f10, f7, rmm # perform operation
fnmadd.s f31, f5, f10, f7, rne # perform operation
fnmadd.s f31, f5, f10, f7, rtz # perform operation
fnmadd.s f31, f5, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f5, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f5, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f5, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f5, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f5, f10, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x63a0b87d # load x3 with value 0x63a0b87d
sw x3, 0(x2) # store 0x63a0b87d in memory
flw f23, 0(x2) # load 0x63a0b87d from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fnmadd.s f30, f6, f23, f14, dyn # perform operation
fnmadd.s f30, f6, f23, f14, rdn # perform operation
fnmadd.s f30, f6, f23, f14, rmm # perform operation
fnmadd.s f30, f6, f23, f14, rne # perform operation
fnmadd.s f30, f6, f23, f14, rtz # perform operation
fnmadd.s f30, f6, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f6, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f6, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x85fff589 # load x3 with value 0x85fff589
sw x3, 0(x2) # store 0x85fff589 in memory
flw f18, 0(x2) # load 0x85fff589 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fnmadd.s f12, f16, f18, f10, dyn # perform operation
fnmadd.s f12, f16, f18, f10, rdn # perform operation
fnmadd.s f12, f16, f18, f10, rmm # perform operation
fnmadd.s f12, f16, f18, f10, rne # perform operation
fnmadd.s f12, f16, f18, f10, rtz # perform operation
fnmadd.s f12, f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f16, f18, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x98cdf9aa # load x3 with value 0x98cdf9aa
sw x3, 0(x2) # store 0x98cdf9aa in memory
flw f10, 0(x2) # load 0x98cdf9aa from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fnmadd.s f28, f22, f10, f30, dyn # perform operation
fnmadd.s f28, f22, f10, f30, rdn # perform operation
fnmadd.s f28, f22, f10, f30, rmm # perform operation
fnmadd.s f28, f22, f10, f30, rne # perform operation
fnmadd.s f28, f22, f10, f30, rtz # perform operation
fnmadd.s f28, f22, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f22, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f22, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0xcc84efc9 # load x3 with value 0xcc84efc9
sw x3, 0(x2) # store 0xcc84efc9 in memory
flw f6, 0(x2) # load 0xcc84efc9 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmadd.s f5, f17, f6, f1, dyn # perform operation
fnmadd.s f5, f17, f6, f1, rdn # perform operation
fnmadd.s f5, f17, f6, f1, rmm # perform operation
fnmadd.s f5, f17, f6, f1, rne # perform operation
fnmadd.s f5, f17, f6, f1, rtz # perform operation
fnmadd.s f5, f17, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f17, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f17, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f17, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f17, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f17, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x5da6f938 # load x3 with value 0x5da6f938
sw x3, 0(x2) # store 0x5da6f938 in memory
flw f23, 0(x2) # load 0x5da6f938 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fnmadd.s f14, f22, f23, f11, dyn # perform operation
fnmadd.s f14, f22, f23, f11, rdn # perform operation
fnmadd.s f14, f22, f23, f11, rmm # perform operation
fnmadd.s f14, f22, f23, f11, rne # perform operation
fnmadd.s f14, f22, f23, f11, rtz # perform operation
fnmadd.s f14, f22, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f22, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f22, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x3a047f63 # load x3 with value 0x3a047f63
sw x3, 0(x2) # store 0x3a047f63 in memory
flw f24, 0(x2) # load 0x3a047f63 from memory into f24
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fnmadd.s f11, f18, f24, f9, dyn # perform operation
fnmadd.s f11, f18, f24, f9, rdn # perform operation
fnmadd.s f11, f18, f24, f9, rmm # perform operation
fnmadd.s f11, f18, f24, f9, rne # perform operation
fnmadd.s f11, f18, f24, f9, rtz # perform operation
fnmadd.s f11, f18, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f18, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f18, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0x10316d7d # load x3 with value 0x10316d7d
sw x3, 0(x2) # store 0x10316d7d in memory
flw f16, 0(x2) # load 0x10316d7d from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fnmadd.s f9, f27, f16, f24, dyn # perform operation
fnmadd.s f9, f27, f16, f24, rdn # perform operation
fnmadd.s f9, f27, f16, f24, rmm # perform operation
fnmadd.s f9, f27, f16, f24, rne # perform operation
fnmadd.s f9, f27, f16, f24, rtz # perform operation
fnmadd.s f9, f27, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f27, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x1bcdf7c7 # load x3 with value 0x1bcdf7c7
sw x3, 0(x2) # store 0x1bcdf7c7 in memory
flw f29, 0(x2) # load 0x1bcdf7c7 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fnmadd.s f19, f21, f29, f9, dyn # perform operation
fnmadd.s f19, f21, f29, f9, rdn # perform operation
fnmadd.s f19, f21, f29, f9, rmm # perform operation
fnmadd.s f19, f21, f29, f9, rne # perform operation
fnmadd.s f19, f21, f29, f9, rtz # perform operation
fnmadd.s f19, f21, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f21, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f21, f29, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x8fd4a8bf # load x3 with value 0x8fd4a8bf
sw x3, 0(x2) # store 0x8fd4a8bf in memory
flw f24, 0(x2) # load 0x8fd4a8bf from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fnmadd.s f2, f9, f24, f10, dyn # perform operation
fnmadd.s f2, f9, f24, f10, rdn # perform operation
fnmadd.s f2, f9, f24, f10, rmm # perform operation
fnmadd.s f2, f9, f24, f10, rne # perform operation
fnmadd.s f2, f9, f24, f10, rtz # perform operation
fnmadd.s f2, f9, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f9, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f9, f24, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0x7cfbe672 # load x3 with value 0x7cfbe672
sw x3, 0(x2) # store 0x7cfbe672 in memory
flw f24, 0(x2) # load 0x7cfbe672 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fnmadd.s f26, f28, f24, f13, dyn # perform operation
fnmadd.s f26, f28, f24, f13, rdn # perform operation
fnmadd.s f26, f28, f24, f13, rmm # perform operation
fnmadd.s f26, f28, f24, f13, rne # perform operation
fnmadd.s f26, f28, f24, f13, rtz # perform operation
fnmadd.s f26, f28, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x3267345c # load x3 with value 0x3267345c
sw x3, 0(x2) # store 0x3267345c in memory
flw f13, 0(x2) # load 0x3267345c from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f8, f7, f13, f14, dyn # perform operation
fnmadd.s f8, f7, f13, f14, rdn # perform operation
fnmadd.s f8, f7, f13, f14, rmm # perform operation
fnmadd.s f8, f7, f13, f14, rne # perform operation
fnmadd.s f8, f7, f13, f14, rtz # perform operation
fnmadd.s f8, f7, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f7, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f7, f13, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xf2e44f7e # load x3 with value 0xf2e44f7e
sw x3, 0(x2) # store 0xf2e44f7e in memory
flw f13, 0(x2) # load 0xf2e44f7e from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f18, f11, f13, f23, dyn # perform operation
fnmadd.s f18, f11, f13, f23, rdn # perform operation
fnmadd.s f18, f11, f13, f23, rmm # perform operation
fnmadd.s f18, f11, f13, f23, rne # perform operation
fnmadd.s f18, f11, f13, f23, rtz # perform operation
fnmadd.s f18, f11, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f11, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f11, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x4edc4ca0 # load x3 with value 0x4edc4ca0
sw x3, 0(x2) # store 0x4edc4ca0 in memory
flw f21, 0(x2) # load 0x4edc4ca0 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fnmadd.s f12, f2, f21, f24, dyn # perform operation
fnmadd.s f12, f2, f21, f24, rdn # perform operation
fnmadd.s f12, f2, f21, f24, rmm # perform operation
fnmadd.s f12, f2, f21, f24, rne # perform operation
fnmadd.s f12, f2, f21, f24, rtz # perform operation
fnmadd.s f12, f2, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f2, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x2a7930d6 # load x3 with value 0x2a7930d6
sw x3, 0(x2) # store 0x2a7930d6 in memory
flw f23, 0(x2) # load 0x2a7930d6 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fnmadd.s f29, f12, f23, f13, dyn # perform operation
fnmadd.s f29, f12, f23, f13, rdn # perform operation
fnmadd.s f29, f12, f23, f13, rmm # perform operation
fnmadd.s f29, f12, f23, f13, rne # perform operation
fnmadd.s f29, f12, f23, f13, rtz # perform operation
fnmadd.s f29, f12, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f29, f12, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f29, f12, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f29, f12, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f29, f12, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f29, f12, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x928d492e # load x3 with value 0x928d492e
sw x3, 0(x2) # store 0x928d492e in memory
flw f16, 0(x2) # load 0x928d492e from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fnmadd.s f7, f3, f16, f10, dyn # perform operation
fnmadd.s f7, f3, f16, f10, rdn # perform operation
fnmadd.s f7, f3, f16, f10, rmm # perform operation
fnmadd.s f7, f3, f16, f10, rne # perform operation
fnmadd.s f7, f3, f16, f10, rtz # perform operation
fnmadd.s f7, f3, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f3, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f3, f16, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f28, 0(x2) # load 0xffffffff from memory into f28
la x2, scratch
li x3, 0xe8adb3b7 # load x3 with value 0xe8adb3b7
sw x3, 0(x2) # store 0xe8adb3b7 in memory
flw f7, 0(x2) # load 0xe8adb3b7 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fnmadd.s f10, f28, f7, f2, dyn # perform operation
fnmadd.s f10, f28, f7, f2, rdn # perform operation
fnmadd.s f10, f28, f7, f2, rmm # perform operation
fnmadd.s f10, f28, f7, f2, rne # perform operation
fnmadd.s f10, f28, f7, f2, rtz # perform operation
fnmadd.s f10, f28, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f28, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f28, f7, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x70434515 # load x3 with value 0x70434515
sw x3, 0(x2) # store 0x70434515 in memory
flw f30, 0(x2) # load 0x70434515 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fnmadd.s f23, f17, f30, f26, dyn # perform operation
fnmadd.s f23, f17, f30, f26, rdn # perform operation
fnmadd.s f23, f17, f30, f26, rmm # perform operation
fnmadd.s f23, f17, f30, f26, rne # perform operation
fnmadd.s f23, f17, f30, f26, rtz # perform operation
fnmadd.s f23, f17, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f17, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f17, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f17, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f17, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f17, f30, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x914fd23b # load x3 with value 0x914fd23b
sw x3, 0(x2) # store 0x914fd23b in memory
flw f17, 0(x2) # load 0x914fd23b from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fnmadd.s f13, f25, f17, f23, dyn # perform operation
fnmadd.s f13, f25, f17, f23, rdn # perform operation
fnmadd.s f13, f25, f17, f23, rmm # perform operation
fnmadd.s f13, f25, f17, f23, rne # perform operation
fnmadd.s f13, f25, f17, f23, rtz # perform operation
fnmadd.s f13, f25, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f25, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f25, f17, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x48224be2 # load x3 with value 0x48224be2
sw x3, 0(x2) # store 0x48224be2 in memory
flw f22, 0(x2) # load 0x48224be2 from memory into f22
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fnmadd.s f8, f26, f22, f13, dyn # perform operation
fnmadd.s f8, f26, f22, f13, rdn # perform operation
fnmadd.s f8, f26, f22, f13, rmm # perform operation
fnmadd.s f8, f26, f22, f13, rne # perform operation
fnmadd.s f8, f26, f22, f13, rtz # perform operation
fnmadd.s f8, f26, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f26, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0xfc37f419 # load x3 with value 0xfc37f419
sw x3, 0(x2) # store 0xfc37f419 in memory
flw f22, 0(x2) # load 0xfc37f419 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fnmadd.s f26, f7, f22, f13, dyn # perform operation
fnmadd.s f26, f7, f22, f13, rdn # perform operation
fnmadd.s f26, f7, f22, f13, rmm # perform operation
fnmadd.s f26, f7, f22, f13, rne # perform operation
fnmadd.s f26, f7, f22, f13, rtz # perform operation
fnmadd.s f26, f7, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f7, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f7, f22, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x8fb0d022 # load x3 with value 0x8fb0d022
sw x3, 0(x2) # store 0x8fb0d022 in memory
flw f29, 0(x2) # load 0x8fb0d022 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fnmadd.s f2, f8, f29, f21, dyn # perform operation
fnmadd.s f2, f8, f29, f21, rdn # perform operation
fnmadd.s f2, f8, f29, f21, rmm # perform operation
fnmadd.s f2, f8, f29, f21, rne # perform operation
fnmadd.s f2, f8, f29, f21, rtz # perform operation
fnmadd.s f2, f8, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x744836c5 # load x3 with value 0x744836c5
sw x3, 0(x2) # store 0x744836c5 in memory
flw f19, 0(x2) # load 0x744836c5 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fnmadd.s f28, f5, f19, f20, dyn # perform operation
fnmadd.s f28, f5, f19, f20, rdn # perform operation
fnmadd.s f28, f5, f19, f20, rmm # perform operation
fnmadd.s f28, f5, f19, f20, rne # perform operation
fnmadd.s f28, f5, f19, f20, rtz # perform operation
fnmadd.s f28, f5, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f5, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f5, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x855904e1 # load x3 with value 0x855904e1
sw x3, 0(x2) # store 0x855904e1 in memory
flw f25, 0(x2) # load 0x855904e1 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fnmadd.s f19, f29, f25, f15, dyn # perform operation
fnmadd.s f19, f29, f25, f15, rdn # perform operation
fnmadd.s f19, f29, f25, f15, rmm # perform operation
fnmadd.s f19, f29, f25, f15, rne # perform operation
fnmadd.s f19, f29, f25, f15, rtz # perform operation
fnmadd.s f19, f29, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f29, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f29, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x62883b28 # load x3 with value 0x62883b28
sw x3, 0(x2) # store 0x62883b28 in memory
flw f10, 0(x2) # load 0x62883b28 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fnmadd.s f2, f8, f10, f17, dyn # perform operation
fnmadd.s f2, f8, f10, f17, rdn # perform operation
fnmadd.s f2, f8, f10, f17, rmm # perform operation
fnmadd.s f2, f8, f10, f17, rne # perform operation
fnmadd.s f2, f8, f10, f17, rtz # perform operation
fnmadd.s f2, f8, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f10, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0x57646089 # load x3 with value 0x57646089
sw x3, 0(x2) # store 0x57646089 in memory
flw f13, 0(x2) # load 0x57646089 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fnmadd.s f10, f8, f13, f25, dyn # perform operation
fnmadd.s f10, f8, f13, f25, rdn # perform operation
fnmadd.s f10, f8, f13, f25, rmm # perform operation
fnmadd.s f10, f8, f13, f25, rne # perform operation
fnmadd.s f10, f8, f13, f25, rtz # perform operation
fnmadd.s f10, f8, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f8, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f8, f13, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0xcc36755a # load x3 with value 0xcc36755a
sw x3, 0(x2) # store 0xcc36755a in memory
flw f31, 0(x2) # load 0xcc36755a from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fnmadd.s f9, f15, f31, f12, dyn # perform operation
fnmadd.s f9, f15, f31, f12, rdn # perform operation
fnmadd.s f9, f15, f31, f12, rmm # perform operation
fnmadd.s f9, f15, f31, f12, rne # perform operation
fnmadd.s f9, f15, f31, f12, rtz # perform operation
fnmadd.s f9, f15, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f15, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f15, f31, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x87bb451b # load x3 with value 0x87bb451b
sw x3, 0(x2) # store 0x87bb451b in memory
flw f31, 0(x2) # load 0x87bb451b from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fnmadd.s f25, f15, f31, f30, dyn # perform operation
fnmadd.s f25, f15, f31, f30, rdn # perform operation
fnmadd.s f25, f15, f31, f30, rmm # perform operation
fnmadd.s f25, f15, f31, f30, rne # perform operation
fnmadd.s f25, f15, f31, f30, rtz # perform operation
fnmadd.s f25, f15, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f31, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0x484f7f45 # load x3 with value 0x484f7f45
sw x3, 0(x2) # store 0x484f7f45 in memory
flw f26, 0(x2) # load 0x484f7f45 from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fnmadd.s f24, f29, f26, f15, dyn # perform operation
fnmadd.s f24, f29, f26, f15, rdn # perform operation
fnmadd.s f24, f29, f26, f15, rmm # perform operation
fnmadd.s f24, f29, f26, f15, rne # perform operation
fnmadd.s f24, f29, f26, f15, rtz # perform operation
fnmadd.s f24, f29, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f29, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f29, f26, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0xc9f49152 # load x3 with value 0xc9f49152
sw x3, 0(x2) # store 0xc9f49152 in memory
flw f17, 0(x2) # load 0xc9f49152 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fnmadd.s f23, f2, f17, f27, dyn # perform operation
fnmadd.s f23, f2, f17, f27, rdn # perform operation
fnmadd.s f23, f2, f17, f27, rmm # perform operation
fnmadd.s f23, f2, f17, f27, rne # perform operation
fnmadd.s f23, f2, f17, f27, rtz # perform operation
fnmadd.s f23, f2, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f2, f17, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0x074b1447 # load x3 with value 0x074b1447
sw x3, 0(x2) # store 0x074b1447 in memory
flw f3, 0(x2) # load 0x074b1447 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fnmadd.s f17, f19, f3, f21, dyn # perform operation
fnmadd.s f17, f19, f3, f21, rdn # perform operation
fnmadd.s f17, f19, f3, f21, rmm # perform operation
fnmadd.s f17, f19, f3, f21, rne # perform operation
fnmadd.s f17, f19, f3, f21, rtz # perform operation
fnmadd.s f17, f19, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xdd4daf23 # load x3 with value 0xdd4daf23
sw x3, 0(x2) # store 0xdd4daf23 in memory
flw f22, 0(x2) # load 0xdd4daf23 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fnmadd.s f26, f28, f22, f17, dyn # perform operation
fnmadd.s f26, f28, f22, f17, rdn # perform operation
fnmadd.s f26, f28, f22, f17, rmm # perform operation
fnmadd.s f26, f28, f22, f17, rne # perform operation
fnmadd.s f26, f28, f22, f17, rtz # perform operation
fnmadd.s f26, f28, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f22, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x6e6320b6 # load x3 with value 0x6e6320b6
sw x3, 0(x2) # store 0x6e6320b6 in memory
flw f31, 0(x2) # load 0x6e6320b6 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fnmadd.s f21, f6, f31, f2, dyn # perform operation
fnmadd.s f21, f6, f31, f2, rdn # perform operation
fnmadd.s f21, f6, f31, f2, rmm # perform operation
fnmadd.s f21, f6, f31, f2, rne # perform operation
fnmadd.s f21, f6, f31, f2, rtz # perform operation
fnmadd.s f21, f6, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xfe407c19 # load x3 with value 0xfe407c19
sw x3, 0(x2) # store 0xfe407c19 in memory
flw f21, 0(x2) # load 0xfe407c19 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmadd.s f17, f23, f21, f20, dyn # perform operation
fnmadd.s f17, f23, f21, f20, rdn # perform operation
fnmadd.s f17, f23, f21, f20, rmm # perform operation
fnmadd.s f17, f23, f21, f20, rne # perform operation
fnmadd.s f17, f23, f21, f20, rtz # perform operation
fnmadd.s f17, f23, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f23, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f23, f21, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x05f22654 # load x3 with value 0x05f22654
sw x3, 0(x2) # store 0x05f22654 in memory
flw f15, 0(x2) # load 0x05f22654 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmadd.s f2, f28, f15, f14, dyn # perform operation
fnmadd.s f2, f28, f15, f14, rdn # perform operation
fnmadd.s f2, f28, f15, f14, rmm # perform operation
fnmadd.s f2, f28, f15, f14, rne # perform operation
fnmadd.s f2, f28, f15, f14, rtz # perform operation
fnmadd.s f2, f28, f15, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f15, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f15, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f15, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f15, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f15, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x0f72062b # load x3 with value 0x0f72062b
sw x3, 0(x2) # store 0x0f72062b in memory
flw f22, 0(x2) # load 0x0f72062b from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fnmadd.s f28, f12, f22, f31, dyn # perform operation
fnmadd.s f28, f12, f22, f31, rdn # perform operation
fnmadd.s f28, f12, f22, f31, rmm # perform operation
fnmadd.s f28, f12, f22, f31, rne # perform operation
fnmadd.s f28, f12, f22, f31, rtz # perform operation
fnmadd.s f28, f12, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f12, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x2db2cb1e # load x3 with value 0x2db2cb1e
sw x3, 0(x2) # store 0x2db2cb1e in memory
flw f11, 0(x2) # load 0x2db2cb1e from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fnmadd.s f27, f25, f11, f23, dyn # perform operation
fnmadd.s f27, f25, f11, f23, rdn # perform operation
fnmadd.s f27, f25, f11, f23, rmm # perform operation
fnmadd.s f27, f25, f11, f23, rne # perform operation
fnmadd.s f27, f25, f11, f23, rtz # perform operation
fnmadd.s f27, f25, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f25, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f25, f11, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x7068c3b3 # load x3 with value 0x7068c3b3
sw x3, 0(x2) # store 0x7068c3b3 in memory
flw f22, 0(x2) # load 0x7068c3b3 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmadd.s f16, f1, f22, f28, dyn # perform operation
fnmadd.s f16, f1, f22, f28, rdn # perform operation
fnmadd.s f16, f1, f22, f28, rmm # perform operation
fnmadd.s f16, f1, f22, f28, rne # perform operation
fnmadd.s f16, f1, f22, f28, rtz # perform operation
fnmadd.s f16, f1, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f16, f1, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f16, f1, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0xff2f5a0d # load x3 with value 0xff2f5a0d
sw x3, 0(x2) # store 0xff2f5a0d in memory
flw f7, 0(x2) # load 0xff2f5a0d from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fnmadd.s f1, f21, f7, f3, dyn # perform operation
fnmadd.s f1, f21, f7, f3, rdn # perform operation
fnmadd.s f1, f21, f7, f3, rmm # perform operation
fnmadd.s f1, f21, f7, f3, rne # perform operation
fnmadd.s f1, f21, f7, f3, rtz # perform operation
fnmadd.s f1, f21, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f21, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f21, f7, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xe2d950d5 # load x3 with value 0xe2d950d5
sw x3, 0(x2) # store 0xe2d950d5 in memory
flw f31, 0(x2) # load 0xe2d950d5 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fnmadd.s f6, f5, f31, f20, dyn # perform operation
fnmadd.s f6, f5, f31, f20, rdn # perform operation
fnmadd.s f6, f5, f31, f20, rmm # perform operation
fnmadd.s f6, f5, f31, f20, rne # perform operation
fnmadd.s f6, f5, f31, f20, rtz # perform operation
fnmadd.s f6, f5, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f5, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f5, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x1d7bcda6 # load x3 with value 0x1d7bcda6
sw x3, 0(x2) # store 0x1d7bcda6 in memory
flw f5, 0(x2) # load 0x1d7bcda6 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmadd.s f15, f18, f5, f24, dyn # perform operation
fnmadd.s f15, f18, f5, f24, rdn # perform operation
fnmadd.s f15, f18, f5, f24, rmm # perform operation
fnmadd.s f15, f18, f5, f24, rne # perform operation
fnmadd.s f15, f18, f5, f24, rtz # perform operation
fnmadd.s f15, f18, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f18, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f18, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f18, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f18, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f18, f5, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x9597c2a7 # load x3 with value 0x9597c2a7
sw x3, 0(x2) # store 0x9597c2a7 in memory
flw f29, 0(x2) # load 0x9597c2a7 from memory into f29
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fnmadd.s f12, f30, f29, f31, dyn # perform operation
fnmadd.s f12, f30, f29, f31, rdn # perform operation
fnmadd.s f12, f30, f29, f31, rmm # perform operation
fnmadd.s f12, f30, f29, f31, rne # perform operation
fnmadd.s f12, f30, f29, f31, rtz # perform operation
fnmadd.s f12, f30, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f30, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f30, f29, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x93bf3333 # load x3 with value 0x93bf3333
sw x3, 0(x2) # store 0x93bf3333 in memory
flw f21, 0(x2) # load 0x93bf3333 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fnmadd.s f1, f13, f21, f12, dyn # perform operation
fnmadd.s f1, f13, f21, f12, rdn # perform operation
fnmadd.s f1, f13, f21, f12, rmm # perform operation
fnmadd.s f1, f13, f21, f12, rne # perform operation
fnmadd.s f1, f13, f21, f12, rtz # perform operation
fnmadd.s f1, f13, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f13, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f13, f21, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x8580f5b1 # load x3 with value 0x8580f5b1
sw x3, 0(x2) # store 0x8580f5b1 in memory
flw f21, 0(x2) # load 0x8580f5b1 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fnmadd.s f8, f25, f21, f14, dyn # perform operation
fnmadd.s f8, f25, f21, f14, rdn # perform operation
fnmadd.s f8, f25, f21, f14, rmm # perform operation
fnmadd.s f8, f25, f21, f14, rne # perform operation
fnmadd.s f8, f25, f21, f14, rtz # perform operation
fnmadd.s f8, f25, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f25, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x20b60832 # load x3 with value 0x20b60832
sw x3, 0(x2) # store 0x20b60832 in memory
flw f21, 0(x2) # load 0x20b60832 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fnmadd.s f26, f1, f21, f27, dyn # perform operation
fnmadd.s f26, f1, f21, f27, rdn # perform operation
fnmadd.s f26, f1, f21, f27, rmm # perform operation
fnmadd.s f26, f1, f21, f27, rne # perform operation
fnmadd.s f26, f1, f21, f27, rtz # perform operation
fnmadd.s f26, f1, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f1, f21, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x1998fb4c # load x3 with value 0x1998fb4c
sw x3, 0(x2) # store 0x1998fb4c in memory
flw f27, 0(x2) # load 0x1998fb4c from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fnmadd.s f9, f25, f27, f16, dyn # perform operation
fnmadd.s f9, f25, f27, f16, rdn # perform operation
fnmadd.s f9, f25, f27, f16, rmm # perform operation
fnmadd.s f9, f25, f27, f16, rne # perform operation
fnmadd.s f9, f25, f27, f16, rtz # perform operation
fnmadd.s f9, f25, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f25, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f25, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0xca51b863 # load x3 with value 0xca51b863
sw x3, 0(x2) # store 0xca51b863 in memory
flw f7, 0(x2) # load 0xca51b863 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fnmadd.s f2, f6, f7, f22, dyn # perform operation
fnmadd.s f2, f6, f7, f22, rdn # perform operation
fnmadd.s f2, f6, f7, f22, rmm # perform operation
fnmadd.s f2, f6, f7, f22, rne # perform operation
fnmadd.s f2, f6, f7, f22, rtz # perform operation
fnmadd.s f2, f6, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f6, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f6, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x7b88cb7f # load x3 with value 0x7b88cb7f
sw x3, 0(x2) # store 0x7b88cb7f in memory
flw f9, 0(x2) # load 0x7b88cb7f from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f23, f31, f9, f27, dyn # perform operation
fnmadd.s f23, f31, f9, f27, rdn # perform operation
fnmadd.s f23, f31, f9, f27, rmm # perform operation
fnmadd.s f23, f31, f9, f27, rne # perform operation
fnmadd.s f23, f31, f9, f27, rtz # perform operation
fnmadd.s f23, f31, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x40ab52c8 # load x3 with value 0x40ab52c8
sw x3, 0(x2) # store 0x40ab52c8 in memory
flw f8, 0(x2) # load 0x40ab52c8 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fnmadd.s f17, f21, f8, f15, dyn # perform operation
fnmadd.s f17, f21, f8, f15, rdn # perform operation
fnmadd.s f17, f21, f8, f15, rmm # perform operation
fnmadd.s f17, f21, f8, f15, rne # perform operation
fnmadd.s f17, f21, f8, f15, rtz # perform operation
fnmadd.s f17, f21, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f21, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f21, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f21, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f21, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f21, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x169b0b2d # load x3 with value 0x169b0b2d
sw x3, 0(x2) # store 0x169b0b2d in memory
flw f25, 0(x2) # load 0x169b0b2d from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fnmadd.s f18, f14, f25, f19, dyn # perform operation
fnmadd.s f18, f14, f25, f19, rdn # perform operation
fnmadd.s f18, f14, f25, f19, rmm # perform operation
fnmadd.s f18, f14, f25, f19, rne # perform operation
fnmadd.s f18, f14, f25, f19, rtz # perform operation
fnmadd.s f18, f14, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f14, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f14, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x86aa74e6 # load x3 with value 0x86aa74e6
sw x3, 0(x2) # store 0x86aa74e6 in memory
flw f3, 0(x2) # load 0x86aa74e6 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
fnmadd.s f18, f28, f3, f9, dyn # perform operation
fnmadd.s f18, f28, f3, f9, rdn # perform operation
fnmadd.s f18, f28, f3, f9, rmm # perform operation
fnmadd.s f18, f28, f3, f9, rne # perform operation
fnmadd.s f18, f28, f3, f9, rtz # perform operation
fnmadd.s f18, f28, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f28, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f28, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x17cfc811 # load x3 with value 0x17cfc811
sw x3, 0(x2) # store 0x17cfc811 in memory
flw f11, 0(x2) # load 0x17cfc811 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fnmadd.s f27, f8, f11, f19, dyn # perform operation
fnmadd.s f27, f8, f11, f19, rdn # perform operation
fnmadd.s f27, f8, f11, f19, rmm # perform operation
fnmadd.s f27, f8, f11, f19, rne # perform operation
fnmadd.s f27, f8, f11, f19, rtz # perform operation
fnmadd.s f27, f8, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f8, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f8, f11, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x37474938 # load x3 with value 0x37474938
sw x3, 0(x2) # store 0x37474938 in memory
flw f10, 0(x2) # load 0x37474938 from memory into f10
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fnmadd.s f1, f22, f10, f27, dyn # perform operation
fnmadd.s f1, f22, f10, f27, rdn # perform operation
fnmadd.s f1, f22, f10, f27, rmm # perform operation
fnmadd.s f1, f22, f10, f27, rne # perform operation
fnmadd.s f1, f22, f10, f27, rtz # perform operation
fnmadd.s f1, f22, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f22, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f22, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x534975ca # load x3 with value 0x534975ca
sw x3, 0(x2) # store 0x534975ca in memory
flw f25, 0(x2) # load 0x534975ca from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fnmadd.s f3, f27, f25, f19, dyn # perform operation
fnmadd.s f3, f27, f25, f19, rdn # perform operation
fnmadd.s f3, f27, f25, f19, rmm # perform operation
fnmadd.s f3, f27, f25, f19, rne # perform operation
fnmadd.s f3, f27, f25, f19, rtz # perform operation
fnmadd.s f3, f27, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f27, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f27, f25, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
la x2, scratch
li x3, 0x727c2bdb # load x3 with value 0x727c2bdb
sw x3, 0(x2) # store 0x727c2bdb in memory
flw f20, 0(x2) # load 0x727c2bdb from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fnmadd.s f3, f30, f20, f11, dyn # perform operation
fnmadd.s f3, f30, f20, f11, rdn # perform operation
fnmadd.s f3, f30, f20, f11, rmm # perform operation
fnmadd.s f3, f30, f20, f11, rne # perform operation
fnmadd.s f3, f30, f20, f11, rtz # perform operation
fnmadd.s f3, f30, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f20, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x3db998e9 # load x3 with value 0x3db998e9
sw x3, 0(x2) # store 0x3db998e9 in memory
flw f15, 0(x2) # load 0x3db998e9 from memory into f15
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fnmadd.s f17, f19, f15, f29, dyn # perform operation
fnmadd.s f17, f19, f15, f29, rdn # perform operation
fnmadd.s f17, f19, f15, f29, rmm # perform operation
fnmadd.s f17, f19, f15, f29, rne # perform operation
fnmadd.s f17, f19, f15, f29, rtz # perform operation
fnmadd.s f17, f19, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f19, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f19, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f19, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f19, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f19, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x2150ad9a # load x3 with value 0x2150ad9a
sw x3, 0(x2) # store 0x2150ad9a in memory
flw f1, 0(x2) # load 0x2150ad9a from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fnmadd.s f31, f11, f1, f28, dyn # perform operation
fnmadd.s f31, f11, f1, f28, rdn # perform operation
fnmadd.s f31, f11, f1, f28, rmm # perform operation
fnmadd.s f31, f11, f1, f28, rne # perform operation
fnmadd.s f31, f11, f1, f28, rtz # perform operation
fnmadd.s f31, f11, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f1, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0xaceea7e0 # load x3 with value 0xaceea7e0
sw x3, 0(x2) # store 0xaceea7e0 in memory
flw f10, 0(x2) # load 0xaceea7e0 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f5, f2, f10, f13, dyn # perform operation
fnmadd.s f5, f2, f10, f13, rdn # perform operation
fnmadd.s f5, f2, f10, f13, rmm # perform operation
fnmadd.s f5, f2, f10, f13, rne # perform operation
fnmadd.s f5, f2, f10, f13, rtz # perform operation
fnmadd.s f5, f2, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f2, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f2, f10, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0x02c58236 # load x3 with value 0x02c58236
sw x3, 0(x2) # store 0x02c58236 in memory
flw f1, 0(x2) # load 0x02c58236 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fnmadd.s f3, f6, f1, f8, dyn # perform operation
fnmadd.s f3, f6, f1, f8, rdn # perform operation
fnmadd.s f3, f6, f1, f8, rmm # perform operation
fnmadd.s f3, f6, f1, f8, rne # perform operation
fnmadd.s f3, f6, f1, f8, rtz # perform operation
fnmadd.s f3, f6, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f6, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f6, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x42f24bc3 # load x3 with value 0x42f24bc3
sw x3, 0(x2) # store 0x42f24bc3 in memory
flw f23, 0(x2) # load 0x42f24bc3 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fnmadd.s f20, f15, f23, f8, dyn # perform operation
fnmadd.s f20, f15, f23, f8, rdn # perform operation
fnmadd.s f20, f15, f23, f8, rmm # perform operation
fnmadd.s f20, f15, f23, f8, rne # perform operation
fnmadd.s f20, f15, f23, f8, rtz # perform operation
fnmadd.s f20, f15, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f15, f23, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x35b6625e # load x3 with value 0x35b6625e
sw x3, 0(x2) # store 0x35b6625e in memory
flw f12, 0(x2) # load 0x35b6625e from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fnmadd.s f19, f28, f12, f24, dyn # perform operation
fnmadd.s f19, f28, f12, f24, rdn # perform operation
fnmadd.s f19, f28, f12, f24, rmm # perform operation
fnmadd.s f19, f28, f12, f24, rne # perform operation
fnmadd.s f19, f28, f12, f24, rtz # perform operation
fnmadd.s f19, f28, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f19, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f19, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f19, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f19, f28, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f19, f28, f12, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x96aef5cf # load x3 with value 0x96aef5cf
sw x3, 0(x2) # store 0x96aef5cf in memory
flw f6, 0(x2) # load 0x96aef5cf from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fnmadd.s f2, f8, f6, f20, dyn # perform operation
fnmadd.s f2, f8, f6, f20, rdn # perform operation
fnmadd.s f2, f8, f6, f20, rmm # perform operation
fnmadd.s f2, f8, f6, f20, rne # perform operation
fnmadd.s f2, f8, f6, f20, rtz # perform operation
fnmadd.s f2, f8, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f8, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f8, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xdf15817a # load x3 with value 0xdf15817a
sw x3, 0(x2) # store 0xdf15817a in memory
flw f20, 0(x2) # load 0xdf15817a from memory into f20
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fnmadd.s f8, f10, f20, f19, dyn # perform operation
fnmadd.s f8, f10, f20, f19, rdn # perform operation
fnmadd.s f8, f10, f20, f19, rmm # perform operation
fnmadd.s f8, f10, f20, f19, rne # perform operation
fnmadd.s f8, f10, f20, f19, rtz # perform operation
fnmadd.s f8, f10, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f10, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f10, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x78315ad4 # load x3 with value 0x78315ad4
sw x3, 0(x2) # store 0x78315ad4 in memory
flw f20, 0(x2) # load 0x78315ad4 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fnmadd.s f10, f7, f20, f15, dyn # perform operation
fnmadd.s f10, f7, f20, f15, rdn # perform operation
fnmadd.s f10, f7, f20, f15, rmm # perform operation
fnmadd.s f10, f7, f20, f15, rne # perform operation
fnmadd.s f10, f7, f20, f15, rtz # perform operation
fnmadd.s f10, f7, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f7, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f7, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x0b397199 # load x3 with value 0x0b397199
sw x3, 0(x2) # store 0x0b397199 in memory
flw f30, 0(x2) # load 0x0b397199 from memory into f30
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fnmadd.s f14, f2, f30, f25, dyn # perform operation
fnmadd.s f14, f2, f30, f25, rdn # perform operation
fnmadd.s f14, f2, f30, f25, rmm # perform operation
fnmadd.s f14, f2, f30, f25, rne # perform operation
fnmadd.s f14, f2, f30, f25, rtz # perform operation
fnmadd.s f14, f2, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f2, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f2, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x73163cd6 # load x3 with value 0x73163cd6
sw x3, 0(x2) # store 0x73163cd6 in memory
flw f11, 0(x2) # load 0x73163cd6 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fnmadd.s f23, f25, f11, f27, dyn # perform operation
fnmadd.s f23, f25, f11, f27, rdn # perform operation
fnmadd.s f23, f25, f11, f27, rmm # perform operation
fnmadd.s f23, f25, f11, f27, rne # perform operation
fnmadd.s f23, f25, f11, f27, rtz # perform operation
fnmadd.s f23, f25, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f25, f11, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x6615203f # load x3 with value 0x6615203f
sw x3, 0(x2) # store 0x6615203f in memory
flw f17, 0(x2) # load 0x6615203f from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fnmadd.s f6, f28, f17, f19, dyn # perform operation
fnmadd.s f6, f28, f17, f19, rdn # perform operation
fnmadd.s f6, f28, f17, f19, rmm # perform operation
fnmadd.s f6, f28, f17, f19, rne # perform operation
fnmadd.s f6, f28, f17, f19, rtz # perform operation
fnmadd.s f6, f28, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f28, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f28, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xf9e315af # load x3 with value 0xf9e315af
sw x3, 0(x2) # store 0xf9e315af in memory
flw f8, 0(x2) # load 0xf9e315af from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fnmadd.s f10, f29, f8, f15, dyn # perform operation
fnmadd.s f10, f29, f8, f15, rdn # perform operation
fnmadd.s f10, f29, f8, f15, rmm # perform operation
fnmadd.s f10, f29, f8, f15, rne # perform operation
fnmadd.s f10, f29, f8, f15, rtz # perform operation
fnmadd.s f10, f29, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f29, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f29, f8, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x93888aa4 # load x3 with value 0x93888aa4
sw x3, 0(x2) # store 0x93888aa4 in memory
flw f1, 0(x2) # load 0x93888aa4 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fnmadd.s f3, f24, f1, f7, dyn # perform operation
fnmadd.s f3, f24, f1, f7, rdn # perform operation
fnmadd.s f3, f24, f1, f7, rmm # perform operation
fnmadd.s f3, f24, f1, f7, rne # perform operation
fnmadd.s f3, f24, f1, f7, rtz # perform operation
fnmadd.s f3, f24, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f24, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f24, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xcb0f83ce # load x3 with value 0xcb0f83ce
sw x3, 0(x2) # store 0xcb0f83ce in memory
flw f19, 0(x2) # load 0xcb0f83ce from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f31, f9, f19, f13, dyn # perform operation
fnmadd.s f31, f9, f19, f13, rdn # perform operation
fnmadd.s f31, f9, f19, f13, rmm # perform operation
fnmadd.s f31, f9, f19, f13, rne # perform operation
fnmadd.s f31, f9, f19, f13, rtz # perform operation
fnmadd.s f31, f9, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f9, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x64d54bc6 # load x3 with value 0x64d54bc6
sw x3, 0(x2) # store 0x64d54bc6 in memory
flw f17, 0(x2) # load 0x64d54bc6 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fnmadd.s f6, f10, f17, f16, dyn # perform operation
fnmadd.s f6, f10, f17, f16, rdn # perform operation
fnmadd.s f6, f10, f17, f16, rmm # perform operation
fnmadd.s f6, f10, f17, f16, rne # perform operation
fnmadd.s f6, f10, f17, f16, rtz # perform operation
fnmadd.s f6, f10, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x7c5d4daa # load x3 with value 0x7c5d4daa
sw x3, 0(x2) # store 0x7c5d4daa in memory
flw f6, 0(x2) # load 0x7c5d4daa from memory into f6
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fnmadd.s f15, f20, f6, f28, dyn # perform operation
fnmadd.s f15, f20, f6, f28, rdn # perform operation
fnmadd.s f15, f20, f6, f28, rmm # perform operation
fnmadd.s f15, f20, f6, f28, rne # perform operation
fnmadd.s f15, f20, f6, f28, rtz # perform operation
fnmadd.s f15, f20, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f15, f20, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f15, f20, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f15, f20, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f15, f20, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f15, f20, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xda2c4551 # load x3 with value 0xda2c4551
sw x3, 0(x2) # store 0xda2c4551 in memory
flw f28, 0(x2) # load 0xda2c4551 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fnmadd.s f18, f13, f28, f22, dyn # perform operation
fnmadd.s f18, f13, f28, f22, rdn # perform operation
fnmadd.s f18, f13, f28, f22, rmm # perform operation
fnmadd.s f18, f13, f28, f22, rne # perform operation
fnmadd.s f18, f13, f28, f22, rtz # perform operation
fnmadd.s f18, f13, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f13, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f13, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f13, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f13, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f13, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x73638057 # load x3 with value 0x73638057
sw x3, 0(x2) # store 0x73638057 in memory
flw f19, 0(x2) # load 0x73638057 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fnmadd.s f25, f3, f19, f14, dyn # perform operation
fnmadd.s f25, f3, f19, f14, rdn # perform operation
fnmadd.s f25, f3, f19, f14, rmm # perform operation
fnmadd.s f25, f3, f19, f14, rne # perform operation
fnmadd.s f25, f3, f19, f14, rtz # perform operation
fnmadd.s f25, f3, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f3, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f3, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xba4aaa6b # load x3 with value 0xba4aaa6b
sw x3, 0(x2) # store 0xba4aaa6b in memory
flw f21, 0(x2) # load 0xba4aaa6b from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fnmadd.s f31, f14, f21, f2, dyn # perform operation
fnmadd.s f31, f14, f21, f2, rdn # perform operation
fnmadd.s f31, f14, f21, f2, rmm # perform operation
fnmadd.s f31, f14, f21, f2, rne # perform operation
fnmadd.s f31, f14, f21, f2, rtz # perform operation
fnmadd.s f31, f14, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x6880b226 # load x3 with value 0x6880b226
sw x3, 0(x2) # store 0x6880b226 in memory
flw f17, 0(x2) # load 0x6880b226 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fnmadd.s f12, f28, f17, f16, dyn # perform operation
fnmadd.s f12, f28, f17, f16, rdn # perform operation
fnmadd.s f12, f28, f17, f16, rmm # perform operation
fnmadd.s f12, f28, f17, f16, rne # perform operation
fnmadd.s f12, f28, f17, f16, rtz # perform operation
fnmadd.s f12, f28, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f28, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x826cbb56 # load x3 with value 0x826cbb56
sw x3, 0(x2) # store 0x826cbb56 in memory
flw f23, 0(x2) # load 0x826cbb56 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fnmadd.s f21, f16, f23, f2, dyn # perform operation
fnmadd.s f21, f16, f23, f2, rdn # perform operation
fnmadd.s f21, f16, f23, f2, rmm # perform operation
fnmadd.s f21, f16, f23, f2, rne # perform operation
fnmadd.s f21, f16, f23, f2, rtz # perform operation
fnmadd.s f21, f16, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f16, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f16, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f16, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f16, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f16, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x0f7e6d38 # load x3 with value 0x0f7e6d38
sw x3, 0(x2) # store 0x0f7e6d38 in memory
flw f3, 0(x2) # load 0x0f7e6d38 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fnmadd.s f17, f25, f3, f11, dyn # perform operation
fnmadd.s f17, f25, f3, f11, rdn # perform operation
fnmadd.s f17, f25, f3, f11, rmm # perform operation
fnmadd.s f17, f25, f3, f11, rne # perform operation
fnmadd.s f17, f25, f3, f11, rtz # perform operation
fnmadd.s f17, f25, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f25, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f25, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x862c732e # load x3 with value 0x862c732e
sw x3, 0(x2) # store 0x862c732e in memory
flw f16, 0(x2) # load 0x862c732e from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
fnmadd.s f27, f12, f16, f8, dyn # perform operation
fnmadd.s f27, f12, f16, f8, rdn # perform operation
fnmadd.s f27, f12, f16, f8, rmm # perform operation
fnmadd.s f27, f12, f16, f8, rne # perform operation
fnmadd.s f27, f12, f16, f8, rtz # perform operation
fnmadd.s f27, f12, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f12, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f12, f16, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x3d969148 # load x3 with value 0x3d969148
sw x3, 0(x2) # store 0x3d969148 in memory
flw f23, 0(x2) # load 0x3d969148 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fnmadd.s f2, f28, f23, f3, dyn # perform operation
fnmadd.s f2, f28, f23, f3, rdn # perform operation
fnmadd.s f2, f28, f23, f3, rmm # perform operation
fnmadd.s f2, f28, f23, f3, rne # perform operation
fnmadd.s f2, f28, f23, f3, rtz # perform operation
fnmadd.s f2, f28, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f28, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f28, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0xbb31ad1b # load x3 with value 0xbb31ad1b
sw x3, 0(x2) # store 0xbb31ad1b in memory
flw f14, 0(x2) # load 0xbb31ad1b from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fnmadd.s f8, f1, f14, f15, dyn # perform operation
fnmadd.s f8, f1, f14, f15, rdn # perform operation
fnmadd.s f8, f1, f14, f15, rmm # perform operation
fnmadd.s f8, f1, f14, f15, rne # perform operation
fnmadd.s f8, f1, f14, f15, rtz # perform operation
fnmadd.s f8, f1, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f1, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f1, f14, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xbcf5ef44 # load x3 with value 0xbcf5ef44
sw x3, 0(x2) # store 0xbcf5ef44 in memory
flw f24, 0(x2) # load 0xbcf5ef44 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fnmadd.s f5, f11, f24, f29, dyn # perform operation
fnmadd.s f5, f11, f24, f29, rdn # perform operation
fnmadd.s f5, f11, f24, f29, rmm # perform operation
fnmadd.s f5, f11, f24, f29, rne # perform operation
fnmadd.s f5, f11, f24, f29, rtz # perform operation
fnmadd.s f5, f11, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f11, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f11, f24, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0x163c2793 # load x3 with value 0x163c2793
sw x3, 0(x2) # store 0x163c2793 in memory
flw f22, 0(x2) # load 0x163c2793 from memory into f22
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fnmadd.s f5, f19, f22, f16, dyn # perform operation
fnmadd.s f5, f19, f22, f16, rdn # perform operation
fnmadd.s f5, f19, f22, f16, rmm # perform operation
fnmadd.s f5, f19, f22, f16, rne # perform operation
fnmadd.s f5, f19, f22, f16, rtz # perform operation
fnmadd.s f5, f19, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f19, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f19, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0xe3876051 # load x3 with value 0xe3876051
sw x3, 0(x2) # store 0xe3876051 in memory
flw f22, 0(x2) # load 0xe3876051 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fnmadd.s f23, f5, f22, f1, dyn # perform operation
fnmadd.s f23, f5, f22, f1, rdn # perform operation
fnmadd.s f23, f5, f22, f1, rmm # perform operation
fnmadd.s f23, f5, f22, f1, rne # perform operation
fnmadd.s f23, f5, f22, f1, rtz # perform operation
fnmadd.s f23, f5, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f5, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f5, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f5, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f5, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f5, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0xe40ca010 # load x3 with value 0xe40ca010
sw x3, 0(x2) # store 0xe40ca010 in memory
flw f10, 0(x2) # load 0xe40ca010 from memory into f10
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fnmadd.s f21, f28, f10, f14, dyn # perform operation
fnmadd.s f21, f28, f10, f14, rdn # perform operation
fnmadd.s f21, f28, f10, f14, rmm # perform operation
fnmadd.s f21, f28, f10, f14, rne # perform operation
fnmadd.s f21, f28, f10, f14, rtz # perform operation
fnmadd.s f21, f28, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f28, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xef5a2ac4 # load x3 with value 0xef5a2ac4
sw x3, 0(x2) # store 0xef5a2ac4 in memory
flw f13, 0(x2) # load 0xef5a2ac4 from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fnmadd.s f27, f15, f13, f26, dyn # perform operation
fnmadd.s f27, f15, f13, f26, rdn # perform operation
fnmadd.s f27, f15, f13, f26, rmm # perform operation
fnmadd.s f27, f15, f13, f26, rne # perform operation
fnmadd.s f27, f15, f13, f26, rtz # perform operation
fnmadd.s f27, f15, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f27, f15, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f27, f15, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f27, f15, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f27, f15, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f27, f15, f13, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x26a93faf # load x3 with value 0x26a93faf
sw x3, 0(x2) # store 0x26a93faf in memory
flw f17, 0(x2) # load 0x26a93faf from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fnmadd.s f12, f22, f17, f19, dyn # perform operation
fnmadd.s f12, f22, f17, f19, rdn # perform operation
fnmadd.s f12, f22, f17, f19, rmm # perform operation
fnmadd.s f12, f22, f17, f19, rne # perform operation
fnmadd.s f12, f22, f17, f19, rtz # perform operation
fnmadd.s f12, f22, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f17, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x2d55ce47 # load x3 with value 0x2d55ce47
sw x3, 0(x2) # store 0x2d55ce47 in memory
flw f12, 0(x2) # load 0x2d55ce47 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fnmadd.s f21, f17, f12, f2, dyn # perform operation
fnmadd.s f21, f17, f12, f2, rdn # perform operation
fnmadd.s f21, f17, f12, f2, rmm # perform operation
fnmadd.s f21, f17, f12, f2, rne # perform operation
fnmadd.s f21, f17, f12, f2, rtz # perform operation
fnmadd.s f21, f17, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f12, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x0b7a706e # load x3 with value 0x0b7a706e
sw x3, 0(x2) # store 0x0b7a706e in memory
flw f21, 0(x2) # load 0x0b7a706e from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fnmadd.s f10, f20, f21, f1, dyn # perform operation
fnmadd.s f10, f20, f21, f1, rdn # perform operation
fnmadd.s f10, f20, f21, f1, rmm # perform operation
fnmadd.s f10, f20, f21, f1, rne # perform operation
fnmadd.s f10, f20, f21, f1, rtz # perform operation
fnmadd.s f10, f20, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f20, f21, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x9f9b291f # load x3 with value 0x9f9b291f
sw x3, 0(x2) # store 0x9f9b291f in memory
flw f29, 0(x2) # load 0x9f9b291f from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fnmadd.s f13, f17, f29, f18, dyn # perform operation
fnmadd.s f13, f17, f29, f18, rdn # perform operation
fnmadd.s f13, f17, f29, f18, rmm # perform operation
fnmadd.s f13, f17, f29, f18, rne # perform operation
fnmadd.s f13, f17, f29, f18, rtz # perform operation
fnmadd.s f13, f17, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f17, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f17, f29, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xcc4c9b15 # load x3 with value 0xcc4c9b15
sw x3, 0(x2) # store 0xcc4c9b15 in memory
flw f16, 0(x2) # load 0xcc4c9b15 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
fnmadd.s f17, f11, f16, f13, dyn # perform operation
fnmadd.s f17, f11, f16, f13, rdn # perform operation
fnmadd.s f17, f11, f16, f13, rmm # perform operation
fnmadd.s f17, f11, f16, f13, rne # perform operation
fnmadd.s f17, f11, f16, f13, rtz # perform operation
fnmadd.s f17, f11, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f11, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f11, f16, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x5752903e # load x3 with value 0x5752903e
sw x3, 0(x2) # store 0x5752903e in memory
flw f15, 0(x2) # load 0x5752903e from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fnmadd.s f23, f26, f15, f5, dyn # perform operation
fnmadd.s f23, f26, f15, f5, rdn # perform operation
fnmadd.s f23, f26, f15, f5, rmm # perform operation
fnmadd.s f23, f26, f15, f5, rne # perform operation
fnmadd.s f23, f26, f15, f5, rtz # perform operation
fnmadd.s f23, f26, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f26, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f26, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f26, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f26, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f26, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xa8260877 # load x3 with value 0xa8260877
sw x3, 0(x2) # store 0xa8260877 in memory
flw f6, 0(x2) # load 0xa8260877 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fnmadd.s f28, f23, f6, f15, dyn # perform operation
fnmadd.s f28, f23, f6, f15, rdn # perform operation
fnmadd.s f28, f23, f6, f15, rmm # perform operation
fnmadd.s f28, f23, f6, f15, rne # perform operation
fnmadd.s f28, f23, f6, f15, rtz # perform operation
fnmadd.s f28, f23, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f23, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f23, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xde1ba0dc # load x3 with value 0xde1ba0dc
sw x3, 0(x2) # store 0xde1ba0dc in memory
flw f17, 0(x2) # load 0xde1ba0dc from memory into f17
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fnmadd.s f3, f31, f17, f15, dyn # perform operation
fnmadd.s f3, f31, f17, f15, rdn # perform operation
fnmadd.s f3, f31, f17, f15, rmm # perform operation
fnmadd.s f3, f31, f17, f15, rne # perform operation
fnmadd.s f3, f31, f17, f15, rtz # perform operation
fnmadd.s f3, f31, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f31, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f31, f17, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0xb02d32e3 # load x3 with value 0xb02d32e3
sw x3, 0(x2) # store 0xb02d32e3 in memory
flw f3, 0(x2) # load 0xb02d32e3 from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fnmadd.s f18, f26, f3, f15, dyn # perform operation
fnmadd.s f18, f26, f3, f15, rdn # perform operation
fnmadd.s f18, f26, f3, f15, rmm # perform operation
fnmadd.s f18, f26, f3, f15, rne # perform operation
fnmadd.s f18, f26, f3, f15, rtz # perform operation
fnmadd.s f18, f26, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f26, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f26, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f26, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f26, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f26, f3, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x9599faf2 # load x3 with value 0x9599faf2
sw x3, 0(x2) # store 0x9599faf2 in memory
flw f16, 0(x2) # load 0x9599faf2 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fnmadd.s f26, f27, f16, f11, dyn # perform operation
fnmadd.s f26, f27, f16, f11, rdn # perform operation
fnmadd.s f26, f27, f16, f11, rmm # perform operation
fnmadd.s f26, f27, f16, f11, rne # perform operation
fnmadd.s f26, f27, f16, f11, rtz # perform operation
fnmadd.s f26, f27, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f27, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f27, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f27, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f27, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f27, f16, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x3fa7e606 # load x3 with value 0x3fa7e606
sw x3, 0(x2) # store 0x3fa7e606 in memory
flw f23, 0(x2) # load 0x3fa7e606 from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fnmadd.s f14, f29, f23, f31, dyn # perform operation
fnmadd.s f14, f29, f23, f31, rdn # perform operation
fnmadd.s f14, f29, f23, f31, rmm # perform operation
fnmadd.s f14, f29, f23, f31, rne # perform operation
fnmadd.s f14, f29, f23, f31, rtz # perform operation
fnmadd.s f14, f29, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x36523148 # load x3 with value 0x36523148
sw x3, 0(x2) # store 0x36523148 in memory
flw f7, 0(x2) # load 0x36523148 from memory into f7
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fnmadd.s f5, f24, f7, f11, dyn # perform operation
fnmadd.s f5, f24, f7, f11, rdn # perform operation
fnmadd.s f5, f24, f7, f11, rmm # perform operation
fnmadd.s f5, f24, f7, f11, rne # perform operation
fnmadd.s f5, f24, f7, f11, rtz # perform operation
fnmadd.s f5, f24, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f24, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f24, f7, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xd80a904d # load x3 with value 0xd80a904d
sw x3, 0(x2) # store 0xd80a904d in memory
flw f20, 0(x2) # load 0xd80a904d from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f11, f19, f20, f7, dyn # perform operation
fnmadd.s f11, f19, f20, f7, rdn # perform operation
fnmadd.s f11, f19, f20, f7, rmm # perform operation
fnmadd.s f11, f19, f20, f7, rne # perform operation
fnmadd.s f11, f19, f20, f7, rtz # perform operation
fnmadd.s f11, f19, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f19, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f19, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
la x2, scratch
li x3, 0x6e608d73 # load x3 with value 0x6e608d73
sw x3, 0(x2) # store 0x6e608d73 in memory
flw f22, 0(x2) # load 0x6e608d73 from memory into f22
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fnmadd.s f18, f27, f22, f3, dyn # perform operation
fnmadd.s f18, f27, f22, f3, rdn # perform operation
fnmadd.s f18, f27, f22, f3, rmm # perform operation
fnmadd.s f18, f27, f22, f3, rne # perform operation
fnmadd.s f18, f27, f22, f3, rtz # perform operation
fnmadd.s f18, f27, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f27, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x57ec3c5a # load x3 with value 0x57ec3c5a
sw x3, 0(x2) # store 0x57ec3c5a in memory
flw f15, 0(x2) # load 0x57ec3c5a from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fnmadd.s f23, f31, f15, f26, dyn # perform operation
fnmadd.s f23, f31, f15, f26, rdn # perform operation
fnmadd.s f23, f31, f15, f26, rmm # perform operation
fnmadd.s f23, f31, f15, f26, rne # perform operation
fnmadd.s f23, f31, f15, f26, rtz # perform operation
fnmadd.s f23, f31, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f31, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f31, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f31, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f31, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f31, f15, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
la x2, scratch
li x3, 0xa9af8913 # load x3 with value 0xa9af8913
sw x3, 0(x2) # store 0xa9af8913 in memory
flw f18, 0(x2) # load 0xa9af8913 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fnmadd.s f21, f6, f18, f27, dyn # perform operation
fnmadd.s f21, f6, f18, f27, rdn # perform operation
fnmadd.s f21, f6, f18, f27, rmm # perform operation
fnmadd.s f21, f6, f18, f27, rne # perform operation
fnmadd.s f21, f6, f18, f27, rtz # perform operation
fnmadd.s f21, f6, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f6, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f6, f18, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x0c1b33b9 # load x3 with value 0x0c1b33b9
sw x3, 0(x2) # store 0x0c1b33b9 in memory
flw f28, 0(x2) # load 0x0c1b33b9 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
fnmadd.s f23, f1, f28, f26, dyn # perform operation
fnmadd.s f23, f1, f28, f26, rdn # perform operation
fnmadd.s f23, f1, f28, f26, rmm # perform operation
fnmadd.s f23, f1, f28, f26, rne # perform operation
fnmadd.s f23, f1, f28, f26, rtz # perform operation
fnmadd.s f23, f1, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f1, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f1, f28, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xc232c5d1 # load x3 with value 0xc232c5d1
sw x3, 0(x2) # store 0xc232c5d1 in memory
flw f30, 0(x2) # load 0xc232c5d1 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fnmadd.s f12, f22, f30, f29, dyn # perform operation
fnmadd.s f12, f22, f30, f29, rdn # perform operation
fnmadd.s f12, f22, f30, f29, rmm # perform operation
fnmadd.s f12, f22, f30, f29, rne # perform operation
fnmadd.s f12, f22, f30, f29, rtz # perform operation
fnmadd.s f12, f22, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f22, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f22, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f22, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f22, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f22, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xc97db1a2 # load x3 with value 0xc97db1a2
sw x3, 0(x2) # store 0xc97db1a2 in memory
flw f6, 0(x2) # load 0xc97db1a2 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
fnmadd.s f30, f20, f6, f11, dyn # perform operation
fnmadd.s f30, f20, f6, f11, rdn # perform operation
fnmadd.s f30, f20, f6, f11, rmm # perform operation
fnmadd.s f30, f20, f6, f11, rne # perform operation
fnmadd.s f30, f20, f6, f11, rtz # perform operation
fnmadd.s f30, f20, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f30, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f30, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f30, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f30, f20, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f30, f20, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xf8f14a75 # load x3 with value 0xf8f14a75
sw x3, 0(x2) # store 0xf8f14a75 in memory
flw f12, 0(x2) # load 0xf8f14a75 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fnmadd.s f2, f13, f12, f30, dyn # perform operation
fnmadd.s f2, f13, f12, f30, rdn # perform operation
fnmadd.s f2, f13, f12, f30, rmm # perform operation
fnmadd.s f2, f13, f12, f30, rne # perform operation
fnmadd.s f2, f13, f12, f30, rtz # perform operation
fnmadd.s f2, f13, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f2, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f2, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f2, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f2, f13, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f2, f13, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0xd86916c9 # load x3 with value 0xd86916c9
sw x3, 0(x2) # store 0xd86916c9 in memory
flw f1, 0(x2) # load 0xd86916c9 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fnmadd.s f5, f22, f1, f21, dyn # perform operation
fnmadd.s f5, f22, f1, f21, rdn # perform operation
fnmadd.s f5, f22, f1, f21, rmm # perform operation
fnmadd.s f5, f22, f1, f21, rne # perform operation
fnmadd.s f5, f22, f1, f21, rtz # perform operation
fnmadd.s f5, f22, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f22, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f22, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x6a7e9bc6 # load x3 with value 0x6a7e9bc6
sw x3, 0(x2) # store 0x6a7e9bc6 in memory
flw f20, 0(x2) # load 0x6a7e9bc6 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fnmadd.s f13, f12, f20, f28, dyn # perform operation
fnmadd.s f13, f12, f20, f28, rdn # perform operation
fnmadd.s f13, f12, f20, f28, rmm # perform operation
fnmadd.s f13, f12, f20, f28, rne # perform operation
fnmadd.s f13, f12, f20, f28, rtz # perform operation
fnmadd.s f13, f12, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f12, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f12, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x44e181b7 # load x3 with value 0x44e181b7
sw x3, 0(x2) # store 0x44e181b7 in memory
flw f23, 0(x2) # load 0x44e181b7 from memory into f23
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fnmadd.s f8, f9, f23, f12, dyn # perform operation
fnmadd.s f8, f9, f23, f12, rdn # perform operation
fnmadd.s f8, f9, f23, f12, rmm # perform operation
fnmadd.s f8, f9, f23, f12, rne # perform operation
fnmadd.s f8, f9, f23, f12, rtz # perform operation
fnmadd.s f8, f9, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f9, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f9, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f9, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f9, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f9, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xc59c263c # load x3 with value 0xc59c263c
sw x3, 0(x2) # store 0xc59c263c in memory
flw f3, 0(x2) # load 0xc59c263c from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fnmadd.s f31, f14, f3, f7, dyn # perform operation
fnmadd.s f31, f14, f3, f7, rdn # perform operation
fnmadd.s f31, f14, f3, f7, rmm # perform operation
fnmadd.s f31, f14, f3, f7, rne # perform operation
fnmadd.s f31, f14, f3, f7, rtz # perform operation
fnmadd.s f31, f14, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f14, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f14, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x88e8cde5 # load x3 with value 0x88e8cde5
sw x3, 0(x2) # store 0x88e8cde5 in memory
flw f1, 0(x2) # load 0x88e8cde5 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fnmadd.s f26, f10, f1, f5, dyn # perform operation
fnmadd.s f26, f10, f1, f5, rdn # perform operation
fnmadd.s f26, f10, f1, f5, rmm # perform operation
fnmadd.s f26, f10, f1, f5, rne # perform operation
fnmadd.s f26, f10, f1, f5, rtz # perform operation
fnmadd.s f26, f10, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f10, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f10, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x957b515e # load x3 with value 0x957b515e
sw x3, 0(x2) # store 0x957b515e in memory
flw f9, 0(x2) # load 0x957b515e from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fnmadd.s f13, f21, f9, f28, dyn # perform operation
fnmadd.s f13, f21, f9, f28, rdn # perform operation
fnmadd.s f13, f21, f9, f28, rmm # perform operation
fnmadd.s f13, f21, f9, f28, rne # perform operation
fnmadd.s f13, f21, f9, f28, rtz # perform operation
fnmadd.s f13, f21, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f21, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f21, f9, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x2781d87b # load x3 with value 0x2781d87b
sw x3, 0(x2) # store 0x2781d87b in memory
flw f13, 0(x2) # load 0x2781d87b from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fnmadd.s f6, f10, f13, f22, dyn # perform operation
fnmadd.s f6, f10, f13, f22, rdn # perform operation
fnmadd.s f6, f10, f13, f22, rmm # perform operation
fnmadd.s f6, f10, f13, f22, rne # perform operation
fnmadd.s f6, f10, f13, f22, rtz # perform operation
fnmadd.s f6, f10, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f6, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f6, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f6, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f6, f10, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f6, f10, f13, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xe3343498 # load x3 with value 0xe3343498
sw x3, 0(x2) # store 0xe3343498 in memory
flw f8, 0(x2) # load 0xe3343498 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fnmadd.s f31, f11, f8, f13, dyn # perform operation
fnmadd.s f31, f11, f8, f13, rdn # perform operation
fnmadd.s f31, f11, f8, f13, rmm # perform operation
fnmadd.s f31, f11, f8, f13, rne # perform operation
fnmadd.s f31, f11, f8, f13, rtz # perform operation
fnmadd.s f31, f11, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f11, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f11, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f11, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f11, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f11, f8, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x1d0b5c89 # load x3 with value 0x1d0b5c89
sw x3, 0(x2) # store 0x1d0b5c89 in memory
flw f12, 0(x2) # load 0x1d0b5c89 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fnmadd.s f13, f2, f12, f3, dyn # perform operation
fnmadd.s f13, f2, f12, f3, rdn # perform operation
fnmadd.s f13, f2, f12, f3, rmm # perform operation
fnmadd.s f13, f2, f12, f3, rne # perform operation
fnmadd.s f13, f2, f12, f3, rtz # perform operation
fnmadd.s f13, f2, f12, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f2, f12, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f2, f12, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x4a17a32d # load x3 with value 0x4a17a32d
sw x3, 0(x2) # store 0x4a17a32d in memory
flw f22, 0(x2) # load 0x4a17a32d from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fnmadd.s f24, f18, f22, f11, dyn # perform operation
fnmadd.s f24, f18, f22, f11, rdn # perform operation
fnmadd.s f24, f18, f22, f11, rmm # perform operation
fnmadd.s f24, f18, f22, f11, rne # perform operation
fnmadd.s f24, f18, f22, f11, rtz # perform operation
fnmadd.s f24, f18, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f18, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f18, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xa029fb19 # load x3 with value 0xa029fb19
sw x3, 0(x2) # store 0xa029fb19 in memory
flw f7, 0(x2) # load 0xa029fb19 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fnmadd.s f28, f16, f7, f30, dyn # perform operation
fnmadd.s f28, f16, f7, f30, rdn # perform operation
fnmadd.s f28, f16, f7, f30, rmm # perform operation
fnmadd.s f28, f16, f7, f30, rne # perform operation
fnmadd.s f28, f16, f7, f30, rtz # perform operation
fnmadd.s f28, f16, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f16, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x3f8eca10 # load x3 with value 0x3f8eca10
sw x3, 0(x2) # store 0x3f8eca10 in memory
flw f29, 0(x2) # load 0x3f8eca10 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fnmadd.s f14, f8, f29, f30, dyn # perform operation
fnmadd.s f14, f8, f29, f30, rdn # perform operation
fnmadd.s f14, f8, f29, f30, rmm # perform operation
fnmadd.s f14, f8, f29, f30, rne # perform operation
fnmadd.s f14, f8, f29, f30, rtz # perform operation
fnmadd.s f14, f8, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f8, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f8, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xea1e9b20 # load x3 with value 0xea1e9b20
sw x3, 0(x2) # store 0xea1e9b20 in memory
flw f28, 0(x2) # load 0xea1e9b20 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
fnmadd.s f5, f8, f28, f14, dyn # perform operation
fnmadd.s f5, f8, f28, f14, rdn # perform operation
fnmadd.s f5, f8, f28, f14, rmm # perform operation
fnmadd.s f5, f8, f28, f14, rne # perform operation
fnmadd.s f5, f8, f28, f14, rtz # perform operation
fnmadd.s f5, f8, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f8, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f8, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f8, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f8, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f8, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0xcaf7f64c # load x3 with value 0xcaf7f64c
sw x3, 0(x2) # store 0xcaf7f64c in memory
flw f7, 0(x2) # load 0xcaf7f64c from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fnmadd.s f11, f17, f7, f26, dyn # perform operation
fnmadd.s f11, f17, f7, f26, rdn # perform operation
fnmadd.s f11, f17, f7, f26, rmm # perform operation
fnmadd.s f11, f17, f7, f26, rne # perform operation
fnmadd.s f11, f17, f7, f26, rtz # perform operation
fnmadd.s f11, f17, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f11, f17, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f11, f17, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f11, f17, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f11, f17, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f11, f17, f7, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xf6d8c03c # load x3 with value 0xf6d8c03c
sw x3, 0(x2) # store 0xf6d8c03c in memory
flw f9, 0(x2) # load 0xf6d8c03c from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fnmadd.s f10, f22, f9, f1, dyn # perform operation
fnmadd.s f10, f22, f9, f1, rdn # perform operation
fnmadd.s f10, f22, f9, f1, rmm # perform operation
fnmadd.s f10, f22, f9, f1, rne # perform operation
fnmadd.s f10, f22, f9, f1, rtz # perform operation
fnmadd.s f10, f22, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f22, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f22, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f22, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f22, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f22, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xbd53101e # load x3 with value 0xbd53101e
sw x3, 0(x2) # store 0xbd53101e in memory
flw f7, 0(x2) # load 0xbd53101e from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
fnmadd.s f22, f21, f7, f6, dyn # perform operation
fnmadd.s f22, f21, f7, f6, rdn # perform operation
fnmadd.s f22, f21, f7, f6, rmm # perform operation
fnmadd.s f22, f21, f7, f6, rne # perform operation
fnmadd.s f22, f21, f7, f6, rtz # perform operation
fnmadd.s f22, f21, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f21, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
la x2, scratch
li x3, 0x2a1c99b7 # load x3 with value 0x2a1c99b7
sw x3, 0(x2) # store 0x2a1c99b7 in memory
flw f1, 0(x2) # load 0x2a1c99b7 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fnmadd.s f25, f15, f1, f10, dyn # perform operation
fnmadd.s f25, f15, f1, f10, rdn # perform operation
fnmadd.s f25, f15, f1, f10, rmm # perform operation
fnmadd.s f25, f15, f1, f10, rne # perform operation
fnmadd.s f25, f15, f1, f10, rtz # perform operation
fnmadd.s f25, f15, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f15, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f15, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xd2cac988 # load x3 with value 0xd2cac988
sw x3, 0(x2) # store 0xd2cac988 in memory
flw f9, 0(x2) # load 0xd2cac988 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fnmadd.s f7, f24, f9, f14, dyn # perform operation
fnmadd.s f7, f24, f9, f14, rdn # perform operation
fnmadd.s f7, f24, f9, f14, rmm # perform operation
fnmadd.s f7, f24, f9, f14, rne # perform operation
fnmadd.s f7, f24, f9, f14, rtz # perform operation
fnmadd.s f7, f24, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f7, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f7, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f7, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f7, f24, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f7, f24, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xe2a8ac16 # load x3 with value 0xe2a8ac16
sw x3, 0(x2) # store 0xe2a8ac16 in memory
flw f30, 0(x2) # load 0xe2a8ac16 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fnmadd.s f18, f21, f30, f23, dyn # perform operation
fnmadd.s f18, f21, f30, f23, rdn # perform operation
fnmadd.s f18, f21, f30, f23, rmm # perform operation
fnmadd.s f18, f21, f30, f23, rne # perform operation
fnmadd.s f18, f21, f30, f23, rtz # perform operation
fnmadd.s f18, f21, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f18, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f18, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f18, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f18, f21, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f18, f21, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x3aedc3c8 # load x3 with value 0x3aedc3c8
sw x3, 0(x2) # store 0x3aedc3c8 in memory
flw f19, 0(x2) # load 0x3aedc3c8 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fnmadd.s f20, f14, f19, f13, dyn # perform operation
fnmadd.s f20, f14, f19, f13, rdn # perform operation
fnmadd.s f20, f14, f19, f13, rmm # perform operation
fnmadd.s f20, f14, f19, f13, rne # perform operation
fnmadd.s f20, f14, f19, f13, rtz # perform operation
fnmadd.s f20, f14, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f14, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f14, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x274efe76 # load x3 with value 0x274efe76
sw x3, 0(x2) # store 0x274efe76 in memory
flw f20, 0(x2) # load 0x274efe76 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
fnmadd.s f3, f30, f20, f5, dyn # perform operation
fnmadd.s f3, f30, f20, f5, rdn # perform operation
fnmadd.s f3, f30, f20, f5, rmm # perform operation
fnmadd.s f3, f30, f20, f5, rne # perform operation
fnmadd.s f3, f30, f20, f5, rtz # perform operation
fnmadd.s f3, f30, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f30, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f30, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f30, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f30, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f30, f20, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xa4d1999b # load x3 with value 0xa4d1999b
sw x3, 0(x2) # store 0xa4d1999b in memory
flw f29, 0(x2) # load 0xa4d1999b from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fnmadd.s f17, f24, f29, f11, dyn # perform operation
fnmadd.s f17, f24, f29, f11, rdn # perform operation
fnmadd.s f17, f24, f29, f11, rmm # perform operation
fnmadd.s f17, f24, f29, f11, rne # perform operation
fnmadd.s f17, f24, f29, f11, rtz # perform operation
fnmadd.s f17, f24, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f17, f24, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f17, f24, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f17, f24, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f17, f24, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f17, f24, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xa19a0dea # load x3 with value 0xa19a0dea
sw x3, 0(x2) # store 0xa19a0dea in memory
flw f25, 0(x2) # load 0xa19a0dea from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fnmadd.s f22, f20, f25, f16, dyn # perform operation
fnmadd.s f22, f20, f25, f16, rdn # perform operation
fnmadd.s f22, f20, f25, f16, rmm # perform operation
fnmadd.s f22, f20, f25, f16, rne # perform operation
fnmadd.s f22, f20, f25, f16, rtz # perform operation
fnmadd.s f22, f20, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f20, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f20, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x2b078896 # load x3 with value 0x2b078896
sw x3, 0(x2) # store 0x2b078896 in memory
flw f28, 0(x2) # load 0x2b078896 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fnmadd.s f3, f1, f28, f15, dyn # perform operation
fnmadd.s f3, f1, f28, f15, rdn # perform operation
fnmadd.s f3, f1, f28, f15, rmm # perform operation
fnmadd.s f3, f1, f28, f15, rne # perform operation
fnmadd.s f3, f1, f28, f15, rtz # perform operation
fnmadd.s f3, f1, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f1, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f1, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x33ec274f # load x3 with value 0x33ec274f
sw x3, 0(x2) # store 0x33ec274f in memory
flw f15, 0(x2) # load 0x33ec274f from memory into f15
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fnmadd.s f3, f12, f15, f24, dyn # perform operation
fnmadd.s f3, f12, f15, f24, rdn # perform operation
fnmadd.s f3, f12, f15, f24, rmm # perform operation
fnmadd.s f3, f12, f15, f24, rne # perform operation
fnmadd.s f3, f12, f15, f24, rtz # perform operation
fnmadd.s f3, f12, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f12, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f12, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x945b3295 # load x3 with value 0x945b3295
sw x3, 0(x2) # store 0x945b3295 in memory
flw f2, 0(x2) # load 0x945b3295 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fnmadd.s f10, f21, f2, f20, dyn # perform operation
fnmadd.s f10, f21, f2, f20, rdn # perform operation
fnmadd.s f10, f21, f2, f20, rmm # perform operation
fnmadd.s f10, f21, f2, f20, rne # perform operation
fnmadd.s f10, f21, f2, f20, rtz # perform operation
fnmadd.s f10, f21, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f21, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f21, f2, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xa128c52d # load x3 with value 0xa128c52d
sw x3, 0(x2) # store 0xa128c52d in memory
flw f3, 0(x2) # load 0xa128c52d from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fnmadd.s f20, f12, f3, f16, dyn # perform operation
fnmadd.s f20, f12, f3, f16, rdn # perform operation
fnmadd.s f20, f12, f3, f16, rmm # perform operation
fnmadd.s f20, f12, f3, f16, rne # perform operation
fnmadd.s f20, f12, f3, f16, rtz # perform operation
fnmadd.s f20, f12, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f12, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f12, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f12, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f12, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f12, f3, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xbcf7d4a0 # load x3 with value 0xbcf7d4a0
sw x3, 0(x2) # store 0xbcf7d4a0 in memory
flw f15, 0(x2) # load 0xbcf7d4a0 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fnmadd.s f9, f11, f15, f12, dyn # perform operation
fnmadd.s f9, f11, f15, f12, rdn # perform operation
fnmadd.s f9, f11, f15, f12, rmm # perform operation
fnmadd.s f9, f11, f15, f12, rne # perform operation
fnmadd.s f9, f11, f15, f12, rtz # perform operation
fnmadd.s f9, f11, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f11, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f11, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x078a357b # load x3 with value 0x078a357b
sw x3, 0(x2) # store 0x078a357b in memory
flw f17, 0(x2) # load 0x078a357b from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fnmadd.s f22, f18, f17, f14, dyn # perform operation
fnmadd.s f22, f18, f17, f14, rdn # perform operation
fnmadd.s f22, f18, f17, f14, rmm # perform operation
fnmadd.s f22, f18, f17, f14, rne # perform operation
fnmadd.s f22, f18, f17, f14, rtz # perform operation
fnmadd.s f22, f18, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f18, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f18, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f18, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f18, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f18, f17, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x53a249d0 # load x3 with value 0x53a249d0
sw x3, 0(x2) # store 0x53a249d0 in memory
flw f23, 0(x2) # load 0x53a249d0 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fnmadd.s f28, f20, f23, f11, dyn # perform operation
fnmadd.s f28, f20, f23, f11, rdn # perform operation
fnmadd.s f28, f20, f23, f11, rmm # perform operation
fnmadd.s f28, f20, f23, f11, rne # perform operation
fnmadd.s f28, f20, f23, f11, rtz # perform operation
fnmadd.s f28, f20, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f20, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f20, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x98ede05f # load x3 with value 0x98ede05f
sw x3, 0(x2) # store 0x98ede05f in memory
flw f22, 0(x2) # load 0x98ede05f from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fnmadd.s f12, f3, f22, f16, dyn # perform operation
fnmadd.s f12, f3, f22, f16, rdn # perform operation
fnmadd.s f12, f3, f22, f16, rmm # perform operation
fnmadd.s f12, f3, f22, f16, rne # perform operation
fnmadd.s f12, f3, f22, f16, rtz # perform operation
fnmadd.s f12, f3, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f12, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f12, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f12, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f12, f3, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f12, f3, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x288612f8 # load x3 with value 0x288612f8
sw x3, 0(x2) # store 0x288612f8 in memory
flw f7, 0(x2) # load 0x288612f8 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fnmadd.s f25, f14, f7, f27, dyn # perform operation
fnmadd.s f25, f14, f7, f27, rdn # perform operation
fnmadd.s f25, f14, f7, f27, rmm # perform operation
fnmadd.s f25, f14, f7, f27, rne # perform operation
fnmadd.s f25, f14, f7, f27, rtz # perform operation
fnmadd.s f25, f14, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f25, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f25, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f25, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f25, f14, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f25, f14, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0xda571ae0 # load x3 with value 0xda571ae0
sw x3, 0(x2) # store 0xda571ae0 in memory
flw f31, 0(x2) # load 0xda571ae0 from memory into f31
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fnmadd.s f3, f8, f31, f22, dyn # perform operation
fnmadd.s f3, f8, f31, f22, rdn # perform operation
fnmadd.s f3, f8, f31, f22, rmm # perform operation
fnmadd.s f3, f8, f31, f22, rne # perform operation
fnmadd.s f3, f8, f31, f22, rtz # perform operation
fnmadd.s f3, f8, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f3, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f3, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f3, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f3, f8, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f3, f8, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x8c60093d # load x3 with value 0x8c60093d
sw x3, 0(x2) # store 0x8c60093d in memory
flw f26, 0(x2) # load 0x8c60093d from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fnmadd.s f28, f3, f26, f2, dyn # perform operation
fnmadd.s f28, f3, f26, f2, rdn # perform operation
fnmadd.s f28, f3, f26, f2, rmm # perform operation
fnmadd.s f28, f3, f26, f2, rne # perform operation
fnmadd.s f28, f3, f26, f2, rtz # perform operation
fnmadd.s f28, f3, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f3, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f3, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x6a81063c # load x3 with value 0x6a81063c
sw x3, 0(x2) # store 0x6a81063c in memory
flw f20, 0(x2) # load 0x6a81063c from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fnmadd.s f28, f19, f20, f24, dyn # perform operation
fnmadd.s f28, f19, f20, f24, rdn # perform operation
fnmadd.s f28, f19, f20, f24, rmm # perform operation
fnmadd.s f28, f19, f20, f24, rne # perform operation
fnmadd.s f28, f19, f20, f24, rtz # perform operation
fnmadd.s f28, f19, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f19, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x1f52445c # load x3 with value 0x1f52445c
sw x3, 0(x2) # store 0x1f52445c in memory
flw f13, 0(x2) # load 0x1f52445c from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fnmadd.s f14, f9, f13, f30, dyn # perform operation
fnmadd.s f14, f9, f13, f30, rdn # perform operation
fnmadd.s f14, f9, f13, f30, rmm # perform operation
fnmadd.s f14, f9, f13, f30, rne # perform operation
fnmadd.s f14, f9, f13, f30, rtz # perform operation
fnmadd.s f14, f9, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f9, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f9, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0xaee2485e # load x3 with value 0xaee2485e
sw x3, 0(x2) # store 0xaee2485e in memory
flw f12, 0(x2) # load 0xaee2485e from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fnmadd.s f24, f2, f12, f26, dyn # perform operation
fnmadd.s f24, f2, f12, f26, rdn # perform operation
fnmadd.s f24, f2, f12, f26, rmm # perform operation
fnmadd.s f24, f2, f12, f26, rne # perform operation
fnmadd.s f24, f2, f12, f26, rtz # perform operation
fnmadd.s f24, f2, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f24, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f24, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f24, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f24, f2, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f24, f2, f12, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0x8e106bcc # load x3 with value 0x8e106bcc
sw x3, 0(x2) # store 0x8e106bcc in memory
flw f1, 0(x2) # load 0x8e106bcc from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fnmadd.s f20, f23, f1, f21, dyn # perform operation
fnmadd.s f20, f23, f1, f21, rdn # perform operation
fnmadd.s f20, f23, f1, f21, rmm # perform operation
fnmadd.s f20, f23, f1, f21, rne # perform operation
fnmadd.s f20, f23, f1, f21, rtz # perform operation
fnmadd.s f20, f23, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f23, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f23, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xd6c224e3 # load x3 with value 0xd6c224e3
sw x3, 0(x2) # store 0xd6c224e3 in memory
flw f7, 0(x2) # load 0xd6c224e3 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fnmadd.s f22, f1, f7, f16, dyn # perform operation
fnmadd.s f22, f1, f7, f16, rdn # perform operation
fnmadd.s f22, f1, f7, f16, rmm # perform operation
fnmadd.s f22, f1, f7, f16, rne # perform operation
fnmadd.s f22, f1, f7, f16, rtz # perform operation
fnmadd.s f22, f1, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f22, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f22, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f22, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f22, f1, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f22, f1, f7, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x415612bf # load x3 with value 0x415612bf
sw x3, 0(x2) # store 0x415612bf in memory
flw f13, 0(x2) # load 0x415612bf from memory into f13
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fnmadd.s f1, f18, f13, f24, dyn # perform operation
fnmadd.s f1, f18, f13, f24, rdn # perform operation
fnmadd.s f1, f18, f13, f24, rmm # perform operation
fnmadd.s f1, f18, f13, f24, rne # perform operation
fnmadd.s f1, f18, f13, f24, rtz # perform operation
fnmadd.s f1, f18, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f18, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f18, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0xaed8e624 # load x3 with value 0xaed8e624
sw x3, 0(x2) # store 0xaed8e624 in memory
flw f6, 0(x2) # load 0xaed8e624 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fnmadd.s f26, f3, f6, f27, dyn # perform operation
fnmadd.s f26, f3, f6, f27, rdn # perform operation
fnmadd.s f26, f3, f6, f27, rmm # perform operation
fnmadd.s f26, f3, f6, f27, rne # perform operation
fnmadd.s f26, f3, f6, f27, rtz # perform operation
fnmadd.s f26, f3, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f3, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0xba12ebca # load x3 with value 0xba12ebca
sw x3, 0(x2) # store 0xba12ebca in memory
flw f7, 0(x2) # load 0xba12ebca from memory into f7
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fnmadd.s f5, f31, f7, f12, dyn # perform operation
fnmadd.s f5, f31, f7, f12, rdn # perform operation
fnmadd.s f5, f31, f7, f12, rmm # perform operation
fnmadd.s f5, f31, f7, f12, rne # perform operation
fnmadd.s f5, f31, f7, f12, rtz # perform operation
fnmadd.s f5, f31, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f5, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f5, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f5, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f5, f31, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f5, f31, f7, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x1e508443 # load x3 with value 0x1e508443
sw x3, 0(x2) # store 0x1e508443 in memory
flw f5, 0(x2) # load 0x1e508443 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fnmadd.s f28, f27, f5, f29, dyn # perform operation
fnmadd.s f28, f27, f5, f29, rdn # perform operation
fnmadd.s f28, f27, f5, f29, rmm # perform operation
fnmadd.s f28, f27, f5, f29, rne # perform operation
fnmadd.s f28, f27, f5, f29, rtz # perform operation
fnmadd.s f28, f27, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f28, f27, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f28, f27, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f28, f27, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f28, f27, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f28, f27, f5, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x361c814a # load x3 with value 0x361c814a
sw x3, 0(x2) # store 0x361c814a in memory
flw f8, 0(x2) # load 0x361c814a from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fnmadd.s f10, f14, f8, f28, dyn # perform operation
fnmadd.s f10, f14, f8, f28, rdn # perform operation
fnmadd.s f10, f14, f8, f28, rmm # perform operation
fnmadd.s f10, f14, f8, f28, rne # perform operation
fnmadd.s f10, f14, f8, f28, rtz # perform operation
fnmadd.s f10, f14, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f10, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f10, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f10, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f10, f14, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f10, f14, f8, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xfa15db01 # load x3 with value 0xfa15db01
sw x3, 0(x2) # store 0xfa15db01 in memory
flw f29, 0(x2) # load 0xfa15db01 from memory into f29
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fnmadd.s f9, f23, f29, f11, dyn # perform operation
fnmadd.s f9, f23, f29, f11, rdn # perform operation
fnmadd.s f9, f23, f29, f11, rmm # perform operation
fnmadd.s f9, f23, f29, f11, rne # perform operation
fnmadd.s f9, f23, f29, f11, rtz # perform operation
fnmadd.s f9, f23, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f23, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f23, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xc25bac82 # load x3 with value 0xc25bac82
sw x3, 0(x2) # store 0xc25bac82 in memory
flw f18, 0(x2) # load 0xc25bac82 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fnmadd.s f21, f17, f18, f5, dyn # perform operation
fnmadd.s f21, f17, f18, f5, rdn # perform operation
fnmadd.s f21, f17, f18, f5, rmm # perform operation
fnmadd.s f21, f17, f18, f5, rne # perform operation
fnmadd.s f21, f17, f18, f5, rtz # perform operation
fnmadd.s f21, f17, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f21, f17, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f21, f17, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f21, f17, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f21, f17, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f21, f17, f18, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x8f9f936c # load x3 with value 0x8f9f936c
sw x3, 0(x2) # store 0x8f9f936c in memory
flw f30, 0(x2) # load 0x8f9f936c from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fnmadd.s f31, f7, f30, f24, dyn # perform operation
fnmadd.s f31, f7, f30, f24, rdn # perform operation
fnmadd.s f31, f7, f30, f24, rmm # perform operation
fnmadd.s f31, f7, f30, f24, rne # perform operation
fnmadd.s f31, f7, f30, f24, rtz # perform operation
fnmadd.s f31, f7, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f31, f7, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f31, f7, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f31, f7, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f31, f7, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f31, f7, f30, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
la x2, scratch
li x3, 0x7c414905 # load x3 with value 0x7c414905
sw x3, 0(x2) # store 0x7c414905 in memory
flw f3, 0(x2) # load 0x7c414905 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fnmadd.s f8, f12, f3, f14, dyn # perform operation
fnmadd.s f8, f12, f3, f14, rdn # perform operation
fnmadd.s f8, f12, f3, f14, rmm # perform operation
fnmadd.s f8, f12, f3, f14, rne # perform operation
fnmadd.s f8, f12, f3, f14, rtz # perform operation
fnmadd.s f8, f12, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f8, f12, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f8, f12, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f8, f12, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f8, f12, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f8, f12, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x823cd0ea # load x3 with value 0x823cd0ea
sw x3, 0(x2) # store 0x823cd0ea in memory
flw f30, 0(x2) # load 0x823cd0ea from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fnmadd.s f23, f16, f30, f7, dyn # perform operation
fnmadd.s f23, f16, f30, f7, rdn # perform operation
fnmadd.s f23, f16, f30, f7, rmm # perform operation
fnmadd.s f23, f16, f30, f7, rne # perform operation
fnmadd.s f23, f16, f30, f7, rtz # perform operation
fnmadd.s f23, f16, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f23, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f23, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f23, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f23, f16, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f23, f16, f30, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0xa0e67a50 # load x3 with value 0xa0e67a50
sw x3, 0(x2) # store 0xa0e67a50 in memory
flw f8, 0(x2) # load 0xa0e67a50 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fnmadd.s f20, f3, f8, f27, dyn # perform operation
fnmadd.s f20, f3, f8, f27, rdn # perform operation
fnmadd.s f20, f3, f8, f27, rmm # perform operation
fnmadd.s f20, f3, f8, f27, rne # perform operation
fnmadd.s f20, f3, f8, f27, rtz # perform operation
fnmadd.s f20, f3, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f3, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f3, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f3, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f3, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f3, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x74fa5ff0 # load x3 with value 0x74fa5ff0
sw x3, 0(x2) # store 0x74fa5ff0 in memory
flw f23, 0(x2) # load 0x74fa5ff0 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fnmadd.s f14, f29, f23, f3, dyn # perform operation
fnmadd.s f14, f29, f23, f3, rdn # perform operation
fnmadd.s f14, f29, f23, f3, rmm # perform operation
fnmadd.s f14, f29, f23, f3, rne # perform operation
fnmadd.s f14, f29, f23, f3, rtz # perform operation
fnmadd.s f14, f29, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f14, f29, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f14, f29, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f14, f29, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f14, f29, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f14, f29, f23, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x38cf1491 # load x3 with value 0x38cf1491
sw x3, 0(x2) # store 0x38cf1491 in memory
flw f8, 0(x2) # load 0x38cf1491 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
fnmadd.s f20, f27, f8, f23, dyn # perform operation
fnmadd.s f20, f27, f8, f23, rdn # perform operation
fnmadd.s f20, f27, f8, f23, rmm # perform operation
fnmadd.s f20, f27, f8, f23, rne # perform operation
fnmadd.s f20, f27, f8, f23, rtz # perform operation
fnmadd.s f20, f27, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f20, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f20, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f20, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f20, f27, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f20, f27, f8, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x09e634e5 # load x3 with value 0x09e634e5
sw x3, 0(x2) # store 0x09e634e5 in memory
flw f23, 0(x2) # load 0x09e634e5 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fnmadd.s f1, f29, f23, f11, dyn # perform operation
fnmadd.s f1, f29, f23, f11, rdn # perform operation
fnmadd.s f1, f29, f23, f11, rmm # perform operation
fnmadd.s f1, f29, f23, f11, rne # perform operation
fnmadd.s f1, f29, f23, f11, rtz # perform operation
fnmadd.s f1, f29, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f1, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f1, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f1, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f1, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f1, f29, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0xcc5474df # load x3 with value 0xcc5474df
sw x3, 0(x2) # store 0xcc5474df in memory
flw f17, 0(x2) # load 0xcc5474df from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fnmadd.s f26, f30, f17, f27, dyn # perform operation
fnmadd.s f26, f30, f17, f27, rdn # perform operation
fnmadd.s f26, f30, f17, f27, rmm # perform operation
fnmadd.s f26, f30, f17, f27, rne # perform operation
fnmadd.s f26, f30, f17, f27, rtz # perform operation
fnmadd.s f26, f30, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f30, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f30, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f30, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f30, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f30, f17, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xa73dabbd # load x3 with value 0xa73dabbd
sw x3, 0(x2) # store 0xa73dabbd in memory
flw f18, 0(x2) # load 0xa73dabbd from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
fnmadd.s f13, f27, f18, f17, dyn # perform operation
fnmadd.s f13, f27, f18, f17, rdn # perform operation
fnmadd.s f13, f27, f18, f17, rmm # perform operation
fnmadd.s f13, f27, f18, f17, rne # perform operation
fnmadd.s f13, f27, f18, f17, rtz # perform operation
fnmadd.s f13, f27, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f13, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f13, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f13, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f13, f27, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f13, f27, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xfb2f8a1f # load x3 with value 0xfb2f8a1f
sw x3, 0(x2) # store 0xfb2f8a1f in memory
flw f11, 0(x2) # load 0xfb2f8a1f from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fnmadd.s f9, f29, f11, f24, dyn # perform operation
fnmadd.s f9, f29, f11, f24, rdn # perform operation
fnmadd.s f9, f29, f11, f24, rmm # perform operation
fnmadd.s f9, f29, f11, f24, rne # perform operation
fnmadd.s f9, f29, f11, f24, rtz # perform operation
fnmadd.s f9, f29, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f9, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f9, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f9, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f9, f29, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f9, f29, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x744782e1 # load x3 with value 0x744782e1
sw x3, 0(x2) # store 0x744782e1 in memory
flw f17, 0(x2) # load 0x744782e1 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fnmadd.s f26, f28, f17, f10, dyn # perform operation
fnmadd.s f26, f28, f17, f10, rdn # perform operation
fnmadd.s f26, f28, f17, f10, rmm # perform operation
fnmadd.s f26, f28, f17, f10, rne # perform operation
fnmadd.s f26, f28, f17, f10, rtz # perform operation
fnmadd.s f26, f28, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fnmadd.s f26, f28, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fnmadd.s f26, f28, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fnmadd.s f26, f28, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fnmadd.s f26, f28, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fnmadd.s f26, f28, f17, f10 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
