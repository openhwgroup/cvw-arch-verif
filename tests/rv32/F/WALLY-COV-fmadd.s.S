///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv32/F//WALLY-COV-fmadd.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:21.201711
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fmadd.s f3, f23, f31, f10 # perform first operation
fmadd.s f18, f3, f8, f20 # perform second operation

# Testcase cmp_gpr_hazard raw test
fmadd.s f16, f3, f15, f5 # perform first operation
fmadd.s f1, f26, f16, f23 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmadd.s f27, f3, f7, f28 # perform first operation
fmadd.s f27, f12, f20, f9 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmadd.s f7, f30, f31, f28 # perform first operation
fmadd.s f7, f27, f26, f28 # perform second operation

# Testcase cmp_gpr_hazard war test
fmadd.s f5, f13, f17, f24 # perform first operation
fmadd.s f13, f30, f10, f5 # perform second operation

# Testcase cmp_gpr_hazard war test
fmadd.s f1, f26, f25, f28 # perform first operation
fmadd.s f25, f1, f2, f25 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xe05f3bc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1d9866e # load x3 with value 0xa1d9866e
sw x3, 0(x2) # store 0xa1d9866e in memory
flw f0, 0(x2) # load 0xa1d9866e from memory into f0
li x3, 0x7ec5aff4 # load x3 with value 0x7ec5aff4
sw x3, 0(x2) # store 0x7ec5aff4 in memory
flw f27, 0(x2) # load 0x7ec5aff4 from memory into f27
li x3, 0x149c6ce0 # load x3 with value 0x149c6ce0
sw x3, 0(x2) # store 0x149c6ce0 in memory
flw f25, 0(x2) # load 0x149c6ce0 from memory into f25
fmadd.s f0, f0, f27, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x468af85c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6429c39 # load x3 with value 0xb6429c39
sw x3, 0(x2) # store 0xb6429c39 in memory
flw f1, 0(x2) # load 0xb6429c39 from memory into f1
li x3, 0xe5f94044 # load x3 with value 0xe5f94044
sw x3, 0(x2) # store 0xe5f94044 in memory
flw f28, 0(x2) # load 0xe5f94044 from memory into f28
li x3, 0x5208fbab # load x3 with value 0x5208fbab
sw x3, 0(x2) # store 0x5208fbab in memory
flw f15, 0(x2) # load 0x5208fbab from memory into f15
fmadd.s f1, f1, f28, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0xeb2b3273 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e8349ef # load x3 with value 0x9e8349ef
sw x3, 0(x2) # store 0x9e8349ef in memory
flw f2, 0(x2) # load 0x9e8349ef from memory into f2
li x3, 0xca0658e9 # load x3 with value 0xca0658e9
sw x3, 0(x2) # store 0xca0658e9 in memory
flw f12, 0(x2) # load 0xca0658e9 from memory into f12
li x3, 0x87e4345e # load x3 with value 0x87e4345e
sw x3, 0(x2) # store 0x87e4345e in memory
flw f23, 0(x2) # load 0x87e4345e from memory into f23
fmadd.s f2, f2, f12, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x4da59e73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa17195a # load x3 with value 0xfa17195a
sw x3, 0(x2) # store 0xfa17195a in memory
flw f3, 0(x2) # load 0xfa17195a from memory into f3
li x3, 0xa3500940 # load x3 with value 0xa3500940
sw x3, 0(x2) # store 0xa3500940 in memory
flw f10, 0(x2) # load 0xa3500940 from memory into f10
li x3, 0xdac24ab9 # load x3 with value 0xdac24ab9
sw x3, 0(x2) # store 0xdac24ab9 in memory
flw f7, 0(x2) # load 0xdac24ab9 from memory into f7
fmadd.s f3, f3, f10, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0xa7e74844 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5b1c259 # load x3 with value 0xd5b1c259
sw x3, 0(x2) # store 0xd5b1c259 in memory
flw f4, 0(x2) # load 0xd5b1c259 from memory into f4
li x3, 0xabf0047e # load x3 with value 0xabf0047e
sw x3, 0(x2) # store 0xabf0047e in memory
flw f9, 0(x2) # load 0xabf0047e from memory into f9
li x3, 0xdbd9f55b # load x3 with value 0xdbd9f55b
sw x3, 0(x2) # store 0xdbd9f55b in memory
flw f7, 0(x2) # load 0xdbd9f55b from memory into f7
fmadd.s f4, f4, f9, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x944a6493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb9706d67 # load x3 with value 0xb9706d67
sw x3, 0(x2) # store 0xb9706d67 in memory
flw f5, 0(x2) # load 0xb9706d67 from memory into f5
li x3, 0x46cc2967 # load x3 with value 0x46cc2967
sw x3, 0(x2) # store 0x46cc2967 in memory
flw f20, 0(x2) # load 0x46cc2967 from memory into f20
li x3, 0x29c45a13 # load x3 with value 0x29c45a13
sw x3, 0(x2) # store 0x29c45a13 in memory
flw f6, 0(x2) # load 0x29c45a13 from memory into f6
fmadd.s f5, f5, f20, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xf7b83991 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe6d5f0d4 # load x3 with value 0xe6d5f0d4
sw x3, 0(x2) # store 0xe6d5f0d4 in memory
flw f6, 0(x2) # load 0xe6d5f0d4 from memory into f6
li x3, 0x232dab97 # load x3 with value 0x232dab97
sw x3, 0(x2) # store 0x232dab97 in memory
flw f4, 0(x2) # load 0x232dab97 from memory into f4
li x3, 0x943b9a32 # load x3 with value 0x943b9a32
sw x3, 0(x2) # store 0x943b9a32 in memory
flw f15, 0(x2) # load 0x943b9a32 from memory into f15
fmadd.s f6, f6, f4, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x2a1925c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03a8821b # load x3 with value 0x03a8821b
sw x3, 0(x2) # store 0x03a8821b in memory
flw f7, 0(x2) # load 0x03a8821b from memory into f7
li x3, 0x6988454e # load x3 with value 0x6988454e
sw x3, 0(x2) # store 0x6988454e in memory
flw f13, 0(x2) # load 0x6988454e from memory into f13
li x3, 0xc26e8961 # load x3 with value 0xc26e8961
sw x3, 0(x2) # store 0xc26e8961 in memory
flw f24, 0(x2) # load 0xc26e8961 from memory into f24
fmadd.s f7, f7, f13, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x6191acb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d38561e # load x3 with value 0x5d38561e
sw x3, 0(x2) # store 0x5d38561e in memory
flw f8, 0(x2) # load 0x5d38561e from memory into f8
li x3, 0x9fee6e97 # load x3 with value 0x9fee6e97
sw x3, 0(x2) # store 0x9fee6e97 in memory
flw f20, 0(x2) # load 0x9fee6e97 from memory into f20
li x3, 0x12ef8c45 # load x3 with value 0x12ef8c45
sw x3, 0(x2) # store 0x12ef8c45 in memory
flw f8, 0(x2) # load 0x12ef8c45 from memory into f8
fmadd.s f8, f8, f20, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x1c1564fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x91f645f2 # load x3 with value 0x91f645f2
sw x3, 0(x2) # store 0x91f645f2 in memory
flw f9, 0(x2) # load 0x91f645f2 from memory into f9
li x3, 0x4ba48602 # load x3 with value 0x4ba48602
sw x3, 0(x2) # store 0x4ba48602 in memory
flw f2, 0(x2) # load 0x4ba48602 from memory into f2
li x3, 0xf171961e # load x3 with value 0xf171961e
sw x3, 0(x2) # store 0xf171961e in memory
flw f13, 0(x2) # load 0xf171961e from memory into f13
fmadd.s f9, f9, f2, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0xf1823760 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5613d161 # load x3 with value 0x5613d161
sw x3, 0(x2) # store 0x5613d161 in memory
flw f10, 0(x2) # load 0x5613d161 from memory into f10
li x3, 0x4d0369a7 # load x3 with value 0x4d0369a7
sw x3, 0(x2) # store 0x4d0369a7 in memory
flw f3, 0(x2) # load 0x4d0369a7 from memory into f3
li x3, 0x357c2046 # load x3 with value 0x357c2046
sw x3, 0(x2) # store 0x357c2046 in memory
flw f18, 0(x2) # load 0x357c2046 from memory into f18
fmadd.s f10, f10, f3, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x553aa64b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x515823d2 # load x3 with value 0x515823d2
sw x3, 0(x2) # store 0x515823d2 in memory
flw f11, 0(x2) # load 0x515823d2 from memory into f11
li x3, 0xa6a6b178 # load x3 with value 0xa6a6b178
sw x3, 0(x2) # store 0xa6a6b178 in memory
flw f29, 0(x2) # load 0xa6a6b178 from memory into f29
li x3, 0xce789810 # load x3 with value 0xce789810
sw x3, 0(x2) # store 0xce789810 in memory
flw f6, 0(x2) # load 0xce789810 from memory into f6
fmadd.s f11, f11, f29, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0xba7f5ab3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x47b88f53 # load x3 with value 0x47b88f53
sw x3, 0(x2) # store 0x47b88f53 in memory
flw f12, 0(x2) # load 0x47b88f53 from memory into f12
li x3, 0x48fe93b1 # load x3 with value 0x48fe93b1
sw x3, 0(x2) # store 0x48fe93b1 in memory
flw f9, 0(x2) # load 0x48fe93b1 from memory into f9
li x3, 0x07ddc438 # load x3 with value 0x07ddc438
sw x3, 0(x2) # store 0x07ddc438 in memory
flw f3, 0(x2) # load 0x07ddc438 from memory into f3
fmadd.s f12, f12, f9, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0xf8cee5c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x72d5277c # load x3 with value 0x72d5277c
sw x3, 0(x2) # store 0x72d5277c in memory
flw f13, 0(x2) # load 0x72d5277c from memory into f13
li x3, 0x566c9470 # load x3 with value 0x566c9470
sw x3, 0(x2) # store 0x566c9470 in memory
flw f26, 0(x2) # load 0x566c9470 from memory into f26
li x3, 0xf1005a22 # load x3 with value 0xf1005a22
sw x3, 0(x2) # store 0xf1005a22 in memory
flw f19, 0(x2) # load 0xf1005a22 from memory into f19
fmadd.s f13, f13, f26, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0x839a2419 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x490230f9 # load x3 with value 0x490230f9
sw x3, 0(x2) # store 0x490230f9 in memory
flw f14, 0(x2) # load 0x490230f9 from memory into f14
li x3, 0xdf15ee2a # load x3 with value 0xdf15ee2a
sw x3, 0(x2) # store 0xdf15ee2a in memory
flw f3, 0(x2) # load 0xdf15ee2a from memory into f3
li x3, 0xd587cf98 # load x3 with value 0xd587cf98
sw x3, 0(x2) # store 0xd587cf98 in memory
flw f13, 0(x2) # load 0xd587cf98 from memory into f13
fmadd.s f14, f14, f3, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x406bf3cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x947a7e8b # load x3 with value 0x947a7e8b
sw x3, 0(x2) # store 0x947a7e8b in memory
flw f15, 0(x2) # load 0x947a7e8b from memory into f15
li x3, 0x553a1e00 # load x3 with value 0x553a1e00
sw x3, 0(x2) # store 0x553a1e00 in memory
flw f19, 0(x2) # load 0x553a1e00 from memory into f19
li x3, 0x1f854971 # load x3 with value 0x1f854971
sw x3, 0(x2) # store 0x1f854971 in memory
flw f23, 0(x2) # load 0x1f854971 from memory into f23
fmadd.s f15, f15, f19, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xef3b5aa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ae27095 # load x3 with value 0x7ae27095
sw x3, 0(x2) # store 0x7ae27095 in memory
flw f16, 0(x2) # load 0x7ae27095 from memory into f16
li x3, 0x122949b1 # load x3 with value 0x122949b1
sw x3, 0(x2) # store 0x122949b1 in memory
flw f12, 0(x2) # load 0x122949b1 from memory into f12
li x3, 0xda206729 # load x3 with value 0xda206729
sw x3, 0(x2) # store 0xda206729 in memory
flw f9, 0(x2) # load 0xda206729 from memory into f9
fmadd.s f16, f16, f12, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x7bf833a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9618f608 # load x3 with value 0x9618f608
sw x3, 0(x2) # store 0x9618f608 in memory
flw f17, 0(x2) # load 0x9618f608 from memory into f17
li x3, 0x3e46f982 # load x3 with value 0x3e46f982
sw x3, 0(x2) # store 0x3e46f982 in memory
flw f12, 0(x2) # load 0x3e46f982 from memory into f12
li x3, 0xee6d6894 # load x3 with value 0xee6d6894
sw x3, 0(x2) # store 0xee6d6894 in memory
flw f3, 0(x2) # load 0xee6d6894 from memory into f3
fmadd.s f17, f17, f12, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x3b3cbd2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6befe700 # load x3 with value 0x6befe700
sw x3, 0(x2) # store 0x6befe700 in memory
flw f18, 0(x2) # load 0x6befe700 from memory into f18
li x3, 0x12682652 # load x3 with value 0x12682652
sw x3, 0(x2) # store 0x12682652 in memory
flw f31, 0(x2) # load 0x12682652 from memory into f31
li x3, 0xa55d6a15 # load x3 with value 0xa55d6a15
sw x3, 0(x2) # store 0xa55d6a15 in memory
flw f20, 0(x2) # load 0xa55d6a15 from memory into f20
fmadd.s f18, f18, f31, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x5383c2ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9915de32 # load x3 with value 0x9915de32
sw x3, 0(x2) # store 0x9915de32 in memory
flw f19, 0(x2) # load 0x9915de32 from memory into f19
li x3, 0x6140ac23 # load x3 with value 0x6140ac23
sw x3, 0(x2) # store 0x6140ac23 in memory
flw f27, 0(x2) # load 0x6140ac23 from memory into f27
li x3, 0xd1554899 # load x3 with value 0xd1554899
sw x3, 0(x2) # store 0xd1554899 in memory
flw f1, 0(x2) # load 0xd1554899 from memory into f1
fmadd.s f19, f19, f27, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xc5f4dcf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbd708f5a # load x3 with value 0xbd708f5a
sw x3, 0(x2) # store 0xbd708f5a in memory
flw f20, 0(x2) # load 0xbd708f5a from memory into f20
li x3, 0x8b2c87bd # load x3 with value 0x8b2c87bd
sw x3, 0(x2) # store 0x8b2c87bd in memory
flw f13, 0(x2) # load 0x8b2c87bd from memory into f13
li x3, 0x007e9c76 # load x3 with value 0x007e9c76
sw x3, 0(x2) # store 0x007e9c76 in memory
flw f8, 0(x2) # load 0x007e9c76 from memory into f8
fmadd.s f20, f20, f13, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x928f0e51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd8965e3d # load x3 with value 0xd8965e3d
sw x3, 0(x2) # store 0xd8965e3d in memory
flw f21, 0(x2) # load 0xd8965e3d from memory into f21
li x3, 0x36bdff88 # load x3 with value 0x36bdff88
sw x3, 0(x2) # store 0x36bdff88 in memory
flw f30, 0(x2) # load 0x36bdff88 from memory into f30
li x3, 0xeb1a9607 # load x3 with value 0xeb1a9607
sw x3, 0(x2) # store 0xeb1a9607 in memory
flw f21, 0(x2) # load 0xeb1a9607 from memory into f21
fmadd.s f21, f21, f30, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0xd03c911c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc1b44675 # load x3 with value 0xc1b44675
sw x3, 0(x2) # store 0xc1b44675 in memory
flw f22, 0(x2) # load 0xc1b44675 from memory into f22
li x3, 0x3db64aa3 # load x3 with value 0x3db64aa3
sw x3, 0(x2) # store 0x3db64aa3 in memory
flw f4, 0(x2) # load 0x3db64aa3 from memory into f4
li x3, 0x72ad5ed7 # load x3 with value 0x72ad5ed7
sw x3, 0(x2) # store 0x72ad5ed7 in memory
flw f19, 0(x2) # load 0x72ad5ed7 from memory into f19
fmadd.s f22, f22, f4, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0x945d96c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xddb25f19 # load x3 with value 0xddb25f19
sw x3, 0(x2) # store 0xddb25f19 in memory
flw f23, 0(x2) # load 0xddb25f19 from memory into f23
li x3, 0x63b3c80e # load x3 with value 0x63b3c80e
sw x3, 0(x2) # store 0x63b3c80e in memory
flw f4, 0(x2) # load 0x63b3c80e from memory into f4
li x3, 0xa573d801 # load x3 with value 0xa573d801
sw x3, 0(x2) # store 0xa573d801 in memory
flw f18, 0(x2) # load 0xa573d801 from memory into f18
fmadd.s f23, f23, f4, f18 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x38ca1c8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1beff671 # load x3 with value 0x1beff671
sw x3, 0(x2) # store 0x1beff671 in memory
flw f24, 0(x2) # load 0x1beff671 from memory into f24
li x3, 0x72e5233f # load x3 with value 0x72e5233f
sw x3, 0(x2) # store 0x72e5233f in memory
flw f20, 0(x2) # load 0x72e5233f from memory into f20
li x3, 0xbf2ee483 # load x3 with value 0xbf2ee483
sw x3, 0(x2) # store 0xbf2ee483 in memory
flw f30, 0(x2) # load 0xbf2ee483 from memory into f30
fmadd.s f24, f24, f20, f30 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0x09f4b7d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x07ba87b2 # load x3 with value 0x07ba87b2
sw x3, 0(x2) # store 0x07ba87b2 in memory
flw f25, 0(x2) # load 0x07ba87b2 from memory into f25
li x3, 0x5eff6cf4 # load x3 with value 0x5eff6cf4
sw x3, 0(x2) # store 0x5eff6cf4 in memory
flw f2, 0(x2) # load 0x5eff6cf4 from memory into f2
li x3, 0xb1d42e1f # load x3 with value 0xb1d42e1f
sw x3, 0(x2) # store 0xb1d42e1f in memory
flw f6, 0(x2) # load 0xb1d42e1f from memory into f6
fmadd.s f25, f25, f2, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xfc097e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d9c35ed # load x3 with value 0x5d9c35ed
sw x3, 0(x2) # store 0x5d9c35ed in memory
flw f26, 0(x2) # load 0x5d9c35ed from memory into f26
li x3, 0xf6907be8 # load x3 with value 0xf6907be8
sw x3, 0(x2) # store 0xf6907be8 in memory
flw f15, 0(x2) # load 0xf6907be8 from memory into f15
li x3, 0x73d7c99f # load x3 with value 0x73d7c99f
sw x3, 0(x2) # store 0x73d7c99f in memory
flw f28, 0(x2) # load 0x73d7c99f from memory into f28
fmadd.s f26, f26, f15, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0xec95b2aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c9e1164 # load x3 with value 0x6c9e1164
sw x3, 0(x2) # store 0x6c9e1164 in memory
flw f27, 0(x2) # load 0x6c9e1164 from memory into f27
li x3, 0xa3de56b8 # load x3 with value 0xa3de56b8
sw x3, 0(x2) # store 0xa3de56b8 in memory
flw f15, 0(x2) # load 0xa3de56b8 from memory into f15
li x3, 0x0e427085 # load x3 with value 0x0e427085
sw x3, 0(x2) # store 0x0e427085 in memory
flw f1, 0(x2) # load 0x0e427085 from memory into f1
fmadd.s f27, f27, f15, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0x1b93f9e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1d63ea9 # load x3 with value 0xe1d63ea9
sw x3, 0(x2) # store 0xe1d63ea9 in memory
flw f28, 0(x2) # load 0xe1d63ea9 from memory into f28
li x3, 0xfa045437 # load x3 with value 0xfa045437
sw x3, 0(x2) # store 0xfa045437 in memory
flw f20, 0(x2) # load 0xfa045437 from memory into f20
li x3, 0xe5612bb3 # load x3 with value 0xe5612bb3
sw x3, 0(x2) # store 0xe5612bb3 in memory
flw f10, 0(x2) # load 0xe5612bb3 from memory into f10
fmadd.s f28, f28, f20, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xd9187018 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b8a4091 # load x3 with value 0x7b8a4091
sw x3, 0(x2) # store 0x7b8a4091 in memory
flw f29, 0(x2) # load 0x7b8a4091 from memory into f29
li x3, 0xc8e39a2f # load x3 with value 0xc8e39a2f
sw x3, 0(x2) # store 0xc8e39a2f in memory
flw f25, 0(x2) # load 0xc8e39a2f from memory into f25
li x3, 0x6b2a3a65 # load x3 with value 0x6b2a3a65
sw x3, 0(x2) # store 0x6b2a3a65 in memory
flw f27, 0(x2) # load 0x6b2a3a65 from memory into f27
fmadd.s f29, f29, f25, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x7f04b3ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc6fbcef # load x3 with value 0xcc6fbcef
sw x3, 0(x2) # store 0xcc6fbcef in memory
flw f30, 0(x2) # load 0xcc6fbcef from memory into f30
li x3, 0xbe985387 # load x3 with value 0xbe985387
sw x3, 0(x2) # store 0xbe985387 in memory
flw f5, 0(x2) # load 0xbe985387 from memory into f5
li x3, 0x273602e7 # load x3 with value 0x273602e7
sw x3, 0(x2) # store 0x273602e7 in memory
flw f3, 0(x2) # load 0x273602e7 from memory into f3
fmadd.s f30, f30, f5, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0xb9df12f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x03d0c61b # load x3 with value 0x03d0c61b
sw x3, 0(x2) # store 0x03d0c61b in memory
flw f31, 0(x2) # load 0x03d0c61b from memory into f31
li x3, 0xbce1f01c # load x3 with value 0xbce1f01c
sw x3, 0(x2) # store 0xbce1f01c in memory
flw f7, 0(x2) # load 0xbce1f01c from memory into f7
li x3, 0x3ff86699 # load x3 with value 0x3ff86699
sw x3, 0(x2) # store 0x3ff86699 in memory
flw f28, 0(x2) # load 0x3ff86699 from memory into f28
fmadd.s f31, f31, f7, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x212287b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa95b7456 # load x3 with value 0xa95b7456
sw x3, 0(x2) # store 0xa95b7456 in memory
flw f1, 0(x2) # load 0xa95b7456 from memory into f1
li x3, 0xcabc85ab # load x3 with value 0xcabc85ab
sw x3, 0(x2) # store 0xcabc85ab in memory
flw f0, 0(x2) # load 0xcabc85ab from memory into f0
li x3, 0xc9ea5143 # load x3 with value 0xc9ea5143
sw x3, 0(x2) # store 0xc9ea5143 in memory
flw f30, 0(x2) # load 0xc9ea5143 from memory into f30
fmadd.s f0, f1, f0, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0x6ab698b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf094cd8 # load x3 with value 0xbf094cd8
sw x3, 0(x2) # store 0xbf094cd8 in memory
flw f13, 0(x2) # load 0xbf094cd8 from memory into f13
li x3, 0x25daeda8 # load x3 with value 0x25daeda8
sw x3, 0(x2) # store 0x25daeda8 in memory
flw f1, 0(x2) # load 0x25daeda8 from memory into f1
li x3, 0x82e5752c # load x3 with value 0x82e5752c
sw x3, 0(x2) # store 0x82e5752c in memory
flw f6, 0(x2) # load 0x82e5752c from memory into f6
fmadd.s f1, f13, f1, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x37b591ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57a5e47d # load x3 with value 0x57a5e47d
sw x3, 0(x2) # store 0x57a5e47d in memory
flw f9, 0(x2) # load 0x57a5e47d from memory into f9
li x3, 0x6f7af0ee # load x3 with value 0x6f7af0ee
sw x3, 0(x2) # store 0x6f7af0ee in memory
flw f2, 0(x2) # load 0x6f7af0ee from memory into f2
li x3, 0x7a560fe3 # load x3 with value 0x7a560fe3
sw x3, 0(x2) # store 0x7a560fe3 in memory
flw f22, 0(x2) # load 0x7a560fe3 from memory into f22
fmadd.s f2, f9, f2, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x5e49020c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9bec2f6e # load x3 with value 0x9bec2f6e
sw x3, 0(x2) # store 0x9bec2f6e in memory
flw f1, 0(x2) # load 0x9bec2f6e from memory into f1
li x3, 0x57811d72 # load x3 with value 0x57811d72
sw x3, 0(x2) # store 0x57811d72 in memory
flw f3, 0(x2) # load 0x57811d72 from memory into f3
li x3, 0x297709fc # load x3 with value 0x297709fc
sw x3, 0(x2) # store 0x297709fc in memory
flw f14, 0(x2) # load 0x297709fc from memory into f14
fmadd.s f3, f1, f3, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0x4c244e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x901a91dd # load x3 with value 0x901a91dd
sw x3, 0(x2) # store 0x901a91dd in memory
flw f21, 0(x2) # load 0x901a91dd from memory into f21
li x3, 0x516d5dcd # load x3 with value 0x516d5dcd
sw x3, 0(x2) # store 0x516d5dcd in memory
flw f4, 0(x2) # load 0x516d5dcd from memory into f4
li x3, 0xb4718c6a # load x3 with value 0xb4718c6a
sw x3, 0(x2) # store 0xb4718c6a in memory
flw f25, 0(x2) # load 0xb4718c6a from memory into f25
fmadd.s f4, f21, f4, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xce5a3ba0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69c03bd4 # load x3 with value 0x69c03bd4
sw x3, 0(x2) # store 0x69c03bd4 in memory
flw f22, 0(x2) # load 0x69c03bd4 from memory into f22
li x3, 0x22f59442 # load x3 with value 0x22f59442
sw x3, 0(x2) # store 0x22f59442 in memory
flw f5, 0(x2) # load 0x22f59442 from memory into f5
li x3, 0x627ed197 # load x3 with value 0x627ed197
sw x3, 0(x2) # store 0x627ed197 in memory
flw f29, 0(x2) # load 0x627ed197 from memory into f29
fmadd.s f5, f22, f5, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x73c8711d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d2fc13b # load x3 with value 0x5d2fc13b
sw x3, 0(x2) # store 0x5d2fc13b in memory
flw f7, 0(x2) # load 0x5d2fc13b from memory into f7
li x3, 0x15402e9a # load x3 with value 0x15402e9a
sw x3, 0(x2) # store 0x15402e9a in memory
flw f6, 0(x2) # load 0x15402e9a from memory into f6
li x3, 0x8b6ca2e8 # load x3 with value 0x8b6ca2e8
sw x3, 0(x2) # store 0x8b6ca2e8 in memory
flw f12, 0(x2) # load 0x8b6ca2e8 from memory into f12
fmadd.s f6, f7, f6, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x68c6822b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4192034f # load x3 with value 0x4192034f
sw x3, 0(x2) # store 0x4192034f in memory
flw f2, 0(x2) # load 0x4192034f from memory into f2
li x3, 0x82c37426 # load x3 with value 0x82c37426
sw x3, 0(x2) # store 0x82c37426 in memory
flw f7, 0(x2) # load 0x82c37426 from memory into f7
li x3, 0xce764aaa # load x3 with value 0xce764aaa
sw x3, 0(x2) # store 0xce764aaa in memory
flw f16, 0(x2) # load 0xce764aaa from memory into f16
fmadd.s f7, f2, f7, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0x45d97655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3a230b52 # load x3 with value 0x3a230b52
sw x3, 0(x2) # store 0x3a230b52 in memory
flw f27, 0(x2) # load 0x3a230b52 from memory into f27
li x3, 0x088fc337 # load x3 with value 0x088fc337
sw x3, 0(x2) # store 0x088fc337 in memory
flw f8, 0(x2) # load 0x088fc337 from memory into f8
li x3, 0xd924146e # load x3 with value 0xd924146e
sw x3, 0(x2) # store 0xd924146e in memory
flw f9, 0(x2) # load 0xd924146e from memory into f9
fmadd.s f8, f27, f8, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0x342db4fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1041409 # load x3 with value 0xa1041409
sw x3, 0(x2) # store 0xa1041409 in memory
flw f22, 0(x2) # load 0xa1041409 from memory into f22
li x3, 0xc5505e09 # load x3 with value 0xc5505e09
sw x3, 0(x2) # store 0xc5505e09 in memory
flw f9, 0(x2) # load 0xc5505e09 from memory into f9
li x3, 0xe3ff1bc6 # load x3 with value 0xe3ff1bc6
sw x3, 0(x2) # store 0xe3ff1bc6 in memory
flw f28, 0(x2) # load 0xe3ff1bc6 from memory into f28
fmadd.s f9, f22, f9, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x27fc4240 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc792fde7 # load x3 with value 0xc792fde7
sw x3, 0(x2) # store 0xc792fde7 in memory
flw f7, 0(x2) # load 0xc792fde7 from memory into f7
li x3, 0x586d5ca6 # load x3 with value 0x586d5ca6
sw x3, 0(x2) # store 0x586d5ca6 in memory
flw f10, 0(x2) # load 0x586d5ca6 from memory into f10
li x3, 0x0313bef4 # load x3 with value 0x0313bef4
sw x3, 0(x2) # store 0x0313bef4 in memory
flw f17, 0(x2) # load 0x0313bef4 from memory into f17
fmadd.s f10, f7, f10, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x00673627 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1af0ca0f # load x3 with value 0x1af0ca0f
sw x3, 0(x2) # store 0x1af0ca0f in memory
flw f16, 0(x2) # load 0x1af0ca0f from memory into f16
li x3, 0xf9223981 # load x3 with value 0xf9223981
sw x3, 0(x2) # store 0xf9223981 in memory
flw f11, 0(x2) # load 0xf9223981 from memory into f11
li x3, 0xc421a88a # load x3 with value 0xc421a88a
sw x3, 0(x2) # store 0xc421a88a in memory
flw f31, 0(x2) # load 0xc421a88a from memory into f31
fmadd.s f11, f16, f11, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x20b39e1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x53aa34fb # load x3 with value 0x53aa34fb
sw x3, 0(x2) # store 0x53aa34fb in memory
flw f16, 0(x2) # load 0x53aa34fb from memory into f16
li x3, 0xfad6de8d # load x3 with value 0xfad6de8d
sw x3, 0(x2) # store 0xfad6de8d in memory
flw f12, 0(x2) # load 0xfad6de8d from memory into f12
li x3, 0xd5de1fe5 # load x3 with value 0xd5de1fe5
sw x3, 0(x2) # store 0xd5de1fe5 in memory
flw f27, 0(x2) # load 0xd5de1fe5 from memory into f27
fmadd.s f12, f16, f12, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0x1cd85eb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe926d39c # load x3 with value 0xe926d39c
sw x3, 0(x2) # store 0xe926d39c in memory
flw f2, 0(x2) # load 0xe926d39c from memory into f2
li x3, 0x45b1730b # load x3 with value 0x45b1730b
sw x3, 0(x2) # store 0x45b1730b in memory
flw f13, 0(x2) # load 0x45b1730b from memory into f13
li x3, 0xc83865fc # load x3 with value 0xc83865fc
sw x3, 0(x2) # store 0xc83865fc in memory
flw f12, 0(x2) # load 0xc83865fc from memory into f12
fmadd.s f13, f2, f13, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x66b86c7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb8787682 # load x3 with value 0xb8787682
sw x3, 0(x2) # store 0xb8787682 in memory
flw f25, 0(x2) # load 0xb8787682 from memory into f25
li x3, 0x5eee3bec # load x3 with value 0x5eee3bec
sw x3, 0(x2) # store 0x5eee3bec in memory
flw f14, 0(x2) # load 0x5eee3bec from memory into f14
li x3, 0x9e3a269e # load x3 with value 0x9e3a269e
sw x3, 0(x2) # store 0x9e3a269e in memory
flw f27, 0(x2) # load 0x9e3a269e from memory into f27
fmadd.s f14, f25, f14, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0xfddeddc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb24c5f40 # load x3 with value 0xb24c5f40
sw x3, 0(x2) # store 0xb24c5f40 in memory
flw f7, 0(x2) # load 0xb24c5f40 from memory into f7
li x3, 0xc3c9ab6c # load x3 with value 0xc3c9ab6c
sw x3, 0(x2) # store 0xc3c9ab6c in memory
flw f15, 0(x2) # load 0xc3c9ab6c from memory into f15
li x3, 0x85f6af13 # load x3 with value 0x85f6af13
sw x3, 0(x2) # store 0x85f6af13 in memory
flw f31, 0(x2) # load 0x85f6af13 from memory into f31
fmadd.s f15, f7, f15, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0x3095651a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c6972a7 # load x3 with value 0x7c6972a7
sw x3, 0(x2) # store 0x7c6972a7 in memory
flw f21, 0(x2) # load 0x7c6972a7 from memory into f21
li x3, 0xd847d404 # load x3 with value 0xd847d404
sw x3, 0(x2) # store 0xd847d404 in memory
flw f16, 0(x2) # load 0xd847d404 from memory into f16
li x3, 0x755b9782 # load x3 with value 0x755b9782
sw x3, 0(x2) # store 0x755b9782 in memory
flw f20, 0(x2) # load 0x755b9782 from memory into f20
fmadd.s f16, f21, f16, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0x964983cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfd834261 # load x3 with value 0xfd834261
sw x3, 0(x2) # store 0xfd834261 in memory
flw f17, 0(x2) # load 0xfd834261 from memory into f17
li x3, 0xde55e9e3 # load x3 with value 0xde55e9e3
sw x3, 0(x2) # store 0xde55e9e3 in memory
flw f17, 0(x2) # load 0xde55e9e3 from memory into f17
li x3, 0x74611c4f # load x3 with value 0x74611c4f
sw x3, 0(x2) # store 0x74611c4f in memory
flw f7, 0(x2) # load 0x74611c4f from memory into f7
fmadd.s f17, f17, f17, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0xc58d6538 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11d05b18 # load x3 with value 0x11d05b18
sw x3, 0(x2) # store 0x11d05b18 in memory
flw f24, 0(x2) # load 0x11d05b18 from memory into f24
li x3, 0x6298e344 # load x3 with value 0x6298e344
sw x3, 0(x2) # store 0x6298e344 in memory
flw f18, 0(x2) # load 0x6298e344 from memory into f18
li x3, 0xc241d994 # load x3 with value 0xc241d994
sw x3, 0(x2) # store 0xc241d994 in memory
flw f16, 0(x2) # load 0xc241d994 from memory into f16
fmadd.s f18, f24, f18, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0xe7b2d5e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6bbada7 # load x3 with value 0xc6bbada7
sw x3, 0(x2) # store 0xc6bbada7 in memory
flw f22, 0(x2) # load 0xc6bbada7 from memory into f22
li x3, 0xee766e83 # load x3 with value 0xee766e83
sw x3, 0(x2) # store 0xee766e83 in memory
flw f19, 0(x2) # load 0xee766e83 from memory into f19
li x3, 0xf0b05d00 # load x3 with value 0xf0b05d00
sw x3, 0(x2) # store 0xf0b05d00 in memory
flw f13, 0(x2) # load 0xf0b05d00 from memory into f13
fmadd.s f19, f22, f19, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0xa9511459 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x67798482 # load x3 with value 0x67798482
sw x3, 0(x2) # store 0x67798482 in memory
flw f31, 0(x2) # load 0x67798482 from memory into f31
li x3, 0x2678a23a # load x3 with value 0x2678a23a
sw x3, 0(x2) # store 0x2678a23a in memory
flw f20, 0(x2) # load 0x2678a23a from memory into f20
li x3, 0x08782edd # load x3 with value 0x08782edd
sw x3, 0(x2) # store 0x08782edd in memory
flw f7, 0(x2) # load 0x08782edd from memory into f7
fmadd.s f20, f31, f20, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x79f1ae8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8e963d20 # load x3 with value 0x8e963d20
sw x3, 0(x2) # store 0x8e963d20 in memory
flw f1, 0(x2) # load 0x8e963d20 from memory into f1
li x3, 0x1b0ca8f4 # load x3 with value 0x1b0ca8f4
sw x3, 0(x2) # store 0x1b0ca8f4 in memory
flw f21, 0(x2) # load 0x1b0ca8f4 from memory into f21
li x3, 0xf55cad2e # load x3 with value 0xf55cad2e
sw x3, 0(x2) # store 0xf55cad2e in memory
flw f22, 0(x2) # load 0xf55cad2e from memory into f22
fmadd.s f21, f1, f21, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x092cdc0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x198d8675 # load x3 with value 0x198d8675
sw x3, 0(x2) # store 0x198d8675 in memory
flw f2, 0(x2) # load 0x198d8675 from memory into f2
li x3, 0x812a761b # load x3 with value 0x812a761b
sw x3, 0(x2) # store 0x812a761b in memory
flw f22, 0(x2) # load 0x812a761b from memory into f22
li x3, 0xe843f8db # load x3 with value 0xe843f8db
sw x3, 0(x2) # store 0xe843f8db in memory
flw f31, 0(x2) # load 0xe843f8db from memory into f31
fmadd.s f22, f2, f22, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0xa645e473 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa34bcfbe # load x3 with value 0xa34bcfbe
sw x3, 0(x2) # store 0xa34bcfbe in memory
flw f13, 0(x2) # load 0xa34bcfbe from memory into f13
li x3, 0x620ee4a1 # load x3 with value 0x620ee4a1
sw x3, 0(x2) # store 0x620ee4a1 in memory
flw f23, 0(x2) # load 0x620ee4a1 from memory into f23
li x3, 0x8a394b55 # load x3 with value 0x8a394b55
sw x3, 0(x2) # store 0x8a394b55 in memory
flw f24, 0(x2) # load 0x8a394b55 from memory into f24
fmadd.s f23, f13, f23, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x27a664dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807ab4e4 # load x3 with value 0x807ab4e4
sw x3, 0(x2) # store 0x807ab4e4 in memory
flw f19, 0(x2) # load 0x807ab4e4 from memory into f19
li x3, 0x5449a82f # load x3 with value 0x5449a82f
sw x3, 0(x2) # store 0x5449a82f in memory
flw f24, 0(x2) # load 0x5449a82f from memory into f24
li x3, 0x4d08a31a # load x3 with value 0x4d08a31a
sw x3, 0(x2) # store 0x4d08a31a in memory
flw f1, 0(x2) # load 0x4d08a31a from memory into f1
fmadd.s f24, f19, f24, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0x76caa8d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7781541c # load x3 with value 0x7781541c
sw x3, 0(x2) # store 0x7781541c in memory
flw f24, 0(x2) # load 0x7781541c from memory into f24
li x3, 0x9be6ca42 # load x3 with value 0x9be6ca42
sw x3, 0(x2) # store 0x9be6ca42 in memory
flw f25, 0(x2) # load 0x9be6ca42 from memory into f25
li x3, 0x9d3c0f1e # load x3 with value 0x9d3c0f1e
sw x3, 0(x2) # store 0x9d3c0f1e in memory
flw f23, 0(x2) # load 0x9d3c0f1e from memory into f23
fmadd.s f25, f24, f25, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0x3378056d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1908184a # load x3 with value 0x1908184a
sw x3, 0(x2) # store 0x1908184a in memory
flw f19, 0(x2) # load 0x1908184a from memory into f19
li x3, 0x6528d4d7 # load x3 with value 0x6528d4d7
sw x3, 0(x2) # store 0x6528d4d7 in memory
flw f26, 0(x2) # load 0x6528d4d7 from memory into f26
li x3, 0x10ef01c9 # load x3 with value 0x10ef01c9
sw x3, 0(x2) # store 0x10ef01c9 in memory
flw f12, 0(x2) # load 0x10ef01c9 from memory into f12
fmadd.s f26, f19, f26, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xd49a4225 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6458bc8c # load x3 with value 0x6458bc8c
sw x3, 0(x2) # store 0x6458bc8c in memory
flw f12, 0(x2) # load 0x6458bc8c from memory into f12
li x3, 0xa36837cb # load x3 with value 0xa36837cb
sw x3, 0(x2) # store 0xa36837cb in memory
flw f27, 0(x2) # load 0xa36837cb from memory into f27
li x3, 0xdf67e319 # load x3 with value 0xdf67e319
sw x3, 0(x2) # store 0xdf67e319 in memory
flw f7, 0(x2) # load 0xdf67e319 from memory into f7
fmadd.s f27, f12, f27, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0x0ab052f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf62f19d1 # load x3 with value 0xf62f19d1
sw x3, 0(x2) # store 0xf62f19d1 in memory
flw f7, 0(x2) # load 0xf62f19d1 from memory into f7
li x3, 0x51c72f71 # load x3 with value 0x51c72f71
sw x3, 0(x2) # store 0x51c72f71 in memory
flw f28, 0(x2) # load 0x51c72f71 from memory into f28
li x3, 0x5a8634c6 # load x3 with value 0x5a8634c6
sw x3, 0(x2) # store 0x5a8634c6 in memory
flw f4, 0(x2) # load 0x5a8634c6 from memory into f4
fmadd.s f28, f7, f28, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0xec96710a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdabbb61e # load x3 with value 0xdabbb61e
sw x3, 0(x2) # store 0xdabbb61e in memory
flw f11, 0(x2) # load 0xdabbb61e from memory into f11
li x3, 0x73b3d9c2 # load x3 with value 0x73b3d9c2
sw x3, 0(x2) # store 0x73b3d9c2 in memory
flw f29, 0(x2) # load 0x73b3d9c2 from memory into f29
li x3, 0xb69648a3 # load x3 with value 0xb69648a3
sw x3, 0(x2) # store 0xb69648a3 in memory
flw f14, 0(x2) # load 0xb69648a3 from memory into f14
fmadd.s f29, f11, f29, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x64b1c617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca4bae7d # load x3 with value 0xca4bae7d
sw x3, 0(x2) # store 0xca4bae7d in memory
flw f10, 0(x2) # load 0xca4bae7d from memory into f10
li x3, 0xf4fd8e01 # load x3 with value 0xf4fd8e01
sw x3, 0(x2) # store 0xf4fd8e01 in memory
flw f30, 0(x2) # load 0xf4fd8e01 from memory into f30
li x3, 0x37ca5f22 # load x3 with value 0x37ca5f22
sw x3, 0(x2) # store 0x37ca5f22 in memory
flw f14, 0(x2) # load 0x37ca5f22 from memory into f14
fmadd.s f30, f10, f30, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0x19aee249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x233f9185 # load x3 with value 0x233f9185
sw x3, 0(x2) # store 0x233f9185 in memory
flw f9, 0(x2) # load 0x233f9185 from memory into f9
li x3, 0xe188af3b # load x3 with value 0xe188af3b
sw x3, 0(x2) # store 0xe188af3b in memory
flw f31, 0(x2) # load 0xe188af3b from memory into f31
li x3, 0x4b36e80f # load x3 with value 0x4b36e80f
sw x3, 0(x2) # store 0x4b36e80f in memory
flw f29, 0(x2) # load 0x4b36e80f from memory into f29
fmadd.s f31, f9, f31, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x31, 0x6b5822fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x9557acfd # load x3 with value 0x9557acfd
sw x3, 0(x2) # store 0x9557acfd in memory
flw f5, 0(x2) # load 0x9557acfd from memory into f5
li x3, 0xcdeafa1d # load x3 with value 0xcdeafa1d
sw x3, 0(x2) # store 0xcdeafa1d in memory
flw f1, 0(x2) # load 0xcdeafa1d from memory into f1
fmadd.s f31, f3, f5, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x15, 0x569be323 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x3c648c07 # load x3 with value 0x3c648c07
sw x3, 0(x2) # store 0x3c648c07 in memory
flw f1, 0(x2) # load 0x3c648c07 from memory into f1
li x3, 0x1748d920 # load x3 with value 0x1748d920
sw x3, 0(x2) # store 0x1748d920 in memory
flw f28, 0(x2) # load 0x1748d920 from memory into f28
fmadd.s f15, f6, f1, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x27, 0x3a1599ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x1b201268 # load x3 with value 0x1b201268
sw x3, 0(x2) # store 0x1b201268 in memory
flw f15, 0(x2) # load 0x1b201268 from memory into f15
li x3, 0x4c3b8d17 # load x3 with value 0x4c3b8d17
sw x3, 0(x2) # store 0x4c3b8d17 in memory
flw f21, 0(x2) # load 0x4c3b8d17 from memory into f21
fmadd.s f27, f7, f15, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x19, 0x1f0abbb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x9de06e1e # load x3 with value 0x9de06e1e
sw x3, 0(x2) # store 0x9de06e1e in memory
flw f22, 0(x2) # load 0x9de06e1e from memory into f22
li x3, 0xd4099c0f # load x3 with value 0xd4099c0f
sw x3, 0(x2) # store 0xd4099c0f in memory
flw f4, 0(x2) # load 0xd4099c0f from memory into f4
fmadd.s f19, f21, f22, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x27, 0x2af08314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xa2449fc5 # load x3 with value 0xa2449fc5
sw x3, 0(x2) # store 0xa2449fc5 in memory
flw f23, 0(x2) # load 0xa2449fc5 from memory into f23
li x3, 0x2f137098 # load x3 with value 0x2f137098
sw x3, 0(x2) # store 0x2f137098 in memory
flw f7, 0(x2) # load 0x2f137098 from memory into f7
fmadd.s f27, f21, f23, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x6, 0x38d00cd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x2bea8137 # load x3 with value 0x2bea8137
sw x3, 0(x2) # store 0x2bea8137 in memory
flw f25, 0(x2) # load 0x2bea8137 from memory into f25
li x3, 0x1163365e # load x3 with value 0x1163365e
sw x3, 0(x2) # store 0x1163365e in memory
flw f10, 0(x2) # load 0x1163365e from memory into f10
fmadd.s f6, f24, f25, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x14, 0x7e428683 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x334e8eea # load x3 with value 0x334e8eea
sw x3, 0(x2) # store 0x334e8eea in memory
flw f12, 0(x2) # load 0x334e8eea from memory into f12
li x3, 0x68090f37 # load x3 with value 0x68090f37
sw x3, 0(x2) # store 0x68090f37 in memory
flw f6, 0(x2) # load 0x68090f37 from memory into f6
fmadd.s f14, f3, f12, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x5, 0x002f571a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xd062a5a7 # load x3 with value 0xd062a5a7
sw x3, 0(x2) # store 0xd062a5a7 in memory
flw f8, 0(x2) # load 0xd062a5a7 from memory into f8
li x3, 0x01dd05fb # load x3 with value 0x01dd05fb
sw x3, 0(x2) # store 0x01dd05fb in memory
flw f14, 0(x2) # load 0x01dd05fb from memory into f14
fmadd.s f5, f26, f8, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x29, 0xeb3a1a3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xfe1ac0da # load x3 with value 0xfe1ac0da
sw x3, 0(x2) # store 0xfe1ac0da in memory
flw f21, 0(x2) # load 0xfe1ac0da from memory into f21
li x3, 0x180a23c0 # load x3 with value 0x180a23c0
sw x3, 0(x2) # store 0x180a23c0 in memory
flw f5, 0(x2) # load 0x180a23c0 from memory into f5
fmadd.s f29, f10, f21, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x31, 0x61fce6db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x90cf7783 # load x3 with value 0x90cf7783
sw x3, 0(x2) # store 0x90cf7783 in memory
flw f4, 0(x2) # load 0x90cf7783 from memory into f4
li x3, 0x60963bc0 # load x3 with value 0x60963bc0
sw x3, 0(x2) # store 0x60963bc0 in memory
flw f11, 0(x2) # load 0x60963bc0 from memory into f11
fmadd.s f31, f22, f4, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x8, 0x17915ae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x41d031a9 # load x3 with value 0x41d031a9
sw x3, 0(x2) # store 0x41d031a9 in memory
flw f7, 0(x2) # load 0x41d031a9 from memory into f7
li x3, 0xc0ffa08e # load x3 with value 0xc0ffa08e
sw x3, 0(x2) # store 0xc0ffa08e in memory
flw f2, 0(x2) # load 0xc0ffa08e from memory into f2
fmadd.s f8, f6, f7, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x9, 0xf4eeb6f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x347bd4ca # load x3 with value 0x347bd4ca
sw x3, 0(x2) # store 0x347bd4ca in memory
flw f17, 0(x2) # load 0x347bd4ca from memory into f17
li x3, 0xc58df39c # load x3 with value 0xc58df39c
sw x3, 0(x2) # store 0xc58df39c in memory
flw f13, 0(x2) # load 0xc58df39c from memory into f13
fmadd.s f9, f14, f17, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x1, 0xa658f355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xfa22d251 # load x3 with value 0xfa22d251
sw x3, 0(x2) # store 0xfa22d251 in memory
flw f24, 0(x2) # load 0xfa22d251 from memory into f24
li x3, 0x193e786b # load x3 with value 0x193e786b
sw x3, 0(x2) # store 0x193e786b in memory
flw f4, 0(x2) # load 0x193e786b from memory into f4
fmadd.s f1, f12, f24, f4 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x25, 0x124265eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x955ad3ee # load x3 with value 0x955ad3ee
sw x3, 0(x2) # store 0x955ad3ee in memory
flw f19, 0(x2) # load 0x955ad3ee from memory into f19
li x3, 0x5d424380 # load x3 with value 0x5d424380
sw x3, 0(x2) # store 0x5d424380 in memory
flw f27, 0(x2) # load 0x5d424380 from memory into f27
fmadd.s f25, f29, f19, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x31, 0xf1dc9af7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x7fde944d # load x3 with value 0x7fde944d
sw x3, 0(x2) # store 0x7fde944d in memory
flw f9, 0(x2) # load 0x7fde944d from memory into f9
li x3, 0x3c5f0f13 # load x3 with value 0x3c5f0f13
sw x3, 0(x2) # store 0x3c5f0f13 in memory
flw f29, 0(x2) # load 0x3c5f0f13 from memory into f29
fmadd.s f31, f16, f9, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x1, 0x8af4dbb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x332950ff # load x3 with value 0x332950ff
sw x3, 0(x2) # store 0x332950ff in memory
flw f30, 0(x2) # load 0x332950ff from memory into f30
li x3, 0xb44718a8 # load x3 with value 0xb44718a8
sw x3, 0(x2) # store 0xb44718a8 in memory
flw f2, 0(x2) # load 0xb44718a8 from memory into f2
fmadd.s f1, f28, f30, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x16, 0x956d17f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x8880b1d3 # load x3 with value 0x8880b1d3
sw x3, 0(x2) # store 0x8880b1d3 in memory
flw f2, 0(x2) # load 0x8880b1d3 from memory into f2
li x3, 0x6243cc3f # load x3 with value 0x6243cc3f
sw x3, 0(x2) # store 0x6243cc3f in memory
flw f11, 0(x2) # load 0x6243cc3f from memory into f11
fmadd.s f16, f3, f2, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x24, 0xd4e47563 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x5b202855 # load x3 with value 0x5b202855
sw x3, 0(x2) # store 0x5b202855 in memory
flw f12, 0(x2) # load 0x5b202855 from memory into f12
li x3, 0x1498ebf5 # load x3 with value 0x1498ebf5
sw x3, 0(x2) # store 0x1498ebf5 in memory
flw f5, 0(x2) # load 0x1498ebf5 from memory into f5
fmadd.s f24, f20, f12, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x8, 0x38bc9cfe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xec8d598c # load x3 with value 0xec8d598c
sw x3, 0(x2) # store 0xec8d598c in memory
flw f12, 0(x2) # load 0xec8d598c from memory into f12
li x3, 0xf3935d08 # load x3 with value 0xf3935d08
sw x3, 0(x2) # store 0xf3935d08 in memory
flw f18, 0(x2) # load 0xf3935d08 from memory into f18
fmadd.s f8, f26, f12, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x9, 0xeb9e015d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xc5d1fef3 # load x3 with value 0xc5d1fef3
sw x3, 0(x2) # store 0xc5d1fef3 in memory
flw f25, 0(x2) # load 0xc5d1fef3 from memory into f25
li x3, 0xf63b496a # load x3 with value 0xf63b496a
sw x3, 0(x2) # store 0xf63b496a in memory
flw f15, 0(x2) # load 0xf63b496a from memory into f15
fmadd.s f9, f11, f25, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x4, 0x57f844ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x049cff1e # load x3 with value 0x049cff1e
sw x3, 0(x2) # store 0x049cff1e in memory
flw f5, 0(x2) # load 0x049cff1e from memory into f5
li x3, 0x41a01238 # load x3 with value 0x41a01238
sw x3, 0(x2) # store 0x41a01238 in memory
flw f7, 0(x2) # load 0x41a01238 from memory into f7
fmadd.s f4, f17, f5, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x15, 0x615af422 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x3eac6ad2 # load x3 with value 0x3eac6ad2
sw x3, 0(x2) # store 0x3eac6ad2 in memory
flw f29, 0(x2) # load 0x3eac6ad2 from memory into f29
li x3, 0x0ab2d83b # load x3 with value 0x0ab2d83b
sw x3, 0(x2) # store 0x0ab2d83b in memory
flw f17, 0(x2) # load 0x0ab2d83b from memory into f17
fmadd.s f15, f5, f29, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x4, 0x6d3b5f35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xdc70ea68 # load x3 with value 0xdc70ea68
sw x3, 0(x2) # store 0xdc70ea68 in memory
flw f24, 0(x2) # load 0xdc70ea68 from memory into f24
li x3, 0x04f36054 # load x3 with value 0x04f36054
sw x3, 0(x2) # store 0x04f36054 in memory
flw f23, 0(x2) # load 0x04f36054 from memory into f23
fmadd.s f4, f6, f24, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x25, 0x0d6f2fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x3af4b844 # load x3 with value 0x3af4b844
sw x3, 0(x2) # store 0x3af4b844 in memory
flw f10, 0(x2) # load 0x3af4b844 from memory into f10
li x3, 0xdcb0bd0a # load x3 with value 0xdcb0bd0a
sw x3, 0(x2) # store 0xdcb0bd0a in memory
flw f9, 0(x2) # load 0xdcb0bd0a from memory into f9
fmadd.s f25, f28, f10, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x21, 0x78d6cfb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x1644032d # load x3 with value 0x1644032d
sw x3, 0(x2) # store 0x1644032d in memory
flw f6, 0(x2) # load 0x1644032d from memory into f6
li x3, 0x0d01acc0 # load x3 with value 0x0d01acc0
sw x3, 0(x2) # store 0x0d01acc0 in memory
flw f3, 0(x2) # load 0x0d01acc0 from memory into f3
fmadd.s f21, f9, f6, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x16, 0x95a9fb03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xe3f882f0 # load x3 with value 0xe3f882f0
sw x3, 0(x2) # store 0xe3f882f0 in memory
flw f31, 0(x2) # load 0xe3f882f0 from memory into f31
li x3, 0x8e87a8a6 # load x3 with value 0x8e87a8a6
sw x3, 0(x2) # store 0x8e87a8a6 in memory
flw f30, 0(x2) # load 0x8e87a8a6 from memory into f30
fmadd.s f16, f26, f31, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x13, 0x36ef8b88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd14a14b3 # load x3 with value 0xd14a14b3
sw x3, 0(x2) # store 0xd14a14b3 in memory
flw f31, 0(x2) # load 0xd14a14b3 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x51c5e613 # load x3 with value 0x51c5e613
sw x3, 0(x2) # store 0x51c5e613 in memory
flw f26, 0(x2) # load 0x51c5e613 from memory into f26
fmadd.s f13, f31, f10, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x22, 0x519d6740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x55c60ae6 # load x3 with value 0x55c60ae6
sw x3, 0(x2) # store 0x55c60ae6 in memory
flw f29, 0(x2) # load 0x55c60ae6 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0xb98c47af # load x3 with value 0xb98c47af
sw x3, 0(x2) # store 0xb98c47af in memory
flw f21, 0(x2) # load 0xb98c47af from memory into f21
fmadd.s f22, f29, f26, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x10, 0x6cc6c4cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa87f4408 # load x3 with value 0xa87f4408
sw x3, 0(x2) # store 0xa87f4408 in memory
flw f27, 0(x2) # load 0xa87f4408 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xaf29c76b # load x3 with value 0xaf29c76b
sw x3, 0(x2) # store 0xaf29c76b in memory
flw f8, 0(x2) # load 0xaf29c76b from memory into f8
fmadd.s f10, f27, f2, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x14, 0x02d0c0d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9585dca8 # load x3 with value 0x9585dca8
sw x3, 0(x2) # store 0x9585dca8 in memory
flw f13, 0(x2) # load 0x9585dca8 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x3e74535d # load x3 with value 0x3e74535d
sw x3, 0(x2) # store 0x3e74535d in memory
flw f15, 0(x2) # load 0x3e74535d from memory into f15
fmadd.s f14, f13, f30, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x16, 0x9c2ff170 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe76c3703 # load x3 with value 0xe76c3703
sw x3, 0(x2) # store 0xe76c3703 in memory
flw f1, 0(x2) # load 0xe76c3703 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x01fabdcc # load x3 with value 0x01fabdcc
sw x3, 0(x2) # store 0x01fabdcc in memory
flw f24, 0(x2) # load 0x01fabdcc from memory into f24
fmadd.s f16, f1, f8, f24 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x24, 0xbc566fb3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xde2ccf59 # load x3 with value 0xde2ccf59
sw x3, 0(x2) # store 0xde2ccf59 in memory
flw f21, 0(x2) # load 0xde2ccf59 from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xb7cd210e # load x3 with value 0xb7cd210e
sw x3, 0(x2) # store 0xb7cd210e in memory
flw f31, 0(x2) # load 0xb7cd210e from memory into f31
fmadd.s f24, f21, f4, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x25, 0x1f7c4436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x60b24e45 # load x3 with value 0x60b24e45
sw x3, 0(x2) # store 0x60b24e45 in memory
flw f26, 0(x2) # load 0x60b24e45 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0xcd5cc8ca # load x3 with value 0xcd5cc8ca
sw x3, 0(x2) # store 0xcd5cc8ca in memory
flw f5, 0(x2) # load 0xcd5cc8ca from memory into f5
fmadd.s f25, f26, f23, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x2, 0x172f6c88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe4ec37fe # load x3 with value 0xe4ec37fe
sw x3, 0(x2) # store 0xe4ec37fe in memory
flw f4, 0(x2) # load 0xe4ec37fe from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xdd7b8e25 # load x3 with value 0xdd7b8e25
sw x3, 0(x2) # store 0xdd7b8e25 in memory
flw f28, 0(x2) # load 0xdd7b8e25 from memory into f28
fmadd.s f2, f4, f20, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x12, 0x5aac1513 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1417f277 # load x3 with value 0x1417f277
sw x3, 0(x2) # store 0x1417f277 in memory
flw f2, 0(x2) # load 0x1417f277 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xf804c2bc # load x3 with value 0xf804c2bc
sw x3, 0(x2) # store 0xf804c2bc in memory
flw f22, 0(x2) # load 0xf804c2bc from memory into f22
fmadd.s f12, f2, f3, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x22, 0xfc161995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb4eed77b # load x3 with value 0xb4eed77b
sw x3, 0(x2) # store 0xb4eed77b in memory
flw f31, 0(x2) # load 0xb4eed77b from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xa979d2c8 # load x3 with value 0xa979d2c8
sw x3, 0(x2) # store 0xa979d2c8 in memory
flw f29, 0(x2) # load 0xa979d2c8 from memory into f29
fmadd.s f22, f31, f23, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x7, 0x293db023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9507aba8 # load x3 with value 0x9507aba8
sw x3, 0(x2) # store 0x9507aba8 in memory
flw f9, 0(x2) # load 0x9507aba8 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0xa324effe # load x3 with value 0xa324effe
sw x3, 0(x2) # store 0xa324effe in memory
flw f12, 0(x2) # load 0xa324effe from memory into f12
fmadd.s f7, f9, f31, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x3, 0x688ba6aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99a83a2e # load x3 with value 0x99a83a2e
sw x3, 0(x2) # store 0x99a83a2e in memory
flw f11, 0(x2) # load 0x99a83a2e from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0xcae0c139 # load x3 with value 0xcae0c139
sw x3, 0(x2) # store 0xcae0c139 in memory
flw f20, 0(x2) # load 0xcae0c139 from memory into f20
fmadd.s f3, f11, f1, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x16, 0x9ef0b7bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ff3101f # load x3 with value 0x1ff3101f
sw x3, 0(x2) # store 0x1ff3101f in memory
flw f13, 0(x2) # load 0x1ff3101f from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x78999260 # load x3 with value 0x78999260
sw x3, 0(x2) # store 0x78999260 in memory
flw f11, 0(x2) # load 0x78999260 from memory into f11
fmadd.s f16, f13, f15, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x9, 0x38a0a957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x64a6f9a7 # load x3 with value 0x64a6f9a7
sw x3, 0(x2) # store 0x64a6f9a7 in memory
flw f13, 0(x2) # load 0x64a6f9a7 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0xf0e3bf6d # load x3 with value 0xf0e3bf6d
sw x3, 0(x2) # store 0xf0e3bf6d in memory
flw f1, 0(x2) # load 0xf0e3bf6d from memory into f1
fmadd.s f9, f13, f12, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x23, 0x0f51dae6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ee2e7ac # load x3 with value 0x7ee2e7ac
sw x3, 0(x2) # store 0x7ee2e7ac in memory
flw f27, 0(x2) # load 0x7ee2e7ac from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x849a779c # load x3 with value 0x849a779c
sw x3, 0(x2) # store 0x849a779c in memory
flw f18, 0(x2) # load 0x849a779c from memory into f18
fmadd.s f23, f27, f3, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x3, 0x17e1d268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb408d981 # load x3 with value 0xb408d981
sw x3, 0(x2) # store 0xb408d981 in memory
flw f26, 0(x2) # load 0xb408d981 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x34acca0b # load x3 with value 0x34acca0b
sw x3, 0(x2) # store 0x34acca0b in memory
flw f13, 0(x2) # load 0x34acca0b from memory into f13
fmadd.s f3, f26, f8, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x30, 0x8d3f3e93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8baaba3a # load x3 with value 0x8baaba3a
sw x3, 0(x2) # store 0x8baaba3a in memory
flw f9, 0(x2) # load 0x8baaba3a from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x7a323c63 # load x3 with value 0x7a323c63
sw x3, 0(x2) # store 0x7a323c63 in memory
flw f31, 0(x2) # load 0x7a323c63 from memory into f31
fmadd.s f30, f9, f7, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x20, 0x109be09b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cb2ae73 # load x3 with value 0x3cb2ae73
sw x3, 0(x2) # store 0x3cb2ae73 in memory
flw f29, 0(x2) # load 0x3cb2ae73 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x8f20a5a3 # load x3 with value 0x8f20a5a3
sw x3, 0(x2) # store 0x8f20a5a3 in memory
flw f5, 0(x2) # load 0x8f20a5a3 from memory into f5
fmadd.s f20, f29, f16, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x6, 0x9fc681b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf50b92a7 # load x3 with value 0xf50b92a7
sw x3, 0(x2) # store 0xf50b92a7 in memory
flw f5, 0(x2) # load 0xf50b92a7 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0xfeef28da # load x3 with value 0xfeef28da
sw x3, 0(x2) # store 0xfeef28da in memory
flw f26, 0(x2) # load 0xfeef28da from memory into f26
fmadd.s f6, f5, f29, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x25, 0x95ebc867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92f911ae # load x3 with value 0x92f911ae
sw x3, 0(x2) # store 0x92f911ae in memory
flw f3, 0(x2) # load 0x92f911ae from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xe3dd744b # load x3 with value 0xe3dd744b
sw x3, 0(x2) # store 0xe3dd744b in memory
flw f10, 0(x2) # load 0xe3dd744b from memory into f10
fmadd.s f25, f3, f23, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x24, 0x7134ccb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42a4d031 # load x3 with value 0x42a4d031
sw x3, 0(x2) # store 0x42a4d031 in memory
flw f3, 0(x2) # load 0x42a4d031 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0xf1d727e9 # load x3 with value 0xf1d727e9
sw x3, 0(x2) # store 0xf1d727e9 in memory
flw f28, 0(x2) # load 0xf1d727e9 from memory into f28
fmadd.s f24, f3, f8, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x10, 0x78feb872 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca5831f6 # load x3 with value 0xca5831f6
sw x3, 0(x2) # store 0xca5831f6 in memory
flw f24, 0(x2) # load 0xca5831f6 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x429f69d5 # load x3 with value 0x429f69d5
sw x3, 0(x2) # store 0x429f69d5 in memory
flw f31, 0(x2) # load 0x429f69d5 from memory into f31
fmadd.s f10, f24, f25, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x12, 0x4aa4d092 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb1d53f86 # load x3 with value 0xb1d53f86
sw x3, 0(x2) # store 0xb1d53f86 in memory
flw f24, 0(x2) # load 0xb1d53f86 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xe27700ee # load x3 with value 0xe27700ee
sw x3, 0(x2) # store 0xe27700ee in memory
flw f2, 0(x2) # load 0xe27700ee from memory into f2
fmadd.s f12, f24, f13, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x11, 0x0411ed30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdc2687c9 # load x3 with value 0xdc2687c9
sw x3, 0(x2) # store 0xdc2687c9 in memory
flw f24, 0(x2) # load 0xdc2687c9 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xd27360da # load x3 with value 0xd27360da
sw x3, 0(x2) # store 0xd27360da in memory
flw f21, 0(x2) # load 0xd27360da from memory into f21
fmadd.s f11, f24, f9, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x9, 0x64504df8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x830513f7 # load x3 with value 0x830513f7
sw x3, 0(x2) # store 0x830513f7 in memory
flw f23, 0(x2) # load 0x830513f7 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x9d279d9a # load x3 with value 0x9d279d9a
sw x3, 0(x2) # store 0x9d279d9a in memory
flw f29, 0(x2) # load 0x9d279d9a from memory into f29
fmadd.s f9, f23, f22, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x2, 0x498085c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46268e63 # load x3 with value 0x46268e63
sw x3, 0(x2) # store 0x46268e63 in memory
flw f14, 0(x2) # load 0x46268e63 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x3f9fd37e # load x3 with value 0x3f9fd37e
sw x3, 0(x2) # store 0x3f9fd37e in memory
flw f9, 0(x2) # load 0x3f9fd37e from memory into f9
fmadd.s f2, f14, f1, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x15, 0xfc44b4bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6591f7c # load x3 with value 0xd6591f7c
sw x3, 0(x2) # store 0xd6591f7c in memory
flw f2, 0(x2) # load 0xd6591f7c from memory into f2
li x3, 0xdb218823 # load x3 with value 0xdb218823
sw x3, 0(x2) # store 0xdb218823 in memory
flw f13, 0(x2) # load 0xdb218823 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f15, f2, f13, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x17, 0x87811d70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xab0bdacd # load x3 with value 0xab0bdacd
sw x3, 0(x2) # store 0xab0bdacd in memory
flw f8, 0(x2) # load 0xab0bdacd from memory into f8
li x3, 0xb3e07010 # load x3 with value 0xb3e07010
sw x3, 0(x2) # store 0xb3e07010 in memory
flw f3, 0(x2) # load 0xb3e07010 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fmadd.s f17, f8, f3, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x22, 0x46482a89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa3da58c8 # load x3 with value 0xa3da58c8
sw x3, 0(x2) # store 0xa3da58c8 in memory
flw f11, 0(x2) # load 0xa3da58c8 from memory into f11
li x3, 0x004c3938 # load x3 with value 0x004c3938
sw x3, 0(x2) # store 0x004c3938 in memory
flw f12, 0(x2) # load 0x004c3938 from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f22, f11, f12, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x23, 0x0a4de361 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x73fe3aea # load x3 with value 0x73fe3aea
sw x3, 0(x2) # store 0x73fe3aea in memory
flw f7, 0(x2) # load 0x73fe3aea from memory into f7
li x3, 0xef9d4bb7 # load x3 with value 0xef9d4bb7
sw x3, 0(x2) # store 0xef9d4bb7 in memory
flw f30, 0(x2) # load 0xef9d4bb7 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f23, f7, f30, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x27, 0x8501e770 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71fcf207 # load x3 with value 0x71fcf207
sw x3, 0(x2) # store 0x71fcf207 in memory
flw f9, 0(x2) # load 0x71fcf207 from memory into f9
li x3, 0xa61d765d # load x3 with value 0xa61d765d
sw x3, 0(x2) # store 0xa61d765d in memory
flw f3, 0(x2) # load 0xa61d765d from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fmadd.s f27, f9, f3, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x23, 0xc6bbf9f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc789e8cd # load x3 with value 0xc789e8cd
sw x3, 0(x2) # store 0xc789e8cd in memory
flw f8, 0(x2) # load 0xc789e8cd from memory into f8
li x3, 0x50501183 # load x3 with value 0x50501183
sw x3, 0(x2) # store 0x50501183 in memory
flw f6, 0(x2) # load 0x50501183 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmadd.s f23, f8, f6, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x16, 0xe60ffa74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x518feb31 # load x3 with value 0x518feb31
sw x3, 0(x2) # store 0x518feb31 in memory
flw f2, 0(x2) # load 0x518feb31 from memory into f2
li x3, 0xb766a9ae # load x3 with value 0xb766a9ae
sw x3, 0(x2) # store 0xb766a9ae in memory
flw f15, 0(x2) # load 0xb766a9ae from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmadd.s f16, f2, f15, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x1, 0xe27aa517 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x284401e3 # load x3 with value 0x284401e3
sw x3, 0(x2) # store 0x284401e3 in memory
flw f6, 0(x2) # load 0x284401e3 from memory into f6
li x3, 0x42b631eb # load x3 with value 0x42b631eb
sw x3, 0(x2) # store 0x42b631eb in memory
flw f29, 0(x2) # load 0x42b631eb from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fmadd.s f1, f6, f29, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x11, 0x5fd0e0e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1372c5e5 # load x3 with value 0x1372c5e5
sw x3, 0(x2) # store 0x1372c5e5 in memory
flw f17, 0(x2) # load 0x1372c5e5 from memory into f17
li x3, 0x09732f08 # load x3 with value 0x09732f08
sw x3, 0(x2) # store 0x09732f08 in memory
flw f1, 0(x2) # load 0x09732f08 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fmadd.s f11, f17, f1, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x23, 0x6ad65b1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d6dbdf2 # load x3 with value 0x5d6dbdf2
sw x3, 0(x2) # store 0x5d6dbdf2 in memory
flw f22, 0(x2) # load 0x5d6dbdf2 from memory into f22
li x3, 0xe2187b9b # load x3 with value 0xe2187b9b
sw x3, 0(x2) # store 0xe2187b9b in memory
flw f28, 0(x2) # load 0xe2187b9b from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmadd.s f23, f22, f28, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x9, 0xfbd6451c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a399f5f # load x3 with value 0x4a399f5f
sw x3, 0(x2) # store 0x4a399f5f in memory
flw f5, 0(x2) # load 0x4a399f5f from memory into f5
li x3, 0xa9aea908 # load x3 with value 0xa9aea908
sw x3, 0(x2) # store 0xa9aea908 in memory
flw f28, 0(x2) # load 0xa9aea908 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmadd.s f9, f5, f28, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x1, 0x58746436 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3aecc80f # load x3 with value 0x3aecc80f
sw x3, 0(x2) # store 0x3aecc80f in memory
flw f10, 0(x2) # load 0x3aecc80f from memory into f10
li x3, 0x72079780 # load x3 with value 0x72079780
sw x3, 0(x2) # store 0x72079780 in memory
flw f23, 0(x2) # load 0x72079780 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmadd.s f1, f10, f23, f20 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x17, 0xf4273efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf80bdd73 # load x3 with value 0xf80bdd73
sw x3, 0(x2) # store 0xf80bdd73 in memory
flw f6, 0(x2) # load 0xf80bdd73 from memory into f6
li x3, 0x97fb4f53 # load x3 with value 0x97fb4f53
sw x3, 0(x2) # store 0x97fb4f53 in memory
flw f19, 0(x2) # load 0x97fb4f53 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmadd.s f17, f6, f19, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x4, 0x26d43c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f60caae # load x3 with value 0x9f60caae
sw x3, 0(x2) # store 0x9f60caae in memory
flw f27, 0(x2) # load 0x9f60caae from memory into f27
li x3, 0xd3a1e851 # load x3 with value 0xd3a1e851
sw x3, 0(x2) # store 0xd3a1e851 in memory
flw f25, 0(x2) # load 0xd3a1e851 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fmadd.s f4, f27, f25, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x20, 0x972ca893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa54b11c7 # load x3 with value 0xa54b11c7
sw x3, 0(x2) # store 0xa54b11c7 in memory
flw f26, 0(x2) # load 0xa54b11c7 from memory into f26
li x3, 0xde5f29bd # load x3 with value 0xde5f29bd
sw x3, 0(x2) # store 0xde5f29bd in memory
flw f29, 0(x2) # load 0xde5f29bd from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fmadd.s f20, f26, f29, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x8, 0x828f87cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x38e4f1ca # load x3 with value 0x38e4f1ca
sw x3, 0(x2) # store 0x38e4f1ca in memory
flw f20, 0(x2) # load 0x38e4f1ca from memory into f20
li x3, 0x03564002 # load x3 with value 0x03564002
sw x3, 0(x2) # store 0x03564002 in memory
flw f24, 0(x2) # load 0x03564002 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fmadd.s f8, f20, f24, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x11, 0x3ddf274d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1451b191 # load x3 with value 0x1451b191
sw x3, 0(x2) # store 0x1451b191 in memory
flw f26, 0(x2) # load 0x1451b191 from memory into f26
li x3, 0xbb96f44d # load x3 with value 0xbb96f44d
sw x3, 0(x2) # store 0xbb96f44d in memory
flw f5, 0(x2) # load 0xbb96f44d from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
fmadd.s f11, f26, f5, f6 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x20, 0x72c57201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x017cb281 # load x3 with value 0x017cb281
sw x3, 0(x2) # store 0x017cb281 in memory
flw f10, 0(x2) # load 0x017cb281 from memory into f10
li x3, 0x9211e6e5 # load x3 with value 0x9211e6e5
sw x3, 0(x2) # store 0x9211e6e5 in memory
flw f9, 0(x2) # load 0x9211e6e5 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmadd.s f20, f10, f9, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x9, 0x449160c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0166750 # load x3 with value 0xa0166750
sw x3, 0(x2) # store 0xa0166750 in memory
flw f3, 0(x2) # load 0xa0166750 from memory into f3
li x3, 0x62c2fc3b # load x3 with value 0x62c2fc3b
sw x3, 0(x2) # store 0x62c2fc3b in memory
flw f19, 0(x2) # load 0x62c2fc3b from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmadd.s f9, f3, f19, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x16, 0x7685a952 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb0ca684a # load x3 with value 0xb0ca684a
sw x3, 0(x2) # store 0xb0ca684a in memory
flw f15, 0(x2) # load 0xb0ca684a from memory into f15
li x3, 0xfc322967 # load x3 with value 0xfc322967
sw x3, 0(x2) # store 0xfc322967 in memory
flw f14, 0(x2) # load 0xfc322967 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f16, f15, f14, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x10, 0x7c9649bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2a0e94e1 # load x3 with value 0x2a0e94e1
sw x3, 0(x2) # store 0x2a0e94e1 in memory
flw f1, 0(x2) # load 0x2a0e94e1 from memory into f1
li x3, 0x82d99b41 # load x3 with value 0x82d99b41
sw x3, 0(x2) # store 0x82d99b41 in memory
flw f2, 0(x2) # load 0x82d99b41 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmadd.s f10, f1, f2, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x5, 0x722cfa10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d19d2e5 # load x3 with value 0x3d19d2e5
sw x3, 0(x2) # store 0x3d19d2e5 in memory
flw f12, 0(x2) # load 0x3d19d2e5 from memory into f12
li x3, 0x0fe85829 # load x3 with value 0x0fe85829
sw x3, 0(x2) # store 0x0fe85829 in memory
flw f10, 0(x2) # load 0x0fe85829 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmadd.s f5, f12, f10, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x28, 0x51429e64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5b0a7a3 # load x3 with value 0xf5b0a7a3
sw x3, 0(x2) # store 0xf5b0a7a3 in memory
flw f11, 0(x2) # load 0xf5b0a7a3 from memory into f11
li x3, 0x72285481 # load x3 with value 0x72285481
sw x3, 0(x2) # store 0x72285481 in memory
flw f4, 0(x2) # load 0x72285481 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fmadd.s f28, f11, f4, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x10, 0xaa253cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5f7aec2 # load x3 with value 0xf5f7aec2
sw x3, 0(x2) # store 0xf5f7aec2 in memory
flw f2, 0(x2) # load 0xf5f7aec2 from memory into f2
li x3, 0xaa6cabe1 # load x3 with value 0xaa6cabe1
sw x3, 0(x2) # store 0xaa6cabe1 in memory
flw f5, 0(x2) # load 0xaa6cabe1 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmadd.s f10, f2, f5, f4 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x14, 0xf581386e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x458185a8 # load x3 with value 0x458185a8
sw x3, 0(x2) # store 0x458185a8 in memory
flw f26, 0(x2) # load 0x458185a8 from memory into f26
li x3, 0x437bdd78 # load x3 with value 0x437bdd78
sw x3, 0(x2) # store 0x437bdd78 in memory
flw f9, 0(x2) # load 0x437bdd78 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmadd.s f14, f26, f9, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x27, 0x2794ed8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7b2ae00 # load x3 with value 0xc7b2ae00
sw x3, 0(x2) # store 0xc7b2ae00 in memory
flw f7, 0(x2) # load 0xc7b2ae00 from memory into f7
li x3, 0x002c221a # load x3 with value 0x002c221a
sw x3, 0(x2) # store 0x002c221a in memory
flw f3, 0(x2) # load 0x002c221a from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fmadd.s f27, f7, f3, f4 # perform operation

# Testcase cp_frm
li x5, 0xcb84f749 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe1e4acb9 # load x3 with value 0xe1e4acb9
sw x3, 0(x2) # store 0xe1e4acb9 in memory
flw f11, 0(x2) # load 0xe1e4acb9 from memory into f11
li x3, 0x9f18e1ce # load x3 with value 0x9f18e1ce
sw x3, 0(x2) # store 0x9f18e1ce in memory
flw f26, 0(x2) # load 0x9f18e1ce from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f5, f11, f26, f1, dyn # perform operation
fmadd.s f5, f11, f26, f1, rdn # perform operation
fmadd.s f5, f11, f26, f1, rmm # perform operation
fmadd.s f5, f11, f26, f1, rne # perform operation
fmadd.s f5, f11, f26, f1, rtz # perform operation
fmadd.s f5, f11, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f11, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x10, 0x6b83e091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x6fba3d4c # load x3 with value 0x6fba3d4c
sw x3, 0(x2) # store 0x6fba3d4c in memory
flw f23, 0(x2) # load 0x6fba3d4c from memory into f23
fmadd.s f10, f15, f25, f23, dyn # perform operation
fmadd.s f10, f15, f25, f23, rdn # perform operation
fmadd.s f10, f15, f25, f23, rmm # perform operation
fmadd.s f10, f15, f25, f23, rne # perform operation
fmadd.s f10, f15, f25, f23, rtz # perform operation
fmadd.s f10, f15, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f15, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f15, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x16, 0xe2c1f0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x594f5981 # load x3 with value 0x594f5981
sw x3, 0(x2) # store 0x594f5981 in memory
flw f14, 0(x2) # load 0x594f5981 from memory into f14
fmadd.s f16, f5, f6, f14, dyn # perform operation
fmadd.s f16, f5, f6, f14, rdn # perform operation
fmadd.s f16, f5, f6, f14, rmm # perform operation
fmadd.s f16, f5, f6, f14, rne # perform operation
fmadd.s f16, f5, f6, f14, rtz # perform operation
fmadd.s f16, f5, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x3, 0x62678a96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x79c641b2 # load x3 with value 0x79c641b2
sw x3, 0(x2) # store 0x79c641b2 in memory
flw f12, 0(x2) # load 0x79c641b2 from memory into f12
fmadd.s f3, f30, f13, f12, dyn # perform operation
fmadd.s f3, f30, f13, f12, rdn # perform operation
fmadd.s f3, f30, f13, f12, rmm # perform operation
fmadd.s f3, f30, f13, f12, rne # perform operation
fmadd.s f3, f30, f13, f12, rtz # perform operation
fmadd.s f3, f30, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f30, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f30, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x25, 0x7cc56906 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0xa59869e3 # load x3 with value 0xa59869e3
sw x3, 0(x2) # store 0xa59869e3 in memory
flw f6, 0(x2) # load 0xa59869e3 from memory into f6
fmadd.s f25, f22, f12, f6, dyn # perform operation
fmadd.s f25, f22, f12, f6, rdn # perform operation
fmadd.s f25, f22, f12, f6, rmm # perform operation
fmadd.s f25, f22, f12, f6, rne # perform operation
fmadd.s f25, f22, f12, f6, rtz # perform operation
fmadd.s f25, f22, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f12, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x14, 0xf4ce5885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xe3c0148e # load x3 with value 0xe3c0148e
sw x3, 0(x2) # store 0xe3c0148e in memory
flw f8, 0(x2) # load 0xe3c0148e from memory into f8
fmadd.s f14, f3, f15, f8, dyn # perform operation
fmadd.s f14, f3, f15, f8, rdn # perform operation
fmadd.s f14, f3, f15, f8, rmm # perform operation
fmadd.s f14, f3, f15, f8, rne # perform operation
fmadd.s f14, f3, f15, f8, rtz # perform operation
fmadd.s f14, f3, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x13, 0xa3569910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x7a9ff57f # load x3 with value 0x7a9ff57f
sw x3, 0(x2) # store 0x7a9ff57f in memory
flw f24, 0(x2) # load 0x7a9ff57f from memory into f24
fmadd.s f13, f29, f15, f24, dyn # perform operation
fmadd.s f13, f29, f15, f24, rdn # perform operation
fmadd.s f13, f29, f15, f24, rmm # perform operation
fmadd.s f13, f29, f15, f24, rne # perform operation
fmadd.s f13, f29, f15, f24, rtz # perform operation
fmadd.s f13, f29, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x27, 0xadcf7a71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x8b952cfd # load x3 with value 0x8b952cfd
sw x3, 0(x2) # store 0x8b952cfd in memory
flw f18, 0(x2) # load 0x8b952cfd from memory into f18
fmadd.s f27, f11, f17, f18, dyn # perform operation
fmadd.s f27, f11, f17, f18, rdn # perform operation
fmadd.s f27, f11, f17, f18, rmm # perform operation
fmadd.s f27, f11, f17, f18, rne # perform operation
fmadd.s f27, f11, f17, f18, rtz # perform operation
fmadd.s f27, f11, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x13, 0x094abde2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xf5ef3664 # load x3 with value 0xf5ef3664
sw x3, 0(x2) # store 0xf5ef3664 in memory
flw f6, 0(x2) # load 0xf5ef3664 from memory into f6
fmadd.s f13, f18, f11, f6, dyn # perform operation
fmadd.s f13, f18, f11, f6, rdn # perform operation
fmadd.s f13, f18, f11, f6, rmm # perform operation
fmadd.s f13, f18, f11, f6, rne # perform operation
fmadd.s f13, f18, f11, f6, rtz # perform operation
fmadd.s f13, f18, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f11, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x28, 0x55314d6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xb22808c2 # load x3 with value 0xb22808c2
sw x3, 0(x2) # store 0xb22808c2 in memory
flw f6, 0(x2) # load 0xb22808c2 from memory into f6
fmadd.s f28, f1, f31, f6, dyn # perform operation
fmadd.s f28, f1, f31, f6, rdn # perform operation
fmadd.s f28, f1, f31, f6, rmm # perform operation
fmadd.s f28, f1, f31, f6, rne # perform operation
fmadd.s f28, f1, f31, f6, rtz # perform operation
fmadd.s f28, f1, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x26, 0xe7b7e528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0xb3130a56 # load x3 with value 0xb3130a56
sw x3, 0(x2) # store 0xb3130a56 in memory
flw f2, 0(x2) # load 0xb3130a56 from memory into f2
fmadd.s f26, f10, f13, f2, dyn # perform operation
fmadd.s f26, f10, f13, f2, rdn # perform operation
fmadd.s f26, f10, f13, f2, rmm # perform operation
fmadd.s f26, f10, f13, f2, rne # perform operation
fmadd.s f26, f10, f13, f2, rtz # perform operation
fmadd.s f26, f10, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f10, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f10, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x5, 0x9e15e475 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xa157a04e # load x3 with value 0xa157a04e
sw x3, 0(x2) # store 0xa157a04e in memory
flw f2, 0(x2) # load 0xa157a04e from memory into f2
fmadd.s f5, f24, f22, f2, dyn # perform operation
fmadd.s f5, f24, f22, f2, rdn # perform operation
fmadd.s f5, f24, f22, f2, rmm # perform operation
fmadd.s f5, f24, f22, f2, rne # perform operation
fmadd.s f5, f24, f22, f2, rtz # perform operation
fmadd.s f5, f24, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x21, 0xf7561ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x8cd26595 # load x3 with value 0x8cd26595
sw x3, 0(x2) # store 0x8cd26595 in memory
flw f30, 0(x2) # load 0x8cd26595 from memory into f30
fmadd.s f21, f13, f11, f30, dyn # perform operation
fmadd.s f21, f13, f11, f30, rdn # perform operation
fmadd.s f21, f13, f11, f30, rmm # perform operation
fmadd.s f21, f13, f11, f30, rne # perform operation
fmadd.s f21, f13, f11, f30, rtz # perform operation
fmadd.s f21, f13, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x1, 0x9a4effe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x6878f7e9 # load x3 with value 0x6878f7e9
sw x3, 0(x2) # store 0x6878f7e9 in memory
flw f21, 0(x2) # load 0x6878f7e9 from memory into f21
fmadd.s f1, f31, f2, f21, dyn # perform operation
fmadd.s f1, f31, f2, f21, rdn # perform operation
fmadd.s f1, f31, f2, f21, rmm # perform operation
fmadd.s f1, f31, f2, f21, rne # perform operation
fmadd.s f1, f31, f2, f21, rtz # perform operation
fmadd.s f1, f31, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x1, 0x277cdce0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x8ea9d165 # load x3 with value 0x8ea9d165
sw x3, 0(x2) # store 0x8ea9d165 in memory
flw f19, 0(x2) # load 0x8ea9d165 from memory into f19
fmadd.s f1, f16, f14, f19, dyn # perform operation
fmadd.s f1, f16, f14, f19, rdn # perform operation
fmadd.s f1, f16, f14, f19, rmm # perform operation
fmadd.s f1, f16, f14, f19, rne # perform operation
fmadd.s f1, f16, f14, f19, rtz # perform operation
fmadd.s f1, f16, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x28, 0x5aea5035 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
li x3, 0xbaa380dd # load x3 with value 0xbaa380dd
sw x3, 0(x2) # store 0xbaa380dd in memory
flw f14, 0(x2) # load 0xbaa380dd from memory into f14
fmadd.s f28, f17, f23, f14, dyn # perform operation
fmadd.s f28, f17, f23, f14, rdn # perform operation
fmadd.s f28, f17, f23, f14, rmm # perform operation
fmadd.s f28, f17, f23, f14, rne # perform operation
fmadd.s f28, f17, f23, f14, rtz # perform operation
fmadd.s f28, f17, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f23, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x26, 0x0a25364d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x1aebf429 # load x3 with value 0x1aebf429
sw x3, 0(x2) # store 0x1aebf429 in memory
flw f24, 0(x2) # load 0x1aebf429 from memory into f24
fmadd.s f26, f25, f27, f24, dyn # perform operation
fmadd.s f26, f25, f27, f24, rdn # perform operation
fmadd.s f26, f25, f27, f24, rmm # perform operation
fmadd.s f26, f25, f27, f24, rne # perform operation
fmadd.s f26, f25, f27, f24, rtz # perform operation
fmadd.s f26, f25, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x5, 0x4aa3aa02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x412b4aed # load x3 with value 0x412b4aed
sw x3, 0(x2) # store 0x412b4aed in memory
flw f18, 0(x2) # load 0x412b4aed from memory into f18
fmadd.s f5, f19, f16, f18, dyn # perform operation
fmadd.s f5, f19, f16, f18, rdn # perform operation
fmadd.s f5, f19, f16, f18, rmm # perform operation
fmadd.s f5, f19, f16, f18, rne # perform operation
fmadd.s f5, f19, f16, f18, rtz # perform operation
fmadd.s f5, f19, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x3, 0x8463cc0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x0224e6fc # load x3 with value 0x0224e6fc
sw x3, 0(x2) # store 0x0224e6fc in memory
flw f5, 0(x2) # load 0x0224e6fc from memory into f5
fmadd.s f3, f16, f2, f5, dyn # perform operation
fmadd.s f3, f16, f2, f5, rdn # perform operation
fmadd.s f3, f16, f2, f5, rmm # perform operation
fmadd.s f3, f16, f2, f5, rne # perform operation
fmadd.s f3, f16, f2, f5, rtz # perform operation
fmadd.s f3, f16, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f2, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x30, 0x63a71953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x85601f5d # load x3 with value 0x85601f5d
sw x3, 0(x2) # store 0x85601f5d in memory
flw f25, 0(x2) # load 0x85601f5d from memory into f25
fmadd.s f30, f20, f16, f25, dyn # perform operation
fmadd.s f30, f20, f16, f25, rdn # perform operation
fmadd.s f30, f20, f16, f25, rmm # perform operation
fmadd.s f30, f20, f16, f25, rne # perform operation
fmadd.s f30, f20, f16, f25, rtz # perform operation
fmadd.s f30, f20, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x22, 0x5939c293 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x3257988f # load x3 with value 0x3257988f
sw x3, 0(x2) # store 0x3257988f in memory
flw f5, 0(x2) # load 0x3257988f from memory into f5
fmadd.s f22, f17, f29, f5, dyn # perform operation
fmadd.s f22, f17, f29, f5, rdn # perform operation
fmadd.s f22, f17, f29, f5, rmm # perform operation
fmadd.s f22, f17, f29, f5, rne # perform operation
fmadd.s f22, f17, f29, f5, rtz # perform operation
fmadd.s f22, f17, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x6, 0x10dd789a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x27f6252a # load x3 with value 0x27f6252a
sw x3, 0(x2) # store 0x27f6252a in memory
flw f26, 0(x2) # load 0x27f6252a from memory into f26
fmadd.s f6, f15, f3, f26, dyn # perform operation
fmadd.s f6, f15, f3, f26, rdn # perform operation
fmadd.s f6, f15, f3, f26, rmm # perform operation
fmadd.s f6, f15, f3, f26, rne # perform operation
fmadd.s f6, f15, f3, f26, rtz # perform operation
fmadd.s f6, f15, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f3, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x21, 0x3d0ff9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x76fc8834 # load x3 with value 0x76fc8834
sw x3, 0(x2) # store 0x76fc8834 in memory
flw f8, 0(x2) # load 0x76fc8834 from memory into f8
fmadd.s f21, f22, f11, f8, dyn # perform operation
fmadd.s f21, f22, f11, f8, rdn # perform operation
fmadd.s f21, f22, f11, f8, rmm # perform operation
fmadd.s f21, f22, f11, f8, rne # perform operation
fmadd.s f21, f22, f11, f8, rtz # perform operation
fmadd.s f21, f22, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f22, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f22, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x12, 0xf293ad3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x4639478b # load x3 with value 0x4639478b
sw x3, 0(x2) # store 0x4639478b in memory
flw f22, 0(x2) # load 0x4639478b from memory into f22
fmadd.s f12, f3, f16, f22, dyn # perform operation
fmadd.s f12, f3, f16, f22, rdn # perform operation
fmadd.s f12, f3, f16, f22, rmm # perform operation
fmadd.s f12, f3, f16, f22, rne # perform operation
fmadd.s f12, f3, f16, f22, rtz # perform operation
fmadd.s f12, f3, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f16, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x13, 0x2c0097c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x7929c6e3 # load x3 with value 0x7929c6e3
sw x3, 0(x2) # store 0x7929c6e3 in memory
flw f16, 0(x2) # load 0x7929c6e3 from memory into f16
fmadd.s f13, f10, f6, f16, dyn # perform operation
fmadd.s f13, f10, f6, f16, rdn # perform operation
fmadd.s f13, f10, f6, f16, rmm # perform operation
fmadd.s f13, f10, f6, f16, rne # perform operation
fmadd.s f13, f10, f6, f16, rtz # perform operation
fmadd.s f13, f10, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x3, 0xed1c0593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0xae08622b # load x3 with value 0xae08622b
sw x3, 0(x2) # store 0xae08622b in memory
flw f20, 0(x2) # load 0xae08622b from memory into f20
fmadd.s f3, f28, f26, f20, dyn # perform operation
fmadd.s f3, f28, f26, f20, rdn # perform operation
fmadd.s f3, f28, f26, f20, rmm # perform operation
fmadd.s f3, f28, f26, f20, rne # perform operation
fmadd.s f3, f28, f26, f20, rtz # perform operation
fmadd.s f3, f28, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f28, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f28, f26, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x8, 0xd1bbc455 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x47901f85 # load x3 with value 0x47901f85
sw x3, 0(x2) # store 0x47901f85 in memory
flw f20, 0(x2) # load 0x47901f85 from memory into f20
fmadd.s f8, f3, f15, f20, dyn # perform operation
fmadd.s f8, f3, f15, f20, rdn # perform operation
fmadd.s f8, f3, f15, f20, rmm # perform operation
fmadd.s f8, f3, f15, f20, rne # perform operation
fmadd.s f8, f3, f15, f20, rtz # perform operation
fmadd.s f8, f3, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f3, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x20, 0x1e4f498b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x790b3cf6 # load x3 with value 0x790b3cf6
sw x3, 0(x2) # store 0x790b3cf6 in memory
flw f10, 0(x2) # load 0x790b3cf6 from memory into f10
fmadd.s f20, f11, f23, f10, dyn # perform operation
fmadd.s f20, f11, f23, f10, rdn # perform operation
fmadd.s f20, f11, f23, f10, rmm # perform operation
fmadd.s f20, f11, f23, f10, rne # perform operation
fmadd.s f20, f11, f23, f10, rtz # perform operation
fmadd.s f20, f11, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x17, 0xd1e15a6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x01fd2cbc # load x3 with value 0x01fd2cbc
sw x3, 0(x2) # store 0x01fd2cbc in memory
flw f5, 0(x2) # load 0x01fd2cbc from memory into f5
fmadd.s f17, f22, f29, f5, dyn # perform operation
fmadd.s f17, f22, f29, f5, rdn # perform operation
fmadd.s f17, f22, f29, f5, rmm # perform operation
fmadd.s f17, f22, f29, f5, rne # perform operation
fmadd.s f17, f22, f29, f5, rtz # perform operation
fmadd.s f17, f22, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f22, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f22, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x21, 0x8db9af19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xaf2a3081 # load x3 with value 0xaf2a3081
sw x3, 0(x2) # store 0xaf2a3081 in memory
flw f20, 0(x2) # load 0xaf2a3081 from memory into f20
fmadd.s f21, f19, f24, f20, dyn # perform operation
fmadd.s f21, f19, f24, f20, rdn # perform operation
fmadd.s f21, f19, f24, f20, rmm # perform operation
fmadd.s f21, f19, f24, f20, rne # perform operation
fmadd.s f21, f19, f24, f20, rtz # perform operation
fmadd.s f21, f19, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f19, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f19, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x7, 0xb00b0c37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0xa3828de8 # load x3 with value 0xa3828de8
sw x3, 0(x2) # store 0xa3828de8 in memory
flw f8, 0(x2) # load 0xa3828de8 from memory into f8
fmadd.s f7, f13, f29, f8, dyn # perform operation
fmadd.s f7, f13, f29, f8, rdn # perform operation
fmadd.s f7, f13, f29, f8, rmm # perform operation
fmadd.s f7, f13, f29, f8, rne # perform operation
fmadd.s f7, f13, f29, f8, rtz # perform operation
fmadd.s f7, f13, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x13, 0xee4e46d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x6d1387d3 # load x3 with value 0x6d1387d3
sw x3, 0(x2) # store 0x6d1387d3 in memory
flw f12, 0(x2) # load 0x6d1387d3 from memory into f12
fmadd.s f13, f7, f3, f12, dyn # perform operation
fmadd.s f13, f7, f3, f12, rdn # perform operation
fmadd.s f13, f7, f3, f12, rmm # perform operation
fmadd.s f13, f7, f3, f12, rne # perform operation
fmadd.s f13, f7, f3, f12, rtz # perform operation
fmadd.s f13, f7, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x1, 0x2a29eab5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xdb0857a9 # load x3 with value 0xdb0857a9
sw x3, 0(x2) # store 0xdb0857a9 in memory
flw f24, 0(x2) # load 0xdb0857a9 from memory into f24
fmadd.s f1, f15, f26, f24, dyn # perform operation
fmadd.s f1, f15, f26, f24, rdn # perform operation
fmadd.s f1, f15, f26, f24, rmm # perform operation
fmadd.s f1, f15, f26, f24, rne # perform operation
fmadd.s f1, f15, f26, f24, rtz # perform operation
fmadd.s f1, f15, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x20, 0xf615c0b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xd9f37a28 # load x3 with value 0xd9f37a28
sw x3, 0(x2) # store 0xd9f37a28 in memory
flw f26, 0(x2) # load 0xd9f37a28 from memory into f26
fmadd.s f20, f12, f24, f26, dyn # perform operation
fmadd.s f20, f12, f24, f26, rdn # perform operation
fmadd.s f20, f12, f24, f26, rmm # perform operation
fmadd.s f20, f12, f24, f26, rne # perform operation
fmadd.s f20, f12, f24, f26, rtz # perform operation
fmadd.s f20, f12, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x17, 0x046b27e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x0891f27f # load x3 with value 0x0891f27f
sw x3, 0(x2) # store 0x0891f27f in memory
flw f9, 0(x2) # load 0x0891f27f from memory into f9
fmadd.s f17, f7, f14, f9, dyn # perform operation
fmadd.s f17, f7, f14, f9, rdn # perform operation
fmadd.s f17, f7, f14, f9, rmm # perform operation
fmadd.s f17, f7, f14, f9, rne # perform operation
fmadd.s f17, f7, f14, f9, rtz # perform operation
fmadd.s f17, f7, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x23, 0xc40ff8d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x9661e5b1 # load x3 with value 0x9661e5b1
sw x3, 0(x2) # store 0x9661e5b1 in memory
flw f20, 0(x2) # load 0x9661e5b1 from memory into f20
fmadd.s f23, f22, f14, f20, dyn # perform operation
fmadd.s f23, f22, f14, f20, rdn # perform operation
fmadd.s f23, f22, f14, f20, rmm # perform operation
fmadd.s f23, f22, f14, f20, rne # perform operation
fmadd.s f23, f22, f14, f20, rtz # perform operation
fmadd.s f23, f22, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x13, 0x4ca9ad48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x45929d53 # load x3 with value 0x45929d53
sw x3, 0(x2) # store 0x45929d53 in memory
flw f29, 0(x2) # load 0x45929d53 from memory into f29
fmadd.s f13, f5, f20, f29, dyn # perform operation
fmadd.s f13, f5, f20, f29, rdn # perform operation
fmadd.s f13, f5, f20, f29, rmm # perform operation
fmadd.s f13, f5, f20, f29, rne # perform operation
fmadd.s f13, f5, f20, f29, rtz # perform operation
fmadd.s f13, f5, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x2, 0x841b0901 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x4168596e # load x3 with value 0x4168596e
sw x3, 0(x2) # store 0x4168596e in memory
flw f1, 0(x2) # load 0x4168596e from memory into f1
fmadd.s f2, f3, f29, f1, dyn # perform operation
fmadd.s f2, f3, f29, f1, rdn # perform operation
fmadd.s f2, f3, f29, f1, rmm # perform operation
fmadd.s f2, f3, f29, f1, rne # perform operation
fmadd.s f2, f3, f29, f1, rtz # perform operation
fmadd.s f2, f3, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f29, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x9, 0x0de7ae22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0x2c2a5ccd # load x3 with value 0x2c2a5ccd
sw x3, 0(x2) # store 0x2c2a5ccd in memory
flw f13, 0(x2) # load 0x2c2a5ccd from memory into f13
fmadd.s f9, f28, f31, f13, dyn # perform operation
fmadd.s f9, f28, f31, f13, rdn # perform operation
fmadd.s f9, f28, f31, f13, rmm # perform operation
fmadd.s f9, f28, f31, f13, rne # perform operation
fmadd.s f9, f28, f31, f13, rtz # perform operation
fmadd.s f9, f28, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x27, 0x7fd17ccc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x5c08bc3c # load x3 with value 0x5c08bc3c
sw x3, 0(x2) # store 0x5c08bc3c in memory
flw f19, 0(x2) # load 0x5c08bc3c from memory into f19
fmadd.s f27, f7, f23, f19, dyn # perform operation
fmadd.s f27, f7, f23, f19, rdn # perform operation
fmadd.s f27, f7, f23, f19, rmm # perform operation
fmadd.s f27, f7, f23, f19, rne # perform operation
fmadd.s f27, f7, f23, f19, rtz # perform operation
fmadd.s f27, f7, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f23, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x8, 0x178af12c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xe12727b3 # load x3 with value 0xe12727b3
sw x3, 0(x2) # store 0xe12727b3 in memory
flw f25, 0(x2) # load 0xe12727b3 from memory into f25
fmadd.s f8, f19, f24, f25, dyn # perform operation
fmadd.s f8, f19, f24, f25, rdn # perform operation
fmadd.s f8, f19, f24, f25, rmm # perform operation
fmadd.s f8, f19, f24, f25, rne # perform operation
fmadd.s f8, f19, f24, f25, rtz # perform operation
fmadd.s f8, f19, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x23, 0x2cac647e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x2ff2b484 # load x3 with value 0x2ff2b484
sw x3, 0(x2) # store 0x2ff2b484 in memory
flw f11, 0(x2) # load 0x2ff2b484 from memory into f11
fmadd.s f23, f27, f14, f11, dyn # perform operation
fmadd.s f23, f27, f14, f11, rdn # perform operation
fmadd.s f23, f27, f14, f11, rmm # perform operation
fmadd.s f23, f27, f14, f11, rne # perform operation
fmadd.s f23, f27, f14, f11, rtz # perform operation
fmadd.s f23, f27, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x8, 0xbddee2fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0xd30e3ca9 # load x3 with value 0xd30e3ca9
sw x3, 0(x2) # store 0xd30e3ca9 in memory
flw f10, 0(x2) # load 0xd30e3ca9 from memory into f10
fmadd.s f8, f22, f21, f10, dyn # perform operation
fmadd.s f8, f22, f21, f10, rdn # perform operation
fmadd.s f8, f22, f21, f10, rmm # perform operation
fmadd.s f8, f22, f21, f10, rne # perform operation
fmadd.s f8, f22, f21, f10, rtz # perform operation
fmadd.s f8, f22, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x30, 0xfd826cdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x43538dda # load x3 with value 0x43538dda
sw x3, 0(x2) # store 0x43538dda in memory
flw f17, 0(x2) # load 0x43538dda from memory into f17
fmadd.s f30, f3, f13, f17, dyn # perform operation
fmadd.s f30, f3, f13, f17, rdn # perform operation
fmadd.s f30, f3, f13, f17, rmm # perform operation
fmadd.s f30, f3, f13, f17, rne # perform operation
fmadd.s f30, f3, f13, f17, rtz # perform operation
fmadd.s f30, f3, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x6, 0x99f5c51d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x2aadd1c9 # load x3 with value 0x2aadd1c9
sw x3, 0(x2) # store 0x2aadd1c9 in memory
flw f5, 0(x2) # load 0x2aadd1c9 from memory into f5
fmadd.s f6, f22, f16, f5, dyn # perform operation
fmadd.s f6, f22, f16, f5, rdn # perform operation
fmadd.s f6, f22, f16, f5, rmm # perform operation
fmadd.s f6, f22, f16, f5, rne # perform operation
fmadd.s f6, f22, f16, f5, rtz # perform operation
fmadd.s f6, f22, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f22, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f22, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f22, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f22, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f22, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x21, 0xc5b0fea2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xb9ebafe5 # load x3 with value 0xb9ebafe5
sw x3, 0(x2) # store 0xb9ebafe5 in memory
flw f2, 0(x2) # load 0xb9ebafe5 from memory into f2
fmadd.s f21, f10, f1, f2, dyn # perform operation
fmadd.s f21, f10, f1, f2, rdn # perform operation
fmadd.s f21, f10, f1, f2, rmm # perform operation
fmadd.s f21, f10, f1, f2, rne # perform operation
fmadd.s f21, f10, f1, f2, rtz # perform operation
fmadd.s f21, f10, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f10, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f10, f1, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x16, 0x61016cf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x18384dd4 # load x3 with value 0x18384dd4
sw x3, 0(x2) # store 0x18384dd4 in memory
flw f30, 0(x2) # load 0x18384dd4 from memory into f30
fmadd.s f16, f31, f7, f30, dyn # perform operation
fmadd.s f16, f31, f7, f30, rdn # perform operation
fmadd.s f16, f31, f7, f30, rmm # perform operation
fmadd.s f16, f31, f7, f30, rne # perform operation
fmadd.s f16, f31, f7, f30, rtz # perform operation
fmadd.s f16, f31, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x18, 0x65cb6d6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xc1edd53f # load x3 with value 0xc1edd53f
sw x3, 0(x2) # store 0xc1edd53f in memory
flw f1, 0(x2) # load 0xc1edd53f from memory into f1
fmadd.s f18, f21, f10, f1, dyn # perform operation
fmadd.s f18, f21, f10, f1, rdn # perform operation
fmadd.s f18, f21, f10, f1, rmm # perform operation
fmadd.s f18, f21, f10, f1, rne # perform operation
fmadd.s f18, f21, f10, f1, rtz # perform operation
fmadd.s f18, f21, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x4, 0x98028eca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x173c1457 # load x3 with value 0x173c1457
sw x3, 0(x2) # store 0x173c1457 in memory
flw f28, 0(x2) # load 0x173c1457 from memory into f28
fmadd.s f4, f27, f10, f28, dyn # perform operation
fmadd.s f4, f27, f10, f28, rdn # perform operation
fmadd.s f4, f27, f10, f28, rmm # perform operation
fmadd.s f4, f27, f10, f28, rne # perform operation
fmadd.s f4, f27, f10, f28, rtz # perform operation
fmadd.s f4, f27, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f27, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f27, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f27, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f27, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f27, f10, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x14, 0xf3f8cac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x061c9856 # load x3 with value 0x061c9856
sw x3, 0(x2) # store 0x061c9856 in memory
flw f21, 0(x2) # load 0x061c9856 from memory into f21
fmadd.s f14, f9, f3, f21, dyn # perform operation
fmadd.s f14, f9, f3, f21, rdn # perform operation
fmadd.s f14, f9, f3, f21, rmm # perform operation
fmadd.s f14, f9, f3, f21, rne # perform operation
fmadd.s f14, f9, f3, f21, rtz # perform operation
fmadd.s f14, f9, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f3, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x6, 0x768a0179 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x4a9e2dca # load x3 with value 0x4a9e2dca
sw x3, 0(x2) # store 0x4a9e2dca in memory
flw f15, 0(x2) # load 0x4a9e2dca from memory into f15
fmadd.s f6, f17, f3, f15, dyn # perform operation
fmadd.s f6, f17, f3, f15, rdn # perform operation
fmadd.s f6, f17, f3, f15, rmm # perform operation
fmadd.s f6, f17, f3, f15, rne # perform operation
fmadd.s f6, f17, f3, f15, rtz # perform operation
fmadd.s f6, f17, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f17, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f17, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f17, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f17, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f17, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x30, 0xff86c3f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x45040870 # load x3 with value 0x45040870
sw x3, 0(x2) # store 0x45040870 in memory
flw f20, 0(x2) # load 0x45040870 from memory into f20
fmadd.s f30, f3, f29, f20, dyn # perform operation
fmadd.s f30, f3, f29, f20, rdn # perform operation
fmadd.s f30, f3, f29, f20, rmm # perform operation
fmadd.s f30, f3, f29, f20, rne # perform operation
fmadd.s f30, f3, f29, f20, rtz # perform operation
fmadd.s f30, f3, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f29, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x23, 0xbd2ef6c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0xeb9cadb8 # load x3 with value 0xeb9cadb8
sw x3, 0(x2) # store 0xeb9cadb8 in memory
flw f4, 0(x2) # load 0xeb9cadb8 from memory into f4
fmadd.s f23, f7, f20, f4, dyn # perform operation
fmadd.s f23, f7, f20, f4, rdn # perform operation
fmadd.s f23, f7, f20, f4, rmm # perform operation
fmadd.s f23, f7, f20, f4, rne # perform operation
fmadd.s f23, f7, f20, f4, rtz # perform operation
fmadd.s f23, f7, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f20, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x1, 0x19233add # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x19703daa # load x3 with value 0x19703daa
sw x3, 0(x2) # store 0x19703daa in memory
flw f7, 0(x2) # load 0x19703daa from memory into f7
fmadd.s f1, f22, f6, f7, dyn # perform operation
fmadd.s f1, f22, f6, f7, rdn # perform operation
fmadd.s f1, f22, f6, f7, rmm # perform operation
fmadd.s f1, f22, f6, f7, rne # perform operation
fmadd.s f1, f22, f6, f7, rtz # perform operation
fmadd.s f1, f22, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f6, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x19, 0x0737bfdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x3b97ddb1 # load x3 with value 0x3b97ddb1
sw x3, 0(x2) # store 0x3b97ddb1 in memory
flw f11, 0(x2) # load 0x3b97ddb1 from memory into f11
fmadd.s f19, f26, f9, f11, dyn # perform operation
fmadd.s f19, f26, f9, f11, rdn # perform operation
fmadd.s f19, f26, f9, f11, rmm # perform operation
fmadd.s f19, f26, f9, f11, rne # perform operation
fmadd.s f19, f26, f9, f11, rtz # perform operation
fmadd.s f19, f26, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x17, 0xace8626f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0xe7338be5 # load x3 with value 0xe7338be5
sw x3, 0(x2) # store 0xe7338be5 in memory
flw f11, 0(x2) # load 0xe7338be5 from memory into f11
fmadd.s f17, f6, f24, f11, dyn # perform operation
fmadd.s f17, f6, f24, f11, rdn # perform operation
fmadd.s f17, f6, f24, f11, rmm # perform operation
fmadd.s f17, f6, f24, f11, rne # perform operation
fmadd.s f17, f6, f24, f11, rtz # perform operation
fmadd.s f17, f6, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x11, 0x487aa00b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xbba935fb # load x3 with value 0xbba935fb
sw x3, 0(x2) # store 0xbba935fb in memory
flw f18, 0(x2) # load 0xbba935fb from memory into f18
fmadd.s f11, f1, f28, f18, dyn # perform operation
fmadd.s f11, f1, f28, f18, rdn # perform operation
fmadd.s f11, f1, f28, f18, rmm # perform operation
fmadd.s f11, f1, f28, f18, rne # perform operation
fmadd.s f11, f1, f28, f18, rtz # perform operation
fmadd.s f11, f1, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x28, 0xfa6b515c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x99203a4b # load x3 with value 0x99203a4b
sw x3, 0(x2) # store 0x99203a4b in memory
flw f21, 0(x2) # load 0x99203a4b from memory into f21
fmadd.s f28, f25, f31, f21, dyn # perform operation
fmadd.s f28, f25, f31, f21, rdn # perform operation
fmadd.s f28, f25, f31, f21, rmm # perform operation
fmadd.s f28, f25, f31, f21, rne # perform operation
fmadd.s f28, f25, f31, f21, rtz # perform operation
fmadd.s f28, f25, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x31, 0xf680eb1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x92369080 # load x3 with value 0x92369080
sw x3, 0(x2) # store 0x92369080 in memory
flw f13, 0(x2) # load 0x92369080 from memory into f13
fmadd.s f31, f4, f20, f13, dyn # perform operation
fmadd.s f31, f4, f20, f13, rdn # perform operation
fmadd.s f31, f4, f20, f13, rmm # perform operation
fmadd.s f31, f4, f20, f13, rne # perform operation
fmadd.s f31, f4, f20, f13, rtz # perform operation
fmadd.s f31, f4, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f4, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f4, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f4, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f4, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f4, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x27, 0xc6f3c2ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0xedca49f2 # load x3 with value 0xedca49f2
sw x3, 0(x2) # store 0xedca49f2 in memory
flw f31, 0(x2) # load 0xedca49f2 from memory into f31
fmadd.s f27, f18, f17, f31, dyn # perform operation
fmadd.s f27, f18, f17, f31, rdn # perform operation
fmadd.s f27, f18, f17, f31, rmm # perform operation
fmadd.s f27, f18, f17, f31, rne # perform operation
fmadd.s f27, f18, f17, f31, rtz # perform operation
fmadd.s f27, f18, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x27, 0xd4957719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x4b983f0a # load x3 with value 0x4b983f0a
sw x3, 0(x2) # store 0x4b983f0a in memory
flw f8, 0(x2) # load 0x4b983f0a from memory into f8
fmadd.s f27, f22, f23, f8, dyn # perform operation
fmadd.s f27, f22, f23, f8, rdn # perform operation
fmadd.s f27, f22, f23, f8, rmm # perform operation
fmadd.s f27, f22, f23, f8, rne # perform operation
fmadd.s f27, f22, f23, f8, rtz # perform operation
fmadd.s f27, f22, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x30, 0x3ef80078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xe8012fad # load x3 with value 0xe8012fad
sw x3, 0(x2) # store 0xe8012fad in memory
flw f29, 0(x2) # load 0xe8012fad from memory into f29
fmadd.s f30, f22, f1, f29, dyn # perform operation
fmadd.s f30, f22, f1, f29, rdn # perform operation
fmadd.s f30, f22, f1, f29, rmm # perform operation
fmadd.s f30, f22, f1, f29, rne # perform operation
fmadd.s f30, f22, f1, f29, rtz # perform operation
fmadd.s f30, f22, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f22, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f22, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x23, 0x152cb687 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xefbabef4 # load x3 with value 0xefbabef4
sw x3, 0(x2) # store 0xefbabef4 in memory
flw f21, 0(x2) # load 0xefbabef4 from memory into f21
fmadd.s f23, f3, f4, f21, dyn # perform operation
fmadd.s f23, f3, f4, f21, rdn # perform operation
fmadd.s f23, f3, f4, f21, rmm # perform operation
fmadd.s f23, f3, f4, f21, rne # perform operation
fmadd.s f23, f3, f4, f21, rtz # perform operation
fmadd.s f23, f3, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x4, 0x9dfc00f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x8014f697 # load x3 with value 0x8014f697
sw x3, 0(x2) # store 0x8014f697 in memory
flw f26, 0(x2) # load 0x8014f697 from memory into f26
fmadd.s f4, f17, f16, f26, dyn # perform operation
fmadd.s f4, f17, f16, f26, rdn # perform operation
fmadd.s f4, f17, f16, f26, rmm # perform operation
fmadd.s f4, f17, f16, f26, rne # perform operation
fmadd.s f4, f17, f16, f26, rtz # perform operation
fmadd.s f4, f17, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f17, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f17, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x27, 0x578e2375 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xe36e3de3 # load x3 with value 0xe36e3de3
sw x3, 0(x2) # store 0xe36e3de3 in memory
flw f5, 0(x2) # load 0xe36e3de3 from memory into f5
fmadd.s f27, f9, f11, f5, dyn # perform operation
fmadd.s f27, f9, f11, f5, rdn # perform operation
fmadd.s f27, f9, f11, f5, rmm # perform operation
fmadd.s f27, f9, f11, f5, rne # perform operation
fmadd.s f27, f9, f11, f5, rtz # perform operation
fmadd.s f27, f9, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f11, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x13, 0x78a7cf23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x197a88d6 # load x3 with value 0x197a88d6
sw x3, 0(x2) # store 0x197a88d6 in memory
flw f3, 0(x2) # load 0x197a88d6 from memory into f3
fmadd.s f13, f19, f5, f3, dyn # perform operation
fmadd.s f13, f19, f5, f3, rdn # perform operation
fmadd.s f13, f19, f5, f3, rmm # perform operation
fmadd.s f13, f19, f5, f3, rne # perform operation
fmadd.s f13, f19, f5, f3, rtz # perform operation
fmadd.s f13, f19, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x7, 0x9bd52968 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0xce0f8a38 # load x3 with value 0xce0f8a38
sw x3, 0(x2) # store 0xce0f8a38 in memory
flw f21, 0(x2) # load 0xce0f8a38 from memory into f21
fmadd.s f7, f17, f9, f21, dyn # perform operation
fmadd.s f7, f17, f9, f21, rdn # perform operation
fmadd.s f7, f17, f9, f21, rmm # perform operation
fmadd.s f7, f17, f9, f21, rne # perform operation
fmadd.s f7, f17, f9, f21, rtz # perform operation
fmadd.s f7, f17, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f9, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x22, 0xb69b6fd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x40589351 # load x3 with value 0x40589351
sw x3, 0(x2) # store 0x40589351 in memory
flw f26, 0(x2) # load 0x40589351 from memory into f26
fmadd.s f22, f27, f25, f26, dyn # perform operation
fmadd.s f22, f27, f25, f26, rdn # perform operation
fmadd.s f22, f27, f25, f26, rmm # perform operation
fmadd.s f22, f27, f25, f26, rne # perform operation
fmadd.s f22, f27, f25, f26, rtz # perform operation
fmadd.s f22, f27, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f27, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f27, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f27, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f27, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f27, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x8, 0xa3c49b02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x69075083 # load x3 with value 0x69075083
sw x3, 0(x2) # store 0x69075083 in memory
flw f21, 0(x2) # load 0x69075083 from memory into f21
fmadd.s f8, f16, f15, f21, dyn # perform operation
fmadd.s f8, f16, f15, f21, rdn # perform operation
fmadd.s f8, f16, f15, f21, rmm # perform operation
fmadd.s f8, f16, f15, f21, rne # perform operation
fmadd.s f8, f16, f15, f21, rtz # perform operation
fmadd.s f8, f16, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f15, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x9, 0x44da0e53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x804b7ab3 # load x3 with value 0x804b7ab3
sw x3, 0(x2) # store 0x804b7ab3 in memory
flw f23, 0(x2) # load 0x804b7ab3 from memory into f23
fmadd.s f9, f15, f14, f23, dyn # perform operation
fmadd.s f9, f15, f14, f23, rdn # perform operation
fmadd.s f9, f15, f14, f23, rmm # perform operation
fmadd.s f9, f15, f14, f23, rne # perform operation
fmadd.s f9, f15, f14, f23, rtz # perform operation
fmadd.s f9, f15, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f14, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x27, 0xdda52884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0xd389aaea # load x3 with value 0xd389aaea
sw x3, 0(x2) # store 0xd389aaea in memory
flw f1, 0(x2) # load 0xd389aaea from memory into f1
fmadd.s f27, f8, f17, f1, dyn # perform operation
fmadd.s f27, f8, f17, f1, rdn # perform operation
fmadd.s f27, f8, f17, f1, rmm # perform operation
fmadd.s f27, f8, f17, f1, rne # perform operation
fmadd.s f27, f8, f17, f1, rtz # perform operation
fmadd.s f27, f8, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f8, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f8, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f8, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f8, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f8, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x6, 0x7c5d3574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xb54811f1 # load x3 with value 0xb54811f1
sw x3, 0(x2) # store 0xb54811f1 in memory
flw f12, 0(x2) # load 0xb54811f1 from memory into f12
fmadd.s f6, f20, f27, f12, dyn # perform operation
fmadd.s f6, f20, f27, f12, rdn # perform operation
fmadd.s f6, f20, f27, f12, rmm # perform operation
fmadd.s f6, f20, f27, f12, rne # perform operation
fmadd.s f6, f20, f27, f12, rtz # perform operation
fmadd.s f6, f20, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x30, 0x0c2aef35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x361fc442 # load x3 with value 0x361fc442
sw x3, 0(x2) # store 0x361fc442 in memory
flw f16, 0(x2) # load 0x361fc442 from memory into f16
fmadd.s f30, f28, f4, f16, dyn # perform operation
fmadd.s f30, f28, f4, f16, rdn # perform operation
fmadd.s f30, f28, f4, f16, rmm # perform operation
fmadd.s f30, f28, f4, f16, rne # perform operation
fmadd.s f30, f28, f4, f16, rtz # perform operation
fmadd.s f30, f28, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x6, 0x3dc5b02a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x7450535c # load x3 with value 0x7450535c
sw x3, 0(x2) # store 0x7450535c in memory
flw f12, 0(x2) # load 0x7450535c from memory into f12
fmadd.s f6, f5, f11, f12, dyn # perform operation
fmadd.s f6, f5, f11, f12, rdn # perform operation
fmadd.s f6, f5, f11, f12, rmm # perform operation
fmadd.s f6, f5, f11, f12, rne # perform operation
fmadd.s f6, f5, f11, f12, rtz # perform operation
fmadd.s f6, f5, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x3, 0xf41d31a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0xc90b1b4f # load x3 with value 0xc90b1b4f
sw x3, 0(x2) # store 0xc90b1b4f in memory
flw f11, 0(x2) # load 0xc90b1b4f from memory into f11
fmadd.s f3, f17, f15, f11, dyn # perform operation
fmadd.s f3, f17, f15, f11, rdn # perform operation
fmadd.s f3, f17, f15, f11, rmm # perform operation
fmadd.s f3, f17, f15, f11, rne # perform operation
fmadd.s f3, f17, f15, f11, rtz # perform operation
fmadd.s f3, f17, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f15, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x3, 0x33fca161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0xc0dbe1e8 # load x3 with value 0xc0dbe1e8
sw x3, 0(x2) # store 0xc0dbe1e8 in memory
flw f20, 0(x2) # load 0xc0dbe1e8 from memory into f20
fmadd.s f3, f19, f27, f20, dyn # perform operation
fmadd.s f3, f19, f27, f20, rdn # perform operation
fmadd.s f3, f19, f27, f20, rmm # perform operation
fmadd.s f3, f19, f27, f20, rne # perform operation
fmadd.s f3, f19, f27, f20, rtz # perform operation
fmadd.s f3, f19, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f27, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x17, 0x2c83c97a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0xc24f9273 # load x3 with value 0xc24f9273
sw x3, 0(x2) # store 0xc24f9273 in memory
flw f18, 0(x2) # load 0xc24f9273 from memory into f18
fmadd.s f17, f9, f29, f18, dyn # perform operation
fmadd.s f17, f9, f29, f18, rdn # perform operation
fmadd.s f17, f9, f29, f18, rmm # perform operation
fmadd.s f17, f9, f29, f18, rne # perform operation
fmadd.s f17, f9, f29, f18, rtz # perform operation
fmadd.s f17, f9, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x18, 0xba74e0a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xa653dc52 # load x3 with value 0xa653dc52
sw x3, 0(x2) # store 0xa653dc52 in memory
flw f4, 0(x2) # load 0xa653dc52 from memory into f4
fmadd.s f18, f19, f23, f4, dyn # perform operation
fmadd.s f18, f19, f23, f4, rdn # perform operation
fmadd.s f18, f19, f23, f4, rmm # perform operation
fmadd.s f18, f19, f23, f4, rne # perform operation
fmadd.s f18, f19, f23, f4, rtz # perform operation
fmadd.s f18, f19, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x27, 0x28d7b03c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0xa0b17a69 # load x3 with value 0xa0b17a69
sw x3, 0(x2) # store 0xa0b17a69 in memory
flw f23, 0(x2) # load 0xa0b17a69 from memory into f23
fmadd.s f27, f9, f10, f23, dyn # perform operation
fmadd.s f27, f9, f10, f23, rdn # perform operation
fmadd.s f27, f9, f10, f23, rmm # perform operation
fmadd.s f27, f9, f10, f23, rne # perform operation
fmadd.s f27, f9, f10, f23, rtz # perform operation
fmadd.s f27, f9, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x3, 0x16176070 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x87521df9 # load x3 with value 0x87521df9
sw x3, 0(x2) # store 0x87521df9 in memory
flw f12, 0(x2) # load 0x87521df9 from memory into f12
fmadd.s f3, f10, f22, f12, dyn # perform operation
fmadd.s f3, f10, f22, f12, rdn # perform operation
fmadd.s f3, f10, f22, f12, rmm # perform operation
fmadd.s f3, f10, f22, f12, rne # perform operation
fmadd.s f3, f10, f22, f12, rtz # perform operation
fmadd.s f3, f10, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x11, 0x3ff8f0bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x7fa4c2b4 # load x3 with value 0x7fa4c2b4
sw x3, 0(x2) # store 0x7fa4c2b4 in memory
flw f30, 0(x2) # load 0x7fa4c2b4 from memory into f30
fmadd.s f11, f12, f8, f30, dyn # perform operation
fmadd.s f11, f12, f8, f30, rdn # perform operation
fmadd.s f11, f12, f8, f30, rmm # perform operation
fmadd.s f11, f12, f8, f30, rne # perform operation
fmadd.s f11, f12, f8, f30, rtz # perform operation
fmadd.s f11, f12, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f12, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f12, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x23, 0x7d566858 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
li x3, 0xd6cddc77 # load x3 with value 0xd6cddc77
sw x3, 0(x2) # store 0xd6cddc77 in memory
flw f5, 0(x2) # load 0xd6cddc77 from memory into f5
fmadd.s f23, f29, f14, f5, dyn # perform operation
fmadd.s f23, f29, f14, f5, rdn # perform operation
fmadd.s f23, f29, f14, f5, rmm # perform operation
fmadd.s f23, f29, f14, f5, rne # perform operation
fmadd.s f23, f29, f14, f5, rtz # perform operation
fmadd.s f23, f29, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x28, 0x753e08f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x4d319aa8 # load x3 with value 0x4d319aa8
sw x3, 0(x2) # store 0x4d319aa8 in memory
flw f19, 0(x2) # load 0x4d319aa8 from memory into f19
fmadd.s f28, f13, f27, f19, dyn # perform operation
fmadd.s f28, f13, f27, f19, rdn # perform operation
fmadd.s f28, f13, f27, f19, rmm # perform operation
fmadd.s f28, f13, f27, f19, rne # perform operation
fmadd.s f28, f13, f27, f19, rtz # perform operation
fmadd.s f28, f13, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x18, 0x03065bf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xe36f9752 # load x3 with value 0xe36f9752
sw x3, 0(x2) # store 0xe36f9752 in memory
flw f1, 0(x2) # load 0xe36f9752 from memory into f1
fmadd.s f18, f20, f22, f1, dyn # perform operation
fmadd.s f18, f20, f22, f1, rdn # perform operation
fmadd.s f18, f20, f22, f1, rmm # perform operation
fmadd.s f18, f20, f22, f1, rne # perform operation
fmadd.s f18, f20, f22, f1, rtz # perform operation
fmadd.s f18, f20, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x6, 0xeba5fe97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x07d6ede8 # load x3 with value 0x07d6ede8
sw x3, 0(x2) # store 0x07d6ede8 in memory
flw f9, 0(x2) # load 0x07d6ede8 from memory into f9
fmadd.s f6, f11, f22, f9, dyn # perform operation
fmadd.s f6, f11, f22, f9, rdn # perform operation
fmadd.s f6, f11, f22, f9, rmm # perform operation
fmadd.s f6, f11, f22, f9, rne # perform operation
fmadd.s f6, f11, f22, f9, rtz # perform operation
fmadd.s f6, f11, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x2, 0x8b614867 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x1e1ba040 # load x3 with value 0x1e1ba040
sw x3, 0(x2) # store 0x1e1ba040 in memory
flw f13, 0(x2) # load 0x1e1ba040 from memory into f13
fmadd.s f2, f6, f10, f13, dyn # perform operation
fmadd.s f2, f6, f10, f13, rdn # perform operation
fmadd.s f2, f6, f10, f13, rmm # perform operation
fmadd.s f2, f6, f10, f13, rne # perform operation
fmadd.s f2, f6, f10, f13, rtz # perform operation
fmadd.s f2, f6, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f6, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f6, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x13, 0xccbf5d23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x7bda70bc # load x3 with value 0x7bda70bc
sw x3, 0(x2) # store 0x7bda70bc in memory
flw f9, 0(x2) # load 0x7bda70bc from memory into f9
fmadd.s f13, f10, f1, f9, dyn # perform operation
fmadd.s f13, f10, f1, f9, rdn # perform operation
fmadd.s f13, f10, f1, f9, rmm # perform operation
fmadd.s f13, f10, f1, f9, rne # perform operation
fmadd.s f13, f10, f1, f9, rtz # perform operation
fmadd.s f13, f10, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x7, 0xee44c64d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x643fad8c # load x3 with value 0x643fad8c
sw x3, 0(x2) # store 0x643fad8c in memory
flw f2, 0(x2) # load 0x643fad8c from memory into f2
fmadd.s f7, f24, f11, f2, dyn # perform operation
fmadd.s f7, f24, f11, f2, rdn # perform operation
fmadd.s f7, f24, f11, f2, rmm # perform operation
fmadd.s f7, f24, f11, f2, rne # perform operation
fmadd.s f7, f24, f11, f2, rtz # perform operation
fmadd.s f7, f24, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f24, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f24, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f24, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f24, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f24, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x12, 0xfddf6383 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xb16ca300 # load x3 with value 0xb16ca300
sw x3, 0(x2) # store 0xb16ca300 in memory
flw f21, 0(x2) # load 0xb16ca300 from memory into f21
fmadd.s f12, f14, f4, f21, dyn # perform operation
fmadd.s f12, f14, f4, f21, rdn # perform operation
fmadd.s f12, f14, f4, f21, rmm # perform operation
fmadd.s f12, f14, f4, f21, rne # perform operation
fmadd.s f12, f14, f4, f21, rtz # perform operation
fmadd.s f12, f14, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f4, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x16, 0xe721659e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x9d950455 # load x3 with value 0x9d950455
sw x3, 0(x2) # store 0x9d950455 in memory
flw f11, 0(x2) # load 0x9d950455 from memory into f11
fmadd.s f16, f26, f23, f11, dyn # perform operation
fmadd.s f16, f26, f23, f11, rdn # perform operation
fmadd.s f16, f26, f23, f11, rmm # perform operation
fmadd.s f16, f26, f23, f11, rne # perform operation
fmadd.s f16, f26, f23, f11, rtz # perform operation
fmadd.s f16, f26, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f23, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x2, 0xb4a87eba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x9a0529a6 # load x3 with value 0x9a0529a6
sw x3, 0(x2) # store 0x9a0529a6 in memory
flw f14, 0(x2) # load 0x9a0529a6 from memory into f14
fmadd.s f2, f15, f24, f14, dyn # perform operation
fmadd.s f2, f15, f24, f14, rdn # perform operation
fmadd.s f2, f15, f24, f14, rmm # perform operation
fmadd.s f2, f15, f24, f14, rne # perform operation
fmadd.s f2, f15, f24, f14, rtz # perform operation
fmadd.s f2, f15, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x15, 0xd4943a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x1a732aef # load x3 with value 0x1a732aef
sw x3, 0(x2) # store 0x1a732aef in memory
flw f14, 0(x2) # load 0x1a732aef from memory into f14
fmadd.s f15, f12, f8, f14, dyn # perform operation
fmadd.s f15, f12, f8, f14, rdn # perform operation
fmadd.s f15, f12, f8, f14, rmm # perform operation
fmadd.s f15, f12, f8, f14, rne # perform operation
fmadd.s f15, f12, f8, f14, rtz # perform operation
fmadd.s f15, f12, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x30, 0x543ae286 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xf27e72d1 # load x3 with value 0xf27e72d1
sw x3, 0(x2) # store 0xf27e72d1 in memory
flw f29, 0(x2) # load 0xf27e72d1 from memory into f29
fmadd.s f30, f26, f17, f29, dyn # perform operation
fmadd.s f30, f26, f17, f29, rdn # perform operation
fmadd.s f30, f26, f17, f29, rmm # perform operation
fmadd.s f30, f26, f17, f29, rne # perform operation
fmadd.s f30, f26, f17, f29, rtz # perform operation
fmadd.s f30, f26, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x7, 0x19bf18a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xbd35f6ea # load x3 with value 0xbd35f6ea
sw x3, 0(x2) # store 0xbd35f6ea in memory
flw f8, 0(x2) # load 0xbd35f6ea from memory into f8
fmadd.s f7, f1, f21, f8, dyn # perform operation
fmadd.s f7, f1, f21, f8, rdn # perform operation
fmadd.s f7, f1, f21, f8, rmm # perform operation
fmadd.s f7, f1, f21, f8, rne # perform operation
fmadd.s f7, f1, f21, f8, rtz # perform operation
fmadd.s f7, f1, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f21, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x14, 0x6bf3ef4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x1421cdf0 # load x3 with value 0x1421cdf0
sw x3, 0(x2) # store 0x1421cdf0 in memory
flw f30, 0(x2) # load 0x1421cdf0 from memory into f30
fmadd.s f14, f12, f5, f30, dyn # perform operation
fmadd.s f14, f12, f5, f30, rdn # perform operation
fmadd.s f14, f12, f5, f30, rmm # perform operation
fmadd.s f14, f12, f5, f30, rne # perform operation
fmadd.s f14, f12, f5, f30, rtz # perform operation
fmadd.s f14, f12, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x25, 0xc9f98cb8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x377173c3 # load x3 with value 0x377173c3
sw x3, 0(x2) # store 0x377173c3 in memory
flw f22, 0(x2) # load 0x377173c3 from memory into f22
fmadd.s f25, f8, f26, f22, dyn # perform operation
fmadd.s f25, f8, f26, f22, rdn # perform operation
fmadd.s f25, f8, f26, f22, rmm # perform operation
fmadd.s f25, f8, f26, f22, rne # perform operation
fmadd.s f25, f8, f26, f22, rtz # perform operation
fmadd.s f25, f8, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f8, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f8, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x5, 0x8d3287e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x67f97668 # load x3 with value 0x67f97668
sw x3, 0(x2) # store 0x67f97668 in memory
flw f17, 0(x2) # load 0x67f97668 from memory into f17
fmadd.s f5, f13, f19, f17, dyn # perform operation
fmadd.s f5, f13, f19, f17, rdn # perform operation
fmadd.s f5, f13, f19, f17, rmm # perform operation
fmadd.s f5, f13, f19, f17, rne # perform operation
fmadd.s f5, f13, f19, f17, rtz # perform operation
fmadd.s f5, f13, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f19, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x28, 0x6681a049 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x791f0e11 # load x3 with value 0x791f0e11
sw x3, 0(x2) # store 0x791f0e11 in memory
flw f18, 0(x2) # load 0x791f0e11 from memory into f18
fmadd.s f28, f26, f30, f18, dyn # perform operation
fmadd.s f28, f26, f30, f18, rdn # perform operation
fmadd.s f28, f26, f30, f18, rmm # perform operation
fmadd.s f28, f26, f30, f18, rne # perform operation
fmadd.s f28, f26, f30, f18, rtz # perform operation
fmadd.s f28, f26, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f26, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f26, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x24, 0x94cae917 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x3cdea906 # load x3 with value 0x3cdea906
sw x3, 0(x2) # store 0x3cdea906 in memory
flw f5, 0(x2) # load 0x3cdea906 from memory into f5
fmadd.s f24, f7, f17, f5, dyn # perform operation
fmadd.s f24, f7, f17, f5, rdn # perform operation
fmadd.s f24, f7, f17, f5, rmm # perform operation
fmadd.s f24, f7, f17, f5, rne # perform operation
fmadd.s f24, f7, f17, f5, rtz # perform operation
fmadd.s f24, f7, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x23, 0x1cd30038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x5571d36c # load x3 with value 0x5571d36c
sw x3, 0(x2) # store 0x5571d36c in memory
flw f5, 0(x2) # load 0x5571d36c from memory into f5
fmadd.s f23, f28, f7, f5, dyn # perform operation
fmadd.s f23, f28, f7, f5, rdn # perform operation
fmadd.s f23, f28, f7, f5, rmm # perform operation
fmadd.s f23, f28, f7, f5, rne # perform operation
fmadd.s f23, f28, f7, f5, rtz # perform operation
fmadd.s f23, f28, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f28, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x4, 0x99c8e750 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x1b3e30d0 # load x3 with value 0x1b3e30d0
sw x3, 0(x2) # store 0x1b3e30d0 in memory
flw f29, 0(x2) # load 0x1b3e30d0 from memory into f29
fmadd.s f4, f17, f18, f29, dyn # perform operation
fmadd.s f4, f17, f18, f29, rdn # perform operation
fmadd.s f4, f17, f18, f29, rmm # perform operation
fmadd.s f4, f17, f18, f29, rne # perform operation
fmadd.s f4, f17, f18, f29, rtz # perform operation
fmadd.s f4, f17, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f17, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f17, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x2, 0x3c627430 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x963de8df # load x3 with value 0x963de8df
sw x3, 0(x2) # store 0x963de8df in memory
flw f7, 0(x2) # load 0x963de8df from memory into f7
fmadd.s f2, f19, f29, f7, dyn # perform operation
fmadd.s f2, f19, f29, f7, rdn # perform operation
fmadd.s f2, f19, f29, f7, rmm # perform operation
fmadd.s f2, f19, f29, f7, rne # perform operation
fmadd.s f2, f19, f29, f7, rtz # perform operation
fmadd.s f2, f19, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f19, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f19, f29, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x19, 0x33101e2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x507c5a45 # load x3 with value 0x507c5a45
sw x3, 0(x2) # store 0x507c5a45 in memory
flw f13, 0(x2) # load 0x507c5a45 from memory into f13
fmadd.s f19, f31, f8, f13, dyn # perform operation
fmadd.s f19, f31, f8, f13, rdn # perform operation
fmadd.s f19, f31, f8, f13, rmm # perform operation
fmadd.s f19, f31, f8, f13, rne # perform operation
fmadd.s f19, f31, f8, f13, rtz # perform operation
fmadd.s f19, f31, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f31, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f31, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f31, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f31, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f31, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x12, 0x0a862cfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x81c7c5e1 # load x3 with value 0x81c7c5e1
sw x3, 0(x2) # store 0x81c7c5e1 in memory
flw f13, 0(x2) # load 0x81c7c5e1 from memory into f13
fmadd.s f12, f11, f10, f13, dyn # perform operation
fmadd.s f12, f11, f10, f13, rdn # perform operation
fmadd.s f12, f11, f10, f13, rmm # perform operation
fmadd.s f12, f11, f10, f13, rne # perform operation
fmadd.s f12, f11, f10, f13, rtz # perform operation
fmadd.s f12, f11, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f11, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f11, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x14, 0x28f1e874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0xa27f4887 # load x3 with value 0xa27f4887
sw x3, 0(x2) # store 0xa27f4887 in memory
flw f16, 0(x2) # load 0xa27f4887 from memory into f16
fmadd.s f14, f18, f21, f16, dyn # perform operation
fmadd.s f14, f18, f21, f16, rdn # perform operation
fmadd.s f14, f18, f21, f16, rmm # perform operation
fmadd.s f14, f18, f21, f16, rne # perform operation
fmadd.s f14, f18, f21, f16, rtz # perform operation
fmadd.s f14, f18, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x22, 0x3cf07ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x9dc14189 # load x3 with value 0x9dc14189
sw x3, 0(x2) # store 0x9dc14189 in memory
flw f14, 0(x2) # load 0x9dc14189 from memory into f14
fmadd.s f22, f1, f6, f14, dyn # perform operation
fmadd.s f22, f1, f6, f14, rdn # perform operation
fmadd.s f22, f1, f6, f14, rmm # perform operation
fmadd.s f22, f1, f6, f14, rne # perform operation
fmadd.s f22, f1, f6, f14, rtz # perform operation
fmadd.s f22, f1, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x16, 0x94072beb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0x1b1839bf # load x3 with value 0x1b1839bf
sw x3, 0(x2) # store 0x1b1839bf in memory
flw f15, 0(x2) # load 0x1b1839bf from memory into f15
fmadd.s f16, f30, f25, f15, dyn # perform operation
fmadd.s f16, f30, f25, f15, rdn # perform operation
fmadd.s f16, f30, f25, f15, rmm # perform operation
fmadd.s f16, f30, f25, f15, rne # perform operation
fmadd.s f16, f30, f25, f15, rtz # perform operation
fmadd.s f16, f30, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f25, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x8, 0x8c63e6f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xa3236e2c # load x3 with value 0xa3236e2c
sw x3, 0(x2) # store 0xa3236e2c in memory
flw f14, 0(x2) # load 0xa3236e2c from memory into f14
fmadd.s f8, f24, f22, f14, dyn # perform operation
fmadd.s f8, f24, f22, f14, rdn # perform operation
fmadd.s f8, f24, f22, f14, rmm # perform operation
fmadd.s f8, f24, f22, f14, rne # perform operation
fmadd.s f8, f24, f22, f14, rtz # perform operation
fmadd.s f8, f24, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f22, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x18, 0xd26d9632 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0x5ab141e8 # load x3 with value 0x5ab141e8
sw x3, 0(x2) # store 0x5ab141e8 in memory
flw f15, 0(x2) # load 0x5ab141e8 from memory into f15
fmadd.s f18, f20, f24, f15, dyn # perform operation
fmadd.s f18, f20, f24, f15, rdn # perform operation
fmadd.s f18, f20, f24, f15, rmm # perform operation
fmadd.s f18, f20, f24, f15, rne # perform operation
fmadd.s f18, f20, f24, f15, rtz # perform operation
fmadd.s f18, f20, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x7, 0xc10879c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x14a78b70 # load x3 with value 0x14a78b70
sw x3, 0(x2) # store 0x14a78b70 in memory
flw f25, 0(x2) # load 0x14a78b70 from memory into f25
fmadd.s f7, f23, f9, f25, dyn # perform operation
fmadd.s f7, f23, f9, f25, rdn # perform operation
fmadd.s f7, f23, f9, f25, rmm # perform operation
fmadd.s f7, f23, f9, f25, rne # perform operation
fmadd.s f7, f23, f9, f25, rtz # perform operation
fmadd.s f7, f23, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x27, 0xd8c835e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0xc0586c54 # load x3 with value 0xc0586c54
sw x3, 0(x2) # store 0xc0586c54 in memory
flw f24, 0(x2) # load 0xc0586c54 from memory into f24
fmadd.s f27, f9, f29, f24, dyn # perform operation
fmadd.s f27, f9, f29, f24, rdn # perform operation
fmadd.s f27, f9, f29, f24, rmm # perform operation
fmadd.s f27, f9, f29, f24, rne # perform operation
fmadd.s f27, f9, f29, f24, rtz # perform operation
fmadd.s f27, f9, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x21, 0x3a77f07d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x3e942a06 # load x3 with value 0x3e942a06
sw x3, 0(x2) # store 0x3e942a06 in memory
flw f24, 0(x2) # load 0x3e942a06 from memory into f24
fmadd.s f21, f1, f6, f24, dyn # perform operation
fmadd.s f21, f1, f6, f24, rdn # perform operation
fmadd.s f21, f1, f6, f24, rmm # perform operation
fmadd.s f21, f1, f6, f24, rne # perform operation
fmadd.s f21, f1, f6, f24, rtz # perform operation
fmadd.s f21, f1, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x11, 0x81ed11b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xb23c6764 # load x3 with value 0xb23c6764
sw x3, 0(x2) # store 0xb23c6764 in memory
flw f10, 0(x2) # load 0xb23c6764 from memory into f10
fmadd.s f11, f31, f14, f10, dyn # perform operation
fmadd.s f11, f31, f14, f10, rdn # perform operation
fmadd.s f11, f31, f14, f10, rmm # perform operation
fmadd.s f11, f31, f14, f10, rne # perform operation
fmadd.s f11, f31, f14, f10, rtz # perform operation
fmadd.s f11, f31, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x28, 0xe2d92161 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x02d09e45 # load x3 with value 0x02d09e45
sw x3, 0(x2) # store 0x02d09e45 in memory
flw f29, 0(x2) # load 0x02d09e45 from memory into f29
fmadd.s f28, f1, f8, f29, dyn # perform operation
fmadd.s f28, f1, f8, f29, rdn # perform operation
fmadd.s f28, f1, f8, f29, rmm # perform operation
fmadd.s f28, f1, f8, f29, rne # perform operation
fmadd.s f28, f1, f8, f29, rtz # perform operation
fmadd.s f28, f1, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x10, 0x1abbf041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x7119c0e8 # load x3 with value 0x7119c0e8
sw x3, 0(x2) # store 0x7119c0e8 in memory
flw f16, 0(x2) # load 0x7119c0e8 from memory into f16
fmadd.s f10, f23, f9, f16, dyn # perform operation
fmadd.s f10, f23, f9, f16, rdn # perform operation
fmadd.s f10, f23, f9, f16, rmm # perform operation
fmadd.s f10, f23, f9, f16, rne # perform operation
fmadd.s f10, f23, f9, f16, rtz # perform operation
fmadd.s f10, f23, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x8, 0xfd9a3782 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x4efd07ae # load x3 with value 0x4efd07ae
sw x3, 0(x2) # store 0x4efd07ae in memory
flw f31, 0(x2) # load 0x4efd07ae from memory into f31
fmadd.s f8, f10, f14, f31, dyn # perform operation
fmadd.s f8, f10, f14, f31, rdn # perform operation
fmadd.s f8, f10, f14, f31, rmm # perform operation
fmadd.s f8, f10, f14, f31, rne # perform operation
fmadd.s f8, f10, f14, f31, rtz # perform operation
fmadd.s f8, f10, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f14, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x7, 0xf2a8ddcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x73156f35 # load x3 with value 0x73156f35
sw x3, 0(x2) # store 0x73156f35 in memory
flw f27, 0(x2) # load 0x73156f35 from memory into f27
fmadd.s f7, f10, f28, f27, dyn # perform operation
fmadd.s f7, f10, f28, f27, rdn # perform operation
fmadd.s f7, f10, f28, f27, rmm # perform operation
fmadd.s f7, f10, f28, f27, rne # perform operation
fmadd.s f7, f10, f28, f27, rtz # perform operation
fmadd.s f7, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x4, 0xd68c773e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xdcb0a360 # load x3 with value 0xdcb0a360
sw x3, 0(x2) # store 0xdcb0a360 in memory
flw f12, 0(x2) # load 0xdcb0a360 from memory into f12
fmadd.s f4, f15, f17, f12, dyn # perform operation
fmadd.s f4, f15, f17, f12, rdn # perform operation
fmadd.s f4, f15, f17, f12, rmm # perform operation
fmadd.s f4, f15, f17, f12, rne # perform operation
fmadd.s f4, f15, f17, f12, rtz # perform operation
fmadd.s f4, f15, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f17, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x16, 0x1e001ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x23f63eaa # load x3 with value 0x23f63eaa
sw x3, 0(x2) # store 0x23f63eaa in memory
flw f23, 0(x2) # load 0x23f63eaa from memory into f23
fmadd.s f16, f11, f28, f23, dyn # perform operation
fmadd.s f16, f11, f28, f23, rdn # perform operation
fmadd.s f16, f11, f28, f23, rmm # perform operation
fmadd.s f16, f11, f28, f23, rne # perform operation
fmadd.s f16, f11, f28, f23, rtz # perform operation
fmadd.s f16, f11, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x27, 0xf495d280 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xebadee50 # load x3 with value 0xebadee50
sw x3, 0(x2) # store 0xebadee50 in memory
flw f16, 0(x2) # load 0xebadee50 from memory into f16
fmadd.s f27, f18, f5, f16, dyn # perform operation
fmadd.s f27, f18, f5, f16, rdn # perform operation
fmadd.s f27, f18, f5, f16, rmm # perform operation
fmadd.s f27, f18, f5, f16, rne # perform operation
fmadd.s f27, f18, f5, f16, rtz # perform operation
fmadd.s f27, f18, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f5, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x14, 0xeabf35eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xe3622719 # load x3 with value 0xe3622719
sw x3, 0(x2) # store 0xe3622719 in memory
flw f21, 0(x2) # load 0xe3622719 from memory into f21
fmadd.s f14, f24, f22, f21, dyn # perform operation
fmadd.s f14, f24, f22, f21, rdn # perform operation
fmadd.s f14, f24, f22, f21, rmm # perform operation
fmadd.s f14, f24, f22, f21, rne # perform operation
fmadd.s f14, f24, f22, f21, rtz # perform operation
fmadd.s f14, f24, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x13, 0xbe2b786c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x8e2b6a03 # load x3 with value 0x8e2b6a03
sw x3, 0(x2) # store 0x8e2b6a03 in memory
flw f9, 0(x2) # load 0x8e2b6a03 from memory into f9
fmadd.s f13, f20, f18, f9, dyn # perform operation
fmadd.s f13, f20, f18, f9, rdn # perform operation
fmadd.s f13, f20, f18, f9, rmm # perform operation
fmadd.s f13, f20, f18, f9, rne # perform operation
fmadd.s f13, f20, f18, f9, rtz # perform operation
fmadd.s f13, f20, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f20, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f20, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x21, 0x2217eeb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x7caa20fe # load x3 with value 0x7caa20fe
sw x3, 0(x2) # store 0x7caa20fe in memory
flw f7, 0(x2) # load 0x7caa20fe from memory into f7
fmadd.s f21, f3, f14, f7, dyn # perform operation
fmadd.s f21, f3, f14, f7, rdn # perform operation
fmadd.s f21, f3, f14, f7, rmm # perform operation
fmadd.s f21, f3, f14, f7, rne # perform operation
fmadd.s f21, f3, f14, f7, rtz # perform operation
fmadd.s f21, f3, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f14, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x24, 0xffd1100d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x6ed67704 # load x3 with value 0x6ed67704
sw x3, 0(x2) # store 0x6ed67704 in memory
flw f19, 0(x2) # load 0x6ed67704 from memory into f19
fmadd.s f24, f26, f30, f19, dyn # perform operation
fmadd.s f24, f26, f30, f19, rdn # perform operation
fmadd.s f24, f26, f30, f19, rmm # perform operation
fmadd.s f24, f26, f30, f19, rne # perform operation
fmadd.s f24, f26, f30, f19, rtz # perform operation
fmadd.s f24, f26, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f30, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x30, 0x61ca7110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xfc18d2db # load x3 with value 0xfc18d2db
sw x3, 0(x2) # store 0xfc18d2db in memory
flw f27, 0(x2) # load 0xfc18d2db from memory into f27
fmadd.s f30, f24, f6, f27, dyn # perform operation
fmadd.s f30, f24, f6, f27, rdn # perform operation
fmadd.s f30, f24, f6, f27, rmm # perform operation
fmadd.s f30, f24, f6, f27, rne # perform operation
fmadd.s f30, f24, f6, f27, rtz # perform operation
fmadd.s f30, f24, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f24, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f24, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x8, 0x1250f341 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x91587d4a # load x3 with value 0x91587d4a
sw x3, 0(x2) # store 0x91587d4a in memory
flw f22, 0(x2) # load 0x91587d4a from memory into f22
fmadd.s f8, f18, f26, f22, dyn # perform operation
fmadd.s f8, f18, f26, f22, rdn # perform operation
fmadd.s f8, f18, f26, f22, rmm # perform operation
fmadd.s f8, f18, f26, f22, rne # perform operation
fmadd.s f8, f18, f26, f22, rtz # perform operation
fmadd.s f8, f18, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f18, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f18, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x13, 0xabbf38f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x240bc2d6 # load x3 with value 0x240bc2d6
sw x3, 0(x2) # store 0x240bc2d6 in memory
flw f8, 0(x2) # load 0x240bc2d6 from memory into f8
fmadd.s f13, f25, f3, f8, dyn # perform operation
fmadd.s f13, f25, f3, f8, rdn # perform operation
fmadd.s f13, f25, f3, f8, rmm # perform operation
fmadd.s f13, f25, f3, f8, rne # perform operation
fmadd.s f13, f25, f3, f8, rtz # perform operation
fmadd.s f13, f25, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f25, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f25, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f25, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f25, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f25, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x23, 0x55be6965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xfd95d55c # load x3 with value 0xfd95d55c
sw x3, 0(x2) # store 0xfd95d55c in memory
flw f17, 0(x2) # load 0xfd95d55c from memory into f17
fmadd.s f23, f15, f16, f17, dyn # perform operation
fmadd.s f23, f15, f16, f17, rdn # perform operation
fmadd.s f23, f15, f16, f17, rmm # perform operation
fmadd.s f23, f15, f16, f17, rne # perform operation
fmadd.s f23, f15, f16, f17, rtz # perform operation
fmadd.s f23, f15, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f15, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f15, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f15, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f15, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f15, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x27, 0x52afd825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x2c614e15 # load x3 with value 0x2c614e15
sw x3, 0(x2) # store 0x2c614e15 in memory
flw f1, 0(x2) # load 0x2c614e15 from memory into f1
fmadd.s f27, f2, f13, f1, dyn # perform operation
fmadd.s f27, f2, f13, f1, rdn # perform operation
fmadd.s f27, f2, f13, f1, rmm # perform operation
fmadd.s f27, f2, f13, f1, rne # perform operation
fmadd.s f27, f2, f13, f1, rtz # perform operation
fmadd.s f27, f2, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x21, 0xf88abb09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xf1a1192e # load x3 with value 0xf1a1192e
sw x3, 0(x2) # store 0xf1a1192e in memory
flw f29, 0(x2) # load 0xf1a1192e from memory into f29
fmadd.s f21, f22, f3, f29, dyn # perform operation
fmadd.s f21, f22, f3, f29, rdn # perform operation
fmadd.s f21, f22, f3, f29, rmm # perform operation
fmadd.s f21, f22, f3, f29, rne # perform operation
fmadd.s f21, f22, f3, f29, rtz # perform operation
fmadd.s f21, f22, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f22, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f22, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f22, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f22, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f22, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x9, 0xf4e4348f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x9e457594 # load x3 with value 0x9e457594
sw x3, 0(x2) # store 0x9e457594 in memory
flw f21, 0(x2) # load 0x9e457594 from memory into f21
fmadd.s f9, f3, f10, f21, dyn # perform operation
fmadd.s f9, f3, f10, f21, rdn # perform operation
fmadd.s f9, f3, f10, f21, rmm # perform operation
fmadd.s f9, f3, f10, f21, rne # perform operation
fmadd.s f9, f3, f10, f21, rtz # perform operation
fmadd.s f9, f3, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f10, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x25, 0x125b7b08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x1d872c8f # load x3 with value 0x1d872c8f
sw x3, 0(x2) # store 0x1d872c8f in memory
flw f4, 0(x2) # load 0x1d872c8f from memory into f4
fmadd.s f25, f13, f28, f4, dyn # perform operation
fmadd.s f25, f13, f28, f4, rdn # perform operation
fmadd.s f25, f13, f28, f4, rmm # perform operation
fmadd.s f25, f13, f28, f4, rne # perform operation
fmadd.s f25, f13, f28, f4, rtz # perform operation
fmadd.s f25, f13, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f28, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x7, 0x0c0cc3a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x1ab0bf8b # load x3 with value 0x1ab0bf8b
sw x3, 0(x2) # store 0x1ab0bf8b in memory
flw f13, 0(x2) # load 0x1ab0bf8b from memory into f13
fmadd.s f7, f4, f9, f13, dyn # perform operation
fmadd.s f7, f4, f9, f13, rdn # perform operation
fmadd.s f7, f4, f9, f13, rmm # perform operation
fmadd.s f7, f4, f9, f13, rne # perform operation
fmadd.s f7, f4, f9, f13, rtz # perform operation
fmadd.s f7, f4, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f4, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f4, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x15, 0xe6d8f772 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0xcd9a9c26 # load x3 with value 0xcd9a9c26
sw x3, 0(x2) # store 0xcd9a9c26 in memory
flw f3, 0(x2) # load 0xcd9a9c26 from memory into f3
fmadd.s f15, f20, f31, f3, dyn # perform operation
fmadd.s f15, f20, f31, f3, rdn # perform operation
fmadd.s f15, f20, f31, f3, rmm # perform operation
fmadd.s f15, f20, f31, f3, rne # perform operation
fmadd.s f15, f20, f31, f3, rtz # perform operation
fmadd.s f15, f20, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x1, 0x7fc14804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x6ef52d73 # load x3 with value 0x6ef52d73
sw x3, 0(x2) # store 0x6ef52d73 in memory
flw f17, 0(x2) # load 0x6ef52d73 from memory into f17
fmadd.s f1, f7, f13, f17, dyn # perform operation
fmadd.s f1, f7, f13, f17, rdn # perform operation
fmadd.s f1, f7, f13, f17, rmm # perform operation
fmadd.s f1, f7, f13, f17, rne # perform operation
fmadd.s f1, f7, f13, f17, rtz # perform operation
fmadd.s f1, f7, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x23, 0x51975e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x64546a2b # load x3 with value 0x64546a2b
sw x3, 0(x2) # store 0x64546a2b in memory
flw f10, 0(x2) # load 0x64546a2b from memory into f10
fmadd.s f23, f25, f29, f10, dyn # perform operation
fmadd.s f23, f25, f29, f10, rdn # perform operation
fmadd.s f23, f25, f29, f10, rmm # perform operation
fmadd.s f23, f25, f29, f10, rne # perform operation
fmadd.s f23, f25, f29, f10, rtz # perform operation
fmadd.s f23, f25, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f25, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f25, f29, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x23, 0xc8497ada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x0dae5bde # load x3 with value 0x0dae5bde
sw x3, 0(x2) # store 0x0dae5bde in memory
flw f9, 0(x2) # load 0x0dae5bde from memory into f9
fmadd.s f23, f2, f7, f9, dyn # perform operation
fmadd.s f23, f2, f7, f9, rdn # perform operation
fmadd.s f23, f2, f7, f9, rmm # perform operation
fmadd.s f23, f2, f7, f9, rne # perform operation
fmadd.s f23, f2, f7, f9, rtz # perform operation
fmadd.s f23, f2, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f7, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x27, 0xf608480e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x1607255a # load x3 with value 0x1607255a
sw x3, 0(x2) # store 0x1607255a in memory
flw f1, 0(x2) # load 0x1607255a from memory into f1
fmadd.s f27, f3, f17, f1, dyn # perform operation
fmadd.s f27, f3, f17, f1, rdn # perform operation
fmadd.s f27, f3, f17, f1, rmm # perform operation
fmadd.s f27, f3, f17, f1, rne # perform operation
fmadd.s f27, f3, f17, f1, rtz # perform operation
fmadd.s f27, f3, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x4, 0x3bbc0396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xf02c81ee # load x3 with value 0xf02c81ee
sw x3, 0(x2) # store 0xf02c81ee in memory
flw f27, 0(x2) # load 0xf02c81ee from memory into f27
fmadd.s f4, f13, f11, f27, dyn # perform operation
fmadd.s f4, f13, f11, f27, rdn # perform operation
fmadd.s f4, f13, f11, f27, rmm # perform operation
fmadd.s f4, f13, f11, f27, rne # perform operation
fmadd.s f4, f13, f11, f27, rtz # perform operation
fmadd.s f4, f13, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f13, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x7, 0x191a412c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x15a86769 # load x3 with value 0x15a86769
sw x3, 0(x2) # store 0x15a86769 in memory
flw f9, 0(x2) # load 0x15a86769 from memory into f9
fmadd.s f7, f12, f28, f9, dyn # perform operation
fmadd.s f7, f12, f28, f9, rdn # perform operation
fmadd.s f7, f12, f28, f9, rmm # perform operation
fmadd.s f7, f12, f28, f9, rne # perform operation
fmadd.s f7, f12, f28, f9, rtz # perform operation
fmadd.s f7, f12, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x15, 0xc294d6da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0xcdedde68 # load x3 with value 0xcdedde68
sw x3, 0(x2) # store 0xcdedde68 in memory
flw f5, 0(x2) # load 0xcdedde68 from memory into f5
fmadd.s f15, f2, f9, f5, dyn # perform operation
fmadd.s f15, f2, f9, f5, rdn # perform operation
fmadd.s f15, f2, f9, f5, rmm # perform operation
fmadd.s f15, f2, f9, f5, rne # perform operation
fmadd.s f15, f2, f9, f5, rtz # perform operation
fmadd.s f15, f2, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f9, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x9, 0x623ff975 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x7b4945ef # load x3 with value 0x7b4945ef
sw x3, 0(x2) # store 0x7b4945ef in memory
flw f29, 0(x2) # load 0x7b4945ef from memory into f29
fmadd.s f9, f23, f15, f29, dyn # perform operation
fmadd.s f9, f23, f15, f29, rdn # perform operation
fmadd.s f9, f23, f15, f29, rmm # perform operation
fmadd.s f9, f23, f15, f29, rne # perform operation
fmadd.s f9, f23, f15, f29, rtz # perform operation
fmadd.s f9, f23, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x14, 0xf76bd90c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xdbbd3a82 # load x3 with value 0xdbbd3a82
sw x3, 0(x2) # store 0xdbbd3a82 in memory
flw f23, 0(x2) # load 0xdbbd3a82 from memory into f23
fmadd.s f14, f24, f7, f23, dyn # perform operation
fmadd.s f14, f24, f7, f23, rdn # perform operation
fmadd.s f14, f24, f7, f23, rmm # perform operation
fmadd.s f14, f24, f7, f23, rne # perform operation
fmadd.s f14, f24, f7, f23, rtz # perform operation
fmadd.s f14, f24, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x11, 0x6b59ae5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x4907201a # load x3 with value 0x4907201a
sw x3, 0(x2) # store 0x4907201a in memory
flw f15, 0(x2) # load 0x4907201a from memory into f15
fmadd.s f11, f7, f23, f15, dyn # perform operation
fmadd.s f11, f7, f23, f15, rdn # perform operation
fmadd.s f11, f7, f23, f15, rmm # perform operation
fmadd.s f11, f7, f23, f15, rne # perform operation
fmadd.s f11, f7, f23, f15, rtz # perform operation
fmadd.s f11, f7, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x15, 0xb3325bcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xdb6bf708 # load x3 with value 0xdb6bf708
sw x3, 0(x2) # store 0xdb6bf708 in memory
flw f12, 0(x2) # load 0xdb6bf708 from memory into f12
fmadd.s f15, f21, f8, f12, dyn # perform operation
fmadd.s f15, f21, f8, f12, rdn # perform operation
fmadd.s f15, f21, f8, f12, rmm # perform operation
fmadd.s f15, f21, f8, f12, rne # perform operation
fmadd.s f15, f21, f8, f12, rtz # perform operation
fmadd.s f15, f21, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x20, 0x303b8454 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x2fab274a # load x3 with value 0x2fab274a
sw x3, 0(x2) # store 0x2fab274a in memory
flw f11, 0(x2) # load 0x2fab274a from memory into f11
fmadd.s f20, f10, f16, f11, dyn # perform operation
fmadd.s f20, f10, f16, f11, rdn # perform operation
fmadd.s f20, f10, f16, f11, rmm # perform operation
fmadd.s f20, f10, f16, f11, rne # perform operation
fmadd.s f20, f10, f16, f11, rtz # perform operation
fmadd.s f20, f10, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x23, 0xec1c1ab7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0xe71e47db # load x3 with value 0xe71e47db
sw x3, 0(x2) # store 0xe71e47db in memory
flw f14, 0(x2) # load 0xe71e47db from memory into f14
fmadd.s f23, f4, f3, f14, dyn # perform operation
fmadd.s f23, f4, f3, f14, rdn # perform operation
fmadd.s f23, f4, f3, f14, rmm # perform operation
fmadd.s f23, f4, f3, f14, rne # perform operation
fmadd.s f23, f4, f3, f14, rtz # perform operation
fmadd.s f23, f4, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f4, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f4, f3, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x31, 0x029e4959 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0xe26f497f # load x3 with value 0xe26f497f
sw x3, 0(x2) # store 0xe26f497f in memory
flw f26, 0(x2) # load 0xe26f497f from memory into f26
fmadd.s f31, f19, f10, f26, dyn # perform operation
fmadd.s f31, f19, f10, f26, rdn # perform operation
fmadd.s f31, f19, f10, f26, rmm # perform operation
fmadd.s f31, f19, f10, f26, rne # perform operation
fmadd.s f31, f19, f10, f26, rtz # perform operation
fmadd.s f31, f19, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x28, 0x8bdf5139 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x98c84a29 # load x3 with value 0x98c84a29
sw x3, 0(x2) # store 0x98c84a29 in memory
flw f20, 0(x2) # load 0x98c84a29 from memory into f20
fmadd.s f28, f4, f24, f20, dyn # perform operation
fmadd.s f28, f4, f24, f20, rdn # perform operation
fmadd.s f28, f4, f24, f20, rmm # perform operation
fmadd.s f28, f4, f24, f20, rne # perform operation
fmadd.s f28, f4, f24, f20, rtz # perform operation
fmadd.s f28, f4, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f4, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f4, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f4, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f4, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f4, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x13, 0x94cafc96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xa945bd77 # load x3 with value 0xa945bd77
sw x3, 0(x2) # store 0xa945bd77 in memory
flw f25, 0(x2) # load 0xa945bd77 from memory into f25
fmadd.s f13, f15, f9, f25, dyn # perform operation
fmadd.s f13, f15, f9, f25, rdn # perform operation
fmadd.s f13, f15, f9, f25, rmm # perform operation
fmadd.s f13, f15, f9, f25, rne # perform operation
fmadd.s f13, f15, f9, f25, rtz # perform operation
fmadd.s f13, f15, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f15, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f15, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x5, 0x8f412707 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x6e241733 # load x3 with value 0x6e241733
sw x3, 0(x2) # store 0x6e241733 in memory
flw f24, 0(x2) # load 0x6e241733 from memory into f24
fmadd.s f5, f1, f21, f24, dyn # perform operation
fmadd.s f5, f1, f21, f24, rdn # perform operation
fmadd.s f5, f1, f21, f24, rmm # perform operation
fmadd.s f5, f1, f21, f24, rne # perform operation
fmadd.s f5, f1, f21, f24, rtz # perform operation
fmadd.s f5, f1, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f1, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f1, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x3, 0x297b3a64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0xb35c0a3f # load x3 with value 0xb35c0a3f
sw x3, 0(x2) # store 0xb35c0a3f in memory
flw f20, 0(x2) # load 0xb35c0a3f from memory into f20
fmadd.s f3, f21, f7, f20, dyn # perform operation
fmadd.s f3, f21, f7, f20, rdn # perform operation
fmadd.s f3, f21, f7, f20, rmm # perform operation
fmadd.s f3, f21, f7, f20, rne # perform operation
fmadd.s f3, f21, f7, f20, rtz # perform operation
fmadd.s f3, f21, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x28, 0x3ee23e1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x6a085c88 # load x3 with value 0x6a085c88
sw x3, 0(x2) # store 0x6a085c88 in memory
flw f18, 0(x2) # load 0x6a085c88 from memory into f18
fmadd.s f28, f16, f23, f18, dyn # perform operation
fmadd.s f28, f16, f23, f18, rdn # perform operation
fmadd.s f28, f16, f23, f18, rmm # perform operation
fmadd.s f28, f16, f23, f18, rne # perform operation
fmadd.s f28, f16, f23, f18, rtz # perform operation
fmadd.s f28, f16, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f23, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x6, 0x79957706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x915d8979 # load x3 with value 0x915d8979
sw x3, 0(x2) # store 0x915d8979 in memory
flw f5, 0(x2) # load 0x915d8979 from memory into f5
fmadd.s f6, f21, f14, f5, dyn # perform operation
fmadd.s f6, f21, f14, f5, rdn # perform operation
fmadd.s f6, f21, f14, f5, rmm # perform operation
fmadd.s f6, f21, f14, f5, rne # perform operation
fmadd.s f6, f21, f14, f5, rtz # perform operation
fmadd.s f6, f21, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x7, 0xa3090d52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x060ecda6 # load x3 with value 0x060ecda6
sw x3, 0(x2) # store 0x060ecda6 in memory
flw f29, 0(x2) # load 0x060ecda6 from memory into f29
fmadd.s f7, f21, f4, f29, dyn # perform operation
fmadd.s f7, f21, f4, f29, rdn # perform operation
fmadd.s f7, f21, f4, f29, rmm # perform operation
fmadd.s f7, f21, f4, f29, rne # perform operation
fmadd.s f7, f21, f4, f29, rtz # perform operation
fmadd.s f7, f21, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x16, 0xa04a7462 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x4b962f62 # load x3 with value 0x4b962f62
sw x3, 0(x2) # store 0x4b962f62 in memory
flw f9, 0(x2) # load 0x4b962f62 from memory into f9
fmadd.s f16, f29, f23, f9, dyn # perform operation
fmadd.s f16, f29, f23, f9, rdn # perform operation
fmadd.s f16, f29, f23, f9, rmm # perform operation
fmadd.s f16, f29, f23, f9, rne # perform operation
fmadd.s f16, f29, f23, f9, rtz # perform operation
fmadd.s f16, f29, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f29, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x30, 0xca1e1e3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xe862532c # load x3 with value 0xe862532c
sw x3, 0(x2) # store 0xe862532c in memory
flw f22, 0(x2) # load 0xe862532c from memory into f22
fmadd.s f30, f19, f6, f22, dyn # perform operation
fmadd.s f30, f19, f6, f22, rdn # perform operation
fmadd.s f30, f19, f6, f22, rmm # perform operation
fmadd.s f30, f19, f6, f22, rne # perform operation
fmadd.s f30, f19, f6, f22, rtz # perform operation
fmadd.s f30, f19, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f6, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x14, 0xa62f26c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x19bbb649 # load x3 with value 0x19bbb649
sw x3, 0(x2) # store 0x19bbb649 in memory
flw f25, 0(x2) # load 0x19bbb649 from memory into f25
fmadd.s f14, f24, f20, f25, dyn # perform operation
fmadd.s f14, f24, f20, f25, rdn # perform operation
fmadd.s f14, f24, f20, f25, rmm # perform operation
fmadd.s f14, f24, f20, f25, rne # perform operation
fmadd.s f14, f24, f20, f25, rtz # perform operation
fmadd.s f14, f24, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f20, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x31, 0x761caa8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x149ed3f1 # load x3 with value 0x149ed3f1
sw x3, 0(x2) # store 0x149ed3f1 in memory
flw f19, 0(x2) # load 0x149ed3f1 from memory into f19
fmadd.s f31, f24, f16, f19, dyn # perform operation
fmadd.s f31, f24, f16, f19, rdn # perform operation
fmadd.s f31, f24, f16, f19, rmm # perform operation
fmadd.s f31, f24, f16, f19, rne # perform operation
fmadd.s f31, f24, f16, f19, rtz # perform operation
fmadd.s f31, f24, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x26, 0x82490633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x687cc9e4 # load x3 with value 0x687cc9e4
sw x3, 0(x2) # store 0x687cc9e4 in memory
flw f10, 0(x2) # load 0x687cc9e4 from memory into f10
fmadd.s f26, f30, f4, f10, dyn # perform operation
fmadd.s f26, f30, f4, f10, rdn # perform operation
fmadd.s f26, f30, f4, f10, rmm # perform operation
fmadd.s f26, f30, f4, f10, rne # perform operation
fmadd.s f26, f30, f4, f10, rtz # perform operation
fmadd.s f26, f30, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x3, 0xffae4339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
li x3, 0x57cdac1a # load x3 with value 0x57cdac1a
sw x3, 0(x2) # store 0x57cdac1a in memory
flw f18, 0(x2) # load 0x57cdac1a from memory into f18
fmadd.s f3, f13, f25, f18, dyn # perform operation
fmadd.s f3, f13, f25, f18, rdn # perform operation
fmadd.s f3, f13, f25, f18, rmm # perform operation
fmadd.s f3, f13, f25, f18, rne # perform operation
fmadd.s f3, f13, f25, f18, rtz # perform operation
fmadd.s f3, f13, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x30, 0x8c3b1962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x92c02dfd # load x3 with value 0x92c02dfd
sw x3, 0(x2) # store 0x92c02dfd in memory
flw f18, 0(x2) # load 0x92c02dfd from memory into f18
fmadd.s f30, f8, f14, f18, dyn # perform operation
fmadd.s f30, f8, f14, f18, rdn # perform operation
fmadd.s f30, f8, f14, f18, rmm # perform operation
fmadd.s f30, f8, f14, f18, rne # perform operation
fmadd.s f30, f8, f14, f18, rtz # perform operation
fmadd.s f30, f8, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f14, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x28, 0x5486d3d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x93d0117a # load x3 with value 0x93d0117a
sw x3, 0(x2) # store 0x93d0117a in memory
flw f22, 0(x2) # load 0x93d0117a from memory into f22
fmadd.s f28, f12, f18, f22, dyn # perform operation
fmadd.s f28, f12, f18, f22, rdn # perform operation
fmadd.s f28, f12, f18, f22, rmm # perform operation
fmadd.s f28, f12, f18, f22, rne # perform operation
fmadd.s f28, f12, f18, f22, rtz # perform operation
fmadd.s f28, f12, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x26, 0xca035b55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xa3cb4622 # load x3 with value 0xa3cb4622
sw x3, 0(x2) # store 0xa3cb4622 in memory
flw f11, 0(x2) # load 0xa3cb4622 from memory into f11
fmadd.s f26, f12, f24, f11, dyn # perform operation
fmadd.s f26, f12, f24, f11, rdn # perform operation
fmadd.s f26, f12, f24, f11, rmm # perform operation
fmadd.s f26, f12, f24, f11, rne # perform operation
fmadd.s f26, f12, f24, f11, rtz # perform operation
fmadd.s f26, f12, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f12, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f12, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x4, 0x720fbbc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x9f1843a8 # load x3 with value 0x9f1843a8
sw x3, 0(x2) # store 0x9f1843a8 in memory
flw f26, 0(x2) # load 0x9f1843a8 from memory into f26
fmadd.s f4, f15, f25, f26, dyn # perform operation
fmadd.s f4, f15, f25, f26, rdn # perform operation
fmadd.s f4, f15, f25, f26, rmm # perform operation
fmadd.s f4, f15, f25, f26, rne # perform operation
fmadd.s f4, f15, f25, f26, rtz # perform operation
fmadd.s f4, f15, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x22, 0xae41356d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xea2d2424 # load x3 with value 0xea2d2424
sw x3, 0(x2) # store 0xea2d2424 in memory
flw f5, 0(x2) # load 0xea2d2424 from memory into f5
fmadd.s f22, f4, f27, f5, dyn # perform operation
fmadd.s f22, f4, f27, f5, rdn # perform operation
fmadd.s f22, f4, f27, f5, rmm # perform operation
fmadd.s f22, f4, f27, f5, rne # perform operation
fmadd.s f22, f4, f27, f5, rtz # perform operation
fmadd.s f22, f4, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f4, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f4, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x29, 0x900d2641 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x987c973a # load x3 with value 0x987c973a
sw x3, 0(x2) # store 0x987c973a in memory
flw f11, 0(x2) # load 0x987c973a from memory into f11
fmadd.s f29, f5, f18, f11, dyn # perform operation
fmadd.s f29, f5, f18, f11, rdn # perform operation
fmadd.s f29, f5, f18, f11, rmm # perform operation
fmadd.s f29, f5, f18, f11, rne # perform operation
fmadd.s f29, f5, f18, f11, rtz # perform operation
fmadd.s f29, f5, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x24, 0x94706cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x3224f291 # load x3 with value 0x3224f291
sw x3, 0(x2) # store 0x3224f291 in memory
flw f28, 0(x2) # load 0x3224f291 from memory into f28
fmadd.s f24, f11, f23, f28, dyn # perform operation
fmadd.s f24, f11, f23, f28, rdn # perform operation
fmadd.s f24, f11, f23, f28, rmm # perform operation
fmadd.s f24, f11, f23, f28, rne # perform operation
fmadd.s f24, f11, f23, f28, rtz # perform operation
fmadd.s f24, f11, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x7, 0x10cb362f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x4b6344a0 # load x3 with value 0x4b6344a0
sw x3, 0(x2) # store 0x4b6344a0 in memory
flw f19, 0(x2) # load 0x4b6344a0 from memory into f19
fmadd.s f7, f16, f3, f19, dyn # perform operation
fmadd.s f7, f16, f3, f19, rdn # perform operation
fmadd.s f7, f16, f3, f19, rmm # perform operation
fmadd.s f7, f16, f3, f19, rne # perform operation
fmadd.s f7, f16, f3, f19, rtz # perform operation
fmadd.s f7, f16, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f16, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f16, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x19, 0x9047747d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x0b91fca8 # load x3 with value 0x0b91fca8
sw x3, 0(x2) # store 0x0b91fca8 in memory
flw f10, 0(x2) # load 0x0b91fca8 from memory into f10
fmadd.s f19, f26, f2, f10, dyn # perform operation
fmadd.s f19, f26, f2, f10, rdn # perform operation
fmadd.s f19, f26, f2, f10, rmm # perform operation
fmadd.s f19, f26, f2, f10, rne # perform operation
fmadd.s f19, f26, f2, f10, rtz # perform operation
fmadd.s f19, f26, f2, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f2, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f2, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f2, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f2, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f2, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x15, 0x6cad92a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x91a6c1c8 # load x3 with value 0x91a6c1c8
sw x3, 0(x2) # store 0x91a6c1c8 in memory
flw f19, 0(x2) # load 0x91a6c1c8 from memory into f19
fmadd.s f15, f25, f1, f19, dyn # perform operation
fmadd.s f15, f25, f1, f19, rdn # perform operation
fmadd.s f15, f25, f1, f19, rmm # perform operation
fmadd.s f15, f25, f1, f19, rne # perform operation
fmadd.s f15, f25, f1, f19, rtz # perform operation
fmadd.s f15, f25, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x4, 0x3966a52f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xcafff93d # load x3 with value 0xcafff93d
sw x3, 0(x2) # store 0xcafff93d in memory
flw f18, 0(x2) # load 0xcafff93d from memory into f18
fmadd.s f4, f1, f8, f18, dyn # perform operation
fmadd.s f4, f1, f8, f18, rdn # perform operation
fmadd.s f4, f1, f8, f18, rmm # perform operation
fmadd.s f4, f1, f8, f18, rne # perform operation
fmadd.s f4, f1, f8, f18, rtz # perform operation
fmadd.s f4, f1, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f1, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f1, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x20, 0x2227a8db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x20a18f05 # load x3 with value 0x20a18f05
sw x3, 0(x2) # store 0x20a18f05 in memory
flw f27, 0(x2) # load 0x20a18f05 from memory into f27
fmadd.s f20, f9, f6, f27, dyn # perform operation
fmadd.s f20, f9, f6, f27, rdn # perform operation
fmadd.s f20, f9, f6, f27, rmm # perform operation
fmadd.s f20, f9, f6, f27, rne # perform operation
fmadd.s f20, f9, f6, f27, rtz # perform operation
fmadd.s f20, f9, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f6, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x3, 0x1fce5a34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x6c0a5958 # load x3 with value 0x6c0a5958
sw x3, 0(x2) # store 0x6c0a5958 in memory
flw f5, 0(x2) # load 0x6c0a5958 from memory into f5
fmadd.s f3, f6, f12, f5, dyn # perform operation
fmadd.s f3, f6, f12, f5, rdn # perform operation
fmadd.s f3, f6, f12, f5, rmm # perform operation
fmadd.s f3, f6, f12, f5, rne # perform operation
fmadd.s f3, f6, f12, f5, rtz # perform operation
fmadd.s f3, f6, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x11, 0xc48bf575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xcf258924 # load x3 with value 0xcf258924
sw x3, 0(x2) # store 0xcf258924 in memory
flw f26, 0(x2) # load 0xcf258924 from memory into f26
fmadd.s f11, f14, f22, f26, dyn # perform operation
fmadd.s f11, f14, f22, f26, rdn # perform operation
fmadd.s f11, f14, f22, f26, rmm # perform operation
fmadd.s f11, f14, f22, f26, rne # perform operation
fmadd.s f11, f14, f22, f26, rtz # perform operation
fmadd.s f11, f14, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x25, 0xd93a6e5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x8ec52047 # load x3 with value 0x8ec52047
sw x3, 0(x2) # store 0x8ec52047 in memory
flw f1, 0(x2) # load 0x8ec52047 from memory into f1
fmadd.s f25, f19, f28, f1, dyn # perform operation
fmadd.s f25, f19, f28, f1, rdn # perform operation
fmadd.s f25, f19, f28, f1, rmm # perform operation
fmadd.s f25, f19, f28, f1, rne # perform operation
fmadd.s f25, f19, f28, f1, rtz # perform operation
fmadd.s f25, f19, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f19, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f19, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x17, 0xea47e6c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x36d5f745 # load x3 with value 0x36d5f745
sw x3, 0(x2) # store 0x36d5f745 in memory
flw f2, 0(x2) # load 0x36d5f745 from memory into f2
fmadd.s f17, f31, f13, f2, dyn # perform operation
fmadd.s f17, f31, f13, f2, rdn # perform operation
fmadd.s f17, f31, f13, f2, rmm # perform operation
fmadd.s f17, f31, f13, f2, rne # perform operation
fmadd.s f17, f31, f13, f2, rtz # perform operation
fmadd.s f17, f31, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f31, f13, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x2, 0xc9e650a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0xeae049bd # load x3 with value 0xeae049bd
sw x3, 0(x2) # store 0xeae049bd in memory
flw f9, 0(x2) # load 0xeae049bd from memory into f9
fmadd.s f2, f15, f18, f9, dyn # perform operation
fmadd.s f2, f15, f18, f9, rdn # perform operation
fmadd.s f2, f15, f18, f9, rmm # perform operation
fmadd.s f2, f15, f18, f9, rne # perform operation
fmadd.s f2, f15, f18, f9, rtz # perform operation
fmadd.s f2, f15, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x3, 0xdc062ac7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xdabbd7ac # load x3 with value 0xdabbd7ac
sw x3, 0(x2) # store 0xdabbd7ac in memory
flw f18, 0(x2) # load 0xdabbd7ac from memory into f18
fmadd.s f3, f10, f17, f18, dyn # perform operation
fmadd.s f3, f10, f17, f18, rdn # perform operation
fmadd.s f3, f10, f17, f18, rmm # perform operation
fmadd.s f3, f10, f17, f18, rne # perform operation
fmadd.s f3, f10, f17, f18, rtz # perform operation
fmadd.s f3, f10, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x5, 0xbb505cc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xc9fb6b55 # load x3 with value 0xc9fb6b55
sw x3, 0(x2) # store 0xc9fb6b55 in memory
flw f3, 0(x2) # load 0xc9fb6b55 from memory into f3
fmadd.s f5, f18, f16, f3, dyn # perform operation
fmadd.s f5, f18, f16, f3, rdn # perform operation
fmadd.s f5, f18, f16, f3, rmm # perform operation
fmadd.s f5, f18, f16, f3, rne # perform operation
fmadd.s f5, f18, f16, f3, rtz # perform operation
fmadd.s f5, f18, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x30, 0x0edf38d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x48d11fa9 # load x3 with value 0x48d11fa9
sw x3, 0(x2) # store 0x48d11fa9 in memory
flw f24, 0(x2) # load 0x48d11fa9 from memory into f24
fmadd.s f30, f13, f6, f24, dyn # perform operation
fmadd.s f30, f13, f6, f24, rdn # perform operation
fmadd.s f30, f13, f6, f24, rmm # perform operation
fmadd.s f30, f13, f6, f24, rne # perform operation
fmadd.s f30, f13, f6, f24, rtz # perform operation
fmadd.s f30, f13, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x11, 0xf6b5eb83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x7e3f976b # load x3 with value 0x7e3f976b
sw x3, 0(x2) # store 0x7e3f976b in memory
flw f2, 0(x2) # load 0x7e3f976b from memory into f2
fmadd.s f11, f23, f14, f2, dyn # perform operation
fmadd.s f11, f23, f14, f2, rdn # perform operation
fmadd.s f11, f23, f14, f2, rmm # perform operation
fmadd.s f11, f23, f14, f2, rne # perform operation
fmadd.s f11, f23, f14, f2, rtz # perform operation
fmadd.s f11, f23, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x10, 0xd3c74bf9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x2b35dd88 # load x3 with value 0x2b35dd88
sw x3, 0(x2) # store 0x2b35dd88 in memory
flw f7, 0(x2) # load 0x2b35dd88 from memory into f7
fmadd.s f10, f15, f23, f7, dyn # perform operation
fmadd.s f10, f15, f23, f7, rdn # perform operation
fmadd.s f10, f15, f23, f7, rmm # perform operation
fmadd.s f10, f15, f23, f7, rne # perform operation
fmadd.s f10, f15, f23, f7, rtz # perform operation
fmadd.s f10, f15, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f15, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f15, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f15, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f15, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f15, f23, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x12, 0x4cfef9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xde6fd674 # load x3 with value 0xde6fd674
sw x3, 0(x2) # store 0xde6fd674 in memory
flw f21, 0(x2) # load 0xde6fd674 from memory into f21
fmadd.s f12, f31, f20, f21, dyn # perform operation
fmadd.s f12, f31, f20, f21, rdn # perform operation
fmadd.s f12, f31, f20, f21, rmm # perform operation
fmadd.s f12, f31, f20, f21, rne # perform operation
fmadd.s f12, f31, f20, f21, rtz # perform operation
fmadd.s f12, f31, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f20, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x9, 0x105e0ce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xf2395a94 # load x3 with value 0xf2395a94
sw x3, 0(x2) # store 0xf2395a94 in memory
flw f20, 0(x2) # load 0xf2395a94 from memory into f20
fmadd.s f9, f4, f13, f20, dyn # perform operation
fmadd.s f9, f4, f13, f20, rdn # perform operation
fmadd.s f9, f4, f13, f20, rmm # perform operation
fmadd.s f9, f4, f13, f20, rne # perform operation
fmadd.s f9, f4, f13, f20, rtz # perform operation
fmadd.s f9, f4, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f4, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x26, 0x07e1a0c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x8bb55778 # load x3 with value 0x8bb55778
sw x3, 0(x2) # store 0x8bb55778 in memory
flw f13, 0(x2) # load 0x8bb55778 from memory into f13
fmadd.s f26, f31, f20, f13, dyn # perform operation
fmadd.s f26, f31, f20, f13, rdn # perform operation
fmadd.s f26, f31, f20, f13, rmm # perform operation
fmadd.s f26, f31, f20, f13, rne # perform operation
fmadd.s f26, f31, f20, f13, rtz # perform operation
fmadd.s f26, f31, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f31, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f31, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f31, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f31, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f31, f20, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x7, 0x53206c70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xb83bedbf # load x3 with value 0xb83bedbf
sw x3, 0(x2) # store 0xb83bedbf in memory
flw f31, 0(x2) # load 0xb83bedbf from memory into f31
fmadd.s f7, f22, f20, f31, dyn # perform operation
fmadd.s f7, f22, f20, f31, rdn # perform operation
fmadd.s f7, f22, f20, f31, rmm # perform operation
fmadd.s f7, f22, f20, f31, rne # perform operation
fmadd.s f7, f22, f20, f31, rtz # perform operation
fmadd.s f7, f22, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x4, 0xbec2025b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
li x3, 0x97e04bd7 # load x3 with value 0x97e04bd7
sw x3, 0(x2) # store 0x97e04bd7 in memory
flw f17, 0(x2) # load 0x97e04bd7 from memory into f17
fmadd.s f4, f29, f24, f17, dyn # perform operation
fmadd.s f4, f29, f24, f17, rdn # perform operation
fmadd.s f4, f29, f24, f17, rmm # perform operation
fmadd.s f4, f29, f24, f17, rne # perform operation
fmadd.s f4, f29, f24, f17, rtz # perform operation
fmadd.s f4, f29, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f29, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f29, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x25, 0x88804a80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xcee0ef54 # load x3 with value 0xcee0ef54
sw x3, 0(x2) # store 0xcee0ef54 in memory
flw f17, 0(x2) # load 0xcee0ef54 from memory into f17
fmadd.s f25, f31, f9, f17, dyn # perform operation
fmadd.s f25, f31, f9, f17, rdn # perform operation
fmadd.s f25, f31, f9, f17, rmm # perform operation
fmadd.s f25, f31, f9, f17, rne # perform operation
fmadd.s f25, f31, f9, f17, rtz # perform operation
fmadd.s f25, f31, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x28, 0xd7e17052 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x0d326924 # load x3 with value 0x0d326924
sw x3, 0(x2) # store 0x0d326924 in memory
flw f3, 0(x2) # load 0x0d326924 from memory into f3
fmadd.s f28, f19, f23, f3, dyn # perform operation
fmadd.s f28, f19, f23, f3, rdn # perform operation
fmadd.s f28, f19, f23, f3, rmm # perform operation
fmadd.s f28, f19, f23, f3, rne # perform operation
fmadd.s f28, f19, f23, f3, rtz # perform operation
fmadd.s f28, f19, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x12, 0x469d144a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x8e6660e7 # load x3 with value 0x8e6660e7
sw x3, 0(x2) # store 0x8e6660e7 in memory
flw f20, 0(x2) # load 0x8e6660e7 from memory into f20
fmadd.s f12, f6, f28, f20, dyn # perform operation
fmadd.s f12, f6, f28, f20, rdn # perform operation
fmadd.s f12, f6, f28, f20, rmm # perform operation
fmadd.s f12, f6, f28, f20, rne # perform operation
fmadd.s f12, f6, f28, f20, rtz # perform operation
fmadd.s f12, f6, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x30, 0x0593524d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x6942de1e # load x3 with value 0x6942de1e
sw x3, 0(x2) # store 0x6942de1e in memory
flw f25, 0(x2) # load 0x6942de1e from memory into f25
fmadd.s f30, f4, f19, f25, dyn # perform operation
fmadd.s f30, f4, f19, f25, rdn # perform operation
fmadd.s f30, f4, f19, f25, rmm # perform operation
fmadd.s f30, f4, f19, f25, rne # perform operation
fmadd.s f30, f4, f19, f25, rtz # perform operation
fmadd.s f30, f4, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f4, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x21, 0x7803bc21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x94b0d389 # load x3 with value 0x94b0d389
sw x3, 0(x2) # store 0x94b0d389 in memory
flw f4, 0(x2) # load 0x94b0d389 from memory into f4
fmadd.s f21, f14, f19, f4, dyn # perform operation
fmadd.s f21, f14, f19, f4, rdn # perform operation
fmadd.s f21, f14, f19, f4, rmm # perform operation
fmadd.s f21, f14, f19, f4, rne # perform operation
fmadd.s f21, f14, f19, f4, rtz # perform operation
fmadd.s f21, f14, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x8, 0x2cab11f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x5a5e4dc0 # load x3 with value 0x5a5e4dc0
sw x3, 0(x2) # store 0x5a5e4dc0 in memory
flw f12, 0(x2) # load 0x5a5e4dc0 from memory into f12
fmadd.s f8, f9, f10, f12, dyn # perform operation
fmadd.s f8, f9, f10, f12, rdn # perform operation
fmadd.s f8, f9, f10, f12, rmm # perform operation
fmadd.s f8, f9, f10, f12, rne # perform operation
fmadd.s f8, f9, f10, f12, rtz # perform operation
fmadd.s f8, f9, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f9, f10, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x20, 0x83a4939a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x44c56f38 # load x3 with value 0x44c56f38
sw x3, 0(x2) # store 0x44c56f38 in memory
flw f22, 0(x2) # load 0x44c56f38 from memory into f22
fmadd.s f20, f27, f21, f22, dyn # perform operation
fmadd.s f20, f27, f21, f22, rdn # perform operation
fmadd.s f20, f27, f21, f22, rmm # perform operation
fmadd.s f20, f27, f21, f22, rne # perform operation
fmadd.s f20, f27, f21, f22, rtz # perform operation
fmadd.s f20, f27, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f21, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x5, 0x5a540866 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0x3e29f6e5 # load x3 with value 0x3e29f6e5
sw x3, 0(x2) # store 0x3e29f6e5 in memory
flw f9, 0(x2) # load 0x3e29f6e5 from memory into f9
fmadd.s f5, f25, f3, f9, dyn # perform operation
fmadd.s f5, f25, f3, f9, rdn # perform operation
fmadd.s f5, f25, f3, f9, rmm # perform operation
fmadd.s f5, f25, f3, f9, rne # perform operation
fmadd.s f5, f25, f3, f9, rtz # perform operation
fmadd.s f5, f25, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x17, 0xf1abad60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x97c5fbed # load x3 with value 0x97c5fbed
sw x3, 0(x2) # store 0x97c5fbed in memory
flw f12, 0(x2) # load 0x97c5fbed from memory into f12
fmadd.s f17, f8, f23, f12, dyn # perform operation
fmadd.s f17, f8, f23, f12, rdn # perform operation
fmadd.s f17, f8, f23, f12, rmm # perform operation
fmadd.s f17, f8, f23, f12, rne # perform operation
fmadd.s f17, f8, f23, f12, rtz # perform operation
fmadd.s f17, f8, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f23, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x13, 0x3fff1524 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x585b3db5 # load x3 with value 0x585b3db5
sw x3, 0(x2) # store 0x585b3db5 in memory
flw f17, 0(x2) # load 0x585b3db5 from memory into f17
fmadd.s f13, f15, f21, f17, dyn # perform operation
fmadd.s f13, f15, f21, f17, rdn # perform operation
fmadd.s f13, f15, f21, f17, rmm # perform operation
fmadd.s f13, f15, f21, f17, rne # perform operation
fmadd.s f13, f15, f21, f17, rtz # perform operation
fmadd.s f13, f15, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f15, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f15, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x8, 0xee28f096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x30cc34b9 # load x3 with value 0x30cc34b9
sw x3, 0(x2) # store 0x30cc34b9 in memory
flw f22, 0(x2) # load 0x30cc34b9 from memory into f22
fmadd.s f8, f15, f24, f22, dyn # perform operation
fmadd.s f8, f15, f24, f22, rdn # perform operation
fmadd.s f8, f15, f24, f22, rmm # perform operation
fmadd.s f8, f15, f24, f22, rne # perform operation
fmadd.s f8, f15, f24, f22, rtz # perform operation
fmadd.s f8, f15, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f15, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f15, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x4, 0x950c426c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xab930f4b # load x3 with value 0xab930f4b
sw x3, 0(x2) # store 0xab930f4b in memory
flw f12, 0(x2) # load 0xab930f4b from memory into f12
fmadd.s f4, f6, f26, f12, dyn # perform operation
fmadd.s f4, f6, f26, f12, rdn # perform operation
fmadd.s f4, f6, f26, f12, rmm # perform operation
fmadd.s f4, f6, f26, f12, rne # perform operation
fmadd.s f4, f6, f26, f12, rtz # perform operation
fmadd.s f4, f6, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f6, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f6, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x11, 0x9e9dfe52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x1fc60642 # load x3 with value 0x1fc60642
sw x3, 0(x2) # store 0x1fc60642 in memory
flw f6, 0(x2) # load 0x1fc60642 from memory into f6
fmadd.s f11, f29, f1, f6, dyn # perform operation
fmadd.s f11, f29, f1, f6, rdn # perform operation
fmadd.s f11, f29, f1, f6, rmm # perform operation
fmadd.s f11, f29, f1, f6, rne # perform operation
fmadd.s f11, f29, f1, f6, rtz # perform operation
fmadd.s f11, f29, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f29, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f29, f1, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x29, 0xb810f198 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xfa89e359 # load x3 with value 0xfa89e359
sw x3, 0(x2) # store 0xfa89e359 in memory
flw f13, 0(x2) # load 0xfa89e359 from memory into f13
fmadd.s f29, f14, f4, f13, dyn # perform operation
fmadd.s f29, f14, f4, f13, rdn # perform operation
fmadd.s f29, f14, f4, f13, rmm # perform operation
fmadd.s f29, f14, f4, f13, rne # perform operation
fmadd.s f29, f14, f4, f13, rtz # perform operation
fmadd.s f29, f14, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f4, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x17, 0xf8f6d684 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xd01dbe59 # load x3 with value 0xd01dbe59
sw x3, 0(x2) # store 0xd01dbe59 in memory
flw f21, 0(x2) # load 0xd01dbe59 from memory into f21
fmadd.s f17, f18, f1, f21, dyn # perform operation
fmadd.s f17, f18, f1, f21, rdn # perform operation
fmadd.s f17, f18, f1, f21, rmm # perform operation
fmadd.s f17, f18, f1, f21, rne # perform operation
fmadd.s f17, f18, f1, f21, rtz # perform operation
fmadd.s f17, f18, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x12, 0x4e064970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x2f49c0a6 # load x3 with value 0x2f49c0a6
sw x3, 0(x2) # store 0x2f49c0a6 in memory
flw f29, 0(x2) # load 0x2f49c0a6 from memory into f29
fmadd.s f12, f18, f28, f29, dyn # perform operation
fmadd.s f12, f18, f28, f29, rdn # perform operation
fmadd.s f12, f18, f28, f29, rmm # perform operation
fmadd.s f12, f18, f28, f29, rne # perform operation
fmadd.s f12, f18, f28, f29, rtz # perform operation
fmadd.s f12, f18, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f28, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x23, 0x0ff0042b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xa0292044 # load x3 with value 0xa0292044
sw x3, 0(x2) # store 0xa0292044 in memory
flw f26, 0(x2) # load 0xa0292044 from memory into f26
fmadd.s f23, f17, f25, f26, dyn # perform operation
fmadd.s f23, f17, f25, f26, rdn # perform operation
fmadd.s f23, f17, f25, f26, rmm # perform operation
fmadd.s f23, f17, f25, f26, rne # perform operation
fmadd.s f23, f17, f25, f26, rtz # perform operation
fmadd.s f23, f17, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x28, 0x08117a53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x3e0720a2 # load x3 with value 0x3e0720a2
sw x3, 0(x2) # store 0x3e0720a2 in memory
flw f23, 0(x2) # load 0x3e0720a2 from memory into f23
fmadd.s f28, f9, f13, f23, dyn # perform operation
fmadd.s f28, f9, f13, f23, rdn # perform operation
fmadd.s f28, f9, f13, f23, rmm # perform operation
fmadd.s f28, f9, f13, f23, rne # perform operation
fmadd.s f28, f9, f13, f23, rtz # perform operation
fmadd.s f28, f9, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x6, 0xd27a4050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xe4974eda # load x3 with value 0xe4974eda
sw x3, 0(x2) # store 0xe4974eda in memory
flw f15, 0(x2) # load 0xe4974eda from memory into f15
fmadd.s f6, f22, f12, f15, dyn # perform operation
fmadd.s f6, f22, f12, f15, rdn # perform operation
fmadd.s f6, f22, f12, f15, rmm # perform operation
fmadd.s f6, f22, f12, f15, rne # perform operation
fmadd.s f6, f22, f12, f15, rtz # perform operation
fmadd.s f6, f22, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f22, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f22, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x28, 0xc177c756 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x894afe52 # load x3 with value 0x894afe52
sw x3, 0(x2) # store 0x894afe52 in memory
flw f30, 0(x2) # load 0x894afe52 from memory into f30
fmadd.s f28, f20, f13, f30, dyn # perform operation
fmadd.s f28, f20, f13, f30, rdn # perform operation
fmadd.s f28, f20, f13, f30, rmm # perform operation
fmadd.s f28, f20, f13, f30, rne # perform operation
fmadd.s f28, f20, f13, f30, rtz # perform operation
fmadd.s f28, f20, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x15, 0x223782c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x6a72b53c # load x3 with value 0x6a72b53c
sw x3, 0(x2) # store 0x6a72b53c in memory
flw f28, 0(x2) # load 0x6a72b53c from memory into f28
fmadd.s f15, f7, f21, f28, dyn # perform operation
fmadd.s f15, f7, f21, f28, rdn # perform operation
fmadd.s f15, f7, f21, f28, rmm # perform operation
fmadd.s f15, f7, f21, f28, rne # perform operation
fmadd.s f15, f7, f21, f28, rtz # perform operation
fmadd.s f15, f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f7, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x2, 0x18e5c1f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x1447aae0 # load x3 with value 0x1447aae0
sw x3, 0(x2) # store 0x1447aae0 in memory
flw f10, 0(x2) # load 0x1447aae0 from memory into f10
fmadd.s f2, f7, f21, f10, dyn # perform operation
fmadd.s f2, f7, f21, f10, rdn # perform operation
fmadd.s f2, f7, f21, f10, rmm # perform operation
fmadd.s f2, f7, f21, f10, rne # perform operation
fmadd.s f2, f7, f21, f10, rtz # perform operation
fmadd.s f2, f7, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f7, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f7, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x30, 0x4ff3841b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x203610f3 # load x3 with value 0x203610f3
sw x3, 0(x2) # store 0x203610f3 in memory
flw f6, 0(x2) # load 0x203610f3 from memory into f6
fmadd.s f30, f17, f10, f6, dyn # perform operation
fmadd.s f30, f17, f10, f6, rdn # perform operation
fmadd.s f30, f17, f10, f6, rmm # perform operation
fmadd.s f30, f17, f10, f6, rne # perform operation
fmadd.s f30, f17, f10, f6, rtz # perform operation
fmadd.s f30, f17, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f10, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x9, 0x216db2ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x6287aa42 # load x3 with value 0x6287aa42
sw x3, 0(x2) # store 0x6287aa42 in memory
flw f24, 0(x2) # load 0x6287aa42 from memory into f24
fmadd.s f9, f3, f8, f24, dyn # perform operation
fmadd.s f9, f3, f8, f24, rdn # perform operation
fmadd.s f9, f3, f8, f24, rmm # perform operation
fmadd.s f9, f3, f8, f24, rne # perform operation
fmadd.s f9, f3, f8, f24, rtz # perform operation
fmadd.s f9, f3, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x10, 0xd84bce3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x4d5930f1 # load x3 with value 0x4d5930f1
sw x3, 0(x2) # store 0x4d5930f1 in memory
flw f28, 0(x2) # load 0x4d5930f1 from memory into f28
fmadd.s f10, f4, f30, f28, dyn # perform operation
fmadd.s f10, f4, f30, f28, rdn # perform operation
fmadd.s f10, f4, f30, f28, rmm # perform operation
fmadd.s f10, f4, f30, f28, rne # perform operation
fmadd.s f10, f4, f30, f28, rtz # perform operation
fmadd.s f10, f4, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f4, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f4, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x12, 0x610c6bc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x634b9967 # load x3 with value 0x634b9967
sw x3, 0(x2) # store 0x634b9967 in memory
flw f15, 0(x2) # load 0x634b9967 from memory into f15
fmadd.s f12, f22, f6, f15, dyn # perform operation
fmadd.s f12, f22, f6, f15, rdn # perform operation
fmadd.s f12, f22, f6, f15, rmm # perform operation
fmadd.s f12, f22, f6, f15, rne # perform operation
fmadd.s f12, f22, f6, f15, rtz # perform operation
fmadd.s f12, f22, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x24, 0x588619df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x0576dd20 # load x3 with value 0x0576dd20
sw x3, 0(x2) # store 0x0576dd20 in memory
flw f5, 0(x2) # load 0x0576dd20 from memory into f5
fmadd.s f24, f26, f1, f5, dyn # perform operation
fmadd.s f24, f26, f1, f5, rdn # perform operation
fmadd.s f24, f26, f1, f5, rmm # perform operation
fmadd.s f24, f26, f1, f5, rne # perform operation
fmadd.s f24, f26, f1, f5, rtz # perform operation
fmadd.s f24, f26, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x19, 0xe08124c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x00f61088 # load x3 with value 0x00f61088
sw x3, 0(x2) # store 0x00f61088 in memory
flw f29, 0(x2) # load 0x00f61088 from memory into f29
fmadd.s f19, f18, f7, f29, dyn # perform operation
fmadd.s f19, f18, f7, f29, rdn # perform operation
fmadd.s f19, f18, f7, f29, rmm # perform operation
fmadd.s f19, f18, f7, f29, rne # perform operation
fmadd.s f19, f18, f7, f29, rtz # perform operation
fmadd.s f19, f18, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f18, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f18, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x27, 0xfe1fb335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x6eccdb65 # load x3 with value 0x6eccdb65
sw x3, 0(x2) # store 0x6eccdb65 in memory
flw f16, 0(x2) # load 0x6eccdb65 from memory into f16
fmadd.s f27, f24, f17, f16, dyn # perform operation
fmadd.s f27, f24, f17, f16, rdn # perform operation
fmadd.s f27, f24, f17, f16, rmm # perform operation
fmadd.s f27, f24, f17, f16, rne # perform operation
fmadd.s f27, f24, f17, f16, rtz # perform operation
fmadd.s f27, f24, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x7, 0xb0f3ce8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xeae583be # load x3 with value 0xeae583be
sw x3, 0(x2) # store 0xeae583be in memory
flw f28, 0(x2) # load 0xeae583be from memory into f28
fmadd.s f7, f3, f20, f28, dyn # perform operation
fmadd.s f7, f3, f20, f28, rdn # perform operation
fmadd.s f7, f3, f20, f28, rmm # perform operation
fmadd.s f7, f3, f20, f28, rne # perform operation
fmadd.s f7, f3, f20, f28, rtz # perform operation
fmadd.s f7, f3, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x24, 0x2017ee6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x9b1fb0fa # load x3 with value 0x9b1fb0fa
sw x3, 0(x2) # store 0x9b1fb0fa in memory
flw f14, 0(x2) # load 0x9b1fb0fa from memory into f14
fmadd.s f24, f4, f21, f14, dyn # perform operation
fmadd.s f24, f4, f21, f14, rdn # perform operation
fmadd.s f24, f4, f21, f14, rmm # perform operation
fmadd.s f24, f4, f21, f14, rne # perform operation
fmadd.s f24, f4, f21, f14, rtz # perform operation
fmadd.s f24, f4, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f4, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f4, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f4, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f4, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f4, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x14, 0x1a821b96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x1a9f1b01 # load x3 with value 0x1a9f1b01
sw x3, 0(x2) # store 0x1a9f1b01 in memory
flw f2, 0(x2) # load 0x1a9f1b01 from memory into f2
fmadd.s f14, f6, f10, f2, dyn # perform operation
fmadd.s f14, f6, f10, f2, rdn # perform operation
fmadd.s f14, f6, f10, f2, rmm # perform operation
fmadd.s f14, f6, f10, f2, rne # perform operation
fmadd.s f14, f6, f10, f2, rtz # perform operation
fmadd.s f14, f6, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x29, 0xa8875011 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x458f8158 # load x3 with value 0x458f8158
sw x3, 0(x2) # store 0x458f8158 in memory
flw f16, 0(x2) # load 0x458f8158 from memory into f16
fmadd.s f29, f5, f2, f16, dyn # perform operation
fmadd.s f29, f5, f2, f16, rdn # perform operation
fmadd.s f29, f5, f2, f16, rmm # perform operation
fmadd.s f29, f5, f2, f16, rne # perform operation
fmadd.s f29, f5, f2, f16, rtz # perform operation
fmadd.s f29, f5, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f2, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x30, 0x7ff77f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x88d4a107 # load x3 with value 0x88d4a107
sw x3, 0(x2) # store 0x88d4a107 in memory
flw f24, 0(x2) # load 0x88d4a107 from memory into f24
fmadd.s f30, f21, f8, f24, dyn # perform operation
fmadd.s f30, f21, f8, f24, rdn # perform operation
fmadd.s f30, f21, f8, f24, rmm # perform operation
fmadd.s f30, f21, f8, f24, rne # perform operation
fmadd.s f30, f21, f8, f24, rtz # perform operation
fmadd.s f30, f21, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x21, 0x4f39da3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xb9936950 # load x3 with value 0xb9936950
sw x3, 0(x2) # store 0xb9936950 in memory
flw f13, 0(x2) # load 0xb9936950 from memory into f13
fmadd.s f21, f31, f10, f13, dyn # perform operation
fmadd.s f21, f31, f10, f13, rdn # perform operation
fmadd.s f21, f31, f10, f13, rmm # perform operation
fmadd.s f21, f31, f10, f13, rne # perform operation
fmadd.s f21, f31, f10, f13, rtz # perform operation
fmadd.s f21, f31, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x7, 0xa53ad377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x5e7801f9 # load x3 with value 0x5e7801f9
sw x3, 0(x2) # store 0x5e7801f9 in memory
flw f14, 0(x2) # load 0x5e7801f9 from memory into f14
fmadd.s f7, f21, f13, f14, dyn # perform operation
fmadd.s f7, f21, f13, f14, rdn # perform operation
fmadd.s f7, f21, f13, f14, rmm # perform operation
fmadd.s f7, f21, f13, f14, rne # perform operation
fmadd.s f7, f21, f13, f14, rtz # perform operation
fmadd.s f7, f21, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x7, 0x282d3ff9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x57983578 # load x3 with value 0x57983578
sw x3, 0(x2) # store 0x57983578 in memory
flw f22, 0(x2) # load 0x57983578 from memory into f22
fmadd.s f7, f20, f24, f22, dyn # perform operation
fmadd.s f7, f20, f24, f22, rdn # perform operation
fmadd.s f7, f20, f24, f22, rmm # perform operation
fmadd.s f7, f20, f24, f22, rne # perform operation
fmadd.s f7, f20, f24, f22, rtz # perform operation
fmadd.s f7, f20, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x5, 0x46e981ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x29a91c6a # load x3 with value 0x29a91c6a
sw x3, 0(x2) # store 0x29a91c6a in memory
flw f3, 0(x2) # load 0x29a91c6a from memory into f3
fmadd.s f5, f13, f29, f3, dyn # perform operation
fmadd.s f5, f13, f29, f3, rdn # perform operation
fmadd.s f5, f13, f29, f3, rmm # perform operation
fmadd.s f5, f13, f29, f3, rne # perform operation
fmadd.s f5, f13, f29, f3, rtz # perform operation
fmadd.s f5, f13, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x23, 0x23865fc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x0a746e66 # load x3 with value 0x0a746e66
sw x3, 0(x2) # store 0x0a746e66 in memory
flw f9, 0(x2) # load 0x0a746e66 from memory into f9
fmadd.s f23, f6, f20, f9, dyn # perform operation
fmadd.s f23, f6, f20, f9, rdn # perform operation
fmadd.s f23, f6, f20, f9, rmm # perform operation
fmadd.s f23, f6, f20, f9, rne # perform operation
fmadd.s f23, f6, f20, f9, rtz # perform operation
fmadd.s f23, f6, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x2, 0x6ee135ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x40cd92c4 # load x3 with value 0x40cd92c4
sw x3, 0(x2) # store 0x40cd92c4 in memory
flw f23, 0(x2) # load 0x40cd92c4 from memory into f23
fmadd.s f2, f22, f5, f23, dyn # perform operation
fmadd.s f2, f22, f5, f23, rdn # perform operation
fmadd.s f2, f22, f5, f23, rmm # perform operation
fmadd.s f2, f22, f5, f23, rne # perform operation
fmadd.s f2, f22, f5, f23, rtz # perform operation
fmadd.s f2, f22, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x14, 0xf81e465d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x4f94cba8 # load x3 with value 0x4f94cba8
sw x3, 0(x2) # store 0x4f94cba8 in memory
flw f5, 0(x2) # load 0x4f94cba8 from memory into f5
fmadd.s f14, f13, f31, f5, dyn # perform operation
fmadd.s f14, f13, f31, f5, rdn # perform operation
fmadd.s f14, f13, f31, f5, rmm # perform operation
fmadd.s f14, f13, f31, f5, rne # perform operation
fmadd.s f14, f13, f31, f5, rtz # perform operation
fmadd.s f14, f13, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x27, 0x3eeb88e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x6d95dee8 # load x3 with value 0x6d95dee8
sw x3, 0(x2) # store 0x6d95dee8 in memory
flw f15, 0(x2) # load 0x6d95dee8 from memory into f15
fmadd.s f27, f6, f19, f15, dyn # perform operation
fmadd.s f27, f6, f19, f15, rdn # perform operation
fmadd.s f27, f6, f19, f15, rmm # perform operation
fmadd.s f27, f6, f19, f15, rne # perform operation
fmadd.s f27, f6, f19, f15, rtz # perform operation
fmadd.s f27, f6, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f6, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f6, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x21, 0xe5182cc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x610deff1 # load x3 with value 0x610deff1
sw x3, 0(x2) # store 0x610deff1 in memory
flw f22, 0(x2) # load 0x610deff1 from memory into f22
fmadd.s f21, f29, f1, f22, dyn # perform operation
fmadd.s f21, f29, f1, f22, rdn # perform operation
fmadd.s f21, f29, f1, f22, rmm # perform operation
fmadd.s f21, f29, f1, f22, rne # perform operation
fmadd.s f21, f29, f1, f22, rtz # perform operation
fmadd.s f21, f29, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x15, 0x9332a266 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x1b719a23 # load x3 with value 0x1b719a23
sw x3, 0(x2) # store 0x1b719a23 in memory
flw f6, 0(x2) # load 0x1b719a23 from memory into f6
fmadd.s f15, f26, f5, f6, dyn # perform operation
fmadd.s f15, f26, f5, f6, rdn # perform operation
fmadd.s f15, f26, f5, f6, rmm # perform operation
fmadd.s f15, f26, f5, f6, rne # perform operation
fmadd.s f15, f26, f5, f6, rtz # perform operation
fmadd.s f15, f26, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x2, 0x5963de82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x7d3c8937 # load x3 with value 0x7d3c8937
sw x3, 0(x2) # store 0x7d3c8937 in memory
flw f5, 0(x2) # load 0x7d3c8937 from memory into f5
fmadd.s f2, f28, f6, f5, dyn # perform operation
fmadd.s f2, f28, f6, f5, rdn # perform operation
fmadd.s f2, f28, f6, f5, rmm # perform operation
fmadd.s f2, f28, f6, f5, rne # perform operation
fmadd.s f2, f28, f6, f5, rtz # perform operation
fmadd.s f2, f28, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x2, 0xbddba29e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x8c8b476b # load x3 with value 0x8c8b476b
sw x3, 0(x2) # store 0x8c8b476b in memory
flw f28, 0(x2) # load 0x8c8b476b from memory into f28
fmadd.s f2, f5, f4, f28, dyn # perform operation
fmadd.s f2, f5, f4, f28, rdn # perform operation
fmadd.s f2, f5, f4, f28, rmm # perform operation
fmadd.s f2, f5, f4, f28, rne # perform operation
fmadd.s f2, f5, f4, f28, rtz # perform operation
fmadd.s f2, f5, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x11, 0x85f7385b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x866bd997 # load x3 with value 0x866bd997
sw x3, 0(x2) # store 0x866bd997 in memory
flw f6, 0(x2) # load 0x866bd997 from memory into f6
fmadd.s f11, f1, f19, f6, dyn # perform operation
fmadd.s f11, f1, f19, f6, rdn # perform operation
fmadd.s f11, f1, f19, f6, rmm # perform operation
fmadd.s f11, f1, f19, f6, rne # perform operation
fmadd.s f11, f1, f19, f6, rtz # perform operation
fmadd.s f11, f1, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x10, 0xb68dd1d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0xa144e0bc # load x3 with value 0xa144e0bc
sw x3, 0(x2) # store 0xa144e0bc in memory
flw f15, 0(x2) # load 0xa144e0bc from memory into f15
fmadd.s f10, f9, f19, f15, dyn # perform operation
fmadd.s f10, f9, f19, f15, rdn # perform operation
fmadd.s f10, f9, f19, f15, rmm # perform operation
fmadd.s f10, f9, f19, f15, rne # perform operation
fmadd.s f10, f9, f19, f15, rtz # perform operation
fmadd.s f10, f9, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f19, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x27, 0x0cc1f20e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x889e0b10 # load x3 with value 0x889e0b10
sw x3, 0(x2) # store 0x889e0b10 in memory
flw f29, 0(x2) # load 0x889e0b10 from memory into f29
fmadd.s f27, f17, f2, f29, dyn # perform operation
fmadd.s f27, f17, f2, f29, rdn # perform operation
fmadd.s f27, f17, f2, f29, rmm # perform operation
fmadd.s f27, f17, f2, f29, rne # perform operation
fmadd.s f27, f17, f2, f29, rtz # perform operation
fmadd.s f27, f17, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x8, 0x07f50030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xec722cf8 # load x3 with value 0xec722cf8
sw x3, 0(x2) # store 0xec722cf8 in memory
flw f31, 0(x2) # load 0xec722cf8 from memory into f31
fmadd.s f8, f11, f12, f31, dyn # perform operation
fmadd.s f8, f11, f12, f31, rdn # perform operation
fmadd.s f8, f11, f12, f31, rmm # perform operation
fmadd.s f8, f11, f12, f31, rne # perform operation
fmadd.s f8, f11, f12, f31, rtz # perform operation
fmadd.s f8, f11, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x29, 0xb24b06ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x84fd33fa # load x3 with value 0x84fd33fa
sw x3, 0(x2) # store 0x84fd33fa in memory
flw f30, 0(x2) # load 0x84fd33fa from memory into f30
fmadd.s f29, f9, f16, f30, dyn # perform operation
fmadd.s f29, f9, f16, f30, rdn # perform operation
fmadd.s f29, f9, f16, f30, rmm # perform operation
fmadd.s f29, f9, f16, f30, rne # perform operation
fmadd.s f29, f9, f16, f30, rtz # perform operation
fmadd.s f29, f9, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x22, 0xfe2a89a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0xd604c0ab # load x3 with value 0xd604c0ab
sw x3, 0(x2) # store 0xd604c0ab in memory
flw f4, 0(x2) # load 0xd604c0ab from memory into f4
fmadd.s f22, f15, f26, f4, dyn # perform operation
fmadd.s f22, f15, f26, f4, rdn # perform operation
fmadd.s f22, f15, f26, f4, rmm # perform operation
fmadd.s f22, f15, f26, f4, rne # perform operation
fmadd.s f22, f15, f26, f4, rtz # perform operation
fmadd.s f22, f15, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f26, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x19, 0x166b8027 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x53ccf0c7 # load x3 with value 0x53ccf0c7
sw x3, 0(x2) # store 0x53ccf0c7 in memory
flw f8, 0(x2) # load 0x53ccf0c7 from memory into f8
fmadd.s f19, f4, f26, f8, dyn # perform operation
fmadd.s f19, f4, f26, f8, rdn # perform operation
fmadd.s f19, f4, f26, f8, rmm # perform operation
fmadd.s f19, f4, f26, f8, rne # perform operation
fmadd.s f19, f4, f26, f8, rtz # perform operation
fmadd.s f19, f4, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f4, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f4, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f4, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f4, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f4, f26, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x11, 0x91b27fe1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x71b794e9 # load x3 with value 0x71b794e9
sw x3, 0(x2) # store 0x71b794e9 in memory
flw f8, 0(x2) # load 0x71b794e9 from memory into f8
fmadd.s f11, f23, f31, f8, dyn # perform operation
fmadd.s f11, f23, f31, f8, rdn # perform operation
fmadd.s f11, f23, f31, f8, rmm # perform operation
fmadd.s f11, f23, f31, f8, rne # perform operation
fmadd.s f11, f23, f31, f8, rtz # perform operation
fmadd.s f11, f23, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x10, 0xd7f43dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xc2615ec7 # load x3 with value 0xc2615ec7
sw x3, 0(x2) # store 0xc2615ec7 in memory
flw f17, 0(x2) # load 0xc2615ec7 from memory into f17
fmadd.s f10, f30, f27, f17, dyn # perform operation
fmadd.s f10, f30, f27, f17, rdn # perform operation
fmadd.s f10, f30, f27, f17, rmm # perform operation
fmadd.s f10, f30, f27, f17, rne # perform operation
fmadd.s f10, f30, f27, f17, rtz # perform operation
fmadd.s f10, f30, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x29, 0xe4c2557a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x8355a597 # load x3 with value 0x8355a597
sw x3, 0(x2) # store 0x8355a597 in memory
flw f30, 0(x2) # load 0x8355a597 from memory into f30
fmadd.s f29, f26, f27, f30, dyn # perform operation
fmadd.s f29, f26, f27, f30, rdn # perform operation
fmadd.s f29, f26, f27, f30, rmm # perform operation
fmadd.s f29, f26, f27, f30, rne # perform operation
fmadd.s f29, f26, f27, f30, rtz # perform operation
fmadd.s f29, f26, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f26, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f26, f27, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x24, 0x1c86eb2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x3f691b54 # load x3 with value 0x3f691b54
sw x3, 0(x2) # store 0x3f691b54 in memory
flw f28, 0(x2) # load 0x3f691b54 from memory into f28
fmadd.s f24, f25, f14, f28, dyn # perform operation
fmadd.s f24, f25, f14, f28, rdn # perform operation
fmadd.s f24, f25, f14, f28, rmm # perform operation
fmadd.s f24, f25, f14, f28, rne # perform operation
fmadd.s f24, f25, f14, f28, rtz # perform operation
fmadd.s f24, f25, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f25, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f25, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f25, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f25, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f25, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x21, 0x5f87c1d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x955c03c0 # load x3 with value 0x955c03c0
sw x3, 0(x2) # store 0x955c03c0 in memory
flw f20, 0(x2) # load 0x955c03c0 from memory into f20
fmadd.s f21, f31, f14, f20, dyn # perform operation
fmadd.s f21, f31, f14, f20, rdn # perform operation
fmadd.s f21, f31, f14, f20, rmm # perform operation
fmadd.s f21, f31, f14, f20, rne # perform operation
fmadd.s f21, f31, f14, f20, rtz # perform operation
fmadd.s f21, f31, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x5, 0xc3eed9b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x0aeee92b # load x3 with value 0x0aeee92b
sw x3, 0(x2) # store 0x0aeee92b in memory
flw f10, 0(x2) # load 0x0aeee92b from memory into f10
fmadd.s f5, f27, f4, f10, dyn # perform operation
fmadd.s f5, f27, f4, f10, rdn # perform operation
fmadd.s f5, f27, f4, f10, rmm # perform operation
fmadd.s f5, f27, f4, f10, rne # perform operation
fmadd.s f5, f27, f4, f10, rtz # perform operation
fmadd.s f5, f27, f4, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f4, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f4, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f4, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f4, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f4, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x28, 0x044fe603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x90093f39 # load x3 with value 0x90093f39
sw x3, 0(x2) # store 0x90093f39 in memory
flw f17, 0(x2) # load 0x90093f39 from memory into f17
fmadd.s f28, f19, f29, f17, dyn # perform operation
fmadd.s f28, f19, f29, f17, rdn # perform operation
fmadd.s f28, f19, f29, f17, rmm # perform operation
fmadd.s f28, f19, f29, f17, rne # perform operation
fmadd.s f28, f19, f29, f17, rtz # perform operation
fmadd.s f28, f19, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x11, 0xb8710bff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x6fc07676 # load x3 with value 0x6fc07676
sw x3, 0(x2) # store 0x6fc07676 in memory
flw f17, 0(x2) # load 0x6fc07676 from memory into f17
fmadd.s f11, f4, f21, f17, dyn # perform operation
fmadd.s f11, f4, f21, f17, rdn # perform operation
fmadd.s f11, f4, f21, f17, rmm # perform operation
fmadd.s f11, f4, f21, f17, rne # perform operation
fmadd.s f11, f4, f21, f17, rtz # perform operation
fmadd.s f11, f4, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f4, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f4, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x27, 0xbf6dc9bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x4c085dd2 # load x3 with value 0x4c085dd2
sw x3, 0(x2) # store 0x4c085dd2 in memory
flw f30, 0(x2) # load 0x4c085dd2 from memory into f30
fmadd.s f27, f3, f1, f30, dyn # perform operation
fmadd.s f27, f3, f1, f30, rdn # perform operation
fmadd.s f27, f3, f1, f30, rmm # perform operation
fmadd.s f27, f3, f1, f30, rne # perform operation
fmadd.s f27, f3, f1, f30, rtz # perform operation
fmadd.s f27, f3, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x18, 0xa4377c13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x2cea8cb9 # load x3 with value 0x2cea8cb9
sw x3, 0(x2) # store 0x2cea8cb9 in memory
flw f20, 0(x2) # load 0x2cea8cb9 from memory into f20
fmadd.s f18, f9, f13, f20, dyn # perform operation
fmadd.s f18, f9, f13, f20, rdn # perform operation
fmadd.s f18, f9, f13, f20, rmm # perform operation
fmadd.s f18, f9, f13, f20, rne # perform operation
fmadd.s f18, f9, f13, f20, rtz # perform operation
fmadd.s f18, f9, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f9, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f9, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x29, 0x31defcd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x0fa5cc1d # load x3 with value 0x0fa5cc1d
sw x3, 0(x2) # store 0x0fa5cc1d in memory
flw f19, 0(x2) # load 0x0fa5cc1d from memory into f19
fmadd.s f29, f31, f18, f19, dyn # perform operation
fmadd.s f29, f31, f18, f19, rdn # perform operation
fmadd.s f29, f31, f18, f19, rmm # perform operation
fmadd.s f29, f31, f18, f19, rne # perform operation
fmadd.s f29, f31, f18, f19, rtz # perform operation
fmadd.s f29, f31, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x24, 0x60567f80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x9f982b8d # load x3 with value 0x9f982b8d
sw x3, 0(x2) # store 0x9f982b8d in memory
flw f25, 0(x2) # load 0x9f982b8d from memory into f25
fmadd.s f24, f1, f3, f25, dyn # perform operation
fmadd.s f24, f1, f3, f25, rdn # perform operation
fmadd.s f24, f1, f3, f25, rmm # perform operation
fmadd.s f24, f1, f3, f25, rne # perform operation
fmadd.s f24, f1, f3, f25, rtz # perform operation
fmadd.s f24, f1, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f3, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x4, 0xd982e913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0xf783c268 # load x3 with value 0xf783c268
sw x3, 0(x2) # store 0xf783c268 in memory
flw f31, 0(x2) # load 0xf783c268 from memory into f31
fmadd.s f4, f10, f21, f31, dyn # perform operation
fmadd.s f4, f10, f21, f31, rdn # perform operation
fmadd.s f4, f10, f21, f31, rmm # perform operation
fmadd.s f4, f10, f21, f31, rne # perform operation
fmadd.s f4, f10, f21, f31, rtz # perform operation
fmadd.s f4, f10, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f21, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x24, 0xc46f54e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xe852f29d # load x3 with value 0xe852f29d
sw x3, 0(x2) # store 0xe852f29d in memory
flw f19, 0(x2) # load 0xe852f29d from memory into f19
fmadd.s f24, f8, f13, f19, dyn # perform operation
fmadd.s f24, f8, f13, f19, rdn # perform operation
fmadd.s f24, f8, f13, f19, rmm # perform operation
fmadd.s f24, f8, f13, f19, rne # perform operation
fmadd.s f24, f8, f13, f19, rtz # perform operation
fmadd.s f24, f8, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x3, 0x6ed7f561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x89ff695c # load x3 with value 0x89ff695c
sw x3, 0(x2) # store 0x89ff695c in memory
flw f29, 0(x2) # load 0x89ff695c from memory into f29
fmadd.s f3, f15, f17, f29, dyn # perform operation
fmadd.s f3, f15, f17, f29, rdn # perform operation
fmadd.s f3, f15, f17, f29, rmm # perform operation
fmadd.s f3, f15, f17, f29, rne # perform operation
fmadd.s f3, f15, f17, f29, rtz # perform operation
fmadd.s f3, f15, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x5, 0xbae71e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xda74772f # load x3 with value 0xda74772f
sw x3, 0(x2) # store 0xda74772f in memory
flw f24, 0(x2) # load 0xda74772f from memory into f24
fmadd.s f5, f20, f2, f24, dyn # perform operation
fmadd.s f5, f20, f2, f24, rdn # perform operation
fmadd.s f5, f20, f2, f24, rmm # perform operation
fmadd.s f5, f20, f2, f24, rne # perform operation
fmadd.s f5, f20, f2, f24, rtz # perform operation
fmadd.s f5, f20, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x20, 0x552a5650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x0a273c27 # load x3 with value 0x0a273c27
sw x3, 0(x2) # store 0x0a273c27 in memory
flw f18, 0(x2) # load 0x0a273c27 from memory into f18
fmadd.s f20, f14, f17, f18, dyn # perform operation
fmadd.s f20, f14, f17, f18, rdn # perform operation
fmadd.s f20, f14, f17, f18, rmm # perform operation
fmadd.s f20, f14, f17, f18, rne # perform operation
fmadd.s f20, f14, f17, f18, rtz # perform operation
fmadd.s f20, f14, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f14, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x30, 0x9b292709 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0xce9778b3 # load x3 with value 0xce9778b3
sw x3, 0(x2) # store 0xce9778b3 in memory
flw f12, 0(x2) # load 0xce9778b3 from memory into f12
fmadd.s f30, f9, f15, f12, dyn # perform operation
fmadd.s f30, f9, f15, f12, rdn # perform operation
fmadd.s f30, f9, f15, f12, rmm # perform operation
fmadd.s f30, f9, f15, f12, rne # perform operation
fmadd.s f30, f9, f15, f12, rtz # perform operation
fmadd.s f30, f9, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f9, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f9, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x31, 0x79a3c30a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x168088ba # load x3 with value 0x168088ba
sw x3, 0(x2) # store 0x168088ba in memory
flw f6, 0(x2) # load 0x168088ba from memory into f6
fmadd.s f31, f19, f29, f6, dyn # perform operation
fmadd.s f31, f19, f29, f6, rdn # perform operation
fmadd.s f31, f19, f29, f6, rmm # perform operation
fmadd.s f31, f19, f29, f6, rne # perform operation
fmadd.s f31, f19, f29, f6, rtz # perform operation
fmadd.s f31, f19, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x3, 0x3f2f2bef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xf4afe62a # load x3 with value 0xf4afe62a
sw x3, 0(x2) # store 0xf4afe62a in memory
flw f4, 0(x2) # load 0xf4afe62a from memory into f4
fmadd.s f3, f26, f2, f4, dyn # perform operation
fmadd.s f3, f26, f2, f4, rdn # perform operation
fmadd.s f3, f26, f2, f4, rmm # perform operation
fmadd.s f3, f26, f2, f4, rne # perform operation
fmadd.s f3, f26, f2, f4, rtz # perform operation
fmadd.s f3, f26, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x21, 0xad97c047 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x1d05704c # load x3 with value 0x1d05704c
sw x3, 0(x2) # store 0x1d05704c in memory
flw f25, 0(x2) # load 0x1d05704c from memory into f25
fmadd.s f21, f3, f7, f25, dyn # perform operation
fmadd.s f21, f3, f7, f25, rdn # perform operation
fmadd.s f21, f3, f7, f25, rmm # perform operation
fmadd.s f21, f3, f7, f25, rne # perform operation
fmadd.s f21, f3, f7, f25, rtz # perform operation
fmadd.s f21, f3, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f7, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x22, 0x9cbc32ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x402301c5 # load x3 with value 0x402301c5
sw x3, 0(x2) # store 0x402301c5 in memory
flw f1, 0(x2) # load 0x402301c5 from memory into f1
fmadd.s f22, f19, f5, f1, dyn # perform operation
fmadd.s f22, f19, f5, f1, rdn # perform operation
fmadd.s f22, f19, f5, f1, rmm # perform operation
fmadd.s f22, f19, f5, f1, rne # perform operation
fmadd.s f22, f19, f5, f1, rtz # perform operation
fmadd.s f22, f19, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f5, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x21, 0xd017b197 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x3fd3452a # load x3 with value 0x3fd3452a
sw x3, 0(x2) # store 0x3fd3452a in memory
flw f7, 0(x2) # load 0x3fd3452a from memory into f7
fmadd.s f21, f17, f15, f7, dyn # perform operation
fmadd.s f21, f17, f15, f7, rdn # perform operation
fmadd.s f21, f17, f15, f7, rmm # perform operation
fmadd.s f21, f17, f15, f7, rne # perform operation
fmadd.s f21, f17, f15, f7, rtz # perform operation
fmadd.s f21, f17, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f17, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f17, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f17, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f17, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f17, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x21, 0x77ed8e87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0xabf658cc # load x3 with value 0xabf658cc
sw x3, 0(x2) # store 0xabf658cc in memory
flw f16, 0(x2) # load 0xabf658cc from memory into f16
fmadd.s f21, f19, f23, f16, dyn # perform operation
fmadd.s f21, f19, f23, f16, rdn # perform operation
fmadd.s f21, f19, f23, f16, rmm # perform operation
fmadd.s f21, f19, f23, f16, rne # perform operation
fmadd.s f21, f19, f23, f16, rtz # perform operation
fmadd.s f21, f19, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f19, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x3, 0xc158bf8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x8c1d275c # load x3 with value 0x8c1d275c
sw x3, 0(x2) # store 0x8c1d275c in memory
flw f23, 0(x2) # load 0x8c1d275c from memory into f23
fmadd.s f3, f19, f12, f23, dyn # perform operation
fmadd.s f3, f19, f12, f23, rdn # perform operation
fmadd.s f3, f19, f12, f23, rmm # perform operation
fmadd.s f3, f19, f12, f23, rne # perform operation
fmadd.s f3, f19, f12, f23, rtz # perform operation
fmadd.s f3, f19, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x21, 0xef7736b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x2111aa18 # load x3 with value 0x2111aa18
sw x3, 0(x2) # store 0x2111aa18 in memory
flw f24, 0(x2) # load 0x2111aa18 from memory into f24
fmadd.s f21, f11, f8, f24, dyn # perform operation
fmadd.s f21, f11, f8, f24, rdn # perform operation
fmadd.s f21, f11, f8, f24, rmm # perform operation
fmadd.s f21, f11, f8, f24, rne # perform operation
fmadd.s f21, f11, f8, f24, rtz # perform operation
fmadd.s f21, f11, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x11, 0xf7da3bb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x1c67d090 # load x3 with value 0x1c67d090
sw x3, 0(x2) # store 0x1c67d090 in memory
flw f8, 0(x2) # load 0x1c67d090 from memory into f8
fmadd.s f11, f31, f23, f8, dyn # perform operation
fmadd.s f11, f31, f23, f8, rdn # perform operation
fmadd.s f11, f31, f23, f8, rmm # perform operation
fmadd.s f11, f31, f23, f8, rne # perform operation
fmadd.s f11, f31, f23, f8, rtz # perform operation
fmadd.s f11, f31, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f23, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x27, 0x97a267a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x3386127d # load x3 with value 0x3386127d
sw x3, 0(x2) # store 0x3386127d in memory
flw f23, 0(x2) # load 0x3386127d from memory into f23
fmadd.s f27, f9, f19, f23, dyn # perform operation
fmadd.s f27, f9, f19, f23, rdn # perform operation
fmadd.s f27, f9, f19, f23, rmm # perform operation
fmadd.s f27, f9, f19, f23, rne # perform operation
fmadd.s f27, f9, f19, f23, rtz # perform operation
fmadd.s f27, f9, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x26, 0x1b65dc21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xc1dde6d2 # load x3 with value 0xc1dde6d2
sw x3, 0(x2) # store 0xc1dde6d2 in memory
flw f17, 0(x2) # load 0xc1dde6d2 from memory into f17
fmadd.s f26, f25, f4, f17, dyn # perform operation
fmadd.s f26, f25, f4, f17, rdn # perform operation
fmadd.s f26, f25, f4, f17, rmm # perform operation
fmadd.s f26, f25, f4, f17, rne # perform operation
fmadd.s f26, f25, f4, f17, rtz # perform operation
fmadd.s f26, f25, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x14, 0xa9af4a57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xa36d17e1 # load x3 with value 0xa36d17e1
sw x3, 0(x2) # store 0xa36d17e1 in memory
flw f24, 0(x2) # load 0xa36d17e1 from memory into f24
fmadd.s f14, f19, f29, f24, dyn # perform operation
fmadd.s f14, f19, f29, f24, rdn # perform operation
fmadd.s f14, f19, f29, f24, rmm # perform operation
fmadd.s f14, f19, f29, f24, rne # perform operation
fmadd.s f14, f19, f29, f24, rtz # perform operation
fmadd.s f14, f19, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f19, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f19, f29, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x15, 0xf8fd72eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x0667c105 # load x3 with value 0x0667c105
sw x3, 0(x2) # store 0x0667c105 in memory
flw f4, 0(x2) # load 0x0667c105 from memory into f4
fmadd.s f15, f10, f6, f4, dyn # perform operation
fmadd.s f15, f10, f6, f4, rdn # perform operation
fmadd.s f15, f10, f6, f4, rmm # perform operation
fmadd.s f15, f10, f6, f4, rne # perform operation
fmadd.s f15, f10, f6, f4, rtz # perform operation
fmadd.s f15, f10, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x14, 0x702eef71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x5a7467af # load x3 with value 0x5a7467af
sw x3, 0(x2) # store 0x5a7467af in memory
flw f22, 0(x2) # load 0x5a7467af from memory into f22
fmadd.s f14, f4, f8, f22, dyn # perform operation
fmadd.s f14, f4, f8, f22, rdn # perform operation
fmadd.s f14, f4, f8, f22, rmm # perform operation
fmadd.s f14, f4, f8, f22, rne # perform operation
fmadd.s f14, f4, f8, f22, rtz # perform operation
fmadd.s f14, f4, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f4, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f4, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f4, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f4, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f4, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x3, 0x535b7c12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x2a3546b4 # load x3 with value 0x2a3546b4
sw x3, 0(x2) # store 0x2a3546b4 in memory
flw f20, 0(x2) # load 0x2a3546b4 from memory into f20
fmadd.s f3, f27, f4, f20, dyn # perform operation
fmadd.s f3, f27, f4, f20, rdn # perform operation
fmadd.s f3, f27, f4, f20, rmm # perform operation
fmadd.s f3, f27, f4, f20, rne # perform operation
fmadd.s f3, f27, f4, f20, rtz # perform operation
fmadd.s f3, f27, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f27, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f27, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x12, 0x9d71aefe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x86122b5f # load x3 with value 0x86122b5f
sw x3, 0(x2) # store 0x86122b5f in memory
flw f8, 0(x2) # load 0x86122b5f from memory into f8
fmadd.s f12, f10, f3, f8, dyn # perform operation
fmadd.s f12, f10, f3, f8, rdn # perform operation
fmadd.s f12, f10, f3, f8, rmm # perform operation
fmadd.s f12, f10, f3, f8, rne # perform operation
fmadd.s f12, f10, f3, f8, rtz # perform operation
fmadd.s f12, f10, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x29, 0xba2148c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0xd63d2b9d # load x3 with value 0xd63d2b9d
sw x3, 0(x2) # store 0xd63d2b9d in memory
flw f10, 0(x2) # load 0xd63d2b9d from memory into f10
fmadd.s f29, f11, f30, f10, dyn # perform operation
fmadd.s f29, f11, f30, f10, rdn # perform operation
fmadd.s f29, f11, f30, f10, rmm # perform operation
fmadd.s f29, f11, f30, f10, rne # perform operation
fmadd.s f29, f11, f30, f10, rtz # perform operation
fmadd.s f29, f11, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x5, 0x7f9fda35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xc23ffaf2 # load x3 with value 0xc23ffaf2
sw x3, 0(x2) # store 0xc23ffaf2 in memory
flw f11, 0(x2) # load 0xc23ffaf2 from memory into f11
fmadd.s f5, f10, f14, f11, dyn # perform operation
fmadd.s f5, f10, f14, f11, rdn # perform operation
fmadd.s f5, f10, f14, f11, rmm # perform operation
fmadd.s f5, f10, f14, f11, rne # perform operation
fmadd.s f5, f10, f14, f11, rtz # perform operation
fmadd.s f5, f10, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x4, 0xe67dcb1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x11a6fdb3 # load x3 with value 0x11a6fdb3
sw x3, 0(x2) # store 0x11a6fdb3 in memory
flw f1, 0(x2) # load 0x11a6fdb3 from memory into f1
fmadd.s f4, f15, f14, f1, dyn # perform operation
fmadd.s f4, f15, f14, f1, rdn # perform operation
fmadd.s f4, f15, f14, f1, rmm # perform operation
fmadd.s f4, f15, f14, f1, rne # perform operation
fmadd.s f4, f15, f14, f1, rtz # perform operation
fmadd.s f4, f15, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f14, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x16, 0xbd51ee6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0xe9fa5c3d # load x3 with value 0xe9fa5c3d
sw x3, 0(x2) # store 0xe9fa5c3d in memory
flw f28, 0(x2) # load 0xe9fa5c3d from memory into f28
fmadd.s f16, f22, f8, f28, dyn # perform operation
fmadd.s f16, f22, f8, f28, rdn # perform operation
fmadd.s f16, f22, f8, f28, rmm # perform operation
fmadd.s f16, f22, f8, f28, rne # perform operation
fmadd.s f16, f22, f8, f28, rtz # perform operation
fmadd.s f16, f22, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x15, 0xf0f5f5be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x98383a40 # load x3 with value 0x98383a40
sw x3, 0(x2) # store 0x98383a40 in memory
flw f26, 0(x2) # load 0x98383a40 from memory into f26
fmadd.s f15, f31, f25, f26, dyn # perform operation
fmadd.s f15, f31, f25, f26, rdn # perform operation
fmadd.s f15, f31, f25, f26, rmm # perform operation
fmadd.s f15, f31, f25, f26, rne # perform operation
fmadd.s f15, f31, f25, f26, rtz # perform operation
fmadd.s f15, f31, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f31, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f31, f25, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x3, 0x87653737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x9d248857 # load x3 with value 0x9d248857
sw x3, 0(x2) # store 0x9d248857 in memory
flw f8, 0(x2) # load 0x9d248857 from memory into f8
fmadd.s f3, f12, f14, f8, dyn # perform operation
fmadd.s f3, f12, f14, f8, rdn # perform operation
fmadd.s f3, f12, f14, f8, rmm # perform operation
fmadd.s f3, f12, f14, f8, rne # perform operation
fmadd.s f3, f12, f14, f8, rtz # perform operation
fmadd.s f3, f12, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x9, 0xf54e6649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x739eb438 # load x3 with value 0x739eb438
sw x3, 0(x2) # store 0x739eb438 in memory
flw f18, 0(x2) # load 0x739eb438 from memory into f18
fmadd.s f9, f4, f5, f18, dyn # perform operation
fmadd.s f9, f4, f5, f18, rdn # perform operation
fmadd.s f9, f4, f5, f18, rmm # perform operation
fmadd.s f9, f4, f5, f18, rne # perform operation
fmadd.s f9, f4, f5, f18, rtz # perform operation
fmadd.s f9, f4, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f4, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f4, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f4, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f4, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f4, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x25, 0x8e17400d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x7b4e1010 # load x3 with value 0x7b4e1010
sw x3, 0(x2) # store 0x7b4e1010 in memory
flw f30, 0(x2) # load 0x7b4e1010 from memory into f30
fmadd.s f25, f18, f21, f30, dyn # perform operation
fmadd.s f25, f18, f21, f30, rdn # perform operation
fmadd.s f25, f18, f21, f30, rmm # perform operation
fmadd.s f25, f18, f21, f30, rne # perform operation
fmadd.s f25, f18, f21, f30, rtz # perform operation
fmadd.s f25, f18, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f18, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f18, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x23, 0x541fd603 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x8a5c7bcd # load x3 with value 0x8a5c7bcd
sw x3, 0(x2) # store 0x8a5c7bcd in memory
flw f17, 0(x2) # load 0x8a5c7bcd from memory into f17
fmadd.s f23, f16, f25, f17, dyn # perform operation
fmadd.s f23, f16, f25, f17, rdn # perform operation
fmadd.s f23, f16, f25, f17, rmm # perform operation
fmadd.s f23, f16, f25, f17, rne # perform operation
fmadd.s f23, f16, f25, f17, rtz # perform operation
fmadd.s f23, f16, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x31, 0xb56d4a63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x50520aa9 # load x3 with value 0x50520aa9
sw x3, 0(x2) # store 0x50520aa9 in memory
flw f2, 0(x2) # load 0x50520aa9 from memory into f2
fmadd.s f31, f28, f12, f2, dyn # perform operation
fmadd.s f31, f28, f12, f2, rdn # perform operation
fmadd.s f31, f28, f12, f2, rmm # perform operation
fmadd.s f31, f28, f12, f2, rne # perform operation
fmadd.s f31, f28, f12, f2, rtz # perform operation
fmadd.s f31, f28, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x30, 0x37c17539 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x443e25d6 # load x3 with value 0x443e25d6
sw x3, 0(x2) # store 0x443e25d6 in memory
flw f12, 0(x2) # load 0x443e25d6 from memory into f12
fmadd.s f30, f21, f22, f12, dyn # perform operation
fmadd.s f30, f21, f22, f12, rdn # perform operation
fmadd.s f30, f21, f22, f12, rmm # perform operation
fmadd.s f30, f21, f22, f12, rne # perform operation
fmadd.s f30, f21, f22, f12, rtz # perform operation
fmadd.s f30, f21, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f22, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x21, 0x34d80154 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x882db2c7 # load x3 with value 0x882db2c7
sw x3, 0(x2) # store 0x882db2c7 in memory
flw f4, 0(x2) # load 0x882db2c7 from memory into f4
fmadd.s f21, f3, f9, f4, dyn # perform operation
fmadd.s f21, f3, f9, f4, rdn # perform operation
fmadd.s f21, f3, f9, f4, rmm # perform operation
fmadd.s f21, f3, f9, f4, rne # perform operation
fmadd.s f21, f3, f9, f4, rtz # perform operation
fmadd.s f21, f3, f9, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f9, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f9, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f9, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f9, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f9, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x12, 0x43fb34c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xa1130a87 # load x3 with value 0xa1130a87
sw x3, 0(x2) # store 0xa1130a87 in memory
flw f29, 0(x2) # load 0xa1130a87 from memory into f29
fmadd.s f12, f30, f3, f29, dyn # perform operation
fmadd.s f12, f30, f3, f29, rdn # perform operation
fmadd.s f12, f30, f3, f29, rmm # perform operation
fmadd.s f12, f30, f3, f29, rne # perform operation
fmadd.s f12, f30, f3, f29, rtz # perform operation
fmadd.s f12, f30, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x8, 0x2b96d367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xadfdef99 # load x3 with value 0xadfdef99
sw x3, 0(x2) # store 0xadfdef99 in memory
flw f9, 0(x2) # load 0xadfdef99 from memory into f9
fmadd.s f8, f29, f23, f9, dyn # perform operation
fmadd.s f8, f29, f23, f9, rdn # perform operation
fmadd.s f8, f29, f23, f9, rmm # perform operation
fmadd.s f8, f29, f23, f9, rne # perform operation
fmadd.s f8, f29, f23, f9, rtz # perform operation
fmadd.s f8, f29, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f29, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f29, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x25, 0x17473cf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xe65cb028 # load x3 with value 0xe65cb028
sw x3, 0(x2) # store 0xe65cb028 in memory
flw f7, 0(x2) # load 0xe65cb028 from memory into f7
fmadd.s f25, f6, f1, f7, dyn # perform operation
fmadd.s f25, f6, f1, f7, rdn # perform operation
fmadd.s f25, f6, f1, f7, rmm # perform operation
fmadd.s f25, f6, f1, f7, rne # perform operation
fmadd.s f25, f6, f1, f7, rtz # perform operation
fmadd.s f25, f6, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x19, 0x6e9def58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x970c1bde # load x3 with value 0x970c1bde
sw x3, 0(x2) # store 0x970c1bde in memory
flw f1, 0(x2) # load 0x970c1bde from memory into f1
fmadd.s f19, f25, f18, f1, dyn # perform operation
fmadd.s f19, f25, f18, f1, rdn # perform operation
fmadd.s f19, f25, f18, f1, rmm # perform operation
fmadd.s f19, f25, f18, f1, rne # perform operation
fmadd.s f19, f25, f18, f1, rtz # perform operation
fmadd.s f19, f25, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f25, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f25, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x19, 0x61eaa218 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x3318818a # load x3 with value 0x3318818a
sw x3, 0(x2) # store 0x3318818a in memory
flw f5, 0(x2) # load 0x3318818a from memory into f5
fmadd.s f19, f6, f10, f5, dyn # perform operation
fmadd.s f19, f6, f10, f5, rdn # perform operation
fmadd.s f19, f6, f10, f5, rmm # perform operation
fmadd.s f19, f6, f10, f5, rne # perform operation
fmadd.s f19, f6, f10, f5, rtz # perform operation
fmadd.s f19, f6, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f6, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f6, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x4, 0x319e8045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xfda86663 # load x3 with value 0xfda86663
sw x3, 0(x2) # store 0xfda86663 in memory
flw f23, 0(x2) # load 0xfda86663 from memory into f23
fmadd.s f4, f25, f8, f23, dyn # perform operation
fmadd.s f4, f25, f8, f23, rdn # perform operation
fmadd.s f4, f25, f8, f23, rmm # perform operation
fmadd.s f4, f25, f8, f23, rne # perform operation
fmadd.s f4, f25, f8, f23, rtz # perform operation
fmadd.s f4, f25, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f25, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f25, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x22, 0x57bff4df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x1bc97928 # load x3 with value 0x1bc97928
sw x3, 0(x2) # store 0x1bc97928 in memory
flw f25, 0(x2) # load 0x1bc97928 from memory into f25
fmadd.s f22, f23, f26, f25, dyn # perform operation
fmadd.s f22, f23, f26, f25, rdn # perform operation
fmadd.s f22, f23, f26, f25, rmm # perform operation
fmadd.s f22, f23, f26, f25, rne # perform operation
fmadd.s f22, f23, f26, f25, rtz # perform operation
fmadd.s f22, f23, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f23, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f23, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f23, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f23, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f23, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x28, 0x2eef0bfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0x8f61fa37 # load x3 with value 0x8f61fa37
sw x3, 0(x2) # store 0x8f61fa37 in memory
flw f30, 0(x2) # load 0x8f61fa37 from memory into f30
fmadd.s f28, f12, f1, f30, dyn # perform operation
fmadd.s f28, f12, f1, f30, rdn # perform operation
fmadd.s f28, f12, f1, f30, rmm # perform operation
fmadd.s f28, f12, f1, f30, rne # perform operation
fmadd.s f28, f12, f1, f30, rtz # perform operation
fmadd.s f28, f12, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x28, 0xcc391169 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xcb10d30f # load x3 with value 0xcb10d30f
sw x3, 0(x2) # store 0xcb10d30f in memory
flw f19, 0(x2) # load 0xcb10d30f from memory into f19
fmadd.s f28, f5, f27, f19, dyn # perform operation
fmadd.s f28, f5, f27, f19, rdn # perform operation
fmadd.s f28, f5, f27, f19, rmm # perform operation
fmadd.s f28, f5, f27, f19, rne # perform operation
fmadd.s f28, f5, f27, f19, rtz # perform operation
fmadd.s f28, f5, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f27, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x8, 0x3a41e8c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x05667818 # load x3 with value 0x05667818
sw x3, 0(x2) # store 0x05667818 in memory
flw f9, 0(x2) # load 0x05667818 from memory into f9
fmadd.s f8, f20, f30, f9, dyn # perform operation
fmadd.s f8, f20, f30, f9, rdn # perform operation
fmadd.s f8, f20, f30, f9, rmm # perform operation
fmadd.s f8, f20, f30, f9, rne # perform operation
fmadd.s f8, f20, f30, f9, rtz # perform operation
fmadd.s f8, f20, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x19, 0x203d3ef4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xc95ce3c7 # load x3 with value 0xc95ce3c7
sw x3, 0(x2) # store 0xc95ce3c7 in memory
flw f6, 0(x2) # load 0xc95ce3c7 from memory into f6
fmadd.s f19, f15, f13, f6, dyn # perform operation
fmadd.s f19, f15, f13, f6, rdn # perform operation
fmadd.s f19, f15, f13, f6, rmm # perform operation
fmadd.s f19, f15, f13, f6, rne # perform operation
fmadd.s f19, f15, f13, f6, rtz # perform operation
fmadd.s f19, f15, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x26, 0x80b3c6b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0xe56fb9a2 # load x3 with value 0xe56fb9a2
sw x3, 0(x2) # store 0xe56fb9a2 in memory
flw f21, 0(x2) # load 0xe56fb9a2 from memory into f21
fmadd.s f26, f2, f28, f21, dyn # perform operation
fmadd.s f26, f2, f28, f21, rdn # perform operation
fmadd.s f26, f2, f28, f21, rmm # perform operation
fmadd.s f26, f2, f28, f21, rne # perform operation
fmadd.s f26, f2, f28, f21, rtz # perform operation
fmadd.s f26, f2, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f2, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x5, 0xeef1a78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xb7db3393 # load x3 with value 0xb7db3393
sw x3, 0(x2) # store 0xb7db3393 in memory
flw f15, 0(x2) # load 0xb7db3393 from memory into f15
fmadd.s f5, f22, f1, f15, dyn # perform operation
fmadd.s f5, f22, f1, f15, rdn # perform operation
fmadd.s f5, f22, f1, f15, rmm # perform operation
fmadd.s f5, f22, f1, f15, rne # perform operation
fmadd.s f5, f22, f1, f15, rtz # perform operation
fmadd.s f5, f22, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x1, 0x4a939e8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0xa9af7ed2 # load x3 with value 0xa9af7ed2
sw x3, 0(x2) # store 0xa9af7ed2 in memory
flw f3, 0(x2) # load 0xa9af7ed2 from memory into f3
fmadd.s f1, f26, f23, f3, dyn # perform operation
fmadd.s f1, f26, f23, f3, rdn # perform operation
fmadd.s f1, f26, f23, f3, rmm # perform operation
fmadd.s f1, f26, f23, f3, rne # perform operation
fmadd.s f1, f26, f23, f3, rtz # perform operation
fmadd.s f1, f26, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f26, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f26, f23, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x4, 0x3f7e586f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xb3b3bea9 # load x3 with value 0xb3b3bea9
sw x3, 0(x2) # store 0xb3b3bea9 in memory
flw f22, 0(x2) # load 0xb3b3bea9 from memory into f22
fmadd.s f4, f30, f1, f22, dyn # perform operation
fmadd.s f4, f30, f1, f22, rdn # perform operation
fmadd.s f4, f30, f1, f22, rmm # perform operation
fmadd.s f4, f30, f1, f22, rne # perform operation
fmadd.s f4, f30, f1, f22, rtz # perform operation
fmadd.s f4, f30, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f30, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f30, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x22, 0xbfee61b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xfd7de6f3 # load x3 with value 0xfd7de6f3
sw x3, 0(x2) # store 0xfd7de6f3 in memory
flw f4, 0(x2) # load 0xfd7de6f3 from memory into f4
fmadd.s f22, f17, f30, f4, dyn # perform operation
fmadd.s f22, f17, f30, f4, rdn # perform operation
fmadd.s f22, f17, f30, f4, rmm # perform operation
fmadd.s f22, f17, f30, f4, rne # perform operation
fmadd.s f22, f17, f30, f4, rtz # perform operation
fmadd.s f22, f17, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x30, 0x6047b2d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0xd6f8a4c4 # load x3 with value 0xd6f8a4c4
sw x3, 0(x2) # store 0xd6f8a4c4 in memory
flw f24, 0(x2) # load 0xd6f8a4c4 from memory into f24
fmadd.s f30, f12, f21, f24, dyn # perform operation
fmadd.s f30, f12, f21, f24, rdn # perform operation
fmadd.s f30, f12, f21, f24, rmm # perform operation
fmadd.s f30, f12, f21, f24, rne # perform operation
fmadd.s f30, f12, f21, f24, rtz # perform operation
fmadd.s f30, f12, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f21, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x29, 0xffe10f55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x31dbfbdb # load x3 with value 0x31dbfbdb
sw x3, 0(x2) # store 0x31dbfbdb in memory
flw f11, 0(x2) # load 0x31dbfbdb from memory into f11
fmadd.s f29, f28, f18, f11, dyn # perform operation
fmadd.s f29, f28, f18, f11, rdn # perform operation
fmadd.s f29, f28, f18, f11, rmm # perform operation
fmadd.s f29, f28, f18, f11, rne # perform operation
fmadd.s f29, f28, f18, f11, rtz # perform operation
fmadd.s f29, f28, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f28, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f28, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x27, 0xd3be19e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x4d77dc51 # load x3 with value 0x4d77dc51
sw x3, 0(x2) # store 0x4d77dc51 in memory
flw f9, 0(x2) # load 0x4d77dc51 from memory into f9
fmadd.s f27, f17, f16, f9, dyn # perform operation
fmadd.s f27, f17, f16, f9, rdn # perform operation
fmadd.s f27, f17, f16, f9, rmm # perform operation
fmadd.s f27, f17, f16, f9, rne # perform operation
fmadd.s f27, f17, f16, f9, rtz # perform operation
fmadd.s f27, f17, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x3, 0xcc8b35ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xd10ebe54 # load x3 with value 0xd10ebe54
sw x3, 0(x2) # store 0xd10ebe54 in memory
flw f20, 0(x2) # load 0xd10ebe54 from memory into f20
fmadd.s f3, f23, f28, f20, dyn # perform operation
fmadd.s f3, f23, f28, f20, rdn # perform operation
fmadd.s f3, f23, f28, f20, rmm # perform operation
fmadd.s f3, f23, f28, f20, rne # perform operation
fmadd.s f3, f23, f28, f20, rtz # perform operation
fmadd.s f3, f23, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f28, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x1, 0x89a228bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xeb22f5cf # load x3 with value 0xeb22f5cf
sw x3, 0(x2) # store 0xeb22f5cf in memory
flw f11, 0(x2) # load 0xeb22f5cf from memory into f11
fmadd.s f1, f20, f3, f11, dyn # perform operation
fmadd.s f1, f20, f3, f11, rdn # perform operation
fmadd.s f1, f20, f3, f11, rmm # perform operation
fmadd.s f1, f20, f3, f11, rne # perform operation
fmadd.s f1, f20, f3, f11, rtz # perform operation
fmadd.s f1, f20, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x10, 0x441e53eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xfeac1e34 # load x3 with value 0xfeac1e34
sw x3, 0(x2) # store 0xfeac1e34 in memory
flw f18, 0(x2) # load 0xfeac1e34 from memory into f18
fmadd.s f10, f20, f5, f18, dyn # perform operation
fmadd.s f10, f20, f5, f18, rdn # perform operation
fmadd.s f10, f20, f5, f18, rmm # perform operation
fmadd.s f10, f20, f5, f18, rne # perform operation
fmadd.s f10, f20, f5, f18, rtz # perform operation
fmadd.s f10, f20, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f5, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x2, 0x24aec07d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0xc1205ea9 # load x3 with value 0xc1205ea9
sw x3, 0(x2) # store 0xc1205ea9 in memory
flw f3, 0(x2) # load 0xc1205ea9 from memory into f3
fmadd.s f2, f14, f30, f3, dyn # perform operation
fmadd.s f2, f14, f30, f3, rdn # perform operation
fmadd.s f2, f14, f30, f3, rmm # perform operation
fmadd.s f2, f14, f30, f3, rne # perform operation
fmadd.s f2, f14, f30, f3, rtz # perform operation
fmadd.s f2, f14, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f30, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x22, 0xb6088c62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x2b268ab8 # load x3 with value 0x2b268ab8
sw x3, 0(x2) # store 0x2b268ab8 in memory
flw f28, 0(x2) # load 0x2b268ab8 from memory into f28
fmadd.s f22, f29, f23, f28, dyn # perform operation
fmadd.s f22, f29, f23, f28, rdn # perform operation
fmadd.s f22, f29, f23, f28, rmm # perform operation
fmadd.s f22, f29, f23, f28, rne # perform operation
fmadd.s f22, f29, f23, f28, rtz # perform operation
fmadd.s f22, f29, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f23, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x18, 0x0873f617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x13019b27 # load x3 with value 0x13019b27
sw x3, 0(x2) # store 0x13019b27 in memory
flw f15, 0(x2) # load 0x13019b27 from memory into f15
fmadd.s f18, f25, f24, f15, dyn # perform operation
fmadd.s f18, f25, f24, f15, rdn # perform operation
fmadd.s f18, f25, f24, f15, rmm # perform operation
fmadd.s f18, f25, f24, f15, rne # perform operation
fmadd.s f18, f25, f24, f15, rtz # perform operation
fmadd.s f18, f25, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x26, 0x40db8ed2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xfab228c8 # load x3 with value 0xfab228c8
sw x3, 0(x2) # store 0xfab228c8 in memory
flw f30, 0(x2) # load 0xfab228c8 from memory into f30
fmadd.s f26, f28, f29, f30, dyn # perform operation
fmadd.s f26, f28, f29, f30, rdn # perform operation
fmadd.s f26, f28, f29, f30, rmm # perform operation
fmadd.s f26, f28, f29, f30, rne # perform operation
fmadd.s f26, f28, f29, f30, rtz # perform operation
fmadd.s f26, f28, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x6, 0x6a212a7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0xa76d0869 # load x3 with value 0xa76d0869
sw x3, 0(x2) # store 0xa76d0869 in memory
flw f12, 0(x2) # load 0xa76d0869 from memory into f12
fmadd.s f6, f4, f27, f12, dyn # perform operation
fmadd.s f6, f4, f27, f12, rdn # perform operation
fmadd.s f6, f4, f27, f12, rmm # perform operation
fmadd.s f6, f4, f27, f12, rne # perform operation
fmadd.s f6, f4, f27, f12, rtz # perform operation
fmadd.s f6, f4, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f4, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f4, f27, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x27, 0x82503f30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x9cd2bef0 # load x3 with value 0x9cd2bef0
sw x3, 0(x2) # store 0x9cd2bef0 in memory
flw f9, 0(x2) # load 0x9cd2bef0 from memory into f9
fmadd.s f27, f18, f21, f9, dyn # perform operation
fmadd.s f27, f18, f21, f9, rdn # perform operation
fmadd.s f27, f18, f21, f9, rmm # perform operation
fmadd.s f27, f18, f21, f9, rne # perform operation
fmadd.s f27, f18, f21, f9, rtz # perform operation
fmadd.s f27, f18, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x9, 0x31858c5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0xa35b5b4f # load x3 with value 0xa35b5b4f
sw x3, 0(x2) # store 0xa35b5b4f in memory
flw f18, 0(x2) # load 0xa35b5b4f from memory into f18
fmadd.s f9, f25, f11, f18, dyn # perform operation
fmadd.s f9, f25, f11, f18, rdn # perform operation
fmadd.s f9, f25, f11, f18, rmm # perform operation
fmadd.s f9, f25, f11, f18, rne # perform operation
fmadd.s f9, f25, f11, f18, rtz # perform operation
fmadd.s f9, f25, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f25, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f25, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x4, 0x3ff3b6e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xaee9d227 # load x3 with value 0xaee9d227
sw x3, 0(x2) # store 0xaee9d227 in memory
flw f27, 0(x2) # load 0xaee9d227 from memory into f27
fmadd.s f4, f25, f11, f27, dyn # perform operation
fmadd.s f4, f25, f11, f27, rdn # perform operation
fmadd.s f4, f25, f11, f27, rmm # perform operation
fmadd.s f4, f25, f11, f27, rne # perform operation
fmadd.s f4, f25, f11, f27, rtz # perform operation
fmadd.s f4, f25, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f25, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f25, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x25, 0x0a80a028 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xfcb1a104 # load x3 with value 0xfcb1a104
sw x3, 0(x2) # store 0xfcb1a104 in memory
flw f24, 0(x2) # load 0xfcb1a104 from memory into f24
fmadd.s f25, f5, f13, f24, dyn # perform operation
fmadd.s f25, f5, f13, f24, rdn # perform operation
fmadd.s f25, f5, f13, f24, rmm # perform operation
fmadd.s f25, f5, f13, f24, rne # perform operation
fmadd.s f25, f5, f13, f24, rtz # perform operation
fmadd.s f25, f5, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f13, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x22, 0x2c8f5bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x3a50ad8c # load x3 with value 0x3a50ad8c
sw x3, 0(x2) # store 0x3a50ad8c in memory
flw f18, 0(x2) # load 0x3a50ad8c from memory into f18
fmadd.s f22, f1, f28, f18, dyn # perform operation
fmadd.s f22, f1, f28, f18, rdn # perform operation
fmadd.s f22, f1, f28, f18, rmm # perform operation
fmadd.s f22, f1, f28, f18, rne # perform operation
fmadd.s f22, f1, f28, f18, rtz # perform operation
fmadd.s f22, f1, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f28, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x5, 0xfbe5d31c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xf459bb3b # load x3 with value 0xf459bb3b
sw x3, 0(x2) # store 0xf459bb3b in memory
flw f9, 0(x2) # load 0xf459bb3b from memory into f9
fmadd.s f5, f30, f2, f9, dyn # perform operation
fmadd.s f5, f30, f2, f9, rdn # perform operation
fmadd.s f5, f30, f2, f9, rmm # perform operation
fmadd.s f5, f30, f2, f9, rne # perform operation
fmadd.s f5, f30, f2, f9, rtz # perform operation
fmadd.s f5, f30, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f2, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x27, 0x9c301990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x0b2783cf # load x3 with value 0x0b2783cf
sw x3, 0(x2) # store 0x0b2783cf in memory
flw f4, 0(x2) # load 0x0b2783cf from memory into f4
fmadd.s f27, f7, f16, f4, dyn # perform operation
fmadd.s f27, f7, f16, f4, rdn # perform operation
fmadd.s f27, f7, f16, f4, rmm # perform operation
fmadd.s f27, f7, f16, f4, rne # perform operation
fmadd.s f27, f7, f16, f4, rtz # perform operation
fmadd.s f27, f7, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x22, 0xdddb9b1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xe2c5645a # load x3 with value 0xe2c5645a
sw x3, 0(x2) # store 0xe2c5645a in memory
flw f24, 0(x2) # load 0xe2c5645a from memory into f24
fmadd.s f22, f10, f5, f24, dyn # perform operation
fmadd.s f22, f10, f5, f24, rdn # perform operation
fmadd.s f22, f10, f5, f24, rmm # perform operation
fmadd.s f22, f10, f5, f24, rne # perform operation
fmadd.s f22, f10, f5, f24, rtz # perform operation
fmadd.s f22, f10, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f5, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x25, 0xc72db74d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x5f33d40c # load x3 with value 0x5f33d40c
sw x3, 0(x2) # store 0x5f33d40c in memory
flw f27, 0(x2) # load 0x5f33d40c from memory into f27
fmadd.s f25, f21, f31, f27, dyn # perform operation
fmadd.s f25, f21, f31, f27, rdn # perform operation
fmadd.s f25, f21, f31, f27, rmm # perform operation
fmadd.s f25, f21, f31, f27, rne # perform operation
fmadd.s f25, f21, f31, f27, rtz # perform operation
fmadd.s f25, f21, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x19, 0x01450087 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xb414766d # load x3 with value 0xb414766d
sw x3, 0(x2) # store 0xb414766d in memory
flw f8, 0(x2) # load 0xb414766d from memory into f8
fmadd.s f19, f20, f15, f8, dyn # perform operation
fmadd.s f19, f20, f15, f8, rdn # perform operation
fmadd.s f19, f20, f15, f8, rmm # perform operation
fmadd.s f19, f20, f15, f8, rne # perform operation
fmadd.s f19, f20, f15, f8, rtz # perform operation
fmadd.s f19, f20, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x25, 0x96acb8ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x53050347 # load x3 with value 0x53050347
sw x3, 0(x2) # store 0x53050347 in memory
flw f9, 0(x2) # load 0x53050347 from memory into f9
fmadd.s f25, f6, f26, f9, dyn # perform operation
fmadd.s f25, f6, f26, f9, rdn # perform operation
fmadd.s f25, f6, f26, f9, rmm # perform operation
fmadd.s f25, f6, f26, f9, rne # perform operation
fmadd.s f25, f6, f26, f9, rtz # perform operation
fmadd.s f25, f6, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x26, 0x95f8bf59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xe044f038 # load x3 with value 0xe044f038
sw x3, 0(x2) # store 0xe044f038 in memory
flw f16, 0(x2) # load 0xe044f038 from memory into f16
fmadd.s f26, f11, f19, f16, dyn # perform operation
fmadd.s f26, f11, f19, f16, rdn # perform operation
fmadd.s f26, f11, f19, f16, rmm # perform operation
fmadd.s f26, f11, f19, f16, rne # perform operation
fmadd.s f26, f11, f19, f16, rtz # perform operation
fmadd.s f26, f11, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f19, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x7, 0x85fd1c21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xe863a84c # load x3 with value 0xe863a84c
sw x3, 0(x2) # store 0xe863a84c in memory
flw f9, 0(x2) # load 0xe863a84c from memory into f9
fmadd.s f7, f25, f15, f9, dyn # perform operation
fmadd.s f7, f25, f15, f9, rdn # perform operation
fmadd.s f7, f25, f15, f9, rmm # perform operation
fmadd.s f7, f25, f15, f9, rne # perform operation
fmadd.s f7, f25, f15, f9, rtz # perform operation
fmadd.s f7, f25, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x24, 0xa67b499d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0xc36f8715 # load x3 with value 0xc36f8715
sw x3, 0(x2) # store 0xc36f8715 in memory
flw f1, 0(x2) # load 0xc36f8715 from memory into f1
fmadd.s f24, f2, f10, f1, dyn # perform operation
fmadd.s f24, f2, f10, f1, rdn # perform operation
fmadd.s f24, f2, f10, f1, rmm # perform operation
fmadd.s f24, f2, f10, f1, rne # perform operation
fmadd.s f24, f2, f10, f1, rtz # perform operation
fmadd.s f24, f2, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f10, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x6, 0x820e955b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xac80cb4c # load x3 with value 0xac80cb4c
sw x3, 0(x2) # store 0xac80cb4c in memory
flw f18, 0(x2) # load 0xac80cb4c from memory into f18
fmadd.s f6, f9, f13, f18, dyn # perform operation
fmadd.s f6, f9, f13, f18, rdn # perform operation
fmadd.s f6, f9, f13, f18, rmm # perform operation
fmadd.s f6, f9, f13, f18, rne # perform operation
fmadd.s f6, f9, f13, f18, rtz # perform operation
fmadd.s f6, f9, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x25, 0x0a3020f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0xd26006cf # load x3 with value 0xd26006cf
sw x3, 0(x2) # store 0xd26006cf in memory
flw f9, 0(x2) # load 0xd26006cf from memory into f9
fmadd.s f25, f5, f20, f9, dyn # perform operation
fmadd.s f25, f5, f20, f9, rdn # perform operation
fmadd.s f25, f5, f20, f9, rmm # perform operation
fmadd.s f25, f5, f20, f9, rne # perform operation
fmadd.s f25, f5, f20, f9, rtz # perform operation
fmadd.s f25, f5, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f20, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x16, 0x3f034da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x200dc0e9 # load x3 with value 0x200dc0e9
sw x3, 0(x2) # store 0x200dc0e9 in memory
flw f26, 0(x2) # load 0x200dc0e9 from memory into f26
fmadd.s f16, f8, f19, f26, dyn # perform operation
fmadd.s f16, f8, f19, f26, rdn # perform operation
fmadd.s f16, f8, f19, f26, rmm # perform operation
fmadd.s f16, f8, f19, f26, rne # perform operation
fmadd.s f16, f8, f19, f26, rtz # perform operation
fmadd.s f16, f8, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f8, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f8, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x12, 0xcee7c0ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x1ccac16d # load x3 with value 0x1ccac16d
sw x3, 0(x2) # store 0x1ccac16d in memory
flw f24, 0(x2) # load 0x1ccac16d from memory into f24
fmadd.s f12, f6, f30, f24, dyn # perform operation
fmadd.s f12, f6, f30, f24, rdn # perform operation
fmadd.s f12, f6, f30, f24, rmm # perform operation
fmadd.s f12, f6, f30, f24, rne # perform operation
fmadd.s f12, f6, f30, f24, rtz # perform operation
fmadd.s f12, f6, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x24, 0xcbbd5ba2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x23231b99 # load x3 with value 0x23231b99
sw x3, 0(x2) # store 0x23231b99 in memory
flw f8, 0(x2) # load 0x23231b99 from memory into f8
fmadd.s f24, f16, f3, f8, dyn # perform operation
fmadd.s f24, f16, f3, f8, rdn # perform operation
fmadd.s f24, f16, f3, f8, rmm # perform operation
fmadd.s f24, f16, f3, f8, rne # perform operation
fmadd.s f24, f16, f3, f8, rtz # perform operation
fmadd.s f24, f16, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f16, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f16, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x17, 0xf6082630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x8c4d8030 # load x3 with value 0x8c4d8030
sw x3, 0(x2) # store 0x8c4d8030 in memory
flw f5, 0(x2) # load 0x8c4d8030 from memory into f5
fmadd.s f17, f29, f23, f5, dyn # perform operation
fmadd.s f17, f29, f23, f5, rdn # perform operation
fmadd.s f17, f29, f23, f5, rmm # perform operation
fmadd.s f17, f29, f23, f5, rne # perform operation
fmadd.s f17, f29, f23, f5, rtz # perform operation
fmadd.s f17, f29, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f23, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x22, 0xa39e65c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x4347ed40 # load x3 with value 0x4347ed40
sw x3, 0(x2) # store 0x4347ed40 in memory
flw f8, 0(x2) # load 0x4347ed40 from memory into f8
fmadd.s f22, f31, f18, f8, dyn # perform operation
fmadd.s f22, f31, f18, f8, rdn # perform operation
fmadd.s f22, f31, f18, f8, rmm # perform operation
fmadd.s f22, f31, f18, f8, rne # perform operation
fmadd.s f22, f31, f18, f8, rtz # perform operation
fmadd.s f22, f31, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f31, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f31, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x26, 0xae5cb15f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xa6c12ef3 # load x3 with value 0xa6c12ef3
sw x3, 0(x2) # store 0xa6c12ef3 in memory
flw f28, 0(x2) # load 0xa6c12ef3 from memory into f28
fmadd.s f26, f9, f7, f28, dyn # perform operation
fmadd.s f26, f9, f7, f28, rdn # perform operation
fmadd.s f26, f9, f7, f28, rmm # perform operation
fmadd.s f26, f9, f7, f28, rne # perform operation
fmadd.s f26, f9, f7, f28, rtz # perform operation
fmadd.s f26, f9, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f9, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f9, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f9, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f9, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f9, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x10, 0x1d23bb71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xa961e7d6 # load x3 with value 0xa961e7d6
sw x3, 0(x2) # store 0xa961e7d6 in memory
flw f26, 0(x2) # load 0xa961e7d6 from memory into f26
fmadd.s f10, f31, f23, f26, dyn # perform operation
fmadd.s f10, f31, f23, f26, rdn # perform operation
fmadd.s f10, f31, f23, f26, rmm # perform operation
fmadd.s f10, f31, f23, f26, rne # perform operation
fmadd.s f10, f31, f23, f26, rtz # perform operation
fmadd.s f10, f31, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f31, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f31, f23, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x15, 0xd0a83c74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xe2c7cc56 # load x3 with value 0xe2c7cc56
sw x3, 0(x2) # store 0xe2c7cc56 in memory
flw f13, 0(x2) # load 0xe2c7cc56 from memory into f13
fmadd.s f15, f17, f30, f13, dyn # perform operation
fmadd.s f15, f17, f30, f13, rdn # perform operation
fmadd.s f15, f17, f30, f13, rmm # perform operation
fmadd.s f15, f17, f30, f13, rne # perform operation
fmadd.s f15, f17, f30, f13, rtz # perform operation
fmadd.s f15, f17, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x27, 0x824921f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x961bec1d # load x3 with value 0x961bec1d
sw x3, 0(x2) # store 0x961bec1d in memory
flw f5, 0(x2) # load 0x961bec1d from memory into f5
fmadd.s f27, f28, f7, f5, dyn # perform operation
fmadd.s f27, f28, f7, f5, rdn # perform operation
fmadd.s f27, f28, f7, f5, rmm # perform operation
fmadd.s f27, f28, f7, f5, rne # perform operation
fmadd.s f27, f28, f7, f5, rtz # perform operation
fmadd.s f27, f28, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f7, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x13, 0xc40dc2e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x50b60923 # load x3 with value 0x50b60923
sw x3, 0(x2) # store 0x50b60923 in memory
flw f9, 0(x2) # load 0x50b60923 from memory into f9
fmadd.s f13, f4, f1, f9, dyn # perform operation
fmadd.s f13, f4, f1, f9, rdn # perform operation
fmadd.s f13, f4, f1, f9, rmm # perform operation
fmadd.s f13, f4, f1, f9, rne # perform operation
fmadd.s f13, f4, f1, f9, rtz # perform operation
fmadd.s f13, f4, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f4, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f4, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f4, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f4, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f4, f1, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x11, 0xfe32e275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x749123b8 # load x3 with value 0x749123b8
sw x3, 0(x2) # store 0x749123b8 in memory
flw f1, 0(x2) # load 0x749123b8 from memory into f1
fmadd.s f11, f26, f12, f1, dyn # perform operation
fmadd.s f11, f26, f12, f1, rdn # perform operation
fmadd.s f11, f26, f12, f1, rmm # perform operation
fmadd.s f11, f26, f12, f1, rne # perform operation
fmadd.s f11, f26, f12, f1, rtz # perform operation
fmadd.s f11, f26, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f26, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f26, f12, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x6, 0x678b238e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xf5aab67e # load x3 with value 0xf5aab67e
sw x3, 0(x2) # store 0xf5aab67e in memory
flw f23, 0(x2) # load 0xf5aab67e from memory into f23
fmadd.s f6, f21, f8, f23, dyn # perform operation
fmadd.s f6, f21, f8, f23, rdn # perform operation
fmadd.s f6, f21, f8, f23, rmm # perform operation
fmadd.s f6, f21, f8, f23, rne # perform operation
fmadd.s f6, f21, f8, f23, rtz # perform operation
fmadd.s f6, f21, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x4, 0x9a6a5517 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x4be7ba5b # load x3 with value 0x4be7ba5b
sw x3, 0(x2) # store 0x4be7ba5b in memory
flw f15, 0(x2) # load 0x4be7ba5b from memory into f15
fmadd.s f4, f30, f12, f15, dyn # perform operation
fmadd.s f4, f30, f12, f15, rdn # perform operation
fmadd.s f4, f30, f12, f15, rmm # perform operation
fmadd.s f4, f30, f12, f15, rne # perform operation
fmadd.s f4, f30, f12, f15, rtz # perform operation
fmadd.s f4, f30, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f30, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f30, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x11, 0xef70693c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x6ec3520a # load x3 with value 0x6ec3520a
sw x3, 0(x2) # store 0x6ec3520a in memory
flw f24, 0(x2) # load 0x6ec3520a from memory into f24
fmadd.s f11, f31, f10, f24, dyn # perform operation
fmadd.s f11, f31, f10, f24, rdn # perform operation
fmadd.s f11, f31, f10, f24, rmm # perform operation
fmadd.s f11, f31, f10, f24, rne # perform operation
fmadd.s f11, f31, f10, f24, rtz # perform operation
fmadd.s f11, f31, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f10, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x31, 0xac7f4594 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x4f64b72c # load x3 with value 0x4f64b72c
sw x3, 0(x2) # store 0x4f64b72c in memory
flw f28, 0(x2) # load 0x4f64b72c from memory into f28
fmadd.s f31, f16, f15, f28, dyn # perform operation
fmadd.s f31, f16, f15, f28, rdn # perform operation
fmadd.s f31, f16, f15, f28, rmm # perform operation
fmadd.s f31, f16, f15, f28, rne # perform operation
fmadd.s f31, f16, f15, f28, rtz # perform operation
fmadd.s f31, f16, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f16, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f16, f15, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x19, 0x7b49bd8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0xa71ff48b # load x3 with value 0xa71ff48b
sw x3, 0(x2) # store 0xa71ff48b in memory
flw f9, 0(x2) # load 0xa71ff48b from memory into f9
fmadd.s f19, f16, f28, f9, dyn # perform operation
fmadd.s f19, f16, f28, f9, rdn # perform operation
fmadd.s f19, f16, f28, f9, rmm # perform operation
fmadd.s f19, f16, f28, f9, rne # perform operation
fmadd.s f19, f16, f28, f9, rtz # perform operation
fmadd.s f19, f16, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x24, 0xa8f5c693 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x4965a1a4 # load x3 with value 0x4965a1a4
sw x3, 0(x2) # store 0x4965a1a4 in memory
flw f28, 0(x2) # load 0x4965a1a4 from memory into f28
fmadd.s f24, f17, f18, f28, dyn # perform operation
fmadd.s f24, f17, f18, f28, rdn # perform operation
fmadd.s f24, f17, f18, f28, rmm # perform operation
fmadd.s f24, f17, f18, f28, rne # perform operation
fmadd.s f24, f17, f18, f28, rtz # perform operation
fmadd.s f24, f17, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x30, 0x5282681f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0xf9ac2906 # load x3 with value 0xf9ac2906
sw x3, 0(x2) # store 0xf9ac2906 in memory
flw f19, 0(x2) # load 0xf9ac2906 from memory into f19
fmadd.s f30, f25, f26, f19, dyn # perform operation
fmadd.s f30, f25, f26, f19, rdn # perform operation
fmadd.s f30, f25, f26, f19, rmm # perform operation
fmadd.s f30, f25, f26, f19, rne # perform operation
fmadd.s f30, f25, f26, f19, rtz # perform operation
fmadd.s f30, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f26, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x1, 0xb9c2daba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0x02ba5cd5 # load x3 with value 0x02ba5cd5
sw x3, 0(x2) # store 0x02ba5cd5 in memory
flw f16, 0(x2) # load 0x02ba5cd5 from memory into f16
fmadd.s f1, f31, f30, f16, dyn # perform operation
fmadd.s f1, f31, f30, f16, rdn # perform operation
fmadd.s f1, f31, f30, f16, rmm # perform operation
fmadd.s f1, f31, f30, f16, rne # perform operation
fmadd.s f1, f31, f30, f16, rtz # perform operation
fmadd.s f1, f31, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f30, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x27, 0x6c58ff78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xbd96e508 # load x3 with value 0xbd96e508
sw x3, 0(x2) # store 0xbd96e508 in memory
flw f28, 0(x2) # load 0xbd96e508 from memory into f28
fmadd.s f27, f30, f21, f28, dyn # perform operation
fmadd.s f27, f30, f21, f28, rdn # perform operation
fmadd.s f27, f30, f21, f28, rmm # perform operation
fmadd.s f27, f30, f21, f28, rne # perform operation
fmadd.s f27, f30, f21, f28, rtz # perform operation
fmadd.s f27, f30, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x6, 0xeec9c8a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x99397aa5 # load x3 with value 0x99397aa5
sw x3, 0(x2) # store 0x99397aa5 in memory
flw f4, 0(x2) # load 0x99397aa5 from memory into f4
fmadd.s f6, f3, f21, f4, dyn # perform operation
fmadd.s f6, f3, f21, f4, rdn # perform operation
fmadd.s f6, f3, f21, f4, rmm # perform operation
fmadd.s f6, f3, f21, f4, rne # perform operation
fmadd.s f6, f3, f21, f4, rtz # perform operation
fmadd.s f6, f3, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x15, 0x0a8ad2bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xf598c2d6 # load x3 with value 0xf598c2d6
sw x3, 0(x2) # store 0xf598c2d6 in memory
flw f4, 0(x2) # load 0xf598c2d6 from memory into f4
fmadd.s f15, f17, f27, f4, dyn # perform operation
fmadd.s f15, f17, f27, f4, rdn # perform operation
fmadd.s f15, f17, f27, f4, rmm # perform operation
fmadd.s f15, f17, f27, f4, rne # perform operation
fmadd.s f15, f17, f27, f4, rtz # perform operation
fmadd.s f15, f17, f27, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f27, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f27, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x3, 0x7d843ec6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x25c9e8cc # load x3 with value 0x25c9e8cc
sw x3, 0(x2) # store 0x25c9e8cc in memory
flw f1, 0(x2) # load 0x25c9e8cc from memory into f1
fmadd.s f3, f2, f28, f1, dyn # perform operation
fmadd.s f3, f2, f28, f1, rdn # perform operation
fmadd.s f3, f2, f28, f1, rmm # perform operation
fmadd.s f3, f2, f28, f1, rne # perform operation
fmadd.s f3, f2, f28, f1, rtz # perform operation
fmadd.s f3, f2, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x1, 0xda9d0a36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x41e6805e # load x3 with value 0x41e6805e
sw x3, 0(x2) # store 0x41e6805e in memory
flw f7, 0(x2) # load 0x41e6805e from memory into f7
fmadd.s f1, f17, f24, f7, dyn # perform operation
fmadd.s f1, f17, f24, f7, rdn # perform operation
fmadd.s f1, f17, f24, f7, rmm # perform operation
fmadd.s f1, f17, f24, f7, rne # perform operation
fmadd.s f1, f17, f24, f7, rtz # perform operation
fmadd.s f1, f17, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x3, 0x767a8e0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xd83d4338 # load x3 with value 0xd83d4338
sw x3, 0(x2) # store 0xd83d4338 in memory
flw f18, 0(x2) # load 0xd83d4338 from memory into f18
fmadd.s f3, f23, f15, f18, dyn # perform operation
fmadd.s f3, f23, f15, f18, rdn # perform operation
fmadd.s f3, f23, f15, f18, rmm # perform operation
fmadd.s f3, f23, f15, f18, rne # perform operation
fmadd.s f3, f23, f15, f18, rtz # perform operation
fmadd.s f3, f23, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f15, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x25, 0x60eb0909 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xb1c96eeb # load x3 with value 0xb1c96eeb
sw x3, 0(x2) # store 0xb1c96eeb in memory
flw f8, 0(x2) # load 0xb1c96eeb from memory into f8
fmadd.s f25, f7, f5, f8, dyn # perform operation
fmadd.s f25, f7, f5, f8, rdn # perform operation
fmadd.s f25, f7, f5, f8, rmm # perform operation
fmadd.s f25, f7, f5, f8, rne # perform operation
fmadd.s f25, f7, f5, f8, rtz # perform operation
fmadd.s f25, f7, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f5, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x17, 0xdbfd6c42 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xadf9ede9 # load x3 with value 0xadf9ede9
sw x3, 0(x2) # store 0xadf9ede9 in memory
flw f20, 0(x2) # load 0xadf9ede9 from memory into f20
fmadd.s f17, f23, f1, f20, dyn # perform operation
fmadd.s f17, f23, f1, f20, rdn # perform operation
fmadd.s f17, f23, f1, f20, rmm # perform operation
fmadd.s f17, f23, f1, f20, rne # perform operation
fmadd.s f17, f23, f1, f20, rtz # perform operation
fmadd.s f17, f23, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x18, 0x15758fa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x48fb0ed0 # load x3 with value 0x48fb0ed0
sw x3, 0(x2) # store 0x48fb0ed0 in memory
flw f24, 0(x2) # load 0x48fb0ed0 from memory into f24
fmadd.s f18, f19, f15, f24, dyn # perform operation
fmadd.s f18, f19, f15, f24, rdn # perform operation
fmadd.s f18, f19, f15, f24, rmm # perform operation
fmadd.s f18, f19, f15, f24, rne # perform operation
fmadd.s f18, f19, f15, f24, rtz # perform operation
fmadd.s f18, f19, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x18, 0x413c5abc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x2c02cf76 # load x3 with value 0x2c02cf76
sw x3, 0(x2) # store 0x2c02cf76 in memory
flw f29, 0(x2) # load 0x2c02cf76 from memory into f29
fmadd.s f18, f20, f8, f29, dyn # perform operation
fmadd.s f18, f20, f8, f29, rdn # perform operation
fmadd.s f18, f20, f8, f29, rmm # perform operation
fmadd.s f18, f20, f8, f29, rne # perform operation
fmadd.s f18, f20, f8, f29, rtz # perform operation
fmadd.s f18, f20, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x5, 0xccee68c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xc4d89b92 # load x3 with value 0xc4d89b92
sw x3, 0(x2) # store 0xc4d89b92 in memory
flw f17, 0(x2) # load 0xc4d89b92 from memory into f17
fmadd.s f5, f24, f16, f17, dyn # perform operation
fmadd.s f5, f24, f16, f17, rdn # perform operation
fmadd.s f5, f24, f16, f17, rmm # perform operation
fmadd.s f5, f24, f16, f17, rne # perform operation
fmadd.s f5, f24, f16, f17, rtz # perform operation
fmadd.s f5, f24, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f16, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x23, 0x4b77d109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x2ade1f84 # load x3 with value 0x2ade1f84
sw x3, 0(x2) # store 0x2ade1f84 in memory
flw f24, 0(x2) # load 0x2ade1f84 from memory into f24
fmadd.s f23, f31, f12, f24, dyn # perform operation
fmadd.s f23, f31, f12, f24, rdn # perform operation
fmadd.s f23, f31, f12, f24, rmm # perform operation
fmadd.s f23, f31, f12, f24, rne # perform operation
fmadd.s f23, f31, f12, f24, rtz # perform operation
fmadd.s f23, f31, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f12, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x12, 0xf2bf082e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x49017f0b # load x3 with value 0x49017f0b
sw x3, 0(x2) # store 0x49017f0b in memory
flw f5, 0(x2) # load 0x49017f0b from memory into f5
fmadd.s f12, f23, f10, f5, dyn # perform operation
fmadd.s f12, f23, f10, f5, rdn # perform operation
fmadd.s f12, f23, f10, f5, rmm # perform operation
fmadd.s f12, f23, f10, f5, rne # perform operation
fmadd.s f12, f23, f10, f5, rtz # perform operation
fmadd.s f12, f23, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f10, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x19, 0x3866cbd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x2d5626de # load x3 with value 0x2d5626de
sw x3, 0(x2) # store 0x2d5626de in memory
flw f10, 0(x2) # load 0x2d5626de from memory into f10
fmadd.s f19, f1, f11, f10, dyn # perform operation
fmadd.s f19, f1, f11, f10, rdn # perform operation
fmadd.s f19, f1, f11, f10, rmm # perform operation
fmadd.s f19, f1, f11, f10, rne # perform operation
fmadd.s f19, f1, f11, f10, rtz # perform operation
fmadd.s f19, f1, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x22, 0xd90d7655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x26e9cd5e # load x3 with value 0x26e9cd5e
sw x3, 0(x2) # store 0x26e9cd5e in memory
flw f10, 0(x2) # load 0x26e9cd5e from memory into f10
fmadd.s f22, f25, f7, f10, dyn # perform operation
fmadd.s f22, f25, f7, f10, rdn # perform operation
fmadd.s f22, f25, f7, f10, rmm # perform operation
fmadd.s f22, f25, f7, f10, rne # perform operation
fmadd.s f22, f25, f7, f10, rtz # perform operation
fmadd.s f22, f25, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f25, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f25, f7, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x2, 0x1f2531e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x2a96a1ac # load x3 with value 0x2a96a1ac
sw x3, 0(x2) # store 0x2a96a1ac in memory
flw f7, 0(x2) # load 0x2a96a1ac from memory into f7
fmadd.s f2, f15, f13, f7, dyn # perform operation
fmadd.s f2, f15, f13, f7, rdn # perform operation
fmadd.s f2, f15, f13, f7, rmm # perform operation
fmadd.s f2, f15, f13, f7, rne # perform operation
fmadd.s f2, f15, f13, f7, rtz # perform operation
fmadd.s f2, f15, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x27, 0xefaf7dc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x557b536f # load x3 with value 0x557b536f
sw x3, 0(x2) # store 0x557b536f in memory
flw f4, 0(x2) # load 0x557b536f from memory into f4
fmadd.s f27, f15, f24, f4, dyn # perform operation
fmadd.s f27, f15, f24, f4, rdn # perform operation
fmadd.s f27, f15, f24, f4, rmm # perform operation
fmadd.s f27, f15, f24, f4, rne # perform operation
fmadd.s f27, f15, f24, f4, rtz # perform operation
fmadd.s f27, f15, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f15, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f15, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f15, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f15, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f15, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x3, 0xda2d7b5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x2829ff4a # load x3 with value 0x2829ff4a
sw x3, 0(x2) # store 0x2829ff4a in memory
flw f17, 0(x2) # load 0x2829ff4a from memory into f17
fmadd.s f3, f13, f24, f17, dyn # perform operation
fmadd.s f3, f13, f24, f17, rdn # perform operation
fmadd.s f3, f13, f24, f17, rmm # perform operation
fmadd.s f3, f13, f24, f17, rne # perform operation
fmadd.s f3, f13, f24, f17, rtz # perform operation
fmadd.s f3, f13, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f24, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x8, 0x3a851da4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x1cd1ddf1 # load x3 with value 0x1cd1ddf1
sw x3, 0(x2) # store 0x1cd1ddf1 in memory
flw f31, 0(x2) # load 0x1cd1ddf1 from memory into f31
fmadd.s f8, f10, f27, f31, dyn # perform operation
fmadd.s f8, f10, f27, f31, rdn # perform operation
fmadd.s f8, f10, f27, f31, rmm # perform operation
fmadd.s f8, f10, f27, f31, rne # perform operation
fmadd.s f8, f10, f27, f31, rtz # perform operation
fmadd.s f8, f10, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x20, 0xb8d443bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x48dfb34a # load x3 with value 0x48dfb34a
sw x3, 0(x2) # store 0x48dfb34a in memory
flw f1, 0(x2) # load 0x48dfb34a from memory into f1
fmadd.s f20, f10, f31, f1, dyn # perform operation
fmadd.s f20, f10, f31, f1, rdn # perform operation
fmadd.s f20, f10, f31, f1, rmm # perform operation
fmadd.s f20, f10, f31, f1, rne # perform operation
fmadd.s f20, f10, f31, f1, rtz # perform operation
fmadd.s f20, f10, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x18, 0x091f5622 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xe9f880b1 # load x3 with value 0xe9f880b1
sw x3, 0(x2) # store 0xe9f880b1 in memory
flw f23, 0(x2) # load 0xe9f880b1 from memory into f23
fmadd.s f18, f6, f7, f23, dyn # perform operation
fmadd.s f18, f6, f7, f23, rdn # perform operation
fmadd.s f18, f6, f7, f23, rmm # perform operation
fmadd.s f18, f6, f7, f23, rne # perform operation
fmadd.s f18, f6, f7, f23, rtz # perform operation
fmadd.s f18, f6, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x7, 0xb9eb2f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xb3b79d84 # load x3 with value 0xb3b79d84
sw x3, 0(x2) # store 0xb3b79d84 in memory
flw f5, 0(x2) # load 0xb3b79d84 from memory into f5
fmadd.s f7, f9, f16, f5, dyn # perform operation
fmadd.s f7, f9, f16, f5, rdn # perform operation
fmadd.s f7, f9, f16, f5, rmm # perform operation
fmadd.s f7, f9, f16, f5, rne # perform operation
fmadd.s f7, f9, f16, f5, rtz # perform operation
fmadd.s f7, f9, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f16, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x26, 0x9e0c7d50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0xd5159a08 # load x3 with value 0xd5159a08
sw x3, 0(x2) # store 0xd5159a08 in memory
flw f15, 0(x2) # load 0xd5159a08 from memory into f15
fmadd.s f26, f14, f28, f15, dyn # perform operation
fmadd.s f26, f14, f28, f15, rdn # perform operation
fmadd.s f26, f14, f28, f15, rmm # perform operation
fmadd.s f26, f14, f28, f15, rne # perform operation
fmadd.s f26, f14, f28, f15, rtz # perform operation
fmadd.s f26, f14, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f14, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f14, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x12, 0xa7f20bc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0xa24a050e # load x3 with value 0xa24a050e
sw x3, 0(x2) # store 0xa24a050e in memory
flw f21, 0(x2) # load 0xa24a050e from memory into f21
fmadd.s f12, f22, f2, f21, dyn # perform operation
fmadd.s f12, f22, f2, f21, rdn # perform operation
fmadd.s f12, f22, f2, f21, rmm # perform operation
fmadd.s f12, f22, f2, f21, rne # perform operation
fmadd.s f12, f22, f2, f21, rtz # perform operation
fmadd.s f12, f22, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x15, 0x9a6b29a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xe6e66c4f # load x3 with value 0xe6e66c4f
sw x3, 0(x2) # store 0xe6e66c4f in memory
flw f13, 0(x2) # load 0xe6e66c4f from memory into f13
fmadd.s f15, f6, f9, f13, dyn # perform operation
fmadd.s f15, f6, f9, f13, rdn # perform operation
fmadd.s f15, f6, f9, f13, rmm # perform operation
fmadd.s f15, f6, f9, f13, rne # perform operation
fmadd.s f15, f6, f9, f13, rtz # perform operation
fmadd.s f15, f6, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x14, 0x49c3545f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xb16e1e8e # load x3 with value 0xb16e1e8e
sw x3, 0(x2) # store 0xb16e1e8e in memory
flw f29, 0(x2) # load 0xb16e1e8e from memory into f29
fmadd.s f14, f13, f16, f29, dyn # perform operation
fmadd.s f14, f13, f16, f29, rdn # perform operation
fmadd.s f14, f13, f16, f29, rmm # perform operation
fmadd.s f14, f13, f16, f29, rne # perform operation
fmadd.s f14, f13, f16, f29, rtz # perform operation
fmadd.s f14, f13, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x9, 0x0c85d1be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0xabba0c42 # load x3 with value 0xabba0c42
sw x3, 0(x2) # store 0xabba0c42 in memory
flw f8, 0(x2) # load 0xabba0c42 from memory into f8
fmadd.s f9, f2, f31, f8, dyn # perform operation
fmadd.s f9, f2, f31, f8, rdn # perform operation
fmadd.s f9, f2, f31, f8, rmm # perform operation
fmadd.s f9, f2, f31, f8, rne # perform operation
fmadd.s f9, f2, f31, f8, rtz # perform operation
fmadd.s f9, f2, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x13, 0x34ad5a1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xebeb66e7 # load x3 with value 0xebeb66e7
sw x3, 0(x2) # store 0xebeb66e7 in memory
flw f28, 0(x2) # load 0xebeb66e7 from memory into f28
fmadd.s f13, f2, f22, f28, dyn # perform operation
fmadd.s f13, f2, f22, f28, rdn # perform operation
fmadd.s f13, f2, f22, f28, rmm # perform operation
fmadd.s f13, f2, f22, f28, rne # perform operation
fmadd.s f13, f2, f22, f28, rtz # perform operation
fmadd.s f13, f2, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x28, 0x75df1706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xd6a78cfd # load x3 with value 0xd6a78cfd
sw x3, 0(x2) # store 0xd6a78cfd in memory
flw f27, 0(x2) # load 0xd6a78cfd from memory into f27
fmadd.s f28, f20, f12, f27, dyn # perform operation
fmadd.s f28, f20, f12, f27, rdn # perform operation
fmadd.s f28, f20, f12, f27, rmm # perform operation
fmadd.s f28, f20, f12, f27, rne # perform operation
fmadd.s f28, f20, f12, f27, rtz # perform operation
fmadd.s f28, f20, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f12, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x20, 0x71f50b9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x02aefbf6 # load x3 with value 0x02aefbf6
sw x3, 0(x2) # store 0x02aefbf6 in memory
flw f17, 0(x2) # load 0x02aefbf6 from memory into f17
fmadd.s f20, f9, f3, f17, dyn # perform operation
fmadd.s f20, f9, f3, f17, rdn # perform operation
fmadd.s f20, f9, f3, f17, rmm # perform operation
fmadd.s f20, f9, f3, f17, rne # perform operation
fmadd.s f20, f9, f3, f17, rtz # perform operation
fmadd.s f20, f9, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f3, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x30, 0x4cbc7569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xab2abe79 # load x3 with value 0xab2abe79
sw x3, 0(x2) # store 0xab2abe79 in memory
flw f15, 0(x2) # load 0xab2abe79 from memory into f15
fmadd.s f30, f17, f13, f15, dyn # perform operation
fmadd.s f30, f17, f13, f15, rdn # perform operation
fmadd.s f30, f17, f13, f15, rmm # perform operation
fmadd.s f30, f17, f13, f15, rne # perform operation
fmadd.s f30, f17, f13, f15, rtz # perform operation
fmadd.s f30, f17, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x13, 0x7e3a5836 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x9a1b3c2b # load x3 with value 0x9a1b3c2b
sw x3, 0(x2) # store 0x9a1b3c2b in memory
flw f17, 0(x2) # load 0x9a1b3c2b from memory into f17
fmadd.s f13, f9, f31, f17, dyn # perform operation
fmadd.s f13, f9, f31, f17, rdn # perform operation
fmadd.s f13, f9, f31, f17, rmm # perform operation
fmadd.s f13, f9, f31, f17, rne # perform operation
fmadd.s f13, f9, f31, f17, rtz # perform operation
fmadd.s f13, f9, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f31, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x29, 0x93987085 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x4eaafb10 # load x3 with value 0x4eaafb10
sw x3, 0(x2) # store 0x4eaafb10 in memory
flw f16, 0(x2) # load 0x4eaafb10 from memory into f16
fmadd.s f29, f10, f21, f16, dyn # perform operation
fmadd.s f29, f10, f21, f16, rdn # perform operation
fmadd.s f29, f10, f21, f16, rmm # perform operation
fmadd.s f29, f10, f21, f16, rne # perform operation
fmadd.s f29, f10, f21, f16, rtz # perform operation
fmadd.s f29, f10, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x19, 0xdd057a28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xb4b6b9f6 # load x3 with value 0xb4b6b9f6
sw x3, 0(x2) # store 0xb4b6b9f6 in memory
flw f10, 0(x2) # load 0xb4b6b9f6 from memory into f10
fmadd.s f19, f26, f28, f10, dyn # perform operation
fmadd.s f19, f26, f28, f10, rdn # perform operation
fmadd.s f19, f26, f28, f10, rmm # perform operation
fmadd.s f19, f26, f28, f10, rne # perform operation
fmadd.s f19, f26, f28, f10, rtz # perform operation
fmadd.s f19, f26, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x9, 0x4047a287 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x6fb78b1a # load x3 with value 0x6fb78b1a
sw x3, 0(x2) # store 0x6fb78b1a in memory
flw f5, 0(x2) # load 0x6fb78b1a from memory into f5
fmadd.s f9, f3, f4, f5, dyn # perform operation
fmadd.s f9, f3, f4, f5, rdn # perform operation
fmadd.s f9, f3, f4, f5, rmm # perform operation
fmadd.s f9, f3, f4, f5, rne # perform operation
fmadd.s f9, f3, f4, f5, rtz # perform operation
fmadd.s f9, f3, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x20, 0xb17ca344 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x9f9211ae # load x3 with value 0x9f9211ae
sw x3, 0(x2) # store 0x9f9211ae in memory
flw f3, 0(x2) # load 0x9f9211ae from memory into f3
fmadd.s f20, f21, f18, f3, dyn # perform operation
fmadd.s f20, f21, f18, f3, rdn # perform operation
fmadd.s f20, f21, f18, f3, rmm # perform operation
fmadd.s f20, f21, f18, f3, rne # perform operation
fmadd.s f20, f21, f18, f3, rtz # perform operation
fmadd.s f20, f21, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x9, 0x1b5055a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0xd9b2a4c4 # load x3 with value 0xd9b2a4c4
sw x3, 0(x2) # store 0xd9b2a4c4 in memory
flw f29, 0(x2) # load 0xd9b2a4c4 from memory into f29
fmadd.s f9, f3, f26, f29, dyn # perform operation
fmadd.s f9, f3, f26, f29, rdn # perform operation
fmadd.s f9, f3, f26, f29, rmm # perform operation
fmadd.s f9, f3, f26, f29, rne # perform operation
fmadd.s f9, f3, f26, f29, rtz # perform operation
fmadd.s f9, f3, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x27, 0xe40f5be4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x33eae33c # load x3 with value 0x33eae33c
sw x3, 0(x2) # store 0x33eae33c in memory
flw f6, 0(x2) # load 0x33eae33c from memory into f6
fmadd.s f27, f4, f21, f6, dyn # perform operation
fmadd.s f27, f4, f21, f6, rdn # perform operation
fmadd.s f27, f4, f21, f6, rmm # perform operation
fmadd.s f27, f4, f21, f6, rne # perform operation
fmadd.s f27, f4, f21, f6, rtz # perform operation
fmadd.s f27, f4, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f4, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f4, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f4, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f4, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f4, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x4, 0x4e3a19a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x6ab62559 # load x3 with value 0x6ab62559
sw x3, 0(x2) # store 0x6ab62559 in memory
flw f22, 0(x2) # load 0x6ab62559 from memory into f22
fmadd.s f4, f24, f12, f22, dyn # perform operation
fmadd.s f4, f24, f12, f22, rdn # perform operation
fmadd.s f4, f24, f12, f22, rmm # perform operation
fmadd.s f4, f24, f12, f22, rne # perform operation
fmadd.s f4, f24, f12, f22, rtz # perform operation
fmadd.s f4, f24, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f24, f12, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x11, 0x66c77095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x831f8b84 # load x3 with value 0x831f8b84
sw x3, 0(x2) # store 0x831f8b84 in memory
flw f2, 0(x2) # load 0x831f8b84 from memory into f2
fmadd.s f11, f12, f17, f2, dyn # perform operation
fmadd.s f11, f12, f17, f2, rdn # perform operation
fmadd.s f11, f12, f17, f2, rmm # perform operation
fmadd.s f11, f12, f17, f2, rne # perform operation
fmadd.s f11, f12, f17, f2, rtz # perform operation
fmadd.s f11, f12, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f12, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f12, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x31, 0xd3401818 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x8c1ebc6a # load x3 with value 0x8c1ebc6a
sw x3, 0(x2) # store 0x8c1ebc6a in memory
flw f18, 0(x2) # load 0x8c1ebc6a from memory into f18
fmadd.s f31, f27, f8, f18, dyn # perform operation
fmadd.s f31, f27, f8, f18, rdn # perform operation
fmadd.s f31, f27, f8, f18, rmm # perform operation
fmadd.s f31, f27, f8, f18, rne # perform operation
fmadd.s f31, f27, f8, f18, rtz # perform operation
fmadd.s f31, f27, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f27, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f27, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x24, 0x6cba7442 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x8fad4f23 # load x3 with value 0x8fad4f23
sw x3, 0(x2) # store 0x8fad4f23 in memory
flw f11, 0(x2) # load 0x8fad4f23 from memory into f11
fmadd.s f24, f26, f19, f11, dyn # perform operation
fmadd.s f24, f26, f19, f11, rdn # perform operation
fmadd.s f24, f26, f19, f11, rmm # perform operation
fmadd.s f24, f26, f19, f11, rne # perform operation
fmadd.s f24, f26, f19, f11, rtz # perform operation
fmadd.s f24, f26, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x22, 0xfe835433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0xbcaa190c # load x3 with value 0xbcaa190c
sw x3, 0(x2) # store 0xbcaa190c in memory
flw f7, 0(x2) # load 0xbcaa190c from memory into f7
fmadd.s f22, f13, f24, f7, dyn # perform operation
fmadd.s f22, f13, f24, f7, rdn # perform operation
fmadd.s f22, f13, f24, f7, rmm # perform operation
fmadd.s f22, f13, f24, f7, rne # perform operation
fmadd.s f22, f13, f24, f7, rtz # perform operation
fmadd.s f22, f13, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x7, 0xf5481661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xa42f362e # load x3 with value 0xa42f362e
sw x3, 0(x2) # store 0xa42f362e in memory
flw f1, 0(x2) # load 0xa42f362e from memory into f1
fmadd.s f7, f23, f9, f1, dyn # perform operation
fmadd.s f7, f23, f9, f1, rdn # perform operation
fmadd.s f7, f23, f9, f1, rmm # perform operation
fmadd.s f7, f23, f9, f1, rne # perform operation
fmadd.s f7, f23, f9, f1, rtz # perform operation
fmadd.s f7, f23, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x10, 0x70da5c59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x9173f0fe # load x3 with value 0x9173f0fe
sw x3, 0(x2) # store 0x9173f0fe in memory
flw f21, 0(x2) # load 0x9173f0fe from memory into f21
fmadd.s f10, f8, f11, f21, dyn # perform operation
fmadd.s f10, f8, f11, f21, rdn # perform operation
fmadd.s f10, f8, f11, f21, rmm # perform operation
fmadd.s f10, f8, f11, f21, rne # perform operation
fmadd.s f10, f8, f11, f21, rtz # perform operation
fmadd.s f10, f8, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f8, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f8, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f8, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f8, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f8, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x10, 0x7f0f90b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x083f29e8 # load x3 with value 0x083f29e8
sw x3, 0(x2) # store 0x083f29e8 in memory
flw f30, 0(x2) # load 0x083f29e8 from memory into f30
fmadd.s f10, f7, f2, f30, dyn # perform operation
fmadd.s f10, f7, f2, f30, rdn # perform operation
fmadd.s f10, f7, f2, f30, rmm # perform operation
fmadd.s f10, f7, f2, f30, rne # perform operation
fmadd.s f10, f7, f2, f30, rtz # perform operation
fmadd.s f10, f7, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f2, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x19, 0x22008ec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
li x3, 0xafe0c812 # load x3 with value 0xafe0c812
sw x3, 0(x2) # store 0xafe0c812 in memory
flw f9, 0(x2) # load 0xafe0c812 from memory into f9
fmadd.s f19, f3, f23, f9, dyn # perform operation
fmadd.s f19, f3, f23, f9, rdn # perform operation
fmadd.s f19, f3, f23, f9, rmm # perform operation
fmadd.s f19, f3, f23, f9, rne # perform operation
fmadd.s f19, f3, f23, f9, rtz # perform operation
fmadd.s f19, f3, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x9, 0xbce8601f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x9d48b76b # load x3 with value 0x9d48b76b
sw x3, 0(x2) # store 0x9d48b76b in memory
flw f26, 0(x2) # load 0x9d48b76b from memory into f26
fmadd.s f9, f11, f19, f26, dyn # perform operation
fmadd.s f9, f11, f19, f26, rdn # perform operation
fmadd.s f9, f11, f19, f26, rmm # perform operation
fmadd.s f9, f11, f19, f26, rne # perform operation
fmadd.s f9, f11, f19, f26, rtz # perform operation
fmadd.s f9, f11, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f19, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x6, 0xef55c5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x2cc82278 # load x3 with value 0x2cc82278
sw x3, 0(x2) # store 0x2cc82278 in memory
flw f7, 0(x2) # load 0x2cc82278 from memory into f7
fmadd.s f6, f5, f17, f7, dyn # perform operation
fmadd.s f6, f5, f17, f7, rdn # perform operation
fmadd.s f6, f5, f17, f7, rmm # perform operation
fmadd.s f6, f5, f17, f7, rne # perform operation
fmadd.s f6, f5, f17, f7, rtz # perform operation
fmadd.s f6, f5, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f17, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x7, 0x9ea64698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xf28eb8e6 # load x3 with value 0xf28eb8e6
sw x3, 0(x2) # store 0xf28eb8e6 in memory
flw f4, 0(x2) # load 0xf28eb8e6 from memory into f4
fmadd.s f7, f17, f1, f4, dyn # perform operation
fmadd.s f7, f17, f1, f4, rdn # perform operation
fmadd.s f7, f17, f1, f4, rmm # perform operation
fmadd.s f7, f17, f1, f4, rne # perform operation
fmadd.s f7, f17, f1, f4, rtz # perform operation
fmadd.s f7, f17, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x15, 0xaea5a84a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x005304bd # load x3 with value 0x005304bd
sw x3, 0(x2) # store 0x005304bd in memory
flw f4, 0(x2) # load 0x005304bd from memory into f4
fmadd.s f15, f5, f16, f4, dyn # perform operation
fmadd.s f15, f5, f16, f4, rdn # perform operation
fmadd.s f15, f5, f16, f4, rmm # perform operation
fmadd.s f15, f5, f16, f4, rne # perform operation
fmadd.s f15, f5, f16, f4, rtz # perform operation
fmadd.s f15, f5, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f5, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f5, f16, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x19, 0x85a65a40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x393342ae # load x3 with value 0x393342ae
sw x3, 0(x2) # store 0x393342ae in memory
flw f4, 0(x2) # load 0x393342ae from memory into f4
fmadd.s f19, f24, f1, f4, dyn # perform operation
fmadd.s f19, f24, f1, f4, rdn # perform operation
fmadd.s f19, f24, f1, f4, rmm # perform operation
fmadd.s f19, f24, f1, f4, rne # perform operation
fmadd.s f19, f24, f1, f4, rtz # perform operation
fmadd.s f19, f24, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f1, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x30, 0x93966434 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0xf2219930 # load x3 with value 0xf2219930
sw x3, 0(x2) # store 0xf2219930 in memory
flw f2, 0(x2) # load 0xf2219930 from memory into f2
fmadd.s f30, f24, f15, f2, dyn # perform operation
fmadd.s f30, f24, f15, f2, rdn # perform operation
fmadd.s f30, f24, f15, f2, rmm # perform operation
fmadd.s f30, f24, f15, f2, rne # perform operation
fmadd.s f30, f24, f15, f2, rtz # perform operation
fmadd.s f30, f24, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f24, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f24, f15, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x14, 0xccda528b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x91cb6e7f # load x3 with value 0x91cb6e7f
sw x3, 0(x2) # store 0x91cb6e7f in memory
flw f13, 0(x2) # load 0x91cb6e7f from memory into f13
fmadd.s f14, f12, f15, f13, dyn # perform operation
fmadd.s f14, f12, f15, f13, rdn # perform operation
fmadd.s f14, f12, f15, f13, rmm # perform operation
fmadd.s f14, f12, f15, f13, rne # perform operation
fmadd.s f14, f12, f15, f13, rtz # perform operation
fmadd.s f14, f12, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x1, 0xe5ccb125 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0xa0b4fd4d # load x3 with value 0xa0b4fd4d
sw x3, 0(x2) # store 0xa0b4fd4d in memory
flw f8, 0(x2) # load 0xa0b4fd4d from memory into f8
fmadd.s f1, f21, f27, f8, dyn # perform operation
fmadd.s f1, f21, f27, f8, rdn # perform operation
fmadd.s f1, f21, f27, f8, rmm # perform operation
fmadd.s f1, f21, f27, f8, rne # perform operation
fmadd.s f1, f21, f27, f8, rtz # perform operation
fmadd.s f1, f21, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x5, 0x18fcecbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xe2d5b45f # load x3 with value 0xe2d5b45f
sw x3, 0(x2) # store 0xe2d5b45f in memory
flw f27, 0(x2) # load 0xe2d5b45f from memory into f27
fmadd.s f5, f9, f16, f27, dyn # perform operation
fmadd.s f5, f9, f16, f27, rdn # perform operation
fmadd.s f5, f9, f16, f27, rmm # perform operation
fmadd.s f5, f9, f16, f27, rne # perform operation
fmadd.s f5, f9, f16, f27, rtz # perform operation
fmadd.s f5, f9, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x16, 0x54f7b1b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x14fa5194 # load x3 with value 0x14fa5194
sw x3, 0(x2) # store 0x14fa5194 in memory
flw f10, 0(x2) # load 0x14fa5194 from memory into f10
fmadd.s f16, f22, f30, f10, dyn # perform operation
fmadd.s f16, f22, f30, f10, rdn # perform operation
fmadd.s f16, f22, f30, f10, rmm # perform operation
fmadd.s f16, f22, f30, f10, rne # perform operation
fmadd.s f16, f22, f30, f10, rtz # perform operation
fmadd.s f16, f22, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x28, 0xe5def110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x282cca38 # load x3 with value 0x282cca38
sw x3, 0(x2) # store 0x282cca38 in memory
flw f30, 0(x2) # load 0x282cca38 from memory into f30
fmadd.s f28, f11, f22, f30, dyn # perform operation
fmadd.s f28, f11, f22, f30, rdn # perform operation
fmadd.s f28, f11, f22, f30, rmm # perform operation
fmadd.s f28, f11, f22, f30, rne # perform operation
fmadd.s f28, f11, f22, f30, rtz # perform operation
fmadd.s f28, f11, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f11, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f11, f22, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x1, 0x58dd84d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xb06a5820 # load x3 with value 0xb06a5820
sw x3, 0(x2) # store 0xb06a5820 in memory
flw f4, 0(x2) # load 0xb06a5820 from memory into f4
fmadd.s f1, f15, f6, f4, dyn # perform operation
fmadd.s f1, f15, f6, f4, rdn # perform operation
fmadd.s f1, f15, f6, f4, rmm # perform operation
fmadd.s f1, f15, f6, f4, rne # perform operation
fmadd.s f1, f15, f6, f4, rtz # perform operation
fmadd.s f1, f15, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f6, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x26, 0xb47ae9ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xb6b72b85 # load x3 with value 0xb6b72b85
sw x3, 0(x2) # store 0xb6b72b85 in memory
flw f20, 0(x2) # load 0xb6b72b85 from memory into f20
fmadd.s f26, f5, f24, f20, dyn # perform operation
fmadd.s f26, f5, f24, f20, rdn # perform operation
fmadd.s f26, f5, f24, f20, rmm # perform operation
fmadd.s f26, f5, f24, f20, rne # perform operation
fmadd.s f26, f5, f24, f20, rtz # perform operation
fmadd.s f26, f5, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f24, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x27, 0xa99e4d5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x59bc9a5d # load x3 with value 0x59bc9a5d
sw x3, 0(x2) # store 0x59bc9a5d in memory
flw f3, 0(x2) # load 0x59bc9a5d from memory into f3
fmadd.s f27, f20, f4, f3, dyn # perform operation
fmadd.s f27, f20, f4, f3, rdn # perform operation
fmadd.s f27, f20, f4, f3, rmm # perform operation
fmadd.s f27, f20, f4, f3, rne # perform operation
fmadd.s f27, f20, f4, f3, rtz # perform operation
fmadd.s f27, f20, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x9, 0x1e541840 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x11dd5ee4 # load x3 with value 0x11dd5ee4
sw x3, 0(x2) # store 0x11dd5ee4 in memory
flw f8, 0(x2) # load 0x11dd5ee4 from memory into f8
fmadd.s f9, f26, f19, f8, dyn # perform operation
fmadd.s f9, f26, f19, f8, rdn # perform operation
fmadd.s f9, f26, f19, f8, rmm # perform operation
fmadd.s f9, f26, f19, f8, rne # perform operation
fmadd.s f9, f26, f19, f8, rtz # perform operation
fmadd.s f9, f26, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x29, 0xfdde7017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x595809be # load x3 with value 0x595809be
sw x3, 0(x2) # store 0x595809be in memory
flw f3, 0(x2) # load 0x595809be from memory into f3
fmadd.s f29, f15, f9, f3, dyn # perform operation
fmadd.s f29, f15, f9, f3, rdn # perform operation
fmadd.s f29, f15, f9, f3, rmm # perform operation
fmadd.s f29, f15, f9, f3, rne # perform operation
fmadd.s f29, f15, f9, f3, rtz # perform operation
fmadd.s f29, f15, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f15, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f15, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f15, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f15, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f15, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x26, 0x423637ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0xad33517a # load x3 with value 0xad33517a
sw x3, 0(x2) # store 0xad33517a in memory
flw f9, 0(x2) # load 0xad33517a from memory into f9
fmadd.s f26, f28, f16, f9, dyn # perform operation
fmadd.s f26, f28, f16, f9, rdn # perform operation
fmadd.s f26, f28, f16, f9, rmm # perform operation
fmadd.s f26, f28, f16, f9, rne # perform operation
fmadd.s f26, f28, f16, f9, rtz # perform operation
fmadd.s f26, f28, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f16, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x18, 0x04775eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x23c5204c # load x3 with value 0x23c5204c
sw x3, 0(x2) # store 0x23c5204c in memory
flw f5, 0(x2) # load 0x23c5204c from memory into f5
fmadd.s f18, f16, f17, f5, dyn # perform operation
fmadd.s f18, f16, f17, f5, rdn # perform operation
fmadd.s f18, f16, f17, f5, rmm # perform operation
fmadd.s f18, f16, f17, f5, rne # perform operation
fmadd.s f18, f16, f17, f5, rtz # perform operation
fmadd.s f18, f16, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f17, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x25, 0xe54e134b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x9d1ac045 # load x3 with value 0x9d1ac045
sw x3, 0(x2) # store 0x9d1ac045 in memory
flw f30, 0(x2) # load 0x9d1ac045 from memory into f30
fmadd.s f25, f31, f5, f30, dyn # perform operation
fmadd.s f25, f31, f5, f30, rdn # perform operation
fmadd.s f25, f31, f5, f30, rmm # perform operation
fmadd.s f25, f31, f5, f30, rne # perform operation
fmadd.s f25, f31, f5, f30, rtz # perform operation
fmadd.s f25, f31, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x14, 0x4cea7b74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x900c0821 # load x3 with value 0x900c0821
sw x3, 0(x2) # store 0x900c0821 in memory
flw f30, 0(x2) # load 0x900c0821 from memory into f30
fmadd.s f14, f7, f1, f30, dyn # perform operation
fmadd.s f14, f7, f1, f30, rdn # perform operation
fmadd.s f14, f7, f1, f30, rmm # perform operation
fmadd.s f14, f7, f1, f30, rne # perform operation
fmadd.s f14, f7, f1, f30, rtz # perform operation
fmadd.s f14, f7, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x18, 0x58f789a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x012ef78b # load x3 with value 0x012ef78b
sw x3, 0(x2) # store 0x012ef78b in memory
flw f29, 0(x2) # load 0x012ef78b from memory into f29
fmadd.s f18, f13, f27, f29, dyn # perform operation
fmadd.s f18, f13, f27, f29, rdn # perform operation
fmadd.s f18, f13, f27, f29, rmm # perform operation
fmadd.s f18, f13, f27, f29, rne # perform operation
fmadd.s f18, f13, f27, f29, rtz # perform operation
fmadd.s f18, f13, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f13, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f13, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x25, 0x5956fd3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xcaa3fece # load x3 with value 0xcaa3fece
sw x3, 0(x2) # store 0xcaa3fece in memory
flw f16, 0(x2) # load 0xcaa3fece from memory into f16
fmadd.s f25, f13, f29, f16, dyn # perform operation
fmadd.s f25, f13, f29, f16, rdn # perform operation
fmadd.s f25, f13, f29, f16, rmm # perform operation
fmadd.s f25, f13, f29, f16, rne # perform operation
fmadd.s f25, f13, f29, f16, rtz # perform operation
fmadd.s f25, f13, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x25, 0xff5dc6b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7c0ea908 # load x3 with value 0x7c0ea908
sw x3, 0(x2) # store 0x7c0ea908 in memory
flw f17, 0(x2) # load 0x7c0ea908 from memory into f17
fmadd.s f25, f22, f23, f17, dyn # perform operation
fmadd.s f25, f22, f23, f17, rdn # perform operation
fmadd.s f25, f22, f23, f17, rmm # perform operation
fmadd.s f25, f22, f23, f17, rne # perform operation
fmadd.s f25, f22, f23, f17, rtz # perform operation
fmadd.s f25, f22, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x24, 0x0d87e8fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x8d2260f2 # load x3 with value 0x8d2260f2
sw x3, 0(x2) # store 0x8d2260f2 in memory
flw f12, 0(x2) # load 0x8d2260f2 from memory into f12
fmadd.s f24, f4, f19, f12, dyn # perform operation
fmadd.s f24, f4, f19, f12, rdn # perform operation
fmadd.s f24, f4, f19, f12, rmm # perform operation
fmadd.s f24, f4, f19, f12, rne # perform operation
fmadd.s f24, f4, f19, f12, rtz # perform operation
fmadd.s f24, f4, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f4, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f4, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x4, 0x131cef90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x0bf96b7d # load x3 with value 0x0bf96b7d
sw x3, 0(x2) # store 0x0bf96b7d in memory
flw f16, 0(x2) # load 0x0bf96b7d from memory into f16
fmadd.s f4, f19, f23, f16, dyn # perform operation
fmadd.s f4, f19, f23, f16, rdn # perform operation
fmadd.s f4, f19, f23, f16, rmm # perform operation
fmadd.s f4, f19, f23, f16, rne # perform operation
fmadd.s f4, f19, f23, f16, rtz # perform operation
fmadd.s f4, f19, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x7, 0x01ae877f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x2640b9ac # load x3 with value 0x2640b9ac
sw x3, 0(x2) # store 0x2640b9ac in memory
flw f19, 0(x2) # load 0x2640b9ac from memory into f19
fmadd.s f7, f13, f25, f19, dyn # perform operation
fmadd.s f7, f13, f25, f19, rdn # perform operation
fmadd.s f7, f13, f25, f19, rmm # perform operation
fmadd.s f7, f13, f25, f19, rne # perform operation
fmadd.s f7, f13, f25, f19, rtz # perform operation
fmadd.s f7, f13, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x16, 0x85350091 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x4ec6070f # load x3 with value 0x4ec6070f
sw x3, 0(x2) # store 0x4ec6070f in memory
flw f11, 0(x2) # load 0x4ec6070f from memory into f11
fmadd.s f16, f8, f31, f11, dyn # perform operation
fmadd.s f16, f8, f31, f11, rdn # perform operation
fmadd.s f16, f8, f31, f11, rmm # perform operation
fmadd.s f16, f8, f31, f11, rne # perform operation
fmadd.s f16, f8, f31, f11, rtz # perform operation
fmadd.s f16, f8, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f8, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f8, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x15, 0x35b919e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x96a19c05 # load x3 with value 0x96a19c05
sw x3, 0(x2) # store 0x96a19c05 in memory
flw f3, 0(x2) # load 0x96a19c05 from memory into f3
fmadd.s f15, f6, f13, f3, dyn # perform operation
fmadd.s f15, f6, f13, f3, rdn # perform operation
fmadd.s f15, f6, f13, f3, rmm # perform operation
fmadd.s f15, f6, f13, f3, rne # perform operation
fmadd.s f15, f6, f13, f3, rtz # perform operation
fmadd.s f15, f6, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x8, 0xb5e7776c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x0d80ba1e # load x3 with value 0x0d80ba1e
sw x3, 0(x2) # store 0x0d80ba1e in memory
flw f4, 0(x2) # load 0x0d80ba1e from memory into f4
fmadd.s f8, f7, f30, f4, dyn # perform operation
fmadd.s f8, f7, f30, f4, rdn # perform operation
fmadd.s f8, f7, f30, f4, rmm # perform operation
fmadd.s f8, f7, f30, f4, rne # perform operation
fmadd.s f8, f7, f30, f4, rtz # perform operation
fmadd.s f8, f7, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x28, 0x0c7ab2d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x0a675ced # load x3 with value 0x0a675ced
sw x3, 0(x2) # store 0x0a675ced in memory
flw f8, 0(x2) # load 0x0a675ced from memory into f8
fmadd.s f28, f25, f20, f8, dyn # perform operation
fmadd.s f28, f25, f20, f8, rdn # perform operation
fmadd.s f28, f25, f20, f8, rmm # perform operation
fmadd.s f28, f25, f20, f8, rne # perform operation
fmadd.s f28, f25, f20, f8, rtz # perform operation
fmadd.s f28, f25, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f20, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x6, 0xb5802404 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xa4974f5e # load x3 with value 0xa4974f5e
sw x3, 0(x2) # store 0xa4974f5e in memory
flw f16, 0(x2) # load 0xa4974f5e from memory into f16
fmadd.s f6, f13, f21, f16, dyn # perform operation
fmadd.s f6, f13, f21, f16, rdn # perform operation
fmadd.s f6, f13, f21, f16, rmm # perform operation
fmadd.s f6, f13, f21, f16, rne # perform operation
fmadd.s f6, f13, f21, f16, rtz # perform operation
fmadd.s f6, f13, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f21, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x30, 0x01290dcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xb1ec1899 # load x3 with value 0xb1ec1899
sw x3, 0(x2) # store 0xb1ec1899 in memory
flw f28, 0(x2) # load 0xb1ec1899 from memory into f28
fmadd.s f30, f5, f13, f28, dyn # perform operation
fmadd.s f30, f5, f13, f28, rdn # perform operation
fmadd.s f30, f5, f13, f28, rmm # perform operation
fmadd.s f30, f5, f13, f28, rne # perform operation
fmadd.s f30, f5, f13, f28, rtz # perform operation
fmadd.s f30, f5, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x1, 0xc41bf5c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x4b79fd8c # load x3 with value 0x4b79fd8c
sw x3, 0(x2) # store 0x4b79fd8c in memory
flw f8, 0(x2) # load 0x4b79fd8c from memory into f8
fmadd.s f1, f2, f10, f8, dyn # perform operation
fmadd.s f1, f2, f10, f8, rdn # perform operation
fmadd.s f1, f2, f10, f8, rmm # perform operation
fmadd.s f1, f2, f10, f8, rne # perform operation
fmadd.s f1, f2, f10, f8, rtz # perform operation
fmadd.s f1, f2, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x11, 0xdb5e80b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x93500e29 # load x3 with value 0x93500e29
sw x3, 0(x2) # store 0x93500e29 in memory
flw f26, 0(x2) # load 0x93500e29 from memory into f26
fmadd.s f11, f7, f9, f26, dyn # perform operation
fmadd.s f11, f7, f9, f26, rdn # perform operation
fmadd.s f11, f7, f9, f26, rmm # perform operation
fmadd.s f11, f7, f9, f26, rne # perform operation
fmadd.s f11, f7, f9, f26, rtz # perform operation
fmadd.s f11, f7, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f9, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x26, 0xecb89cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x1b1d0b66 # load x3 with value 0x1b1d0b66
sw x3, 0(x2) # store 0x1b1d0b66 in memory
flw f5, 0(x2) # load 0x1b1d0b66 from memory into f5
fmadd.s f26, f17, f15, f5, dyn # perform operation
fmadd.s f26, f17, f15, f5, rdn # perform operation
fmadd.s f26, f17, f15, f5, rmm # perform operation
fmadd.s f26, f17, f15, f5, rne # perform operation
fmadd.s f26, f17, f15, f5, rtz # perform operation
fmadd.s f26, f17, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x15, 0xc7951412 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
li x3, 0x141e0b17 # load x3 with value 0x141e0b17
sw x3, 0(x2) # store 0x141e0b17 in memory
flw f29, 0(x2) # load 0x141e0b17 from memory into f29
fmadd.s f15, f26, f4, f29, dyn # perform operation
fmadd.s f15, f26, f4, f29, rdn # perform operation
fmadd.s f15, f26, f4, f29, rmm # perform operation
fmadd.s f15, f26, f4, f29, rne # perform operation
fmadd.s f15, f26, f4, f29, rtz # perform operation
fmadd.s f15, f26, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x9, 0xdbe9e7bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x224912f8 # load x3 with value 0x224912f8
sw x3, 0(x2) # store 0x224912f8 in memory
flw f7, 0(x2) # load 0x224912f8 from memory into f7
fmadd.s f9, f21, f10, f7, dyn # perform operation
fmadd.s f9, f21, f10, f7, rdn # perform operation
fmadd.s f9, f21, f10, f7, rmm # perform operation
fmadd.s f9, f21, f10, f7, rne # perform operation
fmadd.s f9, f21, f10, f7, rtz # perform operation
fmadd.s f9, f21, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x23, 0x0c068206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x03821661 # load x3 with value 0x03821661
sw x3, 0(x2) # store 0x03821661 in memory
flw f3, 0(x2) # load 0x03821661 from memory into f3
fmadd.s f23, f13, f1, f3, dyn # perform operation
fmadd.s f23, f13, f1, f3, rdn # perform operation
fmadd.s f23, f13, f1, f3, rmm # perform operation
fmadd.s f23, f13, f1, f3, rne # perform operation
fmadd.s f23, f13, f1, f3, rtz # perform operation
fmadd.s f23, f13, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x25, 0x5010795f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0xd6779e38 # load x3 with value 0xd6779e38
sw x3, 0(x2) # store 0xd6779e38 in memory
flw f17, 0(x2) # load 0xd6779e38 from memory into f17
fmadd.s f25, f5, f9, f17, dyn # perform operation
fmadd.s f25, f5, f9, f17, rdn # perform operation
fmadd.s f25, f5, f9, f17, rmm # perform operation
fmadd.s f25, f5, f9, f17, rne # perform operation
fmadd.s f25, f5, f9, f17, rtz # perform operation
fmadd.s f25, f5, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x13, 0x14a7fd03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x1f741f81 # load x3 with value 0x1f741f81
sw x3, 0(x2) # store 0x1f741f81 in memory
flw f11, 0(x2) # load 0x1f741f81 from memory into f11
fmadd.s f13, f29, f20, f11, dyn # perform operation
fmadd.s f13, f29, f20, f11, rdn # perform operation
fmadd.s f13, f29, f20, f11, rmm # perform operation
fmadd.s f13, f29, f20, f11, rne # perform operation
fmadd.s f13, f29, f20, f11, rtz # perform operation
fmadd.s f13, f29, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f20, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x30, 0xc145f6d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x287af369 # load x3 with value 0x287af369
sw x3, 0(x2) # store 0x287af369 in memory
flw f3, 0(x2) # load 0x287af369 from memory into f3
fmadd.s f30, f16, f1, f3, dyn # perform operation
fmadd.s f30, f16, f1, f3, rdn # perform operation
fmadd.s f30, f16, f1, f3, rmm # perform operation
fmadd.s f30, f16, f1, f3, rne # perform operation
fmadd.s f30, f16, f1, f3, rtz # perform operation
fmadd.s f30, f16, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f16, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f16, f1, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x31, 0xea65c9e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xffb74642 # load x3 with value 0xffb74642
sw x3, 0(x2) # store 0xffb74642 in memory
flw f26, 0(x2) # load 0xffb74642 from memory into f26
fmadd.s f31, f23, f6, f26, dyn # perform operation
fmadd.s f31, f23, f6, f26, rdn # perform operation
fmadd.s f31, f23, f6, f26, rmm # perform operation
fmadd.s f31, f23, f6, f26, rne # perform operation
fmadd.s f31, f23, f6, f26, rtz # perform operation
fmadd.s f31, f23, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x17, 0x99096c2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x0fc7559f # load x3 with value 0x0fc7559f
sw x3, 0(x2) # store 0x0fc7559f in memory
flw f31, 0(x2) # load 0x0fc7559f from memory into f31
fmadd.s f17, f12, f4, f31, dyn # perform operation
fmadd.s f17, f12, f4, f31, rdn # perform operation
fmadd.s f17, f12, f4, f31, rmm # perform operation
fmadd.s f17, f12, f4, f31, rne # perform operation
fmadd.s f17, f12, f4, f31, rtz # perform operation
fmadd.s f17, f12, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f4, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x11, 0x1b4e0b0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x9716163f # load x3 with value 0x9716163f
sw x3, 0(x2) # store 0x9716163f in memory
flw f26, 0(x2) # load 0x9716163f from memory into f26
fmadd.s f11, f12, f18, f26, dyn # perform operation
fmadd.s f11, f12, f18, f26, rdn # perform operation
fmadd.s f11, f12, f18, f26, rmm # perform operation
fmadd.s f11, f12, f18, f26, rne # perform operation
fmadd.s f11, f12, f18, f26, rtz # perform operation
fmadd.s f11, f12, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f12, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x30, 0x1339fd35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x9d0d3da6 # load x3 with value 0x9d0d3da6
sw x3, 0(x2) # store 0x9d0d3da6 in memory
flw f13, 0(x2) # load 0x9d0d3da6 from memory into f13
fmadd.s f30, f18, f25, f13, dyn # perform operation
fmadd.s f30, f18, f25, f13, rdn # perform operation
fmadd.s f30, f18, f25, f13, rmm # perform operation
fmadd.s f30, f18, f25, f13, rne # perform operation
fmadd.s f30, f18, f25, f13, rtz # perform operation
fmadd.s f30, f18, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f25, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x13, 0xad2a492b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x00d031ab # load x3 with value 0x00d031ab
sw x3, 0(x2) # store 0x00d031ab in memory
flw f27, 0(x2) # load 0x00d031ab from memory into f27
fmadd.s f13, f3, f7, f27, dyn # perform operation
fmadd.s f13, f3, f7, f27, rdn # perform operation
fmadd.s f13, f3, f7, f27, rmm # perform operation
fmadd.s f13, f3, f7, f27, rne # perform operation
fmadd.s f13, f3, f7, f27, rtz # perform operation
fmadd.s f13, f3, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f3, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f3, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f3, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f3, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f3, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x19, 0x0ad67e31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xc4bab083 # load x3 with value 0xc4bab083
sw x3, 0(x2) # store 0xc4bab083 in memory
flw f10, 0(x2) # load 0xc4bab083 from memory into f10
fmadd.s f19, f12, f18, f10, dyn # perform operation
fmadd.s f19, f12, f18, f10, rdn # perform operation
fmadd.s f19, f12, f18, f10, rmm # perform operation
fmadd.s f19, f12, f18, f10, rne # perform operation
fmadd.s f19, f12, f18, f10, rtz # perform operation
fmadd.s f19, f12, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f12, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f12, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x26, 0x069efae8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x3920f5f7 # load x3 with value 0x3920f5f7
sw x3, 0(x2) # store 0x3920f5f7 in memory
flw f15, 0(x2) # load 0x3920f5f7 from memory into f15
fmadd.s f26, f11, f23, f15, dyn # perform operation
fmadd.s f26, f11, f23, f15, rdn # perform operation
fmadd.s f26, f11, f23, f15, rmm # perform operation
fmadd.s f26, f11, f23, f15, rne # perform operation
fmadd.s f26, f11, f23, f15, rtz # perform operation
fmadd.s f26, f11, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x9, 0xc0fb92b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x6a5579ae # load x3 with value 0x6a5579ae
sw x3, 0(x2) # store 0x6a5579ae in memory
flw f23, 0(x2) # load 0x6a5579ae from memory into f23
fmadd.s f9, f20, f3, f23, dyn # perform operation
fmadd.s f9, f20, f3, f23, rdn # perform operation
fmadd.s f9, f20, f3, f23, rmm # perform operation
fmadd.s f9, f20, f3, f23, rne # perform operation
fmadd.s f9, f20, f3, f23, rtz # perform operation
fmadd.s f9, f20, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f3, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x9, 0x7ad2e4fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x9ac6d68b # load x3 with value 0x9ac6d68b
sw x3, 0(x2) # store 0x9ac6d68b in memory
flw f13, 0(x2) # load 0x9ac6d68b from memory into f13
fmadd.s f9, f24, f15, f13, dyn # perform operation
fmadd.s f9, f24, f15, f13, rdn # perform operation
fmadd.s f9, f24, f15, f13, rmm # perform operation
fmadd.s f9, f24, f15, f13, rne # perform operation
fmadd.s f9, f24, f15, f13, rtz # perform operation
fmadd.s f9, f24, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x16, 0x70e1c722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x3d7e5562 # load x3 with value 0x3d7e5562
sw x3, 0(x2) # store 0x3d7e5562 in memory
flw f3, 0(x2) # load 0x3d7e5562 from memory into f3
fmadd.s f16, f20, f15, f3, dyn # perform operation
fmadd.s f16, f20, f15, f3, rdn # perform operation
fmadd.s f16, f20, f15, f3, rmm # perform operation
fmadd.s f16, f20, f15, f3, rne # perform operation
fmadd.s f16, f20, f15, f3, rtz # perform operation
fmadd.s f16, f20, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f15, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x22, 0x15f8c5a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xa4f65f43 # load x3 with value 0xa4f65f43
sw x3, 0(x2) # store 0xa4f65f43 in memory
flw f12, 0(x2) # load 0xa4f65f43 from memory into f12
fmadd.s f22, f3, f28, f12, dyn # perform operation
fmadd.s f22, f3, f28, f12, rdn # perform operation
fmadd.s f22, f3, f28, f12, rmm # perform operation
fmadd.s f22, f3, f28, f12, rne # perform operation
fmadd.s f22, f3, f28, f12, rtz # perform operation
fmadd.s f22, f3, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f3, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f3, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f3, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f3, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f3, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x11, 0x07673649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0xe2f225de # load x3 with value 0xe2f225de
sw x3, 0(x2) # store 0xe2f225de in memory
flw f1, 0(x2) # load 0xe2f225de from memory into f1
fmadd.s f11, f8, f3, f1, dyn # perform operation
fmadd.s f11, f8, f3, f1, rdn # perform operation
fmadd.s f11, f8, f3, f1, rmm # perform operation
fmadd.s f11, f8, f3, f1, rne # perform operation
fmadd.s f11, f8, f3, f1, rtz # perform operation
fmadd.s f11, f8, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x25, 0xf6f7993c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xc3e6fa8f # load x3 with value 0xc3e6fa8f
sw x3, 0(x2) # store 0xc3e6fa8f in memory
flw f27, 0(x2) # load 0xc3e6fa8f from memory into f27
fmadd.s f25, f14, f11, f27, dyn # perform operation
fmadd.s f25, f14, f11, f27, rdn # perform operation
fmadd.s f25, f14, f11, f27, rmm # perform operation
fmadd.s f25, f14, f11, f27, rne # perform operation
fmadd.s f25, f14, f11, f27, rtz # perform operation
fmadd.s f25, f14, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x21, 0x5d38633f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xc84e8289 # load x3 with value 0xc84e8289
sw x3, 0(x2) # store 0xc84e8289 in memory
flw f16, 0(x2) # load 0xc84e8289 from memory into f16
fmadd.s f21, f4, f14, f16, dyn # perform operation
fmadd.s f21, f4, f14, f16, rdn # perform operation
fmadd.s f21, f4, f14, f16, rmm # perform operation
fmadd.s f21, f4, f14, f16, rne # perform operation
fmadd.s f21, f4, f14, f16, rtz # perform operation
fmadd.s f21, f4, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f4, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f4, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f4, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f4, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f4, f14, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x10, 0x1b191bf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x4c5fb69d # load x3 with value 0x4c5fb69d
sw x3, 0(x2) # store 0x4c5fb69d in memory
flw f16, 0(x2) # load 0x4c5fb69d from memory into f16
fmadd.s f10, f9, f17, f16, dyn # perform operation
fmadd.s f10, f9, f17, f16, rdn # perform operation
fmadd.s f10, f9, f17, f16, rmm # perform operation
fmadd.s f10, f9, f17, f16, rne # perform operation
fmadd.s f10, f9, f17, f16, rtz # perform operation
fmadd.s f10, f9, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x12, 0xf7637f96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xa7acd1d8 # load x3 with value 0xa7acd1d8
sw x3, 0(x2) # store 0xa7acd1d8 in memory
flw f9, 0(x2) # load 0xa7acd1d8 from memory into f9
fmadd.s f12, f20, f24, f9, dyn # perform operation
fmadd.s f12, f20, f24, f9, rdn # perform operation
fmadd.s f12, f20, f24, f9, rmm # perform operation
fmadd.s f12, f20, f24, f9, rne # perform operation
fmadd.s f12, f20, f24, f9, rtz # perform operation
fmadd.s f12, f20, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f24, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x7, 0x4f05bff6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x871f2604 # load x3 with value 0x871f2604
sw x3, 0(x2) # store 0x871f2604 in memory
flw f25, 0(x2) # load 0x871f2604 from memory into f25
fmadd.s f7, f26, f8, f25, dyn # perform operation
fmadd.s f7, f26, f8, f25, rdn # perform operation
fmadd.s f7, f26, f8, f25, rmm # perform operation
fmadd.s f7, f26, f8, f25, rne # perform operation
fmadd.s f7, f26, f8, f25, rtz # perform operation
fmadd.s f7, f26, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x16, 0x5d0283c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x4390a6a8 # load x3 with value 0x4390a6a8
sw x3, 0(x2) # store 0x4390a6a8 in memory
flw f28, 0(x2) # load 0x4390a6a8 from memory into f28
fmadd.s f16, f20, f13, f28, dyn # perform operation
fmadd.s f16, f20, f13, f28, rdn # perform operation
fmadd.s f16, f20, f13, f28, rmm # perform operation
fmadd.s f16, f20, f13, f28, rne # perform operation
fmadd.s f16, f20, f13, f28, rtz # perform operation
fmadd.s f16, f20, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f13, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x27, 0x75b46717 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x158e04c2 # load x3 with value 0x158e04c2
sw x3, 0(x2) # store 0x158e04c2 in memory
flw f9, 0(x2) # load 0x158e04c2 from memory into f9
fmadd.s f27, f31, f23, f9, dyn # perform operation
fmadd.s f27, f31, f23, f9, rdn # perform operation
fmadd.s f27, f31, f23, f9, rmm # perform operation
fmadd.s f27, f31, f23, f9, rne # perform operation
fmadd.s f27, f31, f23, f9, rtz # perform operation
fmadd.s f27, f31, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x19, 0x70d578cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x73f97156 # load x3 with value 0x73f97156
sw x3, 0(x2) # store 0x73f97156 in memory
flw f22, 0(x2) # load 0x73f97156 from memory into f22
fmadd.s f19, f8, f4, f22, dyn # perform operation
fmadd.s f19, f8, f4, f22, rdn # perform operation
fmadd.s f19, f8, f4, f22, rmm # perform operation
fmadd.s f19, f8, f4, f22, rne # perform operation
fmadd.s f19, f8, f4, f22, rtz # perform operation
fmadd.s f19, f8, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x7, 0x90cb7f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x103415df # load x3 with value 0x103415df
sw x3, 0(x2) # store 0x103415df in memory
flw f25, 0(x2) # load 0x103415df from memory into f25
fmadd.s f7, f15, f19, f25, dyn # perform operation
fmadd.s f7, f15, f19, f25, rdn # perform operation
fmadd.s f7, f15, f19, f25, rmm # perform operation
fmadd.s f7, f15, f19, f25, rne # perform operation
fmadd.s f7, f15, f19, f25, rtz # perform operation
fmadd.s f7, f15, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x31, 0x8f9e3420 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x07ff74a6 # load x3 with value 0x07ff74a6
sw x3, 0(x2) # store 0x07ff74a6 in memory
flw f27, 0(x2) # load 0x07ff74a6 from memory into f27
fmadd.s f31, f3, f5, f27, dyn # perform operation
fmadd.s f31, f3, f5, f27, rdn # perform operation
fmadd.s f31, f3, f5, f27, rmm # perform operation
fmadd.s f31, f3, f5, f27, rne # perform operation
fmadd.s f31, f3, f5, f27, rtz # perform operation
fmadd.s f31, f3, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x15, 0xe2f6e3a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x5fc31807 # load x3 with value 0x5fc31807
sw x3, 0(x2) # store 0x5fc31807 in memory
flw f28, 0(x2) # load 0x5fc31807 from memory into f28
fmadd.s f15, f26, f18, f28, dyn # perform operation
fmadd.s f15, f26, f18, f28, rdn # perform operation
fmadd.s f15, f26, f18, f28, rmm # perform operation
fmadd.s f15, f26, f18, f28, rne # perform operation
fmadd.s f15, f26, f18, f28, rtz # perform operation
fmadd.s f15, f26, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f18, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x30, 0x669944e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x12318ee3 # load x3 with value 0x12318ee3
sw x3, 0(x2) # store 0x12318ee3 in memory
flw f3, 0(x2) # load 0x12318ee3 from memory into f3
fmadd.s f30, f1, f7, f3, dyn # perform operation
fmadd.s f30, f1, f7, f3, rdn # perform operation
fmadd.s f30, f1, f7, f3, rmm # perform operation
fmadd.s f30, f1, f7, f3, rne # perform operation
fmadd.s f30, f1, f7, f3, rtz # perform operation
fmadd.s f30, f1, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f1, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f1, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x9, 0x0031a165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x62d5532f # load x3 with value 0x62d5532f
sw x3, 0(x2) # store 0x62d5532f in memory
flw f10, 0(x2) # load 0x62d5532f from memory into f10
fmadd.s f9, f1, f28, f10, dyn # perform operation
fmadd.s f9, f1, f28, f10, rdn # perform operation
fmadd.s f9, f1, f28, f10, rmm # perform operation
fmadd.s f9, f1, f28, f10, rne # perform operation
fmadd.s f9, f1, f28, f10, rtz # perform operation
fmadd.s f9, f1, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x27, 0x22ca35f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0xa3e2d6e1 # load x3 with value 0xa3e2d6e1
sw x3, 0(x2) # store 0xa3e2d6e1 in memory
flw f16, 0(x2) # load 0xa3e2d6e1 from memory into f16
fmadd.s f27, f3, f31, f16, dyn # perform operation
fmadd.s f27, f3, f31, f16, rdn # perform operation
fmadd.s f27, f3, f31, f16, rmm # perform operation
fmadd.s f27, f3, f31, f16, rne # perform operation
fmadd.s f27, f3, f31, f16, rtz # perform operation
fmadd.s f27, f3, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x10, 0xd7228382 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x77778743 # load x3 with value 0x77778743
sw x3, 0(x2) # store 0x77778743 in memory
flw f8, 0(x2) # load 0x77778743 from memory into f8
fmadd.s f10, f2, f30, f8, dyn # perform operation
fmadd.s f10, f2, f30, f8, rdn # perform operation
fmadd.s f10, f2, f30, f8, rmm # perform operation
fmadd.s f10, f2, f30, f8, rne # perform operation
fmadd.s f10, f2, f30, f8, rtz # perform operation
fmadd.s f10, f2, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x2, 0xc8158740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x5076fbdb # load x3 with value 0x5076fbdb
sw x3, 0(x2) # store 0x5076fbdb in memory
flw f3, 0(x2) # load 0x5076fbdb from memory into f3
fmadd.s f2, f11, f7, f3, dyn # perform operation
fmadd.s f2, f11, f7, f3, rdn # perform operation
fmadd.s f2, f11, f7, f3, rmm # perform operation
fmadd.s f2, f11, f7, f3, rne # perform operation
fmadd.s f2, f11, f7, f3, rtz # perform operation
fmadd.s f2, f11, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f11, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f11, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x3, 0xed5bcd07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x373b4a36 # load x3 with value 0x373b4a36
sw x3, 0(x2) # store 0x373b4a36 in memory
flw f11, 0(x2) # load 0x373b4a36 from memory into f11
fmadd.s f3, f7, f2, f11, dyn # perform operation
fmadd.s f3, f7, f2, f11, rdn # perform operation
fmadd.s f3, f7, f2, f11, rmm # perform operation
fmadd.s f3, f7, f2, f11, rne # perform operation
fmadd.s f3, f7, f2, f11, rtz # perform operation
fmadd.s f3, f7, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x22, 0xf6599b77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0x7841cdcf # load x3 with value 0x7841cdcf
sw x3, 0(x2) # store 0x7841cdcf in memory
flw f10, 0(x2) # load 0x7841cdcf from memory into f10
fmadd.s f22, f6, f8, f10, dyn # perform operation
fmadd.s f22, f6, f8, f10, rdn # perform operation
fmadd.s f22, f6, f8, f10, rmm # perform operation
fmadd.s f22, f6, f8, f10, rne # perform operation
fmadd.s f22, f6, f8, f10, rtz # perform operation
fmadd.s f22, f6, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x22, 0x4ead56ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x7e736400 # load x3 with value 0x7e736400
sw x3, 0(x2) # store 0x7e736400 in memory
flw f8, 0(x2) # load 0x7e736400 from memory into f8
fmadd.s f22, f15, f6, f8, dyn # perform operation
fmadd.s f22, f15, f6, f8, rdn # perform operation
fmadd.s f22, f15, f6, f8, rmm # perform operation
fmadd.s f22, f15, f6, f8, rne # perform operation
fmadd.s f22, f15, f6, f8, rtz # perform operation
fmadd.s f22, f15, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x23, 0x4a74aa07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xfd3e7029 # load x3 with value 0xfd3e7029
sw x3, 0(x2) # store 0xfd3e7029 in memory
flw f1, 0(x2) # load 0xfd3e7029 from memory into f1
fmadd.s f23, f16, f31, f1, dyn # perform operation
fmadd.s f23, f16, f31, f1, rdn # perform operation
fmadd.s f23, f16, f31, f1, rmm # perform operation
fmadd.s f23, f16, f31, f1, rne # perform operation
fmadd.s f23, f16, f31, f1, rtz # perform operation
fmadd.s f23, f16, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f31, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x11, 0x9b255d68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xda7f4237 # load x3 with value 0xda7f4237
sw x3, 0(x2) # store 0xda7f4237 in memory
flw f26, 0(x2) # load 0xda7f4237 from memory into f26
fmadd.s f11, f23, f2, f26, dyn # perform operation
fmadd.s f11, f23, f2, f26, rdn # perform operation
fmadd.s f11, f23, f2, f26, rmm # perform operation
fmadd.s f11, f23, f2, f26, rne # perform operation
fmadd.s f11, f23, f2, f26, rtz # perform operation
fmadd.s f11, f23, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f2, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x10, 0x3cd2a6c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
li x3, 0x0522246a # load x3 with value 0x0522246a
sw x3, 0(x2) # store 0x0522246a in memory
flw f14, 0(x2) # load 0x0522246a from memory into f14
fmadd.s f10, f6, f21, f14, dyn # perform operation
fmadd.s f10, f6, f21, f14, rdn # perform operation
fmadd.s f10, f6, f21, f14, rmm # perform operation
fmadd.s f10, f6, f21, f14, rne # perform operation
fmadd.s f10, f6, f21, f14, rtz # perform operation
fmadd.s f10, f6, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x10, 0x5a327b7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xb803a1d2 # load x3 with value 0xb803a1d2
sw x3, 0(x2) # store 0xb803a1d2 in memory
flw f17, 0(x2) # load 0xb803a1d2 from memory into f17
fmadd.s f10, f4, f12, f17, dyn # perform operation
fmadd.s f10, f4, f12, f17, rdn # perform operation
fmadd.s f10, f4, f12, f17, rmm # perform operation
fmadd.s f10, f4, f12, f17, rne # perform operation
fmadd.s f10, f4, f12, f17, rtz # perform operation
fmadd.s f10, f4, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f4, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f4, f12, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x25, 0xebdf4c7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x26bdbe29 # load x3 with value 0x26bdbe29
sw x3, 0(x2) # store 0x26bdbe29 in memory
flw f20, 0(x2) # load 0x26bdbe29 from memory into f20
fmadd.s f25, f21, f22, f20, dyn # perform operation
fmadd.s f25, f21, f22, f20, rdn # perform operation
fmadd.s f25, f21, f22, f20, rmm # perform operation
fmadd.s f25, f21, f22, f20, rne # perform operation
fmadd.s f25, f21, f22, f20, rtz # perform operation
fmadd.s f25, f21, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f22, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x24, 0x85f82d89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0xa6b59054 # load x3 with value 0xa6b59054
sw x3, 0(x2) # store 0xa6b59054 in memory
flw f18, 0(x2) # load 0xa6b59054 from memory into f18
fmadd.s f24, f23, f6, f18, dyn # perform operation
fmadd.s f24, f23, f6, f18, rdn # perform operation
fmadd.s f24, f23, f6, f18, rmm # perform operation
fmadd.s f24, f23, f6, f18, rne # perform operation
fmadd.s f24, f23, f6, f18, rtz # perform operation
fmadd.s f24, f23, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x1, 0x43ade00f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x4b09e090 # load x3 with value 0x4b09e090
sw x3, 0(x2) # store 0x4b09e090 in memory
flw f17, 0(x2) # load 0x4b09e090 from memory into f17
fmadd.s f1, f31, f15, f17, dyn # perform operation
fmadd.s f1, f31, f15, f17, rdn # perform operation
fmadd.s f1, f31, f15, f17, rmm # perform operation
fmadd.s f1, f31, f15, f17, rne # perform operation
fmadd.s f1, f31, f15, f17, rtz # perform operation
fmadd.s f1, f31, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f15, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x21, 0x75ffe509 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xad37c3f2 # load x3 with value 0xad37c3f2
sw x3, 0(x2) # store 0xad37c3f2 in memory
flw f25, 0(x2) # load 0xad37c3f2 from memory into f25
fmadd.s f21, f31, f2, f25, dyn # perform operation
fmadd.s f21, f31, f2, f25, rdn # perform operation
fmadd.s f21, f31, f2, f25, rmm # perform operation
fmadd.s f21, f31, f2, f25, rne # perform operation
fmadd.s f21, f31, f2, f25, rtz # perform operation
fmadd.s f21, f31, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x2, 0x9e61208b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0xcbfdf0bb # load x3 with value 0xcbfdf0bb
sw x3, 0(x2) # store 0xcbfdf0bb in memory
flw f11, 0(x2) # load 0xcbfdf0bb from memory into f11
fmadd.s f2, f20, f25, f11, dyn # perform operation
fmadd.s f2, f20, f25, f11, rdn # perform operation
fmadd.s f2, f20, f25, f11, rmm # perform operation
fmadd.s f2, f20, f25, f11, rne # perform operation
fmadd.s f2, f20, f25, f11, rtz # perform operation
fmadd.s f2, f20, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x10, 0x9b85840a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0x061a94d9 # load x3 with value 0x061a94d9
sw x3, 0(x2) # store 0x061a94d9 in memory
flw f13, 0(x2) # load 0x061a94d9 from memory into f13
fmadd.s f10, f6, f7, f13, dyn # perform operation
fmadd.s f10, f6, f7, f13, rdn # perform operation
fmadd.s f10, f6, f7, f13, rmm # perform operation
fmadd.s f10, f6, f7, f13, rne # perform operation
fmadd.s f10, f6, f7, f13, rtz # perform operation
fmadd.s f10, f6, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f7, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x28, 0x42e73eb1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x765dcf59 # load x3 with value 0x765dcf59
sw x3, 0(x2) # store 0x765dcf59 in memory
flw f15, 0(x2) # load 0x765dcf59 from memory into f15
fmadd.s f28, f4, f3, f15, dyn # perform operation
fmadd.s f28, f4, f3, f15, rdn # perform operation
fmadd.s f28, f4, f3, f15, rmm # perform operation
fmadd.s f28, f4, f3, f15, rne # perform operation
fmadd.s f28, f4, f3, f15, rtz # perform operation
fmadd.s f28, f4, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f4, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f4, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f4, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f4, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f4, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x13, 0x12fc6a13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x9d3f72be # load x3 with value 0x9d3f72be
sw x3, 0(x2) # store 0x9d3f72be in memory
flw f17, 0(x2) # load 0x9d3f72be from memory into f17
fmadd.s f13, f28, f23, f17, dyn # perform operation
fmadd.s f13, f28, f23, f17, rdn # perform operation
fmadd.s f13, f28, f23, f17, rmm # perform operation
fmadd.s f13, f28, f23, f17, rne # perform operation
fmadd.s f13, f28, f23, f17, rtz # perform operation
fmadd.s f13, f28, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f23, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x20, 0x687af145 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x4ea8b489 # load x3 with value 0x4ea8b489
sw x3, 0(x2) # store 0x4ea8b489 in memory
flw f24, 0(x2) # load 0x4ea8b489 from memory into f24
fmadd.s f20, f23, f14, f24, dyn # perform operation
fmadd.s f20, f23, f14, f24, rdn # perform operation
fmadd.s f20, f23, f14, f24, rmm # perform operation
fmadd.s f20, f23, f14, f24, rne # perform operation
fmadd.s f20, f23, f14, f24, rtz # perform operation
fmadd.s f20, f23, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x2, 0x8a9f69eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x3b1f6225 # load x3 with value 0x3b1f6225
sw x3, 0(x2) # store 0x3b1f6225 in memory
flw f31, 0(x2) # load 0x3b1f6225 from memory into f31
fmadd.s f2, f17, f8, f31, dyn # perform operation
fmadd.s f2, f17, f8, f31, rdn # perform operation
fmadd.s f2, f17, f8, f31, rmm # perform operation
fmadd.s f2, f17, f8, f31, rne # perform operation
fmadd.s f2, f17, f8, f31, rtz # perform operation
fmadd.s f2, f17, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x27, 0x7ba82698 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xc2658a7f # load x3 with value 0xc2658a7f
sw x3, 0(x2) # store 0xc2658a7f in memory
flw f18, 0(x2) # load 0xc2658a7f from memory into f18
fmadd.s f27, f14, f11, f18, dyn # perform operation
fmadd.s f27, f14, f11, f18, rdn # perform operation
fmadd.s f27, f14, f11, f18, rmm # perform operation
fmadd.s f27, f14, f11, f18, rne # perform operation
fmadd.s f27, f14, f11, f18, rtz # perform operation
fmadd.s f27, f14, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x26, 0xdae374dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x86282374 # load x3 with value 0x86282374
sw x3, 0(x2) # store 0x86282374 in memory
flw f21, 0(x2) # load 0x86282374 from memory into f21
fmadd.s f26, f23, f28, f21, dyn # perform operation
fmadd.s f26, f23, f28, f21, rdn # perform operation
fmadd.s f26, f23, f28, f21, rmm # perform operation
fmadd.s f26, f23, f28, f21, rne # perform operation
fmadd.s f26, f23, f28, f21, rtz # perform operation
fmadd.s f26, f23, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x25, 0x6593e9c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x49b7f274 # load x3 with value 0x49b7f274
sw x3, 0(x2) # store 0x49b7f274 in memory
flw f8, 0(x2) # load 0x49b7f274 from memory into f8
fmadd.s f25, f22, f30, f8, dyn # perform operation
fmadd.s f25, f22, f30, f8, rdn # perform operation
fmadd.s f25, f22, f30, f8, rmm # perform operation
fmadd.s f25, f22, f30, f8, rne # perform operation
fmadd.s f25, f22, f30, f8, rtz # perform operation
fmadd.s f25, f22, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x24, 0xd109105a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x144261fd # load x3 with value 0x144261fd
sw x3, 0(x2) # store 0x144261fd in memory
flw f6, 0(x2) # load 0x144261fd from memory into f6
fmadd.s f24, f10, f22, f6, dyn # perform operation
fmadd.s f24, f10, f22, f6, rdn # perform operation
fmadd.s f24, f10, f22, f6, rmm # perform operation
fmadd.s f24, f10, f22, f6, rne # perform operation
fmadd.s f24, f10, f22, f6, rtz # perform operation
fmadd.s f24, f10, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f22, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x14, 0x5351144d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x53200dda # load x3 with value 0x53200dda
sw x3, 0(x2) # store 0x53200dda in memory
flw f28, 0(x2) # load 0x53200dda from memory into f28
fmadd.s f14, f6, f7, f28, dyn # perform operation
fmadd.s f14, f6, f7, f28, rdn # perform operation
fmadd.s f14, f6, f7, f28, rmm # perform operation
fmadd.s f14, f6, f7, f28, rne # perform operation
fmadd.s f14, f6, f7, f28, rtz # perform operation
fmadd.s f14, f6, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f7, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x9, 0xf2eeb769 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x0c1d73df # load x3 with value 0x0c1d73df
sw x3, 0(x2) # store 0x0c1d73df in memory
flw f26, 0(x2) # load 0x0c1d73df from memory into f26
fmadd.s f9, f19, f6, f26, dyn # perform operation
fmadd.s f9, f19, f6, f26, rdn # perform operation
fmadd.s f9, f19, f6, f26, rmm # perform operation
fmadd.s f9, f19, f6, f26, rne # perform operation
fmadd.s f9, f19, f6, f26, rtz # perform operation
fmadd.s f9, f19, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f19, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x1, 0xef6d2fac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xee19a68e # load x3 with value 0xee19a68e
sw x3, 0(x2) # store 0xee19a68e in memory
flw f4, 0(x2) # load 0xee19a68e from memory into f4
fmadd.s f1, f31, f18, f4, dyn # perform operation
fmadd.s f1, f31, f18, f4, rdn # perform operation
fmadd.s f1, f31, f18, f4, rmm # perform operation
fmadd.s f1, f31, f18, f4, rne # perform operation
fmadd.s f1, f31, f18, f4, rtz # perform operation
fmadd.s f1, f31, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f18, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x26, 0x34348e51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0x0f2e6160 # load x3 with value 0x0f2e6160
sw x3, 0(x2) # store 0x0f2e6160 in memory
flw f30, 0(x2) # load 0x0f2e6160 from memory into f30
fmadd.s f26, f29, f23, f30, dyn # perform operation
fmadd.s f26, f29, f23, f30, rdn # perform operation
fmadd.s f26, f29, f23, f30, rmm # perform operation
fmadd.s f26, f29, f23, f30, rne # perform operation
fmadd.s f26, f29, f23, f30, rtz # perform operation
fmadd.s f26, f29, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f23, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x1, 0x7db6d756 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xf6725120 # load x3 with value 0xf6725120
sw x3, 0(x2) # store 0xf6725120 in memory
flw f16, 0(x2) # load 0xf6725120 from memory into f16
fmadd.s f1, f7, f29, f16, dyn # perform operation
fmadd.s f1, f7, f29, f16, rdn # perform operation
fmadd.s f1, f7, f29, f16, rmm # perform operation
fmadd.s f1, f7, f29, f16, rne # perform operation
fmadd.s f1, f7, f29, f16, rtz # perform operation
fmadd.s f1, f7, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x18, 0x188dc57c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x6dcb7ab9 # load x3 with value 0x6dcb7ab9
sw x3, 0(x2) # store 0x6dcb7ab9 in memory
flw f7, 0(x2) # load 0x6dcb7ab9 from memory into f7
fmadd.s f18, f3, f25, f7, dyn # perform operation
fmadd.s f18, f3, f25, f7, rdn # perform operation
fmadd.s f18, f3, f25, f7, rmm # perform operation
fmadd.s f18, f3, f25, f7, rne # perform operation
fmadd.s f18, f3, f25, f7, rtz # perform operation
fmadd.s f18, f3, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f3, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f3, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x2, 0xded407c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x502f0af4 # load x3 with value 0x502f0af4
sw x3, 0(x2) # store 0x502f0af4 in memory
flw f9, 0(x2) # load 0x502f0af4 from memory into f9
fmadd.s f2, f23, f11, f9, dyn # perform operation
fmadd.s f2, f23, f11, f9, rdn # perform operation
fmadd.s f2, f23, f11, f9, rmm # perform operation
fmadd.s f2, f23, f11, f9, rne # perform operation
fmadd.s f2, f23, f11, f9, rtz # perform operation
fmadd.s f2, f23, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x18, 0x3f8705c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x94094cdb # load x3 with value 0x94094cdb
sw x3, 0(x2) # store 0x94094cdb in memory
flw f24, 0(x2) # load 0x94094cdb from memory into f24
fmadd.s f18, f10, f23, f24, dyn # perform operation
fmadd.s f18, f10, f23, f24, rdn # perform operation
fmadd.s f18, f10, f23, f24, rmm # perform operation
fmadd.s f18, f10, f23, f24, rne # perform operation
fmadd.s f18, f10, f23, f24, rtz # perform operation
fmadd.s f18, f10, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f23, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x4, 0x3bcd9e3b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xec313fbf # load x3 with value 0xec313fbf
sw x3, 0(x2) # store 0xec313fbf in memory
flw f18, 0(x2) # load 0xec313fbf from memory into f18
fmadd.s f4, f21, f12, f18, dyn # perform operation
fmadd.s f4, f21, f12, f18, rdn # perform operation
fmadd.s f4, f21, f12, f18, rmm # perform operation
fmadd.s f4, f21, f12, f18, rne # perform operation
fmadd.s f4, f21, f12, f18, rtz # perform operation
fmadd.s f4, f21, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f21, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f21, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f21, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f21, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f21, f12, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x19, 0x22ab25c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x3d128c73 # load x3 with value 0x3d128c73
sw x3, 0(x2) # store 0x3d128c73 in memory
flw f5, 0(x2) # load 0x3d128c73 from memory into f5
fmadd.s f19, f22, f30, f5, dyn # perform operation
fmadd.s f19, f22, f30, f5, rdn # perform operation
fmadd.s f19, f22, f30, f5, rmm # perform operation
fmadd.s f19, f22, f30, f5, rne # perform operation
fmadd.s f19, f22, f30, f5, rtz # perform operation
fmadd.s f19, f22, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f30, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x1, 0x392b2b50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x1cbfae0b # load x3 with value 0x1cbfae0b
sw x3, 0(x2) # store 0x1cbfae0b in memory
flw f14, 0(x2) # load 0x1cbfae0b from memory into f14
fmadd.s f1, f8, f12, f14, dyn # perform operation
fmadd.s f1, f8, f12, f14, rdn # perform operation
fmadd.s f1, f8, f12, f14, rmm # perform operation
fmadd.s f1, f8, f12, f14, rne # perform operation
fmadd.s f1, f8, f12, f14, rtz # perform operation
fmadd.s f1, f8, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f8, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f8, f12, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x24, 0x213d2347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x6c5ab9d8 # load x3 with value 0x6c5ab9d8
sw x3, 0(x2) # store 0x6c5ab9d8 in memory
flw f15, 0(x2) # load 0x6c5ab9d8 from memory into f15
fmadd.s f24, f2, f1, f15, dyn # perform operation
fmadd.s f24, f2, f1, f15, rdn # perform operation
fmadd.s f24, f2, f1, f15, rmm # perform operation
fmadd.s f24, f2, f1, f15, rne # perform operation
fmadd.s f24, f2, f1, f15, rtz # perform operation
fmadd.s f24, f2, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x2, 0xd13d5789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
li x3, 0xea8c95f1 # load x3 with value 0xea8c95f1
sw x3, 0(x2) # store 0xea8c95f1 in memory
flw f12, 0(x2) # load 0xea8c95f1 from memory into f12
fmadd.s f2, f8, f11, f12, dyn # perform operation
fmadd.s f2, f8, f11, f12, rdn # perform operation
fmadd.s f2, f8, f11, f12, rmm # perform operation
fmadd.s f2, f8, f11, f12, rne # perform operation
fmadd.s f2, f8, f11, f12, rtz # perform operation
fmadd.s f2, f8, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f11, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x10, 0xf9cdf9f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0x5f412dcb # load x3 with value 0x5f412dcb
sw x3, 0(x2) # store 0x5f412dcb in memory
flw f20, 0(x2) # load 0x5f412dcb from memory into f20
fmadd.s f10, f29, f1, f20, dyn # perform operation
fmadd.s f10, f29, f1, f20, rdn # perform operation
fmadd.s f10, f29, f1, f20, rmm # perform operation
fmadd.s f10, f29, f1, f20, rne # perform operation
fmadd.s f10, f29, f1, f20, rtz # perform operation
fmadd.s f10, f29, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f29, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x11, 0xa915a304 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0xd8611b08 # load x3 with value 0xd8611b08
sw x3, 0(x2) # store 0xd8611b08 in memory
flw f8, 0(x2) # load 0xd8611b08 from memory into f8
fmadd.s f11, f18, f12, f8, dyn # perform operation
fmadd.s f11, f18, f12, f8, rdn # perform operation
fmadd.s f11, f18, f12, f8, rmm # perform operation
fmadd.s f11, f18, f12, f8, rne # perform operation
fmadd.s f11, f18, f12, f8, rtz # perform operation
fmadd.s f11, f18, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f18, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f18, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x9, 0xd4aabbac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0xd9a81e04 # load x3 with value 0xd9a81e04
sw x3, 0(x2) # store 0xd9a81e04 in memory
flw f27, 0(x2) # load 0xd9a81e04 from memory into f27
fmadd.s f9, f21, f22, f27, dyn # perform operation
fmadd.s f9, f21, f22, f27, rdn # perform operation
fmadd.s f9, f21, f22, f27, rmm # perform operation
fmadd.s f9, f21, f22, f27, rne # perform operation
fmadd.s f9, f21, f22, f27, rtz # perform operation
fmadd.s f9, f21, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x7, 0x0d972747 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x500287fd # load x3 with value 0x500287fd
sw x3, 0(x2) # store 0x500287fd in memory
flw f22, 0(x2) # load 0x500287fd from memory into f22
fmadd.s f7, f25, f18, f22, dyn # perform operation
fmadd.s f7, f25, f18, f22, rdn # perform operation
fmadd.s f7, f25, f18, f22, rmm # perform operation
fmadd.s f7, f25, f18, f22, rne # perform operation
fmadd.s f7, f25, f18, f22, rtz # perform operation
fmadd.s f7, f25, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x18, 0xabf41411 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0x918d2878 # load x3 with value 0x918d2878
sw x3, 0(x2) # store 0x918d2878 in memory
flw f12, 0(x2) # load 0x918d2878 from memory into f12
fmadd.s f18, f2, f8, f12, dyn # perform operation
fmadd.s f18, f2, f8, f12, rdn # perform operation
fmadd.s f18, f2, f8, f12, rmm # perform operation
fmadd.s f18, f2, f8, f12, rne # perform operation
fmadd.s f18, f2, f8, f12, rtz # perform operation
fmadd.s f18, f2, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f8, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x4, 0xd16ca7aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x122b6436 # load x3 with value 0x122b6436
sw x3, 0(x2) # store 0x122b6436 in memory
flw f23, 0(x2) # load 0x122b6436 from memory into f23
fmadd.s f4, f28, f21, f23, dyn # perform operation
fmadd.s f4, f28, f21, f23, rdn # perform operation
fmadd.s f4, f28, f21, f23, rmm # perform operation
fmadd.s f4, f28, f21, f23, rne # perform operation
fmadd.s f4, f28, f21, f23, rtz # perform operation
fmadd.s f4, f28, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f28, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f28, f21, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x6, 0x8cd7da82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xaa87e5d9 # load x3 with value 0xaa87e5d9
sw x3, 0(x2) # store 0xaa87e5d9 in memory
flw f13, 0(x2) # load 0xaa87e5d9 from memory into f13
fmadd.s f6, f16, f30, f13, dyn # perform operation
fmadd.s f6, f16, f30, f13, rdn # perform operation
fmadd.s f6, f16, f30, f13, rmm # perform operation
fmadd.s f6, f16, f30, f13, rne # perform operation
fmadd.s f6, f16, f30, f13, rtz # perform operation
fmadd.s f6, f16, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x4, 0xbc723130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0x244f8d6e # load x3 with value 0x244f8d6e
sw x3, 0(x2) # store 0x244f8d6e in memory
flw f13, 0(x2) # load 0x244f8d6e from memory into f13
fmadd.s f4, f17, f16, f13, dyn # perform operation
fmadd.s f4, f17, f16, f13, rdn # perform operation
fmadd.s f4, f17, f16, f13, rmm # perform operation
fmadd.s f4, f17, f16, f13, rne # perform operation
fmadd.s f4, f17, f16, f13, rtz # perform operation
fmadd.s f4, f17, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f17, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f17, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x5, 0xf6ce5be2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x5a00c522 # load x3 with value 0x5a00c522
sw x3, 0(x2) # store 0x5a00c522 in memory
flw f19, 0(x2) # load 0x5a00c522 from memory into f19
fmadd.s f5, f1, f18, f19, dyn # perform operation
fmadd.s f5, f1, f18, f19, rdn # perform operation
fmadd.s f5, f1, f18, f19, rmm # perform operation
fmadd.s f5, f1, f18, f19, rne # perform operation
fmadd.s f5, f1, f18, f19, rtz # perform operation
fmadd.s f5, f1, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f1, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f1, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x7, 0x65824143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
li x3, 0x7239059f # load x3 with value 0x7239059f
sw x3, 0(x2) # store 0x7239059f in memory
flw f17, 0(x2) # load 0x7239059f from memory into f17
fmadd.s f7, f13, f29, f17, dyn # perform operation
fmadd.s f7, f13, f29, f17, rdn # perform operation
fmadd.s f7, f13, f29, f17, rmm # perform operation
fmadd.s f7, f13, f29, f17, rne # perform operation
fmadd.s f7, f13, f29, f17, rtz # perform operation
fmadd.s f7, f13, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f29, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x27, 0x1c5f0a3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x1f2294a1 # load x3 with value 0x1f2294a1
sw x3, 0(x2) # store 0x1f2294a1 in memory
flw f29, 0(x2) # load 0x1f2294a1 from memory into f29
fmadd.s f27, f31, f13, f29, dyn # perform operation
fmadd.s f27, f31, f13, f29, rdn # perform operation
fmadd.s f27, f31, f13, f29, rmm # perform operation
fmadd.s f27, f31, f13, f29, rne # perform operation
fmadd.s f27, f31, f13, f29, rtz # perform operation
fmadd.s f27, f31, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x1, 0x50675e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x18d93acd # load x3 with value 0x18d93acd
sw x3, 0(x2) # store 0x18d93acd in memory
flw f8, 0(x2) # load 0x18d93acd from memory into f8
fmadd.s f1, f27, f6, f8, dyn # perform operation
fmadd.s f1, f27, f6, f8, rdn # perform operation
fmadd.s f1, f27, f6, f8, rmm # perform operation
fmadd.s f1, f27, f6, f8, rne # perform operation
fmadd.s f1, f27, f6, f8, rtz # perform operation
fmadd.s f1, f27, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f6, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x26, 0x16f49db1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xef82abc3 # load x3 with value 0xef82abc3
sw x3, 0(x2) # store 0xef82abc3 in memory
flw f29, 0(x2) # load 0xef82abc3 from memory into f29
fmadd.s f26, f21, f8, f29, dyn # perform operation
fmadd.s f26, f21, f8, f29, rdn # perform operation
fmadd.s f26, f21, f8, f29, rmm # perform operation
fmadd.s f26, f21, f8, f29, rne # perform operation
fmadd.s f26, f21, f8, f29, rtz # perform operation
fmadd.s f26, f21, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f21, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f21, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f21, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f21, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f21, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x22, 0x9b4d9ef0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xd7d667f3 # load x3 with value 0xd7d667f3
sw x3, 0(x2) # store 0xd7d667f3 in memory
flw f10, 0(x2) # load 0xd7d667f3 from memory into f10
fmadd.s f22, f7, f24, f10, dyn # perform operation
fmadd.s f22, f7, f24, f10, rdn # perform operation
fmadd.s f22, f7, f24, f10, rmm # perform operation
fmadd.s f22, f7, f24, f10, rne # perform operation
fmadd.s f22, f7, f24, f10, rtz # perform operation
fmadd.s f22, f7, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f24, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x22, 0x49cbf88f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0xa55e43b3 # load x3 with value 0xa55e43b3
sw x3, 0(x2) # store 0xa55e43b3 in memory
flw f26, 0(x2) # load 0xa55e43b3 from memory into f26
fmadd.s f22, f28, f1, f26, dyn # perform operation
fmadd.s f22, f28, f1, f26, rdn # perform operation
fmadd.s f22, f28, f1, f26, rmm # perform operation
fmadd.s f22, f28, f1, f26, rne # perform operation
fmadd.s f22, f28, f1, f26, rtz # perform operation
fmadd.s f22, f28, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f28, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x9, 0x289860f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0xb3866f71 # load x3 with value 0xb3866f71
sw x3, 0(x2) # store 0xb3866f71 in memory
flw f13, 0(x2) # load 0xb3866f71 from memory into f13
fmadd.s f9, f6, f3, f13, dyn # perform operation
fmadd.s f9, f6, f3, f13, rdn # perform operation
fmadd.s f9, f6, f3, f13, rmm # perform operation
fmadd.s f9, f6, f3, f13, rne # perform operation
fmadd.s f9, f6, f3, f13, rtz # perform operation
fmadd.s f9, f6, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x22, 0xbc2813a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x9ec3a32a # load x3 with value 0x9ec3a32a
sw x3, 0(x2) # store 0x9ec3a32a in memory
flw f24, 0(x2) # load 0x9ec3a32a from memory into f24
fmadd.s f22, f26, f3, f24, dyn # perform operation
fmadd.s f22, f26, f3, f24, rdn # perform operation
fmadd.s f22, f26, f3, f24, rmm # perform operation
fmadd.s f22, f26, f3, f24, rne # perform operation
fmadd.s f22, f26, f3, f24, rtz # perform operation
fmadd.s f22, f26, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f3, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x28, 0xed30a326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x2dc93fea # load x3 with value 0x2dc93fea
sw x3, 0(x2) # store 0x2dc93fea in memory
flw f27, 0(x2) # load 0x2dc93fea from memory into f27
fmadd.s f28, f19, f14, f27, dyn # perform operation
fmadd.s f28, f19, f14, f27, rdn # perform operation
fmadd.s f28, f19, f14, f27, rmm # perform operation
fmadd.s f28, f19, f14, f27, rne # perform operation
fmadd.s f28, f19, f14, f27, rtz # perform operation
fmadd.s f28, f19, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f14, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x30, 0xdf5e3d76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xa7843234 # load x3 with value 0xa7843234
sw x3, 0(x2) # store 0xa7843234 in memory
flw f2, 0(x2) # load 0xa7843234 from memory into f2
fmadd.s f30, f15, f19, f2, dyn # perform operation
fmadd.s f30, f15, f19, f2, rdn # perform operation
fmadd.s f30, f15, f19, f2, rmm # perform operation
fmadd.s f30, f15, f19, f2, rne # perform operation
fmadd.s f30, f15, f19, f2, rtz # perform operation
fmadd.s f30, f15, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f15, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f15, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f15, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f15, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f15, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x20, 0xd654d33f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x1e5226d9 # load x3 with value 0x1e5226d9
sw x3, 0(x2) # store 0x1e5226d9 in memory
flw f23, 0(x2) # load 0x1e5226d9 from memory into f23
fmadd.s f20, f5, f4, f23, dyn # perform operation
fmadd.s f20, f5, f4, f23, rdn # perform operation
fmadd.s f20, f5, f4, f23, rmm # perform operation
fmadd.s f20, f5, f4, f23, rne # perform operation
fmadd.s f20, f5, f4, f23, rtz # perform operation
fmadd.s f20, f5, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f5, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f5, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f5, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f5, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f5, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x19, 0x98ac7c76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x774f0d08 # load x3 with value 0x774f0d08
sw x3, 0(x2) # store 0x774f0d08 in memory
flw f27, 0(x2) # load 0x774f0d08 from memory into f27
fmadd.s f19, f29, f15, f27, dyn # perform operation
fmadd.s f19, f29, f15, f27, rdn # perform operation
fmadd.s f19, f29, f15, f27, rmm # perform operation
fmadd.s f19, f29, f15, f27, rne # perform operation
fmadd.s f19, f29, f15, f27, rtz # perform operation
fmadd.s f19, f29, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f29, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f29, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x23, 0xe9904a14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x67d0b7e4 # load x3 with value 0x67d0b7e4
sw x3, 0(x2) # store 0x67d0b7e4 in memory
flw f2, 0(x2) # load 0x67d0b7e4 from memory into f2
fmadd.s f23, f12, f10, f2, dyn # perform operation
fmadd.s f23, f12, f10, f2, rdn # perform operation
fmadd.s f23, f12, f10, f2, rmm # perform operation
fmadd.s f23, f12, f10, f2, rne # perform operation
fmadd.s f23, f12, f10, f2, rtz # perform operation
fmadd.s f23, f12, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x26, 0xd7d55e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0x8b0ffd68 # load x3 with value 0x8b0ffd68
sw x3, 0(x2) # store 0x8b0ffd68 in memory
flw f5, 0(x2) # load 0x8b0ffd68 from memory into f5
fmadd.s f26, f29, f15, f5, dyn # perform operation
fmadd.s f26, f29, f15, f5, rdn # perform operation
fmadd.s f26, f29, f15, f5, rmm # perform operation
fmadd.s f26, f29, f15, f5, rne # perform operation
fmadd.s f26, f29, f15, f5, rtz # perform operation
fmadd.s f26, f29, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x17, 0xb59dc0d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0x5ed08b85 # load x3 with value 0x5ed08b85
sw x3, 0(x2) # store 0x5ed08b85 in memory
flw f4, 0(x2) # load 0x5ed08b85 from memory into f4
fmadd.s f17, f20, f12, f4, dyn # perform operation
fmadd.s f17, f20, f12, f4, rdn # perform operation
fmadd.s f17, f20, f12, f4, rmm # perform operation
fmadd.s f17, f20, f12, f4, rne # perform operation
fmadd.s f17, f20, f12, f4, rtz # perform operation
fmadd.s f17, f20, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f12, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x19, 0xb0dd49c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x295aa462 # load x3 with value 0x295aa462
sw x3, 0(x2) # store 0x295aa462 in memory
flw f29, 0(x2) # load 0x295aa462 from memory into f29
fmadd.s f19, f27, f3, f29, dyn # perform operation
fmadd.s f19, f27, f3, f29, rdn # perform operation
fmadd.s f19, f27, f3, f29, rmm # perform operation
fmadd.s f19, f27, f3, f29, rne # perform operation
fmadd.s f19, f27, f3, f29, rtz # perform operation
fmadd.s f19, f27, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f3, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x27, 0x82040158 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xa6b4cfb9 # load x3 with value 0xa6b4cfb9
sw x3, 0(x2) # store 0xa6b4cfb9 in memory
flw f15, 0(x2) # load 0xa6b4cfb9 from memory into f15
fmadd.s f27, f10, f13, f15, dyn # perform operation
fmadd.s f27, f10, f13, f15, rdn # perform operation
fmadd.s f27, f10, f13, f15, rmm # perform operation
fmadd.s f27, f10, f13, f15, rne # perform operation
fmadd.s f27, f10, f13, f15, rtz # perform operation
fmadd.s f27, f10, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f13, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x21, 0x72e85453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x0c778f39 # load x3 with value 0x0c778f39
sw x3, 0(x2) # store 0x0c778f39 in memory
flw f11, 0(x2) # load 0x0c778f39 from memory into f11
fmadd.s f21, f30, f16, f11, dyn # perform operation
fmadd.s f21, f30, f16, f11, rdn # perform operation
fmadd.s f21, f30, f16, f11, rmm # perform operation
fmadd.s f21, f30, f16, f11, rne # perform operation
fmadd.s f21, f30, f16, f11, rtz # perform operation
fmadd.s f21, f30, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f30, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f30, f16, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x30, 0x17b6a7ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x0e90ed5d # load x3 with value 0x0e90ed5d
sw x3, 0(x2) # store 0x0e90ed5d in memory
flw f15, 0(x2) # load 0x0e90ed5d from memory into f15
fmadd.s f30, f25, f29, f15, dyn # perform operation
fmadd.s f30, f25, f29, f15, rdn # perform operation
fmadd.s f30, f25, f29, f15, rmm # perform operation
fmadd.s f30, f25, f29, f15, rne # perform operation
fmadd.s f30, f25, f29, f15, rtz # perform operation
fmadd.s f30, f25, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x1, 0xd8e687bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xd6dfb858 # load x3 with value 0xd6dfb858
sw x3, 0(x2) # store 0xd6dfb858 in memory
flw f11, 0(x2) # load 0xd6dfb858 from memory into f11
fmadd.s f1, f17, f27, f11, dyn # perform operation
fmadd.s f1, f17, f27, f11, rdn # perform operation
fmadd.s f1, f17, f27, f11, rmm # perform operation
fmadd.s f1, f17, f27, f11, rne # perform operation
fmadd.s f1, f17, f27, f11, rtz # perform operation
fmadd.s f1, f17, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x6, 0x51cd8810 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xd574ec76 # load x3 with value 0xd574ec76
sw x3, 0(x2) # store 0xd574ec76 in memory
flw f29, 0(x2) # load 0xd574ec76 from memory into f29
fmadd.s f6, f31, f16, f29, dyn # perform operation
fmadd.s f6, f31, f16, f29, rdn # perform operation
fmadd.s f6, f31, f16, f29, rmm # perform operation
fmadd.s f6, f31, f16, f29, rne # perform operation
fmadd.s f6, f31, f16, f29, rtz # perform operation
fmadd.s f6, f31, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f31, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f31, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x18, 0x3e849b3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x873a2391 # load x3 with value 0x873a2391
sw x3, 0(x2) # store 0x873a2391 in memory
flw f6, 0(x2) # load 0x873a2391 from memory into f6
fmadd.s f18, f14, f25, f6, dyn # perform operation
fmadd.s f18, f14, f25, f6, rdn # perform operation
fmadd.s f18, f14, f25, f6, rmm # perform operation
fmadd.s f18, f14, f25, f6, rne # perform operation
fmadd.s f18, f14, f25, f6, rtz # perform operation
fmadd.s f18, f14, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f14, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f14, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x28, 0xc7c6fa0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
li x3, 0xc2958fc6 # load x3 with value 0xc2958fc6
sw x3, 0(x2) # store 0xc2958fc6 in memory
flw f4, 0(x2) # load 0xc2958fc6 from memory into f4
fmadd.s f28, f6, f14, f4, dyn # perform operation
fmadd.s f28, f6, f14, f4, rdn # perform operation
fmadd.s f28, f6, f14, f4, rmm # perform operation
fmadd.s f28, f6, f14, f4, rne # perform operation
fmadd.s f28, f6, f14, f4, rtz # perform operation
fmadd.s f28, f6, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f6, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f6, f14, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x17, 0x9f14e67b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xa40eae30 # load x3 with value 0xa40eae30
sw x3, 0(x2) # store 0xa40eae30 in memory
flw f25, 0(x2) # load 0xa40eae30 from memory into f25
fmadd.s f17, f3, f19, f25, dyn # perform operation
fmadd.s f17, f3, f19, f25, rdn # perform operation
fmadd.s f17, f3, f19, f25, rmm # perform operation
fmadd.s f17, f3, f19, f25, rne # perform operation
fmadd.s f17, f3, f19, f25, rtz # perform operation
fmadd.s f17, f3, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x13, 0xcdcb17b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x3504781f # load x3 with value 0x3504781f
sw x3, 0(x2) # store 0x3504781f in memory
flw f7, 0(x2) # load 0x3504781f from memory into f7
fmadd.s f13, f21, f15, f7, dyn # perform operation
fmadd.s f13, f21, f15, f7, rdn # perform operation
fmadd.s f13, f21, f15, f7, rmm # perform operation
fmadd.s f13, f21, f15, f7, rne # perform operation
fmadd.s f13, f21, f15, f7, rtz # perform operation
fmadd.s f13, f21, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f15, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x9, 0x6cce5bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x9779ac01 # load x3 with value 0x9779ac01
sw x3, 0(x2) # store 0x9779ac01 in memory
flw f27, 0(x2) # load 0x9779ac01 from memory into f27
fmadd.s f9, f25, f7, f27, dyn # perform operation
fmadd.s f9, f25, f7, f27, rdn # perform operation
fmadd.s f9, f25, f7, f27, rmm # perform operation
fmadd.s f9, f25, f7, f27, rne # perform operation
fmadd.s f9, f25, f7, f27, rtz # perform operation
fmadd.s f9, f25, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f25, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f25, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f25, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f25, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f25, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x2, 0xe0d78113 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x3513d766 # load x3 with value 0x3513d766
sw x3, 0(x2) # store 0x3513d766 in memory
flw f29, 0(x2) # load 0x3513d766 from memory into f29
fmadd.s f2, f11, f27, f29, dyn # perform operation
fmadd.s f2, f11, f27, f29, rdn # perform operation
fmadd.s f2, f11, f27, f29, rmm # perform operation
fmadd.s f2, f11, f27, f29, rne # perform operation
fmadd.s f2, f11, f27, f29, rtz # perform operation
fmadd.s f2, f11, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f11, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f11, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f11, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f11, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f11, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x12, 0x30eb7ffa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x862599e4 # load x3 with value 0x862599e4
sw x3, 0(x2) # store 0x862599e4 in memory
flw f24, 0(x2) # load 0x862599e4 from memory into f24
fmadd.s f12, f2, f14, f24, dyn # perform operation
fmadd.s f12, f2, f14, f24, rdn # perform operation
fmadd.s f12, f2, f14, f24, rmm # perform operation
fmadd.s f12, f2, f14, f24, rne # perform operation
fmadd.s f12, f2, f14, f24, rtz # perform operation
fmadd.s f12, f2, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f2, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f2, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x9, 0x56ac35db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x56f9b333 # load x3 with value 0x56f9b333
sw x3, 0(x2) # store 0x56f9b333 in memory
flw f23, 0(x2) # load 0x56f9b333 from memory into f23
fmadd.s f9, f21, f1, f23, dyn # perform operation
fmadd.s f9, f21, f1, f23, rdn # perform operation
fmadd.s f9, f21, f1, f23, rmm # perform operation
fmadd.s f9, f21, f1, f23, rne # perform operation
fmadd.s f9, f21, f1, f23, rtz # perform operation
fmadd.s f9, f21, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f1, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x20, 0x8f4ef4cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xb8391dc7 # load x3 with value 0xb8391dc7
sw x3, 0(x2) # store 0xb8391dc7 in memory
flw f31, 0(x2) # load 0xb8391dc7 from memory into f31
fmadd.s f20, f30, f12, f31, dyn # perform operation
fmadd.s f20, f30, f12, f31, rdn # perform operation
fmadd.s f20, f30, f12, f31, rmm # perform operation
fmadd.s f20, f30, f12, f31, rne # perform operation
fmadd.s f20, f30, f12, f31, rtz # perform operation
fmadd.s f20, f30, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f12, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x8, 0x8b60b2a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0xdccb9d06 # load x3 with value 0xdccb9d06
sw x3, 0(x2) # store 0xdccb9d06 in memory
flw f18, 0(x2) # load 0xdccb9d06 from memory into f18
fmadd.s f8, f31, f27, f18, dyn # perform operation
fmadd.s f8, f31, f27, f18, rdn # perform operation
fmadd.s f8, f31, f27, f18, rmm # perform operation
fmadd.s f8, f31, f27, f18, rne # perform operation
fmadd.s f8, f31, f27, f18, rtz # perform operation
fmadd.s f8, f31, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x9, 0xc14076ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x78523332 # load x3 with value 0x78523332
sw x3, 0(x2) # store 0x78523332 in memory
flw f25, 0(x2) # load 0x78523332 from memory into f25
fmadd.s f9, f28, f8, f25, dyn # perform operation
fmadd.s f9, f28, f8, f25, rdn # perform operation
fmadd.s f9, f28, f8, f25, rmm # perform operation
fmadd.s f9, f28, f8, f25, rne # perform operation
fmadd.s f9, f28, f8, f25, rtz # perform operation
fmadd.s f9, f28, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f8, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x8, 0x57803202 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x02441f13 # load x3 with value 0x02441f13
sw x3, 0(x2) # store 0x02441f13 in memory
flw f31, 0(x2) # load 0x02441f13 from memory into f31
fmadd.s f8, f10, f25, f31, dyn # perform operation
fmadd.s f8, f10, f25, f31, rdn # perform operation
fmadd.s f8, f10, f25, f31, rmm # perform operation
fmadd.s f8, f10, f25, f31, rne # perform operation
fmadd.s f8, f10, f25, f31, rtz # perform operation
fmadd.s f8, f10, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f25, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x17, 0x45691b76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xe592d114 # load x3 with value 0xe592d114
sw x3, 0(x2) # store 0xe592d114 in memory
flw f26, 0(x2) # load 0xe592d114 from memory into f26
fmadd.s f17, f28, f1, f26, dyn # perform operation
fmadd.s f17, f28, f1, f26, rdn # perform operation
fmadd.s f17, f28, f1, f26, rmm # perform operation
fmadd.s f17, f28, f1, f26, rne # perform operation
fmadd.s f17, f28, f1, f26, rtz # perform operation
fmadd.s f17, f28, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f1, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x23, 0x5a001aeb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x38fa6dbf # load x3 with value 0x38fa6dbf
sw x3, 0(x2) # store 0x38fa6dbf in memory
flw f21, 0(x2) # load 0x38fa6dbf from memory into f21
fmadd.s f23, f7, f6, f21, dyn # perform operation
fmadd.s f23, f7, f6, f21, rdn # perform operation
fmadd.s f23, f7, f6, f21, rmm # perform operation
fmadd.s f23, f7, f6, f21, rne # perform operation
fmadd.s f23, f7, f6, f21, rtz # perform operation
fmadd.s f23, f7, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x3, 0x88685681 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x843023c1 # load x3 with value 0x843023c1
sw x3, 0(x2) # store 0x843023c1 in memory
flw f29, 0(x2) # load 0x843023c1 from memory into f29
fmadd.s f3, f15, f24, f29, dyn # perform operation
fmadd.s f3, f15, f24, f29, rdn # perform operation
fmadd.s f3, f15, f24, f29, rmm # perform operation
fmadd.s f3, f15, f24, f29, rne # perform operation
fmadd.s f3, f15, f24, f29, rtz # perform operation
fmadd.s f3, f15, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f24, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x1, 0x9e520144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x7e91fc0c # load x3 with value 0x7e91fc0c
sw x3, 0(x2) # store 0x7e91fc0c in memory
flw f11, 0(x2) # load 0x7e91fc0c from memory into f11
fmadd.s f1, f14, f13, f11, dyn # perform operation
fmadd.s f1, f14, f13, f11, rdn # perform operation
fmadd.s f1, f14, f13, f11, rmm # perform operation
fmadd.s f1, f14, f13, f11, rne # perform operation
fmadd.s f1, f14, f13, f11, rtz # perform operation
fmadd.s f1, f14, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f13, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x2, 0x9defd953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0xef0bc955 # load x3 with value 0xef0bc955
sw x3, 0(x2) # store 0xef0bc955 in memory
flw f3, 0(x2) # load 0xef0bc955 from memory into f3
fmadd.s f2, f29, f19, f3, dyn # perform operation
fmadd.s f2, f29, f19, f3, rdn # perform operation
fmadd.s f2, f29, f19, f3, rmm # perform operation
fmadd.s f2, f29, f19, f3, rne # perform operation
fmadd.s f2, f29, f19, f3, rtz # perform operation
fmadd.s f2, f29, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f19, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x12, 0x9d52f9d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xdd269bc5 # load x3 with value 0xdd269bc5
sw x3, 0(x2) # store 0xdd269bc5 in memory
flw f14, 0(x2) # load 0xdd269bc5 from memory into f14
fmadd.s f12, f6, f28, f14, dyn # perform operation
fmadd.s f12, f6, f28, f14, rdn # perform operation
fmadd.s f12, f6, f28, f14, rmm # perform operation
fmadd.s f12, f6, f28, f14, rne # perform operation
fmadd.s f12, f6, f28, f14, rtz # perform operation
fmadd.s f12, f6, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x19, 0x1000c287 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x77e9e7da # load x3 with value 0x77e9e7da
sw x3, 0(x2) # store 0x77e9e7da in memory
flw f18, 0(x2) # load 0x77e9e7da from memory into f18
fmadd.s f19, f11, f17, f18, dyn # perform operation
fmadd.s f19, f11, f17, f18, rdn # perform operation
fmadd.s f19, f11, f17, f18, rmm # perform operation
fmadd.s f19, f11, f17, f18, rne # perform operation
fmadd.s f19, f11, f17, f18, rtz # perform operation
fmadd.s f19, f11, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x23, 0x333abdb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x41168135 # load x3 with value 0x41168135
sw x3, 0(x2) # store 0x41168135 in memory
flw f25, 0(x2) # load 0x41168135 from memory into f25
fmadd.s f23, f16, f29, f25, dyn # perform operation
fmadd.s f23, f16, f29, f25, rdn # perform operation
fmadd.s f23, f16, f29, f25, rmm # perform operation
fmadd.s f23, f16, f29, f25, rne # perform operation
fmadd.s f23, f16, f29, f25, rtz # perform operation
fmadd.s f23, f16, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f29, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x10, 0x6f6a9e78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xe26f51d9 # load x3 with value 0xe26f51d9
sw x3, 0(x2) # store 0xe26f51d9 in memory
flw f17, 0(x2) # load 0xe26f51d9 from memory into f17
fmadd.s f10, f13, f4, f17, dyn # perform operation
fmadd.s f10, f13, f4, f17, rdn # perform operation
fmadd.s f10, f13, f4, f17, rmm # perform operation
fmadd.s f10, f13, f4, f17, rne # perform operation
fmadd.s f10, f13, f4, f17, rtz # perform operation
fmadd.s f10, f13, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f4, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x20, 0x541ad045 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xef9c7b54 # load x3 with value 0xef9c7b54
sw x3, 0(x2) # store 0xef9c7b54 in memory
flw f23, 0(x2) # load 0xef9c7b54 from memory into f23
fmadd.s f20, f27, f22, f23, dyn # perform operation
fmadd.s f20, f27, f22, f23, rdn # perform operation
fmadd.s f20, f27, f22, f23, rmm # perform operation
fmadd.s f20, f27, f22, f23, rne # perform operation
fmadd.s f20, f27, f22, f23, rtz # perform operation
fmadd.s f20, f27, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f22, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x6, 0xa8926587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x02238a4d # load x3 with value 0x02238a4d
sw x3, 0(x2) # store 0x02238a4d in memory
flw f3, 0(x2) # load 0x02238a4d from memory into f3
fmadd.s f6, f7, f31, f3, dyn # perform operation
fmadd.s f6, f7, f31, f3, rdn # perform operation
fmadd.s f6, f7, f31, f3, rmm # perform operation
fmadd.s f6, f7, f31, f3, rne # perform operation
fmadd.s f6, f7, f31, f3, rtz # perform operation
fmadd.s f6, f7, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f31, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x20, 0x66bd8f5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x916ba73a # load x3 with value 0x916ba73a
sw x3, 0(x2) # store 0x916ba73a in memory
flw f6, 0(x2) # load 0x916ba73a from memory into f6
fmadd.s f20, f10, f21, f6, dyn # perform operation
fmadd.s f20, f10, f21, f6, rdn # perform operation
fmadd.s f20, f10, f21, f6, rmm # perform operation
fmadd.s f20, f10, f21, f6, rne # perform operation
fmadd.s f20, f10, f21, f6, rtz # perform operation
fmadd.s f20, f10, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x11, 0x425169d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x3c54fbb3 # load x3 with value 0x3c54fbb3
sw x3, 0(x2) # store 0x3c54fbb3 in memory
flw f24, 0(x2) # load 0x3c54fbb3 from memory into f24
fmadd.s f11, f19, f20, f24, dyn # perform operation
fmadd.s f11, f19, f20, f24, rdn # perform operation
fmadd.s f11, f19, f20, f24, rmm # perform operation
fmadd.s f11, f19, f20, f24, rne # perform operation
fmadd.s f11, f19, f20, f24, rtz # perform operation
fmadd.s f11, f19, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x27, 0x3afbbece # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x5dfb9b6b # load x3 with value 0x5dfb9b6b
sw x3, 0(x2) # store 0x5dfb9b6b in memory
flw f19, 0(x2) # load 0x5dfb9b6b from memory into f19
fmadd.s f27, f15, f18, f19, dyn # perform operation
fmadd.s f27, f15, f18, f19, rdn # perform operation
fmadd.s f27, f15, f18, f19, rmm # perform operation
fmadd.s f27, f15, f18, f19, rne # perform operation
fmadd.s f27, f15, f18, f19, rtz # perform operation
fmadd.s f27, f15, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f15, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f15, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x24, 0xe736fb64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x58cffe20 # load x3 with value 0x58cffe20
sw x3, 0(x2) # store 0x58cffe20 in memory
flw f19, 0(x2) # load 0x58cffe20 from memory into f19
fmadd.s f24, f12, f14, f19, dyn # perform operation
fmadd.s f24, f12, f14, f19, rdn # perform operation
fmadd.s f24, f12, f14, f19, rmm # perform operation
fmadd.s f24, f12, f14, f19, rne # perform operation
fmadd.s f24, f12, f14, f19, rtz # perform operation
fmadd.s f24, f12, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f14, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x20, 0xbba17e6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
li x3, 0xb59ac19f # load x3 with value 0xb59ac19f
sw x3, 0(x2) # store 0xb59ac19f in memory
flw f11, 0(x2) # load 0xb59ac19f from memory into f11
fmadd.s f20, f26, f30, f11, dyn # perform operation
fmadd.s f20, f26, f30, f11, rdn # perform operation
fmadd.s f20, f26, f30, f11, rmm # perform operation
fmadd.s f20, f26, f30, f11, rne # perform operation
fmadd.s f20, f26, f30, f11, rtz # perform operation
fmadd.s f20, f26, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x31, 0x6aefc029 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x08dac7bf # load x3 with value 0x08dac7bf
sw x3, 0(x2) # store 0x08dac7bf in memory
flw f15, 0(x2) # load 0x08dac7bf from memory into f15
fmadd.s f31, f3, f4, f15, dyn # perform operation
fmadd.s f31, f3, f4, f15, rdn # perform operation
fmadd.s f31, f3, f4, f15, rmm # perform operation
fmadd.s f31, f3, f4, f15, rne # perform operation
fmadd.s f31, f3, f4, f15, rtz # perform operation
fmadd.s f31, f3, f4, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f4, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f4, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f4, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f4, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f4, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x17, 0x9789f360 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0xcdb1a143 # load x3 with value 0xcdb1a143
sw x3, 0(x2) # store 0xcdb1a143 in memory
flw f23, 0(x2) # load 0xcdb1a143 from memory into f23
fmadd.s f17, f26, f6, f23, dyn # perform operation
fmadd.s f17, f26, f6, f23, rdn # perform operation
fmadd.s f17, f26, f6, f23, rmm # perform operation
fmadd.s f17, f26, f6, f23, rne # perform operation
fmadd.s f17, f26, f6, f23, rtz # perform operation
fmadd.s f17, f26, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x14, 0x88030b8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x4d6f2973 # load x3 with value 0x4d6f2973
sw x3, 0(x2) # store 0x4d6f2973 in memory
flw f28, 0(x2) # load 0x4d6f2973 from memory into f28
fmadd.s f14, f7, f29, f28, dyn # perform operation
fmadd.s f14, f7, f29, f28, rdn # perform operation
fmadd.s f14, f7, f29, f28, rmm # perform operation
fmadd.s f14, f7, f29, f28, rne # perform operation
fmadd.s f14, f7, f29, f28, rtz # perform operation
fmadd.s f14, f7, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x17, 0xe8da269e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x141424ba # load x3 with value 0x141424ba
sw x3, 0(x2) # store 0x141424ba in memory
flw f15, 0(x2) # load 0x141424ba from memory into f15
fmadd.s f17, f3, f23, f15, dyn # perform operation
fmadd.s f17, f3, f23, f15, rdn # perform operation
fmadd.s f17, f3, f23, f15, rmm # perform operation
fmadd.s f17, f3, f23, f15, rne # perform operation
fmadd.s f17, f3, f23, f15, rtz # perform operation
fmadd.s f17, f3, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x8, 0xb39d3eaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x4e0e38c9 # load x3 with value 0x4e0e38c9
sw x3, 0(x2) # store 0x4e0e38c9 in memory
flw f22, 0(x2) # load 0x4e0e38c9 from memory into f22
fmadd.s f8, f2, f9, f22, dyn # perform operation
fmadd.s f8, f2, f9, f22, rdn # perform operation
fmadd.s f8, f2, f9, f22, rmm # perform operation
fmadd.s f8, f2, f9, f22, rne # perform operation
fmadd.s f8, f2, f9, f22, rtz # perform operation
fmadd.s f8, f2, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f9, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x9, 0x64b96b0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x0ae6d0ee # load x3 with value 0x0ae6d0ee
sw x3, 0(x2) # store 0x0ae6d0ee in memory
flw f14, 0(x2) # load 0x0ae6d0ee from memory into f14
fmadd.s f9, f26, f28, f14, dyn # perform operation
fmadd.s f9, f26, f28, f14, rdn # perform operation
fmadd.s f9, f26, f28, f14, rmm # perform operation
fmadd.s f9, f26, f28, f14, rne # perform operation
fmadd.s f9, f26, f28, f14, rtz # perform operation
fmadd.s f9, f26, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x8, 0xfdd535f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x19ddd173 # load x3 with value 0x19ddd173
sw x3, 0(x2) # store 0x19ddd173 in memory
flw f22, 0(x2) # load 0x19ddd173 from memory into f22
fmadd.s f8, f23, f19, f22, dyn # perform operation
fmadd.s f8, f23, f19, f22, rdn # perform operation
fmadd.s f8, f23, f19, f22, rmm # perform operation
fmadd.s f8, f23, f19, f22, rne # perform operation
fmadd.s f8, f23, f19, f22, rtz # perform operation
fmadd.s f8, f23, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x6, 0xad0904fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x7a0c052a # load x3 with value 0x7a0c052a
sw x3, 0(x2) # store 0x7a0c052a in memory
flw f24, 0(x2) # load 0x7a0c052a from memory into f24
fmadd.s f6, f5, f11, f24, dyn # perform operation
fmadd.s f6, f5, f11, f24, rdn # perform operation
fmadd.s f6, f5, f11, f24, rmm # perform operation
fmadd.s f6, f5, f11, f24, rne # perform operation
fmadd.s f6, f5, f11, f24, rtz # perform operation
fmadd.s f6, f5, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f11, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x6, 0x3f00eeaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x0e0fd67c # load x3 with value 0x0e0fd67c
sw x3, 0(x2) # store 0x0e0fd67c in memory
flw f22, 0(x2) # load 0x0e0fd67c from memory into f22
fmadd.s f6, f2, f15, f22, dyn # perform operation
fmadd.s f6, f2, f15, f22, rdn # perform operation
fmadd.s f6, f2, f15, f22, rmm # perform operation
fmadd.s f6, f2, f15, f22, rne # perform operation
fmadd.s f6, f2, f15, f22, rtz # perform operation
fmadd.s f6, f2, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f2, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x21, 0x6da6d4c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xc9fd4523 # load x3 with value 0xc9fd4523
sw x3, 0(x2) # store 0xc9fd4523 in memory
flw f3, 0(x2) # load 0xc9fd4523 from memory into f3
fmadd.s f21, f31, f26, f3, dyn # perform operation
fmadd.s f21, f31, f26, f3, rdn # perform operation
fmadd.s f21, f31, f26, f3, rmm # perform operation
fmadd.s f21, f31, f26, f3, rne # perform operation
fmadd.s f21, f31, f26, f3, rtz # perform operation
fmadd.s f21, f31, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x8, 0xe62cb548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x20f1602f # load x3 with value 0x20f1602f
sw x3, 0(x2) # store 0x20f1602f in memory
flw f14, 0(x2) # load 0x20f1602f from memory into f14
fmadd.s f8, f20, f2, f14, dyn # perform operation
fmadd.s f8, f20, f2, f14, rdn # perform operation
fmadd.s f8, f20, f2, f14, rmm # perform operation
fmadd.s f8, f20, f2, f14, rne # perform operation
fmadd.s f8, f20, f2, f14, rtz # perform operation
fmadd.s f8, f20, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f2, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x1, 0x8f49bbb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xe6e7f189 # load x3 with value 0xe6e7f189
sw x3, 0(x2) # store 0xe6e7f189 in memory
flw f6, 0(x2) # load 0xe6e7f189 from memory into f6
fmadd.s f1, f14, f29, f6, dyn # perform operation
fmadd.s f1, f14, f29, f6, rdn # perform operation
fmadd.s f1, f14, f29, f6, rmm # perform operation
fmadd.s f1, f14, f29, f6, rne # perform operation
fmadd.s f1, f14, f29, f6, rtz # perform operation
fmadd.s f1, f14, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x14, 0x61d23718 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x1e935256 # load x3 with value 0x1e935256
sw x3, 0(x2) # store 0x1e935256 in memory
flw f31, 0(x2) # load 0x1e935256 from memory into f31
fmadd.s f14, f22, f8, f31, dyn # perform operation
fmadd.s f14, f22, f8, f31, rdn # perform operation
fmadd.s f14, f22, f8, f31, rmm # perform operation
fmadd.s f14, f22, f8, f31, rne # perform operation
fmadd.s f14, f22, f8, f31, rtz # perform operation
fmadd.s f14, f22, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f22, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f22, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f22, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f22, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f22, f8, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x7, 0x4135e7a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x4b17aaa1 # load x3 with value 0x4b17aaa1
sw x3, 0(x2) # store 0x4b17aaa1 in memory
flw f10, 0(x2) # load 0x4b17aaa1 from memory into f10
fmadd.s f7, f11, f6, f10, dyn # perform operation
fmadd.s f7, f11, f6, f10, rdn # perform operation
fmadd.s f7, f11, f6, f10, rmm # perform operation
fmadd.s f7, f11, f6, f10, rne # perform operation
fmadd.s f7, f11, f6, f10, rtz # perform operation
fmadd.s f7, f11, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x9, 0xb20f73f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x0d396a35 # load x3 with value 0x0d396a35
sw x3, 0(x2) # store 0x0d396a35 in memory
flw f23, 0(x2) # load 0x0d396a35 from memory into f23
fmadd.s f9, f1, f6, f23, dyn # perform operation
fmadd.s f9, f1, f6, f23, rdn # perform operation
fmadd.s f9, f1, f6, f23, rmm # perform operation
fmadd.s f9, f1, f6, f23, rne # perform operation
fmadd.s f9, f1, f6, f23, rtz # perform operation
fmadd.s f9, f1, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f6, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x26, 0x7a7bee70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xe67f5ca5 # load x3 with value 0xe67f5ca5
sw x3, 0(x2) # store 0xe67f5ca5 in memory
flw f4, 0(x2) # load 0xe67f5ca5 from memory into f4
fmadd.s f26, f3, f29, f4, dyn # perform operation
fmadd.s f26, f3, f29, f4, rdn # perform operation
fmadd.s f26, f3, f29, f4, rmm # perform operation
fmadd.s f26, f3, f29, f4, rne # perform operation
fmadd.s f26, f3, f29, f4, rtz # perform operation
fmadd.s f26, f3, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f29, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x17, 0x967605b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x10c846f0 # load x3 with value 0x10c846f0
sw x3, 0(x2) # store 0x10c846f0 in memory
flw f26, 0(x2) # load 0x10c846f0 from memory into f26
fmadd.s f17, f25, f27, f26, dyn # perform operation
fmadd.s f17, f25, f27, f26, rdn # perform operation
fmadd.s f17, f25, f27, f26, rmm # perform operation
fmadd.s f17, f25, f27, f26, rne # perform operation
fmadd.s f17, f25, f27, f26, rtz # perform operation
fmadd.s f17, f25, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f27, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x29, 0x27842a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xcee4ef67 # load x3 with value 0xcee4ef67
sw x3, 0(x2) # store 0xcee4ef67 in memory
flw f27, 0(x2) # load 0xcee4ef67 from memory into f27
fmadd.s f29, f14, f15, f27, dyn # perform operation
fmadd.s f29, f14, f15, f27, rdn # perform operation
fmadd.s f29, f14, f15, f27, rmm # perform operation
fmadd.s f29, f14, f15, f27, rne # perform operation
fmadd.s f29, f14, f15, f27, rtz # perform operation
fmadd.s f29, f14, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f15, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x5, 0x31d612b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x2dcefd4f # load x3 with value 0x2dcefd4f
sw x3, 0(x2) # store 0x2dcefd4f in memory
flw f8, 0(x2) # load 0x2dcefd4f from memory into f8
fmadd.s f5, f7, f12, f8, dyn # perform operation
fmadd.s f5, f7, f12, f8, rdn # perform operation
fmadd.s f5, f7, f12, f8, rmm # perform operation
fmadd.s f5, f7, f12, f8, rne # perform operation
fmadd.s f5, f7, f12, f8, rtz # perform operation
fmadd.s f5, f7, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x27, 0x647f044a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x8bcf46bd # load x3 with value 0x8bcf46bd
sw x3, 0(x2) # store 0x8bcf46bd in memory
flw f24, 0(x2) # load 0x8bcf46bd from memory into f24
fmadd.s f27, f26, f14, f24, dyn # perform operation
fmadd.s f27, f26, f14, f24, rdn # perform operation
fmadd.s f27, f26, f14, f24, rmm # perform operation
fmadd.s f27, f26, f14, f24, rne # perform operation
fmadd.s f27, f26, f14, f24, rtz # perform operation
fmadd.s f27, f26, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f14, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x19, 0x76a65e34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x84743a89 # load x3 with value 0x84743a89
sw x3, 0(x2) # store 0x84743a89 in memory
flw f5, 0(x2) # load 0x84743a89 from memory into f5
fmadd.s f19, f3, f13, f5, dyn # perform operation
fmadd.s f19, f3, f13, f5, rdn # perform operation
fmadd.s f19, f3, f13, f5, rmm # perform operation
fmadd.s f19, f3, f13, f5, rne # perform operation
fmadd.s f19, f3, f13, f5, rtz # perform operation
fmadd.s f19, f3, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f13, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x7, 0x9230f59f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x553ea96f # load x3 with value 0x553ea96f
sw x3, 0(x2) # store 0x553ea96f in memory
flw f1, 0(x2) # load 0x553ea96f from memory into f1
fmadd.s f7, f10, f22, f1, dyn # perform operation
fmadd.s f7, f10, f22, f1, rdn # perform operation
fmadd.s f7, f10, f22, f1, rmm # perform operation
fmadd.s f7, f10, f22, f1, rne # perform operation
fmadd.s f7, f10, f22, f1, rtz # perform operation
fmadd.s f7, f10, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x11, 0x049a3b6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0xb3da8153 # load x3 with value 0xb3da8153
sw x3, 0(x2) # store 0xb3da8153 in memory
flw f15, 0(x2) # load 0xb3da8153 from memory into f15
fmadd.s f11, f5, f22, f15, dyn # perform operation
fmadd.s f11, f5, f22, f15, rdn # perform operation
fmadd.s f11, f5, f22, f15, rmm # perform operation
fmadd.s f11, f5, f22, f15, rne # perform operation
fmadd.s f11, f5, f22, f15, rtz # perform operation
fmadd.s f11, f5, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f5, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f5, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f5, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f5, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f5, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x23, 0xb804c180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xc2fae571 # load x3 with value 0xc2fae571
sw x3, 0(x2) # store 0xc2fae571 in memory
flw f31, 0(x2) # load 0xc2fae571 from memory into f31
fmadd.s f23, f9, f20, f31, dyn # perform operation
fmadd.s f23, f9, f20, f31, rdn # perform operation
fmadd.s f23, f9, f20, f31, rmm # perform operation
fmadd.s f23, f9, f20, f31, rne # perform operation
fmadd.s f23, f9, f20, f31, rtz # perform operation
fmadd.s f23, f9, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f9, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f9, f20, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x29, 0x2359ba68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xe86b7c53 # load x3 with value 0xe86b7c53
sw x3, 0(x2) # store 0xe86b7c53 in memory
flw f14, 0(x2) # load 0xe86b7c53 from memory into f14
fmadd.s f29, f31, f4, f14, dyn # perform operation
fmadd.s f29, f31, f4, f14, rdn # perform operation
fmadd.s f29, f31, f4, f14, rmm # perform operation
fmadd.s f29, f31, f4, f14, rne # perform operation
fmadd.s f29, f31, f4, f14, rtz # perform operation
fmadd.s f29, f31, f4, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f4, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f4, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f4, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f4, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f4, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x15, 0x39ffa069 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xad4d2046 # load x3 with value 0xad4d2046
sw x3, 0(x2) # store 0xad4d2046 in memory
flw f29, 0(x2) # load 0xad4d2046 from memory into f29
fmadd.s f15, f27, f26, f29, dyn # perform operation
fmadd.s f15, f27, f26, f29, rdn # perform operation
fmadd.s f15, f27, f26, f29, rmm # perform operation
fmadd.s f15, f27, f26, f29, rne # perform operation
fmadd.s f15, f27, f26, f29, rtz # perform operation
fmadd.s f15, f27, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x15, 0x521897e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xce22bea7 # load x3 with value 0xce22bea7
sw x3, 0(x2) # store 0xce22bea7 in memory
flw f2, 0(x2) # load 0xce22bea7 from memory into f2
fmadd.s f15, f25, f11, f2, dyn # perform operation
fmadd.s f15, f25, f11, f2, rdn # perform operation
fmadd.s f15, f25, f11, f2, rmm # perform operation
fmadd.s f15, f25, f11, f2, rne # perform operation
fmadd.s f15, f25, f11, f2, rtz # perform operation
fmadd.s f15, f25, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x22, 0x54b569fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xf6f0214a # load x3 with value 0xf6f0214a
sw x3, 0(x2) # store 0xf6f0214a in memory
flw f17, 0(x2) # load 0xf6f0214a from memory into f17
fmadd.s f22, f1, f8, f17, dyn # perform operation
fmadd.s f22, f1, f8, f17, rdn # perform operation
fmadd.s f22, f1, f8, f17, rmm # perform operation
fmadd.s f22, f1, f8, f17, rne # perform operation
fmadd.s f22, f1, f8, f17, rtz # perform operation
fmadd.s f22, f1, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f8, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x23, 0x1ed3cc8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x49b2349e # load x3 with value 0x49b2349e
sw x3, 0(x2) # store 0x49b2349e in memory
flw f12, 0(x2) # load 0x49b2349e from memory into f12
fmadd.s f23, f14, f20, f12, dyn # perform operation
fmadd.s f23, f14, f20, f12, rdn # perform operation
fmadd.s f23, f14, f20, f12, rmm # perform operation
fmadd.s f23, f14, f20, f12, rne # perform operation
fmadd.s f23, f14, f20, f12, rtz # perform operation
fmadd.s f23, f14, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f20, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x16, 0x070cca0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x00c3525e # load x3 with value 0x00c3525e
sw x3, 0(x2) # store 0x00c3525e in memory
flw f13, 0(x2) # load 0x00c3525e from memory into f13
fmadd.s f16, f4, f15, f13, dyn # perform operation
fmadd.s f16, f4, f15, f13, rdn # perform operation
fmadd.s f16, f4, f15, f13, rmm # perform operation
fmadd.s f16, f4, f15, f13, rne # perform operation
fmadd.s f16, f4, f15, f13, rtz # perform operation
fmadd.s f16, f4, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f4, f15, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x9, 0x968ab47c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0x3e2ed17b # load x3 with value 0x3e2ed17b
sw x3, 0(x2) # store 0x3e2ed17b in memory
flw f21, 0(x2) # load 0x3e2ed17b from memory into f21
fmadd.s f9, f26, f16, f21, dyn # perform operation
fmadd.s f9, f26, f16, f21, rdn # perform operation
fmadd.s f9, f26, f16, f21, rmm # perform operation
fmadd.s f9, f26, f16, f21, rne # perform operation
fmadd.s f9, f26, f16, f21, rtz # perform operation
fmadd.s f9, f26, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x4, 0x694dc568 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x1cfdf3a9 # load x3 with value 0x1cfdf3a9
sw x3, 0(x2) # store 0x1cfdf3a9 in memory
flw f23, 0(x2) # load 0x1cfdf3a9 from memory into f23
fmadd.s f4, f26, f8, f23, dyn # perform operation
fmadd.s f4, f26, f8, f23, rdn # perform operation
fmadd.s f4, f26, f8, f23, rmm # perform operation
fmadd.s f4, f26, f8, f23, rne # perform operation
fmadd.s f4, f26, f8, f23, rtz # perform operation
fmadd.s f4, f26, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f26, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f26, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x1, 0x94c36957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xaaf7332b # load x3 with value 0xaaf7332b
sw x3, 0(x2) # store 0xaaf7332b in memory
flw f28, 0(x2) # load 0xaaf7332b from memory into f28
fmadd.s f1, f20, f30, f28, dyn # perform operation
fmadd.s f1, f20, f30, f28, rdn # perform operation
fmadd.s f1, f20, f30, f28, rmm # perform operation
fmadd.s f1, f20, f30, f28, rne # perform operation
fmadd.s f1, f20, f30, f28, rtz # perform operation
fmadd.s f1, f20, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x6, 0x8f01bf0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x9e9d19e4 # load x3 with value 0x9e9d19e4
sw x3, 0(x2) # store 0x9e9d19e4 in memory
flw f15, 0(x2) # load 0x9e9d19e4 from memory into f15
fmadd.s f6, f18, f24, f15, dyn # perform operation
fmadd.s f6, f18, f24, f15, rdn # perform operation
fmadd.s f6, f18, f24, f15, rmm # perform operation
fmadd.s f6, f18, f24, f15, rne # perform operation
fmadd.s f6, f18, f24, f15, rtz # perform operation
fmadd.s f6, f18, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x11, 0xf992e05f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x54b8abda # load x3 with value 0x54b8abda
sw x3, 0(x2) # store 0x54b8abda in memory
flw f23, 0(x2) # load 0x54b8abda from memory into f23
fmadd.s f11, f19, f17, f23, dyn # perform operation
fmadd.s f11, f19, f17, f23, rdn # perform operation
fmadd.s f11, f19, f17, f23, rmm # perform operation
fmadd.s f11, f19, f17, f23, rne # perform operation
fmadd.s f11, f19, f17, f23, rtz # perform operation
fmadd.s f11, f19, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f17, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x28, 0xd19b68e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x1448cda0 # load x3 with value 0x1448cda0
sw x3, 0(x2) # store 0x1448cda0 in memory
flw f4, 0(x2) # load 0x1448cda0 from memory into f4
fmadd.s f28, f16, f19, f4, dyn # perform operation
fmadd.s f28, f16, f19, f4, rdn # perform operation
fmadd.s f28, f16, f19, f4, rmm # perform operation
fmadd.s f28, f16, f19, f4, rne # perform operation
fmadd.s f28, f16, f19, f4, rtz # perform operation
fmadd.s f28, f16, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x6, 0xf35c54ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0xcd730d1d # load x3 with value 0xcd730d1d
sw x3, 0(x2) # store 0xcd730d1d in memory
flw f30, 0(x2) # load 0xcd730d1d from memory into f30
fmadd.s f6, f5, f29, f30, dyn # perform operation
fmadd.s f6, f5, f29, f30, rdn # perform operation
fmadd.s f6, f5, f29, f30, rmm # perform operation
fmadd.s f6, f5, f29, f30, rne # perform operation
fmadd.s f6, f5, f29, f30, rtz # perform operation
fmadd.s f6, f5, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f29, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x7, 0x520345a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x308dad0b # load x3 with value 0x308dad0b
sw x3, 0(x2) # store 0x308dad0b in memory
flw f18, 0(x2) # load 0x308dad0b from memory into f18
fmadd.s f7, f20, f30, f18, dyn # perform operation
fmadd.s f7, f20, f30, f18, rdn # perform operation
fmadd.s f7, f20, f30, f18, rmm # perform operation
fmadd.s f7, f20, f30, f18, rne # perform operation
fmadd.s f7, f20, f30, f18, rtz # perform operation
fmadd.s f7, f20, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f30, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x22, 0x74b90b87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x5b27d0d0 # load x3 with value 0x5b27d0d0
sw x3, 0(x2) # store 0x5b27d0d0 in memory
flw f24, 0(x2) # load 0x5b27d0d0 from memory into f24
fmadd.s f22, f20, f26, f24, dyn # perform operation
fmadd.s f22, f20, f26, f24, rdn # perform operation
fmadd.s f22, f20, f26, f24, rmm # perform operation
fmadd.s f22, f20, f26, f24, rne # perform operation
fmadd.s f22, f20, f26, f24, rtz # perform operation
fmadd.s f22, f20, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x10, 0xc6b4d379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0xafaa691a # load x3 with value 0xafaa691a
sw x3, 0(x2) # store 0xafaa691a in memory
flw f20, 0(x2) # load 0xafaa691a from memory into f20
fmadd.s f10, f22, f19, f20, dyn # perform operation
fmadd.s f10, f22, f19, f20, rdn # perform operation
fmadd.s f10, f22, f19, f20, rmm # perform operation
fmadd.s f10, f22, f19, f20, rne # perform operation
fmadd.s f10, f22, f19, f20, rtz # perform operation
fmadd.s f10, f22, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x17, 0xfd4a3d3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x5022be01 # load x3 with value 0x5022be01
sw x3, 0(x2) # store 0x5022be01 in memory
flw f2, 0(x2) # load 0x5022be01 from memory into f2
fmadd.s f17, f22, f14, f2, dyn # perform operation
fmadd.s f17, f22, f14, f2, rdn # perform operation
fmadd.s f17, f22, f14, f2, rmm # perform operation
fmadd.s f17, f22, f14, f2, rne # perform operation
fmadd.s f17, f22, f14, f2, rtz # perform operation
fmadd.s f17, f22, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f22, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f22, f14, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x1, 0xf7f64cd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x1204e3cf # load x3 with value 0x1204e3cf
sw x3, 0(x2) # store 0x1204e3cf in memory
flw f25, 0(x2) # load 0x1204e3cf from memory into f25
fmadd.s f1, f19, f26, f25, dyn # perform operation
fmadd.s f1, f19, f26, f25, rdn # perform operation
fmadd.s f1, f19, f26, f25, rmm # perform operation
fmadd.s f1, f19, f26, f25, rne # perform operation
fmadd.s f1, f19, f26, f25, rtz # perform operation
fmadd.s f1, f19, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f26, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x30, 0x8695f89c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x3469f2ae # load x3 with value 0x3469f2ae
sw x3, 0(x2) # store 0x3469f2ae in memory
flw f6, 0(x2) # load 0x3469f2ae from memory into f6
fmadd.s f30, f11, f7, f6, dyn # perform operation
fmadd.s f30, f11, f7, f6, rdn # perform operation
fmadd.s f30, f11, f7, f6, rmm # perform operation
fmadd.s f30, f11, f7, f6, rne # perform operation
fmadd.s f30, f11, f7, f6, rtz # perform operation
fmadd.s f30, f11, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x12, 0x61f6b601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
li x3, 0x8f219acc # load x3 with value 0x8f219acc
sw x3, 0(x2) # store 0x8f219acc in memory
flw f5, 0(x2) # load 0x8f219acc from memory into f5
fmadd.s f12, f25, f1, f5, dyn # perform operation
fmadd.s f12, f25, f1, f5, rdn # perform operation
fmadd.s f12, f25, f1, f5, rmm # perform operation
fmadd.s f12, f25, f1, f5, rne # perform operation
fmadd.s f12, f25, f1, f5, rtz # perform operation
fmadd.s f12, f25, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f1, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x26, 0x39d49e62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x23d01aaa # load x3 with value 0x23d01aaa
sw x3, 0(x2) # store 0x23d01aaa in memory
flw f7, 0(x2) # load 0x23d01aaa from memory into f7
fmadd.s f26, f9, f18, f7, dyn # perform operation
fmadd.s f26, f9, f18, f7, rdn # perform operation
fmadd.s f26, f9, f18, f7, rmm # perform operation
fmadd.s f26, f9, f18, f7, rne # perform operation
fmadd.s f26, f9, f18, f7, rtz # perform operation
fmadd.s f26, f9, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f9, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f9, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x15, 0xce9b3541 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x16610bd6 # load x3 with value 0x16610bd6
sw x3, 0(x2) # store 0x16610bd6 in memory
flw f31, 0(x2) # load 0x16610bd6 from memory into f31
fmadd.s f15, f10, f6, f31, dyn # perform operation
fmadd.s f15, f10, f6, f31, rdn # perform operation
fmadd.s f15, f10, f6, f31, rmm # perform operation
fmadd.s f15, f10, f6, f31, rne # perform operation
fmadd.s f15, f10, f6, f31, rtz # perform operation
fmadd.s f15, f10, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x28, 0xf0c69b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x76fadf45 # load x3 with value 0x76fadf45
sw x3, 0(x2) # store 0x76fadf45 in memory
flw f23, 0(x2) # load 0x76fadf45 from memory into f23
fmadd.s f28, f7, f5, f23, dyn # perform operation
fmadd.s f28, f7, f5, f23, rdn # perform operation
fmadd.s f28, f7, f5, f23, rmm # perform operation
fmadd.s f28, f7, f5, f23, rne # perform operation
fmadd.s f28, f7, f5, f23, rtz # perform operation
fmadd.s f28, f7, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f5, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x9, 0x75b2ecb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0xce8f8a20 # load x3 with value 0xce8f8a20
sw x3, 0(x2) # store 0xce8f8a20 in memory
flw f31, 0(x2) # load 0xce8f8a20 from memory into f31
fmadd.s f9, f17, f10, f31, dyn # perform operation
fmadd.s f9, f17, f10, f31, rdn # perform operation
fmadd.s f9, f17, f10, f31, rmm # perform operation
fmadd.s f9, f17, f10, f31, rne # perform operation
fmadd.s f9, f17, f10, f31, rtz # perform operation
fmadd.s f9, f17, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x4, 0xcbed26a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x85e71119 # load x3 with value 0x85e71119
sw x3, 0(x2) # store 0x85e71119 in memory
flw f15, 0(x2) # load 0x85e71119 from memory into f15
fmadd.s f4, f18, f1, f15, dyn # perform operation
fmadd.s f4, f18, f1, f15, rdn # perform operation
fmadd.s f4, f18, f1, f15, rmm # perform operation
fmadd.s f4, f18, f1, f15, rne # perform operation
fmadd.s f4, f18, f1, f15, rtz # perform operation
fmadd.s f4, f18, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f18, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f18, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x13, 0xd3c6f9d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0xe74c4319 # load x3 with value 0xe74c4319
sw x3, 0(x2) # store 0xe74c4319 in memory
flw f27, 0(x2) # load 0xe74c4319 from memory into f27
fmadd.s f13, f28, f23, f27, dyn # perform operation
fmadd.s f13, f28, f23, f27, rdn # perform operation
fmadd.s f13, f28, f23, f27, rmm # perform operation
fmadd.s f13, f28, f23, f27, rne # perform operation
fmadd.s f13, f28, f23, f27, rtz # perform operation
fmadd.s f13, f28, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x31, 0x733a3ceb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x33160194 # load x3 with value 0x33160194
sw x3, 0(x2) # store 0x33160194 in memory
flw f19, 0(x2) # load 0x33160194 from memory into f19
fmadd.s f31, f5, f25, f19, dyn # perform operation
fmadd.s f31, f5, f25, f19, rdn # perform operation
fmadd.s f31, f5, f25, f19, rmm # perform operation
fmadd.s f31, f5, f25, f19, rne # perform operation
fmadd.s f31, f5, f25, f19, rtz # perform operation
fmadd.s f31, f5, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x12, 0xba1d20df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x6915c5ed # load x3 with value 0x6915c5ed
sw x3, 0(x2) # store 0x6915c5ed in memory
flw f6, 0(x2) # load 0x6915c5ed from memory into f6
fmadd.s f12, f23, f4, f6, dyn # perform operation
fmadd.s f12, f23, f4, f6, rdn # perform operation
fmadd.s f12, f23, f4, f6, rmm # perform operation
fmadd.s f12, f23, f4, f6, rne # perform operation
fmadd.s f12, f23, f4, f6, rtz # perform operation
fmadd.s f12, f23, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x9, 0x0243d0ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xdad97efe # load x3 with value 0xdad97efe
sw x3, 0(x2) # store 0xdad97efe in memory
flw f17, 0(x2) # load 0xdad97efe from memory into f17
fmadd.s f9, f2, f10, f17, dyn # perform operation
fmadd.s f9, f2, f10, f17, rdn # perform operation
fmadd.s f9, f2, f10, f17, rmm # perform operation
fmadd.s f9, f2, f10, f17, rne # perform operation
fmadd.s f9, f2, f10, f17, rtz # perform operation
fmadd.s f9, f2, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x30, 0x9e13bd8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xf8942850 # load x3 with value 0xf8942850
sw x3, 0(x2) # store 0xf8942850 in memory
flw f7, 0(x2) # load 0xf8942850 from memory into f7
fmadd.s f30, f11, f16, f7, dyn # perform operation
fmadd.s f30, f11, f16, f7, rdn # perform operation
fmadd.s f30, f11, f16, f7, rmm # perform operation
fmadd.s f30, f11, f16, f7, rne # perform operation
fmadd.s f30, f11, f16, f7, rtz # perform operation
fmadd.s f30, f11, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x14, 0xb7c85c4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0x3ca88cec # load x3 with value 0x3ca88cec
sw x3, 0(x2) # store 0x3ca88cec in memory
flw f29, 0(x2) # load 0x3ca88cec from memory into f29
fmadd.s f14, f17, f8, f29, dyn # perform operation
fmadd.s f14, f17, f8, f29, rdn # perform operation
fmadd.s f14, f17, f8, f29, rmm # perform operation
fmadd.s f14, f17, f8, f29, rne # perform operation
fmadd.s f14, f17, f8, f29, rtz # perform operation
fmadd.s f14, f17, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x25, 0x9f284a84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x630e66d3 # load x3 with value 0x630e66d3
sw x3, 0(x2) # store 0x630e66d3 in memory
flw f7, 0(x2) # load 0x630e66d3 from memory into f7
fmadd.s f25, f15, f20, f7, dyn # perform operation
fmadd.s f25, f15, f20, f7, rdn # perform operation
fmadd.s f25, f15, f20, f7, rmm # perform operation
fmadd.s f25, f15, f20, f7, rne # perform operation
fmadd.s f25, f15, f20, f7, rtz # perform operation
fmadd.s f25, f15, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x19, 0xa5ef2d20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xc55f7a54 # load x3 with value 0xc55f7a54
sw x3, 0(x2) # store 0xc55f7a54 in memory
flw f16, 0(x2) # load 0xc55f7a54 from memory into f16
fmadd.s f19, f15, f25, f16, dyn # perform operation
fmadd.s f19, f15, f25, f16, rdn # perform operation
fmadd.s f19, f15, f25, f16, rmm # perform operation
fmadd.s f19, f15, f25, f16, rne # perform operation
fmadd.s f19, f15, f25, f16, rtz # perform operation
fmadd.s f19, f15, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f25, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x29, 0xc0693812 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xfb49300e # load x3 with value 0xfb49300e
sw x3, 0(x2) # store 0xfb49300e in memory
flw f19, 0(x2) # load 0xfb49300e from memory into f19
fmadd.s f29, f11, f6, f19, dyn # perform operation
fmadd.s f29, f11, f6, f19, rdn # perform operation
fmadd.s f29, f11, f6, f19, rmm # perform operation
fmadd.s f29, f11, f6, f19, rne # perform operation
fmadd.s f29, f11, f6, f19, rtz # perform operation
fmadd.s f29, f11, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f6, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x2, 0x3782ea03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x7fff205a # load x3 with value 0x7fff205a
sw x3, 0(x2) # store 0x7fff205a in memory
flw f21, 0(x2) # load 0x7fff205a from memory into f21
fmadd.s f2, f4, f6, f21, dyn # perform operation
fmadd.s f2, f4, f6, f21, rdn # perform operation
fmadd.s f2, f4, f6, f21, rmm # perform operation
fmadd.s f2, f4, f6, f21, rne # perform operation
fmadd.s f2, f4, f6, f21, rtz # perform operation
fmadd.s f2, f4, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f4, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f4, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x19, 0x1a07d2c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x9d177ddb # load x3 with value 0x9d177ddb
sw x3, 0(x2) # store 0x9d177ddb in memory
flw f23, 0(x2) # load 0x9d177ddb from memory into f23
fmadd.s f19, f1, f13, f23, dyn # perform operation
fmadd.s f19, f1, f13, f23, rdn # perform operation
fmadd.s f19, f1, f13, f23, rmm # perform operation
fmadd.s f19, f1, f13, f23, rne # perform operation
fmadd.s f19, f1, f13, f23, rtz # perform operation
fmadd.s f19, f1, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f13, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x17, 0xf1bf9457 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x9426a8bb # load x3 with value 0x9426a8bb
sw x3, 0(x2) # store 0x9426a8bb in memory
flw f2, 0(x2) # load 0x9426a8bb from memory into f2
fmadd.s f17, f28, f6, f2, dyn # perform operation
fmadd.s f17, f28, f6, f2, rdn # perform operation
fmadd.s f17, f28, f6, f2, rmm # perform operation
fmadd.s f17, f28, f6, f2, rne # perform operation
fmadd.s f17, f28, f6, f2, rtz # perform operation
fmadd.s f17, f28, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f6, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x6, 0x1cdef041 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xfe929b2c # load x3 with value 0xfe929b2c
sw x3, 0(x2) # store 0xfe929b2c in memory
flw f27, 0(x2) # load 0xfe929b2c from memory into f27
fmadd.s f6, f28, f5, f27, dyn # perform operation
fmadd.s f6, f28, f5, f27, rdn # perform operation
fmadd.s f6, f28, f5, f27, rmm # perform operation
fmadd.s f6, f28, f5, f27, rne # perform operation
fmadd.s f6, f28, f5, f27, rtz # perform operation
fmadd.s f6, f28, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f5, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x28, 0xf793dc0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x258a9743 # load x3 with value 0x258a9743
sw x3, 0(x2) # store 0x258a9743 in memory
flw f22, 0(x2) # load 0x258a9743 from memory into f22
fmadd.s f28, f14, f31, f22, dyn # perform operation
fmadd.s f28, f14, f31, f22, rdn # perform operation
fmadd.s f28, f14, f31, f22, rmm # perform operation
fmadd.s f28, f14, f31, f22, rne # perform operation
fmadd.s f28, f14, f31, f22, rtz # perform operation
fmadd.s f28, f14, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f31, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x16, 0x10203383 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x7ef210d3 # load x3 with value 0x7ef210d3
sw x3, 0(x2) # store 0x7ef210d3 in memory
flw f31, 0(x2) # load 0x7ef210d3 from memory into f31
fmadd.s f16, f23, f27, f31, dyn # perform operation
fmadd.s f16, f23, f27, f31, rdn # perform operation
fmadd.s f16, f23, f27, f31, rmm # perform operation
fmadd.s f16, f23, f27, f31, rne # perform operation
fmadd.s f16, f23, f27, f31, rtz # perform operation
fmadd.s f16, f23, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f27, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x26, 0xac07883b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xc498a45d # load x3 with value 0xc498a45d
sw x3, 0(x2) # store 0xc498a45d in memory
flw f1, 0(x2) # load 0xc498a45d from memory into f1
fmadd.s f26, f3, f13, f1, dyn # perform operation
fmadd.s f26, f3, f13, f1, rdn # perform operation
fmadd.s f26, f3, f13, f1, rmm # perform operation
fmadd.s f26, f3, f13, f1, rne # perform operation
fmadd.s f26, f3, f13, f1, rtz # perform operation
fmadd.s f26, f3, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x27, 0xcf8a105a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0xd8021362 # load x3 with value 0xd8021362
sw x3, 0(x2) # store 0xd8021362 in memory
flw f20, 0(x2) # load 0xd8021362 from memory into f20
fmadd.s f27, f6, f5, f20, dyn # perform operation
fmadd.s f27, f6, f5, f20, rdn # perform operation
fmadd.s f27, f6, f5, f20, rmm # perform operation
fmadd.s f27, f6, f5, f20, rne # perform operation
fmadd.s f27, f6, f5, f20, rtz # perform operation
fmadd.s f27, f6, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f6, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f6, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x6, 0x3be2ba29 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x2fb3c2b5 # load x3 with value 0x2fb3c2b5
sw x3, 0(x2) # store 0x2fb3c2b5 in memory
flw f29, 0(x2) # load 0x2fb3c2b5 from memory into f29
fmadd.s f6, f24, f2, f29, dyn # perform operation
fmadd.s f6, f24, f2, f29, rdn # perform operation
fmadd.s f6, f24, f2, f29, rmm # perform operation
fmadd.s f6, f24, f2, f29, rne # perform operation
fmadd.s f6, f24, f2, f29, rtz # perform operation
fmadd.s f6, f24, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x15, 0xd28d346c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0xeef29a3e # load x3 with value 0xeef29a3e
sw x3, 0(x2) # store 0xeef29a3e in memory
flw f27, 0(x2) # load 0xeef29a3e from memory into f27
fmadd.s f15, f4, f11, f27, dyn # perform operation
fmadd.s f15, f4, f11, f27, rdn # perform operation
fmadd.s f15, f4, f11, f27, rmm # perform operation
fmadd.s f15, f4, f11, f27, rne # perform operation
fmadd.s f15, f4, f11, f27, rtz # perform operation
fmadd.s f15, f4, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f4, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f4, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f4, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f4, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f4, f11, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x6, 0xc90e1384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x0e73f08c # load x3 with value 0x0e73f08c
sw x3, 0(x2) # store 0x0e73f08c in memory
flw f26, 0(x2) # load 0x0e73f08c from memory into f26
fmadd.s f6, f1, f20, f26, dyn # perform operation
fmadd.s f6, f1, f20, f26, rdn # perform operation
fmadd.s f6, f1, f20, f26, rmm # perform operation
fmadd.s f6, f1, f20, f26, rne # perform operation
fmadd.s f6, f1, f20, f26, rtz # perform operation
fmadd.s f6, f1, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f20, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x26, 0x0fe73dd1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xd4edd899 # load x3 with value 0xd4edd899
sw x3, 0(x2) # store 0xd4edd899 in memory
flw f29, 0(x2) # load 0xd4edd899 from memory into f29
fmadd.s f26, f3, f7, f29, dyn # perform operation
fmadd.s f26, f3, f7, f29, rdn # perform operation
fmadd.s f26, f3, f7, f29, rmm # perform operation
fmadd.s f26, f3, f7, f29, rne # perform operation
fmadd.s f26, f3, f7, f29, rtz # perform operation
fmadd.s f26, f3, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f7, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x11, 0xd1259058 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x025ab153 # load x3 with value 0x025ab153
sw x3, 0(x2) # store 0x025ab153 in memory
flw f10, 0(x2) # load 0x025ab153 from memory into f10
fmadd.s f11, f19, f22, f10, dyn # perform operation
fmadd.s f11, f19, f22, f10, rdn # perform operation
fmadd.s f11, f19, f22, f10, rmm # perform operation
fmadd.s f11, f19, f22, f10, rne # perform operation
fmadd.s f11, f19, f22, f10, rtz # perform operation
fmadd.s f11, f19, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f22, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x15, 0x3ee813ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x4f89d2de # load x3 with value 0x4f89d2de
sw x3, 0(x2) # store 0x4f89d2de in memory
flw f6, 0(x2) # load 0x4f89d2de from memory into f6
fmadd.s f15, f23, f30, f6, dyn # perform operation
fmadd.s f15, f23, f30, f6, rdn # perform operation
fmadd.s f15, f23, f30, f6, rmm # perform operation
fmadd.s f15, f23, f30, f6, rne # perform operation
fmadd.s f15, f23, f30, f6, rtz # perform operation
fmadd.s f15, f23, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x20, 0xdc5af579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0x237f0c98 # load x3 with value 0x237f0c98
sw x3, 0(x2) # store 0x237f0c98 in memory
flw f7, 0(x2) # load 0x237f0c98 from memory into f7
fmadd.s f20, f10, f21, f7, dyn # perform operation
fmadd.s f20, f10, f21, f7, rdn # perform operation
fmadd.s f20, f10, f21, f7, rmm # perform operation
fmadd.s f20, f10, f21, f7, rne # perform operation
fmadd.s f20, f10, f21, f7, rtz # perform operation
fmadd.s f20, f10, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x26, 0x007c92f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x6438c740 # load x3 with value 0x6438c740
sw x3, 0(x2) # store 0x6438c740 in memory
flw f9, 0(x2) # load 0x6438c740 from memory into f9
fmadd.s f26, f28, f27, f9, dyn # perform operation
fmadd.s f26, f28, f27, f9, rdn # perform operation
fmadd.s f26, f28, f27, f9, rmm # perform operation
fmadd.s f26, f28, f27, f9, rne # perform operation
fmadd.s f26, f28, f27, f9, rtz # perform operation
fmadd.s f26, f28, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f27, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x20, 0x27ed1ef9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0xbced9af5 # load x3 with value 0xbced9af5
sw x3, 0(x2) # store 0xbced9af5 in memory
flw f29, 0(x2) # load 0xbced9af5 from memory into f29
fmadd.s f20, f4, f22, f29, dyn # perform operation
fmadd.s f20, f4, f22, f29, rdn # perform operation
fmadd.s f20, f4, f22, f29, rmm # perform operation
fmadd.s f20, f4, f22, f29, rne # perform operation
fmadd.s f20, f4, f22, f29, rtz # perform operation
fmadd.s f20, f4, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f4, f22, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x23, 0xc00b90bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x63835e63 # load x3 with value 0x63835e63
sw x3, 0(x2) # store 0x63835e63 in memory
flw f20, 0(x2) # load 0x63835e63 from memory into f20
fmadd.s f23, f27, f9, f20, dyn # perform operation
fmadd.s f23, f27, f9, f20, rdn # perform operation
fmadd.s f23, f27, f9, f20, rmm # perform operation
fmadd.s f23, f27, f9, f20, rne # perform operation
fmadd.s f23, f27, f9, f20, rtz # perform operation
fmadd.s f23, f27, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x21, 0xeb76a412 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x21f910a4 # load x3 with value 0x21f910a4
sw x3, 0(x2) # store 0x21f910a4 in memory
flw f23, 0(x2) # load 0x21f910a4 from memory into f23
fmadd.s f21, f26, f24, f23, dyn # perform operation
fmadd.s f21, f26, f24, f23, rdn # perform operation
fmadd.s f21, f26, f24, f23, rmm # perform operation
fmadd.s f21, f26, f24, f23, rne # perform operation
fmadd.s f21, f26, f24, f23, rtz # perform operation
fmadd.s f21, f26, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f26, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x23, 0x92957fef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xc15ea565 # load x3 with value 0xc15ea565
sw x3, 0(x2) # store 0xc15ea565 in memory
flw f1, 0(x2) # load 0xc15ea565 from memory into f1
fmadd.s f23, f5, f20, f1, dyn # perform operation
fmadd.s f23, f5, f20, f1, rdn # perform operation
fmadd.s f23, f5, f20, f1, rmm # perform operation
fmadd.s f23, f5, f20, f1, rne # perform operation
fmadd.s f23, f5, f20, f1, rtz # perform operation
fmadd.s f23, f5, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f20, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x18, 0x19e7d668 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x5156bc5f # load x3 with value 0x5156bc5f
sw x3, 0(x2) # store 0x5156bc5f in memory
flw f6, 0(x2) # load 0x5156bc5f from memory into f6
fmadd.s f18, f20, f30, f6, dyn # perform operation
fmadd.s f18, f20, f30, f6, rdn # perform operation
fmadd.s f18, f20, f30, f6, rmm # perform operation
fmadd.s f18, f20, f30, f6, rne # perform operation
fmadd.s f18, f20, f30, f6, rtz # perform operation
fmadd.s f18, f20, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x18, 0x82500745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x736b295d # load x3 with value 0x736b295d
sw x3, 0(x2) # store 0x736b295d in memory
flw f25, 0(x2) # load 0x736b295d from memory into f25
fmadd.s f18, f31, f1, f25, dyn # perform operation
fmadd.s f18, f31, f1, f25, rdn # perform operation
fmadd.s f18, f31, f1, f25, rmm # perform operation
fmadd.s f18, f31, f1, f25, rne # perform operation
fmadd.s f18, f31, f1, f25, rtz # perform operation
fmadd.s f18, f31, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f31, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f31, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x4, 0x4428e4f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x9c0285c1 # load x3 with value 0x9c0285c1
sw x3, 0(x2) # store 0x9c0285c1 in memory
flw f7, 0(x2) # load 0x9c0285c1 from memory into f7
fmadd.s f4, f26, f13, f7, dyn # perform operation
fmadd.s f4, f26, f13, f7, rdn # perform operation
fmadd.s f4, f26, f13, f7, rmm # perform operation
fmadd.s f4, f26, f13, f7, rne # perform operation
fmadd.s f4, f26, f13, f7, rtz # perform operation
fmadd.s f4, f26, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f26, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f26, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x16, 0xe7608d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x0d5ebc1b # load x3 with value 0x0d5ebc1b
sw x3, 0(x2) # store 0x0d5ebc1b in memory
flw f9, 0(x2) # load 0x0d5ebc1b from memory into f9
fmadd.s f16, f26, f13, f9, dyn # perform operation
fmadd.s f16, f26, f13, f9, rdn # perform operation
fmadd.s f16, f26, f13, f9, rmm # perform operation
fmadd.s f16, f26, f13, f9, rne # perform operation
fmadd.s f16, f26, f13, f9, rtz # perform operation
fmadd.s f16, f26, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f13, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x13, 0xc83ed6cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x5dd15116 # load x3 with value 0x5dd15116
sw x3, 0(x2) # store 0x5dd15116 in memory
flw f7, 0(x2) # load 0x5dd15116 from memory into f7
fmadd.s f13, f2, f22, f7, dyn # perform operation
fmadd.s f13, f2, f22, f7, rdn # perform operation
fmadd.s f13, f2, f22, f7, rmm # perform operation
fmadd.s f13, f2, f22, f7, rne # perform operation
fmadd.s f13, f2, f22, f7, rtz # perform operation
fmadd.s f13, f2, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x26, 0xbb0960d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x446ef215 # load x3 with value 0x446ef215
sw x3, 0(x2) # store 0x446ef215 in memory
flw f23, 0(x2) # load 0x446ef215 from memory into f23
fmadd.s f26, f15, f24, f23, dyn # perform operation
fmadd.s f26, f15, f24, f23, rdn # perform operation
fmadd.s f26, f15, f24, f23, rmm # perform operation
fmadd.s f26, f15, f24, f23, rne # perform operation
fmadd.s f26, f15, f24, f23, rtz # perform operation
fmadd.s f26, f15, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x21, 0x9f2e56d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x959fcf48 # load x3 with value 0x959fcf48
sw x3, 0(x2) # store 0x959fcf48 in memory
flw f1, 0(x2) # load 0x959fcf48 from memory into f1
fmadd.s f21, f27, f3, f1, dyn # perform operation
fmadd.s f21, f27, f3, f1, rdn # perform operation
fmadd.s f21, f27, f3, f1, rmm # perform operation
fmadd.s f21, f27, f3, f1, rne # perform operation
fmadd.s f21, f27, f3, f1, rtz # perform operation
fmadd.s f21, f27, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f3, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x4, 0xdab992d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0xc6e503e6 # load x3 with value 0xc6e503e6
sw x3, 0(x2) # store 0xc6e503e6 in memory
flw f21, 0(x2) # load 0xc6e503e6 from memory into f21
fmadd.s f4, f6, f28, f21, dyn # perform operation
fmadd.s f4, f6, f28, f21, rdn # perform operation
fmadd.s f4, f6, f28, f21, rmm # perform operation
fmadd.s f4, f6, f28, f21, rne # perform operation
fmadd.s f4, f6, f28, f21, rtz # perform operation
fmadd.s f4, f6, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f6, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f6, f28, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x9, 0xf2392c40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xad4b35f6 # load x3 with value 0xad4b35f6
sw x3, 0(x2) # store 0xad4b35f6 in memory
flw f6, 0(x2) # load 0xad4b35f6 from memory into f6
fmadd.s f9, f18, f26, f6, dyn # perform operation
fmadd.s f9, f18, f26, f6, rdn # perform operation
fmadd.s f9, f18, f26, f6, rmm # perform operation
fmadd.s f9, f18, f26, f6, rne # perform operation
fmadd.s f9, f18, f26, f6, rtz # perform operation
fmadd.s f9, f18, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f18, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f18, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f18, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f18, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f18, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x2, 0xd5bc7489 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x42ded4aa # load x3 with value 0x42ded4aa
sw x3, 0(x2) # store 0x42ded4aa in memory
flw f6, 0(x2) # load 0x42ded4aa from memory into f6
fmadd.s f2, f20, f23, f6, dyn # perform operation
fmadd.s f2, f20, f23, f6, rdn # perform operation
fmadd.s f2, f20, f23, f6, rmm # perform operation
fmadd.s f2, f20, f23, f6, rne # perform operation
fmadd.s f2, f20, f23, f6, rtz # perform operation
fmadd.s f2, f20, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f23, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x15, 0xd0e93d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0xcd776a47 # load x3 with value 0xcd776a47
sw x3, 0(x2) # store 0xcd776a47 in memory
flw f30, 0(x2) # load 0xcd776a47 from memory into f30
fmadd.s f15, f11, f13, f30, dyn # perform operation
fmadd.s f15, f11, f13, f30, rdn # perform operation
fmadd.s f15, f11, f13, f30, rmm # perform operation
fmadd.s f15, f11, f13, f30, rne # perform operation
fmadd.s f15, f11, f13, f30, rtz # perform operation
fmadd.s f15, f11, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f13, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x17, 0x37f5c86b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x5d650bd1 # load x3 with value 0x5d650bd1
sw x3, 0(x2) # store 0x5d650bd1 in memory
flw f19, 0(x2) # load 0x5d650bd1 from memory into f19
fmadd.s f17, f18, f22, f19, dyn # perform operation
fmadd.s f17, f18, f22, f19, rdn # perform operation
fmadd.s f17, f18, f22, f19, rmm # perform operation
fmadd.s f17, f18, f22, f19, rne # perform operation
fmadd.s f17, f18, f22, f19, rtz # perform operation
fmadd.s f17, f18, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x18, 0x409c724d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
li x3, 0x994ab0a1 # load x3 with value 0x994ab0a1
sw x3, 0(x2) # store 0x994ab0a1 in memory
flw f5, 0(x2) # load 0x994ab0a1 from memory into f5
fmadd.s f18, f8, f27, f5, dyn # perform operation
fmadd.s f18, f8, f27, f5, rdn # perform operation
fmadd.s f18, f8, f27, f5, rmm # perform operation
fmadd.s f18, f8, f27, f5, rne # perform operation
fmadd.s f18, f8, f27, f5, rtz # perform operation
fmadd.s f18, f8, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f27, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x11, 0xecf691f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xaf083531 # load x3 with value 0xaf083531
sw x3, 0(x2) # store 0xaf083531 in memory
flw f2, 0(x2) # load 0xaf083531 from memory into f2
fmadd.s f11, f13, f4, f2, dyn # perform operation
fmadd.s f11, f13, f4, f2, rdn # perform operation
fmadd.s f11, f13, f4, f2, rmm # perform operation
fmadd.s f11, f13, f4, f2, rne # perform operation
fmadd.s f11, f13, f4, f2, rtz # perform operation
fmadd.s f11, f13, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f13, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f13, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f13, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f13, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f13, f4, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x20, 0x7cdc9ce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xa267ee60 # load x3 with value 0xa267ee60
sw x3, 0(x2) # store 0xa267ee60 in memory
flw f9, 0(x2) # load 0xa267ee60 from memory into f9
fmadd.s f20, f30, f23, f9, dyn # perform operation
fmadd.s f20, f30, f23, f9, rdn # perform operation
fmadd.s f20, f30, f23, f9, rmm # perform operation
fmadd.s f20, f30, f23, f9, rne # perform operation
fmadd.s f20, f30, f23, f9, rtz # perform operation
fmadd.s f20, f30, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f23, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x9, 0xf6c629d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xe27babae # load x3 with value 0xe27babae
sw x3, 0(x2) # store 0xe27babae in memory
flw f21, 0(x2) # load 0xe27babae from memory into f21
fmadd.s f9, f7, f6, f21, dyn # perform operation
fmadd.s f9, f7, f6, f21, rdn # perform operation
fmadd.s f9, f7, f6, f21, rmm # perform operation
fmadd.s f9, f7, f6, f21, rne # perform operation
fmadd.s f9, f7, f6, f21, rtz # perform operation
fmadd.s f9, f7, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f6, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x20, 0x1744dc66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0xe6761045 # load x3 with value 0xe6761045
sw x3, 0(x2) # store 0xe6761045 in memory
flw f8, 0(x2) # load 0xe6761045 from memory into f8
fmadd.s f20, f23, f9, f8, dyn # perform operation
fmadd.s f20, f23, f9, f8, rdn # perform operation
fmadd.s f20, f23, f9, f8, rmm # perform operation
fmadd.s f20, f23, f9, f8, rne # perform operation
fmadd.s f20, f23, f9, f8, rtz # perform operation
fmadd.s f20, f23, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x10, 0xf6aafede # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x23e72565 # load x3 with value 0x23e72565
sw x3, 0(x2) # store 0x23e72565 in memory
flw f26, 0(x2) # load 0x23e72565 from memory into f26
fmadd.s f10, f31, f13, f26, dyn # perform operation
fmadd.s f10, f31, f13, f26, rdn # perform operation
fmadd.s f10, f31, f13, f26, rmm # perform operation
fmadd.s f10, f31, f13, f26, rne # perform operation
fmadd.s f10, f31, f13, f26, rtz # perform operation
fmadd.s f10, f31, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f31, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f31, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x26, 0xbbdb53cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x9211360d # load x3 with value 0x9211360d
sw x3, 0(x2) # store 0x9211360d in memory
flw f31, 0(x2) # load 0x9211360d from memory into f31
fmadd.s f26, f30, f13, f31, dyn # perform operation
fmadd.s f26, f30, f13, f31, rdn # perform operation
fmadd.s f26, f30, f13, f31, rmm # perform operation
fmadd.s f26, f30, f13, f31, rne # perform operation
fmadd.s f26, f30, f13, f31, rtz # perform operation
fmadd.s f26, f30, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x23, 0xb223613f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0x58d494a1 # load x3 with value 0x58d494a1
sw x3, 0(x2) # store 0x58d494a1 in memory
flw f29, 0(x2) # load 0x58d494a1 from memory into f29
fmadd.s f23, f8, f20, f29, dyn # perform operation
fmadd.s f23, f8, f20, f29, rdn # perform operation
fmadd.s f23, f8, f20, f29, rmm # perform operation
fmadd.s f23, f8, f20, f29, rne # perform operation
fmadd.s f23, f8, f20, f29, rtz # perform operation
fmadd.s f23, f8, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f8, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f8, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x30, 0xa56750f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x5d02db1c # load x3 with value 0x5d02db1c
sw x3, 0(x2) # store 0x5d02db1c in memory
flw f15, 0(x2) # load 0x5d02db1c from memory into f15
fmadd.s f30, f21, f12, f15, dyn # perform operation
fmadd.s f30, f21, f12, f15, rdn # perform operation
fmadd.s f30, f21, f12, f15, rmm # perform operation
fmadd.s f30, f21, f12, f15, rne # perform operation
fmadd.s f30, f21, f12, f15, rtz # perform operation
fmadd.s f30, f21, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f12, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x16, 0x5242db6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x0560320e # load x3 with value 0x0560320e
sw x3, 0(x2) # store 0x0560320e in memory
flw f6, 0(x2) # load 0x0560320e from memory into f6
fmadd.s f16, f14, f27, f6, dyn # perform operation
fmadd.s f16, f14, f27, f6, rdn # perform operation
fmadd.s f16, f14, f27, f6, rmm # perform operation
fmadd.s f16, f14, f27, f6, rne # perform operation
fmadd.s f16, f14, f27, f6, rtz # perform operation
fmadd.s f16, f14, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x11, 0xb0b23e43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0x2f25d218 # load x3 with value 0x2f25d218
sw x3, 0(x2) # store 0x2f25d218 in memory
flw f21, 0(x2) # load 0x2f25d218 from memory into f21
fmadd.s f11, f13, f29, f21, dyn # perform operation
fmadd.s f11, f13, f29, f21, rdn # perform operation
fmadd.s f11, f13, f29, f21, rmm # perform operation
fmadd.s f11, f13, f29, f21, rne # perform operation
fmadd.s f11, f13, f29, f21, rtz # perform operation
fmadd.s f11, f13, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f13, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f13, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x30, 0x6e77cbfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x8f972d8c # load x3 with value 0x8f972d8c
sw x3, 0(x2) # store 0x8f972d8c in memory
flw f31, 0(x2) # load 0x8f972d8c from memory into f31
fmadd.s f30, f2, f10, f31, dyn # perform operation
fmadd.s f30, f2, f10, f31, rdn # perform operation
fmadd.s f30, f2, f10, f31, rmm # perform operation
fmadd.s f30, f2, f10, f31, rne # perform operation
fmadd.s f30, f2, f10, f31, rtz # perform operation
fmadd.s f30, f2, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x26, 0x9b9dc5ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
li x3, 0xc6911005 # load x3 with value 0xc6911005
sw x3, 0(x2) # store 0xc6911005 in memory
flw f11, 0(x2) # load 0xc6911005 from memory into f11
fmadd.s f26, f28, f4, f11, dyn # perform operation
fmadd.s f26, f28, f4, f11, rdn # perform operation
fmadd.s f26, f28, f4, f11, rmm # perform operation
fmadd.s f26, f28, f4, f11, rne # perform operation
fmadd.s f26, f28, f4, f11, rtz # perform operation
fmadd.s f26, f28, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f4, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x21, 0xda9068f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xb7582595 # load x3 with value 0xb7582595
sw x3, 0(x2) # store 0xb7582595 in memory
flw f23, 0(x2) # load 0xb7582595 from memory into f23
fmadd.s f21, f5, f24, f23, dyn # perform operation
fmadd.s f21, f5, f24, f23, rdn # perform operation
fmadd.s f21, f5, f24, f23, rmm # perform operation
fmadd.s f21, f5, f24, f23, rne # perform operation
fmadd.s f21, f5, f24, f23, rtz # perform operation
fmadd.s f21, f5, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x1, 0x9d9724cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0xe0c73d79 # load x3 with value 0xe0c73d79
sw x3, 0(x2) # store 0xe0c73d79 in memory
flw f23, 0(x2) # load 0xe0c73d79 from memory into f23
fmadd.s f1, f20, f19, f23, dyn # perform operation
fmadd.s f1, f20, f19, f23, rdn # perform operation
fmadd.s f1, f20, f19, f23, rmm # perform operation
fmadd.s f1, f20, f19, f23, rne # perform operation
fmadd.s f1, f20, f19, f23, rtz # perform operation
fmadd.s f1, f20, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f19, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x8, 0xba5e38d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xae40b0d7 # load x3 with value 0xae40b0d7
sw x3, 0(x2) # store 0xae40b0d7 in memory
flw f1, 0(x2) # load 0xae40b0d7 from memory into f1
fmadd.s f8, f5, f11, f1, dyn # perform operation
fmadd.s f8, f5, f11, f1, rdn # perform operation
fmadd.s f8, f5, f11, f1, rmm # perform operation
fmadd.s f8, f5, f11, f1, rne # perform operation
fmadd.s f8, f5, f11, f1, rtz # perform operation
fmadd.s f8, f5, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f11, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x18, 0xd04b3086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x92312df1 # load x3 with value 0x92312df1
sw x3, 0(x2) # store 0x92312df1 in memory
flw f9, 0(x2) # load 0x92312df1 from memory into f9
fmadd.s f18, f28, f26, f9, dyn # perform operation
fmadd.s f18, f28, f26, f9, rdn # perform operation
fmadd.s f18, f28, f26, f9, rmm # perform operation
fmadd.s f18, f28, f26, f9, rne # perform operation
fmadd.s f18, f28, f26, f9, rtz # perform operation
fmadd.s f18, f28, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x31, 0x51e633e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0xdafdae22 # load x3 with value 0xdafdae22
sw x3, 0(x2) # store 0xdafdae22 in memory
flw f4, 0(x2) # load 0xdafdae22 from memory into f4
fmadd.s f31, f6, f23, f4, dyn # perform operation
fmadd.s f31, f6, f23, f4, rdn # perform operation
fmadd.s f31, f6, f23, f4, rmm # perform operation
fmadd.s f31, f6, f23, f4, rne # perform operation
fmadd.s f31, f6, f23, f4, rtz # perform operation
fmadd.s f31, f6, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x23, 0xb8dcb119 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0xbb0e672c # load x3 with value 0xbb0e672c
sw x3, 0(x2) # store 0xbb0e672c in memory
flw f14, 0(x2) # load 0xbb0e672c from memory into f14
fmadd.s f23, f4, f8, f14, dyn # perform operation
fmadd.s f23, f4, f8, f14, rdn # perform operation
fmadd.s f23, f4, f8, f14, rmm # perform operation
fmadd.s f23, f4, f8, f14, rne # perform operation
fmadd.s f23, f4, f8, f14, rtz # perform operation
fmadd.s f23, f4, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f4, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f4, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x13, 0x8100db05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x13515798 # load x3 with value 0x13515798
sw x3, 0(x2) # store 0x13515798 in memory
flw f29, 0(x2) # load 0x13515798 from memory into f29
fmadd.s f13, f8, f31, f29, dyn # perform operation
fmadd.s f13, f8, f31, f29, rdn # perform operation
fmadd.s f13, f8, f31, f29, rmm # perform operation
fmadd.s f13, f8, f31, f29, rne # perform operation
fmadd.s f13, f8, f31, f29, rtz # perform operation
fmadd.s f13, f8, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f31, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x30, 0x260b06fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x8e3069fd # load x3 with value 0x8e3069fd
sw x3, 0(x2) # store 0x8e3069fd in memory
flw f4, 0(x2) # load 0x8e3069fd from memory into f4
fmadd.s f30, f22, f25, f4, dyn # perform operation
fmadd.s f30, f22, f25, f4, rdn # perform operation
fmadd.s f30, f22, f25, f4, rmm # perform operation
fmadd.s f30, f22, f25, f4, rne # perform operation
fmadd.s f30, f22, f25, f4, rtz # perform operation
fmadd.s f30, f22, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f22, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f22, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f22, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f22, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f22, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x28, 0x9ef9b5fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xcf183058 # load x3 with value 0xcf183058
sw x3, 0(x2) # store 0xcf183058 in memory
flw f2, 0(x2) # load 0xcf183058 from memory into f2
fmadd.s f28, f12, f31, f2, dyn # perform operation
fmadd.s f28, f12, f31, f2, rdn # perform operation
fmadd.s f28, f12, f31, f2, rmm # perform operation
fmadd.s f28, f12, f31, f2, rne # perform operation
fmadd.s f28, f12, f31, f2, rtz # perform operation
fmadd.s f28, f12, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x9, 0xb0eaac6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x73f56bcf # load x3 with value 0x73f56bcf
sw x3, 0(x2) # store 0x73f56bcf in memory
flw f7, 0(x2) # load 0x73f56bcf from memory into f7
fmadd.s f9, f4, f18, f7, dyn # perform operation
fmadd.s f9, f4, f18, f7, rdn # perform operation
fmadd.s f9, f4, f18, f7, rmm # perform operation
fmadd.s f9, f4, f18, f7, rne # perform operation
fmadd.s f9, f4, f18, f7, rtz # perform operation
fmadd.s f9, f4, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f4, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f4, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f4, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f4, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f4, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x25, 0xd721f93d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xbce12e08 # load x3 with value 0xbce12e08
sw x3, 0(x2) # store 0xbce12e08 in memory
flw f20, 0(x2) # load 0xbce12e08 from memory into f20
fmadd.s f25, f3, f14, f20, dyn # perform operation
fmadd.s f25, f3, f14, f20, rdn # perform operation
fmadd.s f25, f3, f14, f20, rmm # perform operation
fmadd.s f25, f3, f14, f20, rne # perform operation
fmadd.s f25, f3, f14, f20, rtz # perform operation
fmadd.s f25, f3, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x25, 0xb59bd7fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xdacfbe5d # load x3 with value 0xdacfbe5d
sw x3, 0(x2) # store 0xdacfbe5d in memory
flw f2, 0(x2) # load 0xdacfbe5d from memory into f2
fmadd.s f25, f4, f22, f2, dyn # perform operation
fmadd.s f25, f4, f22, f2, rdn # perform operation
fmadd.s f25, f4, f22, f2, rmm # perform operation
fmadd.s f25, f4, f22, f2, rne # perform operation
fmadd.s f25, f4, f22, f2, rtz # perform operation
fmadd.s f25, f4, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f4, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f4, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x27, 0x3d2fbb0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xb2a0420f # load x3 with value 0xb2a0420f
sw x3, 0(x2) # store 0xb2a0420f in memory
flw f26, 0(x2) # load 0xb2a0420f from memory into f26
fmadd.s f27, f31, f8, f26, dyn # perform operation
fmadd.s f27, f31, f8, f26, rdn # perform operation
fmadd.s f27, f31, f8, f26, rmm # perform operation
fmadd.s f27, f31, f8, f26, rne # perform operation
fmadd.s f27, f31, f8, f26, rtz # perform operation
fmadd.s f27, f31, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x18, 0xb97e36e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x9393a8a9 # load x3 with value 0x9393a8a9
sw x3, 0(x2) # store 0x9393a8a9 in memory
flw f29, 0(x2) # load 0x9393a8a9 from memory into f29
fmadd.s f18, f11, f30, f29, dyn # perform operation
fmadd.s f18, f11, f30, f29, rdn # perform operation
fmadd.s f18, f11, f30, f29, rmm # perform operation
fmadd.s f18, f11, f30, f29, rne # perform operation
fmadd.s f18, f11, f30, f29, rtz # perform operation
fmadd.s f18, f11, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x17, 0x08c4dab5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xd33279ca # load x3 with value 0xd33279ca
sw x3, 0(x2) # store 0xd33279ca in memory
flw f28, 0(x2) # load 0xd33279ca from memory into f28
fmadd.s f17, f20, f4, f28, dyn # perform operation
fmadd.s f17, f20, f4, f28, rdn # perform operation
fmadd.s f17, f20, f4, f28, rmm # perform operation
fmadd.s f17, f20, f4, f28, rne # perform operation
fmadd.s f17, f20, f4, f28, rtz # perform operation
fmadd.s f17, f20, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x24, 0x1b20ae80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x2995bb25 # load x3 with value 0x2995bb25
sw x3, 0(x2) # store 0x2995bb25 in memory
flw f27, 0(x2) # load 0x2995bb25 from memory into f27
fmadd.s f24, f21, f16, f27, dyn # perform operation
fmadd.s f24, f21, f16, f27, rdn # perform operation
fmadd.s f24, f21, f16, f27, rmm # perform operation
fmadd.s f24, f21, f16, f27, rne # perform operation
fmadd.s f24, f21, f16, f27, rtz # perform operation
fmadd.s f24, f21, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f21, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f21, f16, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x14, 0x627e8d4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xf862c234 # load x3 with value 0xf862c234
sw x3, 0(x2) # store 0xf862c234 in memory
flw f3, 0(x2) # load 0xf862c234 from memory into f3
fmadd.s f14, f7, f29, f3, dyn # perform operation
fmadd.s f14, f7, f29, f3, rdn # perform operation
fmadd.s f14, f7, f29, f3, rmm # perform operation
fmadd.s f14, f7, f29, f3, rne # perform operation
fmadd.s f14, f7, f29, f3, rtz # perform operation
fmadd.s f14, f7, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f29, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x31, 0xe914e477 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x75a6fe75 # load x3 with value 0x75a6fe75
sw x3, 0(x2) # store 0x75a6fe75 in memory
flw f14, 0(x2) # load 0x75a6fe75 from memory into f14
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f31, f6, f14, f2, dyn # perform operation
fmadd.s f31, f6, f14, f2, rdn # perform operation
fmadd.s f31, f6, f14, f2, rmm # perform operation
fmadd.s f31, f6, f14, f2, rne # perform operation
fmadd.s f31, f6, f14, f2, rtz # perform operation
fmadd.s f31, f6, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x28, 0xe73d04b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
li x3, 0x56736b63 # load x3 with value 0x56736b63
sw x3, 0(x2) # store 0x56736b63 in memory
flw f17, 0(x2) # load 0x56736b63 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmadd.s f28, f9, f17, f2, dyn # perform operation
fmadd.s f28, f9, f17, f2, rdn # perform operation
fmadd.s f28, f9, f17, f2, rmm # perform operation
fmadd.s f28, f9, f17, f2, rne # perform operation
fmadd.s f28, f9, f17, f2, rtz # perform operation
fmadd.s f28, f9, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x5, 0x16fe0834 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
li x3, 0x96ac4948 # load x3 with value 0x96ac4948
sw x3, 0(x2) # store 0x96ac4948 in memory
flw f24, 0(x2) # load 0x96ac4948 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fmadd.s f5, f23, f24, f2, dyn # perform operation
fmadd.s f5, f23, f24, f2, rdn # perform operation
fmadd.s f5, f23, f24, f2, rmm # perform operation
fmadd.s f5, f23, f24, f2, rne # perform operation
fmadd.s f5, f23, f24, f2, rtz # perform operation
fmadd.s f5, f23, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x16, 0xa4bd17bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0xf47e0f81 # load x3 with value 0xf47e0f81
sw x3, 0(x2) # store 0xf47e0f81 in memory
flw f3, 0(x2) # load 0xf47e0f81 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f16, f5, f3, f15, dyn # perform operation
fmadd.s f16, f5, f3, f15, rdn # perform operation
fmadd.s f16, f5, f3, f15, rmm # perform operation
fmadd.s f16, f5, f3, f15, rne # perform operation
fmadd.s f16, f5, f3, f15, rtz # perform operation
fmadd.s f16, f5, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x9, 0x8d5ba82a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xa9b2ba80 # load x3 with value 0xa9b2ba80
sw x3, 0(x2) # store 0xa9b2ba80 in memory
flw f28, 0(x2) # load 0xa9b2ba80 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f9, f20, f28, f8, dyn # perform operation
fmadd.s f9, f20, f28, f8, rdn # perform operation
fmadd.s f9, f20, f28, f8, rmm # perform operation
fmadd.s f9, f20, f28, f8, rne # perform operation
fmadd.s f9, f20, f28, f8, rtz # perform operation
fmadd.s f9, f20, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x7, 0xd42d93cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x0092f0a4 # load x3 with value 0x0092f0a4
sw x3, 0(x2) # store 0x0092f0a4 in memory
flw f20, 0(x2) # load 0x0092f0a4 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fmadd.s f7, f13, f20, f3, dyn # perform operation
fmadd.s f7, f13, f20, f3, rdn # perform operation
fmadd.s f7, f13, f20, f3, rmm # perform operation
fmadd.s f7, f13, f20, f3, rne # perform operation
fmadd.s f7, f13, f20, f3, rtz # perform operation
fmadd.s f7, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x23, 0x73998d92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x1835436b # load x3 with value 0x1835436b
sw x3, 0(x2) # store 0x1835436b in memory
flw f15, 0(x2) # load 0x1835436b from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmadd.s f23, f11, f15, f30, dyn # perform operation
fmadd.s f23, f11, f15, f30, rdn # perform operation
fmadd.s f23, f11, f15, f30, rmm # perform operation
fmadd.s f23, f11, f15, f30, rne # perform operation
fmadd.s f23, f11, f15, f30, rtz # perform operation
fmadd.s f23, f11, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x1, 0x79d7ac2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x3b6095f4 # load x3 with value 0x3b6095f4
sw x3, 0(x2) # store 0x3b6095f4 in memory
flw f25, 0(x2) # load 0x3b6095f4 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmadd.s f1, f2, f25, f31, dyn # perform operation
fmadd.s f1, f2, f25, f31, rdn # perform operation
fmadd.s f1, f2, f25, f31, rmm # perform operation
fmadd.s f1, f2, f25, f31, rne # perform operation
fmadd.s f1, f2, f25, f31, rtz # perform operation
fmadd.s f1, f2, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x26, 0x0aff8190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x2b3db1e0 # load x3 with value 0x2b3db1e0
sw x3, 0(x2) # store 0x2b3db1e0 in memory
flw f14, 0(x2) # load 0x2b3db1e0 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmadd.s f26, f19, f14, f13, dyn # perform operation
fmadd.s f26, f19, f14, f13, rdn # perform operation
fmadd.s f26, f19, f14, f13, rmm # perform operation
fmadd.s f26, f19, f14, f13, rne # perform operation
fmadd.s f26, f19, f14, f13, rtz # perform operation
fmadd.s f26, f19, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f19, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f19, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x17, 0x59ea37f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x9982f713 # load x3 with value 0x9982f713
sw x3, 0(x2) # store 0x9982f713 in memory
flw f5, 0(x2) # load 0x9982f713 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f17, f20, f5, f29, dyn # perform operation
fmadd.s f17, f20, f5, f29, rdn # perform operation
fmadd.s f17, f20, f5, f29, rmm # perform operation
fmadd.s f17, f20, f5, f29, rne # perform operation
fmadd.s f17, f20, f5, f29, rtz # perform operation
fmadd.s f17, f20, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f5, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x31, 0x198d6f59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x758c0165 # load x3 with value 0x758c0165
sw x3, 0(x2) # store 0x758c0165 in memory
flw f26, 0(x2) # load 0x758c0165 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmadd.s f31, f19, f26, f12, dyn # perform operation
fmadd.s f31, f19, f26, f12, rdn # perform operation
fmadd.s f31, f19, f26, f12, rmm # perform operation
fmadd.s f31, f19, f26, f12, rne # perform operation
fmadd.s f31, f19, f26, f12, rtz # perform operation
fmadd.s f31, f19, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x11, 0x7d24980b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x9e6eabd9 # load x3 with value 0x9e6eabd9
sw x3, 0(x2) # store 0x9e6eabd9 in memory
flw f28, 0(x2) # load 0x9e6eabd9 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmadd.s f11, f5, f28, f3, dyn # perform operation
fmadd.s f11, f5, f28, f3, rdn # perform operation
fmadd.s f11, f5, f28, f3, rmm # perform operation
fmadd.s f11, f5, f28, f3, rne # perform operation
fmadd.s f11, f5, f28, f3, rtz # perform operation
fmadd.s f11, f5, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f5, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f5, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x18, 0xb5ba31b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x2ed77e98 # load x3 with value 0x2ed77e98
sw x3, 0(x2) # store 0x2ed77e98 in memory
flw f13, 0(x2) # load 0x2ed77e98 from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmadd.s f18, f2, f13, f7, dyn # perform operation
fmadd.s f18, f2, f13, f7, rdn # perform operation
fmadd.s f18, f2, f13, f7, rmm # perform operation
fmadd.s f18, f2, f13, f7, rne # perform operation
fmadd.s f18, f2, f13, f7, rtz # perform operation
fmadd.s f18, f2, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x12, 0xe0680eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x95131510 # load x3 with value 0x95131510
sw x3, 0(x2) # store 0x95131510 in memory
flw f2, 0(x2) # load 0x95131510 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmadd.s f12, f14, f2, f3, dyn # perform operation
fmadd.s f12, f14, f2, f3, rdn # perform operation
fmadd.s f12, f14, f2, f3, rmm # perform operation
fmadd.s f12, f14, f2, f3, rne # perform operation
fmadd.s f12, f14, f2, f3, rtz # perform operation
fmadd.s f12, f14, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x6, 0x57a334ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xfdae8642 # load x3 with value 0xfdae8642
sw x3, 0(x2) # store 0xfdae8642 in memory
flw f27, 0(x2) # load 0xfdae8642 from memory into f27
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f6, f20, f27, f13, dyn # perform operation
fmadd.s f6, f20, f27, f13, rdn # perform operation
fmadd.s f6, f20, f27, f13, rmm # perform operation
fmadd.s f6, f20, f27, f13, rne # perform operation
fmadd.s f6, f20, f27, f13, rtz # perform operation
fmadd.s f6, f20, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f27, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x18, 0x2da10540 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xb458ea15 # load x3 with value 0xb458ea15
sw x3, 0(x2) # store 0xb458ea15 in memory
flw f28, 0(x2) # load 0xb458ea15 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fmadd.s f18, f11, f28, f8, dyn # perform operation
fmadd.s f18, f11, f28, f8, rdn # perform operation
fmadd.s f18, f11, f28, f8, rmm # perform operation
fmadd.s f18, f11, f28, f8, rne # perform operation
fmadd.s f18, f11, f28, f8, rtz # perform operation
fmadd.s f18, f11, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x6, 0x9450817e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x98b83ea3 # load x3 with value 0x98b83ea3
sw x3, 0(x2) # store 0x98b83ea3 in memory
flw f20, 0(x2) # load 0x98b83ea3 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
fmadd.s f6, f4, f20, f27, dyn # perform operation
fmadd.s f6, f4, f20, f27, rdn # perform operation
fmadd.s f6, f4, f20, f27, rmm # perform operation
fmadd.s f6, f4, f20, f27, rne # perform operation
fmadd.s f6, f4, f20, f27, rtz # perform operation
fmadd.s f6, f4, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f4, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f4, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x24, 0x59a012a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xddbb4335 # load x3 with value 0xddbb4335
sw x3, 0(x2) # store 0xddbb4335 in memory
flw f21, 0(x2) # load 0xddbb4335 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmadd.s f24, f11, f21, f12, dyn # perform operation
fmadd.s f24, f11, f21, f12, rdn # perform operation
fmadd.s f24, f11, f21, f12, rmm # perform operation
fmadd.s f24, f11, f21, f12, rne # perform operation
fmadd.s f24, f11, f21, f12, rtz # perform operation
fmadd.s f24, f11, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f21, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x20, 0x5c15b1c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
li x3, 0x207d529f # load x3 with value 0x207d529f
sw x3, 0(x2) # store 0x207d529f in memory
flw f30, 0(x2) # load 0x207d529f from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmadd.s f20, f18, f30, f2, dyn # perform operation
fmadd.s f20, f18, f30, f2, rdn # perform operation
fmadd.s f20, f18, f30, f2, rmm # perform operation
fmadd.s f20, f18, f30, f2, rne # perform operation
fmadd.s f20, f18, f30, f2, rtz # perform operation
fmadd.s f20, f18, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x19, 0x4f67848f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x1732be79 # load x3 with value 0x1732be79
sw x3, 0(x2) # store 0x1732be79 in memory
flw f31, 0(x2) # load 0x1732be79 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmadd.s f19, f4, f31, f13, dyn # perform operation
fmadd.s f19, f4, f31, f13, rdn # perform operation
fmadd.s f19, f4, f31, f13, rmm # perform operation
fmadd.s f19, f4, f31, f13, rne # perform operation
fmadd.s f19, f4, f31, f13, rtz # perform operation
fmadd.s f19, f4, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f4, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f4, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f4, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f4, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f4, f31, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x19, 0xd6fccef5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x55bedfa9 # load x3 with value 0x55bedfa9
sw x3, 0(x2) # store 0x55bedfa9 in memory
flw f6, 0(x2) # load 0x55bedfa9 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmadd.s f19, f10, f6, f12, dyn # perform operation
fmadd.s f19, f10, f6, f12, rdn # perform operation
fmadd.s f19, f10, f6, f12, rmm # perform operation
fmadd.s f19, f10, f6, f12, rne # perform operation
fmadd.s f19, f10, f6, f12, rtz # perform operation
fmadd.s f19, f10, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x14, 0xaabab16d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0xf493ae92 # load x3 with value 0xf493ae92
sw x3, 0(x2) # store 0xf493ae92 in memory
flw f23, 0(x2) # load 0xf493ae92 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmadd.s f14, f1, f23, f25, dyn # perform operation
fmadd.s f14, f1, f23, f25, rdn # perform operation
fmadd.s f14, f1, f23, f25, rmm # perform operation
fmadd.s f14, f1, f23, f25, rne # perform operation
fmadd.s f14, f1, f23, f25, rtz # perform operation
fmadd.s f14, f1, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x15, 0xe9edf65b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xe87ff319 # load x3 with value 0xe87ff319
sw x3, 0(x2) # store 0xe87ff319 in memory
flw f7, 0(x2) # load 0xe87ff319 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmadd.s f15, f3, f7, f22, dyn # perform operation
fmadd.s f15, f3, f7, f22, rdn # perform operation
fmadd.s f15, f3, f7, f22, rmm # perform operation
fmadd.s f15, f3, f7, f22, rne # perform operation
fmadd.s f15, f3, f7, f22, rtz # perform operation
fmadd.s f15, f3, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f3, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f3, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x20, 0x59357ff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x46210fd1 # load x3 with value 0x46210fd1
sw x3, 0(x2) # store 0x46210fd1 in memory
flw f30, 0(x2) # load 0x46210fd1 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f20, f24, f30, f18, dyn # perform operation
fmadd.s f20, f24, f30, f18, rdn # perform operation
fmadd.s f20, f24, f30, f18, rmm # perform operation
fmadd.s f20, f24, f30, f18, rne # perform operation
fmadd.s f20, f24, f30, f18, rtz # perform operation
fmadd.s f20, f24, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f24, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f24, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x1, 0x80b1714d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x452ce4cf # load x3 with value 0x452ce4cf
sw x3, 0(x2) # store 0x452ce4cf in memory
flw f28, 0(x2) # load 0x452ce4cf from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmadd.s f1, f14, f28, f18, dyn # perform operation
fmadd.s f1, f14, f28, f18, rdn # perform operation
fmadd.s f1, f14, f28, f18, rmm # perform operation
fmadd.s f1, f14, f28, f18, rne # perform operation
fmadd.s f1, f14, f28, f18, rtz # perform operation
fmadd.s f1, f14, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x24, 0x37dcdfa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x456b2f1e # load x3 with value 0x456b2f1e
sw x3, 0(x2) # store 0x456b2f1e in memory
flw f27, 0(x2) # load 0x456b2f1e from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmadd.s f24, f8, f27, f26, dyn # perform operation
fmadd.s f24, f8, f27, f26, rdn # perform operation
fmadd.s f24, f8, f27, f26, rmm # perform operation
fmadd.s f24, f8, f27, f26, rne # perform operation
fmadd.s f24, f8, f27, f26, rtz # perform operation
fmadd.s f24, f8, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x15, 0x025b9f43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x63d73f24 # load x3 with value 0x63d73f24
sw x3, 0(x2) # store 0x63d73f24 in memory
flw f30, 0(x2) # load 0x63d73f24 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fmadd.s f15, f28, f30, f3, dyn # perform operation
fmadd.s f15, f28, f30, f3, rdn # perform operation
fmadd.s f15, f28, f30, f3, rmm # perform operation
fmadd.s f15, f28, f30, f3, rne # perform operation
fmadd.s f15, f28, f30, f3, rtz # perform operation
fmadd.s f15, f28, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x10, 0x912a8b6c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x490b2b62 # load x3 with value 0x490b2b62
sw x3, 0(x2) # store 0x490b2b62 in memory
flw f8, 0(x2) # load 0x490b2b62 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f10, f28, f8, f31, dyn # perform operation
fmadd.s f10, f28, f8, f31, rdn # perform operation
fmadd.s f10, f28, f8, f31, rmm # perform operation
fmadd.s f10, f28, f8, f31, rne # perform operation
fmadd.s f10, f28, f8, f31, rtz # perform operation
fmadd.s f10, f28, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x28, 0x7901f030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x17485b9b # load x3 with value 0x17485b9b
sw x3, 0(x2) # store 0x17485b9b in memory
flw f12, 0(x2) # load 0x17485b9b from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fmadd.s f28, f9, f12, f24, dyn # perform operation
fmadd.s f28, f9, f12, f24, rdn # perform operation
fmadd.s f28, f9, f12, f24, rmm # perform operation
fmadd.s f28, f9, f12, f24, rne # perform operation
fmadd.s f28, f9, f12, f24, rtz # perform operation
fmadd.s f28, f9, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x9, 0x7ffef4da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x170b0007 # load x3 with value 0x170b0007
sw x3, 0(x2) # store 0x170b0007 in memory
flw f20, 0(x2) # load 0x170b0007 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmadd.s f9, f26, f20, f7, dyn # perform operation
fmadd.s f9, f26, f20, f7, rdn # perform operation
fmadd.s f9, f26, f20, f7, rmm # perform operation
fmadd.s f9, f26, f20, f7, rne # perform operation
fmadd.s f9, f26, f20, f7, rtz # perform operation
fmadd.s f9, f26, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x14, 0x332de078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x2d1c7b32 # load x3 with value 0x2d1c7b32
sw x3, 0(x2) # store 0x2d1c7b32 in memory
flw f28, 0(x2) # load 0x2d1c7b32 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmadd.s f14, f29, f28, f23, dyn # perform operation
fmadd.s f14, f29, f28, f23, rdn # perform operation
fmadd.s f14, f29, f28, f23, rmm # perform operation
fmadd.s f14, f29, f28, f23, rne # perform operation
fmadd.s f14, f29, f28, f23, rtz # perform operation
fmadd.s f14, f29, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f29, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f29, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x13, 0xa2cb0e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x15f1e1ae # load x3 with value 0x15f1e1ae
sw x3, 0(x2) # store 0x15f1e1ae in memory
flw f7, 0(x2) # load 0x15f1e1ae from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f13, f23, f7, f22, dyn # perform operation
fmadd.s f13, f23, f7, f22, rdn # perform operation
fmadd.s f13, f23, f7, f22, rmm # perform operation
fmadd.s f13, f23, f7, f22, rne # perform operation
fmadd.s f13, f23, f7, f22, rtz # perform operation
fmadd.s f13, f23, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f23, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x13, 0xaff2946e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x02a8fa0c # load x3 with value 0x02a8fa0c
sw x3, 0(x2) # store 0x02a8fa0c in memory
flw f8, 0(x2) # load 0x02a8fa0c from memory into f8
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f13, f5, f8, f18, dyn # perform operation
fmadd.s f13, f5, f8, f18, rdn # perform operation
fmadd.s f13, f5, f8, f18, rmm # perform operation
fmadd.s f13, f5, f8, f18, rne # perform operation
fmadd.s f13, f5, f8, f18, rtz # perform operation
fmadd.s f13, f5, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x10, 0x2d758d6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x55217421 # load x3 with value 0x55217421
sw x3, 0(x2) # store 0x55217421 in memory
flw f3, 0(x2) # load 0x55217421 from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmadd.s f10, f9, f3, f23, dyn # perform operation
fmadd.s f10, f9, f3, f23, rdn # perform operation
fmadd.s f10, f9, f3, f23, rmm # perform operation
fmadd.s f10, f9, f3, f23, rne # perform operation
fmadd.s f10, f9, f3, f23, rtz # perform operation
fmadd.s f10, f9, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x31, 0x1c9a32a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0xec5ab7cf # load x3 with value 0xec5ab7cf
sw x3, 0(x2) # store 0xec5ab7cf in memory
flw f27, 0(x2) # load 0xec5ab7cf from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fmadd.s f31, f6, f27, f23, dyn # perform operation
fmadd.s f31, f6, f27, f23, rdn # perform operation
fmadd.s f31, f6, f27, f23, rmm # perform operation
fmadd.s f31, f6, f27, f23, rne # perform operation
fmadd.s f31, f6, f27, f23, rtz # perform operation
fmadd.s f31, f6, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f27, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x23, 0xccc884ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x33e596bd # load x3 with value 0x33e596bd
sw x3, 0(x2) # store 0x33e596bd in memory
flw f11, 0(x2) # load 0x33e596bd from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fmadd.s f23, f6, f11, f15, dyn # perform operation
fmadd.s f23, f6, f11, f15, rdn # perform operation
fmadd.s f23, f6, f11, f15, rmm # perform operation
fmadd.s f23, f6, f11, f15, rne # perform operation
fmadd.s f23, f6, f11, f15, rtz # perform operation
fmadd.s f23, f6, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x2, 0x140d3142 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x3a674770 # load x3 with value 0x3a674770
sw x3, 0(x2) # store 0x3a674770 in memory
flw f28, 0(x2) # load 0x3a674770 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f2, f10, f28, f27, dyn # perform operation
fmadd.s f2, f10, f28, f27, rdn # perform operation
fmadd.s f2, f10, f28, f27, rmm # perform operation
fmadd.s f2, f10, f28, f27, rne # perform operation
fmadd.s f2, f10, f28, f27, rtz # perform operation
fmadd.s f2, f10, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x21, 0xb309adb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x76f3497a # load x3 with value 0x76f3497a
sw x3, 0(x2) # store 0x76f3497a in memory
flw f14, 0(x2) # load 0x76f3497a from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmadd.s f21, f29, f14, f8, dyn # perform operation
fmadd.s f21, f29, f14, f8, rdn # perform operation
fmadd.s f21, f29, f14, f8, rmm # perform operation
fmadd.s f21, f29, f14, f8, rne # perform operation
fmadd.s f21, f29, f14, f8, rtz # perform operation
fmadd.s f21, f29, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x21, 0xe22b1368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x38200532 # load x3 with value 0x38200532
sw x3, 0(x2) # store 0x38200532 in memory
flw f23, 0(x2) # load 0x38200532 from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmadd.s f21, f6, f23, f28, dyn # perform operation
fmadd.s f21, f6, f23, f28, rdn # perform operation
fmadd.s f21, f6, f23, f28, rmm # perform operation
fmadd.s f21, f6, f23, f28, rne # perform operation
fmadd.s f21, f6, f23, f28, rtz # perform operation
fmadd.s f21, f6, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f6, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f6, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x12, 0xb3cce163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x2a2e6906 # load x3 with value 0x2a2e6906
sw x3, 0(x2) # store 0x2a2e6906 in memory
flw f14, 0(x2) # load 0x2a2e6906 from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmadd.s f12, f22, f14, f6, dyn # perform operation
fmadd.s f12, f22, f14, f6, rdn # perform operation
fmadd.s f12, f22, f14, f6, rmm # perform operation
fmadd.s f12, f22, f14, f6, rne # perform operation
fmadd.s f12, f22, f14, f6, rtz # perform operation
fmadd.s f12, f22, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x3, 0x6301ce8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x271cf925 # load x3 with value 0x271cf925
sw x3, 0(x2) # store 0x271cf925 in memory
flw f31, 0(x2) # load 0x271cf925 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmadd.s f3, f6, f31, f30, dyn # perform operation
fmadd.s f3, f6, f31, f30, rdn # perform operation
fmadd.s f3, f6, f31, f30, rmm # perform operation
fmadd.s f3, f6, f31, f30, rne # perform operation
fmadd.s f3, f6, f31, f30, rtz # perform operation
fmadd.s f3, f6, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x13, 0x5d50e8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0xf23ab4c3 # load x3 with value 0xf23ab4c3
sw x3, 0(x2) # store 0xf23ab4c3 in memory
flw f20, 0(x2) # load 0xf23ab4c3 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f13, f4, f20, f28, dyn # perform operation
fmadd.s f13, f4, f20, f28, rdn # perform operation
fmadd.s f13, f4, f20, f28, rmm # perform operation
fmadd.s f13, f4, f20, f28, rne # perform operation
fmadd.s f13, f4, f20, f28, rtz # perform operation
fmadd.s f13, f4, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f4, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f4, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f4, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f4, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f4, f20, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x17, 0xb63076f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x1e0daaf6 # load x3 with value 0x1e0daaf6
sw x3, 0(x2) # store 0x1e0daaf6 in memory
flw f24, 0(x2) # load 0x1e0daaf6 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fmadd.s f17, f4, f24, f3, dyn # perform operation
fmadd.s f17, f4, f24, f3, rdn # perform operation
fmadd.s f17, f4, f24, f3, rmm # perform operation
fmadd.s f17, f4, f24, f3, rne # perform operation
fmadd.s f17, f4, f24, f3, rtz # perform operation
fmadd.s f17, f4, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f4, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x25, 0x12de124f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0x1dcc5d4f # load x3 with value 0x1dcc5d4f
sw x3, 0(x2) # store 0x1dcc5d4f in memory
flw f27, 0(x2) # load 0x1dcc5d4f from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmadd.s f25, f16, f27, f8, dyn # perform operation
fmadd.s f25, f16, f27, f8, rdn # perform operation
fmadd.s f25, f16, f27, f8, rmm # perform operation
fmadd.s f25, f16, f27, f8, rne # perform operation
fmadd.s f25, f16, f27, f8, rtz # perform operation
fmadd.s f25, f16, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f16, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f16, f27, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x19, 0xcb2a06a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0xb3f5cdc8 # load x3 with value 0xb3f5cdc8
sw x3, 0(x2) # store 0xb3f5cdc8 in memory
flw f11, 0(x2) # load 0xb3f5cdc8 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmadd.s f19, f27, f11, f21, dyn # perform operation
fmadd.s f19, f27, f11, f21, rdn # perform operation
fmadd.s f19, f27, f11, f21, rmm # perform operation
fmadd.s f19, f27, f11, f21, rne # perform operation
fmadd.s f19, f27, f11, f21, rtz # perform operation
fmadd.s f19, f27, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x26, 0x6f2a15d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xa7f3042a # load x3 with value 0xa7f3042a
sw x3, 0(x2) # store 0xa7f3042a in memory
flw f3, 0(x2) # load 0xa7f3042a from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmadd.s f26, f25, f3, f2, dyn # perform operation
fmadd.s f26, f25, f3, f2, rdn # perform operation
fmadd.s f26, f25, f3, f2, rmm # perform operation
fmadd.s f26, f25, f3, f2, rne # perform operation
fmadd.s f26, f25, f3, f2, rtz # perform operation
fmadd.s f26, f25, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x20, 0x26f6e5f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xe1a337a3 # load x3 with value 0xe1a337a3
sw x3, 0(x2) # store 0xe1a337a3 in memory
flw f8, 0(x2) # load 0xe1a337a3 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f20, f24, f8, f13, dyn # perform operation
fmadd.s f20, f24, f8, f13, rdn # perform operation
fmadd.s f20, f24, f8, f13, rmm # perform operation
fmadd.s f20, f24, f8, f13, rne # perform operation
fmadd.s f20, f24, f8, f13, rtz # perform operation
fmadd.s f20, f24, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f24, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f24, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f24, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f24, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f24, f8, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x22, 0x6b5c60fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x0a754830 # load x3 with value 0x0a754830
sw x3, 0(x2) # store 0x0a754830 in memory
flw f18, 0(x2) # load 0x0a754830 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmadd.s f22, f11, f18, f28, dyn # perform operation
fmadd.s f22, f11, f18, f28, rdn # perform operation
fmadd.s f22, f11, f18, f28, rmm # perform operation
fmadd.s f22, f11, f18, f28, rne # perform operation
fmadd.s f22, f11, f18, f28, rtz # perform operation
fmadd.s f22, f11, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f11, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f11, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x15, 0xf8bcc188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x7b6da7f0 # load x3 with value 0x7b6da7f0
sw x3, 0(x2) # store 0x7b6da7f0 in memory
flw f30, 0(x2) # load 0x7b6da7f0 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f15, f8, f30, f5, dyn # perform operation
fmadd.s f15, f8, f30, f5, rdn # perform operation
fmadd.s f15, f8, f30, f5, rmm # perform operation
fmadd.s f15, f8, f30, f5, rne # perform operation
fmadd.s f15, f8, f30, f5, rtz # perform operation
fmadd.s f15, f8, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x25, 0xa52e6f54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x8dac7a7d # load x3 with value 0x8dac7a7d
sw x3, 0(x2) # store 0x8dac7a7d in memory
flw f29, 0(x2) # load 0x8dac7a7d from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmadd.s f25, f30, f29, f4, dyn # perform operation
fmadd.s f25, f30, f29, f4, rdn # perform operation
fmadd.s f25, f30, f29, f4, rmm # perform operation
fmadd.s f25, f30, f29, f4, rne # perform operation
fmadd.s f25, f30, f29, f4, rtz # perform operation
fmadd.s f25, f30, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f30, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f30, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f30, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f30, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f30, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x23, 0x83a71608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x6e029ab6 # load x3 with value 0x6e029ab6
sw x3, 0(x2) # store 0x6e029ab6 in memory
flw f17, 0(x2) # load 0x6e029ab6 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmadd.s f23, f29, f17, f24, dyn # perform operation
fmadd.s f23, f29, f17, f24, rdn # perform operation
fmadd.s f23, f29, f17, f24, rmm # perform operation
fmadd.s f23, f29, f17, f24, rne # perform operation
fmadd.s f23, f29, f17, f24, rtz # perform operation
fmadd.s f23, f29, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x20, 0x774b8c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0x485a9bd7 # load x3 with value 0x485a9bd7
sw x3, 0(x2) # store 0x485a9bd7 in memory
flw f11, 0(x2) # load 0x485a9bd7 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fmadd.s f20, f9, f11, f14, dyn # perform operation
fmadd.s f20, f9, f11, f14, rdn # perform operation
fmadd.s f20, f9, f11, f14, rmm # perform operation
fmadd.s f20, f9, f11, f14, rne # perform operation
fmadd.s f20, f9, f11, f14, rtz # perform operation
fmadd.s f20, f9, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f11, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x2, 0x9103e6d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x0e32a801 # load x3 with value 0x0e32a801
sw x3, 0(x2) # store 0x0e32a801 in memory
flw f16, 0(x2) # load 0x0e32a801 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f2, f18, f16, f6, dyn # perform operation
fmadd.s f2, f18, f16, f6, rdn # perform operation
fmadd.s f2, f18, f16, f6, rmm # perform operation
fmadd.s f2, f18, f16, f6, rne # perform operation
fmadd.s f2, f18, f16, f6, rtz # perform operation
fmadd.s f2, f18, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f18, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f18, f16, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x11, 0xc4e38cc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0xdee15db8 # load x3 with value 0xdee15db8
sw x3, 0(x2) # store 0xdee15db8 in memory
flw f15, 0(x2) # load 0xdee15db8 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f11, f23, f15, f1, dyn # perform operation
fmadd.s f11, f23, f15, f1, rdn # perform operation
fmadd.s f11, f23, f15, f1, rmm # perform operation
fmadd.s f11, f23, f15, f1, rne # perform operation
fmadd.s f11, f23, f15, f1, rtz # perform operation
fmadd.s f11, f23, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x22, 0x2ccdc7a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x4c0a0a75 # load x3 with value 0x4c0a0a75
sw x3, 0(x2) # store 0x4c0a0a75 in memory
flw f30, 0(x2) # load 0x4c0a0a75 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmadd.s f22, f1, f30, f27, dyn # perform operation
fmadd.s f22, f1, f30, f27, rdn # perform operation
fmadd.s f22, f1, f30, f27, rmm # perform operation
fmadd.s f22, f1, f30, f27, rne # perform operation
fmadd.s f22, f1, f30, f27, rtz # perform operation
fmadd.s f22, f1, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f30, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x3, 0xdc431496 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x3abfb9bf # load x3 with value 0x3abfb9bf
sw x3, 0(x2) # store 0x3abfb9bf in memory
flw f18, 0(x2) # load 0x3abfb9bf from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmadd.s f3, f7, f18, f16, dyn # perform operation
fmadd.s f3, f7, f18, f16, rdn # perform operation
fmadd.s f3, f7, f18, f16, rmm # perform operation
fmadd.s f3, f7, f18, f16, rne # perform operation
fmadd.s f3, f7, f18, f16, rtz # perform operation
fmadd.s f3, f7, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x27, 0xc6048ba3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x762bc38b # load x3 with value 0x762bc38b
sw x3, 0(x2) # store 0x762bc38b in memory
flw f8, 0(x2) # load 0x762bc38b from memory into f8
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmadd.s f27, f23, f8, f18, dyn # perform operation
fmadd.s f27, f23, f8, f18, rdn # perform operation
fmadd.s f27, f23, f8, f18, rmm # perform operation
fmadd.s f27, f23, f8, f18, rne # perform operation
fmadd.s f27, f23, f8, f18, rtz # perform operation
fmadd.s f27, f23, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f23, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f23, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f23, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f23, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f23, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x13, 0x67d5cdb7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x9cca1081 # load x3 with value 0x9cca1081
sw x3, 0(x2) # store 0x9cca1081 in memory
flw f20, 0(x2) # load 0x9cca1081 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmadd.s f13, f11, f20, f9, dyn # perform operation
fmadd.s f13, f11, f20, f9, rdn # perform operation
fmadd.s f13, f11, f20, f9, rmm # perform operation
fmadd.s f13, f11, f20, f9, rne # perform operation
fmadd.s f13, f11, f20, f9, rtz # perform operation
fmadd.s f13, f11, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x28, 0xbc785cd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x071c615b # load x3 with value 0x071c615b
sw x3, 0(x2) # store 0x071c615b in memory
flw f20, 0(x2) # load 0x071c615b from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmadd.s f28, f16, f20, f22, dyn # perform operation
fmadd.s f28, f16, f20, f22, rdn # perform operation
fmadd.s f28, f16, f20, f22, rmm # perform operation
fmadd.s f28, f16, f20, f22, rne # perform operation
fmadd.s f28, f16, f20, f22, rtz # perform operation
fmadd.s f28, f16, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f20, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x31, 0x05b46935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0xe3bc49cb # load x3 with value 0xe3bc49cb
sw x3, 0(x2) # store 0xe3bc49cb in memory
flw f8, 0(x2) # load 0xe3bc49cb from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmadd.s f31, f22, f8, f27, dyn # perform operation
fmadd.s f31, f22, f8, f27, rdn # perform operation
fmadd.s f31, f22, f8, f27, rmm # perform operation
fmadd.s f31, f22, f8, f27, rne # perform operation
fmadd.s f31, f22, f8, f27, rtz # perform operation
fmadd.s f31, f22, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f22, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f22, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f22, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f22, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f22, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x18, 0x3262c841 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xafb81d33 # load x3 with value 0xafb81d33
sw x3, 0(x2) # store 0xafb81d33 in memory
flw f6, 0(x2) # load 0xafb81d33 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fmadd.s f18, f15, f6, f31, dyn # perform operation
fmadd.s f18, f15, f6, f31, rdn # perform operation
fmadd.s f18, f15, f6, f31, rmm # perform operation
fmadd.s f18, f15, f6, f31, rne # perform operation
fmadd.s f18, f15, f6, f31, rtz # perform operation
fmadd.s f18, f15, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x28, 0x42a472c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x14d1c0db # load x3 with value 0x14d1c0db
sw x3, 0(x2) # store 0x14d1c0db in memory
flw f27, 0(x2) # load 0x14d1c0db from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fmadd.s f28, f2, f27, f15, dyn # perform operation
fmadd.s f28, f2, f27, f15, rdn # perform operation
fmadd.s f28, f2, f27, f15, rmm # perform operation
fmadd.s f28, f2, f27, f15, rne # perform operation
fmadd.s f28, f2, f27, f15, rtz # perform operation
fmadd.s f28, f2, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f27, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x2, 0xc7c9821d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x085a6ec3 # load x3 with value 0x085a6ec3
sw x3, 0(x2) # store 0x085a6ec3 in memory
flw f9, 0(x2) # load 0x085a6ec3 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f2, f5, f9, f3, dyn # perform operation
fmadd.s f2, f5, f9, f3, rdn # perform operation
fmadd.s f2, f5, f9, f3, rmm # perform operation
fmadd.s f2, f5, f9, f3, rne # perform operation
fmadd.s f2, f5, f9, f3, rtz # perform operation
fmadd.s f2, f5, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x17, 0x9ae1b19b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0xf3dc2abb # load x3 with value 0xf3dc2abb
sw x3, 0(x2) # store 0xf3dc2abb in memory
flw f23, 0(x2) # load 0xf3dc2abb from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f17, f5, f23, f21, dyn # perform operation
fmadd.s f17, f5, f23, f21, rdn # perform operation
fmadd.s f17, f5, f23, f21, rmm # perform operation
fmadd.s f17, f5, f23, f21, rne # perform operation
fmadd.s f17, f5, f23, f21, rtz # perform operation
fmadd.s f17, f5, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x18, 0x62facd2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x31007abd # load x3 with value 0x31007abd
sw x3, 0(x2) # store 0x31007abd in memory
flw f6, 0(x2) # load 0x31007abd from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
fmadd.s f18, f2, f6, f4, dyn # perform operation
fmadd.s f18, f2, f6, f4, rdn # perform operation
fmadd.s f18, f2, f6, f4, rmm # perform operation
fmadd.s f18, f2, f6, f4, rne # perform operation
fmadd.s f18, f2, f6, f4, rtz # perform operation
fmadd.s f18, f2, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x14, 0x96b3f6d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x37915d75 # load x3 with value 0x37915d75
sw x3, 0(x2) # store 0x37915d75 in memory
flw f16, 0(x2) # load 0x37915d75 from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmadd.s f14, f10, f16, f7, dyn # perform operation
fmadd.s f14, f10, f16, f7, rdn # perform operation
fmadd.s f14, f10, f16, f7, rmm # perform operation
fmadd.s f14, f10, f16, f7, rne # perform operation
fmadd.s f14, f10, f16, f7, rtz # perform operation
fmadd.s f14, f10, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x11, 0xe2c25846 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x274fddba # load x3 with value 0x274fddba
sw x3, 0(x2) # store 0x274fddba in memory
flw f28, 0(x2) # load 0x274fddba from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f11, f15, f28, f3, dyn # perform operation
fmadd.s f11, f15, f28, f3, rdn # perform operation
fmadd.s f11, f15, f28, f3, rmm # perform operation
fmadd.s f11, f15, f28, f3, rne # perform operation
fmadd.s f11, f15, f28, f3, rtz # perform operation
fmadd.s f11, f15, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x17, 0x9761894c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xa00000e9 # load x3 with value 0xa00000e9
sw x3, 0(x2) # store 0xa00000e9 in memory
flw f26, 0(x2) # load 0xa00000e9 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f17, f8, f26, f2, dyn # perform operation
fmadd.s f17, f8, f26, f2, rdn # perform operation
fmadd.s f17, f8, f26, f2, rmm # perform operation
fmadd.s f17, f8, f26, f2, rne # perform operation
fmadd.s f17, f8, f26, f2, rtz # perform operation
fmadd.s f17, f8, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x18, 0x088ce68f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x3b18c23d # load x3 with value 0x3b18c23d
sw x3, 0(x2) # store 0x3b18c23d in memory
flw f29, 0(x2) # load 0x3b18c23d from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmadd.s f18, f15, f29, f9, dyn # perform operation
fmadd.s f18, f15, f29, f9, rdn # perform operation
fmadd.s f18, f15, f29, f9, rmm # perform operation
fmadd.s f18, f15, f29, f9, rne # perform operation
fmadd.s f18, f15, f29, f9, rtz # perform operation
fmadd.s f18, f15, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f29, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x16, 0x6d95e178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0x22c34dde # load x3 with value 0x22c34dde
sw x3, 0(x2) # store 0x22c34dde in memory
flw f8, 0(x2) # load 0x22c34dde from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmadd.s f16, f12, f8, f24, dyn # perform operation
fmadd.s f16, f12, f8, f24, rdn # perform operation
fmadd.s f16, f12, f8, f24, rmm # perform operation
fmadd.s f16, f12, f8, f24, rne # perform operation
fmadd.s f16, f12, f8, f24, rtz # perform operation
fmadd.s f16, f12, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f8, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x20, 0x785b17a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x612df1f5 # load x3 with value 0x612df1f5
sw x3, 0(x2) # store 0x612df1f5 in memory
flw f9, 0(x2) # load 0x612df1f5 from memory into f9
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmadd.s f20, f21, f9, f17, dyn # perform operation
fmadd.s f20, f21, f9, f17, rdn # perform operation
fmadd.s f20, f21, f9, f17, rmm # perform operation
fmadd.s f20, f21, f9, f17, rne # perform operation
fmadd.s f20, f21, f9, f17, rtz # perform operation
fmadd.s f20, f21, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x27, 0xc9fbab0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x27dcc3bd # load x3 with value 0x27dcc3bd
sw x3, 0(x2) # store 0x27dcc3bd in memory
flw f31, 0(x2) # load 0x27dcc3bd from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmadd.s f27, f25, f31, f19, dyn # perform operation
fmadd.s f27, f25, f31, f19, rdn # perform operation
fmadd.s f27, f25, f31, f19, rmm # perform operation
fmadd.s f27, f25, f31, f19, rne # perform operation
fmadd.s f27, f25, f31, f19, rtz # perform operation
fmadd.s f27, f25, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x7, 0x5a2a956a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
li x3, 0xb11b66c7 # load x3 with value 0xb11b66c7
sw x3, 0(x2) # store 0xb11b66c7 in memory
flw f24, 0(x2) # load 0xb11b66c7 from memory into f24
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f7, f12, f24, f5, dyn # perform operation
fmadd.s f7, f12, f24, f5, rdn # perform operation
fmadd.s f7, f12, f24, f5, rmm # perform operation
fmadd.s f7, f12, f24, f5, rne # perform operation
fmadd.s f7, f12, f24, f5, rtz # perform operation
fmadd.s f7, f12, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x5, 0x07363874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0x9eea3eed # load x3 with value 0x9eea3eed
sw x3, 0(x2) # store 0x9eea3eed in memory
flw f11, 0(x2) # load 0x9eea3eed from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fmadd.s f5, f26, f11, f10, dyn # perform operation
fmadd.s f5, f26, f11, f10, rdn # perform operation
fmadd.s f5, f26, f11, f10, rmm # perform operation
fmadd.s f5, f26, f11, f10, rne # perform operation
fmadd.s f5, f26, f11, f10, rtz # perform operation
fmadd.s f5, f26, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x19, 0x532a1565 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x05649ab8 # load x3 with value 0x05649ab8
sw x3, 0(x2) # store 0x05649ab8 in memory
flw f8, 0(x2) # load 0x05649ab8 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fmadd.s f19, f6, f8, f1, dyn # perform operation
fmadd.s f19, f6, f8, f1, rdn # perform operation
fmadd.s f19, f6, f8, f1, rmm # perform operation
fmadd.s f19, f6, f8, f1, rne # perform operation
fmadd.s f19, f6, f8, f1, rtz # perform operation
fmadd.s f19, f6, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f6, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f6, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x16, 0xc696c180 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xd23c4f22 # load x3 with value 0xd23c4f22
sw x3, 0(x2) # store 0xd23c4f22 in memory
flw f23, 0(x2) # load 0xd23c4f22 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
fmadd.s f16, f2, f23, f5, dyn # perform operation
fmadd.s f16, f2, f23, f5, rdn # perform operation
fmadd.s f16, f2, f23, f5, rmm # perform operation
fmadd.s f16, f2, f23, f5, rne # perform operation
fmadd.s f16, f2, f23, f5, rtz # perform operation
fmadd.s f16, f2, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f2, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f2, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x29, 0x0dc27516 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x94a5a65d # load x3 with value 0x94a5a65d
sw x3, 0(x2) # store 0x94a5a65d in memory
flw f6, 0(x2) # load 0x94a5a65d from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmadd.s f29, f27, f6, f24, dyn # perform operation
fmadd.s f29, f27, f6, f24, rdn # perform operation
fmadd.s f29, f27, f6, f24, rmm # perform operation
fmadd.s f29, f27, f6, f24, rne # perform operation
fmadd.s f29, f27, f6, f24, rtz # perform operation
fmadd.s f29, f27, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f6, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x23, 0x7f282675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xca3c08d3 # load x3 with value 0xca3c08d3
sw x3, 0(x2) # store 0xca3c08d3 in memory
flw f14, 0(x2) # load 0xca3c08d3 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f23, f7, f14, f13, dyn # perform operation
fmadd.s f23, f7, f14, f13, rdn # perform operation
fmadd.s f23, f7, f14, f13, rmm # perform operation
fmadd.s f23, f7, f14, f13, rne # perform operation
fmadd.s f23, f7, f14, f13, rtz # perform operation
fmadd.s f23, f7, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x19, 0x9ae56d45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x684e980d # load x3 with value 0x684e980d
sw x3, 0(x2) # store 0x684e980d in memory
flw f5, 0(x2) # load 0x684e980d from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f19, f16, f5, f13, dyn # perform operation
fmadd.s f19, f16, f5, f13, rdn # perform operation
fmadd.s f19, f16, f5, f13, rmm # perform operation
fmadd.s f19, f16, f5, f13, rne # perform operation
fmadd.s f19, f16, f5, f13, rtz # perform operation
fmadd.s f19, f16, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f5, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x8, 0x864f41cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xd78e0a4d # load x3 with value 0xd78e0a4d
sw x3, 0(x2) # store 0xd78e0a4d in memory
flw f24, 0(x2) # load 0xd78e0a4d from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmadd.s f8, f20, f24, f16, dyn # perform operation
fmadd.s f8, f20, f24, f16, rdn # perform operation
fmadd.s f8, f20, f24, f16, rmm # perform operation
fmadd.s f8, f20, f24, f16, rne # perform operation
fmadd.s f8, f20, f24, f16, rtz # perform operation
fmadd.s f8, f20, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x17, 0xd2a359f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x750cd9ce # load x3 with value 0x750cd9ce
sw x3, 0(x2) # store 0x750cd9ce in memory
flw f19, 0(x2) # load 0x750cd9ce from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
fmadd.s f17, f5, f19, f7, dyn # perform operation
fmadd.s f17, f5, f19, f7, rdn # perform operation
fmadd.s f17, f5, f19, f7, rmm # perform operation
fmadd.s f17, f5, f19, f7, rne # perform operation
fmadd.s f17, f5, f19, f7, rtz # perform operation
fmadd.s f17, f5, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x5, 0x8d13496b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x051f7355 # load x3 with value 0x051f7355
sw x3, 0(x2) # store 0x051f7355 in memory
flw f17, 0(x2) # load 0x051f7355 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f5, f30, f17, f15, dyn # perform operation
fmadd.s f5, f30, f17, f15, rdn # perform operation
fmadd.s f5, f30, f17, f15, rmm # perform operation
fmadd.s f5, f30, f17, f15, rne # perform operation
fmadd.s f5, f30, f17, f15, rtz # perform operation
fmadd.s f5, f30, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x30, 0x3acaa407 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x5f8c24d9 # load x3 with value 0x5f8c24d9
sw x3, 0(x2) # store 0x5f8c24d9 in memory
flw f13, 0(x2) # load 0x5f8c24d9 from memory into f13
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmadd.s f30, f18, f13, f11, dyn # perform operation
fmadd.s f30, f18, f13, f11, rdn # perform operation
fmadd.s f30, f18, f13, f11, rmm # perform operation
fmadd.s f30, f18, f13, f11, rne # perform operation
fmadd.s f30, f18, f13, f11, rtz # perform operation
fmadd.s f30, f18, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x13, 0x66bcb107 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x127de672 # load x3 with value 0x127de672
sw x3, 0(x2) # store 0x127de672 in memory
flw f1, 0(x2) # load 0x127de672 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmadd.s f13, f18, f1, f2, dyn # perform operation
fmadd.s f13, f18, f1, f2, rdn # perform operation
fmadd.s f13, f18, f1, f2, rmm # perform operation
fmadd.s f13, f18, f1, f2, rne # perform operation
fmadd.s f13, f18, f1, f2, rtz # perform operation
fmadd.s f13, f18, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x18, 0xdc1f53e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x2def2289 # load x3 with value 0x2def2289
sw x3, 0(x2) # store 0x2def2289 in memory
flw f26, 0(x2) # load 0x2def2289 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmadd.s f18, f21, f26, f30, dyn # perform operation
fmadd.s f18, f21, f26, f30, rdn # perform operation
fmadd.s f18, f21, f26, f30, rmm # perform operation
fmadd.s f18, f21, f26, f30, rne # perform operation
fmadd.s f18, f21, f26, f30, rtz # perform operation
fmadd.s f18, f21, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x28, 0x59002c77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x9d1bcd4a # load x3 with value 0x9d1bcd4a
sw x3, 0(x2) # store 0x9d1bcd4a in memory
flw f13, 0(x2) # load 0x9d1bcd4a from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmadd.s f28, f12, f13, f10, dyn # perform operation
fmadd.s f28, f12, f13, f10, rdn # perform operation
fmadd.s f28, f12, f13, f10, rmm # perform operation
fmadd.s f28, f12, f13, f10, rne # perform operation
fmadd.s f28, f12, f13, f10, rtz # perform operation
fmadd.s f28, f12, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x6, 0x624aa111 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x42579946 # load x3 with value 0x42579946
sw x3, 0(x2) # store 0x42579946 in memory
flw f23, 0(x2) # load 0x42579946 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmadd.s f6, f28, f23, f24, dyn # perform operation
fmadd.s f6, f28, f23, f24, rdn # perform operation
fmadd.s f6, f28, f23, f24, rmm # perform operation
fmadd.s f6, f28, f23, f24, rne # perform operation
fmadd.s f6, f28, f23, f24, rtz # perform operation
fmadd.s f6, f28, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f23, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x7, 0x18239e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x690c6623 # load x3 with value 0x690c6623
sw x3, 0(x2) # store 0x690c6623 in memory
flw f9, 0(x2) # load 0x690c6623 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmadd.s f7, f23, f9, f12, dyn # perform operation
fmadd.s f7, f23, f9, f12, rdn # perform operation
fmadd.s f7, f23, f9, f12, rmm # perform operation
fmadd.s f7, f23, f9, f12, rne # perform operation
fmadd.s f7, f23, f9, f12, rtz # perform operation
fmadd.s f7, f23, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f9, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x12, 0xcafd4d3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xe5f6c9ba # load x3 with value 0xe5f6c9ba
sw x3, 0(x2) # store 0xe5f6c9ba in memory
flw f2, 0(x2) # load 0xe5f6c9ba from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmadd.s f12, f14, f2, f21, dyn # perform operation
fmadd.s f12, f14, f2, f21, rdn # perform operation
fmadd.s f12, f14, f2, f21, rmm # perform operation
fmadd.s f12, f14, f2, f21, rne # perform operation
fmadd.s f12, f14, f2, f21, rtz # perform operation
fmadd.s f12, f14, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x9, 0x61053ffe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x8857e001 # load x3 with value 0x8857e001
sw x3, 0(x2) # store 0x8857e001 in memory
flw f19, 0(x2) # load 0x8857e001 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f9, f15, f19, f7, dyn # perform operation
fmadd.s f9, f15, f19, f7, rdn # perform operation
fmadd.s f9, f15, f19, f7, rmm # perform operation
fmadd.s f9, f15, f19, f7, rne # perform operation
fmadd.s f9, f15, f19, f7, rtz # perform operation
fmadd.s f9, f15, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f19, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x7, 0x7f679eac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x05ec33bf # load x3 with value 0x05ec33bf
sw x3, 0(x2) # store 0x05ec33bf in memory
flw f27, 0(x2) # load 0x05ec33bf from memory into f27
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmadd.s f7, f22, f27, f31, dyn # perform operation
fmadd.s f7, f22, f27, f31, rdn # perform operation
fmadd.s f7, f22, f27, f31, rmm # perform operation
fmadd.s f7, f22, f27, f31, rne # perform operation
fmadd.s f7, f22, f27, f31, rtz # perform operation
fmadd.s f7, f22, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x22, 0x53875291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x37b6f3d7 # load x3 with value 0x37b6f3d7
sw x3, 0(x2) # store 0x37b6f3d7 in memory
flw f7, 0(x2) # load 0x37b6f3d7 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
fmadd.s f22, f26, f7, f8, dyn # perform operation
fmadd.s f22, f26, f7, f8, rdn # perform operation
fmadd.s f22, f26, f7, f8, rmm # perform operation
fmadd.s f22, f26, f7, f8, rne # perform operation
fmadd.s f22, f26, f7, f8, rtz # perform operation
fmadd.s f22, f26, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x30, 0xc9885ad0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x39bba723 # load x3 with value 0x39bba723
sw x3, 0(x2) # store 0x39bba723 in memory
flw f14, 0(x2) # load 0x39bba723 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f30, f27, f14, f5, dyn # perform operation
fmadd.s f30, f27, f14, f5, rdn # perform operation
fmadd.s f30, f27, f14, f5, rmm # perform operation
fmadd.s f30, f27, f14, f5, rne # perform operation
fmadd.s f30, f27, f14, f5, rtz # perform operation
fmadd.s f30, f27, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x27, 0xb17a002f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0xbd69e116 # load x3 with value 0xbd69e116
sw x3, 0(x2) # store 0xbd69e116 in memory
flw f11, 0(x2) # load 0xbd69e116 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f27, f14, f11, f17, dyn # perform operation
fmadd.s f27, f14, f11, f17, rdn # perform operation
fmadd.s f27, f14, f11, f17, rmm # perform operation
fmadd.s f27, f14, f11, f17, rne # perform operation
fmadd.s f27, f14, f11, f17, rtz # perform operation
fmadd.s f27, f14, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x18, 0x6f788aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x8cbb8423 # load x3 with value 0x8cbb8423
sw x3, 0(x2) # store 0x8cbb8423 in memory
flw f24, 0(x2) # load 0x8cbb8423 from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmadd.s f18, f19, f24, f10, dyn # perform operation
fmadd.s f18, f19, f24, f10, rdn # perform operation
fmadd.s f18, f19, f24, f10, rmm # perform operation
fmadd.s f18, f19, f24, f10, rne # perform operation
fmadd.s f18, f19, f24, f10, rtz # perform operation
fmadd.s f18, f19, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x27, 0x0b5dc3d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0xf3dfc4c0 # load x3 with value 0xf3dfc4c0
sw x3, 0(x2) # store 0xf3dfc4c0 in memory
flw f18, 0(x2) # load 0xf3dfc4c0 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmadd.s f27, f19, f18, f25, dyn # perform operation
fmadd.s f27, f19, f18, f25, rdn # perform operation
fmadd.s f27, f19, f18, f25, rmm # perform operation
fmadd.s f27, f19, f18, f25, rne # perform operation
fmadd.s f27, f19, f18, f25, rtz # perform operation
fmadd.s f27, f19, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f19, f18, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x29, 0xfeadb89c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0xb054a196 # load x3 with value 0xb054a196
sw x3, 0(x2) # store 0xb054a196 in memory
flw f5, 0(x2) # load 0xb054a196 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f29, f15, f5, f26, dyn # perform operation
fmadd.s f29, f15, f5, f26, rdn # perform operation
fmadd.s f29, f15, f5, f26, rmm # perform operation
fmadd.s f29, f15, f5, f26, rne # perform operation
fmadd.s f29, f15, f5, f26, rtz # perform operation
fmadd.s f29, f15, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f15, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f15, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x28, 0x567295e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x9ecf770e # load x3 with value 0x9ecf770e
sw x3, 0(x2) # store 0x9ecf770e in memory
flw f23, 0(x2) # load 0x9ecf770e from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f28, f13, f23, f1, dyn # perform operation
fmadd.s f28, f13, f23, f1, rdn # perform operation
fmadd.s f28, f13, f23, f1, rmm # perform operation
fmadd.s f28, f13, f23, f1, rne # perform operation
fmadd.s f28, f13, f23, f1, rtz # perform operation
fmadd.s f28, f13, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x27, 0xfd56bf4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x4173b82a # load x3 with value 0x4173b82a
sw x3, 0(x2) # store 0x4173b82a in memory
flw f22, 0(x2) # load 0x4173b82a from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmadd.s f27, f7, f22, f6, dyn # perform operation
fmadd.s f27, f7, f22, f6, rdn # perform operation
fmadd.s f27, f7, f22, f6, rmm # perform operation
fmadd.s f27, f7, f22, f6, rne # perform operation
fmadd.s f27, f7, f22, f6, rtz # perform operation
fmadd.s f27, f7, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f22, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x14, 0x00b1d913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x455b023d # load x3 with value 0x455b023d
sw x3, 0(x2) # store 0x455b023d in memory
flw f30, 0(x2) # load 0x455b023d from memory into f30
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmadd.s f14, f6, f30, f29, dyn # perform operation
fmadd.s f14, f6, f30, f29, rdn # perform operation
fmadd.s f14, f6, f30, f29, rmm # perform operation
fmadd.s f14, f6, f30, f29, rne # perform operation
fmadd.s f14, f6, f30, f29, rtz # perform operation
fmadd.s f14, f6, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f30, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x17, 0xd933f4b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x7f18d274 # load x3 with value 0x7f18d274
sw x3, 0(x2) # store 0x7f18d274 in memory
flw f18, 0(x2) # load 0x7f18d274 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmadd.s f17, f23, f18, f19, dyn # perform operation
fmadd.s f17, f23, f18, f19, rdn # perform operation
fmadd.s f17, f23, f18, f19, rmm # perform operation
fmadd.s f17, f23, f18, f19, rne # perform operation
fmadd.s f17, f23, f18, f19, rtz # perform operation
fmadd.s f17, f23, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f18, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x20, 0x9b0a3c14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
li x3, 0x0a9b98e4 # load x3 with value 0x0a9b98e4
sw x3, 0(x2) # store 0x0a9b98e4 in memory
flw f23, 0(x2) # load 0x0a9b98e4 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmadd.s f20, f5, f23, f21, dyn # perform operation
fmadd.s f20, f5, f23, f21, rdn # perform operation
fmadd.s f20, f5, f23, f21, rmm # perform operation
fmadd.s f20, f5, f23, f21, rne # perform operation
fmadd.s f20, f5, f23, f21, rtz # perform operation
fmadd.s f20, f5, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f5, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f5, f23, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x22, 0xf709b008 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x2a437c58 # load x3 with value 0x2a437c58
sw x3, 0(x2) # store 0x2a437c58 in memory
flw f21, 0(x2) # load 0x2a437c58 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
fmadd.s f22, f17, f21, f27, dyn # perform operation
fmadd.s f22, f17, f21, f27, rdn # perform operation
fmadd.s f22, f17, f21, f27, rmm # perform operation
fmadd.s f22, f17, f21, f27, rne # perform operation
fmadd.s f22, f17, f21, f27, rtz # perform operation
fmadd.s f22, f17, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x17, 0x1dde63ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x012ae7a8 # load x3 with value 0x012ae7a8
sw x3, 0(x2) # store 0x012ae7a8 in memory
flw f12, 0(x2) # load 0x012ae7a8 from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f17, f26, f12, f30, dyn # perform operation
fmadd.s f17, f26, f12, f30, rdn # perform operation
fmadd.s f17, f26, f12, f30, rmm # perform operation
fmadd.s f17, f26, f12, f30, rne # perform operation
fmadd.s f17, f26, f12, f30, rtz # perform operation
fmadd.s f17, f26, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f12, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x6, 0x8f5195d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x502ea8a2 # load x3 with value 0x502ea8a2
sw x3, 0(x2) # store 0x502ea8a2 in memory
flw f22, 0(x2) # load 0x502ea8a2 from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmadd.s f6, f7, f22, f1, dyn # perform operation
fmadd.s f6, f7, f22, f1, rdn # perform operation
fmadd.s f6, f7, f22, f1, rmm # perform operation
fmadd.s f6, f7, f22, f1, rne # perform operation
fmadd.s f6, f7, f22, f1, rtz # perform operation
fmadd.s f6, f7, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x28, 0x3c01ff9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0x3847f27d # load x3 with value 0x3847f27d
sw x3, 0(x2) # store 0x3847f27d in memory
flw f23, 0(x2) # load 0x3847f27d from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
fmadd.s f28, f5, f23, f25, dyn # perform operation
fmadd.s f28, f5, f23, f25, rdn # perform operation
fmadd.s f28, f5, f23, f25, rmm # perform operation
fmadd.s f28, f5, f23, f25, rne # perform operation
fmadd.s f28, f5, f23, f25, rtz # perform operation
fmadd.s f28, f5, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x28, 0x859feddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x04d68df3 # load x3 with value 0x04d68df3
sw x3, 0(x2) # store 0x04d68df3 in memory
flw f14, 0(x2) # load 0x04d68df3 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmadd.s f28, f22, f14, f1, dyn # perform operation
fmadd.s f28, f22, f14, f1, rdn # perform operation
fmadd.s f28, f22, f14, f1, rmm # perform operation
fmadd.s f28, f22, f14, f1, rne # perform operation
fmadd.s f28, f22, f14, f1, rtz # perform operation
fmadd.s f28, f22, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f22, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f22, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f22, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f22, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f22, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x9, 0xa0a0cba1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xa15d601c # load x3 with value 0xa15d601c
sw x3, 0(x2) # store 0xa15d601c in memory
flw f23, 0(x2) # load 0xa15d601c from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmadd.s f9, f12, f23, f18, dyn # perform operation
fmadd.s f9, f12, f23, f18, rdn # perform operation
fmadd.s f9, f12, f23, f18, rmm # perform operation
fmadd.s f9, f12, f23, f18, rne # perform operation
fmadd.s f9, f12, f23, f18, rtz # perform operation
fmadd.s f9, f12, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f12, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f12, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x27, 0x7abbf04f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x05589554 # load x3 with value 0x05589554
sw x3, 0(x2) # store 0x05589554 in memory
flw f5, 0(x2) # load 0x05589554 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f27, f3, f5, f20, dyn # perform operation
fmadd.s f27, f3, f5, f20, rdn # perform operation
fmadd.s f27, f3, f5, f20, rmm # perform operation
fmadd.s f27, f3, f5, f20, rne # perform operation
fmadd.s f27, f3, f5, f20, rtz # perform operation
fmadd.s f27, f3, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f5, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x26, 0x7eb4af57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xcdfa3952 # load x3 with value 0xcdfa3952
sw x3, 0(x2) # store 0xcdfa3952 in memory
flw f24, 0(x2) # load 0xcdfa3952 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f26, f12, f24, f22, dyn # perform operation
fmadd.s f26, f12, f24, f22, rdn # perform operation
fmadd.s f26, f12, f24, f22, rmm # perform operation
fmadd.s f26, f12, f24, f22, rne # perform operation
fmadd.s f26, f12, f24, f22, rtz # perform operation
fmadd.s f26, f12, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f12, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f12, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f12, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f12, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f12, f24, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x20, 0xe0564cdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0xe977a9bd # load x3 with value 0xe977a9bd
sw x3, 0(x2) # store 0xe977a9bd in memory
flw f24, 0(x2) # load 0xe977a9bd from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmadd.s f20, f8, f24, f30, dyn # perform operation
fmadd.s f20, f8, f24, f30, rdn # perform operation
fmadd.s f20, f8, f24, f30, rmm # perform operation
fmadd.s f20, f8, f24, f30, rne # perform operation
fmadd.s f20, f8, f24, f30, rtz # perform operation
fmadd.s f20, f8, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x17, 0x7b7bb7aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x8e641475 # load x3 with value 0x8e641475
sw x3, 0(x2) # store 0x8e641475 in memory
flw f31, 0(x2) # load 0x8e641475 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fmadd.s f17, f6, f31, f16, dyn # perform operation
fmadd.s f17, f6, f31, f16, rdn # perform operation
fmadd.s f17, f6, f31, f16, rmm # perform operation
fmadd.s f17, f6, f31, f16, rne # perform operation
fmadd.s f17, f6, f31, f16, rtz # perform operation
fmadd.s f17, f6, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x29, 0x37c9a4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0x447c8ee4 # load x3 with value 0x447c8ee4
sw x3, 0(x2) # store 0x447c8ee4 in memory
flw f4, 0(x2) # load 0x447c8ee4 from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f29, f7, f4, f3, dyn # perform operation
fmadd.s f29, f7, f4, f3, rdn # perform operation
fmadd.s f29, f7, f4, f3, rmm # perform operation
fmadd.s f29, f7, f4, f3, rne # perform operation
fmadd.s f29, f7, f4, f3, rtz # perform operation
fmadd.s f29, f7, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x7, 0x78fff4b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x500172ff # load x3 with value 0x500172ff
sw x3, 0(x2) # store 0x500172ff in memory
flw f4, 0(x2) # load 0x500172ff from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmadd.s f7, f13, f4, f21, dyn # perform operation
fmadd.s f7, f13, f4, f21, rdn # perform operation
fmadd.s f7, f13, f4, f21, rmm # perform operation
fmadd.s f7, f13, f4, f21, rne # perform operation
fmadd.s f7, f13, f4, f21, rtz # perform operation
fmadd.s f7, f13, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x9, 0x9fb86ec5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x200a0be6 # load x3 with value 0x200a0be6
sw x3, 0(x2) # store 0x200a0be6 in memory
flw f21, 0(x2) # load 0x200a0be6 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f9, f6, f21, f27, dyn # perform operation
fmadd.s f9, f6, f21, f27, rdn # perform operation
fmadd.s f9, f6, f21, f27, rmm # perform operation
fmadd.s f9, f6, f21, f27, rne # perform operation
fmadd.s f9, f6, f21, f27, rtz # perform operation
fmadd.s f9, f6, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x29, 0xc1821ff3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xeb40d713 # load x3 with value 0xeb40d713
sw x3, 0(x2) # store 0xeb40d713 in memory
flw f1, 0(x2) # load 0xeb40d713 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmadd.s f29, f22, f1, f6, dyn # perform operation
fmadd.s f29, f22, f1, f6, rdn # perform operation
fmadd.s f29, f22, f1, f6, rmm # perform operation
fmadd.s f29, f22, f1, f6, rne # perform operation
fmadd.s f29, f22, f1, f6, rtz # perform operation
fmadd.s f29, f22, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f22, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f22, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x16, 0x0205c9e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x83120ced # load x3 with value 0x83120ced
sw x3, 0(x2) # store 0x83120ced in memory
flw f29, 0(x2) # load 0x83120ced from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmadd.s f16, f9, f29, f19, dyn # perform operation
fmadd.s f16, f9, f29, f19, rdn # perform operation
fmadd.s f16, f9, f29, f19, rmm # perform operation
fmadd.s f16, f9, f29, f19, rne # perform operation
fmadd.s f16, f9, f29, f19, rtz # perform operation
fmadd.s f16, f9, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f29, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x13, 0xed189e25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x4f85b5a9 # load x3 with value 0x4f85b5a9
sw x3, 0(x2) # store 0x4f85b5a9 in memory
flw f22, 0(x2) # load 0x4f85b5a9 from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmadd.s f13, f31, f22, f1, dyn # perform operation
fmadd.s f13, f31, f22, f1, rdn # perform operation
fmadd.s f13, f31, f22, f1, rmm # perform operation
fmadd.s f13, f31, f22, f1, rne # perform operation
fmadd.s f13, f31, f22, f1, rtz # perform operation
fmadd.s f13, f31, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f31, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f31, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x5, 0xe19fadca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x0c686dfe # load x3 with value 0x0c686dfe
sw x3, 0(x2) # store 0x0c686dfe in memory
flw f21, 0(x2) # load 0x0c686dfe from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f5, f8, f21, f16, dyn # perform operation
fmadd.s f5, f8, f21, f16, rdn # perform operation
fmadd.s f5, f8, f21, f16, rmm # perform operation
fmadd.s f5, f8, f21, f16, rne # perform operation
fmadd.s f5, f8, f21, f16, rtz # perform operation
fmadd.s f5, f8, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f21, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x18, 0xefb7975b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
li x3, 0x57aab521 # load x3 with value 0x57aab521
sw x3, 0(x2) # store 0x57aab521 in memory
flw f3, 0(x2) # load 0x57aab521 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
fmadd.s f18, f25, f3, f22, dyn # perform operation
fmadd.s f18, f25, f3, f22, rdn # perform operation
fmadd.s f18, f25, f3, f22, rmm # perform operation
fmadd.s f18, f25, f3, f22, rne # perform operation
fmadd.s f18, f25, f3, f22, rtz # perform operation
fmadd.s f18, f25, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x30, 0xb1278849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0xbf96a7b8 # load x3 with value 0xbf96a7b8
sw x3, 0(x2) # store 0xbf96a7b8 in memory
flw f20, 0(x2) # load 0xbf96a7b8 from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmadd.s f30, f12, f20, f18, dyn # perform operation
fmadd.s f30, f12, f20, f18, rdn # perform operation
fmadd.s f30, f12, f20, f18, rmm # perform operation
fmadd.s f30, f12, f20, f18, rne # perform operation
fmadd.s f30, f12, f20, f18, rtz # perform operation
fmadd.s f30, f12, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x22, 0xded48b7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
li x3, 0xd63288e1 # load x3 with value 0xd63288e1
sw x3, 0(x2) # store 0xd63288e1 in memory
flw f31, 0(x2) # load 0xd63288e1 from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f22, f5, f31, f21, dyn # perform operation
fmadd.s f22, f5, f31, f21, rdn # perform operation
fmadd.s f22, f5, f31, f21, rmm # perform operation
fmadd.s f22, f5, f31, f21, rne # perform operation
fmadd.s f22, f5, f31, f21, rtz # perform operation
fmadd.s f22, f5, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x8, 0x7d14e374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x09231ef3 # load x3 with value 0x09231ef3
sw x3, 0(x2) # store 0x09231ef3 in memory
flw f5, 0(x2) # load 0x09231ef3 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f8, f3, f5, f31, dyn # perform operation
fmadd.s f8, f3, f5, f31, rdn # perform operation
fmadd.s f8, f3, f5, f31, rmm # perform operation
fmadd.s f8, f3, f5, f31, rne # perform operation
fmadd.s f8, f3, f5, f31, rtz # perform operation
fmadd.s f8, f3, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f3, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f3, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x24, 0x2ae59f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x76ad6588 # load x3 with value 0x76ad6588
sw x3, 0(x2) # store 0x76ad6588 in memory
flw f6, 0(x2) # load 0x76ad6588 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmadd.s f24, f19, f6, f13, dyn # perform operation
fmadd.s f24, f19, f6, f13, rdn # perform operation
fmadd.s f24, f19, f6, f13, rmm # perform operation
fmadd.s f24, f19, f6, f13, rne # perform operation
fmadd.s f24, f19, f6, f13, rtz # perform operation
fmadd.s f24, f19, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x16, 0xd64e5a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x51d9704f # load x3 with value 0x51d9704f
sw x3, 0(x2) # store 0x51d9704f in memory
flw f17, 0(x2) # load 0x51d9704f from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f16, f11, f17, f2, dyn # perform operation
fmadd.s f16, f11, f17, f2, rdn # perform operation
fmadd.s f16, f11, f17, f2, rmm # perform operation
fmadd.s f16, f11, f17, f2, rne # perform operation
fmadd.s f16, f11, f17, f2, rtz # perform operation
fmadd.s f16, f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x7, 0x5cb3bf1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xce6341da # load x3 with value 0xce6341da
sw x3, 0(x2) # store 0xce6341da in memory
flw f14, 0(x2) # load 0xce6341da from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmadd.s f7, f15, f14, f8, dyn # perform operation
fmadd.s f7, f15, f14, f8, rdn # perform operation
fmadd.s f7, f15, f14, f8, rmm # perform operation
fmadd.s f7, f15, f14, f8, rne # perform operation
fmadd.s f7, f15, f14, f8, rtz # perform operation
fmadd.s f7, f15, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f14, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x22, 0x3d607c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x2ab28789 # load x3 with value 0x2ab28789
sw x3, 0(x2) # store 0x2ab28789 in memory
flw f4, 0(x2) # load 0x2ab28789 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f22, f30, f4, f5, dyn # perform operation
fmadd.s f22, f30, f4, f5, rdn # perform operation
fmadd.s f22, f30, f4, f5, rmm # perform operation
fmadd.s f22, f30, f4, f5, rne # perform operation
fmadd.s f22, f30, f4, f5, rtz # perform operation
fmadd.s f22, f30, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f4, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x17, 0x964ec92c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xb43f53c1 # load x3 with value 0xb43f53c1
sw x3, 0(x2) # store 0xb43f53c1 in memory
flw f6, 0(x2) # load 0xb43f53c1 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmadd.s f17, f10, f6, f9, dyn # perform operation
fmadd.s f17, f10, f6, f9, rdn # perform operation
fmadd.s f17, f10, f6, f9, rmm # perform operation
fmadd.s f17, f10, f6, f9, rne # perform operation
fmadd.s f17, f10, f6, f9, rtz # perform operation
fmadd.s f17, f10, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x8, 0xc40765d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0xdc53af7b # load x3 with value 0xdc53af7b
sw x3, 0(x2) # store 0xdc53af7b in memory
flw f4, 0(x2) # load 0xdc53af7b from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f8, f14, f4, f9, dyn # perform operation
fmadd.s f8, f14, f4, f9, rdn # perform operation
fmadd.s f8, f14, f4, f9, rmm # perform operation
fmadd.s f8, f14, f4, f9, rne # perform operation
fmadd.s f8, f14, f4, f9, rtz # perform operation
fmadd.s f8, f14, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f4, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x25, 0x209217cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x33208f1e # load x3 with value 0x33208f1e
sw x3, 0(x2) # store 0x33208f1e in memory
flw f9, 0(x2) # load 0x33208f1e from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmadd.s f25, f17, f9, f22, dyn # perform operation
fmadd.s f25, f17, f9, f22, rdn # perform operation
fmadd.s f25, f17, f9, f22, rmm # perform operation
fmadd.s f25, f17, f9, f22, rne # perform operation
fmadd.s f25, f17, f9, f22, rtz # perform operation
fmadd.s f25, f17, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f17, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f17, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x26, 0xed4ea776 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
li x3, 0x6f628466 # load x3 with value 0x6f628466
sw x3, 0(x2) # store 0x6f628466 in memory
flw f6, 0(x2) # load 0x6f628466 from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmadd.s f26, f11, f6, f10, dyn # perform operation
fmadd.s f26, f11, f6, f10, rdn # perform operation
fmadd.s f26, f11, f6, f10, rmm # perform operation
fmadd.s f26, f11, f6, f10, rne # perform operation
fmadd.s f26, f11, f6, f10, rtz # perform operation
fmadd.s f26, f11, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f6, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x17, 0xc155465c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x9b6cfcf7 # load x3 with value 0x9b6cfcf7
sw x3, 0(x2) # store 0x9b6cfcf7 in memory
flw f8, 0(x2) # load 0x9b6cfcf7 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f17, f14, f8, f7, dyn # perform operation
fmadd.s f17, f14, f8, f7, rdn # perform operation
fmadd.s f17, f14, f8, f7, rmm # perform operation
fmadd.s f17, f14, f8, f7, rne # perform operation
fmadd.s f17, f14, f8, f7, rtz # perform operation
fmadd.s f17, f14, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x5, 0x14118284 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x0a020f7c # load x3 with value 0x0a020f7c
sw x3, 0(x2) # store 0x0a020f7c in memory
flw f2, 0(x2) # load 0x0a020f7c from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmadd.s f5, f27, f2, f31, dyn # perform operation
fmadd.s f5, f27, f2, f31, rdn # perform operation
fmadd.s f5, f27, f2, f31, rmm # perform operation
fmadd.s f5, f27, f2, f31, rne # perform operation
fmadd.s f5, f27, f2, f31, rtz # perform operation
fmadd.s f5, f27, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f2, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x29, 0x88ce10a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x44c1abc6 # load x3 with value 0x44c1abc6
sw x3, 0(x2) # store 0x44c1abc6 in memory
flw f6, 0(x2) # load 0x44c1abc6 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f29, f19, f6, f8, dyn # perform operation
fmadd.s f29, f19, f6, f8, rdn # perform operation
fmadd.s f29, f19, f6, f8, rmm # perform operation
fmadd.s f29, f19, f6, f8, rne # perform operation
fmadd.s f29, f19, f6, f8, rtz # perform operation
fmadd.s f29, f19, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f19, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f19, f6, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x29, 0x22fc3a66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x13cd84c0 # load x3 with value 0x13cd84c0
sw x3, 0(x2) # store 0x13cd84c0 in memory
flw f19, 0(x2) # load 0x13cd84c0 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fmadd.s f29, f17, f19, f1, dyn # perform operation
fmadd.s f29, f17, f19, f1, rdn # perform operation
fmadd.s f29, f17, f19, f1, rmm # perform operation
fmadd.s f29, f17, f19, f1, rne # perform operation
fmadd.s f29, f17, f19, f1, rtz # perform operation
fmadd.s f29, f17, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f19, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x1, 0x8161525a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xe8c143eb # load x3 with value 0xe8c143eb
sw x3, 0(x2) # store 0xe8c143eb in memory
flw f9, 0(x2) # load 0xe8c143eb from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmadd.s f1, f22, f9, f26, dyn # perform operation
fmadd.s f1, f22, f9, f26, rdn # perform operation
fmadd.s f1, f22, f9, f26, rmm # perform operation
fmadd.s f1, f22, f9, f26, rne # perform operation
fmadd.s f1, f22, f9, f26, rtz # perform operation
fmadd.s f1, f22, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x28, 0x44c87327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x0a9113e6 # load x3 with value 0x0a9113e6
sw x3, 0(x2) # store 0x0a9113e6 in memory
flw f7, 0(x2) # load 0x0a9113e6 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f28, f27, f7, f23, dyn # perform operation
fmadd.s f28, f27, f7, f23, rdn # perform operation
fmadd.s f28, f27, f7, f23, rmm # perform operation
fmadd.s f28, f27, f7, f23, rne # perform operation
fmadd.s f28, f27, f7, f23, rtz # perform operation
fmadd.s f28, f27, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f7, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x1, 0x4065378d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xf8f08492 # load x3 with value 0xf8f08492
sw x3, 0(x2) # store 0xf8f08492 in memory
flw f30, 0(x2) # load 0xf8f08492 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmadd.s f1, f14, f30, f10, dyn # perform operation
fmadd.s f1, f14, f30, f10, rdn # perform operation
fmadd.s f1, f14, f30, f10, rmm # perform operation
fmadd.s f1, f14, f30, f10, rne # perform operation
fmadd.s f1, f14, f30, f10, rtz # perform operation
fmadd.s f1, f14, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f30, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x4, 0x7533eec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x2930fdf8 # load x3 with value 0x2930fdf8
sw x3, 0(x2) # store 0x2930fdf8 in memory
flw f14, 0(x2) # load 0x2930fdf8 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmadd.s f4, f17, f14, f21, dyn # perform operation
fmadd.s f4, f17, f14, f21, rdn # perform operation
fmadd.s f4, f17, f14, f21, rmm # perform operation
fmadd.s f4, f17, f14, f21, rne # perform operation
fmadd.s f4, f17, f14, f21, rtz # perform operation
fmadd.s f4, f17, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f17, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f17, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x31, 0x881674db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x0f3ad382 # load x3 with value 0x0f3ad382
sw x3, 0(x2) # store 0x0f3ad382 in memory
flw f14, 0(x2) # load 0x0f3ad382 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f31, f12, f14, f1, dyn # perform operation
fmadd.s f31, f12, f14, f1, rdn # perform operation
fmadd.s f31, f12, f14, f1, rmm # perform operation
fmadd.s f31, f12, f14, f1, rne # perform operation
fmadd.s f31, f12, f14, f1, rtz # perform operation
fmadd.s f31, f12, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f14, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x30, 0xc8e6079e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0xb249b2a2 # load x3 with value 0xb249b2a2
sw x3, 0(x2) # store 0xb249b2a2 in memory
flw f20, 0(x2) # load 0xb249b2a2 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmadd.s f30, f10, f20, f2, dyn # perform operation
fmadd.s f30, f10, f20, f2, rdn # perform operation
fmadd.s f30, f10, f20, f2, rmm # perform operation
fmadd.s f30, f10, f20, f2, rne # perform operation
fmadd.s f30, f10, f20, f2, rtz # perform operation
fmadd.s f30, f10, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f10, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f10, f20, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x14, 0x8c8a96eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0xbd344e28 # load x3 with value 0xbd344e28
sw x3, 0(x2) # store 0xbd344e28 in memory
flw f27, 0(x2) # load 0xbd344e28 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmadd.s f14, f13, f27, f18, dyn # perform operation
fmadd.s f14, f13, f27, f18, rdn # perform operation
fmadd.s f14, f13, f27, f18, rmm # perform operation
fmadd.s f14, f13, f27, f18, rne # perform operation
fmadd.s f14, f13, f27, f18, rtz # perform operation
fmadd.s f14, f13, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x4, 0x9793968f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
li x3, 0x140867c5 # load x3 with value 0x140867c5
sw x3, 0(x2) # store 0x140867c5 in memory
flw f9, 0(x2) # load 0x140867c5 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f4, f10, f9, f2, dyn # perform operation
fmadd.s f4, f10, f9, f2, rdn # perform operation
fmadd.s f4, f10, f9, f2, rmm # perform operation
fmadd.s f4, f10, f9, f2, rne # perform operation
fmadd.s f4, f10, f9, f2, rtz # perform operation
fmadd.s f4, f10, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x27, 0x3cf1d3a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xf98ac873 # load x3 with value 0xf98ac873
sw x3, 0(x2) # store 0xf98ac873 in memory
flw f10, 0(x2) # load 0xf98ac873 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f27, f28, f10, f14, dyn # perform operation
fmadd.s f27, f28, f10, f14, rdn # perform operation
fmadd.s f27, f28, f10, f14, rmm # perform operation
fmadd.s f27, f28, f10, f14, rne # perform operation
fmadd.s f27, f28, f10, f14, rtz # perform operation
fmadd.s f27, f28, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f10, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x14, 0xcd0035aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x5a94e5ee # load x3 with value 0x5a94e5ee
sw x3, 0(x2) # store 0x5a94e5ee in memory
flw f24, 0(x2) # load 0x5a94e5ee from memory into f24
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f14, f7, f24, f5, dyn # perform operation
fmadd.s f14, f7, f24, f5, rdn # perform operation
fmadd.s f14, f7, f24, f5, rmm # perform operation
fmadd.s f14, f7, f24, f5, rne # perform operation
fmadd.s f14, f7, f24, f5, rtz # perform operation
fmadd.s f14, f7, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f24, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x7, 0xacff2ebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0x63f1be8e # load x3 with value 0x63f1be8e
sw x3, 0(x2) # store 0x63f1be8e in memory
flw f15, 0(x2) # load 0x63f1be8e from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fmadd.s f7, f4, f15, f20, dyn # perform operation
fmadd.s f7, f4, f15, f20, rdn # perform operation
fmadd.s f7, f4, f15, f20, rmm # perform operation
fmadd.s f7, f4, f15, f20, rne # perform operation
fmadd.s f7, f4, f15, f20, rtz # perform operation
fmadd.s f7, f4, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f4, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f4, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f4, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f4, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f4, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x28, 0x9c5942e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0xa875c262 # load x3 with value 0xa875c262
sw x3, 0(x2) # store 0xa875c262 in memory
flw f4, 0(x2) # load 0xa875c262 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
fmadd.s f28, f22, f4, f30, dyn # perform operation
fmadd.s f28, f22, f4, f30, rdn # perform operation
fmadd.s f28, f22, f4, f30, rmm # perform operation
fmadd.s f28, f22, f4, f30, rne # perform operation
fmadd.s f28, f22, f4, f30, rtz # perform operation
fmadd.s f28, f22, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f22, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f22, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f22, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f22, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f22, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x13, 0x02ac8961 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xc8a1cede # load x3 with value 0xc8a1cede
sw x3, 0(x2) # store 0xc8a1cede in memory
flw f31, 0(x2) # load 0xc8a1cede from memory into f31
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
fmadd.s f13, f19, f31, f11, dyn # perform operation
fmadd.s f13, f19, f31, f11, rdn # perform operation
fmadd.s f13, f19, f31, f11, rmm # perform operation
fmadd.s f13, f19, f31, f11, rne # perform operation
fmadd.s f13, f19, f31, f11, rtz # perform operation
fmadd.s f13, f19, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f31, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x4, 0x137c9b54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xd928ad29 # load x3 with value 0xd928ad29
sw x3, 0(x2) # store 0xd928ad29 in memory
flw f16, 0(x2) # load 0xd928ad29 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmadd.s f4, f24, f16, f7, dyn # perform operation
fmadd.s f4, f24, f16, f7, rdn # perform operation
fmadd.s f4, f24, f16, f7, rmm # perform operation
fmadd.s f4, f24, f16, f7, rne # perform operation
fmadd.s f4, f24, f16, f7, rtz # perform operation
fmadd.s f4, f24, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f24, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f24, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x17, 0x0762bebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x6ca46a4d # load x3 with value 0x6ca46a4d
sw x3, 0(x2) # store 0x6ca46a4d in memory
flw f24, 0(x2) # load 0x6ca46a4d from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmadd.s f17, f12, f24, f3, dyn # perform operation
fmadd.s f17, f12, f24, f3, rdn # perform operation
fmadd.s f17, f12, f24, f3, rmm # perform operation
fmadd.s f17, f12, f24, f3, rne # perform operation
fmadd.s f17, f12, f24, f3, rtz # perform operation
fmadd.s f17, f12, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x17, 0x8c8b4b45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x4a742d88 # load x3 with value 0x4a742d88
sw x3, 0(x2) # store 0x4a742d88 in memory
flw f15, 0(x2) # load 0x4a742d88 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmadd.s f17, f1, f15, f6, dyn # perform operation
fmadd.s f17, f1, f15, f6, rdn # perform operation
fmadd.s f17, f1, f15, f6, rmm # perform operation
fmadd.s f17, f1, f15, f6, rne # perform operation
fmadd.s f17, f1, f15, f6, rtz # perform operation
fmadd.s f17, f1, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f15, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x16, 0x96adfbf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x3c8b4620 # load x3 with value 0x3c8b4620
sw x3, 0(x2) # store 0x3c8b4620 in memory
flw f1, 0(x2) # load 0x3c8b4620 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmadd.s f16, f25, f1, f4, dyn # perform operation
fmadd.s f16, f25, f1, f4, rdn # perform operation
fmadd.s f16, f25, f1, f4, rmm # perform operation
fmadd.s f16, f25, f1, f4, rne # perform operation
fmadd.s f16, f25, f1, f4, rtz # perform operation
fmadd.s f16, f25, f1, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f25, f1, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f25, f1, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f25, f1, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f25, f1, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f25, f1, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x11, 0x31f29bf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xd8efd592 # load x3 with value 0xd8efd592
sw x3, 0(x2) # store 0xd8efd592 in memory
flw f27, 0(x2) # load 0xd8efd592 from memory into f27
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
fmadd.s f11, f7, f27, f6, dyn # perform operation
fmadd.s f11, f7, f27, f6, rdn # perform operation
fmadd.s f11, f7, f27, f6, rmm # perform operation
fmadd.s f11, f7, f27, f6, rne # perform operation
fmadd.s f11, f7, f27, f6, rtz # perform operation
fmadd.s f11, f7, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x22, 0x4a3a0ce9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x9b971e5a # load x3 with value 0x9b971e5a
sw x3, 0(x2) # store 0x9b971e5a in memory
flw f17, 0(x2) # load 0x9b971e5a from memory into f17
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmadd.s f22, f15, f17, f23, dyn # perform operation
fmadd.s f22, f15, f17, f23, rdn # perform operation
fmadd.s f22, f15, f17, f23, rmm # perform operation
fmadd.s f22, f15, f17, f23, rne # perform operation
fmadd.s f22, f15, f17, f23, rtz # perform operation
fmadd.s f22, f15, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x31, 0xdb61f178 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0xe3e1b40a # load x3 with value 0xe3e1b40a
sw x3, 0(x2) # store 0xe3e1b40a in memory
flw f16, 0(x2) # load 0xe3e1b40a from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f31, f8, f16, f23, dyn # perform operation
fmadd.s f31, f8, f16, f23, rdn # perform operation
fmadd.s f31, f8, f16, f23, rmm # perform operation
fmadd.s f31, f8, f16, f23, rne # perform operation
fmadd.s f31, f8, f16, f23, rtz # perform operation
fmadd.s f31, f8, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f8, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f8, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x21, 0x3caf76b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xaab58da8 # load x3 with value 0xaab58da8
sw x3, 0(x2) # store 0xaab58da8 in memory
flw f10, 0(x2) # load 0xaab58da8 from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f21, f23, f10, f13, dyn # perform operation
fmadd.s f21, f23, f10, f13, rdn # perform operation
fmadd.s f21, f23, f10, f13, rmm # perform operation
fmadd.s f21, f23, f10, f13, rne # perform operation
fmadd.s f21, f23, f10, f13, rtz # perform operation
fmadd.s f21, f23, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f23, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f23, f10, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x29, 0xfa732b54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xbf97db46 # load x3 with value 0xbf97db46
sw x3, 0(x2) # store 0xbf97db46 in memory
flw f27, 0(x2) # load 0xbf97db46 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f29, f7, f27, f6, dyn # perform operation
fmadd.s f29, f7, f27, f6, rdn # perform operation
fmadd.s f29, f7, f27, f6, rmm # perform operation
fmadd.s f29, f7, f27, f6, rne # perform operation
fmadd.s f29, f7, f27, f6, rtz # perform operation
fmadd.s f29, f7, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f27, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x15, 0x4e45c22d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x0c6f15e9 # load x3 with value 0x0c6f15e9
sw x3, 0(x2) # store 0x0c6f15e9 in memory
flw f5, 0(x2) # load 0x0c6f15e9 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmadd.s f15, f8, f5, f21, dyn # perform operation
fmadd.s f15, f8, f5, f21, rdn # perform operation
fmadd.s f15, f8, f5, f21, rmm # perform operation
fmadd.s f15, f8, f5, f21, rne # perform operation
fmadd.s f15, f8, f5, f21, rtz # perform operation
fmadd.s f15, f8, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x15, 0xaddfb25b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x8921c93c # load x3 with value 0x8921c93c
sw x3, 0(x2) # store 0x8921c93c in memory
flw f10, 0(x2) # load 0x8921c93c from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fmadd.s f15, f17, f10, f6, dyn # perform operation
fmadd.s f15, f17, f10, f6, rdn # perform operation
fmadd.s f15, f17, f10, f6, rmm # perform operation
fmadd.s f15, f17, f10, f6, rne # perform operation
fmadd.s f15, f17, f10, f6, rtz # perform operation
fmadd.s f15, f17, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x22, 0x40ce5870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x723e95a3 # load x3 with value 0x723e95a3
sw x3, 0(x2) # store 0x723e95a3 in memory
flw f20, 0(x2) # load 0x723e95a3 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fmadd.s f22, f5, f20, f4, dyn # perform operation
fmadd.s f22, f5, f20, f4, rdn # perform operation
fmadd.s f22, f5, f20, f4, rmm # perform operation
fmadd.s f22, f5, f20, f4, rne # perform operation
fmadd.s f22, f5, f20, f4, rtz # perform operation
fmadd.s f22, f5, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x1, 0x27aabb67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x2452c443 # load x3 with value 0x2452c443
sw x3, 0(x2) # store 0x2452c443 in memory
flw f11, 0(x2) # load 0x2452c443 from memory into f11
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmadd.s f1, f19, f11, f30, dyn # perform operation
fmadd.s f1, f19, f11, f30, rdn # perform operation
fmadd.s f1, f19, f11, f30, rmm # perform operation
fmadd.s f1, f19, f11, f30, rne # perform operation
fmadd.s f1, f19, f11, f30, rtz # perform operation
fmadd.s f1, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x19, 0xc5f787e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x71ccdf6b # load x3 with value 0x71ccdf6b
sw x3, 0(x2) # store 0x71ccdf6b in memory
flw f31, 0(x2) # load 0x71ccdf6b from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fmadd.s f19, f20, f31, f16, dyn # perform operation
fmadd.s f19, f20, f31, f16, rdn # perform operation
fmadd.s f19, f20, f31, f16, rmm # perform operation
fmadd.s f19, f20, f31, f16, rne # perform operation
fmadd.s f19, f20, f31, f16, rtz # perform operation
fmadd.s f19, f20, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x8, 0xbe3eb40b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x7af1c633 # load x3 with value 0x7af1c633
sw x3, 0(x2) # store 0x7af1c633 in memory
flw f28, 0(x2) # load 0x7af1c633 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f8, f15, f28, f3, dyn # perform operation
fmadd.s f8, f15, f28, f3, rdn # perform operation
fmadd.s f8, f15, f28, f3, rmm # perform operation
fmadd.s f8, f15, f28, f3, rne # perform operation
fmadd.s f8, f15, f28, f3, rtz # perform operation
fmadd.s f8, f15, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f15, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f15, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x17, 0x83d0f271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xb305dacc # load x3 with value 0xb305dacc
sw x3, 0(x2) # store 0xb305dacc in memory
flw f26, 0(x2) # load 0xb305dacc from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmadd.s f17, f4, f26, f13, dyn # perform operation
fmadd.s f17, f4, f26, f13, rdn # perform operation
fmadd.s f17, f4, f26, f13, rmm # perform operation
fmadd.s f17, f4, f26, f13, rne # perform operation
fmadd.s f17, f4, f26, f13, rtz # perform operation
fmadd.s f17, f4, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f4, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f4, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f4, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f4, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f4, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x30, 0x27728120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xbe0b491c # load x3 with value 0xbe0b491c
sw x3, 0(x2) # store 0xbe0b491c in memory
flw f13, 0(x2) # load 0xbe0b491c from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fmadd.s f30, f27, f13, f4, dyn # perform operation
fmadd.s f30, f27, f13, f4, rdn # perform operation
fmadd.s f30, f27, f13, f4, rmm # perform operation
fmadd.s f30, f27, f13, f4, rne # perform operation
fmadd.s f30, f27, f13, f4, rtz # perform operation
fmadd.s f30, f27, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x11, 0x37d713c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x783cbd3e # load x3 with value 0x783cbd3e
sw x3, 0(x2) # store 0x783cbd3e in memory
flw f14, 0(x2) # load 0x783cbd3e from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
fmadd.s f11, f7, f14, f31, dyn # perform operation
fmadd.s f11, f7, f14, f31, rdn # perform operation
fmadd.s f11, f7, f14, f31, rmm # perform operation
fmadd.s f11, f7, f14, f31, rne # perform operation
fmadd.s f11, f7, f14, f31, rtz # perform operation
fmadd.s f11, f7, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x11, 0x9d3a9dc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x4a82cf59 # load x3 with value 0x4a82cf59
sw x3, 0(x2) # store 0x4a82cf59 in memory
flw f27, 0(x2) # load 0x4a82cf59 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
fmadd.s f11, f23, f27, f26, dyn # perform operation
fmadd.s f11, f23, f27, f26, rdn # perform operation
fmadd.s f11, f23, f27, f26, rmm # perform operation
fmadd.s f11, f23, f27, f26, rne # perform operation
fmadd.s f11, f23, f27, f26, rtz # perform operation
fmadd.s f11, f23, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f27, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x13, 0x1cb31c6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xd7dacccd # load x3 with value 0xd7dacccd
sw x3, 0(x2) # store 0xd7dacccd in memory
flw f29, 0(x2) # load 0xd7dacccd from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmadd.s f13, f27, f29, f12, dyn # perform operation
fmadd.s f13, f27, f29, f12, rdn # perform operation
fmadd.s f13, f27, f29, f12, rmm # perform operation
fmadd.s f13, f27, f29, f12, rne # perform operation
fmadd.s f13, f27, f29, f12, rtz # perform operation
fmadd.s f13, f27, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x5, 0x81683807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x23a514e3 # load x3 with value 0x23a514e3
sw x3, 0(x2) # store 0x23a514e3 in memory
flw f13, 0(x2) # load 0x23a514e3 from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmadd.s f5, f2, f13, f28, dyn # perform operation
fmadd.s f5, f2, f13, f28, rdn # perform operation
fmadd.s f5, f2, f13, f28, rmm # perform operation
fmadd.s f5, f2, f13, f28, rne # perform operation
fmadd.s f5, f2, f13, f28, rtz # perform operation
fmadd.s f5, f2, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x13, 0x5d889141 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x2ba0d34e # load x3 with value 0x2ba0d34e
sw x3, 0(x2) # store 0x2ba0d34e in memory
flw f1, 0(x2) # load 0x2ba0d34e from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fmadd.s f13, f20, f1, f11, dyn # perform operation
fmadd.s f13, f20, f1, f11, rdn # perform operation
fmadd.s f13, f20, f1, f11, rmm # perform operation
fmadd.s f13, f20, f1, f11, rne # perform operation
fmadd.s f13, f20, f1, f11, rtz # perform operation
fmadd.s f13, f20, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f20, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f20, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x22, 0x818d0ad6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x44c67409 # load x3 with value 0x44c67409
sw x3, 0(x2) # store 0x44c67409 in memory
flw f19, 0(x2) # load 0x44c67409 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fmadd.s f22, f7, f19, f20, dyn # perform operation
fmadd.s f22, f7, f19, f20, rdn # perform operation
fmadd.s f22, f7, f19, f20, rmm # perform operation
fmadd.s f22, f7, f19, f20, rne # perform operation
fmadd.s f22, f7, f19, f20, rtz # perform operation
fmadd.s f22, f7, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x6, 0x6a98aa89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
li x3, 0xce69c457 # load x3 with value 0xce69c457
sw x3, 0(x2) # store 0xce69c457 in memory
flw f31, 0(x2) # load 0xce69c457 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f6, f29, f31, f27, dyn # perform operation
fmadd.s f6, f29, f31, f27, rdn # perform operation
fmadd.s f6, f29, f31, f27, rmm # perform operation
fmadd.s f6, f29, f31, f27, rne # perform operation
fmadd.s f6, f29, f31, f27, rtz # perform operation
fmadd.s f6, f29, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x11, 0xdf2c633d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x3dd2a40a # load x3 with value 0x3dd2a40a
sw x3, 0(x2) # store 0x3dd2a40a in memory
flw f22, 0(x2) # load 0x3dd2a40a from memory into f22
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmadd.s f11, f7, f22, f18, dyn # perform operation
fmadd.s f11, f7, f22, f18, rdn # perform operation
fmadd.s f11, f7, f22, f18, rmm # perform operation
fmadd.s f11, f7, f22, f18, rne # perform operation
fmadd.s f11, f7, f22, f18, rtz # perform operation
fmadd.s f11, f7, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x27, 0xb193759c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0xa2a3a062 # load x3 with value 0xa2a3a062
sw x3, 0(x2) # store 0xa2a3a062 in memory
flw f29, 0(x2) # load 0xa2a3a062 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f27, f30, f29, f1, dyn # perform operation
fmadd.s f27, f30, f29, f1, rdn # perform operation
fmadd.s f27, f30, f29, f1, rmm # perform operation
fmadd.s f27, f30, f29, f1, rne # perform operation
fmadd.s f27, f30, f29, f1, rtz # perform operation
fmadd.s f27, f30, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f29, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x25, 0x63f4c1a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0xbd9635e5 # load x3 with value 0xbd9635e5
sw x3, 0(x2) # store 0xbd9635e5 in memory
flw f17, 0(x2) # load 0xbd9635e5 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f25, f22, f17, f26, dyn # perform operation
fmadd.s f25, f22, f17, f26, rdn # perform operation
fmadd.s f25, f22, f17, f26, rmm # perform operation
fmadd.s f25, f22, f17, f26, rne # perform operation
fmadd.s f25, f22, f17, f26, rtz # perform operation
fmadd.s f25, f22, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x18, 0xc9319ffa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0x55824e7c # load x3 with value 0x55824e7c
sw x3, 0(x2) # store 0x55824e7c in memory
flw f23, 0(x2) # load 0x55824e7c from memory into f23
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f18, f2, f23, f26, dyn # perform operation
fmadd.s f18, f2, f23, f26, rdn # perform operation
fmadd.s f18, f2, f23, f26, rmm # perform operation
fmadd.s f18, f2, f23, f26, rne # perform operation
fmadd.s f18, f2, f23, f26, rtz # perform operation
fmadd.s f18, f2, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x10, 0x14bdf983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x7c7da067 # load x3 with value 0x7c7da067
sw x3, 0(x2) # store 0x7c7da067 in memory
flw f25, 0(x2) # load 0x7c7da067 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmadd.s f10, f16, f25, f12, dyn # perform operation
fmadd.s f10, f16, f25, f12, rdn # perform operation
fmadd.s f10, f16, f25, f12, rmm # perform operation
fmadd.s f10, f16, f25, f12, rne # perform operation
fmadd.s f10, f16, f25, f12, rtz # perform operation
fmadd.s f10, f16, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x10, 0x5a07e1b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0xf891e41e # load x3 with value 0xf891e41e
sw x3, 0(x2) # store 0xf891e41e in memory
flw f12, 0(x2) # load 0xf891e41e from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmadd.s f10, f28, f12, f17, dyn # perform operation
fmadd.s f10, f28, f12, f17, rdn # perform operation
fmadd.s f10, f28, f12, f17, rmm # perform operation
fmadd.s f10, f28, f12, f17, rne # perform operation
fmadd.s f10, f28, f12, f17, rtz # perform operation
fmadd.s f10, f28, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f12, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x14, 0xb17bc722 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0xa4c9b988 # load x3 with value 0xa4c9b988
sw x3, 0(x2) # store 0xa4c9b988 in memory
flw f20, 0(x2) # load 0xa4c9b988 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fmadd.s f14, f25, f20, f15, dyn # perform operation
fmadd.s f14, f25, f20, f15, rdn # perform operation
fmadd.s f14, f25, f20, f15, rmm # perform operation
fmadd.s f14, f25, f20, f15, rne # perform operation
fmadd.s f14, f25, f20, f15, rtz # perform operation
fmadd.s f14, f25, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f20, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x5, 0x7b843f76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x8363c830 # load x3 with value 0x8363c830
sw x3, 0(x2) # store 0x8363c830 in memory
flw f27, 0(x2) # load 0x8363c830 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f5, f1, f27, f18, dyn # perform operation
fmadd.s f5, f1, f27, f18, rdn # perform operation
fmadd.s f5, f1, f27, f18, rmm # perform operation
fmadd.s f5, f1, f27, f18, rne # perform operation
fmadd.s f5, f1, f27, f18, rtz # perform operation
fmadd.s f5, f1, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f1, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f1, f27, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x6, 0x8adbc78a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x186116a7 # load x3 with value 0x186116a7
sw x3, 0(x2) # store 0x186116a7 in memory
flw f29, 0(x2) # load 0x186116a7 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmadd.s f6, f13, f29, f24, dyn # perform operation
fmadd.s f6, f13, f29, f24, rdn # perform operation
fmadd.s f6, f13, f29, f24, rmm # perform operation
fmadd.s f6, f13, f29, f24, rne # perform operation
fmadd.s f6, f13, f29, f24, rtz # perform operation
fmadd.s f6, f13, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f29, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x20, 0x975a0715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x19a14704 # load x3 with value 0x19a14704
sw x3, 0(x2) # store 0x19a14704 in memory
flw f25, 0(x2) # load 0x19a14704 from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fmadd.s f20, f17, f25, f24, dyn # perform operation
fmadd.s f20, f17, f25, f24, rdn # perform operation
fmadd.s f20, f17, f25, f24, rmm # perform operation
fmadd.s f20, f17, f25, f24, rne # perform operation
fmadd.s f20, f17, f25, f24, rtz # perform operation
fmadd.s f20, f17, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f17, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f17, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f17, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f17, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f17, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x5, 0x404f4003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0xec336fce # load x3 with value 0xec336fce
sw x3, 0(x2) # store 0xec336fce in memory
flw f17, 0(x2) # load 0xec336fce from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
fmadd.s f5, f30, f17, f3, dyn # perform operation
fmadd.s f5, f30, f17, f3, rdn # perform operation
fmadd.s f5, f30, f17, f3, rmm # perform operation
fmadd.s f5, f30, f17, f3, rne # perform operation
fmadd.s f5, f30, f17, f3, rtz # perform operation
fmadd.s f5, f30, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x15, 0x36709589 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x46e24039 # load x3 with value 0x46e24039
sw x3, 0(x2) # store 0x46e24039 in memory
flw f3, 0(x2) # load 0x46e24039 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmadd.s f15, f17, f3, f24, dyn # perform operation
fmadd.s f15, f17, f3, f24, rdn # perform operation
fmadd.s f15, f17, f3, f24, rmm # perform operation
fmadd.s f15, f17, f3, f24, rne # perform operation
fmadd.s f15, f17, f3, f24, rtz # perform operation
fmadd.s f15, f17, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x22, 0x03192a21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x2232d18e # load x3 with value 0x2232d18e
sw x3, 0(x2) # store 0x2232d18e in memory
flw f10, 0(x2) # load 0x2232d18e from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f22, f29, f10, f5, dyn # perform operation
fmadd.s f22, f29, f10, f5, rdn # perform operation
fmadd.s f22, f29, f10, f5, rmm # perform operation
fmadd.s f22, f29, f10, f5, rne # perform operation
fmadd.s f22, f29, f10, f5, rtz # perform operation
fmadd.s f22, f29, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x31, 0xb81a5231 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x350eecc7 # load x3 with value 0x350eecc7
sw x3, 0(x2) # store 0x350eecc7 in memory
flw f14, 0(x2) # load 0x350eecc7 from memory into f14
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmadd.s f31, f29, f14, f11, dyn # perform operation
fmadd.s f31, f29, f14, f11, rdn # perform operation
fmadd.s f31, f29, f14, f11, rmm # perform operation
fmadd.s f31, f29, f14, f11, rne # perform operation
fmadd.s f31, f29, f14, f11, rtz # perform operation
fmadd.s f31, f29, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x24, 0x26f7a938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0xcb03a7e5 # load x3 with value 0xcb03a7e5
sw x3, 0(x2) # store 0xcb03a7e5 in memory
flw f1, 0(x2) # load 0xcb03a7e5 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f24, f6, f1, f16, dyn # perform operation
fmadd.s f24, f6, f1, f16, rdn # perform operation
fmadd.s f24, f6, f1, f16, rmm # perform operation
fmadd.s f24, f6, f1, f16, rne # perform operation
fmadd.s f24, f6, f1, f16, rtz # perform operation
fmadd.s f24, f6, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x28, 0xf342baa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x3de25d20 # load x3 with value 0x3de25d20
sw x3, 0(x2) # store 0x3de25d20 in memory
flw f30, 0(x2) # load 0x3de25d20 from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmadd.s f28, f25, f30, f11, dyn # perform operation
fmadd.s f28, f25, f30, f11, rdn # perform operation
fmadd.s f28, f25, f30, f11, rmm # perform operation
fmadd.s f28, f25, f30, f11, rne # perform operation
fmadd.s f28, f25, f30, f11, rtz # perform operation
fmadd.s f28, f25, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x11, 0xb636767d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0x94477284 # load x3 with value 0x94477284
sw x3, 0(x2) # store 0x94477284 in memory
flw f2, 0(x2) # load 0x94477284 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmadd.s f11, f8, f2, f25, dyn # perform operation
fmadd.s f11, f8, f2, f25, rdn # perform operation
fmadd.s f11, f8, f2, f25, rmm # perform operation
fmadd.s f11, f8, f2, f25, rne # perform operation
fmadd.s f11, f8, f2, f25, rtz # perform operation
fmadd.s f11, f8, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f2, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x1, 0xd437cbbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0xd1b13a71 # load x3 with value 0xd1b13a71
sw x3, 0(x2) # store 0xd1b13a71 in memory
flw f27, 0(x2) # load 0xd1b13a71 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmadd.s f1, f26, f27, f21, dyn # perform operation
fmadd.s f1, f26, f27, f21, rdn # perform operation
fmadd.s f1, f26, f27, f21, rmm # perform operation
fmadd.s f1, f26, f27, f21, rne # perform operation
fmadd.s f1, f26, f27, f21, rtz # perform operation
fmadd.s f1, f26, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f26, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f26, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f26, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f26, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f26, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x26, 0x15dd6b2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xab82aaad # load x3 with value 0xab82aaad
sw x3, 0(x2) # store 0xab82aaad in memory
flw f25, 0(x2) # load 0xab82aaad from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fmadd.s f26, f20, f25, f15, dyn # perform operation
fmadd.s f26, f20, f25, f15, rdn # perform operation
fmadd.s f26, f20, f25, f15, rmm # perform operation
fmadd.s f26, f20, f25, f15, rne # perform operation
fmadd.s f26, f20, f25, f15, rtz # perform operation
fmadd.s f26, f20, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x18, 0x1504c989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0xa11ba432 # load x3 with value 0xa11ba432
sw x3, 0(x2) # store 0xa11ba432 in memory
flw f3, 0(x2) # load 0xa11ba432 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmadd.s f18, f30, f3, f21, dyn # perform operation
fmadd.s f18, f30, f3, f21, rdn # perform operation
fmadd.s f18, f30, f3, f21, rmm # perform operation
fmadd.s f18, f30, f3, f21, rne # perform operation
fmadd.s f18, f30, f3, f21, rtz # perform operation
fmadd.s f18, f30, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x10, 0xea973e51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xd2daed5f # load x3 with value 0xd2daed5f
sw x3, 0(x2) # store 0xd2daed5f in memory
flw f26, 0(x2) # load 0xd2daed5f from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f10, f20, f26, f30, dyn # perform operation
fmadd.s f10, f20, f26, f30, rdn # perform operation
fmadd.s f10, f20, f26, f30, rmm # perform operation
fmadd.s f10, f20, f26, f30, rne # perform operation
fmadd.s f10, f20, f26, f30, rtz # perform operation
fmadd.s f10, f20, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x16, 0x7faa005f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x265c4d70 # load x3 with value 0x265c4d70
sw x3, 0(x2) # store 0x265c4d70 in memory
flw f11, 0(x2) # load 0x265c4d70 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f16, f19, f11, f21, dyn # perform operation
fmadd.s f16, f19, f11, f21, rdn # perform operation
fmadd.s f16, f19, f11, f21, rmm # perform operation
fmadd.s f16, f19, f11, f21, rne # perform operation
fmadd.s f16, f19, f11, f21, rtz # perform operation
fmadd.s f16, f19, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f19, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f19, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f19, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f19, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f19, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x20, 0x4118875b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x66e444dd # load x3 with value 0x66e444dd
sw x3, 0(x2) # store 0x66e444dd in memory
flw f21, 0(x2) # load 0x66e444dd from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f20, f31, f21, f22, dyn # perform operation
fmadd.s f20, f31, f21, f22, rdn # perform operation
fmadd.s f20, f31, f21, f22, rmm # perform operation
fmadd.s f20, f31, f21, f22, rne # perform operation
fmadd.s f20, f31, f21, f22, rtz # perform operation
fmadd.s f20, f31, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f31, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f31, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f31, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f31, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f31, f21, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x27, 0x90a065b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
li x3, 0xb945c32e # load x3 with value 0xb945c32e
sw x3, 0(x2) # store 0xb945c32e in memory
flw f17, 0(x2) # load 0xb945c32e from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
fmadd.s f27, f12, f17, f4, dyn # perform operation
fmadd.s f27, f12, f17, f4, rdn # perform operation
fmadd.s f27, f12, f17, f4, rmm # perform operation
fmadd.s f27, f12, f17, f4, rne # perform operation
fmadd.s f27, f12, f17, f4, rtz # perform operation
fmadd.s f27, f12, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x12, 0x711bba3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x50f3b803 # load x3 with value 0x50f3b803
sw x3, 0(x2) # store 0x50f3b803 in memory
flw f28, 0(x2) # load 0x50f3b803 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f12, f27, f28, f8, dyn # perform operation
fmadd.s f12, f27, f28, f8, rdn # perform operation
fmadd.s f12, f27, f28, f8, rmm # perform operation
fmadd.s f12, f27, f28, f8, rne # perform operation
fmadd.s f12, f27, f28, f8, rtz # perform operation
fmadd.s f12, f27, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x30, 0x961a6edb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x88726a25 # load x3 with value 0x88726a25
sw x3, 0(x2) # store 0x88726a25 in memory
flw f26, 0(x2) # load 0x88726a25 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f30, f23, f26, f1, dyn # perform operation
fmadd.s f30, f23, f26, f1, rdn # perform operation
fmadd.s f30, f23, f26, f1, rmm # perform operation
fmadd.s f30, f23, f26, f1, rne # perform operation
fmadd.s f30, f23, f26, f1, rtz # perform operation
fmadd.s f30, f23, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x5, 0xf849580d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x14309e0d # load x3 with value 0x14309e0d
sw x3, 0(x2) # store 0x14309e0d in memory
flw f12, 0(x2) # load 0x14309e0d from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmadd.s f5, f3, f12, f29, dyn # perform operation
fmadd.s f5, f3, f12, f29, rdn # perform operation
fmadd.s f5, f3, f12, f29, rmm # perform operation
fmadd.s f5, f3, f12, f29, rne # perform operation
fmadd.s f5, f3, f12, f29, rtz # perform operation
fmadd.s f5, f3, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x2, 0x593c0529 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xee933f90 # load x3 with value 0xee933f90
sw x3, 0(x2) # store 0xee933f90 in memory
flw f4, 0(x2) # load 0xee933f90 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmadd.s f2, f5, f4, f9, dyn # perform operation
fmadd.s f2, f5, f4, f9, rdn # perform operation
fmadd.s f2, f5, f4, f9, rmm # perform operation
fmadd.s f2, f5, f4, f9, rne # perform operation
fmadd.s f2, f5, f4, f9, rtz # perform operation
fmadd.s f2, f5, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f4, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x5, 0x0b838553 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
li x3, 0x78fd0e36 # load x3 with value 0x78fd0e36
sw x3, 0(x2) # store 0x78fd0e36 in memory
flw f30, 0(x2) # load 0x78fd0e36 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmadd.s f5, f25, f30, f21, dyn # perform operation
fmadd.s f5, f25, f30, f21, rdn # perform operation
fmadd.s f5, f25, f30, f21, rmm # perform operation
fmadd.s f5, f25, f30, f21, rne # perform operation
fmadd.s f5, f25, f30, f21, rtz # perform operation
fmadd.s f5, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x8, 0x6e4ad338 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x15ec2135 # load x3 with value 0x15ec2135
sw x3, 0(x2) # store 0x15ec2135 in memory
flw f6, 0(x2) # load 0x15ec2135 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fmadd.s f8, f7, f6, f31, dyn # perform operation
fmadd.s f8, f7, f6, f31, rdn # perform operation
fmadd.s f8, f7, f6, f31, rmm # perform operation
fmadd.s f8, f7, f6, f31, rne # perform operation
fmadd.s f8, f7, f6, f31, rtz # perform operation
fmadd.s f8, f7, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x1, 0x0fe750f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x6e93a80e # load x3 with value 0x6e93a80e
sw x3, 0(x2) # store 0x6e93a80e in memory
flw f28, 0(x2) # load 0x6e93a80e from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmadd.s f1, f13, f28, f16, dyn # perform operation
fmadd.s f1, f13, f28, f16, rdn # perform operation
fmadd.s f1, f13, f28, f16, rmm # perform operation
fmadd.s f1, f13, f28, f16, rne # perform operation
fmadd.s f1, f13, f28, f16, rtz # perform operation
fmadd.s f1, f13, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f13, f28, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x15, 0x6f8f6144 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x0a0af4aa # load x3 with value 0x0a0af4aa
sw x3, 0(x2) # store 0x0a0af4aa in memory
flw f26, 0(x2) # load 0x0a0af4aa from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmadd.s f15, f10, f26, f31, dyn # perform operation
fmadd.s f15, f10, f26, f31, rdn # perform operation
fmadd.s f15, f10, f26, f31, rmm # perform operation
fmadd.s f15, f10, f26, f31, rne # perform operation
fmadd.s f15, f10, f26, f31, rtz # perform operation
fmadd.s f15, f10, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x29, 0xb3de8b39 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xc97eeeea # load x3 with value 0xc97eeeea
sw x3, 0(x2) # store 0xc97eeeea in memory
flw f15, 0(x2) # load 0xc97eeeea from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmadd.s f29, f17, f15, f30, dyn # perform operation
fmadd.s f29, f17, f15, f30, rdn # perform operation
fmadd.s f29, f17, f15, f30, rmm # perform operation
fmadd.s f29, f17, f15, f30, rne # perform operation
fmadd.s f29, f17, f15, f30, rtz # perform operation
fmadd.s f29, f17, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x17, 0xebc97f3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xf808ae49 # load x3 with value 0xf808ae49
sw x3, 0(x2) # store 0xf808ae49 in memory
flw f22, 0(x2) # load 0xf808ae49 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmadd.s f17, f19, f22, f29, dyn # perform operation
fmadd.s f17, f19, f22, f29, rdn # perform operation
fmadd.s f17, f19, f22, f29, rmm # perform operation
fmadd.s f17, f19, f22, f29, rne # perform operation
fmadd.s f17, f19, f22, f29, rtz # perform operation
fmadd.s f17, f19, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x1, 0x168add0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xf179316a # load x3 with value 0xf179316a
sw x3, 0(x2) # store 0xf179316a in memory
flw f26, 0(x2) # load 0xf179316a from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
fmadd.s f1, f19, f26, f8, dyn # perform operation
fmadd.s f1, f19, f26, f8, rdn # perform operation
fmadd.s f1, f19, f26, f8, rmm # perform operation
fmadd.s f1, f19, f26, f8, rne # perform operation
fmadd.s f1, f19, f26, f8, rtz # perform operation
fmadd.s f1, f19, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f26, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x30, 0x77d8cc76 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x7f030025 # load x3 with value 0x7f030025
sw x3, 0(x2) # store 0x7f030025 in memory
flw f25, 0(x2) # load 0x7f030025 from memory into f25
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f30, f6, f25, f20, dyn # perform operation
fmadd.s f30, f6, f25, f20, rdn # perform operation
fmadd.s f30, f6, f25, f20, rmm # perform operation
fmadd.s f30, f6, f25, f20, rne # perform operation
fmadd.s f30, f6, f25, f20, rtz # perform operation
fmadd.s f30, f6, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x24, 0x9a99a64b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x32a48ef8 # load x3 with value 0x32a48ef8
sw x3, 0(x2) # store 0x32a48ef8 in memory
flw f1, 0(x2) # load 0x32a48ef8 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fmadd.s f24, f20, f1, f8, dyn # perform operation
fmadd.s f24, f20, f1, f8, rdn # perform operation
fmadd.s f24, f20, f1, f8, rmm # perform operation
fmadd.s f24, f20, f1, f8, rne # perform operation
fmadd.s f24, f20, f1, f8, rtz # perform operation
fmadd.s f24, f20, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x11, 0x8510dd07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x3c458cc9 # load x3 with value 0x3c458cc9
sw x3, 0(x2) # store 0x3c458cc9 in memory
flw f15, 0(x2) # load 0x3c458cc9 from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
fmadd.s f11, f26, f15, f16, dyn # perform operation
fmadd.s f11, f26, f15, f16, rdn # perform operation
fmadd.s f11, f26, f15, f16, rmm # perform operation
fmadd.s f11, f26, f15, f16, rne # perform operation
fmadd.s f11, f26, f15, f16, rtz # perform operation
fmadd.s f11, f26, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f26, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f26, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x9, 0x1196b1b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xb936bba2 # load x3 with value 0xb936bba2
sw x3, 0(x2) # store 0xb936bba2 in memory
flw f28, 0(x2) # load 0xb936bba2 from memory into f28
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f9, f31, f28, f20, dyn # perform operation
fmadd.s f9, f31, f28, f20, rdn # perform operation
fmadd.s f9, f31, f28, f20, rmm # perform operation
fmadd.s f9, f31, f28, f20, rne # perform operation
fmadd.s f9, f31, f28, f20, rtz # perform operation
fmadd.s f9, f31, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x29, 0xf0d2b46d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0xa7771917 # load x3 with value 0xa7771917
sw x3, 0(x2) # store 0xa7771917 in memory
flw f4, 0(x2) # load 0xa7771917 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmadd.s f29, f18, f4, f13, dyn # perform operation
fmadd.s f29, f18, f4, f13, rdn # perform operation
fmadd.s f29, f18, f4, f13, rmm # perform operation
fmadd.s f29, f18, f4, f13, rne # perform operation
fmadd.s f29, f18, f4, f13, rtz # perform operation
fmadd.s f29, f18, f4, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f4, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f4, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f4, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f4, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f4, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x13, 0x054a3797 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x080e0945 # load x3 with value 0x080e0945
sw x3, 0(x2) # store 0x080e0945 in memory
flw f10, 0(x2) # load 0x080e0945 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
fmadd.s f13, f5, f10, f2, dyn # perform operation
fmadd.s f13, f5, f10, f2, rdn # perform operation
fmadd.s f13, f5, f10, f2, rmm # perform operation
fmadd.s f13, f5, f10, f2, rne # perform operation
fmadd.s f13, f5, f10, f2, rtz # perform operation
fmadd.s f13, f5, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f10, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x29, 0xa5ce19cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xa2ee19e1 # load x3 with value 0xa2ee19e1
sw x3, 0(x2) # store 0xa2ee19e1 in memory
flw f2, 0(x2) # load 0xa2ee19e1 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
fmadd.s f29, f14, f2, f23, dyn # perform operation
fmadd.s f29, f14, f2, f23, rdn # perform operation
fmadd.s f29, f14, f2, f23, rmm # perform operation
fmadd.s f29, f14, f2, f23, rne # perform operation
fmadd.s f29, f14, f2, f23, rtz # perform operation
fmadd.s f29, f14, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x7, 0xe096da50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x7372755d # load x3 with value 0x7372755d
sw x3, 0(x2) # store 0x7372755d in memory
flw f26, 0(x2) # load 0x7372755d from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmadd.s f7, f18, f26, f17, dyn # perform operation
fmadd.s f7, f18, f26, f17, rdn # perform operation
fmadd.s f7, f18, f26, f17, rmm # perform operation
fmadd.s f7, f18, f26, f17, rne # perform operation
fmadd.s f7, f18, f26, f17, rtz # perform operation
fmadd.s f7, f18, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x22, 0x86f85eb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x66fa9b30 # load x3 with value 0x66fa9b30
sw x3, 0(x2) # store 0x66fa9b30 in memory
flw f29, 0(x2) # load 0x66fa9b30 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f22, f5, f29, f20, dyn # perform operation
fmadd.s f22, f5, f29, f20, rdn # perform operation
fmadd.s f22, f5, f29, f20, rmm # perform operation
fmadd.s f22, f5, f29, f20, rne # perform operation
fmadd.s f22, f5, f29, f20, rtz # perform operation
fmadd.s f22, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x24, 0x94c724b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xabce71a1 # load x3 with value 0xabce71a1
sw x3, 0(x2) # store 0xabce71a1 in memory
flw f25, 0(x2) # load 0xabce71a1 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f24, f13, f25, f7, dyn # perform operation
fmadd.s f24, f13, f25, f7, rdn # perform operation
fmadd.s f24, f13, f25, f7, rmm # perform operation
fmadd.s f24, f13, f25, f7, rne # perform operation
fmadd.s f24, f13, f25, f7, rtz # perform operation
fmadd.s f24, f13, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f25, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x7, 0x28ce034c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0x97ac9415 # load x3 with value 0x97ac9415
sw x3, 0(x2) # store 0x97ac9415 in memory
flw f26, 0(x2) # load 0x97ac9415 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmadd.s f7, f23, f26, f21, dyn # perform operation
fmadd.s f7, f23, f26, f21, rdn # perform operation
fmadd.s f7, f23, f26, f21, rmm # perform operation
fmadd.s f7, f23, f26, f21, rne # perform operation
fmadd.s f7, f23, f26, f21, rtz # perform operation
fmadd.s f7, f23, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f26, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x12, 0x92738708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
li x3, 0xe0352767 # load x3 with value 0xe0352767
sw x3, 0(x2) # store 0xe0352767 in memory
flw f5, 0(x2) # load 0xe0352767 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmadd.s f12, f23, f5, f19, dyn # perform operation
fmadd.s f12, f23, f5, f19, rdn # perform operation
fmadd.s f12, f23, f5, f19, rmm # perform operation
fmadd.s f12, f23, f5, f19, rne # perform operation
fmadd.s f12, f23, f5, f19, rtz # perform operation
fmadd.s f12, f23, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f5, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x1, 0x917b1f71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x3e0c1c9a # load x3 with value 0x3e0c1c9a
sw x3, 0(x2) # store 0x3e0c1c9a in memory
flw f17, 0(x2) # load 0x3e0c1c9a from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f1, f27, f17, f30, dyn # perform operation
fmadd.s f1, f27, f17, f30, rdn # perform operation
fmadd.s f1, f27, f17, f30, rmm # perform operation
fmadd.s f1, f27, f17, f30, rne # perform operation
fmadd.s f1, f27, f17, f30, rtz # perform operation
fmadd.s f1, f27, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x8, 0x46ae1f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x7cff9bf5 # load x3 with value 0x7cff9bf5
sw x3, 0(x2) # store 0x7cff9bf5 in memory
flw f20, 0(x2) # load 0x7cff9bf5 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmadd.s f8, f19, f20, f21, dyn # perform operation
fmadd.s f8, f19, f20, f21, rdn # perform operation
fmadd.s f8, f19, f20, f21, rmm # perform operation
fmadd.s f8, f19, f20, f21, rne # perform operation
fmadd.s f8, f19, f20, f21, rtz # perform operation
fmadd.s f8, f19, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x8, 0x5473d453 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x7ffeab7f # load x3 with value 0x7ffeab7f
sw x3, 0(x2) # store 0x7ffeab7f in memory
flw f16, 0(x2) # load 0x7ffeab7f from memory into f16
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmadd.s f8, f19, f16, f10, dyn # perform operation
fmadd.s f8, f19, f16, f10, rdn # perform operation
fmadd.s f8, f19, f16, f10, rmm # perform operation
fmadd.s f8, f19, f16, f10, rne # perform operation
fmadd.s f8, f19, f16, f10, rtz # perform operation
fmadd.s f8, f19, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f16, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x10, 0x29e24fda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x92a0fbdf # load x3 with value 0x92a0fbdf
sw x3, 0(x2) # store 0x92a0fbdf in memory
flw f1, 0(x2) # load 0x92a0fbdf from memory into f1
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmadd.s f10, f9, f1, f27, dyn # perform operation
fmadd.s f10, f9, f1, f27, rdn # perform operation
fmadd.s f10, f9, f1, f27, rmm # perform operation
fmadd.s f10, f9, f1, f27, rne # perform operation
fmadd.s f10, f9, f1, f27, rtz # perform operation
fmadd.s f10, f9, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f1, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x25, 0x1467b7e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x823472e8 # load x3 with value 0x823472e8
sw x3, 0(x2) # store 0x823472e8 in memory
flw f26, 0(x2) # load 0x823472e8 from memory into f26
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fmadd.s f25, f21, f26, f16, dyn # perform operation
fmadd.s f25, f21, f26, f16, rdn # perform operation
fmadd.s f25, f21, f26, f16, rmm # perform operation
fmadd.s f25, f21, f26, f16, rne # perform operation
fmadd.s f25, f21, f26, f16, rtz # perform operation
fmadd.s f25, f21, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x4, 0xab68f63a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x77b53e0e # load x3 with value 0x77b53e0e
sw x3, 0(x2) # store 0x77b53e0e in memory
flw f1, 0(x2) # load 0x77b53e0e from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmadd.s f4, f19, f1, f8, dyn # perform operation
fmadd.s f4, f19, f1, f8, rdn # perform operation
fmadd.s f4, f19, f1, f8, rmm # perform operation
fmadd.s f4, f19, f1, f8, rne # perform operation
fmadd.s f4, f19, f1, f8, rtz # perform operation
fmadd.s f4, f19, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x6, 0x05823b4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x7a565104 # load x3 with value 0x7a565104
sw x3, 0(x2) # store 0x7a565104 in memory
flw f7, 0(x2) # load 0x7a565104 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f6, f25, f7, f1, dyn # perform operation
fmadd.s f6, f25, f7, f1, rdn # perform operation
fmadd.s f6, f25, f7, f1, rmm # perform operation
fmadd.s f6, f25, f7, f1, rne # perform operation
fmadd.s f6, f25, f7, f1, rtz # perform operation
fmadd.s f6, f25, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f25, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f25, f7, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x30, 0x86b7e884 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x841e3be8 # load x3 with value 0x841e3be8
sw x3, 0(x2) # store 0x841e3be8 in memory
flw f1, 0(x2) # load 0x841e3be8 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmadd.s f30, f11, f1, f6, dyn # perform operation
fmadd.s f30, f11, f1, f6, rdn # perform operation
fmadd.s f30, f11, f1, f6, rmm # perform operation
fmadd.s f30, f11, f1, f6, rne # perform operation
fmadd.s f30, f11, f1, f6, rtz # perform operation
fmadd.s f30, f11, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x23, 0x8e557110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x11428420 # load x3 with value 0x11428420
sw x3, 0(x2) # store 0x11428420 in memory
flw f26, 0(x2) # load 0x11428420 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmadd.s f23, f14, f26, f11, dyn # perform operation
fmadd.s f23, f14, f26, f11, rdn # perform operation
fmadd.s f23, f14, f26, f11, rmm # perform operation
fmadd.s f23, f14, f26, f11, rne # perform operation
fmadd.s f23, f14, f26, f11, rtz # perform operation
fmadd.s f23, f14, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x8, 0xdf46e897 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xaedc3e6c # load x3 with value 0xaedc3e6c
sw x3, 0(x2) # store 0xaedc3e6c in memory
flw f15, 0(x2) # load 0xaedc3e6c from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmadd.s f8, f30, f15, f27, dyn # perform operation
fmadd.s f8, f30, f15, f27, rdn # perform operation
fmadd.s f8, f30, f15, f27, rmm # perform operation
fmadd.s f8, f30, f15, f27, rne # perform operation
fmadd.s f8, f30, f15, f27, rtz # perform operation
fmadd.s f8, f30, f15, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f30, f15, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f30, f15, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x13, 0xd32da057 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x603059ea # load x3 with value 0x603059ea
sw x3, 0(x2) # store 0x603059ea in memory
flw f20, 0(x2) # load 0x603059ea from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f13, f30, f20, f18, dyn # perform operation
fmadd.s f13, f30, f20, f18, rdn # perform operation
fmadd.s f13, f30, f20, f18, rmm # perform operation
fmadd.s f13, f30, f20, f18, rne # perform operation
fmadd.s f13, f30, f20, f18, rtz # perform operation
fmadd.s f13, f30, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f30, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f30, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x8, 0xb3b9720a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x91992fce # load x3 with value 0x91992fce
sw x3, 0(x2) # store 0x91992fce in memory
flw f23, 0(x2) # load 0x91992fce from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fmadd.s f8, f16, f23, f15, dyn # perform operation
fmadd.s f8, f16, f23, f15, rdn # perform operation
fmadd.s f8, f16, f23, f15, rmm # perform operation
fmadd.s f8, f16, f23, f15, rne # perform operation
fmadd.s f8, f16, f23, f15, rtz # perform operation
fmadd.s f8, f16, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f23, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x29, 0x062eae57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x041d58c3 # load x3 with value 0x041d58c3
sw x3, 0(x2) # store 0x041d58c3 in memory
flw f19, 0(x2) # load 0x041d58c3 from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmadd.s f29, f14, f19, f8, dyn # perform operation
fmadd.s f29, f14, f19, f8, rdn # perform operation
fmadd.s f29, f14, f19, f8, rmm # perform operation
fmadd.s f29, f14, f19, f8, rne # perform operation
fmadd.s f29, f14, f19, f8, rtz # perform operation
fmadd.s f29, f14, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x21, 0x9d44b3a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xec59e516 # load x3 with value 0xec59e516
sw x3, 0(x2) # store 0xec59e516 in memory
flw f25, 0(x2) # load 0xec59e516 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f21, f14, f25, f10, dyn # perform operation
fmadd.s f21, f14, f25, f10, rdn # perform operation
fmadd.s f21, f14, f25, f10, rmm # perform operation
fmadd.s f21, f14, f25, f10, rne # perform operation
fmadd.s f21, f14, f25, f10, rtz # perform operation
fmadd.s f21, f14, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x22, 0x317385cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0xf4733acf # load x3 with value 0xf4733acf
sw x3, 0(x2) # store 0xf4733acf in memory
flw f30, 0(x2) # load 0xf4733acf from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
fmadd.s f22, f14, f30, f31, dyn # perform operation
fmadd.s f22, f14, f30, f31, rdn # perform operation
fmadd.s f22, f14, f30, f31, rmm # perform operation
fmadd.s f22, f14, f30, f31, rne # perform operation
fmadd.s f22, f14, f30, f31, rtz # perform operation
fmadd.s f22, f14, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f14, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f14, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x12, 0xeb077f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
li x3, 0xe2a91216 # load x3 with value 0xe2a91216
sw x3, 0(x2) # store 0xe2a91216 in memory
flw f3, 0(x2) # load 0xe2a91216 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmadd.s f12, f9, f3, f26, dyn # perform operation
fmadd.s f12, f9, f3, f26, rdn # perform operation
fmadd.s f12, f9, f3, f26, rmm # perform operation
fmadd.s f12, f9, f3, f26, rne # perform operation
fmadd.s f12, f9, f3, f26, rtz # perform operation
fmadd.s f12, f9, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f9, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f9, f3, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x6, 0x0c1edd0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x62b9bcb6 # load x3 with value 0x62b9bcb6
sw x3, 0(x2) # store 0x62b9bcb6 in memory
flw f24, 0(x2) # load 0x62b9bcb6 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f6, f20, f24, f23, dyn # perform operation
fmadd.s f6, f20, f24, f23, rdn # perform operation
fmadd.s f6, f20, f24, f23, rmm # perform operation
fmadd.s f6, f20, f24, f23, rne # perform operation
fmadd.s f6, f20, f24, f23, rtz # perform operation
fmadd.s f6, f20, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x24, 0xbb04c3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
li x3, 0x4fadd6d6 # load x3 with value 0x4fadd6d6
sw x3, 0(x2) # store 0x4fadd6d6 in memory
flw f26, 0(x2) # load 0x4fadd6d6 from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmadd.s f24, f12, f26, f28, dyn # perform operation
fmadd.s f24, f12, f26, f28, rdn # perform operation
fmadd.s f24, f12, f26, f28, rmm # perform operation
fmadd.s f24, f12, f26, f28, rne # perform operation
fmadd.s f24, f12, f26, f28, rtz # perform operation
fmadd.s f24, f12, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x8, 0x02cece60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xd1a4c114 # load x3 with value 0xd1a4c114
sw x3, 0(x2) # store 0xd1a4c114 in memory
flw f26, 0(x2) # load 0xd1a4c114 from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmadd.s f8, f16, f26, f22, dyn # perform operation
fmadd.s f8, f16, f26, f22, rdn # perform operation
fmadd.s f8, f16, f26, f22, rmm # perform operation
fmadd.s f8, f16, f26, f22, rne # perform operation
fmadd.s f8, f16, f26, f22, rtz # perform operation
fmadd.s f8, f16, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x8, 0x68d5420c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x5adefee0 # load x3 with value 0x5adefee0
sw x3, 0(x2) # store 0x5adefee0 in memory
flw f16, 0(x2) # load 0x5adefee0 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmadd.s f8, f11, f16, f21, dyn # perform operation
fmadd.s f8, f11, f16, f21, rdn # perform operation
fmadd.s f8, f11, f16, f21, rmm # perform operation
fmadd.s f8, f11, f16, f21, rne # perform operation
fmadd.s f8, f11, f16, f21, rtz # perform operation
fmadd.s f8, f11, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f16, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x7, 0x58310dbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x8f4a0f44 # load x3 with value 0x8f4a0f44
sw x3, 0(x2) # store 0x8f4a0f44 in memory
flw f6, 0(x2) # load 0x8f4a0f44 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmadd.s f7, f22, f6, f9, dyn # perform operation
fmadd.s f7, f22, f6, f9, rdn # perform operation
fmadd.s f7, f22, f6, f9, rmm # perform operation
fmadd.s f7, f22, f6, f9, rne # perform operation
fmadd.s f7, f22, f6, f9, rtz # perform operation
fmadd.s f7, f22, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x30, 0xf8a835a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0xa601b616 # load x3 with value 0xa601b616
sw x3, 0(x2) # store 0xa601b616 in memory
flw f15, 0(x2) # load 0xa601b616 from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmadd.s f30, f23, f15, f19, dyn # perform operation
fmadd.s f30, f23, f15, f19, rdn # perform operation
fmadd.s f30, f23, f15, f19, rmm # perform operation
fmadd.s f30, f23, f15, f19, rne # perform operation
fmadd.s f30, f23, f15, f19, rtz # perform operation
fmadd.s f30, f23, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x6, 0x42c9e1d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xcd46d579 # load x3 with value 0xcd46d579
sw x3, 0(x2) # store 0xcd46d579 in memory
flw f18, 0(x2) # load 0xcd46d579 from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f6, f28, f18, f29, dyn # perform operation
fmadd.s f6, f28, f18, f29, rdn # perform operation
fmadd.s f6, f28, f18, f29, rmm # perform operation
fmadd.s f6, f28, f18, f29, rne # perform operation
fmadd.s f6, f28, f18, f29, rtz # perform operation
fmadd.s f6, f28, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x27, 0xea469970 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0xdd7f4930 # load x3 with value 0xdd7f4930
sw x3, 0(x2) # store 0xdd7f4930 in memory
flw f28, 0(x2) # load 0xdd7f4930 from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f27, f3, f28, f20, dyn # perform operation
fmadd.s f27, f3, f28, f20, rdn # perform operation
fmadd.s f27, f3, f28, f20, rmm # perform operation
fmadd.s f27, f3, f28, f20, rne # perform operation
fmadd.s f27, f3, f28, f20, rtz # perform operation
fmadd.s f27, f3, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x25, 0xfa2bc157 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xed1a14e9 # load x3 with value 0xed1a14e9
sw x3, 0(x2) # store 0xed1a14e9 in memory
flw f11, 0(x2) # load 0xed1a14e9 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmadd.s f25, f2, f11, f23, dyn # perform operation
fmadd.s f25, f2, f11, f23, rdn # perform operation
fmadd.s f25, f2, f11, f23, rmm # perform operation
fmadd.s f25, f2, f11, f23, rne # perform operation
fmadd.s f25, f2, f11, f23, rtz # perform operation
fmadd.s f25, f2, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x13, 0x9a8a02a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0x9a33bdcc # load x3 with value 0x9a33bdcc
sw x3, 0(x2) # store 0x9a33bdcc in memory
flw f20, 0(x2) # load 0x9a33bdcc from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f13, f26, f20, f27, dyn # perform operation
fmadd.s f13, f26, f20, f27, rdn # perform operation
fmadd.s f13, f26, f20, f27, rmm # perform operation
fmadd.s f13, f26, f20, f27, rne # perform operation
fmadd.s f13, f26, f20, f27, rtz # perform operation
fmadd.s f13, f26, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f20, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x15, 0x72d8a51a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xaafd648b # load x3 with value 0xaafd648b
sw x3, 0(x2) # store 0xaafd648b in memory
flw f7, 0(x2) # load 0xaafd648b from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmadd.s f15, f26, f7, f3, dyn # perform operation
fmadd.s f15, f26, f7, f3, rdn # perform operation
fmadd.s f15, f26, f7, f3, rmm # perform operation
fmadd.s f15, f26, f7, f3, rne # perform operation
fmadd.s f15, f26, f7, f3, rtz # perform operation
fmadd.s f15, f26, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x23, 0x1a1555a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x1927d585 # load x3 with value 0x1927d585
sw x3, 0(x2) # store 0x1927d585 in memory
flw f29, 0(x2) # load 0x1927d585 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmadd.s f23, f20, f29, f26, dyn # perform operation
fmadd.s f23, f20, f29, f26, rdn # perform operation
fmadd.s f23, f20, f29, f26, rmm # perform operation
fmadd.s f23, f20, f29, f26, rne # perform operation
fmadd.s f23, f20, f29, f26, rtz # perform operation
fmadd.s f23, f20, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x7, 0xd581cbdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xd9dfd89e # load x3 with value 0xd9dfd89e
sw x3, 0(x2) # store 0xd9dfd89e in memory
flw f21, 0(x2) # load 0xd9dfd89e from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f7, f18, f21, f27, dyn # perform operation
fmadd.s f7, f18, f21, f27, rdn # perform operation
fmadd.s f7, f18, f21, f27, rmm # perform operation
fmadd.s f7, f18, f21, f27, rne # perform operation
fmadd.s f7, f18, f21, f27, rtz # perform operation
fmadd.s f7, f18, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x27, 0xd453ee24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x02565634 # load x3 with value 0x02565634
sw x3, 0(x2) # store 0x02565634 in memory
flw f21, 0(x2) # load 0x02565634 from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f27, f10, f21, f13, dyn # perform operation
fmadd.s f27, f10, f21, f13, rdn # perform operation
fmadd.s f27, f10, f21, f13, rmm # perform operation
fmadd.s f27, f10, f21, f13, rne # perform operation
fmadd.s f27, f10, f21, f13, rtz # perform operation
fmadd.s f27, f10, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f21, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x28, 0x971b0892 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x64977bbd # load x3 with value 0x64977bbd
sw x3, 0(x2) # store 0x64977bbd in memory
flw f12, 0(x2) # load 0x64977bbd from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
fmadd.s f28, f23, f12, f16, dyn # perform operation
fmadd.s f28, f23, f12, f16, rdn # perform operation
fmadd.s f28, f23, f12, f16, rmm # perform operation
fmadd.s f28, f23, f12, f16, rne # perform operation
fmadd.s f28, f23, f12, f16, rtz # perform operation
fmadd.s f28, f23, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x10, 0xb76fbafc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x6dd6ebac # load x3 with value 0x6dd6ebac
sw x3, 0(x2) # store 0x6dd6ebac in memory
flw f11, 0(x2) # load 0x6dd6ebac from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmadd.s f10, f31, f11, f2, dyn # perform operation
fmadd.s f10, f31, f11, f2, rdn # perform operation
fmadd.s f10, f31, f11, f2, rmm # perform operation
fmadd.s f10, f31, f11, f2, rne # perform operation
fmadd.s f10, f31, f11, f2, rtz # perform operation
fmadd.s f10, f31, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f31, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f31, f11, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x26, 0x58610010 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x17409fde # load x3 with value 0x17409fde
sw x3, 0(x2) # store 0x17409fde in memory
flw f25, 0(x2) # load 0x17409fde from memory into f25
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f26, f28, f25, f29, dyn # perform operation
fmadd.s f26, f28, f25, f29, rdn # perform operation
fmadd.s f26, f28, f25, f29, rmm # perform operation
fmadd.s f26, f28, f25, f29, rne # perform operation
fmadd.s f26, f28, f25, f29, rtz # perform operation
fmadd.s f26, f28, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x30, 0x8bd491a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x887695c7 # load x3 with value 0x887695c7
sw x3, 0(x2) # store 0x887695c7 in memory
flw f1, 0(x2) # load 0x887695c7 from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmadd.s f30, f11, f1, f18, dyn # perform operation
fmadd.s f30, f11, f1, f18, rdn # perform operation
fmadd.s f30, f11, f1, f18, rmm # perform operation
fmadd.s f30, f11, f1, f18, rne # perform operation
fmadd.s f30, f11, f1, f18, rtz # perform operation
fmadd.s f30, f11, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x16, 0xb2e0ab12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x287370f3 # load x3 with value 0x287370f3
sw x3, 0(x2) # store 0x287370f3 in memory
flw f17, 0(x2) # load 0x287370f3 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmadd.s f16, f1, f17, f28, dyn # perform operation
fmadd.s f16, f1, f17, f28, rdn # perform operation
fmadd.s f16, f1, f17, f28, rmm # perform operation
fmadd.s f16, f1, f17, f28, rne # perform operation
fmadd.s f16, f1, f17, f28, rtz # perform operation
fmadd.s f16, f1, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f1, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f1, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x12, 0x4ffe047f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x8a13e08a # load x3 with value 0x8a13e08a
sw x3, 0(x2) # store 0x8a13e08a in memory
flw f21, 0(x2) # load 0x8a13e08a from memory into f21
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fmadd.s f12, f18, f21, f4, dyn # perform operation
fmadd.s f12, f18, f21, f4, rdn # perform operation
fmadd.s f12, f18, f21, f4, rmm # perform operation
fmadd.s f12, f18, f21, f4, rne # perform operation
fmadd.s f12, f18, f21, f4, rtz # perform operation
fmadd.s f12, f18, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f21, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x26, 0x1de0cf6a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0xa1216570 # load x3 with value 0xa1216570
sw x3, 0(x2) # store 0xa1216570 in memory
flw f19, 0(x2) # load 0xa1216570 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fmadd.s f26, f3, f19, f27, dyn # perform operation
fmadd.s f26, f3, f19, f27, rdn # perform operation
fmadd.s f26, f3, f19, f27, rmm # perform operation
fmadd.s f26, f3, f19, f27, rne # perform operation
fmadd.s f26, f3, f19, f27, rtz # perform operation
fmadd.s f26, f3, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x9, 0xb0022073 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xbdd50579 # load x3 with value 0xbdd50579
sw x3, 0(x2) # store 0xbdd50579 in memory
flw f31, 0(x2) # load 0xbdd50579 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f9, f24, f31, f29, dyn # perform operation
fmadd.s f9, f24, f31, f29, rdn # perform operation
fmadd.s f9, f24, f31, f29, rmm # perform operation
fmadd.s f9, f24, f31, f29, rne # perform operation
fmadd.s f9, f24, f31, f29, rtz # perform operation
fmadd.s f9, f24, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x24, 0x1255dcbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x482fdcf7 # load x3 with value 0x482fdcf7
sw x3, 0(x2) # store 0x482fdcf7 in memory
flw f4, 0(x2) # load 0x482fdcf7 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
fmadd.s f24, f7, f4, f20, dyn # perform operation
fmadd.s f24, f7, f4, f20, rdn # perform operation
fmadd.s f24, f7, f4, f20, rmm # perform operation
fmadd.s f24, f7, f4, f20, rne # perform operation
fmadd.s f24, f7, f4, f20, rtz # perform operation
fmadd.s f24, f7, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f4, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x25, 0x06c42933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
li x3, 0x39443248 # load x3 with value 0x39443248
sw x3, 0(x2) # store 0x39443248 in memory
flw f10, 0(x2) # load 0x39443248 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmadd.s f25, f11, f10, f28, dyn # perform operation
fmadd.s f25, f11, f10, f28, rdn # perform operation
fmadd.s f25, f11, f10, f28, rmm # perform operation
fmadd.s f25, f11, f10, f28, rne # perform operation
fmadd.s f25, f11, f10, f28, rtz # perform operation
fmadd.s f25, f11, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f11, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f11, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x26, 0xce87ff12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x4de71038 # load x3 with value 0x4de71038
sw x3, 0(x2) # store 0x4de71038 in memory
flw f21, 0(x2) # load 0x4de71038 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f26, f6, f21, f15, dyn # perform operation
fmadd.s f26, f6, f21, f15, rdn # perform operation
fmadd.s f26, f6, f21, f15, rmm # perform operation
fmadd.s f26, f6, f21, f15, rne # perform operation
fmadd.s f26, f6, f21, f15, rtz # perform operation
fmadd.s f26, f6, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x5, 0x2ac46232 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xad258e42 # load x3 with value 0xad258e42
sw x3, 0(x2) # store 0xad258e42 in memory
flw f19, 0(x2) # load 0xad258e42 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f5, f3, f19, f17, dyn # perform operation
fmadd.s f5, f3, f19, f17, rdn # perform operation
fmadd.s f5, f3, f19, f17, rmm # perform operation
fmadd.s f5, f3, f19, f17, rne # perform operation
fmadd.s f5, f3, f19, f17, rtz # perform operation
fmadd.s f5, f3, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f19, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x1, 0x2e1b9a54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xbffd0e19 # load x3 with value 0xbffd0e19
sw x3, 0(x2) # store 0xbffd0e19 in memory
flw f6, 0(x2) # load 0xbffd0e19 from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmadd.s f1, f7, f6, f22, dyn # perform operation
fmadd.s f1, f7, f6, f22, rdn # perform operation
fmadd.s f1, f7, f6, f22, rmm # perform operation
fmadd.s f1, f7, f6, f22, rne # perform operation
fmadd.s f1, f7, f6, f22, rtz # perform operation
fmadd.s f1, f7, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x6, 0x51640f9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x60d44715 # load x3 with value 0x60d44715
sw x3, 0(x2) # store 0x60d44715 in memory
flw f31, 0(x2) # load 0x60d44715 from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmadd.s f6, f13, f31, f1, dyn # perform operation
fmadd.s f6, f13, f31, f1, rdn # perform operation
fmadd.s f6, f13, f31, f1, rmm # perform operation
fmadd.s f6, f13, f31, f1, rne # perform operation
fmadd.s f6, f13, f31, f1, rtz # perform operation
fmadd.s f6, f13, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x29, 0x9f38db37 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x4abcf87f # load x3 with value 0x4abcf87f
sw x3, 0(x2) # store 0x4abcf87f in memory
flw f6, 0(x2) # load 0x4abcf87f from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmadd.s f29, f18, f6, f12, dyn # perform operation
fmadd.s f29, f18, f6, f12, rdn # perform operation
fmadd.s f29, f18, f6, f12, rmm # perform operation
fmadd.s f29, f18, f6, f12, rne # perform operation
fmadd.s f29, f18, f6, f12, rtz # perform operation
fmadd.s f29, f18, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f6, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x3, 0xb3675bd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x2cf57256 # load x3 with value 0x2cf57256
sw x3, 0(x2) # store 0x2cf57256 in memory
flw f23, 0(x2) # load 0x2cf57256 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmadd.s f3, f20, f23, f14, dyn # perform operation
fmadd.s f3, f20, f23, f14, rdn # perform operation
fmadd.s f3, f20, f23, f14, rmm # perform operation
fmadd.s f3, f20, f23, f14, rne # perform operation
fmadd.s f3, f20, f23, f14, rtz # perform operation
fmadd.s f3, f20, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x7, 0x7c2ae3aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0xeba32574 # load x3 with value 0xeba32574
sw x3, 0(x2) # store 0xeba32574 in memory
flw f15, 0(x2) # load 0xeba32574 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f7, f22, f15, f21, dyn # perform operation
fmadd.s f7, f22, f15, f21, rdn # perform operation
fmadd.s f7, f22, f15, f21, rmm # perform operation
fmadd.s f7, f22, f15, f21, rne # perform operation
fmadd.s f7, f22, f15, f21, rtz # perform operation
fmadd.s f7, f22, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f15, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x3, 0xa6f6b23e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xb295e76e # load x3 with value 0xb295e76e
sw x3, 0(x2) # store 0xb295e76e in memory
flw f21, 0(x2) # load 0xb295e76e from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmadd.s f3, f7, f21, f14, dyn # perform operation
fmadd.s f3, f7, f21, f14, rdn # perform operation
fmadd.s f3, f7, f21, f14, rmm # perform operation
fmadd.s f3, f7, f21, f14, rne # perform operation
fmadd.s f3, f7, f21, f14, rtz # perform operation
fmadd.s f3, f7, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x28, 0x5d923050 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0x5d28d0fa # load x3 with value 0x5d28d0fa
sw x3, 0(x2) # store 0x5d28d0fa in memory
flw f27, 0(x2) # load 0x5d28d0fa from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmadd.s f28, f7, f27, f1, dyn # perform operation
fmadd.s f28, f7, f27, f1, rdn # perform operation
fmadd.s f28, f7, f27, f1, rmm # perform operation
fmadd.s f28, f7, f27, f1, rne # perform operation
fmadd.s f28, f7, f27, f1, rtz # perform operation
fmadd.s f28, f7, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x15, 0x25d4b697 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x5ceaf79c # load x3 with value 0x5ceaf79c
sw x3, 0(x2) # store 0x5ceaf79c in memory
flw f31, 0(x2) # load 0x5ceaf79c from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fmadd.s f15, f23, f31, f17, dyn # perform operation
fmadd.s f15, f23, f31, f17, rdn # perform operation
fmadd.s f15, f23, f31, f17, rmm # perform operation
fmadd.s f15, f23, f31, f17, rne # perform operation
fmadd.s f15, f23, f31, f17, rtz # perform operation
fmadd.s f15, f23, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x28, 0xf4db5ed8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x176ecce9 # load x3 with value 0x176ecce9
sw x3, 0(x2) # store 0x176ecce9 in memory
flw f24, 0(x2) # load 0x176ecce9 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmadd.s f28, f22, f24, f30, dyn # perform operation
fmadd.s f28, f22, f24, f30, rdn # perform operation
fmadd.s f28, f22, f24, f30, rmm # perform operation
fmadd.s f28, f22, f24, f30, rne # perform operation
fmadd.s f28, f22, f24, f30, rtz # perform operation
fmadd.s f28, f22, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f22, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f22, f24, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x20, 0xf929a3b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x3b9eb88a # load x3 with value 0x3b9eb88a
sw x3, 0(x2) # store 0x3b9eb88a in memory
flw f3, 0(x2) # load 0x3b9eb88a from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmadd.s f20, f18, f3, f24, dyn # perform operation
fmadd.s f20, f18, f3, f24, rdn # perform operation
fmadd.s f20, f18, f3, f24, rmm # perform operation
fmadd.s f20, f18, f3, f24, rne # perform operation
fmadd.s f20, f18, f3, f24, rtz # perform operation
fmadd.s f20, f18, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x30, 0x33046dc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x41f07790 # load x3 with value 0x41f07790
sw x3, 0(x2) # store 0x41f07790 in memory
flw f10, 0(x2) # load 0x41f07790 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmadd.s f30, f13, f10, f15, dyn # perform operation
fmadd.s f30, f13, f10, f15, rdn # perform operation
fmadd.s f30, f13, f10, f15, rmm # perform operation
fmadd.s f30, f13, f10, f15, rne # perform operation
fmadd.s f30, f13, f10, f15, rtz # perform operation
fmadd.s f30, f13, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f10, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x7, 0x996b434b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x5101bcd6 # load x3 with value 0x5101bcd6
sw x3, 0(x2) # store 0x5101bcd6 in memory
flw f28, 0(x2) # load 0x5101bcd6 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmadd.s f7, f17, f28, f27, dyn # perform operation
fmadd.s f7, f17, f28, f27, rdn # perform operation
fmadd.s f7, f17, f28, f27, rmm # perform operation
fmadd.s f7, f17, f28, f27, rne # perform operation
fmadd.s f7, f17, f28, f27, rtz # perform operation
fmadd.s f7, f17, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x23, 0x0cf1b62f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x8cb45863 # load x3 with value 0x8cb45863
sw x3, 0(x2) # store 0x8cb45863 in memory
flw f11, 0(x2) # load 0x8cb45863 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmadd.s f23, f22, f11, f1, dyn # perform operation
fmadd.s f23, f22, f11, f1, rdn # perform operation
fmadd.s f23, f22, f11, f1, rmm # perform operation
fmadd.s f23, f22, f11, f1, rne # perform operation
fmadd.s f23, f22, f11, f1, rtz # perform operation
fmadd.s f23, f22, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f11, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x5, 0x5db9de66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xbb726e1a # load x3 with value 0xbb726e1a
sw x3, 0(x2) # store 0xbb726e1a in memory
flw f2, 0(x2) # load 0xbb726e1a from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f5, f11, f2, f15, dyn # perform operation
fmadd.s f5, f11, f2, f15, rdn # perform operation
fmadd.s f5, f11, f2, f15, rmm # perform operation
fmadd.s f5, f11, f2, f15, rne # perform operation
fmadd.s f5, f11, f2, f15, rtz # perform operation
fmadd.s f5, f11, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f11, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f11, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f11, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f11, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f11, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x16, 0x855786fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x5034c742 # load x3 with value 0x5034c742
sw x3, 0(x2) # store 0x5034c742 in memory
flw f28, 0(x2) # load 0x5034c742 from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fmadd.s f16, f9, f28, f26, dyn # perform operation
fmadd.s f16, f9, f28, f26, rdn # perform operation
fmadd.s f16, f9, f28, f26, rmm # perform operation
fmadd.s f16, f9, f28, f26, rne # perform operation
fmadd.s f16, f9, f28, f26, rtz # perform operation
fmadd.s f16, f9, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x18, 0xad515933 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x784d356a # load x3 with value 0x784d356a
sw x3, 0(x2) # store 0x784d356a in memory
flw f25, 0(x2) # load 0x784d356a from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmadd.s f18, f3, f25, f14, dyn # perform operation
fmadd.s f18, f3, f25, f14, rdn # perform operation
fmadd.s f18, f3, f25, f14, rmm # perform operation
fmadd.s f18, f3, f25, f14, rne # perform operation
fmadd.s f18, f3, f25, f14, rtz # perform operation
fmadd.s f18, f3, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f3, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f3, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x29, 0xe1d94ced # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x17a7938f # load x3 with value 0x17a7938f
sw x3, 0(x2) # store 0x17a7938f in memory
flw f5, 0(x2) # load 0x17a7938f from memory into f5
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmadd.s f29, f28, f5, f24, dyn # perform operation
fmadd.s f29, f28, f5, f24, rdn # perform operation
fmadd.s f29, f28, f5, f24, rmm # perform operation
fmadd.s f29, f28, f5, f24, rne # perform operation
fmadd.s f29, f28, f5, f24, rtz # perform operation
fmadd.s f29, f28, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f28, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f28, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f28, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f28, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f28, f5, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x8, 0xc7f7fc9d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x892bb161 # load x3 with value 0x892bb161
sw x3, 0(x2) # store 0x892bb161 in memory
flw f7, 0(x2) # load 0x892bb161 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmadd.s f8, f14, f7, f29, dyn # perform operation
fmadd.s f8, f14, f7, f29, rdn # perform operation
fmadd.s f8, f14, f7, f29, rmm # perform operation
fmadd.s f8, f14, f7, f29, rne # perform operation
fmadd.s f8, f14, f7, f29, rtz # perform operation
fmadd.s f8, f14, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f7, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x31, 0xffb1a1a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x45c52015 # load x3 with value 0x45c52015
sw x3, 0(x2) # store 0x45c52015 in memory
flw f17, 0(x2) # load 0x45c52015 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmadd.s f31, f21, f17, f13, dyn # perform operation
fmadd.s f31, f21, f17, f13, rdn # perform operation
fmadd.s f31, f21, f17, f13, rmm # perform operation
fmadd.s f31, f21, f17, f13, rne # perform operation
fmadd.s f31, f21, f17, f13, rtz # perform operation
fmadd.s f31, f21, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f17, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x26, 0x1813c0cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
li x3, 0x318c4534 # load x3 with value 0x318c4534
sw x3, 0(x2) # store 0x318c4534 in memory
flw f6, 0(x2) # load 0x318c4534 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmadd.s f26, f23, f6, f31, dyn # perform operation
fmadd.s f26, f23, f6, f31, rdn # perform operation
fmadd.s f26, f23, f6, f31, rmm # perform operation
fmadd.s f26, f23, f6, f31, rne # perform operation
fmadd.s f26, f23, f6, f31, rtz # perform operation
fmadd.s f26, f23, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f6, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x9, 0x498027db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xd60f347c # load x3 with value 0xd60f347c
sw x3, 0(x2) # store 0xd60f347c in memory
flw f23, 0(x2) # load 0xd60f347c from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmadd.s f9, f24, f23, f14, dyn # perform operation
fmadd.s f9, f24, f23, f14, rdn # perform operation
fmadd.s f9, f24, f23, f14, rmm # perform operation
fmadd.s f9, f24, f23, f14, rne # perform operation
fmadd.s f9, f24, f23, f14, rtz # perform operation
fmadd.s f9, f24, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f23, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x9, 0x00181005 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x6223f7d0 # load x3 with value 0x6223f7d0
sw x3, 0(x2) # store 0x6223f7d0 in memory
flw f26, 0(x2) # load 0x6223f7d0 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f9, f29, f26, f10, dyn # perform operation
fmadd.s f9, f29, f26, f10, rdn # perform operation
fmadd.s f9, f29, f26, f10, rmm # perform operation
fmadd.s f9, f29, f26, f10, rne # perform operation
fmadd.s f9, f29, f26, f10, rtz # perform operation
fmadd.s f9, f29, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x30, 0xeedc1de3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x28742b5b # load x3 with value 0x28742b5b
sw x3, 0(x2) # store 0x28742b5b in memory
flw f13, 0(x2) # load 0x28742b5b from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fmadd.s f30, f4, f13, f27, dyn # perform operation
fmadd.s f30, f4, f13, f27, rdn # perform operation
fmadd.s f30, f4, f13, f27, rmm # perform operation
fmadd.s f30, f4, f13, f27, rne # perform operation
fmadd.s f30, f4, f13, f27, rtz # perform operation
fmadd.s f30, f4, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f4, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f4, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x5, 0xb3bb8177 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0x00f83f38 # load x3 with value 0x00f83f38
sw x3, 0(x2) # store 0x00f83f38 in memory
flw f29, 0(x2) # load 0x00f83f38 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f5, f4, f29, f6, dyn # perform operation
fmadd.s f5, f4, f29, f6, rdn # perform operation
fmadd.s f5, f4, f29, f6, rmm # perform operation
fmadd.s f5, f4, f29, f6, rne # perform operation
fmadd.s f5, f4, f29, f6, rtz # perform operation
fmadd.s f5, f4, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f4, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f4, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x24, 0x45295236 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0xc2fac2b3 # load x3 with value 0xc2fac2b3
sw x3, 0(x2) # store 0xc2fac2b3 in memory
flw f15, 0(x2) # load 0xc2fac2b3 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
fmadd.s f24, f21, f15, f7, dyn # perform operation
fmadd.s f24, f21, f15, f7, rdn # perform operation
fmadd.s f24, f21, f15, f7, rmm # perform operation
fmadd.s f24, f21, f15, f7, rne # perform operation
fmadd.s f24, f21, f15, f7, rtz # perform operation
fmadd.s f24, f21, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f21, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f21, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x5, 0xf9e3c706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xa3351937 # load x3 with value 0xa3351937
sw x3, 0(x2) # store 0xa3351937 in memory
flw f1, 0(x2) # load 0xa3351937 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmadd.s f5, f18, f1, f11, dyn # perform operation
fmadd.s f5, f18, f1, f11, rdn # perform operation
fmadd.s f5, f18, f1, f11, rmm # perform operation
fmadd.s f5, f18, f1, f11, rne # perform operation
fmadd.s f5, f18, f1, f11, rtz # perform operation
fmadd.s f5, f18, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x28, 0x03adfaad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x171e188b # load x3 with value 0x171e188b
sw x3, 0(x2) # store 0x171e188b in memory
flw f17, 0(x2) # load 0x171e188b from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fmadd.s f28, f1, f17, f26, dyn # perform operation
fmadd.s f28, f1, f17, f26, rdn # perform operation
fmadd.s f28, f1, f17, f26, rmm # perform operation
fmadd.s f28, f1, f17, f26, rne # perform operation
fmadd.s f28, f1, f17, f26, rtz # perform operation
fmadd.s f28, f1, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x25, 0xd19e8079 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x0a8d7a38 # load x3 with value 0x0a8d7a38
sw x3, 0(x2) # store 0x0a8d7a38 in memory
flw f6, 0(x2) # load 0x0a8d7a38 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f25, f18, f6, f23, dyn # perform operation
fmadd.s f25, f18, f6, f23, rdn # perform operation
fmadd.s f25, f18, f6, f23, rmm # perform operation
fmadd.s f25, f18, f6, f23, rne # perform operation
fmadd.s f25, f18, f6, f23, rtz # perform operation
fmadd.s f25, f18, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f18, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f18, f6, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x28, 0x7602a97a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xfd3f2acd # load x3 with value 0xfd3f2acd
sw x3, 0(x2) # store 0xfd3f2acd in memory
flw f19, 0(x2) # load 0xfd3f2acd from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmadd.s f28, f17, f19, f25, dyn # perform operation
fmadd.s f28, f17, f19, f25, rdn # perform operation
fmadd.s f28, f17, f19, f25, rmm # perform operation
fmadd.s f28, f17, f19, f25, rne # perform operation
fmadd.s f28, f17, f19, f25, rtz # perform operation
fmadd.s f28, f17, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x10, 0x77d4b6c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x5966b8fe # load x3 with value 0x5966b8fe
sw x3, 0(x2) # store 0x5966b8fe in memory
flw f7, 0(x2) # load 0x5966b8fe from memory into f7
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fmadd.s f10, f23, f7, f24, dyn # perform operation
fmadd.s f10, f23, f7, f24, rdn # perform operation
fmadd.s f10, f23, f7, f24, rmm # perform operation
fmadd.s f10, f23, f7, f24, rne # perform operation
fmadd.s f10, f23, f7, f24, rtz # perform operation
fmadd.s f10, f23, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f7, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x7, 0x0932e5cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
li x3, 0x4bf06a61 # load x3 with value 0x4bf06a61
sw x3, 0(x2) # store 0x4bf06a61 in memory
flw f1, 0(x2) # load 0x4bf06a61 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmadd.s f7, f23, f1, f12, dyn # perform operation
fmadd.s f7, f23, f1, f12, rdn # perform operation
fmadd.s f7, f23, f1, f12, rmm # perform operation
fmadd.s f7, f23, f1, f12, rne # perform operation
fmadd.s f7, f23, f1, f12, rtz # perform operation
fmadd.s f7, f23, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f1, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x16, 0x8c57ee73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0xf4649192 # load x3 with value 0xf4649192
sw x3, 0(x2) # store 0xf4649192 in memory
flw f11, 0(x2) # load 0xf4649192 from memory into f11
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
fmadd.s f16, f14, f11, f4, dyn # perform operation
fmadd.s f16, f14, f11, f4, rdn # perform operation
fmadd.s f16, f14, f11, f4, rmm # perform operation
fmadd.s f16, f14, f11, f4, rne # perform operation
fmadd.s f16, f14, f11, f4, rtz # perform operation
fmadd.s f16, f14, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x17, 0x445c25f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xcec75608 # load x3 with value 0xcec75608
sw x3, 0(x2) # store 0xcec75608 in memory
flw f2, 0(x2) # load 0xcec75608 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f17, f21, f2, f4, dyn # perform operation
fmadd.s f17, f21, f2, f4, rdn # perform operation
fmadd.s f17, f21, f2, f4, rmm # perform operation
fmadd.s f17, f21, f2, f4, rne # perform operation
fmadd.s f17, f21, f2, f4, rtz # perform operation
fmadd.s f17, f21, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x25, 0x7429a0f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x177f71e9 # load x3 with value 0x177f71e9
sw x3, 0(x2) # store 0x177f71e9 in memory
flw f14, 0(x2) # load 0x177f71e9 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fmadd.s f25, f7, f14, f28, dyn # perform operation
fmadd.s f25, f7, f14, f28, rdn # perform operation
fmadd.s f25, f7, f14, f28, rmm # perform operation
fmadd.s f25, f7, f14, f28, rne # perform operation
fmadd.s f25, f7, f14, f28, rtz # perform operation
fmadd.s f25, f7, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x1, 0xdc176663 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0xaf146f65 # load x3 with value 0xaf146f65
sw x3, 0(x2) # store 0xaf146f65 in memory
flw f21, 0(x2) # load 0xaf146f65 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f1, f15, f21, f24, dyn # perform operation
fmadd.s f1, f15, f21, f24, rdn # perform operation
fmadd.s f1, f15, f21, f24, rmm # perform operation
fmadd.s f1, f15, f21, f24, rne # perform operation
fmadd.s f1, f15, f21, f24, rtz # perform operation
fmadd.s f1, f15, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f21, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x7, 0xa9f54e1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x03360160 # load x3 with value 0x03360160
sw x3, 0(x2) # store 0x03360160 in memory
flw f19, 0(x2) # load 0x03360160 from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fmadd.s f7, f1, f19, f10, dyn # perform operation
fmadd.s f7, f1, f19, f10, rdn # perform operation
fmadd.s f7, f1, f19, f10, rmm # perform operation
fmadd.s f7, f1, f19, f10, rne # perform operation
fmadd.s f7, f1, f19, f10, rtz # perform operation
fmadd.s f7, f1, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x21, 0x68ff2f61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xb40bcc7c # load x3 with value 0xb40bcc7c
sw x3, 0(x2) # store 0xb40bcc7c in memory
flw f13, 0(x2) # load 0xb40bcc7c from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f21, f27, f13, f7, dyn # perform operation
fmadd.s f21, f27, f13, f7, rdn # perform operation
fmadd.s f21, f27, f13, f7, rmm # perform operation
fmadd.s f21, f27, f13, f7, rne # perform operation
fmadd.s f21, f27, f13, f7, rtz # perform operation
fmadd.s f21, f27, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x12, 0xfc6da935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xfa7b0369 # load x3 with value 0xfa7b0369
sw x3, 0(x2) # store 0xfa7b0369 in memory
flw f28, 0(x2) # load 0xfa7b0369 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmadd.s f12, f31, f28, f26, dyn # perform operation
fmadd.s f12, f31, f28, f26, rdn # perform operation
fmadd.s f12, f31, f28, f26, rmm # perform operation
fmadd.s f12, f31, f28, f26, rne # perform operation
fmadd.s f12, f31, f28, f26, rtz # perform operation
fmadd.s f12, f31, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x15, 0x0e35a9c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xc6072162 # load x3 with value 0xc6072162
sw x3, 0(x2) # store 0xc6072162 in memory
flw f12, 0(x2) # load 0xc6072162 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmadd.s f15, f26, f12, f13, dyn # perform operation
fmadd.s f15, f26, f12, f13, rdn # perform operation
fmadd.s f15, f26, f12, f13, rmm # perform operation
fmadd.s f15, f26, f12, f13, rne # perform operation
fmadd.s f15, f26, f12, f13, rtz # perform operation
fmadd.s f15, f26, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x30, 0x5faf43dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xfaff3644 # load x3 with value 0xfaff3644
sw x3, 0(x2) # store 0xfaff3644 in memory
flw f18, 0(x2) # load 0xfaff3644 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fmadd.s f30, f31, f18, f24, dyn # perform operation
fmadd.s f30, f31, f18, f24, rdn # perform operation
fmadd.s f30, f31, f18, f24, rmm # perform operation
fmadd.s f30, f31, f18, f24, rne # perform operation
fmadd.s f30, f31, f18, f24, rtz # perform operation
fmadd.s f30, f31, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f18, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x3, 0x8774bf5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0xd6bdd3e5 # load x3 with value 0xd6bdd3e5
sw x3, 0(x2) # store 0xd6bdd3e5 in memory
flw f13, 0(x2) # load 0xd6bdd3e5 from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f3, f7, f13, f11, dyn # perform operation
fmadd.s f3, f7, f13, f11, rdn # perform operation
fmadd.s f3, f7, f13, f11, rmm # perform operation
fmadd.s f3, f7, f13, f11, rne # perform operation
fmadd.s f3, f7, f13, f11, rtz # perform operation
fmadd.s f3, f7, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x29, 0xd7c77c16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x1cf437e3 # load x3 with value 0x1cf437e3
sw x3, 0(x2) # store 0x1cf437e3 in memory
flw f19, 0(x2) # load 0x1cf437e3 from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f29, f12, f19, f5, dyn # perform operation
fmadd.s f29, f12, f19, f5, rdn # perform operation
fmadd.s f29, f12, f19, f5, rmm # perform operation
fmadd.s f29, f12, f19, f5, rne # perform operation
fmadd.s f29, f12, f19, f5, rtz # perform operation
fmadd.s f29, f12, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f19, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x21, 0x2f9bd4aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0xef6d0c67 # load x3 with value 0xef6d0c67
sw x3, 0(x2) # store 0xef6d0c67 in memory
flw f22, 0(x2) # load 0xef6d0c67 from memory into f22
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmadd.s f21, f26, f22, f7, dyn # perform operation
fmadd.s f21, f26, f22, f7, rdn # perform operation
fmadd.s f21, f26, f22, f7, rmm # perform operation
fmadd.s f21, f26, f22, f7, rne # perform operation
fmadd.s f21, f26, f22, f7, rtz # perform operation
fmadd.s f21, f26, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f26, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f26, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f26, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f26, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f26, f22, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x15, 0x6cfcbb4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x068b438f # load x3 with value 0x068b438f
sw x3, 0(x2) # store 0x068b438f in memory
flw f20, 0(x2) # load 0x068b438f from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
fmadd.s f15, f29, f20, f12, dyn # perform operation
fmadd.s f15, f29, f20, f12, rdn # perform operation
fmadd.s f15, f29, f20, f12, rmm # perform operation
fmadd.s f15, f29, f20, f12, rne # perform operation
fmadd.s f15, f29, f20, f12, rtz # perform operation
fmadd.s f15, f29, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f29, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f29, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x13, 0xa3e7e8f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
li x3, 0x690497a0 # load x3 with value 0x690497a0
sw x3, 0(x2) # store 0x690497a0 in memory
flw f24, 0(x2) # load 0x690497a0 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmadd.s f13, f14, f24, f19, dyn # perform operation
fmadd.s f13, f14, f24, f19, rdn # perform operation
fmadd.s f13, f14, f24, f19, rmm # perform operation
fmadd.s f13, f14, f24, f19, rne # perform operation
fmadd.s f13, f14, f24, f19, rtz # perform operation
fmadd.s f13, f14, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f24, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x21, 0xb83b30d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x5cf27f24 # load x3 with value 0x5cf27f24
sw x3, 0(x2) # store 0x5cf27f24 in memory
flw f5, 0(x2) # load 0x5cf27f24 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f21, f15, f5, f2, dyn # perform operation
fmadd.s f21, f15, f5, f2, rdn # perform operation
fmadd.s f21, f15, f5, f2, rmm # perform operation
fmadd.s f21, f15, f5, f2, rne # perform operation
fmadd.s f21, f15, f5, f2, rtz # perform operation
fmadd.s f21, f15, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f15, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f15, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x11, 0xef279728 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x97718234 # load x3 with value 0x97718234
sw x3, 0(x2) # store 0x97718234 in memory
flw f24, 0(x2) # load 0x97718234 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmadd.s f11, f4, f24, f16, dyn # perform operation
fmadd.s f11, f4, f24, f16, rdn # perform operation
fmadd.s f11, f4, f24, f16, rmm # perform operation
fmadd.s f11, f4, f24, f16, rne # perform operation
fmadd.s f11, f4, f24, f16, rtz # perform operation
fmadd.s f11, f4, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f4, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f4, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x29, 0x83e509af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x965ae92a # load x3 with value 0x965ae92a
sw x3, 0(x2) # store 0x965ae92a in memory
flw f19, 0(x2) # load 0x965ae92a from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f29, f20, f19, f24, dyn # perform operation
fmadd.s f29, f20, f19, f24, rdn # perform operation
fmadd.s f29, f20, f19, f24, rmm # perform operation
fmadd.s f29, f20, f19, f24, rne # perform operation
fmadd.s f29, f20, f19, f24, rtz # perform operation
fmadd.s f29, f20, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f20, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f20, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x21, 0x8da804f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x1a1158ec # load x3 with value 0x1a1158ec
sw x3, 0(x2) # store 0x1a1158ec in memory
flw f9, 0(x2) # load 0x1a1158ec from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
fmadd.s f21, f24, f9, f17, dyn # perform operation
fmadd.s f21, f24, f9, f17, rdn # perform operation
fmadd.s f21, f24, f9, f17, rmm # perform operation
fmadd.s f21, f24, f9, f17, rne # perform operation
fmadd.s f21, f24, f9, f17, rtz # perform operation
fmadd.s f21, f24, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f24, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f24, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x7, 0xfad5ac93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x1e608f94 # load x3 with value 0x1e608f94
sw x3, 0(x2) # store 0x1e608f94 in memory
flw f11, 0(x2) # load 0x1e608f94 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmadd.s f7, f8, f11, f30, dyn # perform operation
fmadd.s f7, f8, f11, f30, rdn # perform operation
fmadd.s f7, f8, f11, f30, rmm # perform operation
fmadd.s f7, f8, f11, f30, rne # perform operation
fmadd.s f7, f8, f11, f30, rtz # perform operation
fmadd.s f7, f8, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x5, 0xc00b93f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0xceef1028 # load x3 with value 0xceef1028
sw x3, 0(x2) # store 0xceef1028 in memory
flw f17, 0(x2) # load 0xceef1028 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fmadd.s f5, f22, f17, f10, dyn # perform operation
fmadd.s f5, f22, f17, f10, rdn # perform operation
fmadd.s f5, f22, f17, f10, rmm # perform operation
fmadd.s f5, f22, f17, f10, rne # perform operation
fmadd.s f5, f22, f17, f10, rtz # perform operation
fmadd.s f5, f22, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x9, 0x70d39a10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x10f214f9 # load x3 with value 0x10f214f9
sw x3, 0(x2) # store 0x10f214f9 in memory
flw f18, 0(x2) # load 0x10f214f9 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f9, f2, f18, f28, dyn # perform operation
fmadd.s f9, f2, f18, f28, rdn # perform operation
fmadd.s f9, f2, f18, f28, rmm # perform operation
fmadd.s f9, f2, f18, f28, rne # perform operation
fmadd.s f9, f2, f18, f28, rtz # perform operation
fmadd.s f9, f2, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x5, 0xfd13e449 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
li x3, 0x3eafce17 # load x3 with value 0x3eafce17
sw x3, 0(x2) # store 0x3eafce17 in memory
flw f28, 0(x2) # load 0x3eafce17 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmadd.s f5, f9, f28, f18, dyn # perform operation
fmadd.s f5, f9, f28, f18, rdn # perform operation
fmadd.s f5, f9, f28, f18, rmm # perform operation
fmadd.s f5, f9, f28, f18, rne # perform operation
fmadd.s f5, f9, f28, f18, rtz # perform operation
fmadd.s f5, f9, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x24, 0x7e621191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x5bb41ecf # load x3 with value 0x5bb41ecf
sw x3, 0(x2) # store 0x5bb41ecf in memory
flw f26, 0(x2) # load 0x5bb41ecf from memory into f26
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
fmadd.s f24, f22, f26, f12, dyn # perform operation
fmadd.s f24, f22, f26, f12, rdn # perform operation
fmadd.s f24, f22, f26, f12, rmm # perform operation
fmadd.s f24, f22, f26, f12, rne # perform operation
fmadd.s f24, f22, f26, f12, rtz # perform operation
fmadd.s f24, f22, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x5, 0x03907723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0xc962fb65 # load x3 with value 0xc962fb65
sw x3, 0(x2) # store 0xc962fb65 in memory
flw f30, 0(x2) # load 0xc962fb65 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f5, f23, f30, f15, dyn # perform operation
fmadd.s f5, f23, f30, f15, rdn # perform operation
fmadd.s f5, f23, f30, f15, rmm # perform operation
fmadd.s f5, f23, f30, f15, rne # perform operation
fmadd.s f5, f23, f30, f15, rtz # perform operation
fmadd.s f5, f23, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x21, 0x1b3fc102 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0xb4394bff # load x3 with value 0xb4394bff
sw x3, 0(x2) # store 0xb4394bff in memory
flw f3, 0(x2) # load 0xb4394bff from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
fmadd.s f21, f7, f3, f17, dyn # perform operation
fmadd.s f21, f7, f3, f17, rdn # perform operation
fmadd.s f21, f7, f3, f17, rmm # perform operation
fmadd.s f21, f7, f3, f17, rne # perform operation
fmadd.s f21, f7, f3, f17, rtz # perform operation
fmadd.s f21, f7, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x7, 0x942d0f8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0x9da39cd4 # load x3 with value 0x9da39cd4
sw x3, 0(x2) # store 0x9da39cd4 in memory
flw f16, 0(x2) # load 0x9da39cd4 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmadd.s f7, f5, f16, f30, dyn # perform operation
fmadd.s f7, f5, f16, f30, rdn # perform operation
fmadd.s f7, f5, f16, f30, rmm # perform operation
fmadd.s f7, f5, f16, f30, rne # perform operation
fmadd.s f7, f5, f16, f30, rtz # perform operation
fmadd.s f7, f5, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f16, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x30, 0x47f69929 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xdd154377 # load x3 with value 0xdd154377
sw x3, 0(x2) # store 0xdd154377 in memory
flw f7, 0(x2) # load 0xdd154377 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f30, f25, f7, f3, dyn # perform operation
fmadd.s f30, f25, f7, f3, rdn # perform operation
fmadd.s f30, f25, f7, f3, rmm # perform operation
fmadd.s f30, f25, f7, f3, rne # perform operation
fmadd.s f30, f25, f7, f3, rtz # perform operation
fmadd.s f30, f25, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x29, 0x2017c64d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xdefac8af # load x3 with value 0xdefac8af
sw x3, 0(x2) # store 0xdefac8af in memory
flw f7, 0(x2) # load 0xdefac8af from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fmadd.s f29, f28, f7, f26, dyn # perform operation
fmadd.s f29, f28, f7, f26, rdn # perform operation
fmadd.s f29, f28, f7, f26, rmm # perform operation
fmadd.s f29, f28, f7, f26, rne # perform operation
fmadd.s f29, f28, f7, f26, rtz # perform operation
fmadd.s f29, f28, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f28, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f28, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x22, 0x3909e94c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xb24d59c2 # load x3 with value 0xb24d59c2
sw x3, 0(x2) # store 0xb24d59c2 in memory
flw f18, 0(x2) # load 0xb24d59c2 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmadd.s f22, f12, f18, f16, dyn # perform operation
fmadd.s f22, f12, f18, f16, rdn # perform operation
fmadd.s f22, f12, f18, f16, rmm # perform operation
fmadd.s f22, f12, f18, f16, rne # perform operation
fmadd.s f22, f12, f18, f16, rtz # perform operation
fmadd.s f22, f12, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f12, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f12, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x16, 0xba2e2624 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0xa6755b7b # load x3 with value 0xa6755b7b
sw x3, 0(x2) # store 0xa6755b7b in memory
flw f17, 0(x2) # load 0xa6755b7b from memory into f17
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fmadd.s f16, f6, f17, f3, dyn # perform operation
fmadd.s f16, f6, f17, f3, rdn # perform operation
fmadd.s f16, f6, f17, f3, rmm # perform operation
fmadd.s f16, f6, f17, f3, rne # perform operation
fmadd.s f16, f6, f17, f3, rtz # perform operation
fmadd.s f16, f6, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f6, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f6, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f6, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f6, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f6, f17, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x5, 0x4f323ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x272f77ed # load x3 with value 0x272f77ed
sw x3, 0(x2) # store 0x272f77ed in memory
flw f21, 0(x2) # load 0x272f77ed from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
fmadd.s f5, f24, f21, f29, dyn # perform operation
fmadd.s f5, f24, f21, f29, rdn # perform operation
fmadd.s f5, f24, f21, f29, rmm # perform operation
fmadd.s f5, f24, f21, f29, rne # perform operation
fmadd.s f5, f24, f21, f29, rtz # perform operation
fmadd.s f5, f24, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f21, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x8, 0x4933b0b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xf7b21930 # load x3 with value 0xf7b21930
sw x3, 0(x2) # store 0xf7b21930 in memory
flw f23, 0(x2) # load 0xf7b21930 from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmadd.s f8, f13, f23, f18, dyn # perform operation
fmadd.s f8, f13, f23, f18, rdn # perform operation
fmadd.s f8, f13, f23, f18, rmm # perform operation
fmadd.s f8, f13, f23, f18, rne # perform operation
fmadd.s f8, f13, f23, f18, rtz # perform operation
fmadd.s f8, f13, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x4, 0x6440e190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x2b9f06cd # load x3 with value 0x2b9f06cd
sw x3, 0(x2) # store 0x2b9f06cd in memory
flw f15, 0(x2) # load 0x2b9f06cd from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f4, f7, f15, f22, dyn # perform operation
fmadd.s f4, f7, f15, f22, rdn # perform operation
fmadd.s f4, f7, f15, f22, rmm # perform operation
fmadd.s f4, f7, f15, f22, rne # perform operation
fmadd.s f4, f7, f15, f22, rtz # perform operation
fmadd.s f4, f7, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f7, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f7, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x21, 0xb5b0fec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x288e4cdd # load x3 with value 0x288e4cdd
sw x3, 0(x2) # store 0x288e4cdd in memory
flw f4, 0(x2) # load 0x288e4cdd from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
fmadd.s f21, f20, f4, f2, dyn # perform operation
fmadd.s f21, f20, f4, f2, rdn # perform operation
fmadd.s f21, f20, f4, f2, rmm # perform operation
fmadd.s f21, f20, f4, f2, rne # perform operation
fmadd.s f21, f20, f4, f2, rtz # perform operation
fmadd.s f21, f20, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f20, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f20, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x20, 0x408cb49f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0xa3018a6c # load x3 with value 0xa3018a6c
sw x3, 0(x2) # store 0xa3018a6c in memory
flw f5, 0(x2) # load 0xa3018a6c from memory into f5
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fmadd.s f20, f29, f5, f21, dyn # perform operation
fmadd.s f20, f29, f5, f21, rdn # perform operation
fmadd.s f20, f29, f5, f21, rmm # perform operation
fmadd.s f20, f29, f5, f21, rne # perform operation
fmadd.s f20, f29, f5, f21, rtz # perform operation
fmadd.s f20, f29, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f5, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x23, 0x1682cf99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
li x3, 0xf0ed4359 # load x3 with value 0xf0ed4359
sw x3, 0(x2) # store 0xf0ed4359 in memory
flw f22, 0(x2) # load 0xf0ed4359 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f23, f17, f22, f11, dyn # perform operation
fmadd.s f23, f17, f22, f11, rdn # perform operation
fmadd.s f23, f17, f22, f11, rmm # perform operation
fmadd.s f23, f17, f22, f11, rne # perform operation
fmadd.s f23, f17, f22, f11, rtz # perform operation
fmadd.s f23, f17, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x2, 0xcb306bf3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x6bcf3c60 # load x3 with value 0x6bcf3c60
sw x3, 0(x2) # store 0x6bcf3c60 in memory
flw f11, 0(x2) # load 0x6bcf3c60 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f2, f13, f11, f25, dyn # perform operation
fmadd.s f2, f13, f11, f25, rdn # perform operation
fmadd.s f2, f13, f11, f25, rmm # perform operation
fmadd.s f2, f13, f11, f25, rne # perform operation
fmadd.s f2, f13, f11, f25, rtz # perform operation
fmadd.s f2, f13, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x23, 0x6e3ba5de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xf8efaac3 # load x3 with value 0xf8efaac3
sw x3, 0(x2) # store 0xf8efaac3 in memory
flw f20, 0(x2) # load 0xf8efaac3 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
fmadd.s f23, f16, f20, f9, dyn # perform operation
fmadd.s f23, f16, f20, f9, rdn # perform operation
fmadd.s f23, f16, f20, f9, rmm # perform operation
fmadd.s f23, f16, f20, f9, rne # perform operation
fmadd.s f23, f16, f20, f9, rtz # perform operation
fmadd.s f23, f16, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f20, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x8, 0x529332c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0xc7eb8312 # load x3 with value 0xc7eb8312
sw x3, 0(x2) # store 0xc7eb8312 in memory
flw f23, 0(x2) # load 0xc7eb8312 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f8, f22, f23, f31, dyn # perform operation
fmadd.s f8, f22, f23, f31, rdn # perform operation
fmadd.s f8, f22, f23, f31, rmm # perform operation
fmadd.s f8, f22, f23, f31, rne # perform operation
fmadd.s f8, f22, f23, f31, rtz # perform operation
fmadd.s f8, f22, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x30, 0xec8a63df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0xbf068894 # load x3 with value 0xbf068894
sw x3, 0(x2) # store 0xbf068894 in memory
flw f6, 0(x2) # load 0xbf068894 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
fmadd.s f30, f24, f6, f4, dyn # perform operation
fmadd.s f30, f24, f6, f4, rdn # perform operation
fmadd.s f30, f24, f6, f4, rmm # perform operation
fmadd.s f30, f24, f6, f4, rne # perform operation
fmadd.s f30, f24, f6, f4, rtz # perform operation
fmadd.s f30, f24, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f24, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f24, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x25, 0xe594659b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x5e36520f # load x3 with value 0x5e36520f
sw x3, 0(x2) # store 0x5e36520f in memory
flw f5, 0(x2) # load 0x5e36520f from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmadd.s f25, f20, f5, f26, dyn # perform operation
fmadd.s f25, f20, f5, f26, rdn # perform operation
fmadd.s f25, f20, f5, f26, rmm # perform operation
fmadd.s f25, f20, f5, f26, rne # perform operation
fmadd.s f25, f20, f5, f26, rtz # perform operation
fmadd.s f25, f20, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f5, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x16, 0x4e7cf8be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xfa50988a # load x3 with value 0xfa50988a
sw x3, 0(x2) # store 0xfa50988a in memory
flw f15, 0(x2) # load 0xfa50988a from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmadd.s f16, f5, f15, f30, dyn # perform operation
fmadd.s f16, f5, f15, f30, rdn # perform operation
fmadd.s f16, f5, f15, f30, rmm # perform operation
fmadd.s f16, f5, f15, f30, rne # perform operation
fmadd.s f16, f5, f15, f30, rtz # perform operation
fmadd.s f16, f5, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x19, 0x0df9357c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x8f72042a # load x3 with value 0x8f72042a
sw x3, 0(x2) # store 0x8f72042a in memory
flw f17, 0(x2) # load 0x8f72042a from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fmadd.s f19, f15, f17, f28, dyn # perform operation
fmadd.s f19, f15, f17, f28, rdn # perform operation
fmadd.s f19, f15, f17, f28, rmm # perform operation
fmadd.s f19, f15, f17, f28, rne # perform operation
fmadd.s f19, f15, f17, f28, rtz # perform operation
fmadd.s f19, f15, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f17, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x31, 0x996def47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x4607ddd5 # load x3 with value 0x4607ddd5
sw x3, 0(x2) # store 0x4607ddd5 in memory
flw f23, 0(x2) # load 0x4607ddd5 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmadd.s f31, f15, f23, f6, dyn # perform operation
fmadd.s f31, f15, f23, f6, rdn # perform operation
fmadd.s f31, f15, f23, f6, rmm # perform operation
fmadd.s f31, f15, f23, f6, rne # perform operation
fmadd.s f31, f15, f23, f6, rtz # perform operation
fmadd.s f31, f15, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f15, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x21, 0x210a4cfd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0xeb9f2303 # load x3 with value 0xeb9f2303
sw x3, 0(x2) # store 0xeb9f2303 in memory
flw f10, 0(x2) # load 0xeb9f2303 from memory into f10
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f21, f12, f10, f6, dyn # perform operation
fmadd.s f21, f12, f10, f6, rdn # perform operation
fmadd.s f21, f12, f10, f6, rmm # perform operation
fmadd.s f21, f12, f10, f6, rne # perform operation
fmadd.s f21, f12, f10, f6, rtz # perform operation
fmadd.s f21, f12, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f12, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f12, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f12, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f12, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f12, f10, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x5, 0xf9d9c714 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x0337b425 # load x3 with value 0x0337b425
sw x3, 0(x2) # store 0x0337b425 in memory
flw f28, 0(x2) # load 0x0337b425 from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmadd.s f5, f25, f28, f19, dyn # perform operation
fmadd.s f5, f25, f28, f19, rdn # perform operation
fmadd.s f5, f25, f28, f19, rmm # perform operation
fmadd.s f5, f25, f28, f19, rne # perform operation
fmadd.s f5, f25, f28, f19, rtz # perform operation
fmadd.s f5, f25, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x18, 0x65d004f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x6612b431 # load x3 with value 0x6612b431
sw x3, 0(x2) # store 0x6612b431 in memory
flw f16, 0(x2) # load 0x6612b431 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmadd.s f18, f31, f16, f10, dyn # perform operation
fmadd.s f18, f31, f16, f10, rdn # perform operation
fmadd.s f18, f31, f16, f10, rmm # perform operation
fmadd.s f18, f31, f16, f10, rne # perform operation
fmadd.s f18, f31, f16, f10, rtz # perform operation
fmadd.s f18, f31, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f31, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f31, f16, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x24, 0xf4ca591d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x6f9d861f # load x3 with value 0x6f9d861f
sw x3, 0(x2) # store 0x6f9d861f in memory
flw f28, 0(x2) # load 0x6f9d861f from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f24, f26, f28, f23, dyn # perform operation
fmadd.s f24, f26, f28, f23, rdn # perform operation
fmadd.s f24, f26, f28, f23, rmm # perform operation
fmadd.s f24, f26, f28, f23, rne # perform operation
fmadd.s f24, f26, f28, f23, rtz # perform operation
fmadd.s f24, f26, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f28, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x13, 0xffdf86ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xfe6a706d # load x3 with value 0xfe6a706d
sw x3, 0(x2) # store 0xfe6a706d in memory
flw f6, 0(x2) # load 0xfe6a706d from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
fmadd.s f13, f24, f6, f17, dyn # perform operation
fmadd.s f13, f24, f6, f17, rdn # perform operation
fmadd.s f13, f24, f6, f17, rmm # perform operation
fmadd.s f13, f24, f6, f17, rne # perform operation
fmadd.s f13, f24, f6, f17, rtz # perform operation
fmadd.s f13, f24, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f24, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f24, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x1, 0x8066ab41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x1ccb161c # load x3 with value 0x1ccb161c
sw x3, 0(x2) # store 0x1ccb161c in memory
flw f18, 0(x2) # load 0x1ccb161c from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmadd.s f1, f23, f18, f9, dyn # perform operation
fmadd.s f1, f23, f18, f9, rdn # perform operation
fmadd.s f1, f23, f18, f9, rmm # perform operation
fmadd.s f1, f23, f18, f9, rne # perform operation
fmadd.s f1, f23, f18, f9, rtz # perform operation
fmadd.s f1, f23, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f23, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f23, f18, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x9, 0xd961d536 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xd25c708e # load x3 with value 0xd25c708e
sw x3, 0(x2) # store 0xd25c708e in memory
flw f23, 0(x2) # load 0xd25c708e from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmadd.s f9, f17, f23, f10, dyn # perform operation
fmadd.s f9, f17, f23, f10, rdn # perform operation
fmadd.s f9, f17, f23, f10, rmm # perform operation
fmadd.s f9, f17, f23, f10, rne # perform operation
fmadd.s f9, f17, f23, f10, rtz # perform operation
fmadd.s f9, f17, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x4, 0x1c2eb7e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0xf0e2e00c # load x3 with value 0xf0e2e00c
sw x3, 0(x2) # store 0xf0e2e00c in memory
flw f21, 0(x2) # load 0xf0e2e00c from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmadd.s f4, f13, f21, f17, dyn # perform operation
fmadd.s f4, f13, f21, f17, rdn # perform operation
fmadd.s f4, f13, f21, f17, rmm # perform operation
fmadd.s f4, f13, f21, f17, rne # perform operation
fmadd.s f4, f13, f21, f17, rtz # perform operation
fmadd.s f4, f13, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f13, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f13, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x15, 0xcb8d625e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x6a3cf62a # load x3 with value 0x6a3cf62a
sw x3, 0(x2) # store 0x6a3cf62a in memory
flw f4, 0(x2) # load 0x6a3cf62a from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
fmadd.s f15, f2, f4, f29, dyn # perform operation
fmadd.s f15, f2, f4, f29, rdn # perform operation
fmadd.s f15, f2, f4, f29, rmm # perform operation
fmadd.s f15, f2, f4, f29, rne # perform operation
fmadd.s f15, f2, f4, f29, rtz # perform operation
fmadd.s f15, f2, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f4, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x1, 0x10dd8ef3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xa34fafd0 # load x3 with value 0xa34fafd0
sw x3, 0(x2) # store 0xa34fafd0 in memory
flw f15, 0(x2) # load 0xa34fafd0 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f1, f24, f15, f4, dyn # perform operation
fmadd.s f1, f24, f15, f4, rdn # perform operation
fmadd.s f1, f24, f15, f4, rmm # perform operation
fmadd.s f1, f24, f15, f4, rne # perform operation
fmadd.s f1, f24, f15, f4, rtz # perform operation
fmadd.s f1, f24, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f24, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f24, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f24, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f24, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f24, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x21, 0x6bd9dae5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x5e97fb06 # load x3 with value 0x5e97fb06
sw x3, 0(x2) # store 0x5e97fb06 in memory
flw f3, 0(x2) # load 0x5e97fb06 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmadd.s f21, f30, f3, f24, dyn # perform operation
fmadd.s f21, f30, f3, f24, rdn # perform operation
fmadd.s f21, f30, f3, f24, rmm # perform operation
fmadd.s f21, f30, f3, f24, rne # perform operation
fmadd.s f21, f30, f3, f24, rtz # perform operation
fmadd.s f21, f30, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f30, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f30, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f30, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f30, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f30, f3, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x10, 0x13361190 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0xcd8bdaba # load x3 with value 0xcd8bdaba
sw x3, 0(x2) # store 0xcd8bdaba in memory
flw f29, 0(x2) # load 0xcd8bdaba from memory into f29
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fmadd.s f10, f14, f29, f2, dyn # perform operation
fmadd.s f10, f14, f29, f2, rdn # perform operation
fmadd.s f10, f14, f29, f2, rmm # perform operation
fmadd.s f10, f14, f29, f2, rne # perform operation
fmadd.s f10, f14, f29, f2, rtz # perform operation
fmadd.s f10, f14, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f14, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f14, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x7, 0xb2c26e57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x73b9d949 # load x3 with value 0x73b9d949
sw x3, 0(x2) # store 0x73b9d949 in memory
flw f16, 0(x2) # load 0x73b9d949 from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
fmadd.s f7, f2, f16, f13, dyn # perform operation
fmadd.s f7, f2, f16, f13, rdn # perform operation
fmadd.s f7, f2, f16, f13, rmm # perform operation
fmadd.s f7, f2, f16, f13, rne # perform operation
fmadd.s f7, f2, f16, f13, rtz # perform operation
fmadd.s f7, f2, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x2, 0x79e9e5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x2fae9786 # load x3 with value 0x2fae9786
sw x3, 0(x2) # store 0x2fae9786 in memory
flw f24, 0(x2) # load 0x2fae9786 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmadd.s f2, f17, f24, f10, dyn # perform operation
fmadd.s f2, f17, f24, f10, rdn # perform operation
fmadd.s f2, f17, f24, f10, rmm # perform operation
fmadd.s f2, f17, f24, f10, rne # perform operation
fmadd.s f2, f17, f24, f10, rtz # perform operation
fmadd.s f2, f17, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f24, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x29, 0x92aef1e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x4baedbc7 # load x3 with value 0x4baedbc7
sw x3, 0(x2) # store 0x4baedbc7 in memory
flw f18, 0(x2) # load 0x4baedbc7 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
fmadd.s f29, f12, f18, f26, dyn # perform operation
fmadd.s f29, f12, f18, f26, rdn # perform operation
fmadd.s f29, f12, f18, f26, rmm # perform operation
fmadd.s f29, f12, f18, f26, rne # perform operation
fmadd.s f29, f12, f18, f26, rtz # perform operation
fmadd.s f29, f12, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x19, 0xd121f081 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x9f8e3d0c # load x3 with value 0x9f8e3d0c
sw x3, 0(x2) # store 0x9f8e3d0c in memory
flw f8, 0(x2) # load 0x9f8e3d0c from memory into f8
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmadd.s f19, f2, f8, f25, dyn # perform operation
fmadd.s f19, f2, f8, f25, rdn # perform operation
fmadd.s f19, f2, f8, f25, rmm # perform operation
fmadd.s f19, f2, f8, f25, rne # perform operation
fmadd.s f19, f2, f8, f25, rtz # perform operation
fmadd.s f19, f2, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f2, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f2, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f2, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f2, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f2, f8, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x18, 0x24393780 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x70435a00 # load x3 with value 0x70435a00
sw x3, 0(x2) # store 0x70435a00 in memory
flw f8, 0(x2) # load 0x70435a00 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f18, f24, f8, f15, dyn # perform operation
fmadd.s f18, f24, f8, f15, rdn # perform operation
fmadd.s f18, f24, f8, f15, rmm # perform operation
fmadd.s f18, f24, f8, f15, rne # perform operation
fmadd.s f18, f24, f8, f15, rtz # perform operation
fmadd.s f18, f24, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f24, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f24, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x15, 0xf4fed6d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x6c4c2ef8 # load x3 with value 0x6c4c2ef8
sw x3, 0(x2) # store 0x6c4c2ef8 in memory
flw f3, 0(x2) # load 0x6c4c2ef8 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f15, f30, f3, f17, dyn # perform operation
fmadd.s f15, f30, f3, f17, rdn # perform operation
fmadd.s f15, f30, f3, f17, rmm # perform operation
fmadd.s f15, f30, f3, f17, rne # perform operation
fmadd.s f15, f30, f3, f17, rtz # perform operation
fmadd.s f15, f30, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x5, 0xe436c440 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x9ca17958 # load x3 with value 0x9ca17958
sw x3, 0(x2) # store 0x9ca17958 in memory
flw f17, 0(x2) # load 0x9ca17958 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmadd.s f5, f22, f17, f14, dyn # perform operation
fmadd.s f5, f22, f17, f14, rdn # perform operation
fmadd.s f5, f22, f17, f14, rmm # perform operation
fmadd.s f5, f22, f17, f14, rne # perform operation
fmadd.s f5, f22, f17, f14, rtz # perform operation
fmadd.s f5, f22, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x26, 0xd837a89a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0xdbc275a6 # load x3 with value 0xdbc275a6
sw x3, 0(x2) # store 0xdbc275a6 in memory
flw f30, 0(x2) # load 0xdbc275a6 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmadd.s f26, f13, f30, f17, dyn # perform operation
fmadd.s f26, f13, f30, f17, rdn # perform operation
fmadd.s f26, f13, f30, f17, rmm # perform operation
fmadd.s f26, f13, f30, f17, rne # perform operation
fmadd.s f26, f13, f30, f17, rtz # perform operation
fmadd.s f26, f13, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f30, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x18, 0xc7353596 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0xf4abffbf # load x3 with value 0xf4abffbf
sw x3, 0(x2) # store 0xf4abffbf in memory
flw f19, 0(x2) # load 0xf4abffbf from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f18, f8, f19, f20, dyn # perform operation
fmadd.s f18, f8, f19, f20, rdn # perform operation
fmadd.s f18, f8, f19, f20, rmm # perform operation
fmadd.s f18, f8, f19, f20, rne # perform operation
fmadd.s f18, f8, f19, f20, rtz # perform operation
fmadd.s f18, f8, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x18, 0x8207da0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xbb819597 # load x3 with value 0xbb819597
sw x3, 0(x2) # store 0xbb819597 in memory
flw f15, 0(x2) # load 0xbb819597 from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
fmadd.s f18, f16, f15, f2, dyn # perform operation
fmadd.s f18, f16, f15, f2, rdn # perform operation
fmadd.s f18, f16, f15, f2, rmm # perform operation
fmadd.s f18, f16, f15, f2, rne # perform operation
fmadd.s f18, f16, f15, f2, rtz # perform operation
fmadd.s f18, f16, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f15, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x25, 0x34097851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xbc2e8fb3 # load x3 with value 0xbc2e8fb3
sw x3, 0(x2) # store 0xbc2e8fb3 in memory
flw f1, 0(x2) # load 0xbc2e8fb3 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f25, f31, f1, f8, dyn # perform operation
fmadd.s f25, f31, f1, f8, rdn # perform operation
fmadd.s f25, f31, f1, f8, rmm # perform operation
fmadd.s f25, f31, f1, f8, rne # perform operation
fmadd.s f25, f31, f1, f8, rtz # perform operation
fmadd.s f25, f31, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f1, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x25, 0x6ce2bc6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0xf70a7859 # load x3 with value 0xf70a7859
sw x3, 0(x2) # store 0xf70a7859 in memory
flw f28, 0(x2) # load 0xf70a7859 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f25, f21, f28, f18, dyn # perform operation
fmadd.s f25, f21, f28, f18, rdn # perform operation
fmadd.s f25, f21, f28, f18, rmm # perform operation
fmadd.s f25, f21, f28, f18, rne # perform operation
fmadd.s f25, f21, f28, f18, rtz # perform operation
fmadd.s f25, f21, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f28, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x4, 0x56c2517c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x8779ee0a # load x3 with value 0x8779ee0a
sw x3, 0(x2) # store 0x8779ee0a in memory
flw f9, 0(x2) # load 0x8779ee0a from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f4, f3, f9, f23, dyn # perform operation
fmadd.s f4, f3, f9, f23, rdn # perform operation
fmadd.s f4, f3, f9, f23, rmm # perform operation
fmadd.s f4, f3, f9, f23, rne # perform operation
fmadd.s f4, f3, f9, f23, rtz # perform operation
fmadd.s f4, f3, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f3, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f3, f9, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x20, 0x0b9f8e7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xd8f5818c # load x3 with value 0xd8f5818c
sw x3, 0(x2) # store 0xd8f5818c in memory
flw f1, 0(x2) # load 0xd8f5818c from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmadd.s f20, f10, f1, f29, dyn # perform operation
fmadd.s f20, f10, f1, f29, rdn # perform operation
fmadd.s f20, f10, f1, f29, rmm # perform operation
fmadd.s f20, f10, f1, f29, rne # perform operation
fmadd.s f20, f10, f1, f29, rtz # perform operation
fmadd.s f20, f10, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f1, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x6, 0xd0167cb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x07d80320 # load x3 with value 0x07d80320
sw x3, 0(x2) # store 0x07d80320 in memory
flw f30, 0(x2) # load 0x07d80320 from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fmadd.s f6, f31, f30, f20, dyn # perform operation
fmadd.s f6, f31, f30, f20, rdn # perform operation
fmadd.s f6, f31, f30, f20, rmm # perform operation
fmadd.s f6, f31, f30, f20, rne # perform operation
fmadd.s f6, f31, f30, f20, rtz # perform operation
fmadd.s f6, f31, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f31, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f31, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f31, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f31, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f31, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x15, 0x315266ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0x079a426c # load x3 with value 0x079a426c
sw x3, 0(x2) # store 0x079a426c in memory
flw f26, 0(x2) # load 0x079a426c from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
fmadd.s f15, f5, f26, f22, dyn # perform operation
fmadd.s f15, f5, f26, f22, rdn # perform operation
fmadd.s f15, f5, f26, f22, rmm # perform operation
fmadd.s f15, f5, f26, f22, rne # perform operation
fmadd.s f15, f5, f26, f22, rtz # perform operation
fmadd.s f15, f5, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f5, f26, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x19, 0x043508d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0xeff74601 # load x3 with value 0xeff74601
sw x3, 0(x2) # store 0xeff74601 in memory
flw f9, 0(x2) # load 0xeff74601 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f19, f26, f9, f2, dyn # perform operation
fmadd.s f19, f26, f9, f2, rdn # perform operation
fmadd.s f19, f26, f9, f2, rmm # perform operation
fmadd.s f19, f26, f9, f2, rne # perform operation
fmadd.s f19, f26, f9, f2, rtz # perform operation
fmadd.s f19, f26, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f9, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x5, 0x4c1bed34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0xca07494f # load x3 with value 0xca07494f
sw x3, 0(x2) # store 0xca07494f in memory
flw f12, 0(x2) # load 0xca07494f from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmadd.s f5, f10, f12, f18, dyn # perform operation
fmadd.s f5, f10, f12, f18, rdn # perform operation
fmadd.s f5, f10, f12, f18, rmm # perform operation
fmadd.s f5, f10, f12, f18, rne # perform operation
fmadd.s f5, f10, f12, f18, rtz # perform operation
fmadd.s f5, f10, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x15, 0x0bd55e06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x93ead0d7 # load x3 with value 0x93ead0d7
sw x3, 0(x2) # store 0x93ead0d7 in memory
flw f30, 0(x2) # load 0x93ead0d7 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmadd.s f15, f9, f30, f8, dyn # perform operation
fmadd.s f15, f9, f30, f8, rdn # perform operation
fmadd.s f15, f9, f30, f8, rmm # perform operation
fmadd.s f15, f9, f30, f8, rne # perform operation
fmadd.s f15, f9, f30, f8, rtz # perform operation
fmadd.s f15, f9, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f9, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f9, f30, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x19, 0x22518132 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x9044c939 # load x3 with value 0x9044c939
sw x3, 0(x2) # store 0x9044c939 in memory
flw f15, 0(x2) # load 0x9044c939 from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmadd.s f19, f11, f15, f25, dyn # perform operation
fmadd.s f19, f11, f15, f25, rdn # perform operation
fmadd.s f19, f11, f15, f25, rmm # perform operation
fmadd.s f19, f11, f15, f25, rne # perform operation
fmadd.s f19, f11, f15, f25, rtz # perform operation
fmadd.s f19, f11, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x26, 0x4efd30bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0xec6ac7c7 # load x3 with value 0xec6ac7c7
sw x3, 0(x2) # store 0xec6ac7c7 in memory
flw f12, 0(x2) # load 0xec6ac7c7 from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmadd.s f26, f15, f12, f4, dyn # perform operation
fmadd.s f26, f15, f12, f4, rdn # perform operation
fmadd.s f26, f15, f12, f4, rmm # perform operation
fmadd.s f26, f15, f12, f4, rne # perform operation
fmadd.s f26, f15, f12, f4, rtz # perform operation
fmadd.s f26, f15, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x18, 0x09774070 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x23af6536 # load x3 with value 0x23af6536
sw x3, 0(x2) # store 0x23af6536 in memory
flw f9, 0(x2) # load 0x23af6536 from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmadd.s f18, f6, f9, f26, dyn # perform operation
fmadd.s f18, f6, f9, f26, rdn # perform operation
fmadd.s f18, f6, f9, f26, rmm # perform operation
fmadd.s f18, f6, f9, f26, rne # perform operation
fmadd.s f18, f6, f9, f26, rtz # perform operation
fmadd.s f18, f6, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x17, 0x363b44e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x7b76cbe4 # load x3 with value 0x7b76cbe4
sw x3, 0(x2) # store 0x7b76cbe4 in memory
flw f19, 0(x2) # load 0x7b76cbe4 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmadd.s f17, f15, f19, f6, dyn # perform operation
fmadd.s f17, f15, f19, f6, rdn # perform operation
fmadd.s f17, f15, f19, f6, rmm # perform operation
fmadd.s f17, f15, f19, f6, rne # perform operation
fmadd.s f17, f15, f19, f6, rtz # perform operation
fmadd.s f17, f15, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x30, 0x73bb3172 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x234fddde # load x3 with value 0x234fddde
sw x3, 0(x2) # store 0x234fddde in memory
flw f11, 0(x2) # load 0x234fddde from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f30, f5, f11, f4, dyn # perform operation
fmadd.s f30, f5, f11, f4, rdn # perform operation
fmadd.s f30, f5, f11, f4, rmm # perform operation
fmadd.s f30, f5, f11, f4, rne # perform operation
fmadd.s f30, f5, f11, f4, rtz # perform operation
fmadd.s f30, f5, f11, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f11, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f11, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x29, 0x8dda501c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x7f8f3130 # load x3 with value 0x7f8f3130
sw x3, 0(x2) # store 0x7f8f3130 in memory
flw f19, 0(x2) # load 0x7f8f3130 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f29, f9, f19, f20, dyn # perform operation
fmadd.s f29, f9, f19, f20, rdn # perform operation
fmadd.s f29, f9, f19, f20, rmm # perform operation
fmadd.s f29, f9, f19, f20, rne # perform operation
fmadd.s f29, f9, f19, f20, rtz # perform operation
fmadd.s f29, f9, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f19, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x23, 0xd52e4fa9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0x147d2ec7 # load x3 with value 0x147d2ec7
sw x3, 0(x2) # store 0x147d2ec7 in memory
flw f24, 0(x2) # load 0x147d2ec7 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
fmadd.s f23, f2, f24, f4, dyn # perform operation
fmadd.s f23, f2, f24, f4, rdn # perform operation
fmadd.s f23, f2, f24, f4, rmm # perform operation
fmadd.s f23, f2, f24, f4, rne # perform operation
fmadd.s f23, f2, f24, f4, rtz # perform operation
fmadd.s f23, f2, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f24, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x6, 0xa422f1d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x5709f476 # load x3 with value 0x5709f476
sw x3, 0(x2) # store 0x5709f476 in memory
flw f29, 0(x2) # load 0x5709f476 from memory into f29
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmadd.s f6, f5, f29, f20, dyn # perform operation
fmadd.s f6, f5, f29, f20, rdn # perform operation
fmadd.s f6, f5, f29, f20, rmm # perform operation
fmadd.s f6, f5, f29, f20, rne # perform operation
fmadd.s f6, f5, f29, f20, rtz # perform operation
fmadd.s f6, f5, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x4, 0x298e9191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x0055304d # load x3 with value 0x0055304d
sw x3, 0(x2) # store 0x0055304d in memory
flw f27, 0(x2) # load 0x0055304d from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f4, f6, f27, f5, dyn # perform operation
fmadd.s f4, f6, f27, f5, rdn # perform operation
fmadd.s f4, f6, f27, f5, rmm # perform operation
fmadd.s f4, f6, f27, f5, rne # perform operation
fmadd.s f4, f6, f27, f5, rtz # perform operation
fmadd.s f4, f6, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f6, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f6, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x5, 0x8d9e3f9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x2842d64c # load x3 with value 0x2842d64c
sw x3, 0(x2) # store 0x2842d64c in memory
flw f4, 0(x2) # load 0x2842d64c from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fmadd.s f5, f25, f4, f18, dyn # perform operation
fmadd.s f5, f25, f4, f18, rdn # perform operation
fmadd.s f5, f25, f4, f18, rmm # perform operation
fmadd.s f5, f25, f4, f18, rne # perform operation
fmadd.s f5, f25, f4, f18, rtz # perform operation
fmadd.s f5, f25, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x28, 0x82cadac9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x1e62735b # load x3 with value 0x1e62735b
sw x3, 0(x2) # store 0x1e62735b in memory
flw f12, 0(x2) # load 0x1e62735b from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fmadd.s f28, f8, f12, f23, dyn # perform operation
fmadd.s f28, f8, f12, f23, rdn # perform operation
fmadd.s f28, f8, f12, f23, rmm # perform operation
fmadd.s f28, f8, f12, f23, rne # perform operation
fmadd.s f28, f8, f12, f23, rtz # perform operation
fmadd.s f28, f8, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x21, 0x5ae2be38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x16d687f1 # load x3 with value 0x16d687f1
sw x3, 0(x2) # store 0x16d687f1 in memory
flw f16, 0(x2) # load 0x16d687f1 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f21, f18, f16, f5, dyn # perform operation
fmadd.s f21, f18, f16, f5, rdn # perform operation
fmadd.s f21, f18, f16, f5, rmm # perform operation
fmadd.s f21, f18, f16, f5, rne # perform operation
fmadd.s f21, f18, f16, f5, rtz # perform operation
fmadd.s f21, f18, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f18, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f18, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x28, 0xc25f5c4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x6a05821b # load x3 with value 0x6a05821b
sw x3, 0(x2) # store 0x6a05821b in memory
flw f15, 0(x2) # load 0x6a05821b from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f28, f21, f15, f11, dyn # perform operation
fmadd.s f28, f21, f15, f11, rdn # perform operation
fmadd.s f28, f21, f15, f11, rmm # perform operation
fmadd.s f28, f21, f15, f11, rne # perform operation
fmadd.s f28, f21, f15, f11, rtz # perform operation
fmadd.s f28, f21, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f21, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f21, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x28, 0x209365d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x7846d794 # load x3 with value 0x7846d794
sw x3, 0(x2) # store 0x7846d794 in memory
flw f17, 0(x2) # load 0x7846d794 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
fmadd.s f28, f22, f17, f11, dyn # perform operation
fmadd.s f28, f22, f17, f11, rdn # perform operation
fmadd.s f28, f22, f17, f11, rmm # perform operation
fmadd.s f28, f22, f17, f11, rne # perform operation
fmadd.s f28, f22, f17, f11, rtz # perform operation
fmadd.s f28, f22, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f22, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x10, 0x6b18690e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0x3efea0db # load x3 with value 0x3efea0db
sw x3, 0(x2) # store 0x3efea0db in memory
flw f27, 0(x2) # load 0x3efea0db from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmadd.s f10, f22, f27, f17, dyn # perform operation
fmadd.s f10, f22, f27, f17, rdn # perform operation
fmadd.s f10, f22, f27, f17, rmm # perform operation
fmadd.s f10, f22, f27, f17, rne # perform operation
fmadd.s f10, f22, f27, f17, rtz # perform operation
fmadd.s f10, f22, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f27, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x18, 0xe2c4faea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x94008c88 # load x3 with value 0x94008c88
sw x3, 0(x2) # store 0x94008c88 in memory
flw f28, 0(x2) # load 0x94008c88 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmadd.s f18, f10, f28, f21, dyn # perform operation
fmadd.s f18, f10, f28, f21, rdn # perform operation
fmadd.s f18, f10, f28, f21, rmm # perform operation
fmadd.s f18, f10, f28, f21, rne # perform operation
fmadd.s f18, f10, f28, f21, rtz # perform operation
fmadd.s f18, f10, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f28, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x31, 0x65a1a0c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xb64c7238 # load x3 with value 0xb64c7238
sw x3, 0(x2) # store 0xb64c7238 in memory
flw f30, 0(x2) # load 0xb64c7238 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmadd.s f31, f11, f30, f28, dyn # perform operation
fmadd.s f31, f11, f30, f28, rdn # perform operation
fmadd.s f31, f11, f30, f28, rmm # perform operation
fmadd.s f31, f11, f30, f28, rne # perform operation
fmadd.s f31, f11, f30, f28, rtz # perform operation
fmadd.s f31, f11, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f11, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x30, 0xf840f0f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x0cbce73d # load x3 with value 0x0cbce73d
sw x3, 0(x2) # store 0x0cbce73d in memory
flw f14, 0(x2) # load 0x0cbce73d from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
fmadd.s f30, f18, f14, f4, dyn # perform operation
fmadd.s f30, f18, f14, f4, rdn # perform operation
fmadd.s f30, f18, f14, f4, rmm # perform operation
fmadd.s f30, f18, f14, f4, rne # perform operation
fmadd.s f30, f18, f14, f4, rtz # perform operation
fmadd.s f30, f18, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x27, 0x099d39ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0xaf9a6993 # load x3 with value 0xaf9a6993
sw x3, 0(x2) # store 0xaf9a6993 in memory
flw f1, 0(x2) # load 0xaf9a6993 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fmadd.s f27, f25, f1, f19, dyn # perform operation
fmadd.s f27, f25, f1, f19, rdn # perform operation
fmadd.s f27, f25, f1, f19, rmm # perform operation
fmadd.s f27, f25, f1, f19, rne # perform operation
fmadd.s f27, f25, f1, f19, rtz # perform operation
fmadd.s f27, f25, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x23, 0xb4c05ae0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0x0034f31d # load x3 with value 0x0034f31d
sw x3, 0(x2) # store 0x0034f31d in memory
flw f1, 0(x2) # load 0x0034f31d from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fmadd.s f23, f10, f1, f7, dyn # perform operation
fmadd.s f23, f10, f1, f7, rdn # perform operation
fmadd.s f23, f10, f1, f7, rmm # perform operation
fmadd.s f23, f10, f1, f7, rne # perform operation
fmadd.s f23, f10, f1, f7, rtz # perform operation
fmadd.s f23, f10, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x21, 0x864f8d8c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x440d04d0 # load x3 with value 0x440d04d0
sw x3, 0(x2) # store 0x440d04d0 in memory
flw f29, 0(x2) # load 0x440d04d0 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f21, f9, f29, f25, dyn # perform operation
fmadd.s f21, f9, f29, f25, rdn # perform operation
fmadd.s f21, f9, f29, f25, rmm # perform operation
fmadd.s f21, f9, f29, f25, rne # perform operation
fmadd.s f21, f9, f29, f25, rtz # perform operation
fmadd.s f21, f9, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f9, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f9, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x13, 0x77d8b1a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xb2ba603e # load x3 with value 0xb2ba603e
sw x3, 0(x2) # store 0xb2ba603e in memory
flw f25, 0(x2) # load 0xb2ba603e from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fmadd.s f13, f16, f25, f20, dyn # perform operation
fmadd.s f13, f16, f25, f20, rdn # perform operation
fmadd.s f13, f16, f25, f20, rmm # perform operation
fmadd.s f13, f16, f25, f20, rne # perform operation
fmadd.s f13, f16, f25, f20, rtz # perform operation
fmadd.s f13, f16, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x15, 0xd83688ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x6bebbf60 # load x3 with value 0x6bebbf60
sw x3, 0(x2) # store 0x6bebbf60 in memory
flw f11, 0(x2) # load 0x6bebbf60 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmadd.s f15, f27, f11, f25, dyn # perform operation
fmadd.s f15, f27, f11, f25, rdn # perform operation
fmadd.s f15, f27, f11, f25, rmm # perform operation
fmadd.s f15, f27, f11, f25, rne # perform operation
fmadd.s f15, f27, f11, f25, rtz # perform operation
fmadd.s f15, f27, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x5, 0x7c3de23b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x6e6080ae # load x3 with value 0x6e6080ae
sw x3, 0(x2) # store 0x6e6080ae in memory
flw f17, 0(x2) # load 0x6e6080ae from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmadd.s f5, f28, f17, f9, dyn # perform operation
fmadd.s f5, f28, f17, f9, rdn # perform operation
fmadd.s f5, f28, f17, f9, rmm # perform operation
fmadd.s f5, f28, f17, f9, rne # perform operation
fmadd.s f5, f28, f17, f9, rtz # perform operation
fmadd.s f5, f28, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f17, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x20, 0xbf7754e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
li x3, 0x664c8b64 # load x3 with value 0x664c8b64
sw x3, 0(x2) # store 0x664c8b64 in memory
flw f29, 0(x2) # load 0x664c8b64 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fmadd.s f20, f3, f29, f13, dyn # perform operation
fmadd.s f20, f3, f29, f13, rdn # perform operation
fmadd.s f20, f3, f29, f13, rmm # perform operation
fmadd.s f20, f3, f29, f13, rne # perform operation
fmadd.s f20, f3, f29, f13, rtz # perform operation
fmadd.s f20, f3, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x31, 0x387d6f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x3621190c # load x3 with value 0x3621190c
sw x3, 0(x2) # store 0x3621190c in memory
flw f17, 0(x2) # load 0x3621190c from memory into f17
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmadd.s f31, f2, f17, f27, dyn # perform operation
fmadd.s f31, f2, f17, f27, rdn # perform operation
fmadd.s f31, f2, f17, f27, rmm # perform operation
fmadd.s f31, f2, f17, f27, rne # perform operation
fmadd.s f31, f2, f17, f27, rtz # perform operation
fmadd.s f31, f2, f17, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f17, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f17, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x13, 0xd88df388 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0x4b27a212 # load x3 with value 0x4b27a212
sw x3, 0(x2) # store 0x4b27a212 in memory
flw f25, 0(x2) # load 0x4b27a212 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f13, f16, f25, f8, dyn # perform operation
fmadd.s f13, f16, f25, f8, rdn # perform operation
fmadd.s f13, f16, f25, f8, rmm # perform operation
fmadd.s f13, f16, f25, f8, rne # perform operation
fmadd.s f13, f16, f25, f8, rtz # perform operation
fmadd.s f13, f16, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x30, 0xfddb9451 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0xf6b874a9 # load x3 with value 0xf6b874a9
sw x3, 0(x2) # store 0xf6b874a9 in memory
flw f14, 0(x2) # load 0xf6b874a9 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmadd.s f30, f12, f14, f27, dyn # perform operation
fmadd.s f30, f12, f14, f27, rdn # perform operation
fmadd.s f30, f12, f14, f27, rmm # perform operation
fmadd.s f30, f12, f14, f27, rne # perform operation
fmadd.s f30, f12, f14, f27, rtz # perform operation
fmadd.s f30, f12, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x31, 0x9994e8fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x8c62c2e4 # load x3 with value 0x8c62c2e4
sw x3, 0(x2) # store 0x8c62c2e4 in memory
flw f29, 0(x2) # load 0x8c62c2e4 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f31, f20, f29, f6, dyn # perform operation
fmadd.s f31, f20, f29, f6, rdn # perform operation
fmadd.s f31, f20, f29, f6, rmm # perform operation
fmadd.s f31, f20, f29, f6, rne # perform operation
fmadd.s f31, f20, f29, f6, rtz # perform operation
fmadd.s f31, f20, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x12, 0x09bf335c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x6a3531ea # load x3 with value 0x6a3531ea
sw x3, 0(x2) # store 0x6a3531ea in memory
flw f17, 0(x2) # load 0x6a3531ea from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f12, f29, f17, f18, dyn # perform operation
fmadd.s f12, f29, f17, f18, rdn # perform operation
fmadd.s f12, f29, f17, f18, rmm # perform operation
fmadd.s f12, f29, f17, f18, rne # perform operation
fmadd.s f12, f29, f17, f18, rtz # perform operation
fmadd.s f12, f29, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f29, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f29, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x11, 0xd68eb117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x87f9fd2f # load x3 with value 0x87f9fd2f
sw x3, 0(x2) # store 0x87f9fd2f in memory
flw f2, 0(x2) # load 0x87f9fd2f from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmadd.s f11, f30, f2, f6, dyn # perform operation
fmadd.s f11, f30, f2, f6, rdn # perform operation
fmadd.s f11, f30, f2, f6, rmm # perform operation
fmadd.s f11, f30, f2, f6, rne # perform operation
fmadd.s f11, f30, f2, f6, rtz # perform operation
fmadd.s f11, f30, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f2, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x5, 0x871116d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x910a4bce # load x3 with value 0x910a4bce
sw x3, 0(x2) # store 0x910a4bce in memory
flw f26, 0(x2) # load 0x910a4bce from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmadd.s f5, f18, f26, f11, dyn # perform operation
fmadd.s f5, f18, f26, f11, rdn # perform operation
fmadd.s f5, f18, f26, f11, rmm # perform operation
fmadd.s f5, f18, f26, f11, rne # perform operation
fmadd.s f5, f18, f26, f11, rtz # perform operation
fmadd.s f5, f18, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x15, 0xffd7045a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xfe44624e # load x3 with value 0xfe44624e
sw x3, 0(x2) # store 0xfe44624e in memory
flw f1, 0(x2) # load 0xfe44624e from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f15, f18, f1, f24, dyn # perform operation
fmadd.s f15, f18, f1, f24, rdn # perform operation
fmadd.s f15, f18, f1, f24, rmm # perform operation
fmadd.s f15, f18, f1, f24, rne # perform operation
fmadd.s f15, f18, f1, f24, rtz # perform operation
fmadd.s f15, f18, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x8, 0xd3ece8bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x7ecc4b84 # load x3 with value 0x7ecc4b84
sw x3, 0(x2) # store 0x7ecc4b84 in memory
flw f15, 0(x2) # load 0x7ecc4b84 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f8, f22, f15, f3, dyn # perform operation
fmadd.s f8, f22, f15, f3, rdn # perform operation
fmadd.s f8, f22, f15, f3, rmm # perform operation
fmadd.s f8, f22, f15, f3, rne # perform operation
fmadd.s f8, f22, f15, f3, rtz # perform operation
fmadd.s f8, f22, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x17, 0x153c7f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xc1b063c7 # load x3 with value 0xc1b063c7
sw x3, 0(x2) # store 0xc1b063c7 in memory
flw f11, 0(x2) # load 0xc1b063c7 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f17, f24, f11, f21, dyn # perform operation
fmadd.s f17, f24, f11, f21, rdn # perform operation
fmadd.s f17, f24, f11, f21, rmm # perform operation
fmadd.s f17, f24, f11, f21, rne # perform operation
fmadd.s f17, f24, f11, f21, rtz # perform operation
fmadd.s f17, f24, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x11, 0x97fc30bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x8a8efab0 # load x3 with value 0x8a8efab0
sw x3, 0(x2) # store 0x8a8efab0 in memory
flw f2, 0(x2) # load 0x8a8efab0 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fmadd.s f11, f26, f2, f16, dyn # perform operation
fmadd.s f11, f26, f2, f16, rdn # perform operation
fmadd.s f11, f26, f2, f16, rmm # perform operation
fmadd.s f11, f26, f2, f16, rne # perform operation
fmadd.s f11, f26, f2, f16, rtz # perform operation
fmadd.s f11, f26, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f26, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f26, f2, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x6, 0xbc7f5c2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0xeba07b78 # load x3 with value 0xeba07b78
sw x3, 0(x2) # store 0xeba07b78 in memory
flw f7, 0(x2) # load 0xeba07b78 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmadd.s f6, f27, f7, f26, dyn # perform operation
fmadd.s f6, f27, f7, f26, rdn # perform operation
fmadd.s f6, f27, f7, f26, rmm # perform operation
fmadd.s f6, f27, f7, f26, rne # perform operation
fmadd.s f6, f27, f7, f26, rtz # perform operation
fmadd.s f6, f27, f7, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f27, f7, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f27, f7, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f27, f7, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f27, f7, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f27, f7, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x19, 0x6aba1dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0xf7f2b872 # load x3 with value 0xf7f2b872
sw x3, 0(x2) # store 0xf7f2b872 in memory
flw f12, 0(x2) # load 0xf7f2b872 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmadd.s f19, f20, f12, f29, dyn # perform operation
fmadd.s f19, f20, f12, f29, rdn # perform operation
fmadd.s f19, f20, f12, f29, rmm # perform operation
fmadd.s f19, f20, f12, f29, rne # perform operation
fmadd.s f19, f20, f12, f29, rtz # perform operation
fmadd.s f19, f20, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x7, 0xb635427c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0xf0e8f194 # load x3 with value 0xf0e8f194
sw x3, 0(x2) # store 0xf0e8f194 in memory
flw f20, 0(x2) # load 0xf0e8f194 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
fmadd.s f7, f5, f20, f21, dyn # perform operation
fmadd.s f7, f5, f20, f21, rdn # perform operation
fmadd.s f7, f5, f20, f21, rmm # perform operation
fmadd.s f7, f5, f20, f21, rne # perform operation
fmadd.s f7, f5, f20, f21, rtz # perform operation
fmadd.s f7, f5, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x22, 0xb702c060 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x38a447c6 # load x3 with value 0x38a447c6
sw x3, 0(x2) # store 0x38a447c6 in memory
flw f8, 0(x2) # load 0x38a447c6 from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmadd.s f22, f11, f8, f12, dyn # perform operation
fmadd.s f22, f11, f8, f12, rdn # perform operation
fmadd.s f22, f11, f8, f12, rmm # perform operation
fmadd.s f22, f11, f8, f12, rne # perform operation
fmadd.s f22, f11, f8, f12, rtz # perform operation
fmadd.s f22, f11, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f11, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f11, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x30, 0x91e64910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x6960fe4a # load x3 with value 0x6960fe4a
sw x3, 0(x2) # store 0x6960fe4a in memory
flw f13, 0(x2) # load 0x6960fe4a from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmadd.s f30, f26, f13, f8, dyn # perform operation
fmadd.s f30, f26, f13, f8, rdn # perform operation
fmadd.s f30, f26, f13, f8, rmm # perform operation
fmadd.s f30, f26, f13, f8, rne # perform operation
fmadd.s f30, f26, f13, f8, rtz # perform operation
fmadd.s f30, f26, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x12, 0x0a668356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x4f16db9a # load x3 with value 0x4f16db9a
sw x3, 0(x2) # store 0x4f16db9a in memory
flw f14, 0(x2) # load 0x4f16db9a from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f12, f25, f14, f3, dyn # perform operation
fmadd.s f12, f25, f14, f3, rdn # perform operation
fmadd.s f12, f25, f14, f3, rmm # perform operation
fmadd.s f12, f25, f14, f3, rne # perform operation
fmadd.s f12, f25, f14, f3, rtz # perform operation
fmadd.s f12, f25, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x11, 0x74611129 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xe9d0089d # load x3 with value 0xe9d0089d
sw x3, 0(x2) # store 0xe9d0089d in memory
flw f6, 0(x2) # load 0xe9d0089d from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmadd.s f11, f13, f6, f9, dyn # perform operation
fmadd.s f11, f13, f6, f9, rdn # perform operation
fmadd.s f11, f13, f6, f9, rmm # perform operation
fmadd.s f11, f13, f6, f9, rne # perform operation
fmadd.s f11, f13, f6, f9, rtz # perform operation
fmadd.s f11, f13, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f13, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f13, f6, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x27, 0xf4507f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xf8716d14 # load x3 with value 0xf8716d14
sw x3, 0(x2) # store 0xf8716d14 in memory
flw f20, 0(x2) # load 0xf8716d14 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f27, f2, f20, f8, dyn # perform operation
fmadd.s f27, f2, f20, f8, rdn # perform operation
fmadd.s f27, f2, f20, f8, rmm # perform operation
fmadd.s f27, f2, f20, f8, rne # perform operation
fmadd.s f27, f2, f20, f8, rtz # perform operation
fmadd.s f27, f2, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f20, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x13, 0x664d5e2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xe48e6f77 # load x3 with value 0xe48e6f77
sw x3, 0(x2) # store 0xe48e6f77 in memory
flw f18, 0(x2) # load 0xe48e6f77 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmadd.s f13, f16, f18, f28, dyn # perform operation
fmadd.s f13, f16, f18, f28, rdn # perform operation
fmadd.s f13, f16, f18, f28, rmm # perform operation
fmadd.s f13, f16, f18, f28, rne # perform operation
fmadd.s f13, f16, f18, f28, rtz # perform operation
fmadd.s f13, f16, f18, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f18, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f18, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x17, 0x4e0b264a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x97f1a352 # load x3 with value 0x97f1a352
sw x3, 0(x2) # store 0x97f1a352 in memory
flw f26, 0(x2) # load 0x97f1a352 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f17, f4, f26, f5, dyn # perform operation
fmadd.s f17, f4, f26, f5, rdn # perform operation
fmadd.s f17, f4, f26, f5, rmm # perform operation
fmadd.s f17, f4, f26, f5, rne # perform operation
fmadd.s f17, f4, f26, f5, rtz # perform operation
fmadd.s f17, f4, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f4, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f4, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f4, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f4, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f4, f26, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x16, 0xdd55d2b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x8fa94572 # load x3 with value 0x8fa94572
sw x3, 0(x2) # store 0x8fa94572 in memory
flw f13, 0(x2) # load 0x8fa94572 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmadd.s f16, f26, f13, f8, dyn # perform operation
fmadd.s f16, f26, f13, f8, rdn # perform operation
fmadd.s f16, f26, f13, f8, rmm # perform operation
fmadd.s f16, f26, f13, f8, rne # perform operation
fmadd.s f16, f26, f13, f8, rtz # perform operation
fmadd.s f16, f26, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x20, 0xe7f757c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x2b4466ac # load x3 with value 0x2b4466ac
sw x3, 0(x2) # store 0x2b4466ac in memory
flw f16, 0(x2) # load 0x2b4466ac from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f20, f27, f16, f31, dyn # perform operation
fmadd.s f20, f27, f16, f31, rdn # perform operation
fmadd.s f20, f27, f16, f31, rmm # perform operation
fmadd.s f20, f27, f16, f31, rne # perform operation
fmadd.s f20, f27, f16, f31, rtz # perform operation
fmadd.s f20, f27, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x5, 0xa540f9ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0x8854188a # load x3 with value 0x8854188a
sw x3, 0(x2) # store 0x8854188a in memory
flw f24, 0(x2) # load 0x8854188a from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
fmadd.s f5, f25, f24, f21, dyn # perform operation
fmadd.s f5, f25, f24, f21, rdn # perform operation
fmadd.s f5, f25, f24, f21, rmm # perform operation
fmadd.s f5, f25, f24, f21, rne # perform operation
fmadd.s f5, f25, f24, f21, rtz # perform operation
fmadd.s f5, f25, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x4, 0x65bb7279 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0x9a723c92 # load x3 with value 0x9a723c92
sw x3, 0(x2) # store 0x9a723c92 in memory
flw f31, 0(x2) # load 0x9a723c92 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fmadd.s f4, f19, f31, f15, dyn # perform operation
fmadd.s f4, f19, f31, f15, rdn # perform operation
fmadd.s f4, f19, f31, f15, rmm # perform operation
fmadd.s f4, f19, f31, f15, rne # perform operation
fmadd.s f4, f19, f31, f15, rtz # perform operation
fmadd.s f4, f19, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x8, 0x0beddf90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x7f52606a # load x3 with value 0x7f52606a
sw x3, 0(x2) # store 0x7f52606a in memory
flw f16, 0(x2) # load 0x7f52606a from memory into f16
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmadd.s f8, f20, f16, f5, dyn # perform operation
fmadd.s f8, f20, f16, f5, rdn # perform operation
fmadd.s f8, f20, f16, f5, rmm # perform operation
fmadd.s f8, f20, f16, f5, rne # perform operation
fmadd.s f8, f20, f16, f5, rtz # perform operation
fmadd.s f8, f20, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x13, 0x94c66485 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x5e9cdbb7 # load x3 with value 0x5e9cdbb7
sw x3, 0(x2) # store 0x5e9cdbb7 in memory
flw f21, 0(x2) # load 0x5e9cdbb7 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f13, f22, f21, f20, dyn # perform operation
fmadd.s f13, f22, f21, f20, rdn # perform operation
fmadd.s f13, f22, f21, f20, rmm # perform operation
fmadd.s f13, f22, f21, f20, rne # perform operation
fmadd.s f13, f22, f21, f20, rtz # perform operation
fmadd.s f13, f22, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f22, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f22, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x11, 0x9e69d99b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x1183f6cf # load x3 with value 0x1183f6cf
sw x3, 0(x2) # store 0x1183f6cf in memory
flw f25, 0(x2) # load 0x1183f6cf from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmadd.s f11, f20, f25, f24, dyn # perform operation
fmadd.s f11, f20, f25, f24, rdn # perform operation
fmadd.s f11, f20, f25, f24, rmm # perform operation
fmadd.s f11, f20, f25, f24, rne # perform operation
fmadd.s f11, f20, f25, f24, rtz # perform operation
fmadd.s f11, f20, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f25, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x17, 0x6a50ff65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xcadd0312 # load x3 with value 0xcadd0312
sw x3, 0(x2) # store 0xcadd0312 in memory
flw f16, 0(x2) # load 0xcadd0312 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f17, f26, f16, f12, dyn # perform operation
fmadd.s f17, f26, f16, f12, rdn # perform operation
fmadd.s f17, f26, f16, f12, rmm # perform operation
fmadd.s f17, f26, f16, f12, rne # perform operation
fmadd.s f17, f26, f16, f12, rtz # perform operation
fmadd.s f17, f26, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x19, 0x997d7455 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x28b8e34c # load x3 with value 0x28b8e34c
sw x3, 0(x2) # store 0x28b8e34c in memory
flw f17, 0(x2) # load 0x28b8e34c from memory into f17
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmadd.s f19, f7, f17, f10, dyn # perform operation
fmadd.s f19, f7, f17, f10, rdn # perform operation
fmadd.s f19, f7, f17, f10, rmm # perform operation
fmadd.s f19, f7, f17, f10, rne # perform operation
fmadd.s f19, f7, f17, f10, rtz # perform operation
fmadd.s f19, f7, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f17, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x24, 0xf417c90c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x97e045bf # load x3 with value 0x97e045bf
sw x3, 0(x2) # store 0x97e045bf in memory
flw f16, 0(x2) # load 0x97e045bf from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmadd.s f24, f18, f16, f26, dyn # perform operation
fmadd.s f24, f18, f16, f26, rdn # perform operation
fmadd.s f24, f18, f16, f26, rmm # perform operation
fmadd.s f24, f18, f16, f26, rne # perform operation
fmadd.s f24, f18, f16, f26, rtz # perform operation
fmadd.s f24, f18, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f16, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x23, 0x0204c7de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0xac7eacc4 # load x3 with value 0xac7eacc4
sw x3, 0(x2) # store 0xac7eacc4 in memory
flw f16, 0(x2) # load 0xac7eacc4 from memory into f16
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmadd.s f23, f7, f16, f9, dyn # perform operation
fmadd.s f23, f7, f16, f9, rdn # perform operation
fmadd.s f23, f7, f16, f9, rmm # perform operation
fmadd.s f23, f7, f16, f9, rne # perform operation
fmadd.s f23, f7, f16, f9, rtz # perform operation
fmadd.s f23, f7, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x29, 0x785f882d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x99ac8d06 # load x3 with value 0x99ac8d06
sw x3, 0(x2) # store 0x99ac8d06 in memory
flw f28, 0(x2) # load 0x99ac8d06 from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmadd.s f29, f31, f28, f22, dyn # perform operation
fmadd.s f29, f31, f28, f22, rdn # perform operation
fmadd.s f29, f31, f28, f22, rmm # perform operation
fmadd.s f29, f31, f28, f22, rne # perform operation
fmadd.s f29, f31, f28, f22, rtz # perform operation
fmadd.s f29, f31, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x24, 0x7eca8738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x97676198 # load x3 with value 0x97676198
sw x3, 0(x2) # store 0x97676198 in memory
flw f5, 0(x2) # load 0x97676198 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fmadd.s f24, f26, f5, f3, dyn # perform operation
fmadd.s f24, f26, f5, f3, rdn # perform operation
fmadd.s f24, f26, f5, f3, rmm # perform operation
fmadd.s f24, f26, f5, f3, rne # perform operation
fmadd.s f24, f26, f5, f3, rtz # perform operation
fmadd.s f24, f26, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x17, 0xe438da49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0xfb31f405 # load x3 with value 0xfb31f405
sw x3, 0(x2) # store 0xfb31f405 in memory
flw f13, 0(x2) # load 0xfb31f405 from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
fmadd.s f17, f4, f13, f20, dyn # perform operation
fmadd.s f17, f4, f13, f20, rdn # perform operation
fmadd.s f17, f4, f13, f20, rmm # perform operation
fmadd.s f17, f4, f13, f20, rne # perform operation
fmadd.s f17, f4, f13, f20, rtz # perform operation
fmadd.s f17, f4, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f4, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f4, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x4, 0xa79ecfac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
li x3, 0xcb5bf22a # load x3 with value 0xcb5bf22a
sw x3, 0(x2) # store 0xcb5bf22a in memory
flw f26, 0(x2) # load 0xcb5bf22a from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmadd.s f4, f19, f26, f18, dyn # perform operation
fmadd.s f4, f19, f26, f18, rdn # perform operation
fmadd.s f4, f19, f26, f18, rmm # perform operation
fmadd.s f4, f19, f26, f18, rne # perform operation
fmadd.s f4, f19, f26, f18, rtz # perform operation
fmadd.s f4, f19, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x1, 0x22bbc374 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x8983f1ad # load x3 with value 0x8983f1ad
sw x3, 0(x2) # store 0x8983f1ad in memory
flw f28, 0(x2) # load 0x8983f1ad from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f1, f21, f28, f20, dyn # perform operation
fmadd.s f1, f21, f28, f20, rdn # perform operation
fmadd.s f1, f21, f28, f20, rmm # perform operation
fmadd.s f1, f21, f28, f20, rne # perform operation
fmadd.s f1, f21, f28, f20, rtz # perform operation
fmadd.s f1, f21, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f28, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x25, 0xddac4185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0x6d7da65f # load x3 with value 0x6d7da65f
sw x3, 0(x2) # store 0x6d7da65f in memory
flw f7, 0(x2) # load 0x6d7da65f from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmadd.s f25, f17, f7, f22, dyn # perform operation
fmadd.s f25, f17, f7, f22, rdn # perform operation
fmadd.s f25, f17, f7, f22, rmm # perform operation
fmadd.s f25, f17, f7, f22, rne # perform operation
fmadd.s f25, f17, f7, f22, rtz # perform operation
fmadd.s f25, f17, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f17, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f17, f7, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x24, 0x2039ce28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0x4d2d741d # load x3 with value 0x4d2d741d
sw x3, 0(x2) # store 0x4d2d741d in memory
flw f6, 0(x2) # load 0x4d2d741d from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f24, f12, f6, f3, dyn # perform operation
fmadd.s f24, f12, f6, f3, rdn # perform operation
fmadd.s f24, f12, f6, f3, rmm # perform operation
fmadd.s f24, f12, f6, f3, rne # perform operation
fmadd.s f24, f12, f6, f3, rtz # perform operation
fmadd.s f24, f12, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f6, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x27, 0x61a122a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xfec2ddae # load x3 with value 0xfec2ddae
sw x3, 0(x2) # store 0xfec2ddae in memory
flw f20, 0(x2) # load 0xfec2ddae from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fmadd.s f27, f11, f20, f10, dyn # perform operation
fmadd.s f27, f11, f20, f10, rdn # perform operation
fmadd.s f27, f11, f20, f10, rmm # perform operation
fmadd.s f27, f11, f20, f10, rne # perform operation
fmadd.s f27, f11, f20, f10, rtz # perform operation
fmadd.s f27, f11, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f20, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x3, 0x9b03b8c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x4d3f7967 # load x3 with value 0x4d3f7967
sw x3, 0(x2) # store 0x4d3f7967 in memory
flw f25, 0(x2) # load 0x4d3f7967 from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmadd.s f3, f30, f25, f29, dyn # perform operation
fmadd.s f3, f30, f25, f29, rdn # perform operation
fmadd.s f3, f30, f25, f29, rmm # perform operation
fmadd.s f3, f30, f25, f29, rne # perform operation
fmadd.s f3, f30, f25, f29, rtz # perform operation
fmadd.s f3, f30, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f30, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f30, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x1, 0x2310fa88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x1e08a7b3 # load x3 with value 0x1e08a7b3
sw x3, 0(x2) # store 0x1e08a7b3 in memory
flw f3, 0(x2) # load 0x1e08a7b3 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmadd.s f1, f15, f3, f6, dyn # perform operation
fmadd.s f1, f15, f3, f6, rdn # perform operation
fmadd.s f1, f15, f3, f6, rmm # perform operation
fmadd.s f1, f15, f3, f6, rne # perform operation
fmadd.s f1, f15, f3, f6, rtz # perform operation
fmadd.s f1, f15, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x10, 0x53118521 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x9df40e7c # load x3 with value 0x9df40e7c
sw x3, 0(x2) # store 0x9df40e7c in memory
flw f16, 0(x2) # load 0x9df40e7c from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmadd.s f10, f28, f16, f1, dyn # perform operation
fmadd.s f10, f28, f16, f1, rdn # perform operation
fmadd.s f10, f28, f16, f1, rmm # perform operation
fmadd.s f10, f28, f16, f1, rne # perform operation
fmadd.s f10, f28, f16, f1, rtz # perform operation
fmadd.s f10, f28, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x29, 0x13d9ce18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x7f5c51d4 # load x3 with value 0x7f5c51d4
sw x3, 0(x2) # store 0x7f5c51d4 in memory
flw f28, 0(x2) # load 0x7f5c51d4 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmadd.s f29, f5, f28, f7, dyn # perform operation
fmadd.s f29, f5, f28, f7, rdn # perform operation
fmadd.s f29, f5, f28, f7, rmm # perform operation
fmadd.s f29, f5, f28, f7, rne # perform operation
fmadd.s f29, f5, f28, f7, rtz # perform operation
fmadd.s f29, f5, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x12, 0xf6bf9bcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xfa90c0bd # load x3 with value 0xfa90c0bd
sw x3, 0(x2) # store 0xfa90c0bd in memory
flw f22, 0(x2) # load 0xfa90c0bd from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fmadd.s f12, f28, f22, f15, dyn # perform operation
fmadd.s f12, f28, f22, f15, rdn # perform operation
fmadd.s f12, f28, f22, f15, rmm # perform operation
fmadd.s f12, f28, f22, f15, rne # perform operation
fmadd.s f12, f28, f22, f15, rtz # perform operation
fmadd.s f12, f28, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x25, 0xafdf5519 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
li x3, 0x66764ff3 # load x3 with value 0x66764ff3
sw x3, 0(x2) # store 0x66764ff3 in memory
flw f5, 0(x2) # load 0x66764ff3 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
fmadd.s f25, f22, f5, f10, dyn # perform operation
fmadd.s f25, f22, f5, f10, rdn # perform operation
fmadd.s f25, f22, f5, f10, rmm # perform operation
fmadd.s f25, f22, f5, f10, rne # perform operation
fmadd.s f25, f22, f5, f10, rtz # perform operation
fmadd.s f25, f22, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x22, 0xa0c541be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x480762a0 # load x3 with value 0x480762a0
sw x3, 0(x2) # store 0x480762a0 in memory
flw f1, 0(x2) # load 0x480762a0 from memory into f1
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmadd.s f22, f29, f1, f21, dyn # perform operation
fmadd.s f22, f29, f1, f21, rdn # perform operation
fmadd.s f22, f29, f1, f21, rmm # perform operation
fmadd.s f22, f29, f1, f21, rne # perform operation
fmadd.s f22, f29, f1, f21, rtz # perform operation
fmadd.s f22, f29, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f1, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x14, 0x9e1aeb97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xe0a14a4a # load x3 with value 0xe0a14a4a
sw x3, 0(x2) # store 0xe0a14a4a in memory
flw f30, 0(x2) # load 0xe0a14a4a from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmadd.s f14, f31, f30, f23, dyn # perform operation
fmadd.s f14, f31, f30, f23, rdn # perform operation
fmadd.s f14, f31, f30, f23, rmm # perform operation
fmadd.s f14, f31, f30, f23, rne # perform operation
fmadd.s f14, f31, f30, f23, rtz # perform operation
fmadd.s f14, f31, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f31, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f31, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x1, 0xf588d11c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xfd06721e # load x3 with value 0xfd06721e
sw x3, 0(x2) # store 0xfd06721e in memory
flw f27, 0(x2) # load 0xfd06721e from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmadd.s f1, f18, f27, f14, dyn # perform operation
fmadd.s f1, f18, f27, f14, rdn # perform operation
fmadd.s f1, f18, f27, f14, rmm # perform operation
fmadd.s f1, f18, f27, f14, rne # perform operation
fmadd.s f1, f18, f27, f14, rtz # perform operation
fmadd.s f1, f18, f27, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f27, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f27, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x13, 0xf402e754 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
li x3, 0x960feae7 # load x3 with value 0x960feae7
sw x3, 0(x2) # store 0x960feae7 in memory
flw f29, 0(x2) # load 0x960feae7 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f13, f4, f29, f30, dyn # perform operation
fmadd.s f13, f4, f29, f30, rdn # perform operation
fmadd.s f13, f4, f29, f30, rmm # perform operation
fmadd.s f13, f4, f29, f30, rne # perform operation
fmadd.s f13, f4, f29, f30, rtz # perform operation
fmadd.s f13, f4, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f4, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f4, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x27, 0xf03593a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xfe22ca6d # load x3 with value 0xfe22ca6d
sw x3, 0(x2) # store 0xfe22ca6d in memory
flw f20, 0(x2) # load 0xfe22ca6d from memory into f20
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmadd.s f27, f14, f20, f19, dyn # perform operation
fmadd.s f27, f14, f20, f19, rdn # perform operation
fmadd.s f27, f14, f20, f19, rmm # perform operation
fmadd.s f27, f14, f20, f19, rne # perform operation
fmadd.s f27, f14, f20, f19, rtz # perform operation
fmadd.s f27, f14, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f20, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x30, 0xfd486cbf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x9605ce22 # load x3 with value 0x9605ce22
sw x3, 0(x2) # store 0x9605ce22 in memory
flw f5, 0(x2) # load 0x9605ce22 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f30, f10, f5, f7, dyn # perform operation
fmadd.s f30, f10, f5, f7, rdn # perform operation
fmadd.s f30, f10, f5, f7, rmm # perform operation
fmadd.s f30, f10, f5, f7, rne # perform operation
fmadd.s f30, f10, f5, f7, rtz # perform operation
fmadd.s f30, f10, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f10, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f10, f5, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x12, 0xaccea0fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xf62adb75 # load x3 with value 0xf62adb75
sw x3, 0(x2) # store 0xf62adb75 in memory
flw f7, 0(x2) # load 0xf62adb75 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f12, f14, f7, f20, dyn # perform operation
fmadd.s f12, f14, f7, f20, rdn # perform operation
fmadd.s f12, f14, f7, f20, rmm # perform operation
fmadd.s f12, f14, f7, f20, rne # perform operation
fmadd.s f12, f14, f7, f20, rtz # perform operation
fmadd.s f12, f14, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f7, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x18, 0x546036b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x77941512 # load x3 with value 0x77941512
sw x3, 0(x2) # store 0x77941512 in memory
flw f9, 0(x2) # load 0x77941512 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fmadd.s f18, f5, f9, f3, dyn # perform operation
fmadd.s f18, f5, f9, f3, rdn # perform operation
fmadd.s f18, f5, f9, f3, rmm # perform operation
fmadd.s f18, f5, f9, f3, rne # perform operation
fmadd.s f18, f5, f9, f3, rtz # perform operation
fmadd.s f18, f5, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f5, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f5, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x4, 0x1401a06c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x0d740b33 # load x3 with value 0x0d740b33
sw x3, 0(x2) # store 0x0d740b33 in memory
flw f18, 0(x2) # load 0x0d740b33 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f4, f8, f18, f16, dyn # perform operation
fmadd.s f4, f8, f18, f16, rdn # perform operation
fmadd.s f4, f8, f18, f16, rmm # perform operation
fmadd.s f4, f8, f18, f16, rne # perform operation
fmadd.s f4, f8, f18, f16, rtz # perform operation
fmadd.s f4, f8, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f8, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f8, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x10, 0x0afd7433 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0xf9e7a3b4 # load x3 with value 0xf9e7a3b4
sw x3, 0(x2) # store 0xf9e7a3b4 in memory
flw f28, 0(x2) # load 0xf9e7a3b4 from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmadd.s f10, f11, f28, f5, dyn # perform operation
fmadd.s f10, f11, f28, f5, rdn # perform operation
fmadd.s f10, f11, f28, f5, rmm # perform operation
fmadd.s f10, f11, f28, f5, rne # perform operation
fmadd.s f10, f11, f28, f5, rtz # perform operation
fmadd.s f10, f11, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f28, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x8, 0xbd296d77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0xdeddfa85 # load x3 with value 0xdeddfa85
sw x3, 0(x2) # store 0xdeddfa85 in memory
flw f6, 0(x2) # load 0xdeddfa85 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmadd.s f8, f7, f6, f25, dyn # perform operation
fmadd.s f8, f7, f6, f25, rdn # perform operation
fmadd.s f8, f7, f6, f25, rmm # perform operation
fmadd.s f8, f7, f6, f25, rne # perform operation
fmadd.s f8, f7, f6, f25, rtz # perform operation
fmadd.s f8, f7, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x31, 0xc70a3b01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x7cb44325 # load x3 with value 0x7cb44325
sw x3, 0(x2) # store 0x7cb44325 in memory
flw f28, 0(x2) # load 0x7cb44325 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f31, f17, f28, f4, dyn # perform operation
fmadd.s f31, f17, f28, f4, rdn # perform operation
fmadd.s f31, f17, f28, f4, rmm # perform operation
fmadd.s f31, f17, f28, f4, rne # perform operation
fmadd.s f31, f17, f28, f4, rtz # perform operation
fmadd.s f31, f17, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f17, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f17, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f17, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f17, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f17, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x12, 0x4ae10f69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x8ff53308 # load x3 with value 0x8ff53308
sw x3, 0(x2) # store 0x8ff53308 in memory
flw f25, 0(x2) # load 0x8ff53308 from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f12, f5, f25, f3, dyn # perform operation
fmadd.s f12, f5, f25, f3, rdn # perform operation
fmadd.s f12, f5, f25, f3, rmm # perform operation
fmadd.s f12, f5, f25, f3, rne # perform operation
fmadd.s f12, f5, f25, f3, rtz # perform operation
fmadd.s f12, f5, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x23, 0xbac4605e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x302e52f0 # load x3 with value 0x302e52f0
sw x3, 0(x2) # store 0x302e52f0 in memory
flw f22, 0(x2) # load 0x302e52f0 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fmadd.s f23, f18, f22, f13, dyn # perform operation
fmadd.s f23, f18, f22, f13, rdn # perform operation
fmadd.s f23, f18, f22, f13, rmm # perform operation
fmadd.s f23, f18, f22, f13, rne # perform operation
fmadd.s f23, f18, f22, f13, rtz # perform operation
fmadd.s f23, f18, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f22, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x28, 0x0900784d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xf0144a95 # load x3 with value 0xf0144a95
sw x3, 0(x2) # store 0xf0144a95 in memory
flw f4, 0(x2) # load 0xf0144a95 from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f28, f15, f4, f17, dyn # perform operation
fmadd.s f28, f15, f4, f17, rdn # perform operation
fmadd.s f28, f15, f4, f17, rmm # perform operation
fmadd.s f28, f15, f4, f17, rne # perform operation
fmadd.s f28, f15, f4, f17, rtz # perform operation
fmadd.s f28, f15, f4, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f4, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f4, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f4, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f4, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f4, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x20, 0xe8369b26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xe8ba09d3 # load x3 with value 0xe8ba09d3
sw x3, 0(x2) # store 0xe8ba09d3 in memory
flw f26, 0(x2) # load 0xe8ba09d3 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fmadd.s f20, f3, f26, f4, dyn # perform operation
fmadd.s f20, f3, f26, f4, rdn # perform operation
fmadd.s f20, f3, f26, f4, rmm # perform operation
fmadd.s f20, f3, f26, f4, rne # perform operation
fmadd.s f20, f3, f26, f4, rtz # perform operation
fmadd.s f20, f3, f26, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f26, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f26, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f26, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f26, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f26, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x30, 0xe10935aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x24d4623e # load x3 with value 0x24d4623e
sw x3, 0(x2) # store 0x24d4623e in memory
flw f26, 0(x2) # load 0x24d4623e from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f30, f11, f26, f15, dyn # perform operation
fmadd.s f30, f11, f26, f15, rdn # perform operation
fmadd.s f30, f11, f26, f15, rmm # perform operation
fmadd.s f30, f11, f26, f15, rne # perform operation
fmadd.s f30, f11, f26, f15, rtz # perform operation
fmadd.s f30, f11, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x7, 0xcf962ee8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0x81252edc # load x3 with value 0x81252edc
sw x3, 0(x2) # store 0x81252edc in memory
flw f15, 0(x2) # load 0x81252edc from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
fmadd.s f7, f18, f15, f31, dyn # perform operation
fmadd.s f7, f18, f15, f31, rdn # perform operation
fmadd.s f7, f18, f15, f31, rmm # perform operation
fmadd.s f7, f18, f15, f31, rne # perform operation
fmadd.s f7, f18, f15, f31, rtz # perform operation
fmadd.s f7, f18, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f15, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x24, 0x8b7f11fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x97880a2b # load x3 with value 0x97880a2b
sw x3, 0(x2) # store 0x97880a2b in memory
flw f20, 0(x2) # load 0x97880a2b from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f24, f28, f20, f12, dyn # perform operation
fmadd.s f24, f28, f20, f12, rdn # perform operation
fmadd.s f24, f28, f20, f12, rmm # perform operation
fmadd.s f24, f28, f20, f12, rne # perform operation
fmadd.s f24, f28, f20, f12, rtz # perform operation
fmadd.s f24, f28, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f28, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f28, f20, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x15, 0x14d0f6eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
li x3, 0x2274c0f2 # load x3 with value 0x2274c0f2
sw x3, 0(x2) # store 0x2274c0f2 in memory
flw f23, 0(x2) # load 0x2274c0f2 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmadd.s f15, f11, f23, f25, dyn # perform operation
fmadd.s f15, f11, f23, f25, rdn # perform operation
fmadd.s f15, f11, f23, f25, rmm # perform operation
fmadd.s f15, f11, f23, f25, rne # perform operation
fmadd.s f15, f11, f23, f25, rtz # perform operation
fmadd.s f15, f11, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x28, 0xfd40cd7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xbf83e77a # load x3 with value 0xbf83e77a
sw x3, 0(x2) # store 0xbf83e77a in memory
flw f25, 0(x2) # load 0xbf83e77a from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmadd.s f28, f23, f25, f14, dyn # perform operation
fmadd.s f28, f23, f25, f14, rdn # perform operation
fmadd.s f28, f23, f25, f14, rmm # perform operation
fmadd.s f28, f23, f25, f14, rne # perform operation
fmadd.s f28, f23, f25, f14, rtz # perform operation
fmadd.s f28, f23, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f25, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x23, 0xe765eaad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x74c1eb24 # load x3 with value 0x74c1eb24
sw x3, 0(x2) # store 0x74c1eb24 in memory
flw f24, 0(x2) # load 0x74c1eb24 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmadd.s f23, f21, f24, f6, dyn # perform operation
fmadd.s f23, f21, f24, f6, rdn # perform operation
fmadd.s f23, f21, f24, f6, rmm # perform operation
fmadd.s f23, f21, f24, f6, rne # perform operation
fmadd.s f23, f21, f24, f6, rtz # perform operation
fmadd.s f23, f21, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f21, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f21, f24, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x28, 0xd1d95001 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x0363f2c4 # load x3 with value 0x0363f2c4
sw x3, 0(x2) # store 0x0363f2c4 in memory
flw f18, 0(x2) # load 0x0363f2c4 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f28, f27, f18, f20, dyn # perform operation
fmadd.s f28, f27, f18, f20, rdn # perform operation
fmadd.s f28, f27, f18, f20, rmm # perform operation
fmadd.s f28, f27, f18, f20, rne # perform operation
fmadd.s f28, f27, f18, f20, rtz # perform operation
fmadd.s f28, f27, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x1, 0x2fddf887 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xfa844d93 # load x3 with value 0xfa844d93
sw x3, 0(x2) # store 0xfa844d93 in memory
flw f24, 0(x2) # load 0xfa844d93 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f1, f31, f24, f26, dyn # perform operation
fmadd.s f1, f31, f24, f26, rdn # perform operation
fmadd.s f1, f31, f24, f26, rmm # perform operation
fmadd.s f1, f31, f24, f26, rne # perform operation
fmadd.s f1, f31, f24, f26, rtz # perform operation
fmadd.s f1, f31, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x2, 0x69e33022 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0x96b39cd6 # load x3 with value 0x96b39cd6
sw x3, 0(x2) # store 0x96b39cd6 in memory
flw f30, 0(x2) # load 0x96b39cd6 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmadd.s f2, f31, f30, f19, dyn # perform operation
fmadd.s f2, f31, f30, f19, rdn # perform operation
fmadd.s f2, f31, f30, f19, rmm # perform operation
fmadd.s f2, f31, f30, f19, rne # perform operation
fmadd.s f2, f31, f30, f19, rtz # perform operation
fmadd.s f2, f31, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f30, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x7, 0x61675569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x505ee451 # load x3 with value 0x505ee451
sw x3, 0(x2) # store 0x505ee451 in memory
flw f18, 0(x2) # load 0x505ee451 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmadd.s f7, f19, f18, f5, dyn # perform operation
fmadd.s f7, f19, f18, f5, rdn # perform operation
fmadd.s f7, f19, f18, f5, rmm # perform operation
fmadd.s f7, f19, f18, f5, rne # perform operation
fmadd.s f7, f19, f18, f5, rtz # perform operation
fmadd.s f7, f19, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x20, 0xe646901a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x974b93d3 # load x3 with value 0x974b93d3
sw x3, 0(x2) # store 0x974b93d3 in memory
flw f25, 0(x2) # load 0x974b93d3 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmadd.s f20, f24, f25, f22, dyn # perform operation
fmadd.s f20, f24, f25, f22, rdn # perform operation
fmadd.s f20, f24, f25, f22, rmm # perform operation
fmadd.s f20, f24, f25, f22, rne # perform operation
fmadd.s f20, f24, f25, f22, rtz # perform operation
fmadd.s f20, f24, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f24, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f24, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f24, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f24, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f24, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x23, 0x582dda78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x8e911383 # load x3 with value 0x8e911383
sw x3, 0(x2) # store 0x8e911383 in memory
flw f26, 0(x2) # load 0x8e911383 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f23, f22, f26, f25, dyn # perform operation
fmadd.s f23, f22, f26, f25, rdn # perform operation
fmadd.s f23, f22, f26, f25, rmm # perform operation
fmadd.s f23, f22, f26, f25, rne # perform operation
fmadd.s f23, f22, f26, f25, rtz # perform operation
fmadd.s f23, f22, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x4, 0xf5717350 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xedcae2d9 # load x3 with value 0xedcae2d9
sw x3, 0(x2) # store 0xedcae2d9 in memory
flw f26, 0(x2) # load 0xedcae2d9 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f4, f23, f26, f10, dyn # perform operation
fmadd.s f4, f23, f26, f10, rdn # perform operation
fmadd.s f4, f23, f26, f10, rmm # perform operation
fmadd.s f4, f23, f26, f10, rne # perform operation
fmadd.s f4, f23, f26, f10, rtz # perform operation
fmadd.s f4, f23, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f23, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f23, f26, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x26, 0x00443f89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x610daa68 # load x3 with value 0x610daa68
sw x3, 0(x2) # store 0x610daa68 in memory
flw f23, 0(x2) # load 0x610daa68 from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
fmadd.s f26, f25, f23, f10, dyn # perform operation
fmadd.s f26, f25, f23, f10, rdn # perform operation
fmadd.s f26, f25, f23, f10, rmm # perform operation
fmadd.s f26, f25, f23, f10, rne # perform operation
fmadd.s f26, f25, f23, f10, rtz # perform operation
fmadd.s f26, f25, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f23, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x4, 0xf72cb366 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0xf131cadc # load x3 with value 0xf131cadc
sw x3, 0(x2) # store 0xf131cadc in memory
flw f22, 0(x2) # load 0xf131cadc from memory into f22
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmadd.s f4, f18, f22, f12, dyn # perform operation
fmadd.s f4, f18, f22, f12, rdn # perform operation
fmadd.s f4, f18, f22, f12, rmm # perform operation
fmadd.s f4, f18, f22, f12, rne # perform operation
fmadd.s f4, f18, f22, f12, rtz # perform operation
fmadd.s f4, f18, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f18, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f18, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x12, 0x9a25421e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x740ae473 # load x3 with value 0x740ae473
sw x3, 0(x2) # store 0x740ae473 in memory
flw f3, 0(x2) # load 0x740ae473 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fmadd.s f12, f25, f3, f6, dyn # perform operation
fmadd.s f12, f25, f3, f6, rdn # perform operation
fmadd.s f12, f25, f3, f6, rmm # perform operation
fmadd.s f12, f25, f3, f6, rne # perform operation
fmadd.s f12, f25, f3, f6, rtz # perform operation
fmadd.s f12, f25, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x8, 0x8aa54278 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x23c3c04a # load x3 with value 0x23c3c04a
sw x3, 0(x2) # store 0x23c3c04a in memory
flw f2, 0(x2) # load 0x23c3c04a from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f8, f16, f2, f23, dyn # perform operation
fmadd.s f8, f16, f2, f23, rdn # perform operation
fmadd.s f8, f16, f2, f23, rmm # perform operation
fmadd.s f8, f16, f2, f23, rne # perform operation
fmadd.s f8, f16, f2, f23, rtz # perform operation
fmadd.s f8, f16, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f2, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x1, 0xb3c765cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x05bcd1d0 # load x3 with value 0x05bcd1d0
sw x3, 0(x2) # store 0x05bcd1d0 in memory
flw f17, 0(x2) # load 0x05bcd1d0 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f1, f10, f17, f8, dyn # perform operation
fmadd.s f1, f10, f17, f8, rdn # perform operation
fmadd.s f1, f10, f17, f8, rmm # perform operation
fmadd.s f1, f10, f17, f8, rne # perform operation
fmadd.s f1, f10, f17, f8, rtz # perform operation
fmadd.s f1, f10, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x5, 0xf4198c46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x0ae41a6c # load x3 with value 0x0ae41a6c
sw x3, 0(x2) # store 0x0ae41a6c in memory
flw f3, 0(x2) # load 0x0ae41a6c from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmadd.s f5, f10, f3, f21, dyn # perform operation
fmadd.s f5, f10, f3, f21, rdn # perform operation
fmadd.s f5, f10, f3, f21, rmm # perform operation
fmadd.s f5, f10, f3, f21, rne # perform operation
fmadd.s f5, f10, f3, f21, rtz # perform operation
fmadd.s f5, f10, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x18, 0x79925e1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0x88b4d56d # load x3 with value 0x88b4d56d
sw x3, 0(x2) # store 0x88b4d56d in memory
flw f2, 0(x2) # load 0x88b4d56d from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmadd.s f18, f17, f2, f4, dyn # perform operation
fmadd.s f18, f17, f2, f4, rdn # perform operation
fmadd.s f18, f17, f2, f4, rmm # perform operation
fmadd.s f18, f17, f2, f4, rne # perform operation
fmadd.s f18, f17, f2, f4, rtz # perform operation
fmadd.s f18, f17, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x14, 0x478ffc57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0x67b32747 # load x3 with value 0x67b32747
sw x3, 0(x2) # store 0x67b32747 in memory
flw f20, 0(x2) # load 0x67b32747 from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
fmadd.s f14, f8, f20, f6, dyn # perform operation
fmadd.s f14, f8, f20, f6, rdn # perform operation
fmadd.s f14, f8, f20, f6, rmm # perform operation
fmadd.s f14, f8, f20, f6, rne # perform operation
fmadd.s f14, f8, f20, f6, rtz # perform operation
fmadd.s f14, f8, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x25, 0x5a230efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x87bd3bcf # load x3 with value 0x87bd3bcf
sw x3, 0(x2) # store 0x87bd3bcf in memory
flw f17, 0(x2) # load 0x87bd3bcf from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmadd.s f25, f13, f17, f5, dyn # perform operation
fmadd.s f25, f13, f17, f5, rdn # perform operation
fmadd.s f25, f13, f17, f5, rmm # perform operation
fmadd.s f25, f13, f17, f5, rne # perform operation
fmadd.s f25, f13, f17, f5, rtz # perform operation
fmadd.s f25, f13, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x13, 0x546b8783 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xef524c5a # load x3 with value 0xef524c5a
sw x3, 0(x2) # store 0xef524c5a in memory
flw f28, 0(x2) # load 0xef524c5a from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f4, 0(x2) # load 0x00800000 from memory into f4
fmadd.s f13, f7, f28, f4, dyn # perform operation
fmadd.s f13, f7, f28, f4, rdn # perform operation
fmadd.s f13, f7, f28, f4, rmm # perform operation
fmadd.s f13, f7, f28, f4, rne # perform operation
fmadd.s f13, f7, f28, f4, rtz # perform operation
fmadd.s f13, f7, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x22, 0x7e919dd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x35ea3a34 # load x3 with value 0x35ea3a34
sw x3, 0(x2) # store 0x35ea3a34 in memory
flw f28, 0(x2) # load 0x35ea3a34 from memory into f28
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fmadd.s f22, f5, f28, f19, dyn # perform operation
fmadd.s f22, f5, f28, f19, rdn # perform operation
fmadd.s f22, f5, f28, f19, rmm # perform operation
fmadd.s f22, f5, f28, f19, rne # perform operation
fmadd.s f22, f5, f28, f19, rtz # perform operation
fmadd.s f22, f5, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x25, 0x868ed188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xbb3aa021 # load x3 with value 0xbb3aa021
sw x3, 0(x2) # store 0xbb3aa021 in memory
flw f9, 0(x2) # load 0xbb3aa021 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmadd.s f25, f28, f9, f11, dyn # perform operation
fmadd.s f25, f28, f9, f11, rdn # perform operation
fmadd.s f25, f28, f9, f11, rmm # perform operation
fmadd.s f25, f28, f9, f11, rne # perform operation
fmadd.s f25, f28, f9, f11, rtz # perform operation
fmadd.s f25, f28, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f28, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f28, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x9, 0x6db937d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xe93b49fd # load x3 with value 0xe93b49fd
sw x3, 0(x2) # store 0xe93b49fd in memory
flw f29, 0(x2) # load 0xe93b49fd from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmadd.s f9, f23, f29, f15, dyn # perform operation
fmadd.s f9, f23, f29, f15, rdn # perform operation
fmadd.s f9, f23, f29, f15, rmm # perform operation
fmadd.s f9, f23, f29, f15, rne # perform operation
fmadd.s f9, f23, f29, f15, rtz # perform operation
fmadd.s f9, f23, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f29, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x26, 0x657cf168 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xafa11cbe # load x3 with value 0xafa11cbe
sw x3, 0(x2) # store 0xafa11cbe in memory
flw f9, 0(x2) # load 0xafa11cbe from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fmadd.s f26, f25, f9, f17, dyn # perform operation
fmadd.s f26, f25, f9, f17, rdn # perform operation
fmadd.s f26, f25, f9, f17, rmm # perform operation
fmadd.s f26, f25, f9, f17, rne # perform operation
fmadd.s f26, f25, f9, f17, rtz # perform operation
fmadd.s f26, f25, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x19, 0xef811029 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x60dc9511 # load x3 with value 0x60dc9511
sw x3, 0(x2) # store 0x60dc9511 in memory
flw f7, 0(x2) # load 0x60dc9511 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
fmadd.s f19, f16, f7, f25, dyn # perform operation
fmadd.s f19, f16, f7, f25, rdn # perform operation
fmadd.s f19, f16, f7, f25, rmm # perform operation
fmadd.s f19, f16, f7, f25, rne # perform operation
fmadd.s f19, f16, f7, f25, rtz # perform operation
fmadd.s f19, f16, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f7, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x12, 0x19c57880 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x5179eccb # load x3 with value 0x5179eccb
sw x3, 0(x2) # store 0x5179eccb in memory
flw f19, 0(x2) # load 0x5179eccb from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmadd.s f12, f29, f19, f22, dyn # perform operation
fmadd.s f12, f29, f19, f22, rdn # perform operation
fmadd.s f12, f29, f19, f22, rmm # perform operation
fmadd.s f12, f29, f19, f22, rne # perform operation
fmadd.s f12, f29, f19, f22, rtz # perform operation
fmadd.s f12, f29, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f29, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f29, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f29, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f29, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f29, f19, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x31, 0x4e6af30f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x5446034a # load x3 with value 0x5446034a
sw x3, 0(x2) # store 0x5446034a in memory
flw f20, 0(x2) # load 0x5446034a from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f31, f2, f20, f17, dyn # perform operation
fmadd.s f31, f2, f20, f17, rdn # perform operation
fmadd.s f31, f2, f20, f17, rmm # perform operation
fmadd.s f31, f2, f20, f17, rne # perform operation
fmadd.s f31, f2, f20, f17, rtz # perform operation
fmadd.s f31, f2, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x9, 0xfbd7f907 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0xe171e465 # load x3 with value 0xe171e465
sw x3, 0(x2) # store 0xe171e465 in memory
flw f21, 0(x2) # load 0xe171e465 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fmadd.s f9, f15, f21, f3, dyn # perform operation
fmadd.s f9, f15, f21, f3, rdn # perform operation
fmadd.s f9, f15, f21, f3, rmm # perform operation
fmadd.s f9, f15, f21, f3, rne # perform operation
fmadd.s f9, f15, f21, f3, rtz # perform operation
fmadd.s f9, f15, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x16, 0x6791968e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xe3b55c97 # load x3 with value 0xe3b55c97
sw x3, 0(x2) # store 0xe3b55c97 in memory
flw f12, 0(x2) # load 0xe3b55c97 from memory into f12
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmadd.s f16, f3, f12, f24, dyn # perform operation
fmadd.s f16, f3, f12, f24, rdn # perform operation
fmadd.s f16, f3, f12, f24, rmm # perform operation
fmadd.s f16, f3, f12, f24, rne # perform operation
fmadd.s f16, f3, f12, f24, rtz # perform operation
fmadd.s f16, f3, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x7, 0x15c6a149 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x1634e716 # load x3 with value 0x1634e716
sw x3, 0(x2) # store 0x1634e716 in memory
flw f5, 0(x2) # load 0x1634e716 from memory into f5
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmadd.s f7, f27, f5, f6, dyn # perform operation
fmadd.s f7, f27, f5, f6, rdn # perform operation
fmadd.s f7, f27, f5, f6, rmm # perform operation
fmadd.s f7, f27, f5, f6, rne # perform operation
fmadd.s f7, f27, f5, f6, rtz # perform operation
fmadd.s f7, f27, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f5, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x13, 0xfcec583c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0xbd32ba99 # load x3 with value 0xbd32ba99
sw x3, 0(x2) # store 0xbd32ba99 in memory
flw f3, 0(x2) # load 0xbd32ba99 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f13, f28, f3, f18, dyn # perform operation
fmadd.s f13, f28, f3, f18, rdn # perform operation
fmadd.s f13, f28, f3, f18, rmm # perform operation
fmadd.s f13, f28, f3, f18, rne # perform operation
fmadd.s f13, f28, f3, f18, rtz # perform operation
fmadd.s f13, f28, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f3, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x25, 0x235728ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
li x3, 0xe033d7f1 # load x3 with value 0xe033d7f1
sw x3, 0(x2) # store 0xe033d7f1 in memory
flw f12, 0(x2) # load 0xe033d7f1 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
fmadd.s f25, f23, f12, f16, dyn # perform operation
fmadd.s f25, f23, f12, f16, rdn # perform operation
fmadd.s f25, f23, f12, f16, rmm # perform operation
fmadd.s f25, f23, f12, f16, rne # perform operation
fmadd.s f25, f23, f12, f16, rtz # perform operation
fmadd.s f25, f23, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f12, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x5, 0x66f725a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x7e5a3b28 # load x3 with value 0x7e5a3b28
sw x3, 0(x2) # store 0x7e5a3b28 in memory
flw f18, 0(x2) # load 0x7e5a3b28 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f5, f29, f18, f12, dyn # perform operation
fmadd.s f5, f29, f18, f12, rdn # perform operation
fmadd.s f5, f29, f18, f12, rmm # perform operation
fmadd.s f5, f29, f18, f12, rne # perform operation
fmadd.s f5, f29, f18, f12, rtz # perform operation
fmadd.s f5, f29, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f18, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x31, 0xeed0bb15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xf9b8d780 # load x3 with value 0xf9b8d780
sw x3, 0(x2) # store 0xf9b8d780 in memory
flw f17, 0(x2) # load 0xf9b8d780 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmadd.s f31, f14, f17, f18, dyn # perform operation
fmadd.s f31, f14, f17, f18, rdn # perform operation
fmadd.s f31, f14, f17, f18, rmm # perform operation
fmadd.s f31, f14, f17, f18, rne # perform operation
fmadd.s f31, f14, f17, f18, rtz # perform operation
fmadd.s f31, f14, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f14, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f14, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x10, 0xb14c755e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xea2dd74f # load x3 with value 0xea2dd74f
sw x3, 0(x2) # store 0xea2dd74f in memory
flw f1, 0(x2) # load 0xea2dd74f from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmadd.s f10, f16, f1, f6, dyn # perform operation
fmadd.s f10, f16, f1, f6, rdn # perform operation
fmadd.s f10, f16, f1, f6, rmm # perform operation
fmadd.s f10, f16, f1, f6, rne # perform operation
fmadd.s f10, f16, f1, f6, rtz # perform operation
fmadd.s f10, f16, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x21, 0x168002cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xafd1ade1 # load x3 with value 0xafd1ade1
sw x3, 0(x2) # store 0xafd1ade1 in memory
flw f27, 0(x2) # load 0xafd1ade1 from memory into f27
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f21, f14, f27, f31, dyn # perform operation
fmadd.s f21, f14, f27, f31, rdn # perform operation
fmadd.s f21, f14, f27, f31, rmm # perform operation
fmadd.s f21, f14, f27, f31, rne # perform operation
fmadd.s f21, f14, f27, f31, rtz # perform operation
fmadd.s f21, f14, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x7, 0xcace06b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0xc3bbf0bc # load x3 with value 0xc3bbf0bc
sw x3, 0(x2) # store 0xc3bbf0bc in memory
flw f10, 0(x2) # load 0xc3bbf0bc from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fmadd.s f7, f26, f10, f4, dyn # perform operation
fmadd.s f7, f26, f10, f4, rdn # perform operation
fmadd.s f7, f26, f10, f4, rmm # perform operation
fmadd.s f7, f26, f10, f4, rne # perform operation
fmadd.s f7, f26, f10, f4, rtz # perform operation
fmadd.s f7, f26, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x28, 0x8c3969d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x2075ff07 # load x3 with value 0x2075ff07
sw x3, 0(x2) # store 0x2075ff07 in memory
flw f4, 0(x2) # load 0x2075ff07 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmadd.s f28, f3, f4, f23, dyn # perform operation
fmadd.s f28, f3, f4, f23, rdn # perform operation
fmadd.s f28, f3, f4, f23, rmm # perform operation
fmadd.s f28, f3, f4, f23, rne # perform operation
fmadd.s f28, f3, f4, f23, rtz # perform operation
fmadd.s f28, f3, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x11, 0x87b18fe2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x1b727780 # load x3 with value 0x1b727780
sw x3, 0(x2) # store 0x1b727780 in memory
flw f22, 0(x2) # load 0x1b727780 from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmadd.s f11, f19, f22, f30, dyn # perform operation
fmadd.s f11, f19, f22, f30, rdn # perform operation
fmadd.s f11, f19, f22, f30, rmm # perform operation
fmadd.s f11, f19, f22, f30, rne # perform operation
fmadd.s f11, f19, f22, f30, rtz # perform operation
fmadd.s f11, f19, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f22, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x2, 0xe346ce09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x2b039879 # load x3 with value 0x2b039879
sw x3, 0(x2) # store 0x2b039879 in memory
flw f14, 0(x2) # load 0x2b039879 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmadd.s f2, f15, f14, f31, dyn # perform operation
fmadd.s f2, f15, f14, f31, rdn # perform operation
fmadd.s f2, f15, f14, f31, rmm # perform operation
fmadd.s f2, f15, f14, f31, rne # perform operation
fmadd.s f2, f15, f14, f31, rtz # perform operation
fmadd.s f2, f15, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x20, 0x46503bce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xbe57c63b # load x3 with value 0xbe57c63b
sw x3, 0(x2) # store 0xbe57c63b in memory
flw f26, 0(x2) # load 0xbe57c63b from memory into f26
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmadd.s f20, f23, f26, f31, dyn # perform operation
fmadd.s f20, f23, f26, f31, rdn # perform operation
fmadd.s f20, f23, f26, f31, rmm # perform operation
fmadd.s f20, f23, f26, f31, rne # perform operation
fmadd.s f20, f23, f26, f31, rtz # perform operation
fmadd.s f20, f23, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x24, 0x46298a95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xc948f2df # load x3 with value 0xc948f2df
sw x3, 0(x2) # store 0xc948f2df in memory
flw f28, 0(x2) # load 0xc948f2df from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fmadd.s f24, f8, f28, f13, dyn # perform operation
fmadd.s f24, f8, f28, f13, rdn # perform operation
fmadd.s f24, f8, f28, f13, rmm # perform operation
fmadd.s f24, f8, f28, f13, rne # perform operation
fmadd.s f24, f8, f28, f13, rtz # perform operation
fmadd.s f24, f8, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x15, 0x653b6ad2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x2bf66c9f # load x3 with value 0x2bf66c9f
sw x3, 0(x2) # store 0x2bf66c9f in memory
flw f13, 0(x2) # load 0x2bf66c9f from memory into f13
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f15, f23, f13, f6, dyn # perform operation
fmadd.s f15, f23, f13, f6, rdn # perform operation
fmadd.s f15, f23, f13, f6, rmm # perform operation
fmadd.s f15, f23, f13, f6, rne # perform operation
fmadd.s f15, f23, f13, f6, rtz # perform operation
fmadd.s f15, f23, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x17, 0x7a5b9a18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x30c16860 # load x3 with value 0x30c16860
sw x3, 0(x2) # store 0x30c16860 in memory
flw f24, 0(x2) # load 0x30c16860 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f17, f1, f24, f3, dyn # perform operation
fmadd.s f17, f1, f24, f3, rdn # perform operation
fmadd.s f17, f1, f24, f3, rmm # perform operation
fmadd.s f17, f1, f24, f3, rne # perform operation
fmadd.s f17, f1, f24, f3, rtz # perform operation
fmadd.s f17, f1, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x7, 0xa7f23c38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x270bd703 # load x3 with value 0x270bd703
sw x3, 0(x2) # store 0x270bd703 in memory
flw f22, 0(x2) # load 0x270bd703 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmadd.s f7, f21, f22, f15, dyn # perform operation
fmadd.s f7, f21, f22, f15, rdn # perform operation
fmadd.s f7, f21, f22, f15, rmm # perform operation
fmadd.s f7, f21, f22, f15, rne # perform operation
fmadd.s f7, f21, f22, f15, rtz # perform operation
fmadd.s f7, f21, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f22, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x26, 0xd9d10bd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xbfd6bddc # load x3 with value 0xbfd6bddc
sw x3, 0(x2) # store 0xbfd6bddc in memory
flw f6, 0(x2) # load 0xbfd6bddc from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f26, f5, f6, f7, dyn # perform operation
fmadd.s f26, f5, f6, f7, rdn # perform operation
fmadd.s f26, f5, f6, f7, rmm # perform operation
fmadd.s f26, f5, f6, f7, rne # perform operation
fmadd.s f26, f5, f6, f7, rtz # perform operation
fmadd.s f26, f5, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f6, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x6, 0xff8fee91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x7d769a05 # load x3 with value 0x7d769a05
sw x3, 0(x2) # store 0x7d769a05 in memory
flw f31, 0(x2) # load 0x7d769a05 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f6, f30, f31, f1, dyn # perform operation
fmadd.s f6, f30, f31, f1, rdn # perform operation
fmadd.s f6, f30, f31, f1, rmm # perform operation
fmadd.s f6, f30, f31, f1, rne # perform operation
fmadd.s f6, f30, f31, f1, rtz # perform operation
fmadd.s f6, f30, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f30, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f30, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f30, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f30, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f30, f31, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x6, 0xa287b039 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x384c07e8 # load x3 with value 0x384c07e8
sw x3, 0(x2) # store 0x384c07e8 in memory
flw f28, 0(x2) # load 0x384c07e8 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
fmadd.s f6, f12, f28, f8, dyn # perform operation
fmadd.s f6, f12, f28, f8, rdn # perform operation
fmadd.s f6, f12, f28, f8, rmm # perform operation
fmadd.s f6, f12, f28, f8, rne # perform operation
fmadd.s f6, f12, f28, f8, rtz # perform operation
fmadd.s f6, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f28, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x2, 0x3f0cc7ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x451cf02f # load x3 with value 0x451cf02f
sw x3, 0(x2) # store 0x451cf02f in memory
flw f24, 0(x2) # load 0x451cf02f from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f2, f15, f24, f7, dyn # perform operation
fmadd.s f2, f15, f24, f7, rdn # perform operation
fmadd.s f2, f15, f24, f7, rmm # perform operation
fmadd.s f2, f15, f24, f7, rne # perform operation
fmadd.s f2, f15, f24, f7, rtz # perform operation
fmadd.s f2, f15, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f24, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x14, 0x391df77b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x01f6e148 # load x3 with value 0x01f6e148
sw x3, 0(x2) # store 0x01f6e148 in memory
flw f24, 0(x2) # load 0x01f6e148 from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f14, f4, f24, f2, dyn # perform operation
fmadd.s f14, f4, f24, f2, rdn # perform operation
fmadd.s f14, f4, f24, f2, rmm # perform operation
fmadd.s f14, f4, f24, f2, rne # perform operation
fmadd.s f14, f4, f24, f2, rtz # perform operation
fmadd.s f14, f4, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f4, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f4, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f4, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f4, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f4, f24, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x6, 0x48028112 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x00080598 # load x3 with value 0x00080598
sw x3, 0(x2) # store 0x00080598 in memory
flw f18, 0(x2) # load 0x00080598 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmadd.s f6, f1, f18, f21, dyn # perform operation
fmadd.s f6, f1, f18, f21, rdn # perform operation
fmadd.s f6, f1, f18, f21, rmm # perform operation
fmadd.s f6, f1, f18, f21, rne # perform operation
fmadd.s f6, f1, f18, f21, rtz # perform operation
fmadd.s f6, f1, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x15, 0x0d2f653e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0x3d7718a8 # load x3 with value 0x3d7718a8
sw x3, 0(x2) # store 0x3d7718a8 in memory
flw f20, 0(x2) # load 0x3d7718a8 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmadd.s f15, f22, f20, f14, dyn # perform operation
fmadd.s f15, f22, f20, f14, rdn # perform operation
fmadd.s f15, f22, f20, f14, rmm # perform operation
fmadd.s f15, f22, f20, f14, rne # perform operation
fmadd.s f15, f22, f20, f14, rtz # perform operation
fmadd.s f15, f22, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f20, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x10, 0x7602360d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0xa98629d7 # load x3 with value 0xa98629d7
sw x3, 0(x2) # store 0xa98629d7 in memory
flw f22, 0(x2) # load 0xa98629d7 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f10, f12, f22, f17, dyn # perform operation
fmadd.s f10, f12, f22, f17, rdn # perform operation
fmadd.s f10, f12, f22, f17, rmm # perform operation
fmadd.s f10, f12, f22, f17, rne # perform operation
fmadd.s f10, f12, f22, f17, rtz # perform operation
fmadd.s f10, f12, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x26, 0xee807733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x1ff155b8 # load x3 with value 0x1ff155b8
sw x3, 0(x2) # store 0x1ff155b8 in memory
flw f13, 0(x2) # load 0x1ff155b8 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmadd.s f26, f12, f13, f4, dyn # perform operation
fmadd.s f26, f12, f13, f4, rdn # perform operation
fmadd.s f26, f12, f13, f4, rmm # perform operation
fmadd.s f26, f12, f13, f4, rne # perform operation
fmadd.s f26, f12, f13, f4, rtz # perform operation
fmadd.s f26, f12, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f12, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f12, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x24, 0x44f6680e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x94abe198 # load x3 with value 0x94abe198
sw x3, 0(x2) # store 0x94abe198 in memory
flw f7, 0(x2) # load 0x94abe198 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmadd.s f24, f25, f7, f18, dyn # perform operation
fmadd.s f24, f25, f7, f18, rdn # perform operation
fmadd.s f24, f25, f7, f18, rmm # perform operation
fmadd.s f24, f25, f7, f18, rne # perform operation
fmadd.s f24, f25, f7, f18, rtz # perform operation
fmadd.s f24, f25, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f25, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f25, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x13, 0xfeea4a2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x16387d51 # load x3 with value 0x16387d51
sw x3, 0(x2) # store 0x16387d51 in memory
flw f21, 0(x2) # load 0x16387d51 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f13, f10, f21, f20, dyn # perform operation
fmadd.s f13, f10, f21, f20, rdn # perform operation
fmadd.s f13, f10, f21, f20, rmm # perform operation
fmadd.s f13, f10, f21, f20, rne # perform operation
fmadd.s f13, f10, f21, f20, rtz # perform operation
fmadd.s f13, f10, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f21, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x22, 0x7b577675 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x67659657 # load x3 with value 0x67659657
sw x3, 0(x2) # store 0x67659657 in memory
flw f31, 0(x2) # load 0x67659657 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmadd.s f22, f1, f31, f6, dyn # perform operation
fmadd.s f22, f1, f31, f6, rdn # perform operation
fmadd.s f22, f1, f31, f6, rmm # perform operation
fmadd.s f22, f1, f31, f6, rne # perform operation
fmadd.s f22, f1, f31, f6, rtz # perform operation
fmadd.s f22, f1, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f31, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x9, 0x7aff01d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x25f8f4fe # load x3 with value 0x25f8f4fe
sw x3, 0(x2) # store 0x25f8f4fe in memory
flw f22, 0(x2) # load 0x25f8f4fe from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f9, f23, f22, f8, dyn # perform operation
fmadd.s f9, f23, f22, f8, rdn # perform operation
fmadd.s f9, f23, f22, f8, rmm # perform operation
fmadd.s f9, f23, f22, f8, rne # perform operation
fmadd.s f9, f23, f22, f8, rtz # perform operation
fmadd.s f9, f23, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f22, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x19, 0xbba96f4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x577315b4 # load x3 with value 0x577315b4
sw x3, 0(x2) # store 0x577315b4 in memory
flw f26, 0(x2) # load 0x577315b4 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
fmadd.s f19, f27, f26, f17, dyn # perform operation
fmadd.s f19, f27, f26, f17, rdn # perform operation
fmadd.s f19, f27, f26, f17, rmm # perform operation
fmadd.s f19, f27, f26, f17, rne # perform operation
fmadd.s f19, f27, f26, f17, rtz # perform operation
fmadd.s f19, f27, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x18, 0x24476033 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0x8adce92f # load x3 with value 0x8adce92f
sw x3, 0(x2) # store 0x8adce92f in memory
flw f16, 0(x2) # load 0x8adce92f from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmadd.s f18, f4, f16, f3, dyn # perform operation
fmadd.s f18, f4, f16, f3, rdn # perform operation
fmadd.s f18, f4, f16, f3, rmm # perform operation
fmadd.s f18, f4, f16, f3, rne # perform operation
fmadd.s f18, f4, f16, f3, rtz # perform operation
fmadd.s f18, f4, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f4, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f4, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f4, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f4, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f4, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x27, 0x9460c817 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0xd3a7b6a0 # load x3 with value 0xd3a7b6a0
sw x3, 0(x2) # store 0xd3a7b6a0 in memory
flw f7, 0(x2) # load 0xd3a7b6a0 from memory into f7
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmadd.s f27, f26, f7, f6, dyn # perform operation
fmadd.s f27, f26, f7, f6, rdn # perform operation
fmadd.s f27, f26, f7, f6, rmm # perform operation
fmadd.s f27, f26, f7, f6, rne # perform operation
fmadd.s f27, f26, f7, f6, rtz # perform operation
fmadd.s f27, f26, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x30, 0x7ef7de9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x738b0886 # load x3 with value 0x738b0886
sw x3, 0(x2) # store 0x738b0886 in memory
flw f25, 0(x2) # load 0x738b0886 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fmadd.s f30, f14, f25, f26, dyn # perform operation
fmadd.s f30, f14, f25, f26, rdn # perform operation
fmadd.s f30, f14, f25, f26, rmm # perform operation
fmadd.s f30, f14, f25, f26, rne # perform operation
fmadd.s f30, f14, f25, f26, rtz # perform operation
fmadd.s f30, f14, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f14, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f14, f25, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x4, 0x05035e10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x2a37cf8e # load x3 with value 0x2a37cf8e
sw x3, 0(x2) # store 0x2a37cf8e in memory
flw f18, 0(x2) # load 0x2a37cf8e from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmadd.s f4, f28, f18, f26, dyn # perform operation
fmadd.s f4, f28, f18, f26, rdn # perform operation
fmadd.s f4, f28, f18, f26, rmm # perform operation
fmadd.s f4, f28, f18, f26, rne # perform operation
fmadd.s f4, f28, f18, f26, rtz # perform operation
fmadd.s f4, f28, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f28, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f28, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x24, 0xab75052a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
li x3, 0xe3a372be # load x3 with value 0xe3a372be
sw x3, 0(x2) # store 0xe3a372be in memory
flw f19, 0(x2) # load 0xe3a372be from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f24, f23, f19, f6, dyn # perform operation
fmadd.s f24, f23, f19, f6, rdn # perform operation
fmadd.s f24, f23, f19, f6, rmm # perform operation
fmadd.s f24, f23, f19, f6, rne # perform operation
fmadd.s f24, f23, f19, f6, rtz # perform operation
fmadd.s f24, f23, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x13, 0x78ae4f2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xa939dab5 # load x3 with value 0xa939dab5
sw x3, 0(x2) # store 0xa939dab5 in memory
flw f2, 0(x2) # load 0xa939dab5 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmadd.s f13, f11, f2, f5, dyn # perform operation
fmadd.s f13, f11, f2, f5, rdn # perform operation
fmadd.s f13, f11, f2, f5, rmm # perform operation
fmadd.s f13, f11, f2, f5, rne # perform operation
fmadd.s f13, f11, f2, f5, rtz # perform operation
fmadd.s f13, f11, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x24, 0xa6c08af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0xc075d4d5 # load x3 with value 0xc075d4d5
sw x3, 0(x2) # store 0xc075d4d5 in memory
flw f13, 0(x2) # load 0xc075d4d5 from memory into f13
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fmadd.s f24, f11, f13, f15, dyn # perform operation
fmadd.s f24, f11, f13, f15, rdn # perform operation
fmadd.s f24, f11, f13, f15, rmm # perform operation
fmadd.s f24, f11, f13, f15, rne # perform operation
fmadd.s f24, f11, f13, f15, rtz # perform operation
fmadd.s f24, f11, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f13, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x1, 0xc110d6a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x3f3c25fa # load x3 with value 0x3f3c25fa
sw x3, 0(x2) # store 0x3f3c25fa in memory
flw f25, 0(x2) # load 0x3f3c25fa from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f1, f18, f25, f15, dyn # perform operation
fmadd.s f1, f18, f25, f15, rdn # perform operation
fmadd.s f1, f18, f25, f15, rmm # perform operation
fmadd.s f1, f18, f25, f15, rne # perform operation
fmadd.s f1, f18, f25, f15, rtz # perform operation
fmadd.s f1, f18, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x23, 0x6f668ce5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xde174e18 # load x3 with value 0xde174e18
sw x3, 0(x2) # store 0xde174e18 in memory
flw f26, 0(x2) # load 0xde174e18 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmadd.s f23, f15, f26, f31, dyn # perform operation
fmadd.s f23, f15, f26, f31, rdn # perform operation
fmadd.s f23, f15, f26, f31, rmm # perform operation
fmadd.s f23, f15, f26, f31, rne # perform operation
fmadd.s f23, f15, f26, f31, rtz # perform operation
fmadd.s f23, f15, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f15, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f15, f26, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x18, 0x01e324fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0x1b6f89e9 # load x3 with value 0x1b6f89e9
sw x3, 0(x2) # store 0x1b6f89e9 in memory
flw f19, 0(x2) # load 0x1b6f89e9 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fmadd.s f18, f5, f19, f14, dyn # perform operation
fmadd.s f18, f5, f19, f14, rdn # perform operation
fmadd.s f18, f5, f19, f14, rmm # perform operation
fmadd.s f18, f5, f19, f14, rne # perform operation
fmadd.s f18, f5, f19, f14, rtz # perform operation
fmadd.s f18, f5, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f5, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x22, 0x14217bd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x26e19a77 # load x3 with value 0x26e19a77
sw x3, 0(x2) # store 0x26e19a77 in memory
flw f21, 0(x2) # load 0x26e19a77 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
fmadd.s f22, f28, f21, f17, dyn # perform operation
fmadd.s f22, f28, f21, f17, rdn # perform operation
fmadd.s f22, f28, f21, f17, rmm # perform operation
fmadd.s f22, f28, f21, f17, rne # perform operation
fmadd.s f22, f28, f21, f17, rtz # perform operation
fmadd.s f22, f28, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f28, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f28, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f28, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f28, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f28, f21, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x21, 0x4700b8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x07cb043a # load x3 with value 0x07cb043a
sw x3, 0(x2) # store 0x07cb043a in memory
flw f1, 0(x2) # load 0x07cb043a from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmadd.s f21, f8, f1, f9, dyn # perform operation
fmadd.s f21, f8, f1, f9, rdn # perform operation
fmadd.s f21, f8, f1, f9, rmm # perform operation
fmadd.s f21, f8, f1, f9, rne # perform operation
fmadd.s f21, f8, f1, f9, rtz # perform operation
fmadd.s f21, f8, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f1, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x12, 0xd10c69b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x6badbab9 # load x3 with value 0x6badbab9
sw x3, 0(x2) # store 0x6badbab9 in memory
flw f31, 0(x2) # load 0x6badbab9 from memory into f31
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmadd.s f12, f9, f31, f27, dyn # perform operation
fmadd.s f12, f9, f31, f27, rdn # perform operation
fmadd.s f12, f9, f31, f27, rmm # perform operation
fmadd.s f12, f9, f31, f27, rne # perform operation
fmadd.s f12, f9, f31, f27, rtz # perform operation
fmadd.s f12, f9, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f9, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x5, 0x910149e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x791ce731 # load x3 with value 0x791ce731
sw x3, 0(x2) # store 0x791ce731 in memory
flw f22, 0(x2) # load 0x791ce731 from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
fmadd.s f5, f7, f22, f10, dyn # perform operation
fmadd.s f5, f7, f22, f10, rdn # perform operation
fmadd.s f5, f7, f22, f10, rmm # perform operation
fmadd.s f5, f7, f22, f10, rne # perform operation
fmadd.s f5, f7, f22, f10, rtz # perform operation
fmadd.s f5, f7, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f22, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x15, 0xb4474682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x48310931 # load x3 with value 0x48310931
sw x3, 0(x2) # store 0x48310931 in memory
flw f12, 0(x2) # load 0x48310931 from memory into f12
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
fmadd.s f15, f16, f12, f2, dyn # perform operation
fmadd.s f15, f16, f12, f2, rdn # perform operation
fmadd.s f15, f16, f12, f2, rmm # perform operation
fmadd.s f15, f16, f12, f2, rne # perform operation
fmadd.s f15, f16, f12, f2, rtz # perform operation
fmadd.s f15, f16, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f12, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x1, 0x2566c23b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xfa9405a9 # load x3 with value 0xfa9405a9
sw x3, 0(x2) # store 0xfa9405a9 in memory
flw f5, 0(x2) # load 0xfa9405a9 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
fmadd.s f1, f22, f5, f3, dyn # perform operation
fmadd.s f1, f22, f5, f3, rdn # perform operation
fmadd.s f1, f22, f5, f3, rmm # perform operation
fmadd.s f1, f22, f5, f3, rne # perform operation
fmadd.s f1, f22, f5, f3, rtz # perform operation
fmadd.s f1, f22, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x3, 0x4126f6f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x9db8ddb0 # load x3 with value 0x9db8ddb0
sw x3, 0(x2) # store 0x9db8ddb0 in memory
flw f29, 0(x2) # load 0x9db8ddb0 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
fmadd.s f3, f27, f29, f4, dyn # perform operation
fmadd.s f3, f27, f29, f4, rdn # perform operation
fmadd.s f3, f27, f29, f4, rmm # perform operation
fmadd.s f3, f27, f29, f4, rne # perform operation
fmadd.s f3, f27, f29, f4, rtz # perform operation
fmadd.s f3, f27, f29, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f27, f29, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f27, f29, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f27, f29, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f27, f29, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f27, f29, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x9, 0xc8de104a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xc68099ea # load x3 with value 0xc68099ea
sw x3, 0(x2) # store 0xc68099ea in memory
flw f13, 0(x2) # load 0xc68099ea from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f9, f19, f13, f14, dyn # perform operation
fmadd.s f9, f19, f13, f14, rdn # perform operation
fmadd.s f9, f19, f13, f14, rmm # perform operation
fmadd.s f9, f19, f13, f14, rne # perform operation
fmadd.s f9, f19, f13, f14, rtz # perform operation
fmadd.s f9, f19, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f19, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f19, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x28, 0x1d5332c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x39affee5 # load x3 with value 0x39affee5
sw x3, 0(x2) # store 0x39affee5 in memory
flw f14, 0(x2) # load 0x39affee5 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f28, f27, f14, f5, dyn # perform operation
fmadd.s f28, f27, f14, f5, rdn # perform operation
fmadd.s f28, f27, f14, f5, rmm # perform operation
fmadd.s f28, f27, f14, f5, rne # perform operation
fmadd.s f28, f27, f14, f5, rtz # perform operation
fmadd.s f28, f27, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x26, 0xa1af1471 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x3444537f # load x3 with value 0x3444537f
sw x3, 0(x2) # store 0x3444537f in memory
flw f19, 0(x2) # load 0x3444537f from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
fmadd.s f26, f9, f19, f13, dyn # perform operation
fmadd.s f26, f9, f19, f13, rdn # perform operation
fmadd.s f26, f9, f19, f13, rmm # perform operation
fmadd.s f26, f9, f19, f13, rne # perform operation
fmadd.s f26, f9, f19, f13, rtz # perform operation
fmadd.s f26, f9, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f9, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f9, f19, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x16, 0x67c1030e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x86aa1531 # load x3 with value 0x86aa1531
sw x3, 0(x2) # store 0x86aa1531 in memory
flw f7, 0(x2) # load 0x86aa1531 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmadd.s f16, f17, f7, f12, dyn # perform operation
fmadd.s f16, f17, f7, f12, rdn # perform operation
fmadd.s f16, f17, f7, f12, rmm # perform operation
fmadd.s f16, f17, f7, f12, rne # perform operation
fmadd.s f16, f17, f7, f12, rtz # perform operation
fmadd.s f16, f17, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f7, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x8, 0xe3244253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x066f1d51 # load x3 with value 0x066f1d51
sw x3, 0(x2) # store 0x066f1d51 in memory
flw f2, 0(x2) # load 0x066f1d51 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
fmadd.s f8, f31, f2, f20, dyn # perform operation
fmadd.s f8, f31, f2, f20, rdn # perform operation
fmadd.s f8, f31, f2, f20, rmm # perform operation
fmadd.s f8, f31, f2, f20, rne # perform operation
fmadd.s f8, f31, f2, f20, rtz # perform operation
fmadd.s f8, f31, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x23, 0xdae98bd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x114b8913 # load x3 with value 0x114b8913
sw x3, 0(x2) # store 0x114b8913 in memory
flw f6, 0(x2) # load 0x114b8913 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmadd.s f23, f16, f6, f22, dyn # perform operation
fmadd.s f23, f16, f6, f22, rdn # perform operation
fmadd.s f23, f16, f6, f22, rmm # perform operation
fmadd.s f23, f16, f6, f22, rne # perform operation
fmadd.s f23, f16, f6, f22, rtz # perform operation
fmadd.s f23, f16, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f6, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x10, 0xa067f5d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x080c31db # load x3 with value 0x080c31db
sw x3, 0(x2) # store 0x080c31db in memory
flw f20, 0(x2) # load 0x080c31db from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f10, f13, f20, f1, dyn # perform operation
fmadd.s f10, f13, f20, f1, rdn # perform operation
fmadd.s f10, f13, f20, f1, rmm # perform operation
fmadd.s f10, f13, f20, f1, rne # perform operation
fmadd.s f10, f13, f20, f1, rtz # perform operation
fmadd.s f10, f13, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x4, 0x7e967ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x4b5353fd # load x3 with value 0x4b5353fd
sw x3, 0(x2) # store 0x4b5353fd in memory
flw f15, 0(x2) # load 0x4b5353fd from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
fmadd.s f4, f28, f15, f22, dyn # perform operation
fmadd.s f4, f28, f15, f22, rdn # perform operation
fmadd.s f4, f28, f15, f22, rmm # perform operation
fmadd.s f4, f28, f15, f22, rne # perform operation
fmadd.s f4, f28, f15, f22, rtz # perform operation
fmadd.s f4, f28, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f28, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f28, f15, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x20, 0x13faa167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x83883ca6 # load x3 with value 0x83883ca6
sw x3, 0(x2) # store 0x83883ca6 in memory
flw f4, 0(x2) # load 0x83883ca6 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
fmadd.s f20, f17, f4, f31, dyn # perform operation
fmadd.s f20, f17, f4, f31, rdn # perform operation
fmadd.s f20, f17, f4, f31, rmm # perform operation
fmadd.s f20, f17, f4, f31, rne # perform operation
fmadd.s f20, f17, f4, f31, rtz # perform operation
fmadd.s f20, f17, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f17, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f17, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f17, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f17, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f17, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x15, 0xb418f6a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x17755169 # load x3 with value 0x17755169
sw x3, 0(x2) # store 0x17755169 in memory
flw f10, 0(x2) # load 0x17755169 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmadd.s f15, f14, f10, f31, dyn # perform operation
fmadd.s f15, f14, f10, f31, rdn # perform operation
fmadd.s f15, f14, f10, f31, rmm # perform operation
fmadd.s f15, f14, f10, f31, rne # perform operation
fmadd.s f15, f14, f10, f31, rtz # perform operation
fmadd.s f15, f14, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x29, 0x66e1b164 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x7d8c600e # load x3 with value 0x7d8c600e
sw x3, 0(x2) # store 0x7d8c600e in memory
flw f6, 0(x2) # load 0x7d8c600e from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmadd.s f29, f7, f6, f30, dyn # perform operation
fmadd.s f29, f7, f6, f30, rdn # perform operation
fmadd.s f29, f7, f6, f30, rmm # perform operation
fmadd.s f29, f7, f6, f30, rne # perform operation
fmadd.s f29, f7, f6, f30, rtz # perform operation
fmadd.s f29, f7, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f6, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x14, 0xf4afc0ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x606089bf # load x3 with value 0x606089bf
sw x3, 0(x2) # store 0x606089bf in memory
flw f18, 0(x2) # load 0x606089bf from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmadd.s f14, f17, f18, f30, dyn # perform operation
fmadd.s f14, f17, f18, f30, rdn # perform operation
fmadd.s f14, f17, f18, f30, rmm # perform operation
fmadd.s f14, f17, f18, f30, rne # perform operation
fmadd.s f14, f17, f18, f30, rtz # perform operation
fmadd.s f14, f17, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x18, 0x9a20add9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0x0315a29d # load x3 with value 0x0315a29d
sw x3, 0(x2) # store 0x0315a29d in memory
flw f31, 0(x2) # load 0x0315a29d from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
fmadd.s f18, f20, f31, f16, dyn # perform operation
fmadd.s f18, f20, f31, f16, rdn # perform operation
fmadd.s f18, f20, f31, f16, rmm # perform operation
fmadd.s f18, f20, f31, f16, rne # perform operation
fmadd.s f18, f20, f31, f16, rtz # perform operation
fmadd.s f18, f20, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f31, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x6, 0x3ef8a733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x9996762d # load x3 with value 0x9996762d
sw x3, 0(x2) # store 0x9996762d in memory
flw f28, 0(x2) # load 0x9996762d from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmadd.s f6, f22, f28, f26, dyn # perform operation
fmadd.s f6, f22, f28, f26, rdn # perform operation
fmadd.s f6, f22, f28, f26, rmm # perform operation
fmadd.s f6, f22, f28, f26, rne # perform operation
fmadd.s f6, f22, f28, f26, rtz # perform operation
fmadd.s f6, f22, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f22, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f22, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f22, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f22, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f22, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x16, 0x601a133e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0xb21880e6 # load x3 with value 0xb21880e6
sw x3, 0(x2) # store 0xb21880e6 in memory
flw f9, 0(x2) # load 0xb21880e6 from memory into f9
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f16, f10, f9, f7, dyn # perform operation
fmadd.s f16, f10, f9, f7, rdn # perform operation
fmadd.s f16, f10, f9, f7, rmm # perform operation
fmadd.s f16, f10, f9, f7, rne # perform operation
fmadd.s f16, f10, f9, f7, rtz # perform operation
fmadd.s f16, f10, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f10, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f10, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f10, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f10, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f10, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x5, 0x08cb42d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x080cdd4d # load x3 with value 0x080cdd4d
sw x3, 0(x2) # store 0x080cdd4d in memory
flw f25, 0(x2) # load 0x080cdd4d from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f5, f24, f25, f3, dyn # perform operation
fmadd.s f5, f24, f25, f3, rdn # perform operation
fmadd.s f5, f24, f25, f3, rmm # perform operation
fmadd.s f5, f24, f25, f3, rne # perform operation
fmadd.s f5, f24, f25, f3, rtz # perform operation
fmadd.s f5, f24, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x27, 0xfdb57552 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xc1082a9f # load x3 with value 0xc1082a9f
sw x3, 0(x2) # store 0xc1082a9f in memory
flw f23, 0(x2) # load 0xc1082a9f from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmadd.s f27, f17, f23, f5, dyn # perform operation
fmadd.s f27, f17, f23, f5, rdn # perform operation
fmadd.s f27, f17, f23, f5, rmm # perform operation
fmadd.s f27, f17, f23, f5, rne # perform operation
fmadd.s f27, f17, f23, f5, rtz # perform operation
fmadd.s f27, f17, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f23, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x2, 0x414d038e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xf8f6105c # load x3 with value 0xf8f6105c
sw x3, 0(x2) # store 0xf8f6105c in memory
flw f15, 0(x2) # load 0xf8f6105c from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
fmadd.s f2, f30, f15, f1, dyn # perform operation
fmadd.s f2, f30, f15, f1, rdn # perform operation
fmadd.s f2, f30, f15, f1, rmm # perform operation
fmadd.s f2, f30, f15, f1, rne # perform operation
fmadd.s f2, f30, f15, f1, rtz # perform operation
fmadd.s f2, f30, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x24, 0x31d71229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xa9c75dc3 # load x3 with value 0xa9c75dc3
sw x3, 0(x2) # store 0xa9c75dc3 in memory
flw f25, 0(x2) # load 0xa9c75dc3 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmadd.s f24, f1, f25, f4, dyn # perform operation
fmadd.s f24, f1, f25, f4, rdn # perform operation
fmadd.s f24, f1, f25, f4, rmm # perform operation
fmadd.s f24, f1, f25, f4, rne # perform operation
fmadd.s f24, f1, f25, f4, rtz # perform operation
fmadd.s f24, f1, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x13, 0xbd6b1633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x6a8e6cca # load x3 with value 0x6a8e6cca
sw x3, 0(x2) # store 0x6a8e6cca in memory
flw f25, 0(x2) # load 0x6a8e6cca from memory into f25
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f13, f11, f25, f18, dyn # perform operation
fmadd.s f13, f11, f25, f18, rdn # perform operation
fmadd.s f13, f11, f25, f18, rmm # perform operation
fmadd.s f13, f11, f25, f18, rne # perform operation
fmadd.s f13, f11, f25, f18, rtz # perform operation
fmadd.s f13, f11, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x24, 0x66fbba3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x0b1029b3 # load x3 with value 0x0b1029b3
sw x3, 0(x2) # store 0x0b1029b3 in memory
flw f25, 0(x2) # load 0x0b1029b3 from memory into f25
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f24, f15, f25, f20, dyn # perform operation
fmadd.s f24, f15, f25, f20, rdn # perform operation
fmadd.s f24, f15, f25, f20, rmm # perform operation
fmadd.s f24, f15, f25, f20, rne # perform operation
fmadd.s f24, f15, f25, f20, rtz # perform operation
fmadd.s f24, f15, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f25, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x21, 0xea5dc7e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x3e601c9c # load x3 with value 0x3e601c9c
sw x3, 0(x2) # store 0x3e601c9c in memory
flw f13, 0(x2) # load 0x3e601c9c from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmadd.s f21, f26, f13, f19, dyn # perform operation
fmadd.s f21, f26, f13, f19, rdn # perform operation
fmadd.s f21, f26, f13, f19, rmm # perform operation
fmadd.s f21, f26, f13, f19, rne # perform operation
fmadd.s f21, f26, f13, f19, rtz # perform operation
fmadd.s f21, f26, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f26, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f26, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x10, 0x718eefdd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x972c9dd8 # load x3 with value 0x972c9dd8
sw x3, 0(x2) # store 0x972c9dd8 in memory
flw f19, 0(x2) # load 0x972c9dd8 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmadd.s f10, f22, f19, f12, dyn # perform operation
fmadd.s f10, f22, f19, f12, rdn # perform operation
fmadd.s f10, f22, f19, f12, rmm # perform operation
fmadd.s f10, f22, f19, f12, rne # perform operation
fmadd.s f10, f22, f19, f12, rtz # perform operation
fmadd.s f10, f22, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x7, 0xfc5e56df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x8509d95c # load x3 with value 0x8509d95c
sw x3, 0(x2) # store 0x8509d95c in memory
flw f24, 0(x2) # load 0x8509d95c from memory into f24
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmadd.s f7, f2, f24, f28, dyn # perform operation
fmadd.s f7, f2, f24, f28, rdn # perform operation
fmadd.s f7, f2, f24, f28, rmm # perform operation
fmadd.s f7, f2, f24, f28, rne # perform operation
fmadd.s f7, f2, f24, f28, rtz # perform operation
fmadd.s f7, f2, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x21, 0xb40c858a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x4e52a32b # load x3 with value 0x4e52a32b
sw x3, 0(x2) # store 0x4e52a32b in memory
flw f15, 0(x2) # load 0x4e52a32b from memory into f15
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmadd.s f21, f25, f15, f11, dyn # perform operation
fmadd.s f21, f25, f15, f11, rdn # perform operation
fmadd.s f21, f25, f15, f11, rmm # perform operation
fmadd.s f21, f25, f15, f11, rne # perform operation
fmadd.s f21, f25, f15, f11, rtz # perform operation
fmadd.s f21, f25, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f25, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f25, f15, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x7, 0x51c628a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x83f9d41a # load x3 with value 0x83f9d41a
sw x3, 0(x2) # store 0x83f9d41a in memory
flw f20, 0(x2) # load 0x83f9d41a from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
fmadd.s f7, f3, f20, f24, dyn # perform operation
fmadd.s f7, f3, f20, f24, rdn # perform operation
fmadd.s f7, f3, f20, f24, rmm # perform operation
fmadd.s f7, f3, f20, f24, rne # perform operation
fmadd.s f7, f3, f20, f24, rtz # perform operation
fmadd.s f7, f3, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x13, 0xfb5c9799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x9ddff9f3 # load x3 with value 0x9ddff9f3
sw x3, 0(x2) # store 0x9ddff9f3 in memory
flw f2, 0(x2) # load 0x9ddff9f3 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fmadd.s f13, f6, f2, f15, dyn # perform operation
fmadd.s f13, f6, f2, f15, rdn # perform operation
fmadd.s f13, f6, f2, f15, rmm # perform operation
fmadd.s f13, f6, f2, f15, rne # perform operation
fmadd.s f13, f6, f2, f15, rtz # perform operation
fmadd.s f13, f6, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f2, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x12, 0x7b579ea5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x6dd2fd51 # load x3 with value 0x6dd2fd51
sw x3, 0(x2) # store 0x6dd2fd51 in memory
flw f16, 0(x2) # load 0x6dd2fd51 from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fmadd.s f12, f20, f16, f4, dyn # perform operation
fmadd.s f12, f20, f16, f4, rdn # perform operation
fmadd.s f12, f20, f16, f4, rmm # perform operation
fmadd.s f12, f20, f16, f4, rne # perform operation
fmadd.s f12, f20, f16, f4, rtz # perform operation
fmadd.s f12, f20, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x22, 0xbdfad3ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xcfedd3db # load x3 with value 0xcfedd3db
sw x3, 0(x2) # store 0xcfedd3db in memory
flw f5, 0(x2) # load 0xcfedd3db from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f22, f23, f5, f2, dyn # perform operation
fmadd.s f22, f23, f5, f2, rdn # perform operation
fmadd.s f22, f23, f5, f2, rmm # perform operation
fmadd.s f22, f23, f5, f2, rne # perform operation
fmadd.s f22, f23, f5, f2, rtz # perform operation
fmadd.s f22, f23, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f23, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f23, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f23, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f23, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f23, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x23, 0xd9aae41e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xdff73020 # load x3 with value 0xdff73020
sw x3, 0(x2) # store 0xdff73020 in memory
flw f10, 0(x2) # load 0xdff73020 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmadd.s f23, f24, f10, f4, dyn # perform operation
fmadd.s f23, f24, f10, f4, rdn # perform operation
fmadd.s f23, f24, f10, f4, rmm # perform operation
fmadd.s f23, f24, f10, f4, rne # perform operation
fmadd.s f23, f24, f10, f4, rtz # perform operation
fmadd.s f23, f24, f10, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f10, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f10, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f10, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f10, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f10, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x17, 0xce00d4bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x8cddcf07 # load x3 with value 0x8cddcf07
sw x3, 0(x2) # store 0x8cddcf07 in memory
flw f30, 0(x2) # load 0x8cddcf07 from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f17, f1, f30, f14, dyn # perform operation
fmadd.s f17, f1, f30, f14, rdn # perform operation
fmadd.s f17, f1, f30, f14, rmm # perform operation
fmadd.s f17, f1, f30, f14, rne # perform operation
fmadd.s f17, f1, f30, f14, rtz # perform operation
fmadd.s f17, f1, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f30, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x12, 0x14be1837 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0xe3c1a3da # load x3 with value 0xe3c1a3da
sw x3, 0(x2) # store 0xe3c1a3da in memory
flw f13, 0(x2) # load 0xe3c1a3da from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f12, f10, f13, f31, dyn # perform operation
fmadd.s f12, f10, f13, f31, rdn # perform operation
fmadd.s f12, f10, f13, f31, rmm # perform operation
fmadd.s f12, f10, f13, f31, rne # perform operation
fmadd.s f12, f10, f13, f31, rtz # perform operation
fmadd.s f12, f10, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f13, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x22, 0xf162d1a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xa7997596 # load x3 with value 0xa7997596
sw x3, 0(x2) # store 0xa7997596 in memory
flw f17, 0(x2) # load 0xa7997596 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f22, f1, f17, f25, dyn # perform operation
fmadd.s f22, f1, f17, f25, rdn # perform operation
fmadd.s f22, f1, f17, f25, rmm # perform operation
fmadd.s f22, f1, f17, f25, rne # perform operation
fmadd.s f22, f1, f17, f25, rtz # perform operation
fmadd.s f22, f1, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f1, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x7, 0xcb2a39a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xb511cfef # load x3 with value 0xb511cfef
sw x3, 0(x2) # store 0xb511cfef in memory
flw f1, 0(x2) # load 0xb511cfef from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fmadd.s f7, f29, f1, f20, dyn # perform operation
fmadd.s f7, f29, f1, f20, rdn # perform operation
fmadd.s f7, f29, f1, f20, rmm # perform operation
fmadd.s f7, f29, f1, f20, rne # perform operation
fmadd.s f7, f29, f1, f20, rtz # perform operation
fmadd.s f7, f29, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f29, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f29, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x1, 0x184ab6cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x33a29ae9 # load x3 with value 0x33a29ae9
sw x3, 0(x2) # store 0x33a29ae9 in memory
flw f7, 0(x2) # load 0x33a29ae9 from memory into f7
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmadd.s f1, f24, f7, f30, dyn # perform operation
fmadd.s f1, f24, f7, f30, rdn # perform operation
fmadd.s f1, f24, f7, f30, rmm # perform operation
fmadd.s f1, f24, f7, f30, rne # perform operation
fmadd.s f1, f24, f7, f30, rtz # perform operation
fmadd.s f1, f24, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f24, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f24, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x19, 0x3653b2e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xab3dbb31 # load x3 with value 0xab3dbb31
sw x3, 0(x2) # store 0xab3dbb31 in memory
flw f12, 0(x2) # load 0xab3dbb31 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f19, f24, f12, f29, dyn # perform operation
fmadd.s f19, f24, f12, f29, rdn # perform operation
fmadd.s f19, f24, f12, f29, rmm # perform operation
fmadd.s f19, f24, f12, f29, rne # perform operation
fmadd.s f19, f24, f12, f29, rtz # perform operation
fmadd.s f19, f24, f12, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f12, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f12, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f12, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f12, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f12, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x29, 0xc933141b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xe98a75e8 # load x3 with value 0xe98a75e8
sw x3, 0(x2) # store 0xe98a75e8 in memory
flw f31, 0(x2) # load 0xe98a75e8 from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmadd.s f29, f30, f31, f4, dyn # perform operation
fmadd.s f29, f30, f31, f4, rdn # perform operation
fmadd.s f29, f30, f31, f4, rmm # perform operation
fmadd.s f29, f30, f31, f4, rne # perform operation
fmadd.s f29, f30, f31, f4, rtz # perform operation
fmadd.s f29, f30, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f30, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f30, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f30, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f30, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f30, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x1, 0x9a9e3462 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0xa12f5aa9 # load x3 with value 0xa12f5aa9
sw x3, 0(x2) # store 0xa12f5aa9 in memory
flw f26, 0(x2) # load 0xa12f5aa9 from memory into f26
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f1, f17, f26, f23, dyn # perform operation
fmadd.s f1, f17, f26, f23, rdn # perform operation
fmadd.s f1, f17, f26, f23, rmm # perform operation
fmadd.s f1, f17, f26, f23, rne # perform operation
fmadd.s f1, f17, f26, f23, rtz # perform operation
fmadd.s f1, f17, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x2, 0xc4ba0b1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0x0dbe970e # load x3 with value 0x0dbe970e
sw x3, 0(x2) # store 0x0dbe970e in memory
flw f23, 0(x2) # load 0x0dbe970e from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmadd.s f2, f29, f23, f11, dyn # perform operation
fmadd.s f2, f29, f23, f11, rdn # perform operation
fmadd.s f2, f29, f23, f11, rmm # perform operation
fmadd.s f2, f29, f23, f11, rne # perform operation
fmadd.s f2, f29, f23, f11, rtz # perform operation
fmadd.s f2, f29, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f23, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x8, 0x97defc07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x5615e4cd # load x3 with value 0x5615e4cd
sw x3, 0(x2) # store 0x5615e4cd in memory
flw f6, 0(x2) # load 0x5615e4cd from memory into f6
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmadd.s f8, f19, f6, f26, dyn # perform operation
fmadd.s f8, f19, f6, f26, rdn # perform operation
fmadd.s f8, f19, f6, f26, rmm # perform operation
fmadd.s f8, f19, f6, f26, rne # perform operation
fmadd.s f8, f19, f6, f26, rtz # perform operation
fmadd.s f8, f19, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x9, 0x4ad81f1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x15e3a97b # load x3 with value 0x15e3a97b
sw x3, 0(x2) # store 0x15e3a97b in memory
flw f4, 0(x2) # load 0x15e3a97b from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
fmadd.s f9, f28, f4, f18, dyn # perform operation
fmadd.s f9, f28, f4, f18, rdn # perform operation
fmadd.s f9, f28, f4, f18, rmm # perform operation
fmadd.s f9, f28, f4, f18, rne # perform operation
fmadd.s f9, f28, f4, f18, rtz # perform operation
fmadd.s f9, f28, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f4, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x10, 0x4bb52660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x4cd29beb # load x3 with value 0x4cd29beb
sw x3, 0(x2) # store 0x4cd29beb in memory
flw f22, 0(x2) # load 0x4cd29beb from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fmadd.s f10, f23, f22, f29, dyn # perform operation
fmadd.s f10, f23, f22, f29, rdn # perform operation
fmadd.s f10, f23, f22, f29, rmm # perform operation
fmadd.s f10, f23, f22, f29, rne # perform operation
fmadd.s f10, f23, f22, f29, rtz # perform operation
fmadd.s f10, f23, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x6, 0x6feae729 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0xce63059a # load x3 with value 0xce63059a
sw x3, 0(x2) # store 0xce63059a in memory
flw f9, 0(x2) # load 0xce63059a from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmadd.s f6, f3, f9, f7, dyn # perform operation
fmadd.s f6, f3, f9, f7, rdn # perform operation
fmadd.s f6, f3, f9, f7, rmm # perform operation
fmadd.s f6, f3, f9, f7, rne # perform operation
fmadd.s f6, f3, f9, f7, rtz # perform operation
fmadd.s f6, f3, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x15, 0x3d4ecd94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xa4d6f842 # load x3 with value 0xa4d6f842
sw x3, 0(x2) # store 0xa4d6f842 in memory
flw f22, 0(x2) # load 0xa4d6f842 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmadd.s f15, f13, f22, f27, dyn # perform operation
fmadd.s f15, f13, f22, f27, rdn # perform operation
fmadd.s f15, f13, f22, f27, rmm # perform operation
fmadd.s f15, f13, f22, f27, rne # perform operation
fmadd.s f15, f13, f22, f27, rtz # perform operation
fmadd.s f15, f13, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f13, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f13, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f13, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f13, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f13, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x5, 0xed0f4af6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x3a48bbc4 # load x3 with value 0x3a48bbc4
sw x3, 0(x2) # store 0x3a48bbc4 in memory
flw f11, 0(x2) # load 0x3a48bbc4 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
fmadd.s f5, f19, f11, f15, dyn # perform operation
fmadd.s f5, f19, f11, f15, rdn # perform operation
fmadd.s f5, f19, f11, f15, rmm # perform operation
fmadd.s f5, f19, f11, f15, rne # perform operation
fmadd.s f5, f19, f11, f15, rtz # perform operation
fmadd.s f5, f19, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f11, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x19, 0xfe5228af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0xda4961eb # load x3 with value 0xda4961eb
sw x3, 0(x2) # store 0xda4961eb in memory
flw f12, 0(x2) # load 0xda4961eb from memory into f12
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmadd.s f19, f8, f12, f11, dyn # perform operation
fmadd.s f19, f8, f12, f11, rdn # perform operation
fmadd.s f19, f8, f12, f11, rmm # perform operation
fmadd.s f19, f8, f12, f11, rne # perform operation
fmadd.s f19, f8, f12, f11, rtz # perform operation
fmadd.s f19, f8, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f12, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x27, 0x2fbd2b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x2c41e172 # load x3 with value 0x2c41e172
sw x3, 0(x2) # store 0x2c41e172 in memory
flw f1, 0(x2) # load 0x2c41e172 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmadd.s f27, f29, f1, f22, dyn # perform operation
fmadd.s f27, f29, f1, f22, rdn # perform operation
fmadd.s f27, f29, f1, f22, rmm # perform operation
fmadd.s f27, f29, f1, f22, rne # perform operation
fmadd.s f27, f29, f1, f22, rtz # perform operation
fmadd.s f27, f29, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f29, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f29, f1, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x16, 0x402534e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x0f861baa # load x3 with value 0x0f861baa
sw x3, 0(x2) # store 0x0f861baa in memory
flw f23, 0(x2) # load 0x0f861baa from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmadd.s f16, f22, f23, f27, dyn # perform operation
fmadd.s f16, f22, f23, f27, rdn # perform operation
fmadd.s f16, f22, f23, f27, rmm # perform operation
fmadd.s f16, f22, f23, f27, rne # perform operation
fmadd.s f16, f22, f23, f27, rtz # perform operation
fmadd.s f16, f22, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x11, 0x38332aca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x79e9cd8a # load x3 with value 0x79e9cd8a
sw x3, 0(x2) # store 0x79e9cd8a in memory
flw f26, 0(x2) # load 0x79e9cd8a from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fmadd.s f11, f19, f26, f3, dyn # perform operation
fmadd.s f11, f19, f26, f3, rdn # perform operation
fmadd.s f11, f19, f26, f3, rmm # perform operation
fmadd.s f11, f19, f26, f3, rne # perform operation
fmadd.s f11, f19, f26, f3, rtz # perform operation
fmadd.s f11, f19, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f26, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x11, 0x58bf22d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x99f7a6bd # load x3 with value 0x99f7a6bd
sw x3, 0(x2) # store 0x99f7a6bd in memory
flw f16, 0(x2) # load 0x99f7a6bd from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
fmadd.s f11, f1, f16, f25, dyn # perform operation
fmadd.s f11, f1, f16, f25, rdn # perform operation
fmadd.s f11, f1, f16, f25, rmm # perform operation
fmadd.s f11, f1, f16, f25, rne # perform operation
fmadd.s f11, f1, f16, f25, rtz # perform operation
fmadd.s f11, f1, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f16, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x14, 0xa29fd1b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x4125ed4e # load x3 with value 0x4125ed4e
sw x3, 0(x2) # store 0x4125ed4e in memory
flw f11, 0(x2) # load 0x4125ed4e from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmadd.s f14, f9, f11, f6, dyn # perform operation
fmadd.s f14, f9, f11, f6, rdn # perform operation
fmadd.s f14, f9, f11, f6, rmm # perform operation
fmadd.s f14, f9, f11, f6, rne # perform operation
fmadd.s f14, f9, f11, f6, rtz # perform operation
fmadd.s f14, f9, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x30, 0xec19ea9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x42bae142 # load x3 with value 0x42bae142
sw x3, 0(x2) # store 0x42bae142 in memory
flw f20, 0(x2) # load 0x42bae142 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
fmadd.s f30, f8, f20, f1, dyn # perform operation
fmadd.s f30, f8, f20, f1, rdn # perform operation
fmadd.s f30, f8, f20, f1, rmm # perform operation
fmadd.s f30, f8, f20, f1, rne # perform operation
fmadd.s f30, f8, f20, f1, rtz # perform operation
fmadd.s f30, f8, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f20, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x30, 0x68919dc3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x3c7ef795 # load x3 with value 0x3c7ef795
sw x3, 0(x2) # store 0x3c7ef795 in memory
flw f3, 0(x2) # load 0x3c7ef795 from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmadd.s f30, f16, f3, f5, dyn # perform operation
fmadd.s f30, f16, f3, f5, rdn # perform operation
fmadd.s f30, f16, f3, f5, rmm # perform operation
fmadd.s f30, f16, f3, f5, rne # perform operation
fmadd.s f30, f16, f3, f5, rtz # perform operation
fmadd.s f30, f16, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f16, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f16, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x5, 0x68da2493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xc09f4a29 # load x3 with value 0xc09f4a29
sw x3, 0(x2) # store 0xc09f4a29 in memory
flw f15, 0(x2) # load 0xc09f4a29 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fmadd.s f5, f6, f15, f23, dyn # perform operation
fmadd.s f5, f6, f15, f23, rdn # perform operation
fmadd.s f5, f6, f15, f23, rmm # perform operation
fmadd.s f5, f6, f15, f23, rne # perform operation
fmadd.s f5, f6, f15, f23, rtz # perform operation
fmadd.s f5, f6, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f6, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f6, f15, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x3, 0x7c5be725 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x5befdbac # load x3 with value 0x5befdbac
sw x3, 0(x2) # store 0x5befdbac in memory
flw f30, 0(x2) # load 0x5befdbac from memory into f30
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f3, f8, f30, f28, dyn # perform operation
fmadd.s f3, f8, f30, f28, rdn # perform operation
fmadd.s f3, f8, f30, f28, rmm # perform operation
fmadd.s f3, f8, f30, f28, rne # perform operation
fmadd.s f3, f8, f30, f28, rtz # perform operation
fmadd.s f3, f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f8, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x29, 0x91bc766b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0xf61b0df5 # load x3 with value 0xf61b0df5
sw x3, 0(x2) # store 0xf61b0df5 in memory
flw f14, 0(x2) # load 0xf61b0df5 from memory into f14
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f29, f11, f14, f5, dyn # perform operation
fmadd.s f29, f11, f14, f5, rdn # perform operation
fmadd.s f29, f11, f14, f5, rmm # perform operation
fmadd.s f29, f11, f14, f5, rne # perform operation
fmadd.s f29, f11, f14, f5, rtz # perform operation
fmadd.s f29, f11, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f14, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x8, 0xce8c3252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0x45f36167 # load x3 with value 0x45f36167
sw x3, 0(x2) # store 0x45f36167 in memory
flw f18, 0(x2) # load 0x45f36167 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fmadd.s f8, f7, f18, f15, dyn # perform operation
fmadd.s f8, f7, f18, f15, rdn # perform operation
fmadd.s f8, f7, f18, f15, rmm # perform operation
fmadd.s f8, f7, f18, f15, rne # perform operation
fmadd.s f8, f7, f18, f15, rtz # perform operation
fmadd.s f8, f7, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f18, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x9, 0xed11ad24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0xa402c416 # load x3 with value 0xa402c416
sw x3, 0(x2) # store 0xa402c416 in memory
flw f23, 0(x2) # load 0xa402c416 from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f9, f6, f23, f31, dyn # perform operation
fmadd.s f9, f6, f23, f31, rdn # perform operation
fmadd.s f9, f6, f23, f31, rmm # perform operation
fmadd.s f9, f6, f23, f31, rne # perform operation
fmadd.s f9, f6, f23, f31, rtz # perform operation
fmadd.s f9, f6, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x17, 0x8968da8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xb75214a8 # load x3 with value 0xb75214a8
sw x3, 0(x2) # store 0xb75214a8 in memory
flw f13, 0(x2) # load 0xb75214a8 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
fmadd.s f17, f28, f13, f11, dyn # perform operation
fmadd.s f17, f28, f13, f11, rdn # perform operation
fmadd.s f17, f28, f13, f11, rmm # perform operation
fmadd.s f17, f28, f13, f11, rne # perform operation
fmadd.s f17, f28, f13, f11, rtz # perform operation
fmadd.s f17, f28, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x23, 0x0afe378c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x70b0dfd9 # load x3 with value 0x70b0dfd9
sw x3, 0(x2) # store 0x70b0dfd9 in memory
flw f6, 0(x2) # load 0x70b0dfd9 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f23, f11, f6, f13, dyn # perform operation
fmadd.s f23, f11, f6, f13, rdn # perform operation
fmadd.s f23, f11, f6, f13, rmm # perform operation
fmadd.s f23, f11, f6, f13, rne # perform operation
fmadd.s f23, f11, f6, f13, rtz # perform operation
fmadd.s f23, f11, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x23, 0x50617630 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0xedcfe3b0 # load x3 with value 0xedcfe3b0
sw x3, 0(x2) # store 0xedcfe3b0 in memory
flw f13, 0(x2) # load 0xedcfe3b0 from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fmadd.s f23, f1, f13, f27, dyn # perform operation
fmadd.s f23, f1, f13, f27, rdn # perform operation
fmadd.s f23, f1, f13, f27, rmm # perform operation
fmadd.s f23, f1, f13, f27, rne # perform operation
fmadd.s f23, f1, f13, f27, rtz # perform operation
fmadd.s f23, f1, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x22, 0x7440ff0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0xcbf87fb0 # load x3 with value 0xcbf87fb0
sw x3, 0(x2) # store 0xcbf87fb0 in memory
flw f17, 0(x2) # load 0xcbf87fb0 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fmadd.s f22, f23, f17, f7, dyn # perform operation
fmadd.s f22, f23, f17, f7, rdn # perform operation
fmadd.s f22, f23, f17, f7, rmm # perform operation
fmadd.s f22, f23, f17, f7, rne # perform operation
fmadd.s f22, f23, f17, f7, rtz # perform operation
fmadd.s f22, f23, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f23, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f23, f17, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x1, 0x8be475fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xa5f87c8a # load x3 with value 0xa5f87c8a
sw x3, 0(x2) # store 0xa5f87c8a in memory
flw f16, 0(x2) # load 0xa5f87c8a from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fmadd.s f1, f9, f16, f11, dyn # perform operation
fmadd.s f1, f9, f16, f11, rdn # perform operation
fmadd.s f1, f9, f16, f11, rmm # perform operation
fmadd.s f1, f9, f16, f11, rne # perform operation
fmadd.s f1, f9, f16, f11, rtz # perform operation
fmadd.s f1, f9, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x30, 0x03738f63 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0xea68ef71 # load x3 with value 0xea68ef71
sw x3, 0(x2) # store 0xea68ef71 in memory
flw f13, 0(x2) # load 0xea68ef71 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f30, f31, f13, f21, dyn # perform operation
fmadd.s f30, f31, f13, f21, rdn # perform operation
fmadd.s f30, f31, f13, f21, rmm # perform operation
fmadd.s f30, f31, f13, f21, rne # perform operation
fmadd.s f30, f31, f13, f21, rtz # perform operation
fmadd.s f30, f31, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f13, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x4, 0x407d052a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x4a93cae1 # load x3 with value 0x4a93cae1
sw x3, 0(x2) # store 0x4a93cae1 in memory
flw f18, 0(x2) # load 0x4a93cae1 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fmadd.s f4, f20, f18, f2, dyn # perform operation
fmadd.s f4, f20, f18, f2, rdn # perform operation
fmadd.s f4, f20, f18, f2, rmm # perform operation
fmadd.s f4, f20, f18, f2, rne # perform operation
fmadd.s f4, f20, f18, f2, rtz # perform operation
fmadd.s f4, f20, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f20, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f20, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x28, 0x73f94a07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0xa5dd74dc # load x3 with value 0xa5dd74dc
sw x3, 0(x2) # store 0xa5dd74dc in memory
flw f16, 0(x2) # load 0xa5dd74dc from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
fmadd.s f28, f23, f16, f4, dyn # perform operation
fmadd.s f28, f23, f16, f4, rdn # perform operation
fmadd.s f28, f23, f16, f4, rmm # perform operation
fmadd.s f28, f23, f16, f4, rne # perform operation
fmadd.s f28, f23, f16, f4, rtz # perform operation
fmadd.s f28, f23, f16, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f16, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f16, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f16, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f16, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f16, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x16, 0x2b1926f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x354f6a9b # load x3 with value 0x354f6a9b
sw x3, 0(x2) # store 0x354f6a9b in memory
flw f28, 0(x2) # load 0x354f6a9b from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmadd.s f16, f25, f28, f12, dyn # perform operation
fmadd.s f16, f25, f28, f12, rdn # perform operation
fmadd.s f16, f25, f28, f12, rmm # perform operation
fmadd.s f16, f25, f28, f12, rne # perform operation
fmadd.s f16, f25, f28, f12, rtz # perform operation
fmadd.s f16, f25, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f25, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f25, f28, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x25, 0x7c492cc4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x2c1b9a9b # load x3 with value 0x2c1b9a9b
sw x3, 0(x2) # store 0x2c1b9a9b in memory
flw f21, 0(x2) # load 0x2c1b9a9b from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmadd.s f25, f27, f21, f28, dyn # perform operation
fmadd.s f25, f27, f21, f28, rdn # perform operation
fmadd.s f25, f27, f21, f28, rmm # perform operation
fmadd.s f25, f27, f21, f28, rne # perform operation
fmadd.s f25, f27, f21, f28, rtz # perform operation
fmadd.s f25, f27, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x26, 0x09a5004b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xe5a46dad # load x3 with value 0xe5a46dad
sw x3, 0(x2) # store 0xe5a46dad in memory
flw f9, 0(x2) # load 0xe5a46dad from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmadd.s f26, f20, f9, f17, dyn # perform operation
fmadd.s f26, f20, f9, f17, rdn # perform operation
fmadd.s f26, f20, f9, f17, rmm # perform operation
fmadd.s f26, f20, f9, f17, rne # perform operation
fmadd.s f26, f20, f9, f17, rtz # perform operation
fmadd.s f26, f20, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f9, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x16, 0x1bba8d5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x25a96b70 # load x3 with value 0x25a96b70
sw x3, 0(x2) # store 0x25a96b70 in memory
flw f2, 0(x2) # load 0x25a96b70 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f16, f4, f2, f3, dyn # perform operation
fmadd.s f16, f4, f2, f3, rdn # perform operation
fmadd.s f16, f4, f2, f3, rmm # perform operation
fmadd.s f16, f4, f2, f3, rne # perform operation
fmadd.s f16, f4, f2, f3, rtz # perform operation
fmadd.s f16, f4, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f4, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f4, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x2, 0x2a2c5f8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x094a9f5b # load x3 with value 0x094a9f5b
sw x3, 0(x2) # store 0x094a9f5b in memory
flw f28, 0(x2) # load 0x094a9f5b from memory into f28
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f2, f14, f28, f22, dyn # perform operation
fmadd.s f2, f14, f28, f22, rdn # perform operation
fmadd.s f2, f14, f28, f22, rmm # perform operation
fmadd.s f2, f14, f28, f22, rne # perform operation
fmadd.s f2, f14, f28, f22, rtz # perform operation
fmadd.s f2, f14, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x5, 0x40babca1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x1772ea53 # load x3 with value 0x1772ea53
sw x3, 0(x2) # store 0x1772ea53 in memory
flw f9, 0(x2) # load 0x1772ea53 from memory into f9
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
fmadd.s f5, f7, f9, f25, dyn # perform operation
fmadd.s f5, f7, f9, f25, rdn # perform operation
fmadd.s f5, f7, f9, f25, rmm # perform operation
fmadd.s f5, f7, f9, f25, rne # perform operation
fmadd.s f5, f7, f9, f25, rtz # perform operation
fmadd.s f5, f7, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x21, 0x2670cc7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0xadde28fa # load x3 with value 0xadde28fa
sw x3, 0(x2) # store 0xadde28fa in memory
flw f4, 0(x2) # load 0xadde28fa from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmadd.s f21, f5, f4, f3, dyn # perform operation
fmadd.s f21, f5, f4, f3, rdn # perform operation
fmadd.s f21, f5, f4, f3, rmm # perform operation
fmadd.s f21, f5, f4, f3, rne # perform operation
fmadd.s f21, f5, f4, f3, rtz # perform operation
fmadd.s f21, f5, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f4, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x12, 0x29a4613a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xf97f38ac # load x3 with value 0xf97f38ac
sw x3, 0(x2) # store 0xf97f38ac in memory
flw f11, 0(x2) # load 0xf97f38ac from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
fmadd.s f12, f27, f11, f10, dyn # perform operation
fmadd.s f12, f27, f11, f10, rdn # perform operation
fmadd.s f12, f27, f11, f10, rmm # perform operation
fmadd.s f12, f27, f11, f10, rne # perform operation
fmadd.s f12, f27, f11, f10, rtz # perform operation
fmadd.s f12, f27, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f11, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x31, 0x50f1d9ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xa597edd5 # load x3 with value 0xa597edd5
sw x3, 0(x2) # store 0xa597edd5 in memory
flw f14, 0(x2) # load 0xa597edd5 from memory into f14
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmadd.s f31, f20, f14, f12, dyn # perform operation
fmadd.s f31, f20, f14, f12, rdn # perform operation
fmadd.s f31, f20, f14, f12, rmm # perform operation
fmadd.s f31, f20, f14, f12, rne # perform operation
fmadd.s f31, f20, f14, f12, rtz # perform operation
fmadd.s f31, f20, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f14, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x4, 0xec50f17e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x94ab7a5c # load x3 with value 0x94ab7a5c
sw x3, 0(x2) # store 0x94ab7a5c in memory
flw f14, 0(x2) # load 0x94ab7a5c from memory into f14
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmadd.s f4, f31, f14, f28, dyn # perform operation
fmadd.s f4, f31, f14, f28, rdn # perform operation
fmadd.s f4, f31, f14, f28, rmm # perform operation
fmadd.s f4, f31, f14, f28, rne # perform operation
fmadd.s f4, f31, f14, f28, rtz # perform operation
fmadd.s f4, f31, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f31, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x15, 0x806566ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x3053ee74 # load x3 with value 0x3053ee74
sw x3, 0(x2) # store 0x3053ee74 in memory
flw f19, 0(x2) # load 0x3053ee74 from memory into f19
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fmadd.s f15, f26, f19, f4, dyn # perform operation
fmadd.s f15, f26, f19, f4, rdn # perform operation
fmadd.s f15, f26, f19, f4, rmm # perform operation
fmadd.s f15, f26, f19, f4, rne # perform operation
fmadd.s f15, f26, f19, f4, rtz # perform operation
fmadd.s f15, f26, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f19, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x6, 0xcba35fd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x3d408eb0 # load x3 with value 0x3d408eb0
sw x3, 0(x2) # store 0x3d408eb0 in memory
flw f3, 0(x2) # load 0x3d408eb0 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fmadd.s f6, f10, f3, f29, dyn # perform operation
fmadd.s f6, f10, f3, f29, rdn # perform operation
fmadd.s f6, f10, f3, f29, rmm # perform operation
fmadd.s f6, f10, f3, f29, rne # perform operation
fmadd.s f6, f10, f3, f29, rtz # perform operation
fmadd.s f6, f10, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f10, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f10, f3, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x14, 0x89aa3adb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x7981209f # load x3 with value 0x7981209f
sw x3, 0(x2) # store 0x7981209f in memory
flw f17, 0(x2) # load 0x7981209f from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmadd.s f14, f11, f17, f1, dyn # perform operation
fmadd.s f14, f11, f17, f1, rdn # perform operation
fmadd.s f14, f11, f17, f1, rmm # perform operation
fmadd.s f14, f11, f17, f1, rne # perform operation
fmadd.s f14, f11, f17, f1, rtz # perform operation
fmadd.s f14, f11, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x22, 0x3aa40c91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0xb423ed62 # load x3 with value 0xb423ed62
sw x3, 0(x2) # store 0xb423ed62 in memory
flw f23, 0(x2) # load 0xb423ed62 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmadd.s f22, f19, f23, f17, dyn # perform operation
fmadd.s f22, f19, f23, f17, rdn # perform operation
fmadd.s f22, f19, f23, f17, rmm # perform operation
fmadd.s f22, f19, f23, f17, rne # perform operation
fmadd.s f22, f19, f23, f17, rtz # perform operation
fmadd.s f22, f19, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f23, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x2, 0xc966623c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x13e605aa # load x3 with value 0x13e605aa
sw x3, 0(x2) # store 0x13e605aa in memory
flw f19, 0(x2) # load 0x13e605aa from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmadd.s f2, f5, f19, f14, dyn # perform operation
fmadd.s f2, f5, f19, f14, rdn # perform operation
fmadd.s f2, f5, f19, f14, rmm # perform operation
fmadd.s f2, f5, f19, f14, rne # perform operation
fmadd.s f2, f5, f19, f14, rtz # perform operation
fmadd.s f2, f5, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x30, 0x2af4a714 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x80c11e68 # load x3 with value 0x80c11e68
sw x3, 0(x2) # store 0x80c11e68 in memory
flw f28, 0(x2) # load 0x80c11e68 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmadd.s f30, f6, f28, f13, dyn # perform operation
fmadd.s f30, f6, f28, f13, rdn # perform operation
fmadd.s f30, f6, f28, f13, rmm # perform operation
fmadd.s f30, f6, f28, f13, rne # perform operation
fmadd.s f30, f6, f28, f13, rtz # perform operation
fmadd.s f30, f6, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x3, 0xfb68cd95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x97f0b9b3 # load x3 with value 0x97f0b9b3
sw x3, 0(x2) # store 0x97f0b9b3 in memory
flw f20, 0(x2) # load 0x97f0b9b3 from memory into f20
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmadd.s f3, f31, f20, f6, dyn # perform operation
fmadd.s f3, f31, f20, f6, rdn # perform operation
fmadd.s f3, f31, f20, f6, rmm # perform operation
fmadd.s f3, f31, f20, f6, rne # perform operation
fmadd.s f3, f31, f20, f6, rtz # perform operation
fmadd.s f3, f31, f20, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f20, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f20, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x19, 0x2cf4b74a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0xe156b9a8 # load x3 with value 0xe156b9a8
sw x3, 0(x2) # store 0xe156b9a8 in memory
flw f12, 0(x2) # load 0xe156b9a8 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmadd.s f19, f29, f12, f23, dyn # perform operation
fmadd.s f19, f29, f12, f23, rdn # perform operation
fmadd.s f19, f29, f12, f23, rmm # perform operation
fmadd.s f19, f29, f12, f23, rne # perform operation
fmadd.s f19, f29, f12, f23, rtz # perform operation
fmadd.s f19, f29, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f29, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f29, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x21, 0xec1c2354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x0be8e68d # load x3 with value 0x0be8e68d
sw x3, 0(x2) # store 0x0be8e68d in memory
flw f26, 0(x2) # load 0x0be8e68d from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f21, f25, f26, f24, dyn # perform operation
fmadd.s f21, f25, f26, f24, rdn # perform operation
fmadd.s f21, f25, f26, f24, rmm # perform operation
fmadd.s f21, f25, f26, f24, rne # perform operation
fmadd.s f21, f25, f26, f24, rtz # perform operation
fmadd.s f21, f25, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f25, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f25, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f25, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f25, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f25, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x9, 0x38972ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xa7c64efa # load x3 with value 0xa7c64efa
sw x3, 0(x2) # store 0xa7c64efa in memory
flw f22, 0(x2) # load 0xa7c64efa from memory into f22
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fmadd.s f9, f25, f22, f29, dyn # perform operation
fmadd.s f9, f25, f22, f29, rdn # perform operation
fmadd.s f9, f25, f22, f29, rmm # perform operation
fmadd.s f9, f25, f22, f29, rne # perform operation
fmadd.s f9, f25, f22, f29, rtz # perform operation
fmadd.s f9, f25, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f25, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f25, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f25, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f25, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f25, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x16, 0xee5f8bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xb4c6c579 # load x3 with value 0xb4c6c579
sw x3, 0(x2) # store 0xb4c6c579 in memory
flw f11, 0(x2) # load 0xb4c6c579 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmadd.s f16, f3, f11, f24, dyn # perform operation
fmadd.s f16, f3, f11, f24, rdn # perform operation
fmadd.s f16, f3, f11, f24, rmm # perform operation
fmadd.s f16, f3, f11, f24, rne # perform operation
fmadd.s f16, f3, f11, f24, rtz # perform operation
fmadd.s f16, f3, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f11, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x3, 0xd24cd87c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x8bba6c0b # load x3 with value 0x8bba6c0b
sw x3, 0(x2) # store 0x8bba6c0b in memory
flw f8, 0(x2) # load 0x8bba6c0b from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmadd.s f3, f17, f8, f21, dyn # perform operation
fmadd.s f3, f17, f8, f21, rdn # perform operation
fmadd.s f3, f17, f8, f21, rmm # perform operation
fmadd.s f3, f17, f8, f21, rne # perform operation
fmadd.s f3, f17, f8, f21, rtz # perform operation
fmadd.s f3, f17, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x17, 0x03fc613f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
li x3, 0x42c33e88 # load x3 with value 0x42c33e88
sw x3, 0(x2) # store 0x42c33e88 in memory
flw f16, 0(x2) # load 0x42c33e88 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmadd.s f17, f11, f16, f28, dyn # perform operation
fmadd.s f17, f11, f16, f28, rdn # perform operation
fmadd.s f17, f11, f16, f28, rmm # perform operation
fmadd.s f17, f11, f16, f28, rne # perform operation
fmadd.s f17, f11, f16, f28, rtz # perform operation
fmadd.s f17, f11, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f11, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f11, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f11, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f11, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f11, f16, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x17, 0x2fa85d35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0xd63dcb96 # load x3 with value 0xd63dcb96
sw x3, 0(x2) # store 0xd63dcb96 in memory
flw f8, 0(x2) # load 0xd63dcb96 from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f17, f12, f8, f31, dyn # perform operation
fmadd.s f17, f12, f8, f31, rdn # perform operation
fmadd.s f17, f12, f8, f31, rmm # perform operation
fmadd.s f17, f12, f8, f31, rne # perform operation
fmadd.s f17, f12, f8, f31, rtz # perform operation
fmadd.s f17, f12, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x14, 0x294adcaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
li x3, 0x1016757c # load x3 with value 0x1016757c
sw x3, 0(x2) # store 0x1016757c in memory
flw f30, 0(x2) # load 0x1016757c from memory into f30
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmadd.s f14, f13, f30, f3, dyn # perform operation
fmadd.s f14, f13, f30, f3, rdn # perform operation
fmadd.s f14, f13, f30, f3, rmm # perform operation
fmadd.s f14, f13, f30, f3, rne # perform operation
fmadd.s f14, f13, f30, f3, rtz # perform operation
fmadd.s f14, f13, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x3, 0x0ba69789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x0657a094 # load x3 with value 0x0657a094
sw x3, 0(x2) # store 0x0657a094 in memory
flw f12, 0(x2) # load 0x0657a094 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmadd.s f3, f13, f12, f14, dyn # perform operation
fmadd.s f3, f13, f12, f14, rdn # perform operation
fmadd.s f3, f13, f12, f14, rmm # perform operation
fmadd.s f3, f13, f12, f14, rne # perform operation
fmadd.s f3, f13, f12, f14, rtz # perform operation
fmadd.s f3, f13, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f12, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x8, 0xba9bc731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x53c69135 # load x3 with value 0x53c69135
sw x3, 0(x2) # store 0x53c69135 in memory
flw f11, 0(x2) # load 0x53c69135 from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fmadd.s f8, f3, f11, f19, dyn # perform operation
fmadd.s f8, f3, f11, f19, rdn # perform operation
fmadd.s f8, f3, f11, f19, rmm # perform operation
fmadd.s f8, f3, f11, f19, rne # perform operation
fmadd.s f8, f3, f11, f19, rtz # perform operation
fmadd.s f8, f3, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f3, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f3, f11, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x7, 0xa25d7106 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x934b731c # load x3 with value 0x934b731c
sw x3, 0(x2) # store 0x934b731c in memory
flw f25, 0(x2) # load 0x934b731c from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fmadd.s f7, f20, f25, f15, dyn # perform operation
fmadd.s f7, f20, f25, f15, rdn # perform operation
fmadd.s f7, f20, f25, f15, rmm # perform operation
fmadd.s f7, f20, f25, f15, rne # perform operation
fmadd.s f7, f20, f25, f15, rtz # perform operation
fmadd.s f7, f20, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f25, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x17, 0xd176b583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x486bd785 # load x3 with value 0x486bd785
sw x3, 0(x2) # store 0x486bd785 in memory
flw f28, 0(x2) # load 0x486bd785 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f17, f13, f28, f10, dyn # perform operation
fmadd.s f17, f13, f28, f10, rdn # perform operation
fmadd.s f17, f13, f28, f10, rmm # perform operation
fmadd.s f17, f13, f28, f10, rne # perform operation
fmadd.s f17, f13, f28, f10, rtz # perform operation
fmadd.s f17, f13, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f28, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x3, 0x1b5987fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xd0028bc6 # load x3 with value 0xd0028bc6
sw x3, 0(x2) # store 0xd0028bc6 in memory
flw f4, 0(x2) # load 0xd0028bc6 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmadd.s f3, f23, f4, f27, dyn # perform operation
fmadd.s f3, f23, f4, f27, rdn # perform operation
fmadd.s f3, f23, f4, f27, rmm # perform operation
fmadd.s f3, f23, f4, f27, rne # perform operation
fmadd.s f3, f23, f4, f27, rtz # perform operation
fmadd.s f3, f23, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f4, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x19, 0x72977708 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x8ee06910 # load x3 with value 0x8ee06910
sw x3, 0(x2) # store 0x8ee06910 in memory
flw f23, 0(x2) # load 0x8ee06910 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
fmadd.s f19, f12, f23, f1, dyn # perform operation
fmadd.s f19, f12, f23, f1, rdn # perform operation
fmadd.s f19, f12, f23, f1, rmm # perform operation
fmadd.s f19, f12, f23, f1, rne # perform operation
fmadd.s f19, f12, f23, f1, rtz # perform operation
fmadd.s f19, f12, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f12, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f12, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x13, 0xc06486c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x6aa67c51 # load x3 with value 0x6aa67c51
sw x3, 0(x2) # store 0x6aa67c51 in memory
flw f4, 0(x2) # load 0x6aa67c51 from memory into f4
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmadd.s f13, f28, f4, f12, dyn # perform operation
fmadd.s f13, f28, f4, f12, rdn # perform operation
fmadd.s f13, f28, f4, f12, rmm # perform operation
fmadd.s f13, f28, f4, f12, rne # perform operation
fmadd.s f13, f28, f4, f12, rtz # perform operation
fmadd.s f13, f28, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x31, 0xef34d2e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x052c29a1 # load x3 with value 0x052c29a1
sw x3, 0(x2) # store 0x052c29a1 in memory
flw f20, 0(x2) # load 0x052c29a1 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fmadd.s f31, f10, f20, f30, dyn # perform operation
fmadd.s f31, f10, f20, f30, rdn # perform operation
fmadd.s f31, f10, f20, f30, rmm # perform operation
fmadd.s f31, f10, f20, f30, rne # perform operation
fmadd.s f31, f10, f20, f30, rtz # perform operation
fmadd.s f31, f10, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x23, 0xca707ec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x1cde8d46 # load x3 with value 0x1cde8d46
sw x3, 0(x2) # store 0x1cde8d46 in memory
flw f9, 0(x2) # load 0x1cde8d46 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f23, f18, f9, f7, dyn # perform operation
fmadd.s f23, f18, f9, f7, rdn # perform operation
fmadd.s f23, f18, f9, f7, rmm # perform operation
fmadd.s f23, f18, f9, f7, rne # perform operation
fmadd.s f23, f18, f9, f7, rtz # perform operation
fmadd.s f23, f18, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f9, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x20, 0x425b1fd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x782ef26e # load x3 with value 0x782ef26e
sw x3, 0(x2) # store 0x782ef26e in memory
flw f30, 0(x2) # load 0x782ef26e from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f20, f17, f30, f18, dyn # perform operation
fmadd.s f20, f17, f30, f18, rdn # perform operation
fmadd.s f20, f17, f30, f18, rmm # perform operation
fmadd.s f20, f17, f30, f18, rne # perform operation
fmadd.s f20, f17, f30, f18, rtz # perform operation
fmadd.s f20, f17, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f17, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x12, 0x83c1be0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x1fcce112 # load x3 with value 0x1fcce112
sw x3, 0(x2) # store 0x1fcce112 in memory
flw f7, 0(x2) # load 0x1fcce112 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmadd.s f12, f22, f7, f21, dyn # perform operation
fmadd.s f12, f22, f7, f21, rdn # perform operation
fmadd.s f12, f22, f7, f21, rmm # perform operation
fmadd.s f12, f22, f7, f21, rne # perform operation
fmadd.s f12, f22, f7, f21, rtz # perform operation
fmadd.s f12, f22, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f7, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x10, 0x4ceba4f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0xca310105 # load x3 with value 0xca310105
sw x3, 0(x2) # store 0xca310105 in memory
flw f24, 0(x2) # load 0xca310105 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
fmadd.s f10, f13, f24, f17, dyn # perform operation
fmadd.s f10, f13, f24, f17, rdn # perform operation
fmadd.s f10, f13, f24, f17, rmm # perform operation
fmadd.s f10, f13, f24, f17, rne # perform operation
fmadd.s f10, f13, f24, f17, rtz # perform operation
fmadd.s f10, f13, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f24, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x6, 0x819b1c0e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x366503fe # load x3 with value 0x366503fe
sw x3, 0(x2) # store 0x366503fe in memory
flw f2, 0(x2) # load 0x366503fe from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fmadd.s f6, f21, f2, f30, dyn # perform operation
fmadd.s f6, f21, f2, f30, rdn # perform operation
fmadd.s f6, f21, f2, f30, rmm # perform operation
fmadd.s f6, f21, f2, f30, rne # perform operation
fmadd.s f6, f21, f2, f30, rtz # perform operation
fmadd.s f6, f21, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x22, 0x4c40cd89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
li x3, 0x1578ddaf # load x3 with value 0x1578ddaf
sw x3, 0(x2) # store 0x1578ddaf in memory
flw f7, 0(x2) # load 0x1578ddaf from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f22, f31, f7, f27, dyn # perform operation
fmadd.s f22, f31, f7, f27, rdn # perform operation
fmadd.s f22, f31, f7, f27, rmm # perform operation
fmadd.s f22, f31, f7, f27, rne # perform operation
fmadd.s f22, f31, f7, f27, rtz # perform operation
fmadd.s f22, f31, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f31, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f31, f7, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x8, 0x6a06c77d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x1c8d07fe # load x3 with value 0x1c8d07fe
sw x3, 0(x2) # store 0x1c8d07fe in memory
flw f9, 0(x2) # load 0x1c8d07fe from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmadd.s f8, f23, f9, f10, dyn # perform operation
fmadd.s f8, f23, f9, f10, rdn # perform operation
fmadd.s f8, f23, f9, f10, rmm # perform operation
fmadd.s f8, f23, f9, f10, rne # perform operation
fmadd.s f8, f23, f9, f10, rtz # perform operation
fmadd.s f8, f23, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x24, 0xbae25183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x56ce0e1a # load x3 with value 0x56ce0e1a
sw x3, 0(x2) # store 0x56ce0e1a in memory
flw f6, 0(x2) # load 0x56ce0e1a from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f24, f15, f6, f11, dyn # perform operation
fmadd.s f24, f15, f6, f11, rdn # perform operation
fmadd.s f24, f15, f6, f11, rmm # perform operation
fmadd.s f24, f15, f6, f11, rne # perform operation
fmadd.s f24, f15, f6, f11, rtz # perform operation
fmadd.s f24, f15, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x11, 0xe6eb49e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0x885cd0b4 # load x3 with value 0x885cd0b4
sw x3, 0(x2) # store 0x885cd0b4 in memory
flw f1, 0(x2) # load 0x885cd0b4 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fmadd.s f11, f14, f1, f24, dyn # perform operation
fmadd.s f11, f14, f1, f24, rdn # perform operation
fmadd.s f11, f14, f1, f24, rmm # perform operation
fmadd.s f11, f14, f1, f24, rne # perform operation
fmadd.s f11, f14, f1, f24, rtz # perform operation
fmadd.s f11, f14, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x19, 0x660ef43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0x9730cf60 # load x3 with value 0x9730cf60
sw x3, 0(x2) # store 0x9730cf60 in memory
flw f8, 0(x2) # load 0x9730cf60 from memory into f8
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fmadd.s f19, f3, f8, f31, dyn # perform operation
fmadd.s f19, f3, f8, f31, rdn # perform operation
fmadd.s f19, f3, f8, f31, rmm # perform operation
fmadd.s f19, f3, f8, f31, rne # perform operation
fmadd.s f19, f3, f8, f31, rtz # perform operation
fmadd.s f19, f3, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x10, 0x5863985c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
li x3, 0x3510c2c5 # load x3 with value 0x3510c2c5
sw x3, 0(x2) # store 0x3510c2c5 in memory
flw f25, 0(x2) # load 0x3510c2c5 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fmadd.s f10, f12, f25, f4, dyn # perform operation
fmadd.s f10, f12, f25, f4, rdn # perform operation
fmadd.s f10, f12, f25, f4, rmm # perform operation
fmadd.s f10, f12, f25, f4, rne # perform operation
fmadd.s f10, f12, f25, f4, rtz # perform operation
fmadd.s f10, f12, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f25, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x29, 0x25a3a1af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xddda56e6 # load x3 with value 0xddda56e6
sw x3, 0(x2) # store 0xddda56e6 in memory
flw f4, 0(x2) # load 0xddda56e6 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f29, f22, f4, f24, dyn # perform operation
fmadd.s f29, f22, f4, f24, rdn # perform operation
fmadd.s f29, f22, f4, f24, rmm # perform operation
fmadd.s f29, f22, f4, f24, rne # perform operation
fmadd.s f29, f22, f4, f24, rtz # perform operation
fmadd.s f29, f22, f4, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f22, f4, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f22, f4, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f22, f4, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f22, f4, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f22, f4, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x29, 0x68fe0e2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x19eaa88d # load x3 with value 0x19eaa88d
sw x3, 0(x2) # store 0x19eaa88d in memory
flw f26, 0(x2) # load 0x19eaa88d from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f29, f7, f26, f9, dyn # perform operation
fmadd.s f29, f7, f26, f9, rdn # perform operation
fmadd.s f29, f7, f26, f9, rmm # perform operation
fmadd.s f29, f7, f26, f9, rne # perform operation
fmadd.s f29, f7, f26, f9, rtz # perform operation
fmadd.s f29, f7, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f26, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x26, 0x803ba647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xb6727f5e # load x3 with value 0xb6727f5e
sw x3, 0(x2) # store 0xb6727f5e in memory
flw f27, 0(x2) # load 0xb6727f5e from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmadd.s f26, f21, f27, f5, dyn # perform operation
fmadd.s f26, f21, f27, f5, rdn # perform operation
fmadd.s f26, f21, f27, f5, rmm # perform operation
fmadd.s f26, f21, f27, f5, rne # perform operation
fmadd.s f26, f21, f27, f5, rtz # perform operation
fmadd.s f26, f21, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f21, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f21, f27, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x11, 0x5ced95a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0xfaf4981a # load x3 with value 0xfaf4981a
sw x3, 0(x2) # store 0xfaf4981a in memory
flw f22, 0(x2) # load 0xfaf4981a from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f11, f20, f22, f23, dyn # perform operation
fmadd.s f11, f20, f22, f23, rdn # perform operation
fmadd.s f11, f20, f22, f23, rmm # perform operation
fmadd.s f11, f20, f22, f23, rne # perform operation
fmadd.s f11, f20, f22, f23, rtz # perform operation
fmadd.s f11, f20, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f22, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x20, 0x172412ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0xa03a91b2 # load x3 with value 0xa03a91b2
sw x3, 0(x2) # store 0xa03a91b2 in memory
flw f26, 0(x2) # load 0xa03a91b2 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
fmadd.s f20, f9, f26, f28, dyn # perform operation
fmadd.s f20, f9, f26, f28, rdn # perform operation
fmadd.s f20, f9, f26, f28, rmm # perform operation
fmadd.s f20, f9, f26, f28, rne # perform operation
fmadd.s f20, f9, f26, f28, rtz # perform operation
fmadd.s f20, f9, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f26, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x2, 0x9cb85811 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x6c7ff68a # load x3 with value 0x6c7ff68a
sw x3, 0(x2) # store 0x6c7ff68a in memory
flw f17, 0(x2) # load 0x6c7ff68a from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fmadd.s f2, f24, f17, f13, dyn # perform operation
fmadd.s f2, f24, f17, f13, rdn # perform operation
fmadd.s f2, f24, f17, f13, rmm # perform operation
fmadd.s f2, f24, f17, f13, rne # perform operation
fmadd.s f2, f24, f17, f13, rtz # perform operation
fmadd.s f2, f24, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f24, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f24, f17, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x7, 0xcb46af50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x616b21d1 # load x3 with value 0x616b21d1
sw x3, 0(x2) # store 0x616b21d1 in memory
flw f26, 0(x2) # load 0x616b21d1 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmadd.s f7, f30, f26, f27, dyn # perform operation
fmadd.s f7, f30, f26, f27, rdn # perform operation
fmadd.s f7, f30, f26, f27, rmm # perform operation
fmadd.s f7, f30, f26, f27, rne # perform operation
fmadd.s f7, f30, f26, f27, rtz # perform operation
fmadd.s f7, f30, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f26, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x23, 0x2bdb08c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x43155172 # load x3 with value 0x43155172
sw x3, 0(x2) # store 0x43155172 in memory
flw f18, 0(x2) # load 0x43155172 from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmadd.s f23, f19, f18, f10, dyn # perform operation
fmadd.s f23, f19, f18, f10, rdn # perform operation
fmadd.s f23, f19, f18, f10, rmm # perform operation
fmadd.s f23, f19, f18, f10, rne # perform operation
fmadd.s f23, f19, f18, f10, rtz # perform operation
fmadd.s f23, f19, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f18, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x15, 0xc35efdfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x0b4fd599 # load x3 with value 0x0b4fd599
sw x3, 0(x2) # store 0x0b4fd599 in memory
flw f10, 0(x2) # load 0x0b4fd599 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f15, f30, f10, f31, dyn # perform operation
fmadd.s f15, f30, f10, f31, rdn # perform operation
fmadd.s f15, f30, f10, f31, rmm # perform operation
fmadd.s f15, f30, f10, f31, rne # perform operation
fmadd.s f15, f30, f10, f31, rtz # perform operation
fmadd.s f15, f30, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x31, 0xb31a3c28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0xcd91032b # load x3 with value 0xcd91032b
sw x3, 0(x2) # store 0xcd91032b in memory
flw f19, 0(x2) # load 0xcd91032b from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f31, f4, f19, f18, dyn # perform operation
fmadd.s f31, f4, f19, f18, rdn # perform operation
fmadd.s f31, f4, f19, f18, rmm # perform operation
fmadd.s f31, f4, f19, f18, rne # perform operation
fmadd.s f31, f4, f19, f18, rtz # perform operation
fmadd.s f31, f4, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f4, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f4, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f4, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f4, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f4, f19, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x31, 0x281db335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xa0846d15 # load x3 with value 0xa0846d15
sw x3, 0(x2) # store 0xa0846d15 in memory
flw f29, 0(x2) # load 0xa0846d15 from memory into f29
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
fmadd.s f31, f28, f29, f11, dyn # perform operation
fmadd.s f31, f28, f29, f11, rdn # perform operation
fmadd.s f31, f28, f29, f11, rmm # perform operation
fmadd.s f31, f28, f29, f11, rne # perform operation
fmadd.s f31, f28, f29, f11, rtz # perform operation
fmadd.s f31, f28, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f29, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x25, 0xc92de654 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xe6bc6873 # load x3 with value 0xe6bc6873
sw x3, 0(x2) # store 0xe6bc6873 in memory
flw f14, 0(x2) # load 0xe6bc6873 from memory into f14
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f25, f19, f14, f3, dyn # perform operation
fmadd.s f25, f19, f14, f3, rdn # perform operation
fmadd.s f25, f19, f14, f3, rmm # perform operation
fmadd.s f25, f19, f14, f3, rne # perform operation
fmadd.s f25, f19, f14, f3, rtz # perform operation
fmadd.s f25, f19, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f19, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f19, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f19, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f19, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f19, f14, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x10, 0xe7d4e7c4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x302580b5 # load x3 with value 0x302580b5
sw x3, 0(x2) # store 0x302580b5 in memory
flw f27, 0(x2) # load 0x302580b5 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fmadd.s f10, f30, f27, f16, dyn # perform operation
fmadd.s f10, f30, f27, f16, rdn # perform operation
fmadd.s f10, f30, f27, f16, rmm # perform operation
fmadd.s f10, f30, f27, f16, rne # perform operation
fmadd.s f10, f30, f27, f16, rtz # perform operation
fmadd.s f10, f30, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f27, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x12, 0x5cc3b650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x2e314c0c # load x3 with value 0x2e314c0c
sw x3, 0(x2) # store 0x2e314c0c in memory
flw f15, 0(x2) # load 0x2e314c0c from memory into f15
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
fmadd.s f12, f22, f15, f5, dyn # perform operation
fmadd.s f12, f22, f15, f5, rdn # perform operation
fmadd.s f12, f22, f15, f5, rmm # perform operation
fmadd.s f12, f22, f15, f5, rne # perform operation
fmadd.s f12, f22, f15, f5, rtz # perform operation
fmadd.s f12, f22, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x12, 0x62905757 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0xd25c32bb # load x3 with value 0xd25c32bb
sw x3, 0(x2) # store 0xd25c32bb in memory
flw f2, 0(x2) # load 0xd25c32bb from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f12, f26, f2, f14, dyn # perform operation
fmadd.s f12, f26, f2, f14, rdn # perform operation
fmadd.s f12, f26, f2, f14, rmm # perform operation
fmadd.s f12, f26, f2, f14, rne # perform operation
fmadd.s f12, f26, f2, f14, rtz # perform operation
fmadd.s f12, f26, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f2, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x9, 0x6897b719 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xae3b9ab4 # load x3 with value 0xae3b9ab4
sw x3, 0(x2) # store 0xae3b9ab4 in memory
flw f21, 0(x2) # load 0xae3b9ab4 from memory into f21
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmadd.s f9, f29, f21, f1, dyn # perform operation
fmadd.s f9, f29, f21, f1, rdn # perform operation
fmadd.s f9, f29, f21, f1, rmm # perform operation
fmadd.s f9, f29, f21, f1, rne # perform operation
fmadd.s f9, f29, f21, f1, rtz # perform operation
fmadd.s f9, f29, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x7, 0x88c1a2d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xe3da41e6 # load x3 with value 0xe3da41e6
sw x3, 0(x2) # store 0xe3da41e6 in memory
flw f13, 0(x2) # load 0xe3da41e6 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f7, f31, f13, f29, dyn # perform operation
fmadd.s f7, f31, f13, f29, rdn # perform operation
fmadd.s f7, f31, f13, f29, rmm # perform operation
fmadd.s f7, f31, f13, f29, rne # perform operation
fmadd.s f7, f31, f13, f29, rtz # perform operation
fmadd.s f7, f31, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f31, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f31, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x30, 0x67d86c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x1ea78260 # load x3 with value 0x1ea78260
sw x3, 0(x2) # store 0x1ea78260 in memory
flw f15, 0(x2) # load 0x1ea78260 from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmadd.s f30, f20, f15, f24, dyn # perform operation
fmadd.s f30, f20, f15, f24, rdn # perform operation
fmadd.s f30, f20, f15, f24, rmm # perform operation
fmadd.s f30, f20, f15, f24, rne # perform operation
fmadd.s f30, f20, f15, f24, rtz # perform operation
fmadd.s f30, f20, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f15, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x30, 0xf3dbb311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x3841b1ee # load x3 with value 0x3841b1ee
sw x3, 0(x2) # store 0x3841b1ee in memory
flw f20, 0(x2) # load 0x3841b1ee from memory into f20
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f30, f17, f20, f7, dyn # perform operation
fmadd.s f30, f17, f20, f7, rdn # perform operation
fmadd.s f30, f17, f20, f7, rmm # perform operation
fmadd.s f30, f17, f20, f7, rne # perform operation
fmadd.s f30, f17, f20, f7, rtz # perform operation
fmadd.s f30, f17, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x3, 0x2b945e13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0xdc398879 # load x3 with value 0xdc398879
sw x3, 0(x2) # store 0xdc398879 in memory
flw f5, 0(x2) # load 0xdc398879 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f3, f25, f5, f2, dyn # perform operation
fmadd.s f3, f25, f5, f2, rdn # perform operation
fmadd.s f3, f25, f5, f2, rmm # perform operation
fmadd.s f3, f25, f5, f2, rne # perform operation
fmadd.s f3, f25, f5, f2, rtz # perform operation
fmadd.s f3, f25, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f25, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f25, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f25, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f25, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f25, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x3, 0xbbb45c66 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x5df0654a # load x3 with value 0x5df0654a
sw x3, 0(x2) # store 0x5df0654a in memory
flw f31, 0(x2) # load 0x5df0654a from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmadd.s f3, f20, f31, f30, dyn # perform operation
fmadd.s f3, f20, f31, f30, rdn # perform operation
fmadd.s f3, f20, f31, f30, rmm # perform operation
fmadd.s f3, f20, f31, f30, rne # perform operation
fmadd.s f3, f20, f31, f30, rtz # perform operation
fmadd.s f3, f20, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x10, 0x37b48314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xc62aa652 # load x3 with value 0xc62aa652
sw x3, 0(x2) # store 0xc62aa652 in memory
flw f8, 0(x2) # load 0xc62aa652 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmadd.s f10, f29, f8, f26, dyn # perform operation
fmadd.s f10, f29, f8, f26, rdn # perform operation
fmadd.s f10, f29, f8, f26, rmm # perform operation
fmadd.s f10, f29, f8, f26, rne # perform operation
fmadd.s f10, f29, f8, f26, rtz # perform operation
fmadd.s f10, f29, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f29, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f29, f8, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x14, 0xaa58f7e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xf8248c62 # load x3 with value 0xf8248c62
sw x3, 0(x2) # store 0xf8248c62 in memory
flw f31, 0(x2) # load 0xf8248c62 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f14, f18, f31, f17, dyn # perform operation
fmadd.s f14, f18, f31, f17, rdn # perform operation
fmadd.s f14, f18, f31, f17, rmm # perform operation
fmadd.s f14, f18, f31, f17, rne # perform operation
fmadd.s f14, f18, f31, f17, rtz # perform operation
fmadd.s f14, f18, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x27, 0x5a54d206 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x2b09cbd7 # load x3 with value 0x2b09cbd7
sw x3, 0(x2) # store 0x2b09cbd7 in memory
flw f13, 0(x2) # load 0x2b09cbd7 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fmadd.s f27, f19, f13, f17, dyn # perform operation
fmadd.s f27, f19, f13, f17, rdn # perform operation
fmadd.s f27, f19, f13, f17, rmm # perform operation
fmadd.s f27, f19, f13, f17, rne # perform operation
fmadd.s f27, f19, f13, f17, rtz # perform operation
fmadd.s f27, f19, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f19, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f19, f13, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x12, 0xa7d0b379 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x8c33202d # load x3 with value 0x8c33202d
sw x3, 0(x2) # store 0x8c33202d in memory
flw f13, 0(x2) # load 0x8c33202d from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
fmadd.s f12, f30, f13, f4, dyn # perform operation
fmadd.s f12, f30, f13, f4, rdn # perform operation
fmadd.s f12, f30, f13, f4, rmm # perform operation
fmadd.s f12, f30, f13, f4, rne # perform operation
fmadd.s f12, f30, f13, f4, rtz # perform operation
fmadd.s f12, f30, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x17, 0x873fa053 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x5c4277cc # load x3 with value 0x5c4277cc
sw x3, 0(x2) # store 0x5c4277cc in memory
flw f14, 0(x2) # load 0x5c4277cc from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmadd.s f17, f2, f14, f30, dyn # perform operation
fmadd.s f17, f2, f14, f30, rdn # perform operation
fmadd.s f17, f2, f14, f30, rmm # perform operation
fmadd.s f17, f2, f14, f30, rne # perform operation
fmadd.s f17, f2, f14, f30, rtz # perform operation
fmadd.s f17, f2, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f14, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x28, 0x032d86c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x14faa410 # load x3 with value 0x14faa410
sw x3, 0(x2) # store 0x14faa410 in memory
flw f13, 0(x2) # load 0x14faa410 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f28, f2, f13, f26, dyn # perform operation
fmadd.s f28, f2, f13, f26, rdn # perform operation
fmadd.s f28, f2, f13, f26, rmm # perform operation
fmadd.s f28, f2, f13, f26, rne # perform operation
fmadd.s f28, f2, f13, f26, rtz # perform operation
fmadd.s f28, f2, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f13, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x5, 0x7fe92f9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0xf3ba971f # load x3 with value 0xf3ba971f
sw x3, 0(x2) # store 0xf3ba971f in memory
flw f28, 0(x2) # load 0xf3ba971f from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fmadd.s f5, f16, f28, f29, dyn # perform operation
fmadd.s f5, f16, f28, f29, rdn # perform operation
fmadd.s f5, f16, f28, f29, rmm # perform operation
fmadd.s f5, f16, f28, f29, rne # perform operation
fmadd.s f5, f16, f28, f29, rtz # perform operation
fmadd.s f5, f16, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f16, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f16, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x22, 0xf6f74d1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x047ca5d0 # load x3 with value 0x047ca5d0
sw x3, 0(x2) # store 0x047ca5d0 in memory
flw f20, 0(x2) # load 0x047ca5d0 from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmadd.s f22, f9, f20, f21, dyn # perform operation
fmadd.s f22, f9, f20, f21, rdn # perform operation
fmadd.s f22, f9, f20, f21, rmm # perform operation
fmadd.s f22, f9, f20, f21, rne # perform operation
fmadd.s f22, f9, f20, f21, rtz # perform operation
fmadd.s f22, f9, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f9, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x6, 0x591b6059 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x193ee832 # load x3 with value 0x193ee832
sw x3, 0(x2) # store 0x193ee832 in memory
flw f23, 0(x2) # load 0x193ee832 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmadd.s f6, f7, f23, f2, dyn # perform operation
fmadd.s f6, f7, f23, f2, rdn # perform operation
fmadd.s f6, f7, f23, f2, rmm # perform operation
fmadd.s f6, f7, f23, f2, rne # perform operation
fmadd.s f6, f7, f23, f2, rtz # perform operation
fmadd.s f6, f7, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f23, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x20, 0xe9442aa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0xd4b6bf09 # load x3 with value 0xd4b6bf09
sw x3, 0(x2) # store 0xd4b6bf09 in memory
flw f26, 0(x2) # load 0xd4b6bf09 from memory into f26
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
fmadd.s f20, f8, f26, f24, dyn # perform operation
fmadd.s f20, f8, f26, f24, rdn # perform operation
fmadd.s f20, f8, f26, f24, rmm # perform operation
fmadd.s f20, f8, f26, f24, rne # perform operation
fmadd.s f20, f8, f26, f24, rtz # perform operation
fmadd.s f20, f8, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x20, 0x79589075 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
li x3, 0x0dbcecd0 # load x3 with value 0x0dbcecd0
sw x3, 0(x2) # store 0x0dbcecd0 in memory
flw f14, 0(x2) # load 0x0dbcecd0 from memory into f14
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
fmadd.s f20, f2, f14, f17, dyn # perform operation
fmadd.s f20, f2, f14, f17, rdn # perform operation
fmadd.s f20, f2, f14, f17, rmm # perform operation
fmadd.s f20, f2, f14, f17, rne # perform operation
fmadd.s f20, f2, f14, f17, rtz # perform operation
fmadd.s f20, f2, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f2, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f2, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f2, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f2, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f2, f14, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x7, 0x2dbe13dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x7f6f3202 # load x3 with value 0x7f6f3202
sw x3, 0(x2) # store 0x7f6f3202 in memory
flw f23, 0(x2) # load 0x7f6f3202 from memory into f23
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmadd.s f7, f12, f23, f25, dyn # perform operation
fmadd.s f7, f12, f23, f25, rdn # perform operation
fmadd.s f7, f12, f23, f25, rmm # perform operation
fmadd.s f7, f12, f23, f25, rne # perform operation
fmadd.s f7, f12, f23, f25, rtz # perform operation
fmadd.s f7, f12, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f23, f25 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0xabe2ef30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe76cd5a9 # load x3 with value 0xe76cd5a9
sw x3, 0(x2) # store 0xe76cd5a9 in memory
flw f6, 0(x2) # load 0xe76cd5a9 from memory into f6
li x3, 0x7509c4f5 # load x3 with value 0x7509c4f5
sw x3, 0(x2) # store 0x7509c4f5 in memory
flw f12, 0(x2) # load 0x7509c4f5 from memory into f12
li x3, 0x6a4585e1 # load x3 with value 0x6a4585e1
sw x3, 0(x2) # store 0x6a4585e1 in memory
flw f25, 0(x2) # load 0x6a4585e1 from memory into f25
fmadd.s f0, f6, f12, f25 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x2e0eb917 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd6179fba # load x3 with value 0xd6179fba
sw x3, 0(x2) # store 0xd6179fba in memory
flw f5, 0(x2) # load 0xd6179fba from memory into f5
li x3, 0xc9181558 # load x3 with value 0xc9181558
sw x3, 0(x2) # store 0xc9181558 in memory
flw f26, 0(x2) # load 0xc9181558 from memory into f26
li x3, 0x760fb485 # load x3 with value 0x760fb485
sw x3, 0(x2) # store 0x760fb485 in memory
flw f16, 0(x2) # load 0x760fb485 from memory into f16
fmadd.s f1, f5, f26, f16 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xd5d2788a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9126ded6 # load x3 with value 0x9126ded6
sw x3, 0(x2) # store 0x9126ded6 in memory
flw f19, 0(x2) # load 0x9126ded6 from memory into f19
li x3, 0x8e85ab2d # load x3 with value 0x8e85ab2d
sw x3, 0(x2) # store 0x8e85ab2d in memory
flw f23, 0(x2) # load 0x8e85ab2d from memory into f23
li x3, 0xb7ee56ac # load x3 with value 0xb7ee56ac
sw x3, 0(x2) # store 0xb7ee56ac in memory
flw f20, 0(x2) # load 0xb7ee56ac from memory into f20
fmadd.s f2, f19, f23, f20 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0xc6b69d55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x916ecc7d # load x3 with value 0x916ecc7d
sw x3, 0(x2) # store 0x916ecc7d in memory
flw f16, 0(x2) # load 0x916ecc7d from memory into f16
li x3, 0x9a009c08 # load x3 with value 0x9a009c08
sw x3, 0(x2) # store 0x9a009c08 in memory
flw f20, 0(x2) # load 0x9a009c08 from memory into f20
li x3, 0x2a3fa629 # load x3 with value 0x2a3fa629
sw x3, 0(x2) # store 0x2a3fa629 in memory
flw f6, 0(x2) # load 0x2a3fa629 from memory into f6
fmadd.s f3, f16, f20, f6 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x64cf1ca4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5e35cf1b # load x3 with value 0x5e35cf1b
sw x3, 0(x2) # store 0x5e35cf1b in memory
flw f27, 0(x2) # load 0x5e35cf1b from memory into f27
li x3, 0x730d87d3 # load x3 with value 0x730d87d3
sw x3, 0(x2) # store 0x730d87d3 in memory
flw f6, 0(x2) # load 0x730d87d3 from memory into f6
li x3, 0x4a8d24ce # load x3 with value 0x4a8d24ce
sw x3, 0(x2) # store 0x4a8d24ce in memory
flw f28, 0(x2) # load 0x4a8d24ce from memory into f28
fmadd.s f4, f27, f6, f28 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x5f309002 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac7d76a7 # load x3 with value 0xac7d76a7
sw x3, 0(x2) # store 0xac7d76a7 in memory
flw f8, 0(x2) # load 0xac7d76a7 from memory into f8
li x3, 0xd157e8f4 # load x3 with value 0xd157e8f4
sw x3, 0(x2) # store 0xd157e8f4 in memory
flw f6, 0(x2) # load 0xd157e8f4 from memory into f6
li x3, 0x0ad30159 # load x3 with value 0x0ad30159
sw x3, 0(x2) # store 0x0ad30159 in memory
flw f18, 0(x2) # load 0x0ad30159 from memory into f18
fmadd.s f5, f8, f6, f18 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0xe456532a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed468464 # load x3 with value 0xed468464
sw x3, 0(x2) # store 0xed468464 in memory
flw f19, 0(x2) # load 0xed468464 from memory into f19
li x3, 0x9b19053a # load x3 with value 0x9b19053a
sw x3, 0(x2) # store 0x9b19053a in memory
flw f18, 0(x2) # load 0x9b19053a from memory into f18
li x3, 0xd6f9e152 # load x3 with value 0xd6f9e152
sw x3, 0(x2) # store 0xd6f9e152 in memory
flw f2, 0(x2) # load 0xd6f9e152 from memory into f2
fmadd.s f6, f19, f18, f2 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x518bf8b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee402865 # load x3 with value 0xee402865
sw x3, 0(x2) # store 0xee402865 in memory
flw f7, 0(x2) # load 0xee402865 from memory into f7
li x3, 0x4f020bf5 # load x3 with value 0x4f020bf5
sw x3, 0(x2) # store 0x4f020bf5 in memory
flw f14, 0(x2) # load 0x4f020bf5 from memory into f14
li x3, 0x3a5c9954 # load x3 with value 0x3a5c9954
sw x3, 0(x2) # store 0x3a5c9954 in memory
flw f15, 0(x2) # load 0x3a5c9954 from memory into f15
fmadd.s f7, f7, f14, f15 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x94b6af65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc57cc9be # load x3 with value 0xc57cc9be
sw x3, 0(x2) # store 0xc57cc9be in memory
flw f19, 0(x2) # load 0xc57cc9be from memory into f19
li x3, 0x42a8575d # load x3 with value 0x42a8575d
sw x3, 0(x2) # store 0x42a8575d in memory
flw f17, 0(x2) # load 0x42a8575d from memory into f17
li x3, 0xa05d517e # load x3 with value 0xa05d517e
sw x3, 0(x2) # store 0xa05d517e in memory
flw f10, 0(x2) # load 0xa05d517e from memory into f10
fmadd.s f8, f19, f17, f10 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0xe04e1b9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d1bdc07 # load x3 with value 0x8d1bdc07
sw x3, 0(x2) # store 0x8d1bdc07 in memory
flw f31, 0(x2) # load 0x8d1bdc07 from memory into f31
li x3, 0x76a17202 # load x3 with value 0x76a17202
sw x3, 0(x2) # store 0x76a17202 in memory
flw f5, 0(x2) # load 0x76a17202 from memory into f5
li x3, 0x7fb924b8 # load x3 with value 0x7fb924b8
sw x3, 0(x2) # store 0x7fb924b8 in memory
flw f2, 0(x2) # load 0x7fb924b8 from memory into f2
fmadd.s f9, f31, f5, f2 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0x87abdc32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2938131d # load x3 with value 0x2938131d
sw x3, 0(x2) # store 0x2938131d in memory
flw f15, 0(x2) # load 0x2938131d from memory into f15
li x3, 0x0038897a # load x3 with value 0x0038897a
sw x3, 0(x2) # store 0x0038897a in memory
flw f5, 0(x2) # load 0x0038897a from memory into f5
li x3, 0x478c798c # load x3 with value 0x478c798c
sw x3, 0(x2) # store 0x478c798c in memory
flw f4, 0(x2) # load 0x478c798c from memory into f4
fmadd.s f10, f15, f5, f4 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0xf1d89da0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc6d4b794 # load x3 with value 0xc6d4b794
sw x3, 0(x2) # store 0xc6d4b794 in memory
flw f2, 0(x2) # load 0xc6d4b794 from memory into f2
li x3, 0x9ed0c3e7 # load x3 with value 0x9ed0c3e7
sw x3, 0(x2) # store 0x9ed0c3e7 in memory
flw f27, 0(x2) # load 0x9ed0c3e7 from memory into f27
li x3, 0xa07f9b5a # load x3 with value 0xa07f9b5a
sw x3, 0(x2) # store 0xa07f9b5a in memory
flw f1, 0(x2) # load 0xa07f9b5a from memory into f1
fmadd.s f11, f2, f27, f1 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0x44bdedd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0baa142 # load x3 with value 0xf0baa142
sw x3, 0(x2) # store 0xf0baa142 in memory
flw f24, 0(x2) # load 0xf0baa142 from memory into f24
li x3, 0xb22c5276 # load x3 with value 0xb22c5276
sw x3, 0(x2) # store 0xb22c5276 in memory
flw f8, 0(x2) # load 0xb22c5276 from memory into f8
li x3, 0x6fdbfd6b # load x3 with value 0x6fdbfd6b
sw x3, 0(x2) # store 0x6fdbfd6b in memory
flw f27, 0(x2) # load 0x6fdbfd6b from memory into f27
fmadd.s f12, f24, f8, f27 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x42a936e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x774a1d2d # load x3 with value 0x774a1d2d
sw x3, 0(x2) # store 0x774a1d2d in memory
flw f8, 0(x2) # load 0x774a1d2d from memory into f8
li x3, 0xaa79bbc9 # load x3 with value 0xaa79bbc9
sw x3, 0(x2) # store 0xaa79bbc9 in memory
flw f24, 0(x2) # load 0xaa79bbc9 from memory into f24
li x3, 0xa67e7f7c # load x3 with value 0xa67e7f7c
sw x3, 0(x2) # store 0xa67e7f7c in memory
flw f30, 0(x2) # load 0xa67e7f7c from memory into f30
fmadd.s f13, f8, f24, f30 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x7d7d1dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x38d10235 # load x3 with value 0x38d10235
sw x3, 0(x2) # store 0x38d10235 in memory
flw f22, 0(x2) # load 0x38d10235 from memory into f22
li x3, 0x783bef43 # load x3 with value 0x783bef43
sw x3, 0(x2) # store 0x783bef43 in memory
flw f10, 0(x2) # load 0x783bef43 from memory into f10
li x3, 0xde5abbb4 # load x3 with value 0xde5abbb4
sw x3, 0(x2) # store 0xde5abbb4 in memory
flw f4, 0(x2) # load 0xde5abbb4 from memory into f4
fmadd.s f14, f22, f10, f4 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xa0446326 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x097e0dfb # load x3 with value 0x097e0dfb
sw x3, 0(x2) # store 0x097e0dfb in memory
flw f4, 0(x2) # load 0x097e0dfb from memory into f4
li x3, 0xa8ccea03 # load x3 with value 0xa8ccea03
sw x3, 0(x2) # store 0xa8ccea03 in memory
flw f9, 0(x2) # load 0xa8ccea03 from memory into f9
li x3, 0x132e1145 # load x3 with value 0x132e1145
sw x3, 0(x2) # store 0x132e1145 in memory
flw f22, 0(x2) # load 0x132e1145 from memory into f22
fmadd.s f15, f4, f9, f22 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x85e1899b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x126f6f48 # load x3 with value 0x126f6f48
sw x3, 0(x2) # store 0x126f6f48 in memory
flw f8, 0(x2) # load 0x126f6f48 from memory into f8
li x3, 0x0aa9f3c8 # load x3 with value 0x0aa9f3c8
sw x3, 0(x2) # store 0x0aa9f3c8 in memory
flw f18, 0(x2) # load 0x0aa9f3c8 from memory into f18
li x3, 0x1ccffcf8 # load x3 with value 0x1ccffcf8
sw x3, 0(x2) # store 0x1ccffcf8 in memory
flw f14, 0(x2) # load 0x1ccffcf8 from memory into f14
fmadd.s f16, f8, f18, f14 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0x9a2e23c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c06be78 # load x3 with value 0x7c06be78
sw x3, 0(x2) # store 0x7c06be78 in memory
flw f25, 0(x2) # load 0x7c06be78 from memory into f25
li x3, 0x2c62dc00 # load x3 with value 0x2c62dc00
sw x3, 0(x2) # store 0x2c62dc00 in memory
flw f18, 0(x2) # load 0x2c62dc00 from memory into f18
li x3, 0x6fb95a1e # load x3 with value 0x6fb95a1e
sw x3, 0(x2) # store 0x6fb95a1e in memory
flw f31, 0(x2) # load 0x6fb95a1e from memory into f31
fmadd.s f17, f25, f18, f31 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x690de327 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83c1b9f7 # load x3 with value 0x83c1b9f7
sw x3, 0(x2) # store 0x83c1b9f7 in memory
flw f26, 0(x2) # load 0x83c1b9f7 from memory into f26
li x3, 0x57665390 # load x3 with value 0x57665390
sw x3, 0(x2) # store 0x57665390 in memory
flw f23, 0(x2) # load 0x57665390 from memory into f23
li x3, 0xd46df23c # load x3 with value 0xd46df23c
sw x3, 0(x2) # store 0xd46df23c in memory
flw f9, 0(x2) # load 0xd46df23c from memory into f9
fmadd.s f18, f26, f23, f9 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0xd25ac6d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x30e2ce7f # load x3 with value 0x30e2ce7f
sw x3, 0(x2) # store 0x30e2ce7f in memory
flw f7, 0(x2) # load 0x30e2ce7f from memory into f7
li x3, 0x4de31a3f # load x3 with value 0x4de31a3f
sw x3, 0(x2) # store 0x4de31a3f in memory
flw f12, 0(x2) # load 0x4de31a3f from memory into f12
li x3, 0x24a262ae # load x3 with value 0x24a262ae
sw x3, 0(x2) # store 0x24a262ae in memory
flw f31, 0(x2) # load 0x24a262ae from memory into f31
fmadd.s f19, f7, f12, f31 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0xd38ff017 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x44db5c15 # load x3 with value 0x44db5c15
sw x3, 0(x2) # store 0x44db5c15 in memory
flw f15, 0(x2) # load 0x44db5c15 from memory into f15
li x3, 0xf288f765 # load x3 with value 0xf288f765
sw x3, 0(x2) # store 0xf288f765 in memory
flw f6, 0(x2) # load 0xf288f765 from memory into f6
li x3, 0x2e28513e # load x3 with value 0x2e28513e
sw x3, 0(x2) # store 0x2e28513e in memory
flw f14, 0(x2) # load 0x2e28513e from memory into f14
fmadd.s f20, f15, f6, f14 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x53915077 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32bfb8de # load x3 with value 0x32bfb8de
sw x3, 0(x2) # store 0x32bfb8de in memory
flw f3, 0(x2) # load 0x32bfb8de from memory into f3
li x3, 0x0def01d2 # load x3 with value 0x0def01d2
sw x3, 0(x2) # store 0x0def01d2 in memory
flw f23, 0(x2) # load 0x0def01d2 from memory into f23
li x3, 0xedee76ae # load x3 with value 0xedee76ae
sw x3, 0(x2) # store 0xedee76ae in memory
flw f29, 0(x2) # load 0xedee76ae from memory into f29
fmadd.s f21, f3, f23, f29 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x50bb06d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa66c865f # load x3 with value 0xa66c865f
sw x3, 0(x2) # store 0xa66c865f in memory
flw f18, 0(x2) # load 0xa66c865f from memory into f18
li x3, 0x12053b57 # load x3 with value 0x12053b57
sw x3, 0(x2) # store 0x12053b57 in memory
flw f24, 0(x2) # load 0x12053b57 from memory into f24
li x3, 0x8ee73fd9 # load x3 with value 0x8ee73fd9
sw x3, 0(x2) # store 0x8ee73fd9 in memory
flw f19, 0(x2) # load 0x8ee73fd9 from memory into f19
fmadd.s f22, f18, f24, f19 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0xfdc185d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8caef4d7 # load x3 with value 0x8caef4d7
sw x3, 0(x2) # store 0x8caef4d7 in memory
flw f17, 0(x2) # load 0x8caef4d7 from memory into f17
li x3, 0x86c88b57 # load x3 with value 0x86c88b57
sw x3, 0(x2) # store 0x86c88b57 in memory
flw f31, 0(x2) # load 0x86c88b57 from memory into f31
li x3, 0xfb561269 # load x3 with value 0xfb561269
sw x3, 0(x2) # store 0xfb561269 in memory
flw f26, 0(x2) # load 0xfb561269 from memory into f26
fmadd.s f23, f17, f31, f26 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0xc7e9b4f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x886fe9f5 # load x3 with value 0x886fe9f5
sw x3, 0(x2) # store 0x886fe9f5 in memory
flw f27, 0(x2) # load 0x886fe9f5 from memory into f27
li x3, 0x95902e73 # load x3 with value 0x95902e73
sw x3, 0(x2) # store 0x95902e73 in memory
flw f9, 0(x2) # load 0x95902e73 from memory into f9
li x3, 0x6cbfbc8d # load x3 with value 0x6cbfbc8d
sw x3, 0(x2) # store 0x6cbfbc8d in memory
flw f17, 0(x2) # load 0x6cbfbc8d from memory into f17
fmadd.s f24, f27, f9, f17 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x9de19814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb2447b70 # load x3 with value 0xb2447b70
sw x3, 0(x2) # store 0xb2447b70 in memory
flw f31, 0(x2) # load 0xb2447b70 from memory into f31
li x3, 0x79d4f644 # load x3 with value 0x79d4f644
sw x3, 0(x2) # store 0x79d4f644 in memory
flw f15, 0(x2) # load 0x79d4f644 from memory into f15
li x3, 0xb7a732d2 # load x3 with value 0xb7a732d2
sw x3, 0(x2) # store 0xb7a732d2 in memory
flw f12, 0(x2) # load 0xb7a732d2 from memory into f12
fmadd.s f25, f31, f15, f12 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x1d15c9ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a1c80ab # load x3 with value 0x4a1c80ab
sw x3, 0(x2) # store 0x4a1c80ab in memory
flw f22, 0(x2) # load 0x4a1c80ab from memory into f22
li x3, 0x4e831d26 # load x3 with value 0x4e831d26
sw x3, 0(x2) # store 0x4e831d26 in memory
flw f19, 0(x2) # load 0x4e831d26 from memory into f19
li x3, 0x50ae380b # load x3 with value 0x50ae380b
sw x3, 0(x2) # store 0x50ae380b in memory
flw f1, 0(x2) # load 0x50ae380b from memory into f1
fmadd.s f26, f22, f19, f1 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0xa26846be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x644ab0a3 # load x3 with value 0x644ab0a3
sw x3, 0(x2) # store 0x644ab0a3 in memory
flw f30, 0(x2) # load 0x644ab0a3 from memory into f30
li x3, 0x71454f52 # load x3 with value 0x71454f52
sw x3, 0(x2) # store 0x71454f52 in memory
flw f24, 0(x2) # load 0x71454f52 from memory into f24
li x3, 0xe046c018 # load x3 with value 0xe046c018
sw x3, 0(x2) # store 0xe046c018 in memory
flw f25, 0(x2) # load 0xe046c018 from memory into f25
fmadd.s f27, f30, f24, f25 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x1a904275 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe92d02b0 # load x3 with value 0xe92d02b0
sw x3, 0(x2) # store 0xe92d02b0 in memory
flw f1, 0(x2) # load 0xe92d02b0 from memory into f1
li x3, 0x39cea9aa # load x3 with value 0x39cea9aa
sw x3, 0(x2) # store 0x39cea9aa in memory
flw f12, 0(x2) # load 0x39cea9aa from memory into f12
li x3, 0x69964ba9 # load x3 with value 0x69964ba9
sw x3, 0(x2) # store 0x69964ba9 in memory
flw f14, 0(x2) # load 0x69964ba9 from memory into f14
fmadd.s f28, f1, f12, f14 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x17cf131e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cb0b78f # load x3 with value 0x3cb0b78f
sw x3, 0(x2) # store 0x3cb0b78f in memory
flw f24, 0(x2) # load 0x3cb0b78f from memory into f24
li x3, 0x2c11d9fc # load x3 with value 0x2c11d9fc
sw x3, 0(x2) # store 0x2c11d9fc in memory
flw f31, 0(x2) # load 0x2c11d9fc from memory into f31
li x3, 0xb21e8254 # load x3 with value 0xb21e8254
sw x3, 0(x2) # store 0xb21e8254 in memory
flw f27, 0(x2) # load 0xb21e8254 from memory into f27
fmadd.s f29, f24, f31, f27 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x157f9dd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6728f04f # load x3 with value 0x6728f04f
sw x3, 0(x2) # store 0x6728f04f in memory
flw f21, 0(x2) # load 0x6728f04f from memory into f21
li x3, 0xb2e276a6 # load x3 with value 0xb2e276a6
sw x3, 0(x2) # store 0xb2e276a6 in memory
flw f18, 0(x2) # load 0xb2e276a6 from memory into f18
li x3, 0xefa3fb3e # load x3 with value 0xefa3fb3e
sw x3, 0(x2) # store 0xefa3fb3e in memory
flw f5, 0(x2) # load 0xefa3fb3e from memory into f5
fmadd.s f30, f21, f18, f5 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0x05cf22c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x291116db # load x3 with value 0x291116db
sw x3, 0(x2) # store 0x291116db in memory
flw f18, 0(x2) # load 0x291116db from memory into f18
li x3, 0xc003ae08 # load x3 with value 0xc003ae08
sw x3, 0(x2) # store 0xc003ae08 in memory
flw f2, 0(x2) # load 0xc003ae08 from memory into f2
li x3, 0xabde93b8 # load x3 with value 0xabde93b8
sw x3, 0(x2) # store 0xabde93b8 in memory
flw f9, 0(x2) # load 0xabde93b8 from memory into f9
fmadd.s f31, f18, f2, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x7, 0x0be0b370 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x448d5115 # load x3 with value 0x448d5115
sw x3, 0(x2) # store 0x448d5115 in memory
flw f0, 0(x2) # load 0x448d5115 from memory into f0
li x3, 0xab2a7c04 # load x3 with value 0xab2a7c04
sw x3, 0(x2) # store 0xab2a7c04 in memory
flw f10, 0(x2) # load 0xab2a7c04 from memory into f10
li x3, 0x0d8634c7 # load x3 with value 0x0d8634c7
sw x3, 0(x2) # store 0x0d8634c7 in memory
flw f17, 0(x2) # load 0x0d8634c7 from memory into f17
fmadd.s f7, f0, f10, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x16, 0x0bb7a212 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2c89ceec # load x3 with value 0x2c89ceec
sw x3, 0(x2) # store 0x2c89ceec in memory
flw f1, 0(x2) # load 0x2c89ceec from memory into f1
li x3, 0x86c53f88 # load x3 with value 0x86c53f88
sw x3, 0(x2) # store 0x86c53f88 in memory
flw f19, 0(x2) # load 0x86c53f88 from memory into f19
li x3, 0x004de8a4 # load x3 with value 0x004de8a4
sw x3, 0(x2) # store 0x004de8a4 in memory
flw f31, 0(x2) # load 0x004de8a4 from memory into f31
fmadd.s f16, f1, f19, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x9, 0xa44ac637 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4a9291c4 # load x3 with value 0x4a9291c4
sw x3, 0(x2) # store 0x4a9291c4 in memory
flw f2, 0(x2) # load 0x4a9291c4 from memory into f2
li x3, 0xff303968 # load x3 with value 0xff303968
sw x3, 0(x2) # store 0xff303968 in memory
flw f31, 0(x2) # load 0xff303968 from memory into f31
li x3, 0x1a5ecd75 # load x3 with value 0x1a5ecd75
sw x3, 0(x2) # store 0x1a5ecd75 in memory
flw f24, 0(x2) # load 0x1a5ecd75 from memory into f24
fmadd.s f9, f2, f31, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x27, 0x929dfb9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfa2f8d0e # load x3 with value 0xfa2f8d0e
sw x3, 0(x2) # store 0xfa2f8d0e in memory
flw f3, 0(x2) # load 0xfa2f8d0e from memory into f3
li x3, 0xf2aa0de8 # load x3 with value 0xf2aa0de8
sw x3, 0(x2) # store 0xf2aa0de8 in memory
flw f16, 0(x2) # load 0xf2aa0de8 from memory into f16
li x3, 0x9681bc47 # load x3 with value 0x9681bc47
sw x3, 0(x2) # store 0x9681bc47 in memory
flw f12, 0(x2) # load 0x9681bc47 from memory into f12
fmadd.s f27, f3, f16, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x15, 0x639bcdcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68261a69 # load x3 with value 0x68261a69
sw x3, 0(x2) # store 0x68261a69 in memory
flw f4, 0(x2) # load 0x68261a69 from memory into f4
li x3, 0x26436ff6 # load x3 with value 0x26436ff6
sw x3, 0(x2) # store 0x26436ff6 in memory
flw f30, 0(x2) # load 0x26436ff6 from memory into f30
li x3, 0x9b13b862 # load x3 with value 0x9b13b862
sw x3, 0(x2) # store 0x9b13b862 in memory
flw f17, 0(x2) # load 0x9b13b862 from memory into f17
fmadd.s f15, f4, f30, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x26, 0xc8c017ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01b64f90 # load x3 with value 0x01b64f90
sw x3, 0(x2) # store 0x01b64f90 in memory
flw f5, 0(x2) # load 0x01b64f90 from memory into f5
li x3, 0x3141760e # load x3 with value 0x3141760e
sw x3, 0(x2) # store 0x3141760e in memory
flw f12, 0(x2) # load 0x3141760e from memory into f12
li x3, 0xd550acfc # load x3 with value 0xd550acfc
sw x3, 0(x2) # store 0xd550acfc in memory
flw f29, 0(x2) # load 0xd550acfc from memory into f29
fmadd.s f26, f5, f12, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x31, 0xbae8d5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x91280a28 # load x3 with value 0x91280a28
sw x3, 0(x2) # store 0x91280a28 in memory
flw f6, 0(x2) # load 0x91280a28 from memory into f6
li x3, 0x7e3f686a # load x3 with value 0x7e3f686a
sw x3, 0(x2) # store 0x7e3f686a in memory
flw f11, 0(x2) # load 0x7e3f686a from memory into f11
li x3, 0x61c8b39c # load x3 with value 0x61c8b39c
sw x3, 0(x2) # store 0x61c8b39c in memory
flw f19, 0(x2) # load 0x61c8b39c from memory into f19
fmadd.s f31, f6, f11, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x14, 0x03d0e48c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8717dce8 # load x3 with value 0x8717dce8
sw x3, 0(x2) # store 0x8717dce8 in memory
flw f7, 0(x2) # load 0x8717dce8 from memory into f7
li x3, 0x54b16971 # load x3 with value 0x54b16971
sw x3, 0(x2) # store 0x54b16971 in memory
flw f2, 0(x2) # load 0x54b16971 from memory into f2
li x3, 0x8bdc3428 # load x3 with value 0x8bdc3428
sw x3, 0(x2) # store 0x8bdc3428 in memory
flw f29, 0(x2) # load 0x8bdc3428 from memory into f29
fmadd.s f14, f7, f2, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x21, 0x09e8bb6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x71d1e070 # load x3 with value 0x71d1e070
sw x3, 0(x2) # store 0x71d1e070 in memory
flw f8, 0(x2) # load 0x71d1e070 from memory into f8
li x3, 0xc2a79db3 # load x3 with value 0xc2a79db3
sw x3, 0(x2) # store 0xc2a79db3 in memory
flw f12, 0(x2) # load 0xc2a79db3 from memory into f12
li x3, 0x47be5822 # load x3 with value 0x47be5822
sw x3, 0(x2) # store 0x47be5822 in memory
flw f15, 0(x2) # load 0x47be5822 from memory into f15
fmadd.s f21, f8, f12, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x7, 0x41323fed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbbd47a36 # load x3 with value 0xbbd47a36
sw x3, 0(x2) # store 0xbbd47a36 in memory
flw f9, 0(x2) # load 0xbbd47a36 from memory into f9
li x3, 0xebcc7b7e # load x3 with value 0xebcc7b7e
sw x3, 0(x2) # store 0xebcc7b7e in memory
flw f20, 0(x2) # load 0xebcc7b7e from memory into f20
li x3, 0xe9353910 # load x3 with value 0xe9353910
sw x3, 0(x2) # store 0xe9353910 in memory
flw f25, 0(x2) # load 0xe9353910 from memory into f25
fmadd.s f7, f9, f20, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x28, 0x51fd995e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e5e9120 # load x3 with value 0x9e5e9120
sw x3, 0(x2) # store 0x9e5e9120 in memory
flw f10, 0(x2) # load 0x9e5e9120 from memory into f10
li x3, 0x2e0c5abb # load x3 with value 0x2e0c5abb
sw x3, 0(x2) # store 0x2e0c5abb in memory
flw f12, 0(x2) # load 0x2e0c5abb from memory into f12
li x3, 0xb42aaf93 # load x3 with value 0xb42aaf93
sw x3, 0(x2) # store 0xb42aaf93 in memory
flw f21, 0(x2) # load 0xb42aaf93 from memory into f21
fmadd.s f28, f10, f12, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x19, 0xd06d0f11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbaf837a7 # load x3 with value 0xbaf837a7
sw x3, 0(x2) # store 0xbaf837a7 in memory
flw f11, 0(x2) # load 0xbaf837a7 from memory into f11
li x3, 0x14043f96 # load x3 with value 0x14043f96
sw x3, 0(x2) # store 0x14043f96 in memory
flw f10, 0(x2) # load 0x14043f96 from memory into f10
li x3, 0xff3b609b # load x3 with value 0xff3b609b
sw x3, 0(x2) # store 0xff3b609b in memory
flw f20, 0(x2) # load 0xff3b609b from memory into f20
fmadd.s f19, f11, f10, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x4, 0xc26a8324 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdd701304 # load x3 with value 0xdd701304
sw x3, 0(x2) # store 0xdd701304 in memory
flw f12, 0(x2) # load 0xdd701304 from memory into f12
li x3, 0x7d3c9707 # load x3 with value 0x7d3c9707
sw x3, 0(x2) # store 0x7d3c9707 in memory
flw f30, 0(x2) # load 0x7d3c9707 from memory into f30
li x3, 0x6dea161c # load x3 with value 0x6dea161c
sw x3, 0(x2) # store 0x6dea161c in memory
flw f18, 0(x2) # load 0x6dea161c from memory into f18
fmadd.s f4, f12, f30, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x19, 0xd90abb5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe07ec2bf # load x3 with value 0xe07ec2bf
sw x3, 0(x2) # store 0xe07ec2bf in memory
flw f13, 0(x2) # load 0xe07ec2bf from memory into f13
li x3, 0x9430a271 # load x3 with value 0x9430a271
sw x3, 0(x2) # store 0x9430a271 in memory
flw f24, 0(x2) # load 0x9430a271 from memory into f24
li x3, 0x11ab62d8 # load x3 with value 0x11ab62d8
sw x3, 0(x2) # store 0x11ab62d8 in memory
flw f7, 0(x2) # load 0x11ab62d8 from memory into f7
fmadd.s f19, f13, f24, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x25, 0xb7510971 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb234dfaf # load x3 with value 0xb234dfaf
sw x3, 0(x2) # store 0xb234dfaf in memory
flw f14, 0(x2) # load 0xb234dfaf from memory into f14
li x3, 0xa3c4ba4d # load x3 with value 0xa3c4ba4d
sw x3, 0(x2) # store 0xa3c4ba4d in memory
flw f12, 0(x2) # load 0xa3c4ba4d from memory into f12
li x3, 0x01e19b68 # load x3 with value 0x01e19b68
sw x3, 0(x2) # store 0x01e19b68 in memory
flw f18, 0(x2) # load 0x01e19b68 from memory into f18
fmadd.s f25, f14, f12, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x23, 0xd9637396 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ef77b1b # load x3 with value 0x9ef77b1b
sw x3, 0(x2) # store 0x9ef77b1b in memory
flw f15, 0(x2) # load 0x9ef77b1b from memory into f15
li x3, 0xa5228de6 # load x3 with value 0xa5228de6
sw x3, 0(x2) # store 0xa5228de6 in memory
flw f20, 0(x2) # load 0xa5228de6 from memory into f20
li x3, 0xd67ac74b # load x3 with value 0xd67ac74b
sw x3, 0(x2) # store 0xd67ac74b in memory
flw f6, 0(x2) # load 0xd67ac74b from memory into f6
fmadd.s f23, f15, f20, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x11, 0x989bf83a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x282c083b # load x3 with value 0x282c083b
sw x3, 0(x2) # store 0x282c083b in memory
flw f16, 0(x2) # load 0x282c083b from memory into f16
li x3, 0xf4f35c20 # load x3 with value 0xf4f35c20
sw x3, 0(x2) # store 0xf4f35c20 in memory
flw f28, 0(x2) # load 0xf4f35c20 from memory into f28
li x3, 0xcb60f48a # load x3 with value 0xcb60f48a
sw x3, 0(x2) # store 0xcb60f48a in memory
flw f26, 0(x2) # load 0xcb60f48a from memory into f26
fmadd.s f11, f16, f28, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x23, 0xc85df964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb70e0af0 # load x3 with value 0xb70e0af0
sw x3, 0(x2) # store 0xb70e0af0 in memory
flw f17, 0(x2) # load 0xb70e0af0 from memory into f17
li x3, 0x67c6b050 # load x3 with value 0x67c6b050
sw x3, 0(x2) # store 0x67c6b050 in memory
flw f15, 0(x2) # load 0x67c6b050 from memory into f15
li x3, 0xc2151ad5 # load x3 with value 0xc2151ad5
sw x3, 0(x2) # store 0xc2151ad5 in memory
flw f13, 0(x2) # load 0xc2151ad5 from memory into f13
fmadd.s f23, f17, f15, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x6, 0x52a7508f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe71617cf # load x3 with value 0xe71617cf
sw x3, 0(x2) # store 0xe71617cf in memory
flw f18, 0(x2) # load 0xe71617cf from memory into f18
li x3, 0x8623bd3a # load x3 with value 0x8623bd3a
sw x3, 0(x2) # store 0x8623bd3a in memory
flw f8, 0(x2) # load 0x8623bd3a from memory into f8
li x3, 0x8ea5984d # load x3 with value 0x8ea5984d
sw x3, 0(x2) # store 0x8ea5984d in memory
flw f19, 0(x2) # load 0x8ea5984d from memory into f19
fmadd.s f6, f18, f8, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x19, 0xe946a9a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xada09df1 # load x3 with value 0xada09df1
sw x3, 0(x2) # store 0xada09df1 in memory
flw f19, 0(x2) # load 0xada09df1 from memory into f19
li x3, 0x87f68c60 # load x3 with value 0x87f68c60
sw x3, 0(x2) # store 0x87f68c60 in memory
flw f9, 0(x2) # load 0x87f68c60 from memory into f9
li x3, 0x851191ec # load x3 with value 0x851191ec
sw x3, 0(x2) # store 0x851191ec in memory
flw f1, 0(x2) # load 0x851191ec from memory into f1
fmadd.s f19, f19, f9, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x16, 0x93c2a3f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf331a8c # load x3 with value 0xcf331a8c
sw x3, 0(x2) # store 0xcf331a8c in memory
flw f20, 0(x2) # load 0xcf331a8c from memory into f20
li x3, 0x2b64f437 # load x3 with value 0x2b64f437
sw x3, 0(x2) # store 0x2b64f437 in memory
flw f30, 0(x2) # load 0x2b64f437 from memory into f30
li x3, 0x5cda9efb # load x3 with value 0x5cda9efb
sw x3, 0(x2) # store 0x5cda9efb in memory
flw f26, 0(x2) # load 0x5cda9efb from memory into f26
fmadd.s f16, f20, f30, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x28, 0x64413ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6cd94346 # load x3 with value 0x6cd94346
sw x3, 0(x2) # store 0x6cd94346 in memory
flw f21, 0(x2) # load 0x6cd94346 from memory into f21
li x3, 0x8384d81a # load x3 with value 0x8384d81a
sw x3, 0(x2) # store 0x8384d81a in memory
flw f4, 0(x2) # load 0x8384d81a from memory into f4
li x3, 0x71d3624f # load x3 with value 0x71d3624f
sw x3, 0(x2) # store 0x71d3624f in memory
flw f30, 0(x2) # load 0x71d3624f from memory into f30
fmadd.s f28, f21, f4, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x25, 0xee786f2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x0fef06f1 # load x3 with value 0x0fef06f1
sw x3, 0(x2) # store 0x0fef06f1 in memory
flw f22, 0(x2) # load 0x0fef06f1 from memory into f22
li x3, 0x538ab093 # load x3 with value 0x538ab093
sw x3, 0(x2) # store 0x538ab093 in memory
flw f6, 0(x2) # load 0x538ab093 from memory into f6
li x3, 0x359c9687 # load x3 with value 0x359c9687
sw x3, 0(x2) # store 0x359c9687 in memory
flw f17, 0(x2) # load 0x359c9687 from memory into f17
fmadd.s f25, f22, f6, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x24, 0x29541e74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2e2274be # load x3 with value 0x2e2274be
sw x3, 0(x2) # store 0x2e2274be in memory
flw f23, 0(x2) # load 0x2e2274be from memory into f23
li x3, 0x5fd0b500 # load x3 with value 0x5fd0b500
sw x3, 0(x2) # store 0x5fd0b500 in memory
flw f31, 0(x2) # load 0x5fd0b500 from memory into f31
li x3, 0x4e3d279c # load x3 with value 0x4e3d279c
sw x3, 0(x2) # store 0x4e3d279c in memory
flw f12, 0(x2) # load 0x4e3d279c from memory into f12
fmadd.s f24, f23, f31, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x27, 0x6a51929c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf8cd5512 # load x3 with value 0xf8cd5512
sw x3, 0(x2) # store 0xf8cd5512 in memory
flw f24, 0(x2) # load 0xf8cd5512 from memory into f24
li x3, 0xc81231ca # load x3 with value 0xc81231ca
sw x3, 0(x2) # store 0xc81231ca in memory
flw f6, 0(x2) # load 0xc81231ca from memory into f6
li x3, 0x8c433d9b # load x3 with value 0x8c433d9b
sw x3, 0(x2) # store 0x8c433d9b in memory
flw f9, 0(x2) # load 0x8c433d9b from memory into f9
fmadd.s f27, f24, f6, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x25, 0xdf7e4135 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb51fea3d # load x3 with value 0xb51fea3d
sw x3, 0(x2) # store 0xb51fea3d in memory
flw f25, 0(x2) # load 0xb51fea3d from memory into f25
li x3, 0x99bb0ce2 # load x3 with value 0x99bb0ce2
sw x3, 0(x2) # store 0x99bb0ce2 in memory
flw f3, 0(x2) # load 0x99bb0ce2 from memory into f3
li x3, 0xa6e0ac3d # load x3 with value 0xa6e0ac3d
sw x3, 0(x2) # store 0xa6e0ac3d in memory
flw f9, 0(x2) # load 0xa6e0ac3d from memory into f9
fmadd.s f25, f25, f3, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x20, 0x253146c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80ee6698 # load x3 with value 0x80ee6698
sw x3, 0(x2) # store 0x80ee6698 in memory
flw f26, 0(x2) # load 0x80ee6698 from memory into f26
li x3, 0xdfecf0ea # load x3 with value 0xdfecf0ea
sw x3, 0(x2) # store 0xdfecf0ea in memory
flw f10, 0(x2) # load 0xdfecf0ea from memory into f10
li x3, 0xc146c248 # load x3 with value 0xc146c248
sw x3, 0(x2) # store 0xc146c248 in memory
flw f29, 0(x2) # load 0xc146c248 from memory into f29
fmadd.s f20, f26, f10, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x24, 0x05200869 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42231b20 # load x3 with value 0x42231b20
sw x3, 0(x2) # store 0x42231b20 in memory
flw f27, 0(x2) # load 0x42231b20 from memory into f27
li x3, 0x40975d5e # load x3 with value 0x40975d5e
sw x3, 0(x2) # store 0x40975d5e in memory
flw f21, 0(x2) # load 0x40975d5e from memory into f21
li x3, 0x333b995d # load x3 with value 0x333b995d
sw x3, 0(x2) # store 0x333b995d in memory
flw f6, 0(x2) # load 0x333b995d from memory into f6
fmadd.s f24, f27, f21, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x12, 0x1a6524e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x183a2b39 # load x3 with value 0x183a2b39
sw x3, 0(x2) # store 0x183a2b39 in memory
flw f28, 0(x2) # load 0x183a2b39 from memory into f28
li x3, 0xcf0080c9 # load x3 with value 0xcf0080c9
sw x3, 0(x2) # store 0xcf0080c9 in memory
flw f1, 0(x2) # load 0xcf0080c9 from memory into f1
li x3, 0x1ffa5109 # load x3 with value 0x1ffa5109
sw x3, 0(x2) # store 0x1ffa5109 in memory
flw f8, 0(x2) # load 0x1ffa5109 from memory into f8
fmadd.s f12, f28, f1, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x7, 0x01ff9347 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe84361ae # load x3 with value 0xe84361ae
sw x3, 0(x2) # store 0xe84361ae in memory
flw f29, 0(x2) # load 0xe84361ae from memory into f29
li x3, 0xd73d2168 # load x3 with value 0xd73d2168
sw x3, 0(x2) # store 0xd73d2168 in memory
flw f17, 0(x2) # load 0xd73d2168 from memory into f17
li x3, 0xdfdafbbb # load x3 with value 0xdfdafbbb
sw x3, 0(x2) # store 0xdfdafbbb in memory
flw f30, 0(x2) # load 0xdfdafbbb from memory into f30
fmadd.s f7, f29, f17, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x9, 0x3b9dc2a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9969c21d # load x3 with value 0x9969c21d
sw x3, 0(x2) # store 0x9969c21d in memory
flw f30, 0(x2) # load 0x9969c21d from memory into f30
li x3, 0xe31afa99 # load x3 with value 0xe31afa99
sw x3, 0(x2) # store 0xe31afa99 in memory
flw f25, 0(x2) # load 0xe31afa99 from memory into f25
li x3, 0x3a19eccf # load x3 with value 0x3a19eccf
sw x3, 0(x2) # store 0x3a19eccf in memory
flw f6, 0(x2) # load 0x3a19eccf from memory into f6
fmadd.s f9, f30, f25, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x18, 0x6d9c405b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x20509907 # load x3 with value 0x20509907
sw x3, 0(x2) # store 0x20509907 in memory
flw f31, 0(x2) # load 0x20509907 from memory into f31
li x3, 0xe2c13cfb # load x3 with value 0xe2c13cfb
sw x3, 0(x2) # store 0xe2c13cfb in memory
flw f29, 0(x2) # load 0xe2c13cfb from memory into f29
li x3, 0xd4242229 # load x3 with value 0xd4242229
sw x3, 0(x2) # store 0xd4242229 in memory
flw f28, 0(x2) # load 0xd4242229 from memory into f28
fmadd.s f18, f31, f29, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x4, 0xd1a8fff8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x57a85169 # load x3 with value 0x57a85169
sw x3, 0(x2) # store 0x57a85169 in memory
flw f11, 0(x2) # load 0x57a85169 from memory into f11
li x3, 0xeb908351 # load x3 with value 0xeb908351
sw x3, 0(x2) # store 0xeb908351 in memory
flw f0, 0(x2) # load 0xeb908351 from memory into f0
li x3, 0x73167a25 # load x3 with value 0x73167a25
sw x3, 0(x2) # store 0x73167a25 in memory
flw f23, 0(x2) # load 0x73167a25 from memory into f23
fmadd.s f4, f11, f0, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x17, 0xf771079f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f0ea1b7 # load x3 with value 0x7f0ea1b7
sw x3, 0(x2) # store 0x7f0ea1b7 in memory
flw f25, 0(x2) # load 0x7f0ea1b7 from memory into f25
li x3, 0x3af964e5 # load x3 with value 0x3af964e5
sw x3, 0(x2) # store 0x3af964e5 in memory
flw f1, 0(x2) # load 0x3af964e5 from memory into f1
li x3, 0x6334e996 # load x3 with value 0x6334e996
sw x3, 0(x2) # store 0x6334e996 in memory
flw f6, 0(x2) # load 0x6334e996 from memory into f6
fmadd.s f17, f25, f1, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x27, 0xb05d1e1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6a5735e3 # load x3 with value 0x6a5735e3
sw x3, 0(x2) # store 0x6a5735e3 in memory
flw f17, 0(x2) # load 0x6a5735e3 from memory into f17
li x3, 0xd18c5155 # load x3 with value 0xd18c5155
sw x3, 0(x2) # store 0xd18c5155 in memory
flw f2, 0(x2) # load 0xd18c5155 from memory into f2
li x3, 0x3f9cb586 # load x3 with value 0x3f9cb586
sw x3, 0(x2) # store 0x3f9cb586 in memory
flw f30, 0(x2) # load 0x3f9cb586 from memory into f30
fmadd.s f27, f17, f2, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x17, 0x9606f65a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75db5bd7 # load x3 with value 0x75db5bd7
sw x3, 0(x2) # store 0x75db5bd7 in memory
flw f26, 0(x2) # load 0x75db5bd7 from memory into f26
li x3, 0xb3f619f6 # load x3 with value 0xb3f619f6
sw x3, 0(x2) # store 0xb3f619f6 in memory
flw f3, 0(x2) # load 0xb3f619f6 from memory into f3
li x3, 0x3ff93ed7 # load x3 with value 0x3ff93ed7
sw x3, 0(x2) # store 0x3ff93ed7 in memory
flw f8, 0(x2) # load 0x3ff93ed7 from memory into f8
fmadd.s f17, f26, f3, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x30, 0xe3ae0bbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9e14627f # load x3 with value 0x9e14627f
sw x3, 0(x2) # store 0x9e14627f in memory
flw f16, 0(x2) # load 0x9e14627f from memory into f16
li x3, 0xc8f9919a # load x3 with value 0xc8f9919a
sw x3, 0(x2) # store 0xc8f9919a in memory
flw f4, 0(x2) # load 0xc8f9919a from memory into f4
li x3, 0xc1a86faf # load x3 with value 0xc1a86faf
sw x3, 0(x2) # store 0xc1a86faf in memory
flw f19, 0(x2) # load 0xc1a86faf from memory into f19
fmadd.s f30, f16, f4, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x12, 0xf4bae0dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6d452324 # load x3 with value 0x6d452324
sw x3, 0(x2) # store 0x6d452324 in memory
flw f10, 0(x2) # load 0x6d452324 from memory into f10
li x3, 0xecf79a68 # load x3 with value 0xecf79a68
sw x3, 0(x2) # store 0xecf79a68 in memory
flw f5, 0(x2) # load 0xecf79a68 from memory into f5
li x3, 0x1d085062 # load x3 with value 0x1d085062
sw x3, 0(x2) # store 0x1d085062 in memory
flw f19, 0(x2) # load 0x1d085062 from memory into f19
fmadd.s f12, f10, f5, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x16, 0x31d7fc43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe750a225 # load x3 with value 0xe750a225
sw x3, 0(x2) # store 0xe750a225 in memory
flw f27, 0(x2) # load 0xe750a225 from memory into f27
li x3, 0x7c641b45 # load x3 with value 0x7c641b45
sw x3, 0(x2) # store 0x7c641b45 in memory
flw f6, 0(x2) # load 0x7c641b45 from memory into f6
li x3, 0xf146fa1e # load x3 with value 0xf146fa1e
sw x3, 0(x2) # store 0xf146fa1e in memory
flw f30, 0(x2) # load 0xf146fa1e from memory into f30
fmadd.s f16, f27, f6, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x14, 0xffe055a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd202effb # load x3 with value 0xd202effb
sw x3, 0(x2) # store 0xd202effb in memory
flw f8, 0(x2) # load 0xd202effb from memory into f8
li x3, 0xb44a0f8e # load x3 with value 0xb44a0f8e
sw x3, 0(x2) # store 0xb44a0f8e in memory
flw f7, 0(x2) # load 0xb44a0f8e from memory into f7
li x3, 0x1dac5eda # load x3 with value 0x1dac5eda
sw x3, 0(x2) # store 0x1dac5eda in memory
flw f16, 0(x2) # load 0x1dac5eda from memory into f16
fmadd.s f14, f8, f7, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x18, 0x0bd8f54a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35e7f390 # load x3 with value 0x35e7f390
sw x3, 0(x2) # store 0x35e7f390 in memory
flw f25, 0(x2) # load 0x35e7f390 from memory into f25
li x3, 0x217b4be3 # load x3 with value 0x217b4be3
sw x3, 0(x2) # store 0x217b4be3 in memory
flw f8, 0(x2) # load 0x217b4be3 from memory into f8
li x3, 0xfebb5dc3 # load x3 with value 0xfebb5dc3
sw x3, 0(x2) # store 0xfebb5dc3 in memory
flw f16, 0(x2) # load 0xfebb5dc3 from memory into f16
fmadd.s f18, f25, f8, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x3, 0xdad0c7ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x328c501f # load x3 with value 0x328c501f
sw x3, 0(x2) # store 0x328c501f in memory
flw f11, 0(x2) # load 0x328c501f from memory into f11
li x3, 0x43d76283 # load x3 with value 0x43d76283
sw x3, 0(x2) # store 0x43d76283 in memory
flw f9, 0(x2) # load 0x43d76283 from memory into f9
li x3, 0x93a86e89 # load x3 with value 0x93a86e89
sw x3, 0(x2) # store 0x93a86e89 in memory
flw f10, 0(x2) # load 0x93a86e89 from memory into f10
fmadd.s f3, f11, f9, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x2, 0x819dc4d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1d9209ee # load x3 with value 0x1d9209ee
sw x3, 0(x2) # store 0x1d9209ee in memory
flw f31, 0(x2) # load 0x1d9209ee from memory into f31
li x3, 0x00ca9a70 # load x3 with value 0x00ca9a70
sw x3, 0(x2) # store 0x00ca9a70 in memory
flw f10, 0(x2) # load 0x00ca9a70 from memory into f10
li x3, 0x8133eb2e # load x3 with value 0x8133eb2e
sw x3, 0(x2) # store 0x8133eb2e in memory
flw f13, 0(x2) # load 0x8133eb2e from memory into f13
fmadd.s f2, f31, f10, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x29, 0xe2cfd63d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x62542014 # load x3 with value 0x62542014
sw x3, 0(x2) # store 0x62542014 in memory
flw f22, 0(x2) # load 0x62542014 from memory into f22
li x3, 0xd5526dc4 # load x3 with value 0xd5526dc4
sw x3, 0(x2) # store 0xd5526dc4 in memory
flw f11, 0(x2) # load 0xd5526dc4 from memory into f11
li x3, 0xfdaecfc0 # load x3 with value 0xfdaecfc0
sw x3, 0(x2) # store 0xfdaecfc0 in memory
flw f17, 0(x2) # load 0xfdaecfc0 from memory into f17
fmadd.s f29, f22, f11, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x15, 0xf30a0f31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x706cb00f # load x3 with value 0x706cb00f
sw x3, 0(x2) # store 0x706cb00f in memory
flw f8, 0(x2) # load 0x706cb00f from memory into f8
li x3, 0x1c02704b # load x3 with value 0x1c02704b
sw x3, 0(x2) # store 0x1c02704b in memory
flw f12, 0(x2) # load 0x1c02704b from memory into f12
li x3, 0xa4fd1523 # load x3 with value 0xa4fd1523
sw x3, 0(x2) # store 0xa4fd1523 in memory
flw f24, 0(x2) # load 0xa4fd1523 from memory into f24
fmadd.s f15, f8, f12, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x27, 0xf0d004ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x903a51e9 # load x3 with value 0x903a51e9
sw x3, 0(x2) # store 0x903a51e9 in memory
flw f11, 0(x2) # load 0x903a51e9 from memory into f11
li x3, 0xc8b2dba5 # load x3 with value 0xc8b2dba5
sw x3, 0(x2) # store 0xc8b2dba5 in memory
flw f13, 0(x2) # load 0xc8b2dba5 from memory into f13
li x3, 0x88ef04d8 # load x3 with value 0x88ef04d8
sw x3, 0(x2) # store 0x88ef04d8 in memory
flw f18, 0(x2) # load 0x88ef04d8 from memory into f18
fmadd.s f27, f11, f13, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x4, 0x6fdf960d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x01903b65 # load x3 with value 0x01903b65
sw x3, 0(x2) # store 0x01903b65 in memory
flw f7, 0(x2) # load 0x01903b65 from memory into f7
li x3, 0x35fa1ba4 # load x3 with value 0x35fa1ba4
sw x3, 0(x2) # store 0x35fa1ba4 in memory
flw f14, 0(x2) # load 0x35fa1ba4 from memory into f14
li x3, 0xe472ef58 # load x3 with value 0xe472ef58
sw x3, 0(x2) # store 0xe472ef58 in memory
flw f8, 0(x2) # load 0xe472ef58 from memory into f8
fmadd.s f4, f7, f14, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x3, 0x09606fe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe50c835e # load x3 with value 0xe50c835e
sw x3, 0(x2) # store 0xe50c835e in memory
flw f8, 0(x2) # load 0xe50c835e from memory into f8
li x3, 0x52a97d87 # load x3 with value 0x52a97d87
sw x3, 0(x2) # store 0x52a97d87 in memory
flw f15, 0(x2) # load 0x52a97d87 from memory into f15
li x3, 0xf4501533 # load x3 with value 0xf4501533
sw x3, 0(x2) # store 0xf4501533 in memory
flw f10, 0(x2) # load 0xf4501533 from memory into f10
fmadd.s f3, f8, f15, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x26, 0x3c7efee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x034e9f74 # load x3 with value 0x034e9f74
sw x3, 0(x2) # store 0x034e9f74 in memory
flw f6, 0(x2) # load 0x034e9f74 from memory into f6
li x3, 0x0283f9d1 # load x3 with value 0x0283f9d1
sw x3, 0(x2) # store 0x0283f9d1 in memory
flw f16, 0(x2) # load 0x0283f9d1 from memory into f16
li x3, 0x4b730d6d # load x3 with value 0x4b730d6d
sw x3, 0(x2) # store 0x4b730d6d in memory
flw f25, 0(x2) # load 0x4b730d6d from memory into f25
fmadd.s f26, f6, f16, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x27, 0x0d2fdbe6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeffadf6d # load x3 with value 0xeffadf6d
sw x3, 0(x2) # store 0xeffadf6d in memory
flw f8, 0(x2) # load 0xeffadf6d from memory into f8
li x3, 0xb684b621 # load x3 with value 0xb684b621
sw x3, 0(x2) # store 0xb684b621 in memory
flw f17, 0(x2) # load 0xb684b621 from memory into f17
li x3, 0x188071fa # load x3 with value 0x188071fa
sw x3, 0(x2) # store 0x188071fa in memory
flw f13, 0(x2) # load 0x188071fa from memory into f13
fmadd.s f27, f8, f17, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x31, 0x24515857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc15b5f43 # load x3 with value 0xc15b5f43
sw x3, 0(x2) # store 0xc15b5f43 in memory
flw f22, 0(x2) # load 0xc15b5f43 from memory into f22
li x3, 0x7c9d72da # load x3 with value 0x7c9d72da
sw x3, 0(x2) # store 0x7c9d72da in memory
flw f18, 0(x2) # load 0x7c9d72da from memory into f18
li x3, 0xb381a4ff # load x3 with value 0xb381a4ff
sw x3, 0(x2) # store 0xb381a4ff in memory
flw f11, 0(x2) # load 0xb381a4ff from memory into f11
fmadd.s f31, f22, f18, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x22, 0xf1d8ea5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x547c951d # load x3 with value 0x547c951d
sw x3, 0(x2) # store 0x547c951d in memory
flw f30, 0(x2) # load 0x547c951d from memory into f30
li x3, 0xbc396172 # load x3 with value 0xbc396172
sw x3, 0(x2) # store 0xbc396172 in memory
flw f19, 0(x2) # load 0xbc396172 from memory into f19
li x3, 0x94a18c23 # load x3 with value 0x94a18c23
sw x3, 0(x2) # store 0x94a18c23 in memory
flw f23, 0(x2) # load 0x94a18c23 from memory into f23
fmadd.s f22, f30, f19, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x24, 0x9e1d0f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf5e417fe # load x3 with value 0xf5e417fe
sw x3, 0(x2) # store 0xf5e417fe in memory
flw f23, 0(x2) # load 0xf5e417fe from memory into f23
li x3, 0xc0463c10 # load x3 with value 0xc0463c10
sw x3, 0(x2) # store 0xc0463c10 in memory
flw f20, 0(x2) # load 0xc0463c10 from memory into f20
li x3, 0x644de249 # load x3 with value 0x644de249
sw x3, 0(x2) # store 0x644de249 in memory
flw f4, 0(x2) # load 0x644de249 from memory into f4
fmadd.s f24, f23, f20, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x13, 0x9c7b396a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c43bc16 # load x3 with value 0x4c43bc16
sw x3, 0(x2) # store 0x4c43bc16 in memory
flw f16, 0(x2) # load 0x4c43bc16 from memory into f16
li x3, 0xaf6faef2 # load x3 with value 0xaf6faef2
sw x3, 0(x2) # store 0xaf6faef2 in memory
flw f21, 0(x2) # load 0xaf6faef2 from memory into f21
li x3, 0xd54c659e # load x3 with value 0xd54c659e
sw x3, 0(x2) # store 0xd54c659e in memory
flw f11, 0(x2) # load 0xd54c659e from memory into f11
fmadd.s f13, f16, f21, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x22, 0xad8ba258 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7b2e8514 # load x3 with value 0x7b2e8514
sw x3, 0(x2) # store 0x7b2e8514 in memory
flw f12, 0(x2) # load 0x7b2e8514 from memory into f12
li x3, 0xcabcf753 # load x3 with value 0xcabcf753
sw x3, 0(x2) # store 0xcabcf753 in memory
flw f22, 0(x2) # load 0xcabcf753 from memory into f22
li x3, 0xc4d46bd4 # load x3 with value 0xc4d46bd4
sw x3, 0(x2) # store 0xc4d46bd4 in memory
flw f29, 0(x2) # load 0xc4d46bd4 from memory into f29
fmadd.s f22, f12, f22, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x28, 0xb6770252 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75bbe0d7 # load x3 with value 0x75bbe0d7
sw x3, 0(x2) # store 0x75bbe0d7 in memory
flw f3, 0(x2) # load 0x75bbe0d7 from memory into f3
li x3, 0x794526dd # load x3 with value 0x794526dd
sw x3, 0(x2) # store 0x794526dd in memory
flw f23, 0(x2) # load 0x794526dd from memory into f23
li x3, 0xed0313ec # load x3 with value 0xed0313ec
sw x3, 0(x2) # store 0xed0313ec in memory
flw f5, 0(x2) # load 0xed0313ec from memory into f5
fmadd.s f28, f3, f23, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x3, 0xf66c22f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x155b019e # load x3 with value 0x155b019e
sw x3, 0(x2) # store 0x155b019e in memory
flw f7, 0(x2) # load 0x155b019e from memory into f7
li x3, 0xd59ac525 # load x3 with value 0xd59ac525
sw x3, 0(x2) # store 0xd59ac525 in memory
flw f24, 0(x2) # load 0xd59ac525 from memory into f24
li x3, 0x03115a5b # load x3 with value 0x03115a5b
sw x3, 0(x2) # store 0x03115a5b in memory
flw f23, 0(x2) # load 0x03115a5b from memory into f23
fmadd.s f3, f7, f24, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x11, 0xcf491308 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x46e0db6d # load x3 with value 0x46e0db6d
sw x3, 0(x2) # store 0x46e0db6d in memory
flw f18, 0(x2) # load 0x46e0db6d from memory into f18
li x3, 0xc9fa8aec # load x3 with value 0xc9fa8aec
sw x3, 0(x2) # store 0xc9fa8aec in memory
flw f25, 0(x2) # load 0xc9fa8aec from memory into f25
li x3, 0x582acbb5 # load x3 with value 0x582acbb5
sw x3, 0(x2) # store 0x582acbb5 in memory
flw f15, 0(x2) # load 0x582acbb5 from memory into f15
fmadd.s f11, f18, f25, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x28, 0xf14dabfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa40b5521 # load x3 with value 0xa40b5521
sw x3, 0(x2) # store 0xa40b5521 in memory
flw f22, 0(x2) # load 0xa40b5521 from memory into f22
li x3, 0x552502a2 # load x3 with value 0x552502a2
sw x3, 0(x2) # store 0x552502a2 in memory
flw f26, 0(x2) # load 0x552502a2 from memory into f26
li x3, 0xce23fef0 # load x3 with value 0xce23fef0
sw x3, 0(x2) # store 0xce23fef0 in memory
flw f11, 0(x2) # load 0xce23fef0 from memory into f11
fmadd.s f28, f22, f26, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x31, 0x83532000 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x13fc734d # load x3 with value 0x13fc734d
sw x3, 0(x2) # store 0x13fc734d in memory
flw f4, 0(x2) # load 0x13fc734d from memory into f4
li x3, 0xe8767fef # load x3 with value 0xe8767fef
sw x3, 0(x2) # store 0xe8767fef in memory
flw f27, 0(x2) # load 0xe8767fef from memory into f27
li x3, 0x3606111f # load x3 with value 0x3606111f
sw x3, 0(x2) # store 0x3606111f in memory
flw f25, 0(x2) # load 0x3606111f from memory into f25
fmadd.s f31, f4, f27, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x11, 0xb9c23bc6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x676d6f9f # load x3 with value 0x676d6f9f
sw x3, 0(x2) # store 0x676d6f9f in memory
flw f10, 0(x2) # load 0x676d6f9f from memory into f10
li x3, 0x9e76dea9 # load x3 with value 0x9e76dea9
sw x3, 0(x2) # store 0x9e76dea9 in memory
flw f28, 0(x2) # load 0x9e76dea9 from memory into f28
li x3, 0x1de3213a # load x3 with value 0x1de3213a
sw x3, 0(x2) # store 0x1de3213a in memory
flw f24, 0(x2) # load 0x1de3213a from memory into f24
fmadd.s f11, f10, f28, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x29, 0xde3ec7d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c68462f # load x3 with value 0x4c68462f
sw x3, 0(x2) # store 0x4c68462f in memory
flw f15, 0(x2) # load 0x4c68462f from memory into f15
li x3, 0x807f8046 # load x3 with value 0x807f8046
sw x3, 0(x2) # store 0x807f8046 in memory
flw f29, 0(x2) # load 0x807f8046 from memory into f29
li x3, 0x4f1a9a3c # load x3 with value 0x4f1a9a3c
sw x3, 0(x2) # store 0x4f1a9a3c in memory
flw f5, 0(x2) # load 0x4f1a9a3c from memory into f5
fmadd.s f29, f15, f29, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x31, 0x09e7c85f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xea509ee3 # load x3 with value 0xea509ee3
sw x3, 0(x2) # store 0xea509ee3 in memory
flw f23, 0(x2) # load 0xea509ee3 from memory into f23
li x3, 0xde3632ad # load x3 with value 0xde3632ad
sw x3, 0(x2) # store 0xde3632ad in memory
flw f30, 0(x2) # load 0xde3632ad from memory into f30
li x3, 0x83fb306b # load x3 with value 0x83fb306b
sw x3, 0(x2) # store 0x83fb306b in memory
flw f27, 0(x2) # load 0x83fb306b from memory into f27
fmadd.s f31, f23, f30, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x9, 0x12665738 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d3da6d1 # load x3 with value 0x9d3da6d1
sw x3, 0(x2) # store 0x9d3da6d1 in memory
flw f20, 0(x2) # load 0x9d3da6d1 from memory into f20
li x3, 0x19d14b86 # load x3 with value 0x19d14b86
sw x3, 0(x2) # store 0x19d14b86 in memory
flw f31, 0(x2) # load 0x19d14b86 from memory into f31
li x3, 0x3b0e1fcf # load x3 with value 0x3b0e1fcf
sw x3, 0(x2) # store 0x3b0e1fcf in memory
flw f13, 0(x2) # load 0x3b0e1fcf from memory into f13
fmadd.s f9, f20, f31, f13 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
