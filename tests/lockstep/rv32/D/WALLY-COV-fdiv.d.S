///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/D/WALLY-COV-fdiv.d.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x14, x2, x19 # perform first operation
fdiv.d f3, f23, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x12, x2, x1 # perform first operation
fdiv.d f18, f11, f28 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x17, x23, x18 # perform first operation
fdiv.d f7, f10, f15 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f6, f24, f13 # perform first operation
fdiv.d f13, f6, f31 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f16, f22, f23 # perform first operation
fdiv.d f10, f26, f16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
add x30, x29, x22 # perform first operation
fdiv.d f29, f13, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f19, f12, f25 # perform first operation
fdiv.d f19, f13, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f8, f7, f29 # perform first operation
fdiv.d f8, f23, f16 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f24, f3, f21 # perform first operation
fdiv.d f24, f17, f5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f19, f6, f25 # perform first operation
fdiv.d f6, f27, f17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f20, f5, f10 # perform first operation
fdiv.d f10, f31, f6 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f13, f11, f16 # perform first operation
fdiv.d f2, f14, f24 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x902ffacb # load x3 with 32 MSBs 0x00000000902ffacb
sw x3, 0(x2) # store x3 (0x902ffacb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000902ffacb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000902ffacb from memory into f0
la x2, scratch
li x3, 0xac328eeb # load x3 with 32 MSBs 0x00000000ac328eeb
sw x3, 0(x2) # store x3 (0xac328eeb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ac328eeb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000ac328eeb from memory into f12
fdiv.d f3, f0, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x7625c221 # load x3 with 32 MSBs 0x000000007625c221
sw x3, 0(x2) # store x3 (0x7625c221) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007625c221
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000007625c221 from memory into f1
la x2, scratch
li x3, 0xdef19f96 # load x3 with 32 MSBs 0x00000000def19f96
sw x3, 0(x2) # store x3 (0xdef19f96) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000def19f96
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000def19f96 from memory into f12
fdiv.d f6, f1, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0xcae61d48 # load x3 with 32 MSBs 0x00000000cae61d48
sw x3, 0(x2) # store x3 (0xcae61d48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cae61d48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000cae61d48 from memory into f2
la x2, scratch
li x3, 0x9f83cc88 # load x3 with 32 MSBs 0x000000009f83cc88
sw x3, 0(x2) # store x3 (0x9f83cc88) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f83cc88
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000009f83cc88 from memory into f20
fdiv.d f15, f2, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xd7efdb9b # load x3 with 32 MSBs 0x00000000d7efdb9b
sw x3, 0(x2) # store x3 (0xd7efdb9b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d7efdb9b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d7efdb9b from memory into f3
la x2, scratch
li x3, 0x16e3377c # load x3 with 32 MSBs 0x0000000016e3377c
sw x3, 0(x2) # store x3 (0x16e3377c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000016e3377c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000016e3377c from memory into f18
fdiv.d f6, f3, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x231067a6 # load x3 with 32 MSBs 0x00000000231067a6
sw x3, 0(x2) # store x3 (0x231067a6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000231067a6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000231067a6 from memory into f4
la x2, scratch
li x3, 0x185c28a9 # load x3 with 32 MSBs 0x00000000185c28a9
sw x3, 0(x2) # store x3 (0x185c28a9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000185c28a9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000185c28a9 from memory into f29
fdiv.d f23, f4, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xce0c364a # load x3 with 32 MSBs 0x00000000ce0c364a
sw x3, 0(x2) # store x3 (0xce0c364a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ce0c364a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000ce0c364a from memory into f5
la x2, scratch
li x3, 0xd262bc8c # load x3 with 32 MSBs 0x00000000d262bc8c
sw x3, 0(x2) # store x3 (0xd262bc8c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d262bc8c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000d262bc8c from memory into f28
fdiv.d f27, f5, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbb059f8e # load x3 with 32 MSBs 0x00000000bb059f8e
sw x3, 0(x2) # store x3 (0xbb059f8e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bb059f8e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000bb059f8e from memory into f6
la x2, scratch
li x3, 0x66e67399 # load x3 with 32 MSBs 0x0000000066e67399
sw x3, 0(x2) # store x3 (0x66e67399) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000066e67399
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000066e67399 from memory into f28
fdiv.d f26, f6, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x56ad269b # load x3 with 32 MSBs 0x0000000056ad269b
sw x3, 0(x2) # store x3 (0x56ad269b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000056ad269b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000056ad269b from memory into f7
la x2, scratch
li x3, 0x984c95da # load x3 with 32 MSBs 0x00000000984c95da
sw x3, 0(x2) # store x3 (0x984c95da) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000984c95da
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000984c95da from memory into f5
fdiv.d f8, f7, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x6416b7d9 # load x3 with 32 MSBs 0x000000006416b7d9
sw x3, 0(x2) # store x3 (0x6416b7d9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006416b7d9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006416b7d9 from memory into f8
la x2, scratch
li x3, 0x4ed4f109 # load x3 with 32 MSBs 0x000000004ed4f109
sw x3, 0(x2) # store x3 (0x4ed4f109) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004ed4f109
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000004ed4f109 from memory into f22
fdiv.d f10, f8, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x801e7bc2 # load x3 with 32 MSBs 0x00000000801e7bc2
sw x3, 0(x2) # store x3 (0x801e7bc2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000801e7bc2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000801e7bc2 from memory into f9
la x2, scratch
li x3, 0x99058cde # load x3 with 32 MSBs 0x0000000099058cde
sw x3, 0(x2) # store x3 (0x99058cde) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000099058cde
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000099058cde from memory into f19
fdiv.d f9, f9, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x60d8d6d0 # load x3 with 32 MSBs 0x0000000060d8d6d0
sw x3, 0(x2) # store x3 (0x60d8d6d0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000060d8d6d0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000060d8d6d0 from memory into f10
la x2, scratch
li x3, 0x27f11d11 # load x3 with 32 MSBs 0x0000000027f11d11
sw x3, 0(x2) # store x3 (0x27f11d11) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027f11d11
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000027f11d11 from memory into f24
fdiv.d f28, f10, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0xc6d31b1f # load x3 with 32 MSBs 0x00000000c6d31b1f
sw x3, 0(x2) # store x3 (0xc6d31b1f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c6d31b1f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000c6d31b1f from memory into f11
la x2, scratch
li x3, 0x5048d3b0 # load x3 with 32 MSBs 0x000000005048d3b0
sw x3, 0(x2) # store x3 (0x5048d3b0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005048d3b0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000005048d3b0 from memory into f1
fdiv.d f5, f11, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x43bed2af # load x3 with 32 MSBs 0x0000000043bed2af
sw x3, 0(x2) # store x3 (0x43bed2af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000043bed2af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000043bed2af from memory into f12
la x2, scratch
li x3, 0xc0d43b79 # load x3 with 32 MSBs 0x00000000c0d43b79
sw x3, 0(x2) # store x3 (0xc0d43b79) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0d43b79
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c0d43b79 from memory into f9
fdiv.d f23, f12, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xc226e2ad # load x3 with 32 MSBs 0x00000000c226e2ad
sw x3, 0(x2) # store x3 (0xc226e2ad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c226e2ad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c226e2ad from memory into f13
la x2, scratch
li x3, 0x9ede58d7 # load x3 with 32 MSBs 0x000000009ede58d7
sw x3, 0(x2) # store x3 (0x9ede58d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ede58d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000009ede58d7 from memory into f10
fdiv.d f23, f13, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0x858a25ab # load x3 with 32 MSBs 0x00000000858a25ab
sw x3, 0(x2) # store x3 (0x858a25ab) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000858a25ab
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000858a25ab from memory into f14
la x2, scratch
li x3, 0x01eebe64 # load x3 with 32 MSBs 0x0000000001eebe64
sw x3, 0(x2) # store x3 (0x01eebe64) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000001eebe64
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000001eebe64 from memory into f17
fdiv.d f16, f14, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0x8c236867 # load x3 with 32 MSBs 0x000000008c236867
sw x3, 0(x2) # store x3 (0x8c236867) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008c236867
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000008c236867 from memory into f15
la x2, scratch
li x3, 0xd8c367f1 # load x3 with 32 MSBs 0x00000000d8c367f1
sw x3, 0(x2) # store x3 (0xd8c367f1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8c367f1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d8c367f1 from memory into f20
fdiv.d f5, f15, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0x5c9b48d9 # load x3 with 32 MSBs 0x000000005c9b48d9
sw x3, 0(x2) # store x3 (0x5c9b48d9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005c9b48d9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000005c9b48d9 from memory into f16
la x2, scratch
li x3, 0xa7e8ee1e # load x3 with 32 MSBs 0x00000000a7e8ee1e
sw x3, 0(x2) # store x3 (0xa7e8ee1e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a7e8ee1e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000a7e8ee1e from memory into f22
fdiv.d f7, f16, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0xe6072fd5 # load x3 with 32 MSBs 0x00000000e6072fd5
sw x3, 0(x2) # store x3 (0xe6072fd5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e6072fd5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000e6072fd5 from memory into f17
la x2, scratch
li x3, 0x76e61531 # load x3 with 32 MSBs 0x0000000076e61531
sw x3, 0(x2) # store x3 (0x76e61531) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000076e61531
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000076e61531 from memory into f28
fdiv.d f14, f17, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xf2f209e2 # load x3 with 32 MSBs 0x00000000f2f209e2
sw x3, 0(x2) # store x3 (0xf2f209e2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f2f209e2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000f2f209e2 from memory into f18
la x2, scratch
li x3, 0x4c6e566c # load x3 with 32 MSBs 0x000000004c6e566c
sw x3, 0(x2) # store x3 (0x4c6e566c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004c6e566c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000004c6e566c from memory into f16
fdiv.d f15, f18, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x4933ca7a # load x3 with 32 MSBs 0x000000004933ca7a
sw x3, 0(x2) # store x3 (0x4933ca7a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004933ca7a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000004933ca7a from memory into f19
la x2, scratch
li x3, 0x3133992e # load x3 with 32 MSBs 0x000000003133992e
sw x3, 0(x2) # store x3 (0x3133992e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003133992e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000003133992e from memory into f22
fdiv.d f9, f19, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xc83a40f2 # load x3 with 32 MSBs 0x00000000c83a40f2
sw x3, 0(x2) # store x3 (0xc83a40f2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c83a40f2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000c83a40f2 from memory into f20
la x2, scratch
li x3, 0x56cf4c4c # load x3 with 32 MSBs 0x0000000056cf4c4c
sw x3, 0(x2) # store x3 (0x56cf4c4c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000056cf4c4c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000056cf4c4c from memory into f2
fdiv.d f24, f20, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0x63ae5e58 # load x3 with 32 MSBs 0x0000000063ae5e58
sw x3, 0(x2) # store x3 (0x63ae5e58) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000063ae5e58
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000063ae5e58 from memory into f21
la x2, scratch
li x3, 0x2eaf767f # load x3 with 32 MSBs 0x000000002eaf767f
sw x3, 0(x2) # store x3 (0x2eaf767f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002eaf767f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000002eaf767f from memory into f27
fdiv.d f29, f21, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x24bb4c15 # load x3 with 32 MSBs 0x0000000024bb4c15
sw x3, 0(x2) # store x3 (0x24bb4c15) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000024bb4c15
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000024bb4c15 from memory into f22
la x2, scratch
li x3, 0xc77190a7 # load x3 with 32 MSBs 0x00000000c77190a7
sw x3, 0(x2) # store x3 (0xc77190a7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c77190a7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c77190a7 from memory into f25
fdiv.d f27, f22, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x3a59a432 # load x3 with 32 MSBs 0x000000003a59a432
sw x3, 0(x2) # store x3 (0x3a59a432) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003a59a432
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000003a59a432 from memory into f23
la x2, scratch
li x3, 0x740b9384 # load x3 with 32 MSBs 0x00000000740b9384
sw x3, 0(x2) # store x3 (0x740b9384) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000740b9384
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000740b9384 from memory into f25
fdiv.d f17, f23, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x335b28e8 # load x3 with 32 MSBs 0x00000000335b28e8
sw x3, 0(x2) # store x3 (0x335b28e8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000335b28e8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000335b28e8 from memory into f24
la x2, scratch
li x3, 0x068edfb7 # load x3 with 32 MSBs 0x00000000068edfb7
sw x3, 0(x2) # store x3 (0x068edfb7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000068edfb7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000068edfb7 from memory into f23
fdiv.d f28, f24, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x0b3980be # load x3 with 32 MSBs 0x000000000b3980be
sw x3, 0(x2) # store x3 (0x0b3980be) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000b3980be
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000b3980be from memory into f25
la x2, scratch
li x3, 0xdddba712 # load x3 with 32 MSBs 0x00000000dddba712
sw x3, 0(x2) # store x3 (0xdddba712) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dddba712
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000dddba712 from memory into f11
fdiv.d f1, f25, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x67f3191b # load x3 with 32 MSBs 0x0000000067f3191b
sw x3, 0(x2) # store x3 (0x67f3191b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000067f3191b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000067f3191b from memory into f26
la x2, scratch
li x3, 0x0dd6d81d # load x3 with 32 MSBs 0x000000000dd6d81d
sw x3, 0(x2) # store x3 (0x0dd6d81d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000dd6d81d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000000dd6d81d from memory into f28
fdiv.d f26, f26, f28 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0xdc4f69f6 # load x3 with 32 MSBs 0x00000000dc4f69f6
sw x3, 0(x2) # store x3 (0xdc4f69f6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dc4f69f6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000dc4f69f6 from memory into f27
la x2, scratch
li x3, 0x2fa31519 # load x3 with 32 MSBs 0x000000002fa31519
sw x3, 0(x2) # store x3 (0x2fa31519) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002fa31519
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000002fa31519 from memory into f1
fdiv.d f19, f27, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0xa8cf28e9 # load x3 with 32 MSBs 0x00000000a8cf28e9
sw x3, 0(x2) # store x3 (0xa8cf28e9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a8cf28e9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000a8cf28e9 from memory into f28
la x2, scratch
li x3, 0x71c87f48 # load x3 with 32 MSBs 0x0000000071c87f48
sw x3, 0(x2) # store x3 (0x71c87f48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000071c87f48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000071c87f48 from memory into f22
fdiv.d f10, f28, f22 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0x966692ed # load x3 with 32 MSBs 0x00000000966692ed
sw x3, 0(x2) # store x3 (0x966692ed) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000966692ed
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000966692ed from memory into f29
la x2, scratch
li x3, 0xa981e5b8 # load x3 with 32 MSBs 0x00000000a981e5b8
sw x3, 0(x2) # store x3 (0xa981e5b8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a981e5b8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000a981e5b8 from memory into f30
fdiv.d f24, f29, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0xfc53fdca # load x3 with 32 MSBs 0x00000000fc53fdca
sw x3, 0(x2) # store x3 (0xfc53fdca) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fc53fdca
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000fc53fdca from memory into f30
la x2, scratch
li x3, 0xd5afb4da # load x3 with 32 MSBs 0x00000000d5afb4da
sw x3, 0(x2) # store x3 (0xd5afb4da) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d5afb4da
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000d5afb4da from memory into f19
fdiv.d f16, f30, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xa3ad9fef # load x3 with 32 MSBs 0x00000000a3ad9fef
sw x3, 0(x2) # store x3 (0xa3ad9fef) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a3ad9fef
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000a3ad9fef from memory into f31
la x2, scratch
li x3, 0x2011c046 # load x3 with 32 MSBs 0x000000002011c046
sw x3, 0(x2) # store x3 (0x2011c046) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002011c046
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000002011c046 from memory into f24
fdiv.d f13, f31, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x864d4ec4 # load x3 with 32 MSBs 0x00000000864d4ec4
sw x3, 0(x2) # store x3 (0x864d4ec4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000864d4ec4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000864d4ec4 from memory into f5
la x2, scratch
li x3, 0xe8c0fadb # load x3 with 32 MSBs 0x00000000e8c0fadb
sw x3, 0(x2) # store x3 (0xe8c0fadb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e8c0fadb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000e8c0fadb from memory into f0
fdiv.d f20, f5, f0 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x73abe0af # load x3 with 32 MSBs 0x0000000073abe0af
sw x3, 0(x2) # store x3 (0x73abe0af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000073abe0af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000073abe0af from memory into f7
la x2, scratch
li x3, 0x6f858c65 # load x3 with 32 MSBs 0x000000006f858c65
sw x3, 0(x2) # store x3 (0x6f858c65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006f858c65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000006f858c65 from memory into f1
fdiv.d f12, f7, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0x21d7c0a0 # load x3 with 32 MSBs 0x0000000021d7c0a0
sw x3, 0(x2) # store x3 (0x21d7c0a0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000021d7c0a0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000021d7c0a0 from memory into f12
la x2, scratch
li x3, 0xc8fa3f7d # load x3 with 32 MSBs 0x00000000c8fa3f7d
sw x3, 0(x2) # store x3 (0xc8fa3f7d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c8fa3f7d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000c8fa3f7d from memory into f2
fdiv.d f18, f12, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x267221db # load x3 with 32 MSBs 0x00000000267221db
sw x3, 0(x2) # store x3 (0x267221db) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000267221db
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000267221db from memory into f18
la x2, scratch
li x3, 0xdf90db30 # load x3 with 32 MSBs 0x00000000df90db30
sw x3, 0(x2) # store x3 (0xdf90db30) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000df90db30
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000df90db30 from memory into f3
fdiv.d f17, f18, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x808d4896 # load x3 with 32 MSBs 0x00000000808d4896
sw x3, 0(x2) # store x3 (0x808d4896) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000808d4896
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000808d4896 from memory into f7
la x2, scratch
li x3, 0x6bde6448 # load x3 with 32 MSBs 0x000000006bde6448
sw x3, 0(x2) # store x3 (0x6bde6448) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006bde6448
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000006bde6448 from memory into f4
fdiv.d f6, f7, f4 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xeec97e47 # load x3 with 32 MSBs 0x00000000eec97e47
sw x3, 0(x2) # store x3 (0xeec97e47) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eec97e47
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000eec97e47 from memory into f26
la x2, scratch
li x3, 0x9bf8ef3f # load x3 with 32 MSBs 0x000000009bf8ef3f
sw x3, 0(x2) # store x3 (0x9bf8ef3f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009bf8ef3f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009bf8ef3f from memory into f5
fdiv.d f28, f26, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x4950e467 # load x3 with 32 MSBs 0x000000004950e467
sw x3, 0(x2) # store x3 (0x4950e467) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004950e467
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000004950e467 from memory into f24
la x2, scratch
li x3, 0x75082c40 # load x3 with 32 MSBs 0x0000000075082c40
sw x3, 0(x2) # store x3 (0x75082c40) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000075082c40
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000075082c40 from memory into f6
fdiv.d f3, f24, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xf254da0f # load x3 with 32 MSBs 0x00000000f254da0f
sw x3, 0(x2) # store x3 (0xf254da0f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f254da0f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000f254da0f from memory into f9
la x2, scratch
li x3, 0x92b1ed5d # load x3 with 32 MSBs 0x0000000092b1ed5d
sw x3, 0(x2) # store x3 (0x92b1ed5d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000092b1ed5d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000092b1ed5d from memory into f7
fdiv.d f10, f9, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xbce9c11b # load x3 with 32 MSBs 0x00000000bce9c11b
sw x3, 0(x2) # store x3 (0xbce9c11b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bce9c11b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000bce9c11b from memory into f11
la x2, scratch
li x3, 0xb444da55 # load x3 with 32 MSBs 0x00000000b444da55
sw x3, 0(x2) # store x3 (0xb444da55) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b444da55
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000b444da55 from memory into f8
fdiv.d f28, f11, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0x2dd60a36 # load x3 with 32 MSBs 0x000000002dd60a36
sw x3, 0(x2) # store x3 (0x2dd60a36) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002dd60a36
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000000002dd60a36 from memory into f2
la x2, scratch
li x3, 0xba1fcc02 # load x3 with 32 MSBs 0x00000000ba1fcc02
sw x3, 0(x2) # store x3 (0xba1fcc02) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ba1fcc02
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000ba1fcc02 from memory into f9
fdiv.d f20, f2, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0xd89d2f48 # load x3 with 32 MSBs 0x00000000d89d2f48
sw x3, 0(x2) # store x3 (0xd89d2f48) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d89d2f48
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000d89d2f48 from memory into f9
la x2, scratch
li x3, 0x1cbd8917 # load x3 with 32 MSBs 0x000000001cbd8917
sw x3, 0(x2) # store x3 (0x1cbd8917) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001cbd8917
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000001cbd8917 from memory into f10
fdiv.d f18, f9, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0x075e46e8 # load x3 with 32 MSBs 0x00000000075e46e8
sw x3, 0(x2) # store x3 (0x075e46e8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000075e46e8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000075e46e8 from memory into f10
la x2, scratch
li x3, 0xd9a29608 # load x3 with 32 MSBs 0x00000000d9a29608
sw x3, 0(x2) # store x3 (0xd9a29608) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d9a29608
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000d9a29608 from memory into f11
fdiv.d f11, f10, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x164a1af9 # load x3 with 32 MSBs 0x00000000164a1af9
sw x3, 0(x2) # store x3 (0x164a1af9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000164a1af9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000164a1af9 from memory into f1
la x2, scratch
li x3, 0x9ba2024c # load x3 with 32 MSBs 0x000000009ba2024c
sw x3, 0(x2) # store x3 (0x9ba2024c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ba2024c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000009ba2024c from memory into f12
fdiv.d f23, f1, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x82c411d9 # load x3 with 32 MSBs 0x0000000082c411d9
sw x3, 0(x2) # store x3 (0x82c411d9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000082c411d9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000082c411d9 from memory into f16
la x2, scratch
li x3, 0xb63c8379 # load x3 with 32 MSBs 0x00000000b63c8379
sw x3, 0(x2) # store x3 (0xb63c8379) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b63c8379
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000b63c8379 from memory into f13
fdiv.d f20, f16, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x042908ed # load x3 with 32 MSBs 0x00000000042908ed
sw x3, 0(x2) # store x3 (0x042908ed) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000042908ed
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000042908ed from memory into f28
la x2, scratch
li x3, 0x5539e565 # load x3 with 32 MSBs 0x000000005539e565
sw x3, 0(x2) # store x3 (0x5539e565) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005539e565
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000005539e565 from memory into f14
fdiv.d f1, f28, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x13d62142 # load x3 with 32 MSBs 0x0000000013d62142
sw x3, 0(x2) # store x3 (0x13d62142) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000013d62142
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000013d62142 from memory into f28
la x2, scratch
li x3, 0x9f675f8d # load x3 with 32 MSBs 0x000000009f675f8d
sw x3, 0(x2) # store x3 (0x9f675f8d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f675f8d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000009f675f8d from memory into f15
fdiv.d f1, f28, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0xb95d048b # load x3 with 32 MSBs 0x00000000b95d048b
sw x3, 0(x2) # store x3 (0xb95d048b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b95d048b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000b95d048b from memory into f22
la x2, scratch
li x3, 0xcb0e4751 # load x3 with 32 MSBs 0x00000000cb0e4751
sw x3, 0(x2) # store x3 (0xcb0e4751) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cb0e4751
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000cb0e4751 from memory into f16
fdiv.d f23, f22, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xcc99e239 # load x3 with 32 MSBs 0x00000000cc99e239
sw x3, 0(x2) # store x3 (0xcc99e239) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cc99e239
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000cc99e239 from memory into f29
la x2, scratch
li x3, 0x91ea033c # load x3 with 32 MSBs 0x0000000091ea033c
sw x3, 0(x2) # store x3 (0x91ea033c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000091ea033c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000091ea033c from memory into f17
fdiv.d f25, f29, f17 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x27ed52af # load x3 with 32 MSBs 0x0000000027ed52af
sw x3, 0(x2) # store x3 (0x27ed52af) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027ed52af
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000027ed52af from memory into f2
la x2, scratch
li x3, 0x2c85645d # load x3 with 32 MSBs 0x000000002c85645d
sw x3, 0(x2) # store x3 (0x2c85645d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002c85645d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000002c85645d from memory into f18
fdiv.d f20, f2, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0xc365467e # load x3 with 32 MSBs 0x00000000c365467e
sw x3, 0(x2) # store x3 (0xc365467e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c365467e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000c365467e from memory into f24
la x2, scratch
li x3, 0x76590c49 # load x3 with 32 MSBs 0x0000000076590c49
sw x3, 0(x2) # store x3 (0x76590c49) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000076590c49
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000076590c49 from memory into f19
fdiv.d f23, f24, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0x2915ab02 # load x3 with 32 MSBs 0x000000002915ab02
sw x3, 0(x2) # store x3 (0x2915ab02) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002915ab02
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000002915ab02 from memory into f23
la x2, scratch
li x3, 0x7c7a8be4 # load x3 with 32 MSBs 0x000000007c7a8be4
sw x3, 0(x2) # store x3 (0x7c7a8be4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007c7a8be4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000000007c7a8be4 from memory into f20
fdiv.d f25, f23, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0x60919b63 # load x3 with 32 MSBs 0x0000000060919b63
sw x3, 0(x2) # store x3 (0x60919b63) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000060919b63
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000060919b63 from memory into f25
la x2, scratch
li x3, 0x66c1eb68 # load x3 with 32 MSBs 0x0000000066c1eb68
sw x3, 0(x2) # store x3 (0x66c1eb68) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000066c1eb68
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000066c1eb68 from memory into f21
fdiv.d f15, f25, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x651110ad # load x3 with 32 MSBs 0x00000000651110ad
sw x3, 0(x2) # store x3 (0x651110ad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000651110ad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000651110ad from memory into f26
la x2, scratch
li x3, 0xfc48c98c # load x3 with 32 MSBs 0x00000000fc48c98c
sw x3, 0(x2) # store x3 (0xfc48c98c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fc48c98c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000fc48c98c from memory into f22
fdiv.d f5, f26, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0x4daacc7f # load x3 with 32 MSBs 0x000000004daacc7f
sw x3, 0(x2) # store x3 (0x4daacc7f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004daacc7f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004daacc7f from memory into f8
la x2, scratch
li x3, 0xb0c98b93 # load x3 with 32 MSBs 0x00000000b0c98b93
sw x3, 0(x2) # store x3 (0xb0c98b93) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b0c98b93
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000b0c98b93 from memory into f23
fdiv.d f9, f8, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0x44abed18 # load x3 with 32 MSBs 0x0000000044abed18
sw x3, 0(x2) # store x3 (0x44abed18) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000044abed18
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000044abed18 from memory into f20
la x2, scratch
li x3, 0x154443fb # load x3 with 32 MSBs 0x00000000154443fb
sw x3, 0(x2) # store x3 (0x154443fb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000154443fb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000154443fb from memory into f24
fdiv.d f23, f20, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0xf61d8d53 # load x3 with 32 MSBs 0x00000000f61d8d53
sw x3, 0(x2) # store x3 (0xf61d8d53) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f61d8d53
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000f61d8d53 from memory into f1
la x2, scratch
li x3, 0x698239b2 # load x3 with 32 MSBs 0x00000000698239b2
sw x3, 0(x2) # store x3 (0x698239b2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000698239b2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000698239b2 from memory into f25
fdiv.d f13, f1, f25 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x2b96d333 # load x3 with 32 MSBs 0x000000002b96d333
sw x3, 0(x2) # store x3 (0x2b96d333) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002b96d333
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000002b96d333 from memory into f3
la x2, scratch
li x3, 0x7254ab7a # load x3 with 32 MSBs 0x000000007254ab7a
sw x3, 0(x2) # store x3 (0x7254ab7a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007254ab7a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000007254ab7a from memory into f26
fdiv.d f9, f3, f26 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x0e3be985 # load x3 with 32 MSBs 0x000000000e3be985
sw x3, 0(x2) # store x3 (0x0e3be985) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000e3be985
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000000e3be985 from memory into f29
la x2, scratch
li x3, 0xd8728cda # load x3 with 32 MSBs 0x00000000d8728cda
sw x3, 0(x2) # store x3 (0xd8728cda) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d8728cda
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000d8728cda from memory into f27
fdiv.d f26, f29, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x5a2ec1f0 # load x3 with 32 MSBs 0x000000005a2ec1f0
sw x3, 0(x2) # store x3 (0x5a2ec1f0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005a2ec1f0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000005a2ec1f0 from memory into f10
la x2, scratch
li x3, 0x6122afd9 # load x3 with 32 MSBs 0x000000006122afd9
sw x3, 0(x2) # store x3 (0x6122afd9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006122afd9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000006122afd9 from memory into f28
fdiv.d f19, f10, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0x509d954e # load x3 with 32 MSBs 0x00000000509d954e
sw x3, 0(x2) # store x3 (0x509d954e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000509d954e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000509d954e from memory into f5
la x2, scratch
li x3, 0x4773ea7f # load x3 with 32 MSBs 0x000000004773ea7f
sw x3, 0(x2) # store x3 (0x4773ea7f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004773ea7f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000004773ea7f from memory into f29
fdiv.d f23, f5, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0x4c6fcc14 # load x3 with 32 MSBs 0x000000004c6fcc14
sw x3, 0(x2) # store x3 (0x4c6fcc14) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004c6fcc14
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000004c6fcc14 from memory into f11
la x2, scratch
li x3, 0xae239a75 # load x3 with 32 MSBs 0x00000000ae239a75
sw x3, 0(x2) # store x3 (0xae239a75) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ae239a75
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000ae239a75 from memory into f30
fdiv.d f25, f11, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x44b37214 # load x3 with 32 MSBs 0x0000000044b37214
sw x3, 0(x2) # store x3 (0x44b37214) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000044b37214
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000044b37214 from memory into f25
la x2, scratch
li x3, 0x6bd0ff22 # load x3 with 32 MSBs 0x000000006bd0ff22
sw x3, 0(x2) # store x3 (0x6bd0ff22) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006bd0ff22
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006bd0ff22 from memory into f31
fdiv.d f29, f25, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0x5780a3d3 # load x3 with 32 MSBs 0x000000005780a3d3
sw x3, 0(x2) # store x3 (0x5780a3d3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005780a3d3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000005780a3d3 from memory into f22
la x2, scratch
li x3, 0x78bbe1a3 # load x3 with 32 MSBs 0x0000000078bbe1a3
sw x3, 0(x2) # store x3 (0x78bbe1a3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000078bbe1a3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000078bbe1a3 from memory into f26
fdiv.d f0, f22, f26 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0x1a596833 # load x3 with 32 MSBs 0x000000001a596833
sw x3, 0(x2) # store x3 (0x1a596833) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001a596833
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000001a596833 from memory into f17
la x2, scratch
li x3, 0xb3db0a2f # load x3 with 32 MSBs 0x00000000b3db0a2f
sw x3, 0(x2) # store x3 (0xb3db0a2f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b3db0a2f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000b3db0a2f from memory into f20
fdiv.d f1, f17, f20 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0xf5b9d63a # load x3 with 32 MSBs 0x00000000f5b9d63a
sw x3, 0(x2) # store x3 (0xf5b9d63a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f5b9d63a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000f5b9d63a from memory into f28
la x2, scratch
li x3, 0x532cd8a0 # load x3 with 32 MSBs 0x00000000532cd8a0
sw x3, 0(x2) # store x3 (0x532cd8a0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000532cd8a0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000532cd8a0 from memory into f11
fdiv.d f2, f28, f11 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x9e7db3ba # load x3 with 32 MSBs 0x000000009e7db3ba
sw x3, 0(x2) # store x3 (0x9e7db3ba) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009e7db3ba
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009e7db3ba from memory into f22
la x2, scratch
li x3, 0xda975354 # load x3 with 32 MSBs 0x00000000da975354
sw x3, 0(x2) # store x3 (0xda975354) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da975354
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000da975354 from memory into f29
fdiv.d f3, f22, f29 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8c2f5d65 # load x3 with 32 MSBs 0x000000008c2f5d65
sw x3, 0(x2) # store x3 (0x8c2f5d65) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008c2f5d65
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008c2f5d65 from memory into f31
la x2, scratch
li x3, 0xeb93c146 # load x3 with 32 MSBs 0x00000000eb93c146
sw x3, 0(x2) # store x3 (0xeb93c146) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eb93c146
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000eb93c146 from memory into f27
fdiv.d f4, f31, f27 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9029794b # load x3 with 32 MSBs 0x000000009029794b
sw x3, 0(x2) # store x3 (0x9029794b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009029794b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000009029794b from memory into f13
la x2, scratch
li x3, 0xa7f3c9b1 # load x3 with 32 MSBs 0x00000000a7f3c9b1
sw x3, 0(x2) # store x3 (0xa7f3c9b1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a7f3c9b1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000a7f3c9b1 from memory into f29
fdiv.d f5, f13, f29 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0d6bda1e # load x3 with 32 MSBs 0x000000000d6bda1e
sw x3, 0(x2) # store x3 (0x0d6bda1e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000d6bda1e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000d6bda1e from memory into f17
la x2, scratch
li x3, 0xd2fbb5e7 # load x3 with 32 MSBs 0x00000000d2fbb5e7
sw x3, 0(x2) # store x3 (0xd2fbb5e7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d2fbb5e7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000d2fbb5e7 from memory into f12
fdiv.d f6, f17, f12 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2ca680f9 # load x3 with 32 MSBs 0x000000002ca680f9
sw x3, 0(x2) # store x3 (0x2ca680f9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002ca680f9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000002ca680f9 from memory into f13
la x2, scratch
li x3, 0xd94d176d # load x3 with 32 MSBs 0x00000000d94d176d
sw x3, 0(x2) # store x3 (0xd94d176d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d94d176d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000d94d176d from memory into f1
fdiv.d f7, f13, f1 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x310f0dc6 # load x3 with 32 MSBs 0x00000000310f0dc6
sw x3, 0(x2) # store x3 (0x310f0dc6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000310f0dc6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000310f0dc6 from memory into f14
la x2, scratch
li x3, 0x664fc818 # load x3 with 32 MSBs 0x00000000664fc818
sw x3, 0(x2) # store x3 (0x664fc818) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000664fc818
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000664fc818 from memory into f15
fdiv.d f8, f14, f15 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0x1ed30bb0 # load x3 with 32 MSBs 0x000000001ed30bb0
sw x3, 0(x2) # store x3 (0x1ed30bb0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001ed30bb0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000001ed30bb0 from memory into f28
la x2, scratch
li x3, 0x0b7c2e61 # load x3 with 32 MSBs 0x000000000b7c2e61
sw x3, 0(x2) # store x3 (0x0b7c2e61) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000b7c2e61
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000000b7c2e61 from memory into f16
fdiv.d f9, f28, f16 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0x8159fba5 # load x3 with 32 MSBs 0x000000008159fba5
sw x3, 0(x2) # store x3 (0x8159fba5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008159fba5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000008159fba5 from memory into f25
la x2, scratch
li x3, 0xca5be0ba # load x3 with 32 MSBs 0x00000000ca5be0ba
sw x3, 0(x2) # store x3 (0xca5be0ba) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ca5be0ba
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000ca5be0ba from memory into f7
fdiv.d f10, f25, f7 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0xb2260a3c # load x3 with 32 MSBs 0x00000000b2260a3c
sw x3, 0(x2) # store x3 (0xb2260a3c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b2260a3c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b2260a3c from memory into f28
la x2, scratch
li x3, 0xc474428d # load x3 with 32 MSBs 0x00000000c474428d
sw x3, 0(x2) # store x3 (0xc474428d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c474428d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c474428d from memory into f25
fdiv.d f11, f28, f25 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x0ae3d248 # load x3 with 32 MSBs 0x000000000ae3d248
sw x3, 0(x2) # store x3 (0x0ae3d248) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000ae3d248
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000000000ae3d248 from memory into f1
la x2, scratch
li x3, 0x3468f437 # load x3 with 32 MSBs 0x000000003468f437
sw x3, 0(x2) # store x3 (0x3468f437) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003468f437
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003468f437 from memory into f26
fdiv.d f12, f1, f26 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xdec8c586 # load x3 with 32 MSBs 0x00000000dec8c586
sw x3, 0(x2) # store x3 (0xdec8c586) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dec8c586
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000dec8c586 from memory into f27
la x2, scratch
li x3, 0x09eb592d # load x3 with 32 MSBs 0x0000000009eb592d
sw x3, 0(x2) # store x3 (0x09eb592d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000009eb592d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000009eb592d from memory into f5
fdiv.d f13, f27, f5 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0x3132997f # load x3 with 32 MSBs 0x000000003132997f
sw x3, 0(x2) # store x3 (0x3132997f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003132997f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000003132997f from memory into f9
la x2, scratch
li x3, 0x6c6accb2 # load x3 with 32 MSBs 0x000000006c6accb2
sw x3, 0(x2) # store x3 (0x6c6accb2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006c6accb2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000006c6accb2 from memory into f5
fdiv.d f14, f9, f5 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0x8848671c # load x3 with 32 MSBs 0x000000008848671c
sw x3, 0(x2) # store x3 (0x8848671c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008848671c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000008848671c from memory into f21
la x2, scratch
li x3, 0x00176b76 # load x3 with 32 MSBs 0x0000000000176b76
sw x3, 0(x2) # store x3 (0x00176b76) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000176b76
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000176b76 from memory into f30
fdiv.d f15, f21, f30 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x90d329c1 # load x3 with 32 MSBs 0x0000000090d329c1
sw x3, 0(x2) # store x3 (0x90d329c1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000090d329c1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000090d329c1 from memory into f24
la x2, scratch
li x3, 0x54a606cd # load x3 with 32 MSBs 0x0000000054a606cd
sw x3, 0(x2) # store x3 (0x54a606cd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000054a606cd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000054a606cd from memory into f26
fdiv.d f16, f24, f26 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xf8899246 # load x3 with 32 MSBs 0x00000000f8899246
sw x3, 0(x2) # store x3 (0xf8899246) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f8899246
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x00000000f8899246 from memory into f16
la x2, scratch
li x3, 0x854dc512 # load x3 with 32 MSBs 0x00000000854dc512
sw x3, 0(x2) # store x3 (0x854dc512) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000854dc512
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000854dc512 from memory into f31
fdiv.d f17, f16, f31 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x3f9e01b0 # load x3 with 32 MSBs 0x000000003f9e01b0
sw x3, 0(x2) # store x3 (0x3f9e01b0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003f9e01b0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000003f9e01b0 from memory into f26
la x2, scratch
li x3, 0xd73ee898 # load x3 with 32 MSBs 0x00000000d73ee898
sw x3, 0(x2) # store x3 (0xd73ee898) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d73ee898
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000d73ee898 from memory into f31
fdiv.d f18, f26, f31 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x0184a710 # load x3 with 32 MSBs 0x000000000184a710
sw x3, 0(x2) # store x3 (0x0184a710) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000184a710
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000000184a710 from memory into f17
la x2, scratch
li x3, 0xc9ef8b0d # load x3 with 32 MSBs 0x00000000c9ef8b0d
sw x3, 0(x2) # store x3 (0xc9ef8b0d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c9ef8b0d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c9ef8b0d from memory into f6
fdiv.d f19, f17, f6 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0x9fe11036 # load x3 with 32 MSBs 0x000000009fe11036
sw x3, 0(x2) # store x3 (0x9fe11036) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009fe11036
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009fe11036 from memory into f18
la x2, scratch
li x3, 0xe311af8f # load x3 with 32 MSBs 0x00000000e311af8f
sw x3, 0(x2) # store x3 (0xe311af8f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e311af8f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e311af8f from memory into f28
fdiv.d f20, f18, f28 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0xbfa7a11b # load x3 with 32 MSBs 0x00000000bfa7a11b
sw x3, 0(x2) # store x3 (0xbfa7a11b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bfa7a11b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000bfa7a11b from memory into f13
la x2, scratch
li x3, 0xd452b4b1 # load x3 with 32 MSBs 0x00000000d452b4b1
sw x3, 0(x2) # store x3 (0xd452b4b1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d452b4b1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000d452b4b1 from memory into f15
fdiv.d f21, f13, f15 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x37b1fc68 # load x3 with 32 MSBs 0x0000000037b1fc68
sw x3, 0(x2) # store x3 (0x37b1fc68) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000037b1fc68
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000037b1fc68 from memory into f29
la x2, scratch
li x3, 0x5c9256a6 # load x3 with 32 MSBs 0x000000005c9256a6
sw x3, 0(x2) # store x3 (0x5c9256a6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005c9256a6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000005c9256a6 from memory into f30
fdiv.d f22, f29, f30 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x8f768587 # load x3 with 32 MSBs 0x000000008f768587
sw x3, 0(x2) # store x3 (0x8f768587) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008f768587
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008f768587 from memory into f12
la x2, scratch
li x3, 0xcbdf8fcd # load x3 with 32 MSBs 0x00000000cbdf8fcd
sw x3, 0(x2) # store x3 (0xcbdf8fcd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cbdf8fcd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000cbdf8fcd from memory into f31
fdiv.d f23, f12, f31 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0x2ae8aff8 # load x3 with 32 MSBs 0x000000002ae8aff8
sw x3, 0(x2) # store x3 (0x2ae8aff8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002ae8aff8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000002ae8aff8 from memory into f11
la x2, scratch
li x3, 0xaf5c2bcb # load x3 with 32 MSBs 0x00000000af5c2bcb
sw x3, 0(x2) # store x3 (0xaf5c2bcb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000af5c2bcb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000af5c2bcb from memory into f13
fdiv.d f24, f11, f13 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xe36e747b # load x3 with 32 MSBs 0x00000000e36e747b
sw x3, 0(x2) # store x3 (0xe36e747b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e36e747b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000e36e747b from memory into f18
la x2, scratch
li x3, 0x1dda3d90 # load x3 with 32 MSBs 0x000000001dda3d90
sw x3, 0(x2) # store x3 (0x1dda3d90) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001dda3d90
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000001dda3d90 from memory into f15
fdiv.d f25, f18, f15 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x4b609db0 # load x3 with 32 MSBs 0x000000004b609db0
sw x3, 0(x2) # store x3 (0x4b609db0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004b609db0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000004b609db0 from memory into f9
la x2, scratch
li x3, 0x813b554d # load x3 with 32 MSBs 0x00000000813b554d
sw x3, 0(x2) # store x3 (0x813b554d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000813b554d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000813b554d from memory into f7
fdiv.d f26, f9, f7 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x3c8f9fc8 # load x3 with 32 MSBs 0x000000003c8f9fc8
sw x3, 0(x2) # store x3 (0x3c8f9fc8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003c8f9fc8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000003c8f9fc8 from memory into f31
la x2, scratch
li x3, 0x7dfec67c # load x3 with 32 MSBs 0x000000007dfec67c
sw x3, 0(x2) # store x3 (0x7dfec67c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007dfec67c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000007dfec67c from memory into f7
fdiv.d f27, f31, f7 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x6769c62c # load x3 with 32 MSBs 0x000000006769c62c
sw x3, 0(x2) # store x3 (0x6769c62c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006769c62c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000006769c62c from memory into f13
la x2, scratch
li x3, 0xeff5d68b # load x3 with 32 MSBs 0x00000000eff5d68b
sw x3, 0(x2) # store x3 (0xeff5d68b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eff5d68b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000eff5d68b from memory into f31
fdiv.d f28, f13, f31 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xa4e2d71f # load x3 with 32 MSBs 0x00000000a4e2d71f
sw x3, 0(x2) # store x3 (0xa4e2d71f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a4e2d71f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000a4e2d71f from memory into f13
la x2, scratch
li x3, 0xade3fef9 # load x3 with 32 MSBs 0x00000000ade3fef9
sw x3, 0(x2) # store x3 (0xade3fef9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ade3fef9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000ade3fef9 from memory into f15
fdiv.d f29, f13, f15 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0xa64356b6 # load x3 with 32 MSBs 0x00000000a64356b6
sw x3, 0(x2) # store x3 (0xa64356b6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a64356b6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000a64356b6 from memory into f5
la x2, scratch
li x3, 0xacfed876 # load x3 with 32 MSBs 0x00000000acfed876
sw x3, 0(x2) # store x3 (0xacfed876) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000acfed876
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000acfed876 from memory into f1
fdiv.d f30, f5, f1 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x4c179b92 # load x3 with 32 MSBs 0x000000004c179b92
sw x3, 0(x2) # store x3 (0x4c179b92) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004c179b92
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004c179b92 from memory into f27
la x2, scratch
li x3, 0x6fab5b37 # load x3 with 32 MSBs 0x000000006fab5b37
sw x3, 0(x2) # store x3 (0x6fab5b37) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006fab5b37
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000006fab5b37 from memory into f9
fdiv.d f31, f27, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0x3a0ddb8c # load x3 with 32 MSBs 0x000000003a0ddb8c
sw x3, 0(x2) # store x3 (0x3a0ddb8c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003a0ddb8c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000003a0ddb8c from memory into f11
fdiv.d f2, f15, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0xffb520b2 # load x3 with 32 MSBs 0x00000000ffb520b2
sw x3, 0(x2) # store x3 (0xffb520b2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ffb520b2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ffb520b2 from memory into f19
fdiv.d f21, f6, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
la x2, scratch
li x3, 0xd0463f86 # load x3 with 32 MSBs 0x00000000d0463f86
sw x3, 0(x2) # store x3 (0xd0463f86) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d0463f86
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000d0463f86 from memory into f20
fdiv.d f14, f30, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0x6ce809df # load x3 with 32 MSBs 0x000000006ce809df
sw x3, 0(x2) # store x3 (0x6ce809df) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006ce809df
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000006ce809df from memory into f8
fdiv.d f17, f22, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x3ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x26e3f840 # load x3 with 32 MSBs 0x0000000026e3f840
sw x3, 0(x2) # store x3 (0x26e3f840) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000026e3f840
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000026e3f840 from memory into f6
fdiv.d f18, f28, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
la x2, scratch
li x3, 0x06e8cbd6 # load x3 with 32 MSBs 0x0000000006e8cbd6
sw x3, 0(x2) # store x3 (0x06e8cbd6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000006e8cbd6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000006e8cbd6 from memory into f2
fdiv.d f27, f12, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x4000000000000000 from memory into f26
la x2, scratch
li x3, 0xbe81abad # load x3 with 32 MSBs 0x00000000be81abad
sw x3, 0(x2) # store x3 (0xbe81abad) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be81abad
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000be81abad from memory into f3
fdiv.d f31, f26, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
la x2, scratch
li x3, 0xad7590e6 # load x3 with 32 MSBs 0x00000000ad7590e6
sw x3, 0(x2) # store x3 (0xad7590e6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ad7590e6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000ad7590e6 from memory into f10
fdiv.d f31, f12, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
la x2, scratch
li x3, 0x3c994f1b # load x3 with 32 MSBs 0x000000003c994f1b
sw x3, 0(x2) # store x3 (0x3c994f1b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003c994f1b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000003c994f1b from memory into f29
fdiv.d f22, f1, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
la x2, scratch
li x3, 0xc2651c7d # load x3 with 32 MSBs 0x00000000c2651c7d
sw x3, 0(x2) # store x3 (0xc2651c7d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c2651c7d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x00000000c2651c7d from memory into f13
fdiv.d f10, f16, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
la x2, scratch
li x3, 0x7b4895fe # load x3 with 32 MSBs 0x000000007b4895fe
sw x3, 0(x2) # store x3 (0x7b4895fe) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007b4895fe
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000007b4895fe from memory into f25
fdiv.d f31, f3, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
la x2, scratch
li x3, 0x827e35e8 # load x3 with 32 MSBs 0x00000000827e35e8
sw x3, 0(x2) # store x3 (0x827e35e8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000827e35e8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000827e35e8 from memory into f8
fdiv.d f22, f7, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
la x2, scratch
li x3, 0x5d6fe078 # load x3 with 32 MSBs 0x000000005d6fe078
sw x3, 0(x2) # store x3 (0x5d6fe078) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005d6fe078
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005d6fe078 from memory into f7
fdiv.d f31, f23, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x800fffffffffffff from memory into f21
la x2, scratch
li x3, 0x772d296f # load x3 with 32 MSBs 0x00000000772d296f
sw x3, 0(x2) # store x3 (0x772d296f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000772d296f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000772d296f from memory into f15
fdiv.d f5, f21, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
la x2, scratch
li x3, 0xabcf2619 # load x3 with 32 MSBs 0x00000000abcf2619
sw x3, 0(x2) # store x3 (0xabcf2619) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000abcf2619
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000abcf2619 from memory into f23
fdiv.d f2, f20, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
la x2, scratch
li x3, 0x14cf10bd # load x3 with 32 MSBs 0x0000000014cf10bd
sw x3, 0(x2) # store x3 (0x14cf10bd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000014cf10bd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000014cf10bd from memory into f9
fdiv.d f29, f11, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
la x2, scratch
li x3, 0x86669097 # load x3 with 32 MSBs 0x0000000086669097
sw x3, 0(x2) # store x3 (0x86669097) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000086669097
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000086669097 from memory into f20
fdiv.d f25, f23, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
la x2, scratch
li x3, 0x36214e5c # load x3 with 32 MSBs 0x0000000036214e5c
sw x3, 0(x2) # store x3 (0x36214e5c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000036214e5c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000036214e5c from memory into f21
fdiv.d f17, f18, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
la x2, scratch
li x3, 0x993ad6f7 # load x3 with 32 MSBs 0x00000000993ad6f7
sw x3, 0(x2) # store x3 (0x993ad6f7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000993ad6f7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000993ad6f7 from memory into f11
fdiv.d f21, f14, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
la x2, scratch
li x3, 0x9f5defba # load x3 with 32 MSBs 0x000000009f5defba
sw x3, 0(x2) # store x3 (0x9f5defba) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009f5defba
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000000009f5defba from memory into f22
fdiv.d f11, f16, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
la x2, scratch
li x3, 0x9bcf3526 # load x3 with 32 MSBs 0x000000009bcf3526
sw x3, 0(x2) # store x3 (0x9bcf3526) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009bcf3526
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000000009bcf3526 from memory into f18
fdiv.d f9, f20, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
la x2, scratch
li x3, 0x97766a74 # load x3 with 32 MSBs 0x0000000097766a74
sw x3, 0(x2) # store x3 (0x97766a74) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000097766a74
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000097766a74 from memory into f29
fdiv.d f19, f22, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff8000000000000 from memory into f22
la x2, scratch
li x3, 0x3be312e5 # load x3 with 32 MSBs 0x000000003be312e5
sw x3, 0(x2) # store x3 (0x3be312e5) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003be312e5
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000003be312e5 from memory into f21
fdiv.d f5, f22, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff0000000000001 from memory into f12
la x2, scratch
li x3, 0x6817023a # load x3 with 32 MSBs 0x000000006817023a
sw x3, 0(x2) # store x3 (0x6817023a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006817023a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000006817023a from memory into f31
fdiv.d f7, f12, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
la x2, scratch
li x3, 0x30407b78 # load x3 with 32 MSBs 0x0000000030407b78
sw x3, 0(x2) # store x3 (0x30407b78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000030407b78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000030407b78 from memory into f27
fdiv.d f24, f3, f27 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
la x2, scratch
li x3, 0x85c15c27 # load x3 with 32 MSBs 0x0000000085c15c27
sw x3, 0(x2) # store x3 (0x85c15c27) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000085c15c27
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000085c15c27 from memory into f13
fdiv.d f8, f24, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
la x2, scratch
li x3, 0xbd3e2582 # load x3 with 32 MSBs 0x00000000bd3e2582
sw x3, 0(x2) # store x3 (0xbd3e2582) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bd3e2582
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000bd3e2582 from memory into f6
fdiv.d f29, f18, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
la x2, scratch
li x3, 0x949d3b4c # load x3 with 32 MSBs 0x00000000949d3b4c
sw x3, 0(x2) # store x3 (0x949d3b4c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000949d3b4c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000949d3b4c from memory into f25
fdiv.d f11, f3, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0x019e3e00 # load x3 with 32 MSBs 0x00000000019e3e00
sw x3, 0(x2) # store x3 (0x019e3e00) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000019e3e00
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000019e3e00 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fdiv.d f8, f27, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000000)
la x2, scratch
li x3, 0x97257ea6 # load x3 with 32 MSBs 0x0000000097257ea6
sw x3, 0(x2) # store x3 (0x97257ea6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000097257ea6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000097257ea6 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fdiv.d f28, f30, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff0000000000000)
la x2, scratch
li x3, 0xa2815896 # load x3 with 32 MSBs 0x00000000a2815896
sw x3, 0(x2) # store x3 (0xa2815896) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a2815896
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000a2815896 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fdiv.d f8, f11, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff0000000000000)
la x2, scratch
li x3, 0x67be81a9 # load x3 with 32 MSBs 0x0000000067be81a9
sw x3, 0(x2) # store x3 (0x67be81a9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000067be81a9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000067be81a9 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
fdiv.d f10, f1, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3ff8000000000000)
la x2, scratch
li x3, 0x2e760d5d # load x3 with 32 MSBs 0x000000002e760d5d
sw x3, 0(x2) # store x3 (0x2e760d5d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002e760d5d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000000002e760d5d from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
fdiv.d f28, f24, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbff8000000000000)
la x2, scratch
li x3, 0xbd860181 # load x3 with 32 MSBs 0x00000000bd860181
sw x3, 0(x2) # store x3 (0xbd860181) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bd860181
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bd860181 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff8000000000000 from memory into f6
fdiv.d f10, f22, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x4000000000000000)
la x2, scratch
li x3, 0xae3c80bc # load x3 with 32 MSBs 0x00000000ae3c80bc
sw x3, 0(x2) # store x3 (0xae3c80bc) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ae3c80bc
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000ae3c80bc from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
fdiv.d f23, f29, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc000000000000000)
la x2, scratch
li x3, 0x0b3cd8e0 # load x3 with 32 MSBs 0x000000000b3cd8e0
sw x3, 0(x2) # store x3 (0x0b3cd8e0) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000b3cd8e0
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000000000b3cd8e0 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xc000000000000000 from memory into f3
fdiv.d f31, f25, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x10000000000000)
la x2, scratch
li x3, 0xcf702361 # load x3 with 32 MSBs 0x00000000cf702361
sw x3, 0(x2) # store x3 (0xcf702361) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cf702361
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000cf702361 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0010000000000000 from memory into f1
fdiv.d f18, f8, f1 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8010000000000000)
la x2, scratch
li x3, 0x60071584 # load x3 with 32 MSBs 0x0000000060071584
sw x3, 0(x2) # store x3 (0x60071584) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000060071584
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000060071584 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
fdiv.d f14, f11, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fefffffffffffff)
la x2, scratch
li x3, 0x42d38916 # load x3 with 32 MSBs 0x0000000042d38916
sw x3, 0(x2) # store x3 (0x42d38916) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000042d38916
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000042d38916 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f31, f20, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffefffffffffffff)
la x2, scratch
li x3, 0x27952033 # load x3 with 32 MSBs 0x0000000027952033
sw x3, 0(x2) # store x3 (0x27952033) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000027952033
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000027952033 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
fdiv.d f16, f15, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfffffffffffff)
la x2, scratch
li x3, 0x9ff0d223 # load x3 with 32 MSBs 0x000000009ff0d223
sw x3, 0(x2) # store x3 (0x9ff0d223) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009ff0d223
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000000009ff0d223 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fdiv.d f12, f21, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800fffffffffffff)
la x2, scratch
li x3, 0x2493d680 # load x3 with 32 MSBs 0x000000002493d680
sw x3, 0(x2) # store x3 (0x2493d680) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002493d680
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000002493d680 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fdiv.d f21, f19, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000)
la x2, scratch
li x3, 0x820a7c0a # load x3 with 32 MSBs 0x00000000820a7c0a
sw x3, 0(x2) # store x3 (0x820a7c0a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000820a7c0a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000820a7c0a from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fdiv.d f27, f26, f28 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8008000000000000)
la x2, scratch
li x3, 0x9e89288e # load x3 with 32 MSBs 0x000000009e89288e
sw x3, 0(x2) # store x3 (0x9e89288e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009e89288e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000009e89288e from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
fdiv.d f8, f5, f2 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x65c31715 # load x3 with 32 MSBs 0x0000000065c31715
sw x3, 0(x2) # store x3 (0x65c31715) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000065c31715
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000065c31715 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fdiv.d f21, f6, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x8000000000000001)
la x2, scratch
li x3, 0x2b5f93ae # load x3 with 32 MSBs 0x000000002b5f93ae
sw x3, 0(x2) # store x3 (0x2b5f93ae) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002b5f93ae
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002b5f93ae from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fdiv.d f11, f5, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000000)
la x2, scratch
li x3, 0xc53ca96f # load x3 with 32 MSBs 0x00000000c53ca96f
sw x3, 0(x2) # store x3 (0xc53ca96f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c53ca96f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000c53ca96f from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
fdiv.d f14, f25, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000000)
la x2, scratch
li x3, 0x35ebbf0f # load x3 with 32 MSBs 0x0000000035ebbf0f
sw x3, 0(x2) # store x3 (0x35ebbf0f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000035ebbf0f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000035ebbf0f from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f3, f7, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff8000000000000)
la x2, scratch
li x3, 0xdba09753 # load x3 with 32 MSBs 0x00000000dba09753
sw x3, 0(x2) # store x3 (0xdba09753) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000dba09753
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000dba09753 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
fdiv.d f24, f10, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffffffffffff)
la x2, scratch
li x3, 0x54266b82 # load x3 with 32 MSBs 0x0000000054266b82
sw x3, 0(x2) # store x3 (0x54266b82) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000054266b82
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000054266b82 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fdiv.d f19, f15, f18 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff8000000000000)
la x2, scratch
li x3, 0xc23143f9 # load x3 with 32 MSBs 0x00000000c23143f9
sw x3, 0(x2) # store x3 (0xc23143f9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c23143f9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000c23143f9 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
fdiv.d f27, f30, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff0000000000001)
la x2, scratch
li x3, 0x217d3cd6 # load x3 with 32 MSBs 0x00000000217d3cd6
sw x3, 0(x2) # store x3 (0x217d3cd6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000217d3cd6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000217d3cd6 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
fdiv.d f1, f31, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ff7ffffffffffff)
la x2, scratch
li x3, 0xac617bb9 # load x3 with 32 MSBs 0x00000000ac617bb9
sw x3, 0(x2) # store x3 (0xac617bb9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ac617bb9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x00000000ac617bb9 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fdiv.d f15, f8, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xfff0000000000001)
la x2, scratch
li x3, 0x5c224f79 # load x3 with 32 MSBs 0x000000005c224f79
sw x3, 0(x2) # store x3 (0x5c224f79) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005c224f79
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000005c224f79 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fdiv.d f6, f7, f19 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x5a392534a57711ad)
la x2, scratch
li x3, 0x6d6c6ba7 # load x3 with 32 MSBs 0x000000006d6c6ba7
sw x3, 0(x2) # store x3 (0x6d6c6ba7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006d6c6ba7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000006d6c6ba7 from memory into f12
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fdiv.d f31, f12, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xa6e895993737426c)
la x2, scratch
li x3, 0x91ad63a1 # load x3 with 32 MSBs 0x0000000091ad63a1
sw x3, 0(x2) # store x3 (0x91ad63a1) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000091ad63a1
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000091ad63a1 from memory into f30
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fdiv.d f5, f30, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0xbd503a42 # load x3 with 32 MSBs 0x00000000bd503a42
sw x3, 0(x2) # store x3 (0xbd503a42) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bd503a42
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x00000000bd503a42 from memory into f0
la x2, scratch
li x3, 0x5682109f # load x3 with 32 MSBs 0x000000005682109f
sw x3, 0(x2) # store x3 (0x5682109f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005682109f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000005682109f from memory into f23
fdiv.d f0, f0, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x97cc5f1b # load x3 with 32 MSBs 0x0000000097cc5f1b
sw x3, 0(x2) # store x3 (0x97cc5f1b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000097cc5f1b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000097cc5f1b from memory into f1
la x2, scratch
li x3, 0xddc27175 # load x3 with 32 MSBs 0x00000000ddc27175
sw x3, 0(x2) # store x3 (0xddc27175) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ddc27175
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x00000000ddc27175 from memory into f31
fdiv.d f1, f1, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0xe44fd520 # load x3 with 32 MSBs 0x00000000e44fd520
sw x3, 0(x2) # store x3 (0xe44fd520) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e44fd520
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x00000000e44fd520 from memory into f2
la x2, scratch
li x3, 0x40d626ac # load x3 with 32 MSBs 0x0000000040d626ac
sw x3, 0(x2) # store x3 (0x40d626ac) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000040d626ac
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000040d626ac from memory into f23
fdiv.d f2, f2, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0xbe78b36e # load x3 with 32 MSBs 0x00000000be78b36e
sw x3, 0(x2) # store x3 (0xbe78b36e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be78b36e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000be78b36e from memory into f3
la x2, scratch
li x3, 0x455fe13f # load x3 with 32 MSBs 0x00000000455fe13f
sw x3, 0(x2) # store x3 (0x455fe13f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000455fe13f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000455fe13f from memory into f11
fdiv.d f3, f3, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xaa54623f # load x3 with 32 MSBs 0x00000000aa54623f
sw x3, 0(x2) # store x3 (0xaa54623f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aa54623f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x00000000aa54623f from memory into f4
la x2, scratch
li x3, 0x9b3d15ff # load x3 with 32 MSBs 0x000000009b3d15ff
sw x3, 0(x2) # store x3 (0x9b3d15ff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009b3d15ff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000000009b3d15ff from memory into f3
fdiv.d f4, f4, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x266ba176 # load x3 with 32 MSBs 0x00000000266ba176
sw x3, 0(x2) # store x3 (0x266ba176) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000266ba176
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000266ba176 from memory into f5
la x2, scratch
li x3, 0xfd2f416b # load x3 with 32 MSBs 0x00000000fd2f416b
sw x3, 0(x2) # store x3 (0xfd2f416b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fd2f416b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000fd2f416b from memory into f25
fdiv.d f5, f5, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xb6242677 # load x3 with 32 MSBs 0x00000000b6242677
sw x3, 0(x2) # store x3 (0xb6242677) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b6242677
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000b6242677 from memory into f6
la x2, scratch
li x3, 0x9c80e118 # load x3 with 32 MSBs 0x000000009c80e118
sw x3, 0(x2) # store x3 (0x9c80e118) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009c80e118
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000000009c80e118 from memory into f16
fdiv.d f6, f6, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x704925c3 # load x3 with 32 MSBs 0x00000000704925c3
sw x3, 0(x2) # store x3 (0x704925c3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000704925c3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x00000000704925c3 from memory into f7
la x2, scratch
li x3, 0xfc6d7b99 # load x3 with 32 MSBs 0x00000000fc6d7b99
sw x3, 0(x2) # store x3 (0xfc6d7b99) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fc6d7b99
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000fc6d7b99 from memory into f3
fdiv.d f7, f7, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x4d9c817c # load x3 with 32 MSBs 0x000000004d9c817c
sw x3, 0(x2) # store x3 (0x4d9c817c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004d9c817c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000004d9c817c from memory into f8
la x2, scratch
li x3, 0x7372496f # load x3 with 32 MSBs 0x000000007372496f
sw x3, 0(x2) # store x3 (0x7372496f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007372496f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000000007372496f from memory into f6
fdiv.d f8, f8, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0xbe84e917 # load x3 with 32 MSBs 0x00000000be84e917
sw x3, 0(x2) # store x3 (0xbe84e917) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be84e917
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000be84e917 from memory into f9
la x2, scratch
li x3, 0x684c0d62 # load x3 with 32 MSBs 0x00000000684c0d62
sw x3, 0(x2) # store x3 (0x684c0d62) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000684c0d62
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000684c0d62 from memory into f27
fdiv.d f9, f9, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0xb3f49cc9 # load x3 with 32 MSBs 0x00000000b3f49cc9
sw x3, 0(x2) # store x3 (0xb3f49cc9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b3f49cc9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x00000000b3f49cc9 from memory into f10
la x2, scratch
li x3, 0xf19c4cde # load x3 with 32 MSBs 0x00000000f19c4cde
sw x3, 0(x2) # store x3 (0xf19c4cde) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000f19c4cde
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000f19c4cde from memory into f19
fdiv.d f10, f10, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x6b9f9037 # load x3 with 32 MSBs 0x000000006b9f9037
sw x3, 0(x2) # store x3 (0x6b9f9037) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006b9f9037
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000000006b9f9037 from memory into f11
la x2, scratch
li x3, 0x15b7c20a # load x3 with 32 MSBs 0x0000000015b7c20a
sw x3, 0(x2) # store x3 (0x15b7c20a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000015b7c20a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000015b7c20a from memory into f15
fdiv.d f11, f11, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x11bbc836 # load x3 with 32 MSBs 0x0000000011bbc836
sw x3, 0(x2) # store x3 (0x11bbc836) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000011bbc836
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000011bbc836 from memory into f12
la x2, scratch
li x3, 0x3cb3718c # load x3 with 32 MSBs 0x000000003cb3718c
sw x3, 0(x2) # store x3 (0x3cb3718c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000003cb3718c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000000003cb3718c from memory into f7
fdiv.d f12, f12, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0x1cbe6fdf # load x3 with 32 MSBs 0x000000001cbe6fdf
sw x3, 0(x2) # store x3 (0x1cbe6fdf) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001cbe6fdf
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000001cbe6fdf from memory into f13
la x2, scratch
li x3, 0xb51f3e22 # load x3 with 32 MSBs 0x00000000b51f3e22
sw x3, 0(x2) # store x3 (0xb51f3e22) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b51f3e22
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000b51f3e22 from memory into f5
fdiv.d f13, f13, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0xbb7d0f02 # load x3 with 32 MSBs 0x00000000bb7d0f02
sw x3, 0(x2) # store x3 (0xbb7d0f02) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bb7d0f02
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000bb7d0f02 from memory into f14
la x2, scratch
li x3, 0xbe997035 # load x3 with 32 MSBs 0x00000000be997035
sw x3, 0(x2) # store x3 (0xbe997035) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be997035
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000be997035 from memory into f1
fdiv.d f14, f14, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0x6ec81ba7 # load x3 with 32 MSBs 0x000000006ec81ba7
sw x3, 0(x2) # store x3 (0x6ec81ba7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006ec81ba7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000006ec81ba7 from memory into f15
la x2, scratch
li x3, 0x4ab08181 # load x3 with 32 MSBs 0x000000004ab08181
sw x3, 0(x2) # store x3 (0x4ab08181) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004ab08181
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004ab08181 from memory into f14
fdiv.d f15, f15, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x19d68e59 # load x3 with 32 MSBs 0x0000000019d68e59
sw x3, 0(x2) # store x3 (0x19d68e59) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000019d68e59
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000019d68e59 from memory into f16
la x2, scratch
li x3, 0xc697ce64 # load x3 with 32 MSBs 0x00000000c697ce64
sw x3, 0(x2) # store x3 (0xc697ce64) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c697ce64
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000c697ce64 from memory into f6
fdiv.d f16, f16, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0xbeb9b7ff # load x3 with 32 MSBs 0x00000000beb9b7ff
sw x3, 0(x2) # store x3 (0xbeb9b7ff) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000beb9b7ff
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000beb9b7ff from memory into f17
la x2, scratch
li x3, 0x54fb1e54 # load x3 with 32 MSBs 0x0000000054fb1e54
sw x3, 0(x2) # store x3 (0x54fb1e54) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000054fb1e54
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000054fb1e54 from memory into f13
fdiv.d f17, f17, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x321f24b7 # load x3 with 32 MSBs 0x00000000321f24b7
sw x3, 0(x2) # store x3 (0x321f24b7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000321f24b7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000321f24b7 from memory into f18
la x2, scratch
li x3, 0xcc8a4391 # load x3 with 32 MSBs 0x00000000cc8a4391
sw x3, 0(x2) # store x3 (0xcc8a4391) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000cc8a4391
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000cc8a4391 from memory into f26
fdiv.d f18, f18, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x7f542798 # load x3 with 32 MSBs 0x000000007f542798
sw x3, 0(x2) # store x3 (0x7f542798) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007f542798
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000000007f542798 from memory into f19
la x2, scratch
li x3, 0x94580c85 # load x3 with 32 MSBs 0x0000000094580c85
sw x3, 0(x2) # store x3 (0x94580c85) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000094580c85
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000094580c85 from memory into f8
fdiv.d f19, f19, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0x11b1439d # load x3 with 32 MSBs 0x0000000011b1439d
sw x3, 0(x2) # store x3 (0x11b1439d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000011b1439d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000011b1439d from memory into f20
la x2, scratch
li x3, 0x93f2ab7f # load x3 with 32 MSBs 0x0000000093f2ab7f
sw x3, 0(x2) # store x3 (0x93f2ab7f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000093f2ab7f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000093f2ab7f from memory into f27
fdiv.d f20, f20, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0xd9582115 # load x3 with 32 MSBs 0x00000000d9582115
sw x3, 0(x2) # store x3 (0xd9582115) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d9582115
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000d9582115 from memory into f21
la x2, scratch
li x3, 0xed239573 # load x3 with 32 MSBs 0x00000000ed239573
sw x3, 0(x2) # store x3 (0xed239573) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ed239573
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000ed239573 from memory into f19
fdiv.d f21, f21, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0xc282fe17 # load x3 with 32 MSBs 0x00000000c282fe17
sw x3, 0(x2) # store x3 (0xc282fe17) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c282fe17
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000c282fe17 from memory into f22
la x2, scratch
li x3, 0xe4daa128 # load x3 with 32 MSBs 0x00000000e4daa128
sw x3, 0(x2) # store x3 (0xe4daa128) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e4daa128
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000e4daa128 from memory into f1
fdiv.d f22, f22, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0xc3fffb72 # load x3 with 32 MSBs 0x00000000c3fffb72
sw x3, 0(x2) # store x3 (0xc3fffb72) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c3fffb72
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x00000000c3fffb72 from memory into f23
la x2, scratch
li x3, 0xfaadc79d # load x3 with 32 MSBs 0x00000000faadc79d
sw x3, 0(x2) # store x3 (0xfaadc79d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000faadc79d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000faadc79d from memory into f21
fdiv.d f23, f23, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0xacfb705c # load x3 with 32 MSBs 0x00000000acfb705c
sw x3, 0(x2) # store x3 (0xacfb705c) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000acfb705c
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000acfb705c from memory into f24
la x2, scratch
li x3, 0x8b3baa66 # load x3 with 32 MSBs 0x000000008b3baa66
sw x3, 0(x2) # store x3 (0x8b3baa66) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008b3baa66
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000000008b3baa66 from memory into f12
fdiv.d f24, f24, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0xe7d98c2d # load x3 with 32 MSBs 0x00000000e7d98c2d
sw x3, 0(x2) # store x3 (0xe7d98c2d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e7d98c2d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e7d98c2d from memory into f25
la x2, scratch
li x3, 0xe485b862 # load x3 with 32 MSBs 0x00000000e485b862
sw x3, 0(x2) # store x3 (0xe485b862) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e485b862
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000e485b862 from memory into f28
fdiv.d f25, f25, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x9234ccc8 # load x3 with 32 MSBs 0x000000009234ccc8
sw x3, 0(x2) # store x3 (0x9234ccc8) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009234ccc8
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000009234ccc8 from memory into f26
la x2, scratch
li x3, 0x71088447 # load x3 with 32 MSBs 0x0000000071088447
sw x3, 0(x2) # store x3 (0x71088447) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000071088447
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000071088447 from memory into f14
fdiv.d f26, f26, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0x4e83da81 # load x3 with 32 MSBs 0x000000004e83da81
sw x3, 0(x2) # store x3 (0x4e83da81) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004e83da81
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000004e83da81 from memory into f27
la x2, scratch
li x3, 0x4f017c78 # load x3 with 32 MSBs 0x000000004f017c78
sw x3, 0(x2) # store x3 (0x4f017c78) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004f017c78
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000004f017c78 from memory into f14
fdiv.d f27, f27, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0xb5ec921a # load x3 with 32 MSBs 0x00000000b5ec921a
sw x3, 0(x2) # store x3 (0xb5ec921a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b5ec921a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b5ec921a from memory into f28
la x2, scratch
li x3, 0xead4ab07 # load x3 with 32 MSBs 0x00000000ead4ab07
sw x3, 0(x2) # store x3 (0xead4ab07) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ead4ab07
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000ead4ab07 from memory into f1
fdiv.d f28, f28, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x6f4d4713 # load x3 with 32 MSBs 0x000000006f4d4713
sw x3, 0(x2) # store x3 (0x6f4d4713) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006f4d4713
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000000006f4d4713 from memory into f29
la x2, scratch
li x3, 0xfc2b41ee # load x3 with 32 MSBs 0x00000000fc2b41ee
sw x3, 0(x2) # store x3 (0xfc2b41ee) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fc2b41ee
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fc2b41ee from memory into f1
fdiv.d f29, f29, f1 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x25f6833f # load x3 with 32 MSBs 0x0000000025f6833f
sw x3, 0(x2) # store x3 (0x25f6833f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000025f6833f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000025f6833f from memory into f30
la x2, scratch
li x3, 0x34e53ec3 # load x3 with 32 MSBs 0x0000000034e53ec3
sw x3, 0(x2) # store x3 (0x34e53ec3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000034e53ec3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000034e53ec3 from memory into f14
fdiv.d f30, f30, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x8c1221b4 # load x3 with 32 MSBs 0x000000008c1221b4
sw x3, 0(x2) # store x3 (0x8c1221b4) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008c1221b4
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000008c1221b4 from memory into f31
la x2, scratch
li x3, 0x9cd17afd # load x3 with 32 MSBs 0x000000009cd17afd
sw x3, 0(x2) # store x3 (0x9cd17afd) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009cd17afd
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000009cd17afd from memory into f23
fdiv.d f31, f31, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x49941213 # load x3 with 32 MSBs 0x0000000049941213
sw x3, 0(x2) # store x3 (0x49941213) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000049941213
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000049941213 from memory into f8
la x2, scratch
li x3, 0x2902c231 # load x3 with 32 MSBs 0x000000002902c231
sw x3, 0(x2) # store x3 (0x2902c231) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002902c231
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f0, 0(x2) # load 0x000000002902c231 from memory into f0
fdiv.d f0, f8, f0 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0xbe4afe26 # load x3 with 32 MSBs 0x00000000be4afe26
sw x3, 0(x2) # store x3 (0xbe4afe26) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000be4afe26
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000be4afe26 from memory into f26
la x2, scratch
li x3, 0xfe6a45ab # load x3 with 32 MSBs 0x00000000fe6a45ab
sw x3, 0(x2) # store x3 (0xfe6a45ab) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fe6a45ab
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000fe6a45ab from memory into f1
fdiv.d f1, f26, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x020b4011 # load x3 with 32 MSBs 0x00000000020b4011
sw x3, 0(x2) # store x3 (0x020b4011) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000020b4011
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x00000000020b4011 from memory into f12
la x2, scratch
li x3, 0x65f18026 # load x3 with 32 MSBs 0x0000000065f18026
sw x3, 0(x2) # store x3 (0x65f18026) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000065f18026
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000065f18026 from memory into f2
fdiv.d f2, f12, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x5020fb53 # load x3 with 32 MSBs 0x000000005020fb53
sw x3, 0(x2) # store x3 (0x5020fb53) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005020fb53
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000000005020fb53 from memory into f26
la x2, scratch
li x3, 0xd64fd54b # load x3 with 32 MSBs 0x00000000d64fd54b
sw x3, 0(x2) # store x3 (0xd64fd54b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d64fd54b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000d64fd54b from memory into f3
fdiv.d f3, f26, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x56cd8547 # load x3 with 32 MSBs 0x0000000056cd8547
sw x3, 0(x2) # store x3 (0x56cd8547) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000056cd8547
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000056cd8547 from memory into f27
la x2, scratch
li x3, 0x5c56a57a # load x3 with 32 MSBs 0x000000005c56a57a
sw x3, 0(x2) # store x3 (0x5c56a57a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000005c56a57a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f4, 0(x2) # load 0x000000005c56a57a from memory into f4
fdiv.d f4, f27, f4 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0509aa1a # load x3 with 32 MSBs 0x000000000509aa1a
sw x3, 0(x2) # store x3 (0x0509aa1a) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000509aa1a
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000000000509aa1a from memory into f30
la x2, scratch
li x3, 0x012ae159 # load x3 with 32 MSBs 0x00000000012ae159
sw x3, 0(x2) # store x3 (0x012ae159) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000012ae159
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x00000000012ae159 from memory into f5
fdiv.d f5, f30, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xbc143145 # load x3 with 32 MSBs 0x00000000bc143145
sw x3, 0(x2) # store x3 (0xbc143145) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bc143145
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000bc143145 from memory into f22
la x2, scratch
li x3, 0xef8f8d0b # load x3 with 32 MSBs 0x00000000ef8f8d0b
sw x3, 0(x2) # store x3 (0xef8f8d0b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ef8f8d0b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000ef8f8d0b from memory into f6
fdiv.d f6, f22, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x836e9929 # load x3 with 32 MSBs 0x00000000836e9929
sw x3, 0(x2) # store x3 (0x836e9929) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000836e9929
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000836e9929 from memory into f29
la x2, scratch
li x3, 0x18cde546 # load x3 with 32 MSBs 0x0000000018cde546
sw x3, 0(x2) # store x3 (0x18cde546) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000018cde546
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000018cde546 from memory into f7
fdiv.d f7, f29, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0xe8f5ab61 # load x3 with 32 MSBs 0x00000000e8f5ab61
sw x3, 0(x2) # store x3 (0xe8f5ab61) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e8f5ab61
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000e8f5ab61 from memory into f6
la x2, scratch
li x3, 0x2e920c8f # load x3 with 32 MSBs 0x000000002e920c8f
sw x3, 0(x2) # store x3 (0x2e920c8f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002e920c8f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000000002e920c8f from memory into f8
fdiv.d f8, f6, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x4a45dcc7 # load x3 with 32 MSBs 0x000000004a45dcc7
sw x3, 0(x2) # store x3 (0x4a45dcc7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004a45dcc7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000000004a45dcc7 from memory into f15
la x2, scratch
li x3, 0xc0ab2364 # load x3 with 32 MSBs 0x00000000c0ab2364
sw x3, 0(x2) # store x3 (0xc0ab2364) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000c0ab2364
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x00000000c0ab2364 from memory into f9
fdiv.d f9, f15, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0xbefad8d7 # load x3 with 32 MSBs 0x00000000befad8d7
sw x3, 0(x2) # store x3 (0xbefad8d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000befad8d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000befad8d7 from memory into f26
la x2, scratch
li x3, 0x8f0b6b30 # load x3 with 32 MSBs 0x000000008f0b6b30
sw x3, 0(x2) # store x3 (0x8f0b6b30) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008f0b6b30
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000000008f0b6b30 from memory into f10
fdiv.d f10, f26, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0x7999bb24 # load x3 with 32 MSBs 0x000000007999bb24
sw x3, 0(x2) # store x3 (0x7999bb24) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007999bb24
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000000007999bb24 from memory into f28
la x2, scratch
li x3, 0x93b831ce # load x3 with 32 MSBs 0x0000000093b831ce
sw x3, 0(x2) # store x3 (0x93b831ce) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000093b831ce
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000093b831ce from memory into f11
fdiv.d f11, f28, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0x00a8371b # load x3 with 32 MSBs 0x0000000000a8371b
sw x3, 0(x2) # store x3 (0x00a8371b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000a8371b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000a8371b from memory into f6
la x2, scratch
li x3, 0x82ae9697 # load x3 with 32 MSBs 0x0000000082ae9697
sw x3, 0(x2) # store x3 (0x82ae9697) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000082ae9697
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000082ae9697 from memory into f12
fdiv.d f12, f6, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xa0f0a528 # load x3 with 32 MSBs 0x00000000a0f0a528
sw x3, 0(x2) # store x3 (0xa0f0a528) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a0f0a528
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000a0f0a528 from memory into f17
la x2, scratch
li x3, 0x4c7524a9 # load x3 with 32 MSBs 0x000000004c7524a9
sw x3, 0(x2) # store x3 (0x4c7524a9) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000004c7524a9
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000000004c7524a9 from memory into f13
fdiv.d f13, f17, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0xaefd7f38 # load x3 with 32 MSBs 0x00000000aefd7f38
sw x3, 0(x2) # store x3 (0xaefd7f38) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000aefd7f38
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x00000000aefd7f38 from memory into f11
la x2, scratch
li x3, 0x1f2e622f # load x3 with 32 MSBs 0x000000001f2e622f
sw x3, 0(x2) # store x3 (0x1f2e622f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000001f2e622f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000000001f2e622f from memory into f14
fdiv.d f14, f11, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0x29b94487 # load x3 with 32 MSBs 0x0000000029b94487
sw x3, 0(x2) # store x3 (0x29b94487) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000029b94487
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000029b94487 from memory into f28
la x2, scratch
li x3, 0xa64d9f49 # load x3 with 32 MSBs 0x00000000a64d9f49
sw x3, 0(x2) # store x3 (0xa64d9f49) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000a64d9f49
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x00000000a64d9f49 from memory into f15
fdiv.d f15, f28, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0x9aab9506 # load x3 with 32 MSBs 0x000000009aab9506
sw x3, 0(x2) # store x3 (0x9aab9506) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000009aab9506
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000000009aab9506 from memory into f9
la x2, scratch
li x3, 0x10d1253d # load x3 with 32 MSBs 0x0000000010d1253d
sw x3, 0(x2) # store x3 (0x10d1253d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000010d1253d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000010d1253d from memory into f16
fdiv.d f16, f9, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0x274e59eb # load x3 with 32 MSBs 0x00000000274e59eb
sw x3, 0(x2) # store x3 (0x274e59eb) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000274e59eb
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x00000000274e59eb from memory into f6
la x2, scratch
li x3, 0xeb6d1b57 # load x3 with 32 MSBs 0x00000000eb6d1b57
sw x3, 0(x2) # store x3 (0xeb6d1b57) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000eb6d1b57
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x00000000eb6d1b57 from memory into f17
fdiv.d f17, f6, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xfab9f594 # load x3 with 32 MSBs 0x00000000fab9f594
sw x3, 0(x2) # store x3 (0xfab9f594) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fab9f594
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000fab9f594 from memory into f30
la x2, scratch
li x3, 0xb1d80780 # load x3 with 32 MSBs 0x00000000b1d80780
sw x3, 0(x2) # store x3 (0xb1d80780) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b1d80780
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000b1d80780 from memory into f18
fdiv.d f18, f30, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x2fdad927 # load x3 with 32 MSBs 0x000000002fdad927
sw x3, 0(x2) # store x3 (0x2fdad927) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002fdad927
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000000002fdad927 from memory into f5
la x2, scratch
li x3, 0xbac9b616 # load x3 with 32 MSBs 0x00000000bac9b616
sw x3, 0(x2) # store x3 (0xbac9b616) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000bac9b616
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x00000000bac9b616 from memory into f19
fdiv.d f19, f5, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xaf6481d2 # load x3 with 32 MSBs 0x00000000af6481d2
sw x3, 0(x2) # store x3 (0xaf6481d2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000af6481d2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x00000000af6481d2 from memory into f1
la x2, scratch
li x3, 0x53fc4fa6 # load x3 with 32 MSBs 0x0000000053fc4fa6
sw x3, 0(x2) # store x3 (0x53fc4fa6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000053fc4fa6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000053fc4fa6 from memory into f20
fdiv.d f20, f1, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0xd379e888 # load x3 with 32 MSBs 0x00000000d379e888
sw x3, 0(x2) # store x3 (0xd379e888) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d379e888
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d379e888 from memory into f18
la x2, scratch
li x3, 0x762fbafe # load x3 with 32 MSBs 0x00000000762fbafe
sw x3, 0(x2) # store x3 (0x762fbafe) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000762fbafe
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x00000000762fbafe from memory into f21
fdiv.d f21, f18, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xea2360c3 # load x3 with 32 MSBs 0x00000000ea2360c3
sw x3, 0(x2) # store x3 (0xea2360c3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ea2360c3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x00000000ea2360c3 from memory into f14
la x2, scratch
li x3, 0x36b62925 # load x3 with 32 MSBs 0x0000000036b62925
sw x3, 0(x2) # store x3 (0x36b62925) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000036b62925
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000036b62925 from memory into f22
fdiv.d f22, f14, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x8ccf0c6e # load x3 with 32 MSBs 0x000000008ccf0c6e
sw x3, 0(x2) # store x3 (0x8ccf0c6e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000008ccf0c6e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000000008ccf0c6e from memory into f17
la x2, scratch
li x3, 0x6f762b3b # load x3 with 32 MSBs 0x000000006f762b3b
sw x3, 0(x2) # store x3 (0x6f762b3b) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000006f762b3b
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000000006f762b3b from memory into f23
fdiv.d f23, f17, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0x17d6547f # load x3 with 32 MSBs 0x0000000017d6547f
sw x3, 0(x2) # store x3 (0x17d6547f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000017d6547f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000017d6547f from memory into f11
la x2, scratch
li x3, 0x887905e7 # load x3 with 32 MSBs 0x00000000887905e7
sw x3, 0(x2) # store x3 (0x887905e7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000887905e7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x00000000887905e7 from memory into f24
fdiv.d f24, f11, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0xe2130e08 # load x3 with 32 MSBs 0x00000000e2130e08
sw x3, 0(x2) # store x3 (0xe2130e08) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e2130e08
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000e2130e08 from memory into f25
la x2, scratch
li x3, 0xef72f9d7 # load x3 with 32 MSBs 0x00000000ef72f9d7
sw x3, 0(x2) # store x3 (0xef72f9d7) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000ef72f9d7
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x00000000ef72f9d7 from memory into f25
fdiv.d f25, f25, f25 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x7f3f22e3 # load x3 with 32 MSBs 0x000000007f3f22e3
sw x3, 0(x2) # store x3 (0x7f3f22e3) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000007f3f22e3
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000007f3f22e3 from memory into f27
la x2, scratch
li x3, 0xacd72703 # load x3 with 32 MSBs 0x00000000acd72703
sw x3, 0(x2) # store x3 (0xacd72703) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000acd72703
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x00000000acd72703 from memory into f26
fdiv.d f26, f27, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xb8677a9d # load x3 with 32 MSBs 0x00000000b8677a9d
sw x3, 0(x2) # store x3 (0xb8677a9d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b8677a9d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x00000000b8677a9d from memory into f3
la x2, scratch
li x3, 0x040f4338 # load x3 with 32 MSBs 0x00000000040f4338
sw x3, 0(x2) # store x3 (0x040f4338) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000040f4338
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000040f4338 from memory into f27
fdiv.d f27, f3, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x0d26ce54 # load x3 with 32 MSBs 0x000000000d26ce54
sw x3, 0(x2) # store x3 (0x0d26ce54) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000000d26ce54
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000000000d26ce54 from memory into f27
la x2, scratch
li x3, 0xb5d5a9d2 # load x3 with 32 MSBs 0x00000000b5d5a9d2
sw x3, 0(x2) # store x3 (0xb5d5a9d2) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000b5d5a9d2
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x00000000b5d5a9d2 from memory into f28
fdiv.d f28, f27, f28 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0xd4c3da41 # load x3 with 32 MSBs 0x00000000d4c3da41
sw x3, 0(x2) # store x3 (0xd4c3da41) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000d4c3da41
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x00000000d4c3da41 from memory into f18
la x2, scratch
li x3, 0xfd412c9e # load x3 with 32 MSBs 0x00000000fd412c9e
sw x3, 0(x2) # store x3 (0xfd412c9e) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fd412c9e
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000fd412c9e from memory into f29
fdiv.d f29, f18, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0xdaa0a21d # load x3 with 32 MSBs 0x00000000daa0a21d
sw x3, 0(x2) # store x3 (0xdaa0a21d) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000daa0a21d
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x00000000daa0a21d from memory into f27
la x2, scratch
li x3, 0xda3ca18f # load x3 with 32 MSBs 0x00000000da3ca18f
sw x3, 0(x2) # store x3 (0xda3ca18f) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000da3ca18f
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x00000000da3ca18f from memory into f30
fdiv.d f30, f27, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0x319f5092 # load x3 with 32 MSBs 0x00000000319f5092
sw x3, 0(x2) # store x3 (0x319f5092) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000319f5092
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x00000000319f5092 from memory into f22
la x2, scratch
li x3, 0x2589f332 # load x3 with 32 MSBs 0x000000002589f332
sw x3, 0(x2) # store x3 (0x2589f332) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x000000002589f332
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000000002589f332 from memory into f31
fdiv.d f31, f22, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xfcc243d6 # load x3 with 32 MSBs 0x00000000fcc243d6
sw x3, 0(x2) # store x3 (0xfcc243d6) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000fcc243d6
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x00000000fcc243d6 from memory into f20
la x2, scratch
li x3, 0xe91bb769 # load x3 with 32 MSBs 0x00000000e91bb769
sw x3, 0(x2) # store x3 (0xe91bb769) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x00000000e91bb769
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x00000000e91bb769 from memory into f29
fdiv.d f15, f20, f29, dyn # perform operation
fdiv.d f15, f20, f29, rdn # perform operation
fdiv.d f15, f20, f29, rmm # perform operation
fdiv.d f15, f20, f29, rne # perform operation
fdiv.d f15, f20, f29, rtz # perform operation
fdiv.d f15, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fdiv.d f31, f20, f14, dyn # perform operation
fdiv.d f31, f20, f14, rdn # perform operation
fdiv.d f31, f20, f14, rmm # perform operation
fdiv.d f31, f20, f14, rne # perform operation
fdiv.d f31, f20, f14, rtz # perform operation
fdiv.d f31, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
fdiv.d f11, f26, f16, dyn # perform operation
fdiv.d f11, f26, f16, rdn # perform operation
fdiv.d f11, f26, f16, rmm # perform operation
fdiv.d f11, f26, f16, rne # perform operation
fdiv.d f11, f26, f16, rtz # perform operation
fdiv.d f11, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff0000000000000 from memory into f18
fdiv.d f21, f24, f18, dyn # perform operation
fdiv.d f21, f24, f18, rdn # perform operation
fdiv.d f21, f24, f18, rmm # perform operation
fdiv.d f21, f24, f18, rne # perform operation
fdiv.d f21, f24, f18, rtz # perform operation
fdiv.d f21, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff0000000000000 from memory into f21
fdiv.d f29, f8, f21, dyn # perform operation
fdiv.d f29, f8, f21, rdn # perform operation
fdiv.d f29, f8, f21, rmm # perform operation
fdiv.d f29, f8, f21, rne # perform operation
fdiv.d f29, f8, f21, rtz # perform operation
fdiv.d f29, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f8, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f18, f11, f30, dyn # perform operation
fdiv.d f18, f11, f30, rdn # perform operation
fdiv.d f18, f11, f30, rmm # perform operation
fdiv.d f18, f11, f30, rne # perform operation
fdiv.d f18, f11, f30, rtz # perform operation
fdiv.d f18, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff8000000000000 from memory into f14
fdiv.d f27, f22, f14, dyn # perform operation
fdiv.d f27, f22, f14, rdn # perform operation
fdiv.d f27, f22, f14, rmm # perform operation
fdiv.d f27, f22, f14, rne # perform operation
fdiv.d f27, f22, f14, rtz # perform operation
fdiv.d f27, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fdiv.d f10, f15, f20, dyn # perform operation
fdiv.d f10, f15, f20, rdn # perform operation
fdiv.d f10, f15, f20, rmm # perform operation
fdiv.d f10, f15, f20, rne # perform operation
fdiv.d f10, f15, f20, rtz # perform operation
fdiv.d f10, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fdiv.d f17, f7, f27, dyn # perform operation
fdiv.d f17, f7, f27, rdn # perform operation
fdiv.d f17, f7, f27, rmm # perform operation
fdiv.d f17, f7, f27, rne # perform operation
fdiv.d f17, f7, f27, rtz # perform operation
fdiv.d f17, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
fdiv.d f20, f6, f27, dyn # perform operation
fdiv.d f20, f6, f27, rdn # perform operation
fdiv.d f20, f6, f27, rmm # perform operation
fdiv.d f20, f6, f27, rne # perform operation
fdiv.d f20, f6, f27, rtz # perform operation
fdiv.d f20, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fdiv.d f2, f26, f19, dyn # perform operation
fdiv.d f2, f26, f19, rdn # perform operation
fdiv.d f2, f26, f19, rmm # perform operation
fdiv.d f2, f26, f19, rne # perform operation
fdiv.d f2, f26, f19, rtz # perform operation
fdiv.d f2, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fdiv.d f16, f6, f28, dyn # perform operation
fdiv.d f16, f6, f28, rdn # perform operation
fdiv.d f16, f6, f28, rmm # perform operation
fdiv.d f16, f6, f28, rne # perform operation
fdiv.d f16, f6, f28, rtz # perform operation
fdiv.d f16, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fdiv.d f11, f14, f31, dyn # perform operation
fdiv.d f11, f14, f31, rdn # perform operation
fdiv.d f11, f14, f31, rmm # perform operation
fdiv.d f11, f14, f31, rne # perform operation
fdiv.d f11, f14, f31, rtz # perform operation
fdiv.d f11, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f14, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
fdiv.d f22, f31, f13, dyn # perform operation
fdiv.d f22, f31, f13, rdn # perform operation
fdiv.d f22, f31, f13, rmm # perform operation
fdiv.d f22, f31, f13, rne # perform operation
fdiv.d f22, f31, f13, rtz # perform operation
fdiv.d f22, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
fdiv.d f19, f1, f12, dyn # perform operation
fdiv.d f19, f1, f12, rdn # perform operation
fdiv.d f19, f1, f12, rmm # perform operation
fdiv.d f19, f1, f12, rne # perform operation
fdiv.d f19, f1, f12, rtz # perform operation
fdiv.d f19, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fdiv.d f18, f31, f12, dyn # perform operation
fdiv.d f18, f31, f12, rdn # perform operation
fdiv.d f18, f31, f12, rmm # perform operation
fdiv.d f18, f31, f12, rne # perform operation
fdiv.d f18, f31, f12, rtz # perform operation
fdiv.d f18, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f31, f15, f7, dyn # perform operation
fdiv.d f31, f15, f7, rdn # perform operation
fdiv.d f31, f15, f7, rmm # perform operation
fdiv.d f31, f15, f7, rne # perform operation
fdiv.d f31, f15, f7, rtz # perform operation
fdiv.d f31, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
fdiv.d f15, f3, f9, dyn # perform operation
fdiv.d f15, f3, f9, rdn # perform operation
fdiv.d f15, f3, f9, rmm # perform operation
fdiv.d f15, f3, f9, rne # perform operation
fdiv.d f15, f3, f9, rtz # perform operation
fdiv.d f15, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000001 from memory into f18
fdiv.d f24, f1, f18, dyn # perform operation
fdiv.d f24, f1, f18, rdn # perform operation
fdiv.d f24, f1, f18, rmm # perform operation
fdiv.d f24, f1, f18, rne # perform operation
fdiv.d f24, f1, f18, rtz # perform operation
fdiv.d f24, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f1, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000000 from memory into f3
fdiv.d f17, f23, f3, dyn # perform operation
fdiv.d f17, f23, f3, rdn # perform operation
fdiv.d f17, f23, f3, rmm # perform operation
fdiv.d f17, f23, f3, rne # perform operation
fdiv.d f17, f23, f3, rtz # perform operation
fdiv.d f17, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fdiv.d f26, f28, f21, dyn # perform operation
fdiv.d f26, f28, f21, rdn # perform operation
fdiv.d f26, f28, f21, rmm # perform operation
fdiv.d f26, f28, f21, rne # perform operation
fdiv.d f26, f28, f21, rtz # perform operation
fdiv.d f26, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff8000000000000 from memory into f3
fdiv.d f27, f6, f3, dyn # perform operation
fdiv.d f27, f6, f3, rdn # perform operation
fdiv.d f27, f6, f3, rmm # perform operation
fdiv.d f27, f6, f3, rne # perform operation
fdiv.d f27, f6, f3, rtz # perform operation
fdiv.d f27, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fdiv.d f17, f2, f25, dyn # perform operation
fdiv.d f17, f2, f25, rdn # perform operation
fdiv.d f17, f2, f25, rmm # perform operation
fdiv.d f17, f2, f25, rne # perform operation
fdiv.d f17, f2, f25, rtz # perform operation
fdiv.d f17, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f2, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fdiv.d f29, f31, f1, dyn # perform operation
fdiv.d f29, f31, f1, rdn # perform operation
fdiv.d f29, f31, f1, rmm # perform operation
fdiv.d f29, f31, f1, rne # perform operation
fdiv.d f29, f31, f1, rtz # perform operation
fdiv.d f29, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fdiv.d f6, f24, f9, dyn # perform operation
fdiv.d f6, f24, f9, rdn # perform operation
fdiv.d f6, f24, f9, rmm # perform operation
fdiv.d f6, f24, f9, rne # perform operation
fdiv.d f6, f24, f9, rtz # perform operation
fdiv.d f6, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff7ffffffffffff from memory into f30
fdiv.d f1, f27, f30, dyn # perform operation
fdiv.d f1, f27, f30, rdn # perform operation
fdiv.d f1, f27, f30, rmm # perform operation
fdiv.d f1, f27, f30, rne # perform operation
fdiv.d f1, f27, f30, rtz # perform operation
fdiv.d f1, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000001 from memory into f14
fdiv.d f24, f7, f14, dyn # perform operation
fdiv.d f24, f7, f14, rdn # perform operation
fdiv.d f24, f7, f14, rmm # perform operation
fdiv.d f24, f7, f14, rne # perform operation
fdiv.d f24, f7, f14, rtz # perform operation
fdiv.d f24, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000000 from memory into f21
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fdiv.d f5, f21, f6, dyn # perform operation
fdiv.d f5, f21, f6, rdn # perform operation
fdiv.d f5, f21, f6, rmm # perform operation
fdiv.d f5, f21, f6, rne # perform operation
fdiv.d f5, f21, f6, rtz # perform operation
fdiv.d f5, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000000 from memory into f26
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fdiv.d f14, f26, f9, dyn # perform operation
fdiv.d f14, f26, f9, rdn # perform operation
fdiv.d f14, f26, f9, rmm # perform operation
fdiv.d f14, f26, f9, rne # perform operation
fdiv.d f14, f26, f9, rtz # perform operation
fdiv.d f14, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000000 from memory into f19
fdiv.d f2, f6, f19, dyn # perform operation
fdiv.d f2, f6, f19, rdn # perform operation
fdiv.d f2, f6, f19, rmm # perform operation
fdiv.d f2, f6, f19, rne # perform operation
fdiv.d f2, f6, f19, rtz # perform operation
fdiv.d f2, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
fdiv.d f31, f10, f9, dyn # perform operation
fdiv.d f31, f10, f9, rdn # perform operation
fdiv.d f31, f10, f9, rmm # perform operation
fdiv.d f31, f10, f9, rne # perform operation
fdiv.d f31, f10, f9, rtz # perform operation
fdiv.d f31, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fdiv.d f12, f17, f15, dyn # perform operation
fdiv.d f12, f17, f15, rdn # perform operation
fdiv.d f12, f17, f15, rmm # perform operation
fdiv.d f12, f17, f15, rne # perform operation
fdiv.d f12, f17, f15, rtz # perform operation
fdiv.d f12, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff0000000000000 from memory into f1
fdiv.d f26, f15, f1, dyn # perform operation
fdiv.d f26, f15, f1, rdn # perform operation
fdiv.d f26, f15, f1, rmm # perform operation
fdiv.d f26, f15, f1, rne # perform operation
fdiv.d f26, f15, f1, rtz # perform operation
fdiv.d f26, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f12, f25, f30, dyn # perform operation
fdiv.d f12, f25, f30, rdn # perform operation
fdiv.d f12, f25, f30, rmm # perform operation
fdiv.d f12, f25, f30, rne # perform operation
fdiv.d f12, f25, f30, rtz # perform operation
fdiv.d f12, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fdiv.d f22, f3, f8, dyn # perform operation
fdiv.d f22, f3, f8, rdn # perform operation
fdiv.d f22, f3, f8, rmm # perform operation
fdiv.d f22, f3, f8, rne # perform operation
fdiv.d f22, f3, f8, rtz # perform operation
fdiv.d f22, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f3, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fdiv.d f21, f17, f12, dyn # perform operation
fdiv.d f21, f17, f12, rdn # perform operation
fdiv.d f21, f17, f12, rmm # perform operation
fdiv.d f21, f17, f12, rne # perform operation
fdiv.d f21, f17, f12, rtz # perform operation
fdiv.d f21, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f17, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fdiv.d f8, f30, f28, dyn # perform operation
fdiv.d f8, f30, f28, rdn # perform operation
fdiv.d f8, f30, f28, rmm # perform operation
fdiv.d f8, f30, f28, rne # perform operation
fdiv.d f8, f30, f28, rtz # perform operation
fdiv.d f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fdiv.d f5, f10, f23, dyn # perform operation
fdiv.d f5, f10, f23, rdn # perform operation
fdiv.d f5, f10, f23, rmm # perform operation
fdiv.d f5, f10, f23, rne # perform operation
fdiv.d f5, f10, f23, rtz # perform operation
fdiv.d f5, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
fdiv.d f13, f10, f5, dyn # perform operation
fdiv.d f13, f10, f5, rdn # perform operation
fdiv.d f13, f10, f5, rmm # perform operation
fdiv.d f13, f10, f5, rne # perform operation
fdiv.d f13, f10, f5, rtz # perform operation
fdiv.d f13, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fdiv.d f31, f13, f28, dyn # perform operation
fdiv.d f31, f13, f28, rdn # perform operation
fdiv.d f31, f13, f28, rmm # perform operation
fdiv.d f31, f13, f28, rne # perform operation
fdiv.d f31, f13, f28, rtz # perform operation
fdiv.d f31, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8000000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xffefffffffffffff from memory into f6
fdiv.d f17, f23, f6, dyn # perform operation
fdiv.d f17, f23, f6, rdn # perform operation
fdiv.d f17, f23, f6, rmm # perform operation
fdiv.d f17, f23, f6, rne # perform operation
fdiv.d f17, f23, f6, rtz # perform operation
fdiv.d f17, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x000fffffffffffff from memory into f9
fdiv.d f13, f16, f9, dyn # perform operation
fdiv.d f13, f16, f9, rdn # perform operation
fdiv.d f13, f16, f9, rmm # perform operation
fdiv.d f13, f16, f9, rne # perform operation
fdiv.d f13, f16, f9, rtz # perform operation
fdiv.d f13, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fdiv.d f11, f19, f3, dyn # perform operation
fdiv.d f11, f19, f3, rdn # perform operation
fdiv.d f11, f19, f3, rmm # perform operation
fdiv.d f11, f19, f3, rne # perform operation
fdiv.d f11, f19, f3, rtz # perform operation
fdiv.d f11, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fdiv.d f12, f2, f15, dyn # perform operation
fdiv.d f12, f2, f15, rdn # perform operation
fdiv.d f12, f2, f15, rmm # perform operation
fdiv.d f12, f2, f15, rne # perform operation
fdiv.d f12, f2, f15, rtz # perform operation
fdiv.d f12, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fdiv.d f26, f1, f10, dyn # perform operation
fdiv.d f26, f1, f10, rdn # perform operation
fdiv.d f26, f1, f10, rmm # perform operation
fdiv.d f26, f1, f10, rne # perform operation
fdiv.d f26, f1, f10, rtz # perform operation
fdiv.d f26, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
fdiv.d f22, f9, f10, dyn # perform operation
fdiv.d f22, f9, f10, rdn # perform operation
fdiv.d f22, f9, f10, rmm # perform operation
fdiv.d f22, f9, f10, rne # perform operation
fdiv.d f22, f9, f10, rtz # perform operation
fdiv.d f22, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fdiv.d f9, f28, f13, dyn # perform operation
fdiv.d f9, f28, f13, rdn # perform operation
fdiv.d f9, f28, f13, rmm # perform operation
fdiv.d f9, f28, f13, rne # perform operation
fdiv.d f9, f28, f13, rtz # perform operation
fdiv.d f9, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff0000000000000 from memory into f26
fdiv.d f5, f20, f26, dyn # perform operation
fdiv.d f5, f20, f26, rdn # perform operation
fdiv.d f5, f20, f26, rmm # perform operation
fdiv.d f5, f20, f26, rne # perform operation
fdiv.d f5, f20, f26, rtz # perform operation
fdiv.d f5, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000000 from memory into f17
fdiv.d f8, f24, f17, dyn # perform operation
fdiv.d f8, f24, f17, rdn # perform operation
fdiv.d f8, f24, f17, rmm # perform operation
fdiv.d f8, f24, f17, rne # perform operation
fdiv.d f8, f24, f17, rtz # perform operation
fdiv.d f8, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff8000000000000 from memory into f15
fdiv.d f25, f24, f15, dyn # perform operation
fdiv.d f25, f24, f15, rdn # perform operation
fdiv.d f25, f24, f15, rmm # perform operation
fdiv.d f25, f24, f15, rne # perform operation
fdiv.d f25, f24, f15, rtz # perform operation
fdiv.d f25, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fdiv.d f12, f3, f18, dyn # perform operation
fdiv.d f12, f3, f18, rdn # perform operation
fdiv.d f12, f3, f18, rmm # perform operation
fdiv.d f12, f3, f18, rne # perform operation
fdiv.d f12, f3, f18, rtz # perform operation
fdiv.d f12, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fdiv.d f20, f16, f6, dyn # perform operation
fdiv.d f20, f16, f6, rdn # perform operation
fdiv.d f20, f16, f6, rmm # perform operation
fdiv.d f20, f16, f6, rne # perform operation
fdiv.d f20, f16, f6, rtz # perform operation
fdiv.d f20, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fdiv.d f3, f29, f1, dyn # perform operation
fdiv.d f3, f29, f1, rdn # perform operation
fdiv.d f3, f29, f1, rmm # perform operation
fdiv.d f3, f29, f1, rne # perform operation
fdiv.d f3, f29, f1, rtz # perform operation
fdiv.d f3, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
fdiv.d f17, f9, f3, dyn # perform operation
fdiv.d f17, f9, f3, rdn # perform operation
fdiv.d f17, f9, f3, rmm # perform operation
fdiv.d f17, f9, f3, rne # perform operation
fdiv.d f17, f9, f3, rtz # perform operation
fdiv.d f17, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f9, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
fdiv.d f20, f16, f12, dyn # perform operation
fdiv.d f20, f16, f12, rdn # perform operation
fdiv.d f20, f16, f12, rmm # perform operation
fdiv.d f20, f16, f12, rne # perform operation
fdiv.d f20, f16, f12, rtz # perform operation
fdiv.d f20, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fdiv.d f22, f31, f19, dyn # perform operation
fdiv.d f22, f31, f19, rdn # perform operation
fdiv.d f22, f31, f19, rmm # perform operation
fdiv.d f22, f31, f19, rne # perform operation
fdiv.d f22, f31, f19, rtz # perform operation
fdiv.d f22, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f31, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000000 from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xa6e895993737426c from memory into f29
fdiv.d f6, f9, f29, dyn # perform operation
fdiv.d f6, f9, f29, rdn # perform operation
fdiv.d f6, f9, f29, rmm # perform operation
fdiv.d f6, f9, f29, rne # perform operation
fdiv.d f6, f9, f29, rtz # perform operation
fdiv.d f6, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fdiv.d f25, f30, f8, dyn # perform operation
fdiv.d f25, f30, f8, rdn # perform operation
fdiv.d f25, f30, f8, rmm # perform operation
fdiv.d f25, f30, f8, rne # perform operation
fdiv.d f25, f30, f8, rtz # perform operation
fdiv.d f25, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000000 from memory into f15
fdiv.d f14, f7, f15, dyn # perform operation
fdiv.d f14, f7, f15, rdn # perform operation
fdiv.d f14, f7, f15, rmm # perform operation
fdiv.d f14, f7, f15, rne # perform operation
fdiv.d f14, f7, f15, rtz # perform operation
fdiv.d f14, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fdiv.d f10, f16, f27, dyn # perform operation
fdiv.d f10, f16, f27, rdn # perform operation
fdiv.d f10, f16, f27, rmm # perform operation
fdiv.d f10, f16, f27, rne # perform operation
fdiv.d f10, f16, f27, rtz # perform operation
fdiv.d f10, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
fdiv.d f13, f6, f31, dyn # perform operation
fdiv.d f13, f6, f31, rdn # perform operation
fdiv.d f13, f6, f31, rmm # perform operation
fdiv.d f13, f6, f31, rne # perform operation
fdiv.d f13, f6, f31, rtz # perform operation
fdiv.d f13, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
fdiv.d f13, f22, f26, dyn # perform operation
fdiv.d f13, f22, f26, rdn # perform operation
fdiv.d f13, f22, f26, rmm # perform operation
fdiv.d f13, f22, f26, rne # perform operation
fdiv.d f13, f22, f26, rtz # perform operation
fdiv.d f13, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
fdiv.d f19, f1, f9, dyn # perform operation
fdiv.d f19, f1, f9, rdn # perform operation
fdiv.d f19, f1, f9, rmm # perform operation
fdiv.d f19, f1, f9, rne # perform operation
fdiv.d f19, f1, f9, rtz # perform operation
fdiv.d f19, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
fdiv.d f15, f22, f19, dyn # perform operation
fdiv.d f15, f22, f19, rdn # perform operation
fdiv.d f15, f22, f19, rmm # perform operation
fdiv.d f15, f22, f19, rne # perform operation
fdiv.d f15, f22, f19, rtz # perform operation
fdiv.d f15, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x3ff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fdiv.d f25, f19, f14, dyn # perform operation
fdiv.d f25, f19, f14, rdn # perform operation
fdiv.d f25, f19, f14, rmm # perform operation
fdiv.d f25, f19, f14, rne # perform operation
fdiv.d f25, f19, f14, rtz # perform operation
fdiv.d f25, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fdiv.d f7, f24, f21, dyn # perform operation
fdiv.d f7, f24, f21, rdn # perform operation
fdiv.d f7, f24, f21, rmm # perform operation
fdiv.d f7, f24, f21, rne # perform operation
fdiv.d f7, f24, f21, rtz # perform operation
fdiv.d f7, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fdiv.d f5, f22, f14, dyn # perform operation
fdiv.d f5, f22, f14, rdn # perform operation
fdiv.d f5, f22, f14, rmm # perform operation
fdiv.d f5, f22, f14, rne # perform operation
fdiv.d f5, f22, f14, rtz # perform operation
fdiv.d f5, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fdiv.d f31, f15, f1, dyn # perform operation
fdiv.d f31, f15, f1, rdn # perform operation
fdiv.d f31, f15, f1, rmm # perform operation
fdiv.d f31, f15, f1, rne # perform operation
fdiv.d f31, f15, f1, rtz # perform operation
fdiv.d f31, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xffefffffffffffff from memory into f11
fdiv.d f9, f7, f11, dyn # perform operation
fdiv.d f9, f7, f11, rdn # perform operation
fdiv.d f9, f7, f11, rmm # perform operation
fdiv.d f9, f7, f11, rne # perform operation
fdiv.d f9, f7, f11, rtz # perform operation
fdiv.d f9, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x000fffffffffffff from memory into f17
fdiv.d f23, f14, f17, dyn # perform operation
fdiv.d f23, f14, f17, rdn # perform operation
fdiv.d f23, f14, f17, rmm # perform operation
fdiv.d f23, f14, f17, rne # perform operation
fdiv.d f23, f14, f17, rtz # perform operation
fdiv.d f23, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f14, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fdiv.d f2, f12, f11, dyn # perform operation
fdiv.d f2, f12, f11, rdn # perform operation
fdiv.d f2, f12, f11, rmm # perform operation
fdiv.d f2, f12, f11, rne # perform operation
fdiv.d f2, f12, f11, rtz # perform operation
fdiv.d f2, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
fdiv.d f22, f12, f6, dyn # perform operation
fdiv.d f22, f12, f6, rdn # perform operation
fdiv.d f22, f12, f6, rmm # perform operation
fdiv.d f22, f12, f6, rne # perform operation
fdiv.d f22, f12, f6, rtz # perform operation
fdiv.d f22, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fdiv.d f17, f20, f23, dyn # perform operation
fdiv.d f17, f20, f23, rdn # perform operation
fdiv.d f17, f20, f23, rmm # perform operation
fdiv.d f17, f20, f23, rne # perform operation
fdiv.d f17, f20, f23, rtz # perform operation
fdiv.d f17, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fdiv.d f7, f11, f1, dyn # perform operation
fdiv.d f7, f11, f1, rdn # perform operation
fdiv.d f7, f11, f1, rmm # perform operation
fdiv.d f7, f11, f1, rne # perform operation
fdiv.d f7, f11, f1, rtz # perform operation
fdiv.d f7, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f2, f15, f22, dyn # perform operation
fdiv.d f2, f15, f22, rdn # perform operation
fdiv.d f2, f15, f22, rmm # perform operation
fdiv.d f2, f15, f22, rne # perform operation
fdiv.d f2, f15, f22, rtz # perform operation
fdiv.d f2, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f15, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fdiv.d f27, f6, f15, dyn # perform operation
fdiv.d f27, f6, f15, rdn # perform operation
fdiv.d f27, f6, f15, rmm # perform operation
fdiv.d f27, f6, f15, rne # perform operation
fdiv.d f27, f6, f15, rtz # perform operation
fdiv.d f27, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
fdiv.d f17, f1, f15, dyn # perform operation
fdiv.d f17, f1, f15, rdn # perform operation
fdiv.d f17, f1, f15, rmm # perform operation
fdiv.d f17, f1, f15, rne # perform operation
fdiv.d f17, f1, f15, rtz # perform operation
fdiv.d f17, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fdiv.d f17, f6, f14, dyn # perform operation
fdiv.d f17, f6, f14, rdn # perform operation
fdiv.d f17, f6, f14, rmm # perform operation
fdiv.d f17, f6, f14, rne # perform operation
fdiv.d f17, f6, f14, rtz # perform operation
fdiv.d f17, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fdiv.d f1, f30, f23, dyn # perform operation
fdiv.d f1, f30, f23, rdn # perform operation
fdiv.d f1, f30, f23, rmm # perform operation
fdiv.d f1, f30, f23, rne # perform operation
fdiv.d f1, f30, f23, rtz # perform operation
fdiv.d f1, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
fdiv.d f3, f27, f30, dyn # perform operation
fdiv.d f3, f27, f30, rdn # perform operation
fdiv.d f3, f27, f30, rmm # perform operation
fdiv.d f3, f27, f30, rne # perform operation
fdiv.d f3, f27, f30, rtz # perform operation
fdiv.d f3, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fdiv.d f14, f21, f2, dyn # perform operation
fdiv.d f14, f21, f2, rdn # perform operation
fdiv.d f14, f21, f2, rmm # perform operation
fdiv.d f14, f21, f2, rne # perform operation
fdiv.d f14, f21, f2, rtz # perform operation
fdiv.d f14, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff7ffffffffffff from memory into f2
fdiv.d f20, f14, f2, dyn # perform operation
fdiv.d f20, f14, f2, rdn # perform operation
fdiv.d f20, f14, f2, rmm # perform operation
fdiv.d f20, f14, f2, rne # perform operation
fdiv.d f20, f14, f2, rtz # perform operation
fdiv.d f20, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fdiv.d f8, f20, f19, dyn # perform operation
fdiv.d f8, f20, f19, rdn # perform operation
fdiv.d f8, f20, f19, rmm # perform operation
fdiv.d f8, f20, f19, rne # perform operation
fdiv.d f8, f20, f19, rtz # perform operation
fdiv.d f8, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
fdiv.d f10, f3, f1, dyn # perform operation
fdiv.d f10, f3, f1, rdn # perform operation
fdiv.d f10, f3, f1, rmm # perform operation
fdiv.d f10, f3, f1, rne # perform operation
fdiv.d f10, f3, f1, rtz # perform operation
fdiv.d f10, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fdiv.d f14, f11, f17, dyn # perform operation
fdiv.d f14, f11, f17, rdn # perform operation
fdiv.d f14, f11, f17, rmm # perform operation
fdiv.d f14, f11, f17, rne # perform operation
fdiv.d f14, f11, f17, rtz # perform operation
fdiv.d f14, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff0000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fdiv.d f25, f31, f28, dyn # perform operation
fdiv.d f25, f31, f28, rdn # perform operation
fdiv.d f25, f31, f28, rmm # perform operation
fdiv.d f25, f31, f28, rne # perform operation
fdiv.d f25, f31, f28, rtz # perform operation
fdiv.d f25, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff0000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fdiv.d f2, f25, f22, dyn # perform operation
fdiv.d f2, f25, f22, rdn # perform operation
fdiv.d f2, f25, f22, rmm # perform operation
fdiv.d f2, f25, f22, rne # perform operation
fdiv.d f2, f25, f22, rtz # perform operation
fdiv.d f2, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff0000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff0000000000000 from memory into f23
fdiv.d f7, f19, f23, dyn # perform operation
fdiv.d f7, f19, f23, rdn # perform operation
fdiv.d f7, f19, f23, rmm # perform operation
fdiv.d f7, f19, f23, rne # perform operation
fdiv.d f7, f19, f23, rtz # perform operation
fdiv.d f7, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f19, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
fdiv.d f2, f16, f26, dyn # perform operation
fdiv.d f2, f16, f26, rdn # perform operation
fdiv.d f2, f16, f26, rmm # perform operation
fdiv.d f2, f16, f26, rne # perform operation
fdiv.d f2, f16, f26, rtz # perform operation
fdiv.d f2, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fdiv.d f17, f29, f1, dyn # perform operation
fdiv.d f17, f29, f1, rdn # perform operation
fdiv.d f17, f29, f1, rmm # perform operation
fdiv.d f17, f29, f1, rne # perform operation
fdiv.d f17, f29, f1, rtz # perform operation
fdiv.d f17, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff0000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
fdiv.d f19, f24, f12, dyn # perform operation
fdiv.d f19, f24, f12, rdn # perform operation
fdiv.d f19, f24, f12, rmm # perform operation
fdiv.d f19, f24, f12, rne # perform operation
fdiv.d f19, f24, f12, rtz # perform operation
fdiv.d f19, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f24, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
fdiv.d f14, f10, f23, dyn # perform operation
fdiv.d f14, f10, f23, rdn # perform operation
fdiv.d f14, f10, f23, rmm # perform operation
fdiv.d f14, f10, f23, rne # perform operation
fdiv.d f14, f10, f23, rtz # perform operation
fdiv.d f14, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fdiv.d f1, f12, f2, dyn # perform operation
fdiv.d f1, f12, f2, rdn # perform operation
fdiv.d f1, f12, f2, rmm # perform operation
fdiv.d f1, f12, f2, rne # perform operation
fdiv.d f1, f12, f2, rtz # perform operation
fdiv.d f1, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xbff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
fdiv.d f11, f14, f19, dyn # perform operation
fdiv.d f11, f14, f19, rdn # perform operation
fdiv.d f11, f14, f19, rmm # perform operation
fdiv.d f11, f14, f19, rne # perform operation
fdiv.d f11, f14, f19, rtz # perform operation
fdiv.d f11, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fdiv.d f15, f10, f19, dyn # perform operation
fdiv.d f15, f10, f19, rdn # perform operation
fdiv.d f15, f10, f19, rmm # perform operation
fdiv.d f15, f10, f19, rne # perform operation
fdiv.d f15, f10, f19, rtz # perform operation
fdiv.d f15, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fdiv.d f5, f17, f24, dyn # perform operation
fdiv.d f5, f17, f24, rdn # perform operation
fdiv.d f5, f17, f24, rmm # perform operation
fdiv.d f5, f17, f24, rne # perform operation
fdiv.d f5, f17, f24, rtz # perform operation
fdiv.d f5, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fdiv.d f23, f20, f16, dyn # perform operation
fdiv.d f23, f20, f16, rdn # perform operation
fdiv.d f23, f20, f16, rmm # perform operation
fdiv.d f23, f20, f16, rne # perform operation
fdiv.d f23, f20, f16, rtz # perform operation
fdiv.d f23, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fdiv.d f13, f20, f12, dyn # perform operation
fdiv.d f13, f20, f12, rdn # perform operation
fdiv.d f13, f20, f12, rmm # perform operation
fdiv.d f13, f20, f12, rne # perform operation
fdiv.d f13, f20, f12, rtz # perform operation
fdiv.d f13, f20, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f20, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f20, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xbff0000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
fdiv.d f29, f6, f30, dyn # perform operation
fdiv.d f29, f6, f30, rdn # perform operation
fdiv.d f29, f6, f30, rmm # perform operation
fdiv.d f29, f6, f30, rne # perform operation
fdiv.d f29, f6, f30, rtz # perform operation
fdiv.d f29, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff0000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fdiv.d f25, f26, f15, dyn # perform operation
fdiv.d f25, f26, f15, rdn # perform operation
fdiv.d f25, f26, f15, rmm # perform operation
fdiv.d f25, f26, f15, rne # perform operation
fdiv.d f25, f26, f15, rtz # perform operation
fdiv.d f25, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fdiv.d f31, f10, f23, dyn # perform operation
fdiv.d f31, f10, f23, rdn # perform operation
fdiv.d f31, f10, f23, rmm # perform operation
fdiv.d f31, f10, f23, rne # perform operation
fdiv.d f31, f10, f23, rtz # perform operation
fdiv.d f31, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
fdiv.d f1, f29, f30, dyn # perform operation
fdiv.d f1, f29, f30, rdn # perform operation
fdiv.d f1, f29, f30, rmm # perform operation
fdiv.d f1, f29, f30, rne # perform operation
fdiv.d f1, f29, f30, rtz # perform operation
fdiv.d f1, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
fdiv.d f14, f23, f28, dyn # perform operation
fdiv.d f14, f23, f28, rdn # perform operation
fdiv.d f14, f23, f28, rmm # perform operation
fdiv.d f14, f23, f28, rne # perform operation
fdiv.d f14, f23, f28, rtz # perform operation
fdiv.d f14, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fdiv.d f1, f13, f21, dyn # perform operation
fdiv.d f1, f13, f21, rdn # perform operation
fdiv.d f1, f13, f21, rmm # perform operation
fdiv.d f1, f13, f21, rne # perform operation
fdiv.d f1, f13, f21, rtz # perform operation
fdiv.d f1, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
fdiv.d f10, f9, f11, dyn # perform operation
fdiv.d f10, f9, f11, rdn # perform operation
fdiv.d f10, f9, f11, rmm # perform operation
fdiv.d f10, f9, f11, rne # perform operation
fdiv.d f10, f9, f11, rtz # perform operation
fdiv.d f10, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
fdiv.d f31, f3, f21, dyn # perform operation
fdiv.d f31, f3, f21, rdn # perform operation
fdiv.d f31, f3, f21, rmm # perform operation
fdiv.d f31, f3, f21, rne # perform operation
fdiv.d f31, f3, f21, rtz # perform operation
fdiv.d f31, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fdiv.d f25, f3, f2, dyn # perform operation
fdiv.d f25, f3, f2, rdn # perform operation
fdiv.d f25, f3, f2, rmm # perform operation
fdiv.d f25, f3, f2, rne # perform operation
fdiv.d f25, f3, f2, rtz # perform operation
fdiv.d f25, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f3, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff0000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
fdiv.d f27, f8, f2, dyn # perform operation
fdiv.d f27, f8, f2, rdn # perform operation
fdiv.d f27, f8, f2, rmm # perform operation
fdiv.d f27, f8, f2, rne # perform operation
fdiv.d f27, f8, f2, rtz # perform operation
fdiv.d f27, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xbff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fdiv.d f19, f18, f14, dyn # perform operation
fdiv.d f19, f18, f14, rdn # perform operation
fdiv.d f19, f18, f14, rmm # perform operation
fdiv.d f19, f18, f14, rne # perform operation
fdiv.d f19, f18, f14, rtz # perform operation
fdiv.d f19, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff0000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fdiv.d f23, f29, f25, dyn # perform operation
fdiv.d f23, f29, f25, rdn # perform operation
fdiv.d f23, f29, f25, rmm # perform operation
fdiv.d f23, f29, f25, rne # perform operation
fdiv.d f23, f29, f25, rtz # perform operation
fdiv.d f23, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f29, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
fdiv.d f27, f28, f24, dyn # perform operation
fdiv.d f27, f28, f24, rdn # perform operation
fdiv.d f27, f28, f24, rmm # perform operation
fdiv.d f27, f28, f24, rne # perform operation
fdiv.d f27, f28, f24, rtz # perform operation
fdiv.d f27, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff0000000000000 from memory into f13
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fdiv.d f9, f13, f16, dyn # perform operation
fdiv.d f9, f13, f16, rdn # perform operation
fdiv.d f9, f13, f16, rmm # perform operation
fdiv.d f9, f13, f16, rne # perform operation
fdiv.d f9, f13, f16, rtz # perform operation
fdiv.d f9, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff0000000000000 from memory into f22
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fdiv.d f21, f22, f19, dyn # perform operation
fdiv.d f21, f22, f19, rdn # perform operation
fdiv.d f21, f22, f19, rmm # perform operation
fdiv.d f21, f22, f19, rne # perform operation
fdiv.d f21, f22, f19, rtz # perform operation
fdiv.d f21, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000000 from memory into f23
fdiv.d f22, f6, f23, dyn # perform operation
fdiv.d f22, f6, f23, rdn # perform operation
fdiv.d f22, f6, f23, rmm # perform operation
fdiv.d f22, f6, f23, rne # perform operation
fdiv.d f22, f6, f23, rtz # perform operation
fdiv.d f22, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fdiv.d f18, f11, f24, dyn # perform operation
fdiv.d f18, f11, f24, rdn # perform operation
fdiv.d f18, f11, f24, rmm # perform operation
fdiv.d f18, f11, f24, rne # perform operation
fdiv.d f18, f11, f24, rtz # perform operation
fdiv.d f18, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fdiv.d f30, f5, f31, dyn # perform operation
fdiv.d f30, f5, f31, rdn # perform operation
fdiv.d f30, f5, f31, rmm # perform operation
fdiv.d f30, f5, f31, rne # perform operation
fdiv.d f30, f5, f31, rtz # perform operation
fdiv.d f30, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff0000000000000 from memory into f20
fdiv.d f31, f12, f20, dyn # perform operation
fdiv.d f31, f12, f20, rdn # perform operation
fdiv.d f31, f12, f20, rmm # perform operation
fdiv.d f31, f12, f20, rne # perform operation
fdiv.d f31, f12, f20, rtz # perform operation
fdiv.d f31, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f12, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fdiv.d f7, f26, f6, dyn # perform operation
fdiv.d f7, f26, f6, rdn # perform operation
fdiv.d f7, f26, f6, rmm # perform operation
fdiv.d f7, f26, f6, rne # perform operation
fdiv.d f7, f26, f6, rtz # perform operation
fdiv.d f7, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff8000000000000 from memory into f27
fdiv.d f14, f18, f27, dyn # perform operation
fdiv.d f14, f18, f27, rdn # perform operation
fdiv.d f14, f18, f27, rmm # perform operation
fdiv.d f14, f18, f27, rne # perform operation
fdiv.d f14, f18, f27, rtz # perform operation
fdiv.d f14, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fdiv.d f26, f12, f2, dyn # perform operation
fdiv.d f26, f12, f2, rdn # perform operation
fdiv.d f26, f12, f2, rmm # perform operation
fdiv.d f26, f12, f2, rne # perform operation
fdiv.d f26, f12, f2, rtz # perform operation
fdiv.d f26, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fdiv.d f20, f10, f18, dyn # perform operation
fdiv.d f20, f10, f18, rdn # perform operation
fdiv.d f20, f10, f18, rmm # perform operation
fdiv.d f20, f10, f18, rne # perform operation
fdiv.d f20, f10, f18, rtz # perform operation
fdiv.d f20, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
fdiv.d f17, f8, f24, dyn # perform operation
fdiv.d f17, f8, f24, rdn # perform operation
fdiv.d f17, f8, f24, rmm # perform operation
fdiv.d f17, f8, f24, rne # perform operation
fdiv.d f17, f8, f24, rtz # perform operation
fdiv.d f17, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f8, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fdiv.d f23, f7, f29, dyn # perform operation
fdiv.d f23, f7, f29, rdn # perform operation
fdiv.d f23, f7, f29, rmm # perform operation
fdiv.d f23, f7, f29, rne # perform operation
fdiv.d f23, f7, f29, rtz # perform operation
fdiv.d f23, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fefffffffffffff from memory into f13
fdiv.d f31, f18, f13, dyn # perform operation
fdiv.d f31, f18, f13, rdn # perform operation
fdiv.d f31, f18, f13, rmm # perform operation
fdiv.d f31, f18, f13, rne # perform operation
fdiv.d f31, f18, f13, rtz # perform operation
fdiv.d f31, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fdiv.d f5, f30, f7, dyn # perform operation
fdiv.d f5, f30, f7, rdn # perform operation
fdiv.d f5, f30, f7, rmm # perform operation
fdiv.d f5, f30, f7, rne # perform operation
fdiv.d f5, f30, f7, rtz # perform operation
fdiv.d f5, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x3ff8000000000000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fdiv.d f10, f29, f12, dyn # perform operation
fdiv.d f10, f29, f12, rdn # perform operation
fdiv.d f10, f29, f12, rmm # perform operation
fdiv.d f10, f29, f12, rne # perform operation
fdiv.d f10, f29, f12, rtz # perform operation
fdiv.d f10, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff8000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fdiv.d f18, f26, f31, dyn # perform operation
fdiv.d f18, f26, f31, rdn # perform operation
fdiv.d f18, f26, f31, rmm # perform operation
fdiv.d f18, f26, f31, rne # perform operation
fdiv.d f18, f26, f31, rtz # perform operation
fdiv.d f18, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff8000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
fdiv.d f21, f27, f1, dyn # perform operation
fdiv.d f21, f27, f1, rdn # perform operation
fdiv.d f21, f27, f1, rmm # perform operation
fdiv.d f21, f27, f1, rne # perform operation
fdiv.d f21, f27, f1, rtz # perform operation
fdiv.d f21, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f27, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fdiv.d f24, f13, f18, dyn # perform operation
fdiv.d f24, f13, f18, rdn # perform operation
fdiv.d f24, f13, f18, rmm # perform operation
fdiv.d f24, f13, f18, rne # perform operation
fdiv.d f24, f13, f18, rtz # perform operation
fdiv.d f24, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
fdiv.d f25, f14, f15, dyn # perform operation
fdiv.d f25, f14, f15, rdn # perform operation
fdiv.d f25, f14, f15, rmm # perform operation
fdiv.d f25, f14, f15, rne # perform operation
fdiv.d f25, f14, f15, rtz # perform operation
fdiv.d f25, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f14, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fdiv.d f9, f13, f26, dyn # perform operation
fdiv.d f9, f13, f26, rdn # perform operation
fdiv.d f9, f13, f26, rmm # perform operation
fdiv.d f9, f13, f26, rne # perform operation
fdiv.d f9, f13, f26, rtz # perform operation
fdiv.d f9, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
fdiv.d f19, f14, f11, dyn # perform operation
fdiv.d f19, f14, f11, rdn # perform operation
fdiv.d f19, f14, f11, rmm # perform operation
fdiv.d f19, f14, f11, rne # perform operation
fdiv.d f19, f14, f11, rtz # perform operation
fdiv.d f19, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f14, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000000 from memory into f24
fdiv.d f27, f31, f24, dyn # perform operation
fdiv.d f27, f31, f24, rdn # perform operation
fdiv.d f27, f31, f24, rmm # perform operation
fdiv.d f27, f31, f24, rne # perform operation
fdiv.d f27, f31, f24, rtz # perform operation
fdiv.d f27, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fdiv.d f3, f13, f31, dyn # perform operation
fdiv.d f3, f13, f31, rdn # perform operation
fdiv.d f3, f13, f31, rmm # perform operation
fdiv.d f3, f13, f31, rne # perform operation
fdiv.d f3, f13, f31, rtz # perform operation
fdiv.d f3, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff8000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fdiv.d f13, f8, f9, dyn # perform operation
fdiv.d f13, f8, f9, rdn # perform operation
fdiv.d f13, f8, f9, rmm # perform operation
fdiv.d f13, f8, f9, rne # perform operation
fdiv.d f13, f8, f9, rtz # perform operation
fdiv.d f13, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x3ff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff8000000000000 from memory into f2
fdiv.d f10, f25, f2, dyn # perform operation
fdiv.d f10, f25, f2, rdn # perform operation
fdiv.d f10, f25, f2, rmm # perform operation
fdiv.d f10, f25, f2, rne # perform operation
fdiv.d f10, f25, f2, rtz # perform operation
fdiv.d f10, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f9, f20, f22, dyn # perform operation
fdiv.d f9, f20, f22, rdn # perform operation
fdiv.d f9, f20, f22, rmm # perform operation
fdiv.d f9, f20, f22, rne # perform operation
fdiv.d f9, f20, f22, rtz # perform operation
fdiv.d f9, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x3ff8000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fdiv.d f13, f23, f31, dyn # perform operation
fdiv.d f13, f23, f31, rdn # perform operation
fdiv.d f13, f23, f31, rmm # perform operation
fdiv.d f13, f23, f31, rne # perform operation
fdiv.d f13, f23, f31, rtz # perform operation
fdiv.d f13, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
fdiv.d f29, f31, f20, dyn # perform operation
fdiv.d f29, f31, f20, rdn # perform operation
fdiv.d f29, f31, f20, rmm # perform operation
fdiv.d f29, f31, f20, rne # perform operation
fdiv.d f29, f31, f20, rtz # perform operation
fdiv.d f29, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f31, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x5a392534a57711ad from memory into f10
fdiv.d f20, f1, f10, dyn # perform operation
fdiv.d f20, f1, f10, rdn # perform operation
fdiv.d f20, f1, f10, rmm # perform operation
fdiv.d f20, f1, f10, rne # perform operation
fdiv.d f20, f1, f10, rtz # perform operation
fdiv.d f20, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff8000000000000 from memory into f16
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
fdiv.d f3, f16, f10, dyn # perform operation
fdiv.d f3, f16, f10, rdn # perform operation
fdiv.d f3, f16, f10, rmm # perform operation
fdiv.d f3, f16, f10, rne # perform operation
fdiv.d f3, f16, f10, rtz # perform operation
fdiv.d f3, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff8000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f10, f5, f24, dyn # perform operation
fdiv.d f10, f5, f24, rdn # perform operation
fdiv.d f10, f5, f24, rmm # perform operation
fdiv.d f10, f5, f24, rne # perform operation
fdiv.d f10, f5, f24, rtz # perform operation
fdiv.d f10, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fdiv.d f19, f28, f7, dyn # perform operation
fdiv.d f19, f28, f7, rdn # perform operation
fdiv.d f19, f28, f7, rmm # perform operation
fdiv.d f19, f28, f7, rne # perform operation
fdiv.d f19, f28, f7, rtz # perform operation
fdiv.d f19, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x3ff0000000000000 from memory into f21
fdiv.d f29, f7, f21, dyn # perform operation
fdiv.d f29, f7, f21, rdn # perform operation
fdiv.d f29, f7, f21, rmm # perform operation
fdiv.d f29, f7, f21, rne # perform operation
fdiv.d f29, f7, f21, rtz # perform operation
fdiv.d f29, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fdiv.d f20, f1, f11, dyn # perform operation
fdiv.d f20, f1, f11, rdn # perform operation
fdiv.d f20, f1, f11, rmm # perform operation
fdiv.d f20, f1, f11, rne # perform operation
fdiv.d f20, f1, f11, rtz # perform operation
fdiv.d f20, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fdiv.d f18, f25, f9, dyn # perform operation
fdiv.d f18, f25, f9, rdn # perform operation
fdiv.d f18, f25, f9, rmm # perform operation
fdiv.d f18, f25, f9, rne # perform operation
fdiv.d f18, f25, f9, rtz # perform operation
fdiv.d f18, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f30, f19, f15, dyn # perform operation
fdiv.d f30, f19, f15, rdn # perform operation
fdiv.d f30, f19, f15, rmm # perform operation
fdiv.d f30, f19, f15, rne # perform operation
fdiv.d f30, f19, f15, rtz # perform operation
fdiv.d f30, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x4000000000000000 from memory into f12
fdiv.d f6, f8, f12, dyn # perform operation
fdiv.d f6, f8, f12, rdn # perform operation
fdiv.d f6, f8, f12, rmm # perform operation
fdiv.d f6, f8, f12, rne # perform operation
fdiv.d f6, f8, f12, rtz # perform operation
fdiv.d f6, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fdiv.d f13, f30, f25, dyn # perform operation
fdiv.d f13, f30, f25, rdn # perform operation
fdiv.d f13, f30, f25, rmm # perform operation
fdiv.d f13, f30, f25, rne # perform operation
fdiv.d f13, f30, f25, rtz # perform operation
fdiv.d f13, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff8000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fdiv.d f22, f30, f21, dyn # perform operation
fdiv.d f22, f30, f21, rdn # perform operation
fdiv.d f22, f30, f21, rmm # perform operation
fdiv.d f22, f30, f21, rne # perform operation
fdiv.d f22, f30, f21, rtz # perform operation
fdiv.d f22, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fdiv.d f12, f16, f10, dyn # perform operation
fdiv.d f12, f16, f10, rdn # perform operation
fdiv.d f12, f16, f10, rmm # perform operation
fdiv.d f12, f16, f10, rne # perform operation
fdiv.d f12, f16, f10, rtz # perform operation
fdiv.d f12, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
fdiv.d f3, f19, f24, dyn # perform operation
fdiv.d f3, f19, f24, rdn # perform operation
fdiv.d f3, f19, f24, rmm # perform operation
fdiv.d f3, f19, f24, rne # perform operation
fdiv.d f3, f19, f24, rtz # perform operation
fdiv.d f3, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fdiv.d f3, f25, f16, dyn # perform operation
fdiv.d f3, f25, f16, rdn # perform operation
fdiv.d f3, f25, f16, rmm # perform operation
fdiv.d f3, f25, f16, rne # perform operation
fdiv.d f3, f25, f16, rtz # perform operation
fdiv.d f3, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xbff8000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
fdiv.d f20, f25, f29, dyn # perform operation
fdiv.d f20, f25, f29, rdn # perform operation
fdiv.d f20, f25, f29, rmm # perform operation
fdiv.d f20, f25, f29, rne # perform operation
fdiv.d f20, f25, f29, rtz # perform operation
fdiv.d f20, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fdiv.d f2, f26, f1, dyn # perform operation
fdiv.d f2, f26, f1, rdn # perform operation
fdiv.d f2, f26, f1, rmm # perform operation
fdiv.d f2, f26, f1, rne # perform operation
fdiv.d f2, f26, f1, rtz # perform operation
fdiv.d f2, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fdiv.d f28, f12, f14, dyn # perform operation
fdiv.d f28, f12, f14, rdn # perform operation
fdiv.d f28, f12, f14, rmm # perform operation
fdiv.d f28, f12, f14, rne # perform operation
fdiv.d f28, f12, f14, rtz # perform operation
fdiv.d f28, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8008000000000000 from memory into f11
fdiv.d f10, f21, f11, dyn # perform operation
fdiv.d f10, f21, f11, rdn # perform operation
fdiv.d f10, f21, f11, rmm # perform operation
fdiv.d f10, f21, f11, rne # perform operation
fdiv.d f10, f21, f11, rtz # perform operation
fdiv.d f10, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
fdiv.d f24, f23, f21, dyn # perform operation
fdiv.d f24, f23, f21, rdn # perform operation
fdiv.d f24, f23, f21, rmm # perform operation
fdiv.d f24, f23, f21, rne # perform operation
fdiv.d f24, f23, f21, rtz # perform operation
fdiv.d f24, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fdiv.d f3, f13, f8, dyn # perform operation
fdiv.d f3, f13, f8, rdn # perform operation
fdiv.d f3, f13, f8, rmm # perform operation
fdiv.d f3, f13, f8, rne # perform operation
fdiv.d f3, f13, f8, rtz # perform operation
fdiv.d f3, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000000 from memory into f21
fdiv.d f16, f11, f21, dyn # perform operation
fdiv.d f16, f11, f21, rdn # perform operation
fdiv.d f16, f11, f21, rmm # perform operation
fdiv.d f16, f11, f21, rne # perform operation
fdiv.d f16, f11, f21, rtz # perform operation
fdiv.d f16, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f22, f31, f26, dyn # perform operation
fdiv.d f22, f31, f26, rdn # perform operation
fdiv.d f22, f31, f26, rmm # perform operation
fdiv.d f22, f31, f26, rne # perform operation
fdiv.d f22, f31, f26, rtz # perform operation
fdiv.d f22, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fdiv.d f14, f8, f10, dyn # perform operation
fdiv.d f14, f8, f10, rdn # perform operation
fdiv.d f14, f8, f10, rmm # perform operation
fdiv.d f14, f8, f10, rne # perform operation
fdiv.d f14, f8, f10, rtz # perform operation
fdiv.d f14, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xbff8000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
fdiv.d f9, f24, f7, dyn # perform operation
fdiv.d f9, f24, f7, rdn # perform operation
fdiv.d f9, f24, f7, rmm # perform operation
fdiv.d f9, f24, f7, rne # perform operation
fdiv.d f9, f24, f7, rtz # perform operation
fdiv.d f9, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xbff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
fdiv.d f22, f1, f23, dyn # perform operation
fdiv.d f22, f1, f23, rdn # perform operation
fdiv.d f22, f1, f23, rmm # perform operation
fdiv.d f22, f1, f23, rne # perform operation
fdiv.d f22, f1, f23, rtz # perform operation
fdiv.d f22, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
fdiv.d f24, f3, f22, dyn # perform operation
fdiv.d f24, f3, f22, rdn # perform operation
fdiv.d f24, f3, f22, rmm # perform operation
fdiv.d f24, f3, f22, rne # perform operation
fdiv.d f24, f3, f22, rtz # perform operation
fdiv.d f24, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff8000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff7ffffffffffff from memory into f10
fdiv.d f15, f9, f10, dyn # perform operation
fdiv.d f15, f9, f10, rdn # perform operation
fdiv.d f15, f9, f10, rmm # perform operation
fdiv.d f15, f9, f10, rne # perform operation
fdiv.d f15, f9, f10, rtz # perform operation
fdiv.d f15, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000001 from memory into f11
fdiv.d f25, f8, f11, dyn # perform operation
fdiv.d f25, f8, f11, rdn # perform operation
fdiv.d f25, f8, f11, rmm # perform operation
fdiv.d f25, f8, f11, rne # perform operation
fdiv.d f25, f8, f11, rtz # perform operation
fdiv.d f25, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xbff8000000000000 from memory into f19
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fdiv.d f10, f19, f28, dyn # perform operation
fdiv.d f10, f19, f28, rdn # perform operation
fdiv.d f10, f19, f28, rmm # perform operation
fdiv.d f10, f19, f28, rne # perform operation
fdiv.d f10, f19, f28, rtz # perform operation
fdiv.d f10, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
fdiv.d f28, f21, f3, dyn # perform operation
fdiv.d f28, f21, f3, rdn # perform operation
fdiv.d f28, f21, f3, rmm # perform operation
fdiv.d f28, f21, f3, rne # perform operation
fdiv.d f28, f21, f3, rtz # perform operation
fdiv.d f28, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f18, f2, f24, dyn # perform operation
fdiv.d f18, f2, f24, rdn # perform operation
fdiv.d f18, f2, f24, rmm # perform operation
fdiv.d f18, f2, f24, rne # perform operation
fdiv.d f18, f2, f24, rtz # perform operation
fdiv.d f18, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fdiv.d f9, f14, f12, dyn # perform operation
fdiv.d f9, f14, f12, rdn # perform operation
fdiv.d f9, f14, f12, rmm # perform operation
fdiv.d f9, f14, f12, rne # perform operation
fdiv.d f9, f14, f12, rtz # perform operation
fdiv.d f9, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f14, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff0000000000000 from memory into f1
fdiv.d f2, f23, f1, dyn # perform operation
fdiv.d f2, f23, f1, rdn # perform operation
fdiv.d f2, f23, f1, rmm # perform operation
fdiv.d f2, f23, f1, rne # perform operation
fdiv.d f2, f23, f1, rtz # perform operation
fdiv.d f2, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f23, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fdiv.d f26, f11, f27, dyn # perform operation
fdiv.d f26, f11, f27, rdn # perform operation
fdiv.d f26, f11, f27, rmm # perform operation
fdiv.d f26, f11, f27, rne # perform operation
fdiv.d f26, f11, f27, rtz # perform operation
fdiv.d f26, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f11, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fdiv.d f9, f11, f1, dyn # perform operation
fdiv.d f9, f11, f1, rdn # perform operation
fdiv.d f9, f11, f1, rmm # perform operation
fdiv.d f9, f11, f1, rne # perform operation
fdiv.d f9, f11, f1, rtz # perform operation
fdiv.d f9, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fdiv.d f28, f6, f31, dyn # perform operation
fdiv.d f28, f6, f31, rdn # perform operation
fdiv.d f28, f6, f31, rmm # perform operation
fdiv.d f28, f6, f31, rne # perform operation
fdiv.d f28, f6, f31, rtz # perform operation
fdiv.d f28, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fdiv.d f13, f29, f9, dyn # perform operation
fdiv.d f13, f29, f9, rdn # perform operation
fdiv.d f13, f29, f9, rmm # perform operation
fdiv.d f13, f29, f9, rne # perform operation
fdiv.d f13, f29, f9, rtz # perform operation
fdiv.d f13, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
fdiv.d f26, f5, f29, dyn # perform operation
fdiv.d f26, f5, f29, rdn # perform operation
fdiv.d f26, f5, f29, rmm # perform operation
fdiv.d f26, f5, f29, rne # perform operation
fdiv.d f26, f5, f29, rtz # perform operation
fdiv.d f26, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
fdiv.d f5, f13, f26, dyn # perform operation
fdiv.d f5, f13, f26, rdn # perform operation
fdiv.d f5, f13, f26, rmm # perform operation
fdiv.d f5, f13, f26, rne # perform operation
fdiv.d f5, f13, f26, rtz # perform operation
fdiv.d f5, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8010000000000000 from memory into f19
fdiv.d f6, f22, f19, dyn # perform operation
fdiv.d f6, f22, f19, rdn # perform operation
fdiv.d f6, f22, f19, rmm # perform operation
fdiv.d f6, f22, f19, rne # perform operation
fdiv.d f6, f22, f19, rtz # perform operation
fdiv.d f6, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fdiv.d f25, f24, f1, dyn # perform operation
fdiv.d f25, f24, f1, rdn # perform operation
fdiv.d f25, f24, f1, rmm # perform operation
fdiv.d f25, f24, f1, rne # perform operation
fdiv.d f25, f24, f1, rtz # perform operation
fdiv.d f25, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
fdiv.d f20, f31, f16, dyn # perform operation
fdiv.d f20, f31, f16, rdn # perform operation
fdiv.d f20, f31, f16, rmm # perform operation
fdiv.d f20, f31, f16, rne # perform operation
fdiv.d f20, f31, f16, rtz # perform operation
fdiv.d f20, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fdiv.d f2, f10, f27, dyn # perform operation
fdiv.d f2, f10, f27, rdn # perform operation
fdiv.d f2, f10, f27, rmm # perform operation
fdiv.d f2, f10, f27, rne # perform operation
fdiv.d f2, f10, f27, rtz # perform operation
fdiv.d f2, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f10, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x4000000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fdiv.d f7, f10, f5, dyn # perform operation
fdiv.d f7, f10, f5, rdn # perform operation
fdiv.d f7, f10, f5, rmm # perform operation
fdiv.d f7, f10, f5, rne # perform operation
fdiv.d f7, f10, f5, rtz # perform operation
fdiv.d f7, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
fdiv.d f18, f22, f12, dyn # perform operation
fdiv.d f18, f22, f12, rdn # perform operation
fdiv.d f18, f22, f12, rmm # perform operation
fdiv.d f18, f22, f12, rne # perform operation
fdiv.d f18, f22, f12, rtz # perform operation
fdiv.d f18, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fdiv.d f13, f29, f28, dyn # perform operation
fdiv.d f13, f29, f28, rdn # perform operation
fdiv.d f13, f29, f28, rmm # perform operation
fdiv.d f13, f29, f28, rne # perform operation
fdiv.d f13, f29, f28, rtz # perform operation
fdiv.d f13, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0000000000000001 from memory into f20
fdiv.d f10, f28, f20, dyn # perform operation
fdiv.d f10, f28, f20, rdn # perform operation
fdiv.d f10, f28, f20, rmm # perform operation
fdiv.d f10, f28, f20, rne # perform operation
fdiv.d f10, f28, f20, rtz # perform operation
fdiv.d f10, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x4000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
fdiv.d f6, f19, f1, dyn # perform operation
fdiv.d f6, f19, f1, rdn # perform operation
fdiv.d f6, f19, f1, rmm # perform operation
fdiv.d f6, f19, f1, rne # perform operation
fdiv.d f6, f19, f1, rtz # perform operation
fdiv.d f6, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f19, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x4000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fdiv.d f23, f29, f15, dyn # perform operation
fdiv.d f23, f29, f15, rdn # perform operation
fdiv.d f23, f29, f15, rmm # perform operation
fdiv.d f23, f29, f15, rne # perform operation
fdiv.d f23, f29, f15, rtz # perform operation
fdiv.d f23, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fdiv.d f19, f15, f5, dyn # perform operation
fdiv.d f19, f15, f5, rdn # perform operation
fdiv.d f19, f15, f5, rmm # perform operation
fdiv.d f19, f15, f5, rne # perform operation
fdiv.d f19, f15, f5, rtz # perform operation
fdiv.d f19, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fdiv.d f6, f28, f16, dyn # perform operation
fdiv.d f6, f28, f16, rdn # perform operation
fdiv.d f6, f28, f16, rmm # perform operation
fdiv.d f6, f28, f16, rne # perform operation
fdiv.d f6, f28, f16, rtz # perform operation
fdiv.d f6, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fffffffffffffff from memory into f22
fdiv.d f28, f20, f22, dyn # perform operation
fdiv.d f28, f20, f22, rdn # perform operation
fdiv.d f28, f20, f22, rmm # perform operation
fdiv.d f28, f20, f22, rne # perform operation
fdiv.d f28, f20, f22, rtz # perform operation
fdiv.d f28, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
fdiv.d f21, f9, f26, dyn # perform operation
fdiv.d f21, f9, f26, rdn # perform operation
fdiv.d f21, f9, f26, rmm # perform operation
fdiv.d f21, f9, f26, rne # perform operation
fdiv.d f21, f9, f26, rtz # perform operation
fdiv.d f21, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000001 from memory into f10
fdiv.d f9, f22, f10, dyn # perform operation
fdiv.d f9, f22, f10, rdn # perform operation
fdiv.d f9, f22, f10, rmm # perform operation
fdiv.d f9, f22, f10, rne # perform operation
fdiv.d f9, f22, f10, rtz # perform operation
fdiv.d f9, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff7ffffffffffff from memory into f11
fdiv.d f3, f20, f11, dyn # perform operation
fdiv.d f3, f20, f11, rdn # perform operation
fdiv.d f3, f20, f11, rmm # perform operation
fdiv.d f3, f20, f11, rne # perform operation
fdiv.d f3, f20, f11, rtz # perform operation
fdiv.d f3, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000001 from memory into f5
fdiv.d f15, f23, f5, dyn # perform operation
fdiv.d f15, f23, f5, rdn # perform operation
fdiv.d f15, f23, f5, rmm # perform operation
fdiv.d f15, f23, f5, rne # perform operation
fdiv.d f15, f23, f5, rtz # perform operation
fdiv.d f15, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x4000000000000000 from memory into f7
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fdiv.d f22, f7, f13, dyn # perform operation
fdiv.d f22, f7, f13, rdn # perform operation
fdiv.d f22, f7, f13, rmm # perform operation
fdiv.d f22, f7, f13, rne # perform operation
fdiv.d f22, f7, f13, rtz # perform operation
fdiv.d f22, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x4000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x4000000000000000 from memory into f11
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
fdiv.d f20, f11, f28, dyn # perform operation
fdiv.d f20, f11, f28, rdn # perform operation
fdiv.d f20, f11, f28, rmm # perform operation
fdiv.d f20, f11, f28, rne # perform operation
fdiv.d f20, f11, f28, rtz # perform operation
fdiv.d f20, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f11, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000000 from memory into f31
fdiv.d f3, f24, f31, dyn # perform operation
fdiv.d f3, f24, f31, rdn # perform operation
fdiv.d f3, f24, f31, rmm # perform operation
fdiv.d f3, f24, f31, rne # perform operation
fdiv.d f3, f24, f31, rtz # perform operation
fdiv.d f3, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fdiv.d f14, f25, f31, dyn # perform operation
fdiv.d f14, f25, f31, rdn # perform operation
fdiv.d f14, f25, f31, rmm # perform operation
fdiv.d f14, f25, f31, rne # perform operation
fdiv.d f14, f25, f31, rtz # perform operation
fdiv.d f14, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fdiv.d f30, f6, f3, dyn # perform operation
fdiv.d f30, f6, f3, rdn # perform operation
fdiv.d f30, f6, f3, rmm # perform operation
fdiv.d f30, f6, f3, rne # perform operation
fdiv.d f30, f6, f3, rtz # perform operation
fdiv.d f30, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fdiv.d f7, f25, f10, dyn # perform operation
fdiv.d f7, f25, f10, rdn # perform operation
fdiv.d f7, f25, f10, rmm # perform operation
fdiv.d f7, f25, f10, rne # perform operation
fdiv.d f7, f25, f10, rtz # perform operation
fdiv.d f7, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fdiv.d f24, f19, f7, dyn # perform operation
fdiv.d f24, f19, f7, rdn # perform operation
fdiv.d f24, f19, f7, rmm # perform operation
fdiv.d f24, f19, f7, rne # perform operation
fdiv.d f24, f19, f7, rtz # perform operation
fdiv.d f24, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f19, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xbff8000000000000 from memory into f20
fdiv.d f7, f18, f20, dyn # perform operation
fdiv.d f7, f18, f20, rdn # perform operation
fdiv.d f7, f18, f20, rmm # perform operation
fdiv.d f7, f18, f20, rne # perform operation
fdiv.d f7, f18, f20, rtz # perform operation
fdiv.d f7, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fdiv.d f9, f27, f18, dyn # perform operation
fdiv.d f9, f27, f18, rdn # perform operation
fdiv.d f9, f27, f18, rmm # perform operation
fdiv.d f9, f27, f18, rne # perform operation
fdiv.d f9, f27, f18, rtz # perform operation
fdiv.d f9, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f27, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xc000000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xc000000000000000 from memory into f14
fdiv.d f16, f17, f14, dyn # perform operation
fdiv.d f16, f17, f14, rdn # perform operation
fdiv.d f16, f17, f14, rmm # perform operation
fdiv.d f16, f17, f14, rne # perform operation
fdiv.d f16, f17, f14, rtz # perform operation
fdiv.d f16, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fdiv.d f18, f28, f20, dyn # perform operation
fdiv.d f18, f28, f20, rdn # perform operation
fdiv.d f18, f28, f20, rmm # perform operation
fdiv.d f18, f28, f20, rne # perform operation
fdiv.d f18, f28, f20, rtz # perform operation
fdiv.d f18, f28, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f28, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f28, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xc000000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
fdiv.d f10, f1, f26, dyn # perform operation
fdiv.d f10, f1, f26, rdn # perform operation
fdiv.d f10, f1, f26, rmm # perform operation
fdiv.d f10, f1, f26, rne # perform operation
fdiv.d f10, f1, f26, rtz # perform operation
fdiv.d f10, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xc000000000000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
fdiv.d f11, f22, f21, dyn # perform operation
fdiv.d f11, f22, f21, rdn # perform operation
fdiv.d f11, f22, f21, rmm # perform operation
fdiv.d f11, f22, f21, rne # perform operation
fdiv.d f11, f22, f21, rtz # perform operation
fdiv.d f11, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fdiv.d f7, f25, f22, dyn # perform operation
fdiv.d f7, f25, f22, rdn # perform operation
fdiv.d f7, f25, f22, rmm # perform operation
fdiv.d f7, f25, f22, rne # perform operation
fdiv.d f7, f25, f22, rtz # perform operation
fdiv.d f7, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xc000000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x000fffffffffffff from memory into f23
fdiv.d f10, f5, f23, dyn # perform operation
fdiv.d f10, f5, f23, rdn # perform operation
fdiv.d f10, f5, f23, rmm # perform operation
fdiv.d f10, f5, f23, rne # perform operation
fdiv.d f10, f5, f23, rtz # perform operation
fdiv.d f10, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f5, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fdiv.d f30, f24, f27, dyn # perform operation
fdiv.d f30, f24, f27, rdn # perform operation
fdiv.d f30, f24, f27, rmm # perform operation
fdiv.d f30, f24, f27, rne # perform operation
fdiv.d f30, f24, f27, rtz # perform operation
fdiv.d f30, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fdiv.d f13, f30, f26, dyn # perform operation
fdiv.d f13, f30, f26, rdn # perform operation
fdiv.d f13, f30, f26, rmm # perform operation
fdiv.d f13, f30, f26, rne # perform operation
fdiv.d f13, f30, f26, rtz # perform operation
fdiv.d f13, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xc000000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
fdiv.d f9, f10, f15, dyn # perform operation
fdiv.d f9, f10, f15, rdn # perform operation
fdiv.d f9, f10, f15, rmm # perform operation
fdiv.d f9, f10, f15, rne # perform operation
fdiv.d f9, f10, f15, rtz # perform operation
fdiv.d f9, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f10, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
fdiv.d f6, f13, f26, dyn # perform operation
fdiv.d f6, f13, f26, rdn # perform operation
fdiv.d f6, f13, f26, rmm # perform operation
fdiv.d f6, f13, f26, rne # perform operation
fdiv.d f6, f13, f26, rtz # perform operation
fdiv.d f6, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xc000000000000000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
fdiv.d f19, f30, f25, dyn # perform operation
fdiv.d f19, f30, f25, rdn # perform operation
fdiv.d f19, f30, f25, rmm # perform operation
fdiv.d f19, f30, f25, rne # perform operation
fdiv.d f19, f30, f25, rtz # perform operation
fdiv.d f19, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
fdiv.d f8, f6, f30, dyn # perform operation
fdiv.d f8, f6, f30, rdn # perform operation
fdiv.d f8, f6, f30, rmm # perform operation
fdiv.d f8, f6, f30, rne # perform operation
fdiv.d f8, f6, f30, rtz # perform operation
fdiv.d f8, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000000 from memory into f2
fdiv.d f1, f28, f2, dyn # perform operation
fdiv.d f1, f28, f2, rdn # perform operation
fdiv.d f1, f28, f2, rmm # perform operation
fdiv.d f1, f28, f2, rne # perform operation
fdiv.d f1, f28, f2, rtz # perform operation
fdiv.d f1, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fdiv.d f21, f9, f13, dyn # perform operation
fdiv.d f21, f9, f13, rdn # perform operation
fdiv.d f21, f9, f13, rmm # perform operation
fdiv.d f21, f9, f13, rne # perform operation
fdiv.d f21, f9, f13, rtz # perform operation
fdiv.d f21, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
fdiv.d f11, f24, f25, dyn # perform operation
fdiv.d f11, f24, f25, rdn # perform operation
fdiv.d f11, f24, f25, rmm # perform operation
fdiv.d f11, f24, f25, rne # perform operation
fdiv.d f11, f24, f25, rtz # perform operation
fdiv.d f11, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xc000000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
fdiv.d f24, f6, f15, dyn # perform operation
fdiv.d f24, f6, f15, rdn # perform operation
fdiv.d f24, f6, f15, rmm # perform operation
fdiv.d f24, f6, f15, rne # perform operation
fdiv.d f24, f6, f15, rtz # perform operation
fdiv.d f24, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f6, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fdiv.d f27, f11, f20, dyn # perform operation
fdiv.d f27, f11, f20, rdn # perform operation
fdiv.d f27, f11, f20, rmm # perform operation
fdiv.d f27, f11, f20, rne # perform operation
fdiv.d f27, f11, f20, rtz # perform operation
fdiv.d f27, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xc000000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fdiv.d f31, f11, f18, dyn # perform operation
fdiv.d f31, f11, f18, rdn # perform operation
fdiv.d f31, f11, f18, rmm # perform operation
fdiv.d f31, f11, f18, rne # perform operation
fdiv.d f31, f11, f18, rtz # perform operation
fdiv.d f31, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xc000000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
fdiv.d f25, f29, f24, dyn # perform operation
fdiv.d f25, f29, f24, rdn # perform operation
fdiv.d f25, f29, f24, rmm # perform operation
fdiv.d f25, f29, f24, rne # perform operation
fdiv.d f25, f29, f24, rtz # perform operation
fdiv.d f25, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
fdiv.d f20, f21, f8, dyn # perform operation
fdiv.d f20, f21, f8, rdn # perform operation
fdiv.d f20, f21, f8, rmm # perform operation
fdiv.d f20, f21, f8, rne # perform operation
fdiv.d f20, f21, f8, rtz # perform operation
fdiv.d f20, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc000000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
fdiv.d f30, f25, f6, dyn # perform operation
fdiv.d f30, f25, f6, rdn # perform operation
fdiv.d f30, f25, f6, rmm # perform operation
fdiv.d f30, f25, f6, rne # perform operation
fdiv.d f30, f25, f6, rtz # perform operation
fdiv.d f30, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000000 from memory into f3
fdiv.d f16, f30, f3, dyn # perform operation
fdiv.d f16, f30, f3, rdn # perform operation
fdiv.d f16, f30, f3, rmm # perform operation
fdiv.d f16, f30, f3, rne # perform operation
fdiv.d f16, f30, f3, rtz # perform operation
fdiv.d f16, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000000 from memory into f30
fdiv.d f26, f8, f30, dyn # perform operation
fdiv.d f26, f8, f30, rdn # perform operation
fdiv.d f26, f8, f30, rmm # perform operation
fdiv.d f26, f8, f30, rne # perform operation
fdiv.d f26, f8, f30, rtz # perform operation
fdiv.d f26, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff0000000000000 from memory into f6
fdiv.d f26, f30, f6, dyn # perform operation
fdiv.d f26, f30, f6, rdn # perform operation
fdiv.d f26, f30, f6, rmm # perform operation
fdiv.d f26, f30, f6, rne # perform operation
fdiv.d f26, f30, f6, rtz # perform operation
fdiv.d f26, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff0000000000000 from memory into f7
fdiv.d f16, f31, f7, dyn # perform operation
fdiv.d f16, f31, f7, rdn # perform operation
fdiv.d f16, f31, f7, rmm # perform operation
fdiv.d f16, f31, f7, rne # perform operation
fdiv.d f16, f31, f7, rtz # perform operation
fdiv.d f16, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fdiv.d f6, f7, f5, dyn # perform operation
fdiv.d f6, f7, f5, rdn # perform operation
fdiv.d f6, f7, f5, rmm # perform operation
fdiv.d f6, f7, f5, rne # perform operation
fdiv.d f6, f7, f5, rtz # perform operation
fdiv.d f6, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fdiv.d f13, f10, f22, dyn # perform operation
fdiv.d f13, f10, f22, rdn # perform operation
fdiv.d f13, f10, f22, rmm # perform operation
fdiv.d f13, f10, f22, rne # perform operation
fdiv.d f13, f10, f22, rtz # perform operation
fdiv.d f13, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fdiv.d f23, f30, f5, dyn # perform operation
fdiv.d f23, f30, f5, rdn # perform operation
fdiv.d f23, f30, f5, rmm # perform operation
fdiv.d f23, f30, f5, rne # perform operation
fdiv.d f23, f30, f5, rtz # perform operation
fdiv.d f23, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fdiv.d f2, f20, f9, dyn # perform operation
fdiv.d f2, f20, f9, rdn # perform operation
fdiv.d f2, f20, f9, rmm # perform operation
fdiv.d f2, f20, f9, rne # perform operation
fdiv.d f2, f20, f9, rtz # perform operation
fdiv.d f2, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0010000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
fdiv.d f2, f27, f20, dyn # perform operation
fdiv.d f2, f27, f20, rdn # perform operation
fdiv.d f2, f27, f20, rmm # perform operation
fdiv.d f2, f27, f20, rne # perform operation
fdiv.d f2, f27, f20, rtz # perform operation
fdiv.d f2, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
fdiv.d f2, f8, f31, dyn # perform operation
fdiv.d f2, f8, f31, rdn # perform operation
fdiv.d f2, f8, f31, rmm # perform operation
fdiv.d f2, f8, f31, rne # perform operation
fdiv.d f2, f8, f31, rtz # perform operation
fdiv.d f2, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
fdiv.d f7, f9, f29, dyn # perform operation
fdiv.d f7, f9, f29, rdn # perform operation
fdiv.d f7, f9, f29, rmm # perform operation
fdiv.d f7, f9, f29, rne # perform operation
fdiv.d f7, f9, f29, rtz # perform operation
fdiv.d f7, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f9, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xffefffffffffffff from memory into f29
fdiv.d f14, f8, f29, dyn # perform operation
fdiv.d f14, f8, f29, rdn # perform operation
fdiv.d f14, f8, f29, rmm # perform operation
fdiv.d f14, f8, f29, rne # perform operation
fdiv.d f14, f8, f29, rtz # perform operation
fdiv.d f14, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0010000000000000 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fdiv.d f11, f2, f3, dyn # perform operation
fdiv.d f11, f2, f3, rdn # perform operation
fdiv.d f11, f2, f3, rmm # perform operation
fdiv.d f11, f2, f3, rne # perform operation
fdiv.d f11, f2, f3, rtz # perform operation
fdiv.d f11, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
fdiv.d f1, f17, f6, dyn # perform operation
fdiv.d f1, f17, f6, rdn # perform operation
fdiv.d f1, f17, f6, rmm # perform operation
fdiv.d f1, f17, f6, rne # perform operation
fdiv.d f1, f17, f6, rtz # perform operation
fdiv.d f1, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f17, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
fdiv.d f23, f24, f26, dyn # perform operation
fdiv.d f23, f24, f26, rdn # perform operation
fdiv.d f23, f24, f26, rmm # perform operation
fdiv.d f23, f24, f26, rne # perform operation
fdiv.d f23, f24, f26, rtz # perform operation
fdiv.d f23, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f24, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0010000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fdiv.d f28, f24, f21, dyn # perform operation
fdiv.d f28, f24, f21, rdn # perform operation
fdiv.d f28, f24, f21, rmm # perform operation
fdiv.d f28, f24, f21, rne # perform operation
fdiv.d f28, f24, f21, rtz # perform operation
fdiv.d f28, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f31, f10, f19, dyn # perform operation
fdiv.d f31, f10, f19, rdn # perform operation
fdiv.d f31, f10, f19, rmm # perform operation
fdiv.d f31, f10, f19, rne # perform operation
fdiv.d f31, f10, f19, rtz # perform operation
fdiv.d f31, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0010000000000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
fdiv.d f30, f26, f13, dyn # perform operation
fdiv.d f30, f26, f13, rdn # perform operation
fdiv.d f30, f26, f13, rmm # perform operation
fdiv.d f30, f26, f13, rne # perform operation
fdiv.d f30, f26, f13, rtz # perform operation
fdiv.d f30, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0010000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fdiv.d f14, f30, f1, dyn # perform operation
fdiv.d f14, f30, f1, rdn # perform operation
fdiv.d f14, f30, f1, rmm # perform operation
fdiv.d f14, f30, f1, rne # perform operation
fdiv.d f14, f30, f1, rtz # perform operation
fdiv.d f14, f30, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f30, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f30, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f30, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f30, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f30, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fdiv.d f16, f22, f23, dyn # perform operation
fdiv.d f16, f22, f23, rdn # perform operation
fdiv.d f16, f22, f23, rmm # perform operation
fdiv.d f16, f22, f23, rne # perform operation
fdiv.d f16, f22, f23, rtz # perform operation
fdiv.d f16, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
fdiv.d f13, f29, f5, dyn # perform operation
fdiv.d f13, f29, f5, rdn # perform operation
fdiv.d f13, f29, f5, rmm # perform operation
fdiv.d f13, f29, f5, rne # perform operation
fdiv.d f13, f29, f5, rtz # perform operation
fdiv.d f13, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fdiv.d f16, f10, f1, dyn # perform operation
fdiv.d f16, f10, f1, rdn # perform operation
fdiv.d f16, f10, f1, rmm # perform operation
fdiv.d f16, f10, f1, rne # perform operation
fdiv.d f16, f10, f1, rtz # perform operation
fdiv.d f16, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
fdiv.d f20, f6, f8, dyn # perform operation
fdiv.d f20, f6, f8, rdn # perform operation
fdiv.d f20, f6, f8, rmm # perform operation
fdiv.d f20, f6, f8, rne # perform operation
fdiv.d f20, f6, f8, rtz # perform operation
fdiv.d f20, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0010000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
fdiv.d f7, f15, f23, dyn # perform operation
fdiv.d f7, f15, f23, rdn # perform operation
fdiv.d f7, f15, f23, rmm # perform operation
fdiv.d f7, f15, f23, rne # perform operation
fdiv.d f7, f15, f23, rtz # perform operation
fdiv.d f7, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0010000000000000 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fdiv.d f24, f20, f5, dyn # perform operation
fdiv.d f24, f20, f5, rdn # perform operation
fdiv.d f24, f20, f5, rmm # perform operation
fdiv.d f24, f20, f5, rne # perform operation
fdiv.d f24, f20, f5, rtz # perform operation
fdiv.d f24, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0010000000000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000001 from memory into f27
fdiv.d f6, f19, f27, dyn # perform operation
fdiv.d f6, f19, f27, rdn # perform operation
fdiv.d f6, f19, f27, rmm # perform operation
fdiv.d f6, f19, f27, rne # perform operation
fdiv.d f6, f19, f27, rtz # perform operation
fdiv.d f6, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fdiv.d f28, f5, f3, dyn # perform operation
fdiv.d f28, f5, f3, rdn # perform operation
fdiv.d f28, f5, f3, rmm # perform operation
fdiv.d f28, f5, f3, rne # perform operation
fdiv.d f28, f5, f3, rtz # perform operation
fdiv.d f28, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f5, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x10000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0010000000000000 from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fdiv.d f12, f28, f27, dyn # perform operation
fdiv.d f12, f28, f27, rdn # perform operation
fdiv.d f12, f28, f27, rmm # perform operation
fdiv.d f12, f28, f27, rne # perform operation
fdiv.d f12, f28, f27, rtz # perform operation
fdiv.d f12, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fdiv.d f10, f5, f17, dyn # perform operation
fdiv.d f10, f5, f17, rdn # perform operation
fdiv.d f10, f5, f17, rmm # perform operation
fdiv.d f10, f5, f17, rne # perform operation
fdiv.d f10, f5, f17, rtz # perform operation
fdiv.d f10, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fdiv.d f26, f21, f24, dyn # perform operation
fdiv.d f26, f21, f24, rdn # perform operation
fdiv.d f26, f21, f24, rmm # perform operation
fdiv.d f26, f21, f24, rne # perform operation
fdiv.d f26, f21, f24, rtz # perform operation
fdiv.d f26, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fdiv.d f27, f10, f14, dyn # perform operation
fdiv.d f27, f10, f14, rdn # perform operation
fdiv.d f27, f10, f14, rmm # perform operation
fdiv.d f27, f10, f14, rne # perform operation
fdiv.d f27, f10, f14, rtz # perform operation
fdiv.d f27, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8010000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fdiv.d f30, f31, f17, dyn # perform operation
fdiv.d f30, f31, f17, rdn # perform operation
fdiv.d f30, f31, f17, rmm # perform operation
fdiv.d f30, f31, f17, rne # perform operation
fdiv.d f30, f31, f17, rtz # perform operation
fdiv.d f30, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f31, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8010000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x3ff8000000000000 from memory into f22
fdiv.d f19, f5, f22, dyn # perform operation
fdiv.d f19, f5, f22, rdn # perform operation
fdiv.d f19, f5, f22, rmm # perform operation
fdiv.d f19, f5, f22, rne # perform operation
fdiv.d f19, f5, f22, rtz # perform operation
fdiv.d f19, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f5, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8010000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fdiv.d f3, f2, f7, dyn # perform operation
fdiv.d f3, f2, f7, rdn # perform operation
fdiv.d f3, f2, f7, rmm # perform operation
fdiv.d f3, f2, f7, rne # perform operation
fdiv.d f3, f2, f7, rtz # perform operation
fdiv.d f3, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x4000000000000000 from memory into f9
fdiv.d f24, f29, f9, dyn # perform operation
fdiv.d f24, f29, f9, rdn # perform operation
fdiv.d f24, f29, f9, rmm # perform operation
fdiv.d f24, f29, f9, rne # perform operation
fdiv.d f24, f29, f9, rtz # perform operation
fdiv.d f24, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xc000000000000000 from memory into f25
fdiv.d f26, f18, f25, dyn # perform operation
fdiv.d f26, f18, f25, rdn # perform operation
fdiv.d f26, f18, f25, rmm # perform operation
fdiv.d f26, f18, f25, rne # perform operation
fdiv.d f26, f18, f25, rtz # perform operation
fdiv.d f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0010000000000000 from memory into f17
fdiv.d f31, f24, f17, dyn # perform operation
fdiv.d f31, f24, f17, rdn # perform operation
fdiv.d f31, f24, f17, rmm # perform operation
fdiv.d f31, f24, f17, rne # perform operation
fdiv.d f31, f24, f17, rtz # perform operation
fdiv.d f31, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fdiv.d f22, f6, f20, dyn # perform operation
fdiv.d f22, f6, f20, rdn # perform operation
fdiv.d f22, f6, f20, rmm # perform operation
fdiv.d f22, f6, f20, rne # perform operation
fdiv.d f22, f6, f20, rtz # perform operation
fdiv.d f22, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fdiv.d f13, f18, f1, dyn # perform operation
fdiv.d f13, f18, f1, rdn # perform operation
fdiv.d f13, f18, f1, rmm # perform operation
fdiv.d f13, f18, f1, rne # perform operation
fdiv.d f13, f18, f1, rtz # perform operation
fdiv.d f13, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8010000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xffefffffffffffff from memory into f31
fdiv.d f27, f23, f31, dyn # perform operation
fdiv.d f27, f23, f31, rdn # perform operation
fdiv.d f27, f23, f31, rmm # perform operation
fdiv.d f27, f23, f31, rne # perform operation
fdiv.d f27, f23, f31, rtz # perform operation
fdiv.d f27, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f23, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x000fffffffffffff from memory into f6
fdiv.d f21, f16, f6, dyn # perform operation
fdiv.d f21, f16, f6, rdn # perform operation
fdiv.d f21, f16, f6, rmm # perform operation
fdiv.d f21, f16, f6, rne # perform operation
fdiv.d f21, f16, f6, rtz # perform operation
fdiv.d f21, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fdiv.d f28, f11, f5, dyn # perform operation
fdiv.d f28, f11, f5, rdn # perform operation
fdiv.d f28, f11, f5, rmm # perform operation
fdiv.d f28, f11, f5, rne # perform operation
fdiv.d f28, f11, f5, rtz # perform operation
fdiv.d f28, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0008000000000000 from memory into f29
fdiv.d f10, f22, f29, dyn # perform operation
fdiv.d f10, f22, f29, rdn # perform operation
fdiv.d f10, f22, f29, rmm # perform operation
fdiv.d f10, f22, f29, rne # perform operation
fdiv.d f10, f22, f29, rtz # perform operation
fdiv.d f10, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f22, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8008000000000000 from memory into f3
fdiv.d f9, f22, f3, dyn # perform operation
fdiv.d f9, f22, f3, rdn # perform operation
fdiv.d f9, f22, f3, rmm # perform operation
fdiv.d f9, f22, f3, rne # perform operation
fdiv.d f9, f22, f3, rtz # perform operation
fdiv.d f9, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8010000000000000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000001 from memory into f13
fdiv.d f1, f6, f13, dyn # perform operation
fdiv.d f1, f6, f13, rdn # perform operation
fdiv.d f1, f6, f13, rmm # perform operation
fdiv.d f1, f6, f13, rne # perform operation
fdiv.d f1, f6, f13, rtz # perform operation
fdiv.d f1, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8010000000000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8000000000000001 from memory into f15
fdiv.d f14, f26, f15, dyn # perform operation
fdiv.d f14, f26, f15, rdn # perform operation
fdiv.d f14, f26, f15, rmm # perform operation
fdiv.d f14, f26, f15, rne # perform operation
fdiv.d f14, f26, f15, rtz # perform operation
fdiv.d f14, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fdiv.d f31, f12, f15, dyn # perform operation
fdiv.d f31, f12, f15, rdn # perform operation
fdiv.d f31, f12, f15, rmm # perform operation
fdiv.d f31, f12, f15, rne # perform operation
fdiv.d f31, f12, f15, rtz # perform operation
fdiv.d f31, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f12, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fdiv.d f26, f27, f19, dyn # perform operation
fdiv.d f26, f27, f19, rdn # perform operation
fdiv.d f26, f27, f19, rmm # perform operation
fdiv.d f26, f27, f19, rne # perform operation
fdiv.d f26, f27, f19, rtz # perform operation
fdiv.d f26, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8010000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
fdiv.d f21, f7, f28, dyn # perform operation
fdiv.d f21, f7, f28, rdn # perform operation
fdiv.d f21, f7, f28, rmm # perform operation
fdiv.d f21, f7, f28, rne # perform operation
fdiv.d f21, f7, f28, rtz # perform operation
fdiv.d f21, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
fdiv.d f6, f24, f10, dyn # perform operation
fdiv.d f6, f24, f10, rdn # perform operation
fdiv.d f6, f24, f10, rmm # perform operation
fdiv.d f6, f24, f10, rne # perform operation
fdiv.d f6, f24, f10, rtz # perform operation
fdiv.d f6, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff8000000000000 from memory into f14
fdiv.d f31, f16, f14, dyn # perform operation
fdiv.d f31, f16, f14, rdn # perform operation
fdiv.d f31, f16, f14, rmm # perform operation
fdiv.d f31, f16, f14, rne # perform operation
fdiv.d f31, f16, f14, rtz # perform operation
fdiv.d f31, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8010000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
fdiv.d f10, f12, f2, dyn # perform operation
fdiv.d f10, f12, f2, rdn # perform operation
fdiv.d f10, f12, f2, rmm # perform operation
fdiv.d f10, f12, f2, rne # perform operation
fdiv.d f10, f12, f2, rtz # perform operation
fdiv.d f10, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8010000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff7ffffffffffff from memory into f19
fdiv.d f8, f27, f19, dyn # perform operation
fdiv.d f8, f27, f19, rdn # perform operation
fdiv.d f8, f27, f19, rmm # perform operation
fdiv.d f8, f27, f19, rne # perform operation
fdiv.d f8, f27, f19, rtz # perform operation
fdiv.d f8, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
fdiv.d f18, f29, f13, dyn # perform operation
fdiv.d f18, f29, f13, rdn # perform operation
fdiv.d f18, f29, f13, rmm # perform operation
fdiv.d f18, f29, f13, rne # perform operation
fdiv.d f18, f29, f13, rtz # perform operation
fdiv.d f18, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
fdiv.d f20, f18, f14, dyn # perform operation
fdiv.d f20, f18, f14, rdn # perform operation
fdiv.d f20, f18, f14, rmm # perform operation
fdiv.d f20, f18, f14, rne # perform operation
fdiv.d f20, f18, f14, rtz # perform operation
fdiv.d f20, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8010000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
fdiv.d f17, f10, f25, dyn # perform operation
fdiv.d f17, f10, f25, rdn # perform operation
fdiv.d f17, f10, f25, rmm # perform operation
fdiv.d f17, f10, f25, rne # perform operation
fdiv.d f17, f10, f25, rtz # perform operation
fdiv.d f17, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000000 from memory into f7
fdiv.d f30, f16, f7, dyn # perform operation
fdiv.d f30, f16, f7, rdn # perform operation
fdiv.d f30, f16, f7, rmm # perform operation
fdiv.d f30, f16, f7, rne # perform operation
fdiv.d f30, f16, f7, rtz # perform operation
fdiv.d f30, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f16, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000000 from memory into f27
fdiv.d f2, f21, f27, dyn # perform operation
fdiv.d f2, f21, f27, rdn # perform operation
fdiv.d f2, f21, f27, rmm # perform operation
fdiv.d f2, f21, f27, rne # perform operation
fdiv.d f2, f21, f27, rtz # perform operation
fdiv.d f2, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f21, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7fefffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff0000000000000 from memory into f9
fdiv.d f21, f16, f9, dyn # perform operation
fdiv.d f21, f16, f9, rdn # perform operation
fdiv.d f21, f16, f9, rmm # perform operation
fdiv.d f21, f16, f9, rne # perform operation
fdiv.d f21, f16, f9, rtz # perform operation
fdiv.d f21, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xbff0000000000000 from memory into f12
fdiv.d f14, f30, f12, dyn # perform operation
fdiv.d f14, f30, f12, rdn # perform operation
fdiv.d f14, f30, f12, rmm # perform operation
fdiv.d f14, f30, f12, rne # perform operation
fdiv.d f14, f30, f12, rtz # perform operation
fdiv.d f14, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff8000000000000 from memory into f20
fdiv.d f6, f7, f20, dyn # perform operation
fdiv.d f6, f7, f20, rdn # perform operation
fdiv.d f6, f7, f20, rmm # perform operation
fdiv.d f6, f7, f20, rne # perform operation
fdiv.d f6, f7, f20, rtz # perform operation
fdiv.d f6, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f27, f30, f15, dyn # perform operation
fdiv.d f27, f30, f15, rdn # perform operation
fdiv.d f27, f30, f15, rmm # perform operation
fdiv.d f27, f30, f15, rne # perform operation
fdiv.d f27, f30, f15, rtz # perform operation
fdiv.d f27, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f30, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x4000000000000000 from memory into f31
fdiv.d f14, f28, f31, dyn # perform operation
fdiv.d f14, f28, f31, rdn # perform operation
fdiv.d f14, f28, f31, rmm # perform operation
fdiv.d f14, f28, f31, rne # perform operation
fdiv.d f14, f28, f31, rtz # perform operation
fdiv.d f14, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fefffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xc000000000000000 from memory into f19
fdiv.d f11, f7, f19, dyn # perform operation
fdiv.d f11, f7, f19, rdn # perform operation
fdiv.d f11, f7, f19, rmm # perform operation
fdiv.d f11, f7, f19, rne # perform operation
fdiv.d f11, f7, f19, rtz # perform operation
fdiv.d f11, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0010000000000000 from memory into f9
fdiv.d f24, f27, f9, dyn # perform operation
fdiv.d f24, f27, f9, rdn # perform operation
fdiv.d f24, f27, f9, rmm # perform operation
fdiv.d f24, f27, f9, rne # perform operation
fdiv.d f24, f27, f9, rtz # perform operation
fdiv.d f24, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fdiv.d f30, f10, f22, dyn # perform operation
fdiv.d f30, f10, f22, rdn # perform operation
fdiv.d f30, f10, f22, rmm # perform operation
fdiv.d f30, f10, f22, rne # perform operation
fdiv.d f30, f10, f22, rtz # perform operation
fdiv.d f30, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
fdiv.d f6, f27, f10, dyn # perform operation
fdiv.d f6, f27, f10, rdn # perform operation
fdiv.d f6, f27, f10, rmm # perform operation
fdiv.d f6, f27, f10, rne # perform operation
fdiv.d f6, f27, f10, rtz # perform operation
fdiv.d f6, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fefffffffffffff from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
fdiv.d f8, f18, f5, dyn # perform operation
fdiv.d f8, f18, f5, rdn # perform operation
fdiv.d f8, f18, f5, rmm # perform operation
fdiv.d f8, f18, f5, rne # perform operation
fdiv.d f8, f18, f5, rtz # perform operation
fdiv.d f8, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f18, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fefffffffffffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
fdiv.d f1, f21, f3, dyn # perform operation
fdiv.d f1, f21, f3, rdn # perform operation
fdiv.d f1, f21, f3, rmm # perform operation
fdiv.d f1, f21, f3, rne # perform operation
fdiv.d f1, f21, f3, rtz # perform operation
fdiv.d f1, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fefffffffffffff from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
fdiv.d f2, f24, f17, dyn # perform operation
fdiv.d f2, f24, f17, rdn # perform operation
fdiv.d f2, f24, f17, rmm # perform operation
fdiv.d f2, f24, f17, rne # perform operation
fdiv.d f2, f24, f17, rtz # perform operation
fdiv.d f2, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fefffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fdiv.d f19, f27, f3, dyn # perform operation
fdiv.d f19, f27, f3, rdn # perform operation
fdiv.d f19, f27, f3, rmm # perform operation
fdiv.d f19, f27, f3, rne # perform operation
fdiv.d f19, f27, f3, rtz # perform operation
fdiv.d f19, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fefffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fdiv.d f13, f25, f19, dyn # perform operation
fdiv.d f13, f25, f19, rdn # perform operation
fdiv.d f13, f25, f19, rmm # perform operation
fdiv.d f13, f25, f19, rne # perform operation
fdiv.d f13, f25, f19, rtz # perform operation
fdiv.d f13, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0000000000000001 from memory into f3
fdiv.d f19, f28, f3, dyn # perform operation
fdiv.d f19, f28, f3, rdn # perform operation
fdiv.d f19, f28, f3, rmm # perform operation
fdiv.d f19, f28, f3, rne # perform operation
fdiv.d f19, f28, f3, rtz # perform operation
fdiv.d f19, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
fdiv.d f19, f6, f30, dyn # perform operation
fdiv.d f19, f6, f30, rdn # perform operation
fdiv.d f19, f6, f30, rmm # perform operation
fdiv.d f19, f6, f30, rne # perform operation
fdiv.d f19, f6, f30, rtz # perform operation
fdiv.d f19, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
fdiv.d f28, f20, f7, dyn # perform operation
fdiv.d f28, f20, f7, rdn # perform operation
fdiv.d f28, f20, f7, rmm # perform operation
fdiv.d f28, f20, f7, rne # perform operation
fdiv.d f28, f20, f7, rtz # perform operation
fdiv.d f28, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fefffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fdiv.d f10, f9, f13, dyn # perform operation
fdiv.d f10, f9, f13, rdn # perform operation
fdiv.d f10, f9, f13, rmm # perform operation
fdiv.d f10, f9, f13, rne # perform operation
fdiv.d f10, f9, f13, rtz # perform operation
fdiv.d f10, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fefffffffffffff from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
fdiv.d f8, f29, f31, dyn # perform operation
fdiv.d f8, f29, f31, rdn # perform operation
fdiv.d f8, f29, f31, rmm # perform operation
fdiv.d f8, f29, f31, rne # perform operation
fdiv.d f8, f29, f31, rtz # perform operation
fdiv.d f8, f29, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f29, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f29, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f29, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f29, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f29, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fefffffffffffff from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7fffffffffffffff from memory into f9
fdiv.d f24, f23, f9, dyn # perform operation
fdiv.d f24, f23, f9, rdn # perform operation
fdiv.d f24, f23, f9, rmm # perform operation
fdiv.d f24, f23, f9, rne # perform operation
fdiv.d f24, f23, f9, rtz # perform operation
fdiv.d f24, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
fdiv.d f14, f31, f25, dyn # perform operation
fdiv.d f14, f31, f25, rdn # perform operation
fdiv.d f14, f31, f25, rmm # perform operation
fdiv.d f14, f31, f25, rne # perform operation
fdiv.d f14, f31, f25, rtz # perform operation
fdiv.d f14, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
fdiv.d f15, f1, f14, dyn # perform operation
fdiv.d f15, f1, f14, rdn # perform operation
fdiv.d f15, f1, f14, rmm # perform operation
fdiv.d f15, f1, f14, rne # perform operation
fdiv.d f15, f1, f14, rtz # perform operation
fdiv.d f15, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f1, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff7ffffffffffff from memory into f9
fdiv.d f24, f19, f9, dyn # perform operation
fdiv.d f24, f19, f9, rdn # perform operation
fdiv.d f24, f19, f9, rmm # perform operation
fdiv.d f24, f19, f9, rne # perform operation
fdiv.d f24, f19, f9, rtz # perform operation
fdiv.d f24, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
fdiv.d f16, f6, f2, dyn # perform operation
fdiv.d f16, f6, f2, rdn # perform operation
fdiv.d f16, f6, f2, rmm # perform operation
fdiv.d f16, f6, f2, rne # perform operation
fdiv.d f16, f6, f2, rtz # perform operation
fdiv.d f16, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f6, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fefffffffffffff from memory into f10
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x5a392534a57711ad from memory into f25
fdiv.d f13, f10, f25, dyn # perform operation
fdiv.d f13, f10, f25, rdn # perform operation
fdiv.d f13, f10, f25, rmm # perform operation
fdiv.d f13, f10, f25, rne # perform operation
fdiv.d f13, f10, f25, rtz # perform operation
fdiv.d f13, f10, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f10, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f10, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f10, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f10, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f10, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fdiv.d f26, f30, f11, dyn # perform operation
fdiv.d f26, f30, f11, rdn # perform operation
fdiv.d f26, f30, f11, rmm # perform operation
fdiv.d f26, f30, f11, rne # perform operation
fdiv.d f26, f30, f11, rtz # perform operation
fdiv.d f26, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xffefffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000000 from memory into f29
fdiv.d f8, f13, f29, dyn # perform operation
fdiv.d f8, f13, f29, rdn # perform operation
fdiv.d f8, f13, f29, rmm # perform operation
fdiv.d f8, f13, f29, rne # perform operation
fdiv.d f8, f13, f29, rtz # perform operation
fdiv.d f8, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xffefffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000000 from memory into f28
fdiv.d f7, f19, f28, dyn # perform operation
fdiv.d f7, f19, f28, rdn # perform operation
fdiv.d f7, f19, f28, rmm # perform operation
fdiv.d f7, f19, f28, rne # perform operation
fdiv.d f7, f19, f28, rtz # perform operation
fdiv.d f7, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x3ff0000000000000 from memory into f8
fdiv.d f16, f7, f8, dyn # perform operation
fdiv.d f16, f7, f8, rdn # perform operation
fdiv.d f16, f7, f8, rmm # perform operation
fdiv.d f16, f7, f8, rne # perform operation
fdiv.d f16, f7, f8, rtz # perform operation
fdiv.d f16, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fdiv.d f22, f18, f3, dyn # perform operation
fdiv.d f22, f18, f3, rdn # perform operation
fdiv.d f22, f18, f3, rmm # perform operation
fdiv.d f22, f18, f3, rne # perform operation
fdiv.d f22, f18, f3, rtz # perform operation
fdiv.d f22, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff8000000000000 from memory into f24
fdiv.d f20, f10, f24, dyn # perform operation
fdiv.d f20, f10, f24, rdn # perform operation
fdiv.d f20, f10, f24, rmm # perform operation
fdiv.d f20, f10, f24, rne # perform operation
fdiv.d f20, f10, f24, rtz # perform operation
fdiv.d f20, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xffefffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fdiv.d f29, f20, f22, dyn # perform operation
fdiv.d f29, f20, f22, rdn # perform operation
fdiv.d f29, f20, f22, rmm # perform operation
fdiv.d f29, f20, f22, rne # perform operation
fdiv.d f29, f20, f22, rtz # perform operation
fdiv.d f29, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x4000000000000000 from memory into f25
fdiv.d f18, f17, f25, dyn # perform operation
fdiv.d f18, f17, f25, rdn # perform operation
fdiv.d f18, f17, f25, rmm # perform operation
fdiv.d f18, f17, f25, rne # perform operation
fdiv.d f18, f17, f25, rtz # perform operation
fdiv.d f18, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xc000000000000000 from memory into f13
fdiv.d f30, f25, f13, dyn # perform operation
fdiv.d f30, f25, f13, rdn # perform operation
fdiv.d f30, f25, f13, rmm # perform operation
fdiv.d f30, f25, f13, rne # perform operation
fdiv.d f30, f25, f13, rtz # perform operation
fdiv.d f30, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fdiv.d f16, f12, f23, dyn # perform operation
fdiv.d f16, f12, f23, rdn # perform operation
fdiv.d f16, f12, f23, rmm # perform operation
fdiv.d f16, f12, f23, rne # perform operation
fdiv.d f16, f12, f23, rtz # perform operation
fdiv.d f16, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fdiv.d f7, f17, f16, dyn # perform operation
fdiv.d f7, f17, f16, rdn # perform operation
fdiv.d f7, f17, f16, rmm # perform operation
fdiv.d f7, f17, f16, rne # perform operation
fdiv.d f7, f17, f16, rtz # perform operation
fdiv.d f7, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fdiv.d f1, f17, f14, dyn # perform operation
fdiv.d f1, f17, f14, rdn # perform operation
fdiv.d f1, f17, f14, rmm # perform operation
fdiv.d f1, f17, f14, rne # perform operation
fdiv.d f1, f17, f14, rtz # perform operation
fdiv.d f1, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fdiv.d f30, f17, f22, dyn # perform operation
fdiv.d f30, f17, f22, rdn # perform operation
fdiv.d f30, f17, f22, rmm # perform operation
fdiv.d f30, f17, f22, rne # perform operation
fdiv.d f30, f17, f22, rtz # perform operation
fdiv.d f30, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xffefffffffffffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f1, f16, f22, dyn # perform operation
fdiv.d f1, f16, f22, rdn # perform operation
fdiv.d f1, f16, f22, rmm # perform operation
fdiv.d f1, f16, f22, rne # perform operation
fdiv.d f1, f16, f22, rtz # perform operation
fdiv.d f1, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xffefffffffffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fdiv.d f13, f28, f24, dyn # perform operation
fdiv.d f13, f28, f24, rdn # perform operation
fdiv.d f13, f28, f24, rmm # perform operation
fdiv.d f13, f28, f24, rne # perform operation
fdiv.d f13, f28, f24, rtz # perform operation
fdiv.d f13, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f28, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fdiv.d f27, f14, f22, dyn # perform operation
fdiv.d f27, f14, f22, rdn # perform operation
fdiv.d f27, f14, f22, rmm # perform operation
fdiv.d f27, f14, f22, rne # perform operation
fdiv.d f27, f14, f22, rtz # perform operation
fdiv.d f27, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
fdiv.d f26, f14, f18, dyn # perform operation
fdiv.d f26, f14, f18, rdn # perform operation
fdiv.d f26, f14, f18, rmm # perform operation
fdiv.d f26, f14, f18, rne # perform operation
fdiv.d f26, f14, f18, rtz # perform operation
fdiv.d f26, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xffefffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fdiv.d f29, f5, f27, dyn # perform operation
fdiv.d f29, f5, f27, rdn # perform operation
fdiv.d f29, f5, f27, rmm # perform operation
fdiv.d f29, f5, f27, rne # perform operation
fdiv.d f29, f5, f27, rtz # perform operation
fdiv.d f29, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000001 from memory into f31
fdiv.d f2, f12, f31, dyn # perform operation
fdiv.d f2, f12, f31, rdn # perform operation
fdiv.d f2, f12, f31, rmm # perform operation
fdiv.d f2, f12, f31, rne # perform operation
fdiv.d f2, f12, f31, rtz # perform operation
fdiv.d f2, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000000 from memory into f31
fdiv.d f23, f12, f31, dyn # perform operation
fdiv.d f23, f12, f31, rdn # perform operation
fdiv.d f23, f12, f31, rmm # perform operation
fdiv.d f23, f12, f31, rne # perform operation
fdiv.d f23, f12, f31, rtz # perform operation
fdiv.d f23, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f12, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xffefffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fdiv.d f8, f14, f18, dyn # perform operation
fdiv.d f8, f14, f18, rdn # perform operation
fdiv.d f8, f14, f18, rmm # perform operation
fdiv.d f8, f14, f18, rne # perform operation
fdiv.d f8, f14, f18, rtz # perform operation
fdiv.d f8, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
fdiv.d f31, f10, f16, dyn # perform operation
fdiv.d f31, f10, f16, rdn # perform operation
fdiv.d f31, f10, f16, rmm # perform operation
fdiv.d f31, f10, f16, rne # perform operation
fdiv.d f31, f10, f16, rtz # perform operation
fdiv.d f31, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
fdiv.d f13, f15, f2, dyn # perform operation
fdiv.d f13, f15, f2, rdn # perform operation
fdiv.d f13, f15, f2, rmm # perform operation
fdiv.d f13, f15, f2, rne # perform operation
fdiv.d f13, f15, f2, rtz # perform operation
fdiv.d f13, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
fdiv.d f19, f1, f23, dyn # perform operation
fdiv.d f19, f1, f23, rdn # perform operation
fdiv.d f19, f1, f23, rmm # perform operation
fdiv.d f19, f1, f23, rne # perform operation
fdiv.d f19, f1, f23, rtz # perform operation
fdiv.d f19, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fdiv.d f10, f18, f3, dyn # perform operation
fdiv.d f10, f18, f3, rdn # perform operation
fdiv.d f10, f18, f3, rmm # perform operation
fdiv.d f10, f18, f3, rne # perform operation
fdiv.d f10, f18, f3, rtz # perform operation
fdiv.d f10, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
fdiv.d f1, f8, f25, dyn # perform operation
fdiv.d f1, f8, f25, rdn # perform operation
fdiv.d f1, f8, f25, rmm # perform operation
fdiv.d f1, f8, f25, rne # perform operation
fdiv.d f1, f8, f25, rtz # perform operation
fdiv.d f1, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fdiv.d f31, f2, f19, dyn # perform operation
fdiv.d f31, f2, f19, rdn # perform operation
fdiv.d f31, f2, f19, rmm # perform operation
fdiv.d f31, f2, f19, rne # perform operation
fdiv.d f31, f2, f19, rtz # perform operation
fdiv.d f31, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fdiv.d f24, f2, f15, dyn # perform operation
fdiv.d f24, f2, f15, rdn # perform operation
fdiv.d f24, f2, f15, rmm # perform operation
fdiv.d f24, f2, f15, rne # perform operation
fdiv.d f24, f2, f15, rtz # perform operation
fdiv.d f24, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f2, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffefffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xffefffffffffffff from memory into f2
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fdiv.d f19, f2, f31, dyn # perform operation
fdiv.d f19, f2, f31, rdn # perform operation
fdiv.d f19, f2, f31, rmm # perform operation
fdiv.d f19, f2, f31, rne # perform operation
fdiv.d f19, f2, f31, rtz # perform operation
fdiv.d f19, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f2, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000000 from memory into f24
fdiv.d f26, f7, f24, dyn # perform operation
fdiv.d f26, f7, f24, rdn # perform operation
fdiv.d f26, f7, f24, rmm # perform operation
fdiv.d f26, f7, f24, rne # perform operation
fdiv.d f26, f7, f24, rtz # perform operation
fdiv.d f26, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x000fffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000000 from memory into f22
fdiv.d f16, f18, f22, dyn # perform operation
fdiv.d f16, f18, f22, rdn # perform operation
fdiv.d f16, f18, f22, rmm # perform operation
fdiv.d f16, f18, f22, rne # perform operation
fdiv.d f16, f18, f22, rtz # perform operation
fdiv.d f16, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x000fffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff0000000000000 from memory into f14
fdiv.d f17, f11, f14, dyn # perform operation
fdiv.d f17, f11, f14, rdn # perform operation
fdiv.d f17, f11, f14, rmm # perform operation
fdiv.d f17, f11, f14, rne # perform operation
fdiv.d f17, f11, f14, rtz # perform operation
fdiv.d f17, f11, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f11, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f11, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f11, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f11, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f11, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fdiv.d f8, f30, f28, dyn # perform operation
fdiv.d f8, f30, f28, rdn # perform operation
fdiv.d f8, f30, f28, rmm # perform operation
fdiv.d f8, f30, f28, rne # perform operation
fdiv.d f8, f30, f28, rtz # perform operation
fdiv.d f8, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x3ff8000000000000 from memory into f17
fdiv.d f11, f25, f17, dyn # perform operation
fdiv.d f11, f25, f17, rdn # perform operation
fdiv.d f11, f25, f17, rmm # perform operation
fdiv.d f11, f25, f17, rne # perform operation
fdiv.d f11, f25, f17, rtz # perform operation
fdiv.d f11, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xbff8000000000000 from memory into f31
fdiv.d f25, f5, f31, dyn # perform operation
fdiv.d f25, f5, f31, rdn # perform operation
fdiv.d f25, f5, f31, rmm # perform operation
fdiv.d f25, f5, f31, rne # perform operation
fdiv.d f25, f5, f31, rtz # perform operation
fdiv.d f25, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x4000000000000000 from memory into f27
fdiv.d f23, f31, f27, dyn # perform operation
fdiv.d f23, f31, f27, rdn # perform operation
fdiv.d f23, f31, f27, rmm # perform operation
fdiv.d f23, f31, f27, rne # perform operation
fdiv.d f23, f31, f27, rtz # perform operation
fdiv.d f23, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x000fffffffffffff from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fdiv.d f20, f30, f21, dyn # perform operation
fdiv.d f20, f30, f21, rdn # perform operation
fdiv.d f20, f30, f21, rmm # perform operation
fdiv.d f20, f30, f21, rne # perform operation
fdiv.d f20, f30, f21, rtz # perform operation
fdiv.d f20, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f30, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fdiv.d f13, f21, f8, dyn # perform operation
fdiv.d f13, f21, f8, rdn # perform operation
fdiv.d f13, f21, f8, rmm # perform operation
fdiv.d f13, f21, f8, rne # perform operation
fdiv.d f13, f21, f8, rtz # perform operation
fdiv.d f13, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8010000000000000 from memory into f13
fdiv.d f17, f28, f13, dyn # perform operation
fdiv.d f17, f28, f13, rdn # perform operation
fdiv.d f17, f28, f13, rmm # perform operation
fdiv.d f17, f28, f13, rne # perform operation
fdiv.d f17, f28, f13, rtz # perform operation
fdiv.d f17, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7fefffffffffffff from memory into f22
fdiv.d f26, f12, f22, dyn # perform operation
fdiv.d f26, f12, f22, rdn # perform operation
fdiv.d f26, f12, f22, rmm # perform operation
fdiv.d f26, f12, f22, rne # perform operation
fdiv.d f26, f12, f22, rtz # perform operation
fdiv.d f26, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x000fffffffffffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xffefffffffffffff from memory into f8
fdiv.d f26, f31, f8, dyn # perform operation
fdiv.d f26, f31, f8, rdn # perform operation
fdiv.d f26, f31, f8, rmm # perform operation
fdiv.d f26, f31, f8, rne # perform operation
fdiv.d f26, f31, f8, rtz # perform operation
fdiv.d f26, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x000fffffffffffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f1, f3, f22, dyn # perform operation
fdiv.d f1, f3, f22, rdn # perform operation
fdiv.d f1, f3, f22, rmm # perform operation
fdiv.d f1, f3, f22, rne # perform operation
fdiv.d f1, f3, f22, rtz # perform operation
fdiv.d f1, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f3, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x800fffffffffffff from memory into f16
fdiv.d f21, f12, f16, dyn # perform operation
fdiv.d f21, f12, f16, rdn # perform operation
fdiv.d f21, f12, f16, rmm # perform operation
fdiv.d f21, f12, f16, rne # perform operation
fdiv.d f21, f12, f16, rtz # perform operation
fdiv.d f21, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x000fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fdiv.d f20, f25, f22, dyn # perform operation
fdiv.d f20, f25, f22, rdn # perform operation
fdiv.d f20, f25, f22, rmm # perform operation
fdiv.d f20, f25, f22, rne # perform operation
fdiv.d f20, f25, f22, rtz # perform operation
fdiv.d f20, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f12, f22, f7, dyn # perform operation
fdiv.d f12, f22, f7, rdn # perform operation
fdiv.d f12, f22, f7, rmm # perform operation
fdiv.d f12, f22, f7, rne # perform operation
fdiv.d f12, f22, f7, rtz # perform operation
fdiv.d f12, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fdiv.d f15, f22, f23, dyn # perform operation
fdiv.d f15, f22, f23, rdn # perform operation
fdiv.d f15, f22, f23, rmm # perform operation
fdiv.d f15, f22, f23, rne # perform operation
fdiv.d f15, f22, f23, rtz # perform operation
fdiv.d f15, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fdiv.d f23, f1, f16, dyn # perform operation
fdiv.d f23, f1, f16, rdn # perform operation
fdiv.d f23, f1, f16, rmm # perform operation
fdiv.d f23, f1, f16, rne # perform operation
fdiv.d f23, f1, f16, rtz # perform operation
fdiv.d f23, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x000fffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000000 from memory into f15
fdiv.d f20, f19, f15, dyn # perform operation
fdiv.d f20, f19, f15, rdn # perform operation
fdiv.d f20, f19, f15, rmm # perform operation
fdiv.d f20, f19, f15, rne # perform operation
fdiv.d f20, f19, f15, rtz # perform operation
fdiv.d f20, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x000fffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f10, f16, f26, dyn # perform operation
fdiv.d f10, f16, f26, rdn # perform operation
fdiv.d f10, f16, f26, rmm # perform operation
fdiv.d f10, f16, f26, rne # perform operation
fdiv.d f10, f16, f26, rtz # perform operation
fdiv.d f10, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff8000000000000 from memory into f30
fdiv.d f6, f14, f30, dyn # perform operation
fdiv.d f6, f14, f30, rdn # perform operation
fdiv.d f6, f14, f30, rmm # perform operation
fdiv.d f6, f14, f30, rne # perform operation
fdiv.d f6, f14, f30, rtz # perform operation
fdiv.d f6, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x000fffffffffffff from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fdiv.d f21, f28, f12, dyn # perform operation
fdiv.d f21, f28, f12, rdn # perform operation
fdiv.d f21, f28, f12, rmm # perform operation
fdiv.d f21, f28, f12, rne # perform operation
fdiv.d f21, f28, f12, rtz # perform operation
fdiv.d f21, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x000fffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
fdiv.d f29, f15, f3, dyn # perform operation
fdiv.d f29, f15, f3, rdn # perform operation
fdiv.d f29, f15, f3, rmm # perform operation
fdiv.d f29, f15, f3, rne # perform operation
fdiv.d f29, f15, f3, rtz # perform operation
fdiv.d f29, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x000fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
fdiv.d f9, f13, f20, dyn # perform operation
fdiv.d f9, f13, f20, rdn # perform operation
fdiv.d f9, f13, f20, rmm # perform operation
fdiv.d f9, f13, f20, rne # perform operation
fdiv.d f9, f13, f20, rtz # perform operation
fdiv.d f9, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fdiv.d f24, f10, f18, dyn # perform operation
fdiv.d f24, f10, f18, rdn # perform operation
fdiv.d f24, f10, f18, rmm # perform operation
fdiv.d f24, f10, f18, rne # perform operation
fdiv.d f24, f10, f18, rtz # perform operation
fdiv.d f24, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f10, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
fdiv.d f25, f21, f8, dyn # perform operation
fdiv.d f25, f21, f8, rdn # perform operation
fdiv.d f25, f21, f8, rmm # perform operation
fdiv.d f25, f21, f8, rne # perform operation
fdiv.d f25, f21, f8, rtz # perform operation
fdiv.d f25, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x000fffffffffffff from memory into f29
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fdiv.d f30, f29, f19, dyn # perform operation
fdiv.d f30, f29, f19, rdn # perform operation
fdiv.d f30, f29, f19, rmm # perform operation
fdiv.d f30, f29, f19, rne # perform operation
fdiv.d f30, f29, f19, rtz # perform operation
fdiv.d f30, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f29, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x000fffffffffffff from memory into f5
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fdiv.d f21, f5, f1, dyn # perform operation
fdiv.d f21, f5, f1, rdn # perform operation
fdiv.d f21, f5, f1, rmm # perform operation
fdiv.d f21, f5, f1, rne # perform operation
fdiv.d f21, f5, f1, rtz # perform operation
fdiv.d f21, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f5, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0000000000000000 from memory into f2
fdiv.d f9, f17, f2, dyn # perform operation
fdiv.d f9, f17, f2, rdn # perform operation
fdiv.d f9, f17, f2, rmm # perform operation
fdiv.d f9, f17, f2, rne # perform operation
fdiv.d f9, f17, f2, rtz # perform operation
fdiv.d f9, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fdiv.d f21, f19, f18, dyn # perform operation
fdiv.d f21, f19, f18, rdn # perform operation
fdiv.d f21, f19, f18, rmm # perform operation
fdiv.d f21, f19, f18, rne # perform operation
fdiv.d f21, f19, f18, rtz # perform operation
fdiv.d f21, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x800fffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x3ff0000000000000 from memory into f12
fdiv.d f23, f6, f12, dyn # perform operation
fdiv.d f23, f6, f12, rdn # perform operation
fdiv.d f23, f6, f12, rmm # perform operation
fdiv.d f23, f6, f12, rne # perform operation
fdiv.d f23, f6, f12, rtz # perform operation
fdiv.d f23, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x800fffffffffffff from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fdiv.d f6, f9, f17, dyn # perform operation
fdiv.d f6, f9, f17, rdn # perform operation
fdiv.d f6, f9, f17, rmm # perform operation
fdiv.d f6, f9, f17, rne # perform operation
fdiv.d f6, f9, f17, rtz # perform operation
fdiv.d f6, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f16, f2, f30, dyn # perform operation
fdiv.d f16, f2, f30, rdn # perform operation
fdiv.d f16, f2, f30, rmm # perform operation
fdiv.d f16, f2, f30, rne # perform operation
fdiv.d f16, f2, f30, rtz # perform operation
fdiv.d f16, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xbff8000000000000 from memory into f8
fdiv.d f28, f19, f8, dyn # perform operation
fdiv.d f28, f19, f8, rdn # perform operation
fdiv.d f28, f19, f8, rmm # perform operation
fdiv.d f28, f19, f8, rne # perform operation
fdiv.d f28, f19, f8, rtz # perform operation
fdiv.d f28, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x4000000000000000 from memory into f6
fdiv.d f31, f18, f6, dyn # perform operation
fdiv.d f31, f18, f6, rdn # perform operation
fdiv.d f31, f18, f6, rmm # perform operation
fdiv.d f31, f18, f6, rne # perform operation
fdiv.d f31, f18, f6, rtz # perform operation
fdiv.d f31, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x800fffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xc000000000000000 from memory into f9
fdiv.d f28, f15, f9, dyn # perform operation
fdiv.d f28, f15, f9, rdn # perform operation
fdiv.d f28, f15, f9, rmm # perform operation
fdiv.d f28, f15, f9, rne # perform operation
fdiv.d f28, f15, f9, rtz # perform operation
fdiv.d f28, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x800fffffffffffff from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fdiv.d f10, f2, f16, dyn # perform operation
fdiv.d f10, f2, f16, rdn # perform operation
fdiv.d f10, f2, f16, rmm # perform operation
fdiv.d f10, f2, f16, rne # perform operation
fdiv.d f10, f2, f16, rtz # perform operation
fdiv.d f10, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8010000000000000 from memory into f17
fdiv.d f28, f18, f17, dyn # perform operation
fdiv.d f28, f18, f17, rdn # perform operation
fdiv.d f28, f18, f17, rmm # perform operation
fdiv.d f28, f18, f17, rne # perform operation
fdiv.d f28, f18, f17, rtz # perform operation
fdiv.d f28, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fefffffffffffff from memory into f17
fdiv.d f9, f10, f17, dyn # perform operation
fdiv.d f9, f10, f17, rdn # perform operation
fdiv.d f9, f10, f17, rmm # perform operation
fdiv.d f9, f10, f17, rne # perform operation
fdiv.d f9, f10, f17, rtz # perform operation
fdiv.d f9, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f10, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xffefffffffffffff from memory into f17
fdiv.d f13, f19, f17, dyn # perform operation
fdiv.d f13, f19, f17, rdn # perform operation
fdiv.d f13, f19, f17, rmm # perform operation
fdiv.d f13, f19, f17, rne # perform operation
fdiv.d f13, f19, f17, rtz # perform operation
fdiv.d f13, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x000fffffffffffff from memory into f22
fdiv.d f2, f25, f22, dyn # perform operation
fdiv.d f2, f25, f22, rdn # perform operation
fdiv.d f2, f25, f22, rmm # perform operation
fdiv.d f2, f25, f22, rne # perform operation
fdiv.d f2, f25, f22, rtz # perform operation
fdiv.d f2, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x800fffffffffffff from memory into f27
fdiv.d f17, f8, f27, dyn # perform operation
fdiv.d f17, f8, f27, rdn # perform operation
fdiv.d f17, f8, f27, rmm # perform operation
fdiv.d f17, f8, f27, rne # perform operation
fdiv.d f17, f8, f27, rtz # perform operation
fdiv.d f17, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0008000000000000 from memory into f21
fdiv.d f24, f3, f21, dyn # perform operation
fdiv.d f24, f3, f21, rdn # perform operation
fdiv.d f24, f3, f21, rmm # perform operation
fdiv.d f24, f3, f21, rne # perform operation
fdiv.d f24, f3, f21, rtz # perform operation
fdiv.d f24, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f3, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fdiv.d f25, f13, f19, dyn # perform operation
fdiv.d f25, f13, f19, rdn # perform operation
fdiv.d f25, f13, f19, rmm # perform operation
fdiv.d f25, f13, f19, rne # perform operation
fdiv.d f25, f13, f19, rtz # perform operation
fdiv.d f25, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
fdiv.d f18, f26, f14, dyn # perform operation
fdiv.d f18, f26, f14, rdn # perform operation
fdiv.d f18, f26, f14, rmm # perform operation
fdiv.d f18, f26, f14, rne # perform operation
fdiv.d f18, f26, f14, rtz # perform operation
fdiv.d f18, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x800fffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fdiv.d f2, f8, f19, dyn # perform operation
fdiv.d f2, f8, f19, rdn # perform operation
fdiv.d f2, f8, f19, rmm # perform operation
fdiv.d f2, f8, f19, rne # perform operation
fdiv.d f2, f8, f19, rtz # perform operation
fdiv.d f2, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
fdiv.d f30, f25, f9, dyn # perform operation
fdiv.d f30, f25, f9, rdn # perform operation
fdiv.d f30, f25, f9, rmm # perform operation
fdiv.d f30, f25, f9, rne # perform operation
fdiv.d f30, f25, f9, rtz # perform operation
fdiv.d f30, f25, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x800fffffffffffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
fdiv.d f10, f19, f13, dyn # perform operation
fdiv.d f10, f19, f13, rdn # perform operation
fdiv.d f10, f19, f13, rmm # perform operation
fdiv.d f10, f19, f13, rne # perform operation
fdiv.d f10, f19, f13, rtz # perform operation
fdiv.d f10, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f19, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
fdiv.d f7, f10, f2, dyn # perform operation
fdiv.d f7, f10, f2, rdn # perform operation
fdiv.d f7, f10, f2, rmm # perform operation
fdiv.d f7, f10, f2, rne # perform operation
fdiv.d f7, f10, f2, rtz # perform operation
fdiv.d f7, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f10, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x800fffffffffffff from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fdiv.d f18, f26, f11, dyn # perform operation
fdiv.d f18, f26, f11, rdn # perform operation
fdiv.d f18, f26, f11, rmm # perform operation
fdiv.d f18, f26, f11, rne # perform operation
fdiv.d f18, f26, f11, rtz # perform operation
fdiv.d f18, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f26, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
fdiv.d f31, f11, f7, dyn # perform operation
fdiv.d f31, f11, f7, rdn # perform operation
fdiv.d f31, f11, f7, rmm # perform operation
fdiv.d f31, f11, f7, rne # perform operation
fdiv.d f31, f11, f7, rtz # perform operation
fdiv.d f31, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x800fffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fdiv.d f26, f22, f21, dyn # perform operation
fdiv.d f26, f22, f21, rdn # perform operation
fdiv.d f26, f22, f21, rmm # perform operation
fdiv.d f26, f22, f21, rne # perform operation
fdiv.d f26, f22, f21, rtz # perform operation
fdiv.d f26, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fdiv.d f30, f25, f17, dyn # perform operation
fdiv.d f30, f25, f17, rdn # perform operation
fdiv.d f30, f25, f17, rmm # perform operation
fdiv.d f30, f25, f17, rne # perform operation
fdiv.d f30, f25, f17, rtz # perform operation
fdiv.d f30, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x800fffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000001 from memory into f25
fdiv.d f31, f12, f25, dyn # perform operation
fdiv.d f31, f12, f25, rdn # perform operation
fdiv.d f31, f12, f25, rmm # perform operation
fdiv.d f31, f12, f25, rne # perform operation
fdiv.d f31, f12, f25, rtz # perform operation
fdiv.d f31, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x800fffffffffffff from memory into f17
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fdiv.d f20, f17, f29, dyn # perform operation
fdiv.d f20, f17, f29, rdn # perform operation
fdiv.d f20, f17, f29, rmm # perform operation
fdiv.d f20, f17, f29, rne # perform operation
fdiv.d f20, f17, f29, rtz # perform operation
fdiv.d f20, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800fffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x800fffffffffffff from memory into f23
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fdiv.d f28, f23, f17, dyn # perform operation
fdiv.d f28, f23, f17, rdn # perform operation
fdiv.d f28, f23, f17, rmm # perform operation
fdiv.d f28, f23, f17, rne # perform operation
fdiv.d f28, f23, f17, rtz # perform operation
fdiv.d f28, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f23, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000000 from memory into f8
fdiv.d f12, f30, f8, dyn # perform operation
fdiv.d f12, f30, f8, rdn # perform operation
fdiv.d f12, f30, f8, rmm # perform operation
fdiv.d f12, f30, f8, rne # perform operation
fdiv.d f12, f30, f8, rtz # perform operation
fdiv.d f12, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000000 from memory into f20
fdiv.d f31, f15, f20, dyn # perform operation
fdiv.d f31, f15, f20, rdn # perform operation
fdiv.d f31, f15, f20, rmm # perform operation
fdiv.d f31, f15, f20, rne # perform operation
fdiv.d f31, f15, f20, rtz # perform operation
fdiv.d f31, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f15, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x0008000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff0000000000000 from memory into f13
fdiv.d f24, f20, f13, dyn # perform operation
fdiv.d f24, f20, f13, rdn # perform operation
fdiv.d f24, f20, f13, rmm # perform operation
fdiv.d f24, f20, f13, rne # perform operation
fdiv.d f24, f20, f13, rtz # perform operation
fdiv.d f24, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f20, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff0000000000000 from memory into f15
fdiv.d f31, f19, f15, dyn # perform operation
fdiv.d f31, f19, f15, rdn # perform operation
fdiv.d f31, f19, f15, rmm # perform operation
fdiv.d f31, f19, f15, rne # perform operation
fdiv.d f31, f19, f15, rtz # perform operation
fdiv.d f31, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x3ff8000000000000 from memory into f18
fdiv.d f21, f26, f18, dyn # perform operation
fdiv.d f21, f26, f18, rdn # perform operation
fdiv.d f21, f26, f18, rmm # perform operation
fdiv.d f21, f26, f18, rne # perform operation
fdiv.d f21, f26, f18, rtz # perform operation
fdiv.d f21, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f26, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xbff8000000000000 from memory into f22
fdiv.d f20, f19, f22, dyn # perform operation
fdiv.d f20, f19, f22, rdn # perform operation
fdiv.d f20, f19, f22, rmm # perform operation
fdiv.d f20, f19, f22, rne # perform operation
fdiv.d f20, f19, f22, rtz # perform operation
fdiv.d f20, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x4000000000000000 from memory into f15
fdiv.d f31, f19, f15, dyn # perform operation
fdiv.d f31, f19, f15, rdn # perform operation
fdiv.d f31, f19, f15, rmm # perform operation
fdiv.d f31, f19, f15, rne # perform operation
fdiv.d f31, f19, f15, rtz # perform operation
fdiv.d f31, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f19, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fdiv.d f7, f28, f15, dyn # perform operation
fdiv.d f7, f28, f15, rdn # perform operation
fdiv.d f7, f28, f15, rmm # perform operation
fdiv.d f7, f28, f15, rne # perform operation
fdiv.d f7, f28, f15, rtz # perform operation
fdiv.d f7, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0010000000000000 from memory into f21
fdiv.d f11, f2, f21, dyn # perform operation
fdiv.d f11, f2, f21, rdn # perform operation
fdiv.d f11, f2, f21, rmm # perform operation
fdiv.d f11, f2, f21, rne # perform operation
fdiv.d f11, f2, f21, rtz # perform operation
fdiv.d f11, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f2, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8010000000000000 from memory into f22
fdiv.d f10, f1, f22, dyn # perform operation
fdiv.d f10, f1, f22, rdn # perform operation
fdiv.d f10, f1, f22, rmm # perform operation
fdiv.d f10, f1, f22, rne # perform operation
fdiv.d f10, f1, f22, rtz # perform operation
fdiv.d f10, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fefffffffffffff from memory into f2
fdiv.d f22, f15, f2, dyn # perform operation
fdiv.d f22, f15, f2, rdn # perform operation
fdiv.d f22, f15, f2, rmm # perform operation
fdiv.d f22, f15, f2, rne # perform operation
fdiv.d f22, f15, f2, rtz # perform operation
fdiv.d f22, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f15, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xffefffffffffffff from memory into f1
fdiv.d f18, f3, f1, dyn # perform operation
fdiv.d f18, f3, f1, rdn # perform operation
fdiv.d f18, f3, f1, rmm # perform operation
fdiv.d f18, f3, f1, rne # perform operation
fdiv.d f18, f3, f1, rtz # perform operation
fdiv.d f18, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f3, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0008000000000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x000fffffffffffff from memory into f24
fdiv.d f19, f1, f24, dyn # perform operation
fdiv.d f19, f1, f24, rdn # perform operation
fdiv.d f19, f1, f24, rmm # perform operation
fdiv.d f19, f1, f24, rne # perform operation
fdiv.d f19, f1, f24, rtz # perform operation
fdiv.d f19, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
fdiv.d f3, f15, f30, dyn # perform operation
fdiv.d f3, f15, f30, rdn # perform operation
fdiv.d f3, f15, f30, rmm # perform operation
fdiv.d f3, f15, f30, rne # perform operation
fdiv.d f3, f15, f30, rtz # perform operation
fdiv.d f3, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f15, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0008000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0008000000000000 from memory into f3
fdiv.d f2, f17, f3, dyn # perform operation
fdiv.d f2, f17, f3, rdn # perform operation
fdiv.d f2, f17, f3, rmm # perform operation
fdiv.d f2, f17, f3, rne # perform operation
fdiv.d f2, f17, f3, rtz # perform operation
fdiv.d f2, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
fdiv.d f18, f15, f19, dyn # perform operation
fdiv.d f18, f15, f19, rdn # perform operation
fdiv.d f18, f15, f19, rmm # perform operation
fdiv.d f18, f15, f19, rne # perform operation
fdiv.d f18, f15, f19, rtz # perform operation
fdiv.d f18, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f2, f16, f19, dyn # perform operation
fdiv.d f2, f16, f19, rdn # perform operation
fdiv.d f2, f16, f19, rmm # perform operation
fdiv.d f2, f16, f19, rne # perform operation
fdiv.d f2, f16, f19, rtz # perform operation
fdiv.d f2, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000001 from memory into f5
fdiv.d f26, f10, f5, dyn # perform operation
fdiv.d f26, f10, f5, rdn # perform operation
fdiv.d f26, f10, f5, rmm # perform operation
fdiv.d f26, f10, f5, rne # perform operation
fdiv.d f26, f10, f5, rtz # perform operation
fdiv.d f26, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f10, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0008000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fdiv.d f12, f30, f20, dyn # perform operation
fdiv.d f12, f30, f20, rdn # perform operation
fdiv.d f12, f30, f20, rmm # perform operation
fdiv.d f12, f30, f20, rne # perform operation
fdiv.d f12, f30, f20, rtz # perform operation
fdiv.d f12, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0008000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
fdiv.d f9, f25, f3, dyn # perform operation
fdiv.d f9, f25, f3, rdn # perform operation
fdiv.d f9, f25, f3, rmm # perform operation
fdiv.d f9, f25, f3, rne # perform operation
fdiv.d f9, f25, f3, rtz # perform operation
fdiv.d f9, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0008000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
fdiv.d f29, f16, f9, dyn # perform operation
fdiv.d f29, f16, f9, rdn # perform operation
fdiv.d f29, f16, f9, rmm # perform operation
fdiv.d f29, f16, f9, rne # perform operation
fdiv.d f29, f16, f9, rtz # perform operation
fdiv.d f29, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0008000000000000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fdiv.d f22, f31, f26, dyn # perform operation
fdiv.d f22, f31, f26, rdn # perform operation
fdiv.d f22, f31, f26, rmm # perform operation
fdiv.d f22, f31, f26, rne # perform operation
fdiv.d f22, f31, f26, rtz # perform operation
fdiv.d f22, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff8000000000000 from memory into f29
fdiv.d f27, f28, f29, dyn # perform operation
fdiv.d f27, f28, f29, rdn # perform operation
fdiv.d f27, f28, f29, rmm # perform operation
fdiv.d f27, f28, f29, rne # perform operation
fdiv.d f27, f28, f29, rtz # perform operation
fdiv.d f27, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f28, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0008000000000000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
fdiv.d f5, f26, f21, dyn # perform operation
fdiv.d f5, f26, f21, rdn # perform operation
fdiv.d f5, f26, f21, rmm # perform operation
fdiv.d f5, f26, f21, rne # perform operation
fdiv.d f5, f26, f21, rtz # perform operation
fdiv.d f5, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0008000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
fdiv.d f14, f12, f13, dyn # perform operation
fdiv.d f14, f12, f13, rdn # perform operation
fdiv.d f14, f12, f13, rmm # perform operation
fdiv.d f14, f12, f13, rne # perform operation
fdiv.d f14, f12, f13, rtz # perform operation
fdiv.d f14, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0008000000000000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000001 from memory into f31
fdiv.d f25, f6, f31, dyn # perform operation
fdiv.d f25, f6, f31, rdn # perform operation
fdiv.d f25, f6, f31, rmm # perform operation
fdiv.d f25, f6, f31, rne # perform operation
fdiv.d f25, f6, f31, rtz # perform operation
fdiv.d f25, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
fdiv.d f25, f15, f29, dyn # perform operation
fdiv.d f25, f15, f29, rdn # perform operation
fdiv.d f25, f15, f29, rmm # perform operation
fdiv.d f25, f15, f29, rne # perform operation
fdiv.d f25, f15, f29, rtz # perform operation
fdiv.d f25, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f15, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xa6e895993737426c from memory into f17
fdiv.d f23, f24, f17, dyn # perform operation
fdiv.d f23, f24, f17, rdn # perform operation
fdiv.d f23, f24, f17, rmm # perform operation
fdiv.d f23, f24, f17, rne # perform operation
fdiv.d f23, f24, f17, rtz # perform operation
fdiv.d f23, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000000 from memory into f5
fdiv.d f6, f2, f5, dyn # perform operation
fdiv.d f6, f2, f5, rdn # perform operation
fdiv.d f6, f2, f5, rmm # perform operation
fdiv.d f6, f2, f5, rne # perform operation
fdiv.d f6, f2, f5, rtz # perform operation
fdiv.d f6, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000000 from memory into f6
fdiv.d f23, f15, f6, dyn # perform operation
fdiv.d f23, f15, f6, rdn # perform operation
fdiv.d f23, f15, f6, rmm # perform operation
fdiv.d f23, f15, f6, rne # perform operation
fdiv.d f23, f15, f6, rtz # perform operation
fdiv.d f23, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff0000000000000 from memory into f30
fdiv.d f28, f25, f30, dyn # perform operation
fdiv.d f28, f25, f30, rdn # perform operation
fdiv.d f28, f25, f30, rmm # perform operation
fdiv.d f28, f25, f30, rne # perform operation
fdiv.d f28, f25, f30, rtz # perform operation
fdiv.d f28, f25, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f25, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f25, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f25, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f25, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f25, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fdiv.d f22, f18, f3, dyn # perform operation
fdiv.d f22, f18, f3, rdn # perform operation
fdiv.d f22, f18, f3, rmm # perform operation
fdiv.d f22, f18, f3, rne # perform operation
fdiv.d f22, f18, f3, rtz # perform operation
fdiv.d f22, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x3ff8000000000000 from memory into f6
fdiv.d f17, f22, f6, dyn # perform operation
fdiv.d f17, f22, f6, rdn # perform operation
fdiv.d f17, f22, f6, rmm # perform operation
fdiv.d f17, f22, f6, rne # perform operation
fdiv.d f17, f22, f6, rtz # perform operation
fdiv.d f17, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8008000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fdiv.d f30, f15, f21, dyn # perform operation
fdiv.d f30, f15, f21, rdn # perform operation
fdiv.d f30, f15, f21, rmm # perform operation
fdiv.d f30, f15, f21, rne # perform operation
fdiv.d f30, f15, f21, rtz # perform operation
fdiv.d f30, f15, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f15, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f15, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f15, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f15, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f15, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x4000000000000000 from memory into f3
fdiv.d f29, f10, f3, dyn # perform operation
fdiv.d f29, f10, f3, rdn # perform operation
fdiv.d f29, f10, f3, rmm # perform operation
fdiv.d f29, f10, f3, rne # perform operation
fdiv.d f29, f10, f3, rtz # perform operation
fdiv.d f29, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8008000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fdiv.d f17, f22, f28, dyn # perform operation
fdiv.d f17, f22, f28, rdn # perform operation
fdiv.d f17, f22, f28, rmm # perform operation
fdiv.d f17, f22, f28, rne # perform operation
fdiv.d f17, f22, f28, rtz # perform operation
fdiv.d f17, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0010000000000000 from memory into f23
fdiv.d f1, f13, f23, dyn # perform operation
fdiv.d f1, f13, f23, rdn # perform operation
fdiv.d f1, f13, f23, rmm # perform operation
fdiv.d f1, f13, f23, rne # perform operation
fdiv.d f1, f13, f23, rtz # perform operation
fdiv.d f1, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8010000000000000 from memory into f14
fdiv.d f30, f10, f14, dyn # perform operation
fdiv.d f30, f10, f14, rdn # perform operation
fdiv.d f30, f10, f14, rmm # perform operation
fdiv.d f30, f10, f14, rne # perform operation
fdiv.d f30, f10, f14, rtz # perform operation
fdiv.d f30, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7fefffffffffffff from memory into f3
fdiv.d f22, f30, f3, dyn # perform operation
fdiv.d f22, f30, f3, rdn # perform operation
fdiv.d f22, f30, f3, rmm # perform operation
fdiv.d f22, f30, f3, rne # perform operation
fdiv.d f22, f30, f3, rtz # perform operation
fdiv.d f22, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8008000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xffefffffffffffff from memory into f26
fdiv.d f24, f25, f26, dyn # perform operation
fdiv.d f24, f25, f26, rdn # perform operation
fdiv.d f24, f25, f26, rmm # perform operation
fdiv.d f24, f25, f26, rne # perform operation
fdiv.d f24, f25, f26, rtz # perform operation
fdiv.d f24, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x000fffffffffffff from memory into f7
fdiv.d f17, f26, f7, dyn # perform operation
fdiv.d f17, f26, f7, rdn # perform operation
fdiv.d f17, f26, f7, rmm # perform operation
fdiv.d f17, f26, f7, rne # perform operation
fdiv.d f17, f26, f7, rtz # perform operation
fdiv.d f17, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fdiv.d f3, f17, f20, dyn # perform operation
fdiv.d f3, f17, f20, rdn # perform operation
fdiv.d f3, f17, f20, rmm # perform operation
fdiv.d f3, f17, f20, rne # perform operation
fdiv.d f3, f17, f20, rtz # perform operation
fdiv.d f3, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0008000000000000 from memory into f11
fdiv.d f21, f1, f11, dyn # perform operation
fdiv.d f21, f1, f11, rdn # perform operation
fdiv.d f21, f1, f11, rmm # perform operation
fdiv.d f21, f1, f11, rne # perform operation
fdiv.d f21, f1, f11, rtz # perform operation
fdiv.d f21, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f1, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8008000000000000 from memory into f7
fdiv.d f25, f17, f7, dyn # perform operation
fdiv.d f25, f17, f7, rdn # perform operation
fdiv.d f25, f17, f7, rmm # perform operation
fdiv.d f25, f17, f7, rne # perform operation
fdiv.d f25, f17, f7, rtz # perform operation
fdiv.d f25, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f17, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0000000000000001 from memory into f24
fdiv.d f26, f31, f24, dyn # perform operation
fdiv.d f26, f31, f24, rdn # perform operation
fdiv.d f26, f31, f24, rmm # perform operation
fdiv.d f26, f31, f24, rne # perform operation
fdiv.d f26, f31, f24, rtz # perform operation
fdiv.d f26, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8008000000000000 from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
fdiv.d f8, f31, f27, dyn # perform operation
fdiv.d f8, f31, f27, rdn # perform operation
fdiv.d f8, f31, f27, rmm # perform operation
fdiv.d f8, f31, f27, rne # perform operation
fdiv.d f8, f31, f27, rtz # perform operation
fdiv.d f8, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fdiv.d f15, f19, f24, dyn # perform operation
fdiv.d f15, f19, f24, rdn # perform operation
fdiv.d f15, f19, f24, rmm # perform operation
fdiv.d f15, f19, f24, rne # perform operation
fdiv.d f15, f19, f24, rtz # perform operation
fdiv.d f15, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f7, f30, f26, dyn # perform operation
fdiv.d f7, f30, f26, rdn # perform operation
fdiv.d f7, f30, f26, rmm # perform operation
fdiv.d f7, f30, f26, rne # perform operation
fdiv.d f7, f30, f26, rtz # perform operation
fdiv.d f7, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8008000000000000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff8000000000000 from memory into f29
fdiv.d f28, f13, f29, dyn # perform operation
fdiv.d f28, f13, f29, rdn # perform operation
fdiv.d f28, f13, f29, rmm # perform operation
fdiv.d f28, f13, f29, rne # perform operation
fdiv.d f28, f13, f29, rtz # perform operation
fdiv.d f28, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8008000000000000 from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fdiv.d f21, f17, f24, dyn # perform operation
fdiv.d f21, f17, f24, rdn # perform operation
fdiv.d f21, f17, f24, rmm # perform operation
fdiv.d f21, f17, f24, rne # perform operation
fdiv.d f21, f17, f24, rtz # perform operation
fdiv.d f21, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8008000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff8000000000000 from memory into f27
fdiv.d f8, f6, f27, dyn # perform operation
fdiv.d f8, f6, f27, rdn # perform operation
fdiv.d f8, f6, f27, rmm # perform operation
fdiv.d f8, f6, f27, rne # perform operation
fdiv.d f8, f6, f27, rtz # perform operation
fdiv.d f8, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
fdiv.d f13, f27, f6, dyn # perform operation
fdiv.d f13, f27, f6, rdn # perform operation
fdiv.d f13, f27, f6, rmm # perform operation
fdiv.d f13, f27, f6, rne # perform operation
fdiv.d f13, f27, f6, rtz # perform operation
fdiv.d f13, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f27, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8008000000000000 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fdiv.d f20, f12, f8, dyn # perform operation
fdiv.d f20, f12, f8, rdn # perform operation
fdiv.d f20, f12, f8, rmm # perform operation
fdiv.d f20, f12, f8, rne # perform operation
fdiv.d f20, f12, f8, rtz # perform operation
fdiv.d f20, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8008000000000000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
fdiv.d f2, f19, f9, dyn # perform operation
fdiv.d f2, f19, f9, rdn # perform operation
fdiv.d f2, f19, f9, rmm # perform operation
fdiv.d f2, f19, f9, rne # perform operation
fdiv.d f2, f19, f9, rtz # perform operation
fdiv.d f2, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8008000000000000 from memory into f18
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x5a392534a57711ad from memory into f7
fdiv.d f3, f18, f7, dyn # perform operation
fdiv.d f3, f18, f7, rdn # perform operation
fdiv.d f3, f18, f7, rmm # perform operation
fdiv.d f3, f18, f7, rne # perform operation
fdiv.d f3, f18, f7, rtz # perform operation
fdiv.d f3, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8008000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8008000000000000 from memory into f2
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
fdiv.d f8, f2, f18, dyn # perform operation
fdiv.d f8, f2, f18, rdn # perform operation
fdiv.d f8, f2, f18, rmm # perform operation
fdiv.d f8, f2, f18, rne # perform operation
fdiv.d f8, f2, f18, rtz # perform operation
fdiv.d f8, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fdiv.d f29, f18, f14, dyn # perform operation
fdiv.d f29, f18, f14, rdn # perform operation
fdiv.d f29, f18, f14, rmm # perform operation
fdiv.d f29, f18, f14, rne # perform operation
fdiv.d f29, f18, f14, rtz # perform operation
fdiv.d f29, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000000 from memory into f1
fdiv.d f26, f8, f1, dyn # perform operation
fdiv.d f26, f8, f1, rdn # perform operation
fdiv.d f26, f8, f1, rmm # perform operation
fdiv.d f26, f8, f1, rne # perform operation
fdiv.d f26, f8, f1, rtz # perform operation
fdiv.d f26, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fdiv.d f6, f26, f15, dyn # perform operation
fdiv.d f6, f26, f15, rdn # perform operation
fdiv.d f6, f26, f15, rmm # perform operation
fdiv.d f6, f26, f15, rne # perform operation
fdiv.d f6, f26, f15, rtz # perform operation
fdiv.d f6, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0000000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fdiv.d f9, f18, f30, dyn # perform operation
fdiv.d f9, f18, f30, rdn # perform operation
fdiv.d f9, f18, f30, rmm # perform operation
fdiv.d f9, f18, f30, rne # perform operation
fdiv.d f9, f18, f30, rtz # perform operation
fdiv.d f9, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x3ff8000000000000 from memory into f1
fdiv.d f5, f7, f1, dyn # perform operation
fdiv.d f5, f7, f1, rdn # perform operation
fdiv.d f5, f7, f1, rmm # perform operation
fdiv.d f5, f7, f1, rne # perform operation
fdiv.d f5, f7, f1, rtz # perform operation
fdiv.d f5, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f7, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xbff8000000000000 from memory into f15
fdiv.d f29, f17, f15, dyn # perform operation
fdiv.d f29, f17, f15, rdn # perform operation
fdiv.d f29, f17, f15, rmm # perform operation
fdiv.d f29, f17, f15, rne # perform operation
fdiv.d f29, f17, f15, rtz # perform operation
fdiv.d f29, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f17, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0000000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x4000000000000000 from memory into f30
fdiv.d f5, f10, f30, dyn # perform operation
fdiv.d f5, f10, f30, rdn # perform operation
fdiv.d f5, f10, f30, rmm # perform operation
fdiv.d f5, f10, f30, rne # perform operation
fdiv.d f5, f10, f30, rtz # perform operation
fdiv.d f5, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xc000000000000000 from memory into f8
fdiv.d f30, f12, f8, dyn # perform operation
fdiv.d f30, f12, f8, rdn # perform operation
fdiv.d f30, f12, f8, rmm # perform operation
fdiv.d f30, f12, f8, rne # perform operation
fdiv.d f30, f12, f8, rtz # perform operation
fdiv.d f30, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f12, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fdiv.d f12, f29, f8, dyn # perform operation
fdiv.d f12, f29, f8, rdn # perform operation
fdiv.d f12, f29, f8, rmm # perform operation
fdiv.d f12, f29, f8, rne # perform operation
fdiv.d f12, f29, f8, rtz # perform operation
fdiv.d f12, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8010000000000000 from memory into f24
fdiv.d f6, f17, f24, dyn # perform operation
fdiv.d f6, f17, f24, rdn # perform operation
fdiv.d f6, f17, f24, rmm # perform operation
fdiv.d f6, f17, f24, rne # perform operation
fdiv.d f6, f17, f24, rtz # perform operation
fdiv.d f6, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fdiv.d f11, f14, f19, dyn # perform operation
fdiv.d f11, f14, f19, rdn # perform operation
fdiv.d f11, f14, f19, rmm # perform operation
fdiv.d f11, f14, f19, rne # perform operation
fdiv.d f11, f14, f19, rtz # perform operation
fdiv.d f11, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x0000000000000001 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fdiv.d f9, f25, f10, dyn # perform operation
fdiv.d f9, f25, f10, rdn # perform operation
fdiv.d f9, f25, f10, rmm # perform operation
fdiv.d f9, f25, f10, rne # perform operation
fdiv.d f9, f25, f10, rtz # perform operation
fdiv.d f9, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x000fffffffffffff from memory into f10
fdiv.d f28, f11, f10, dyn # perform operation
fdiv.d f28, f11, f10, rdn # perform operation
fdiv.d f28, f11, f10, rmm # perform operation
fdiv.d f28, f11, f10, rne # perform operation
fdiv.d f28, f11, f10, rtz # perform operation
fdiv.d f28, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x800fffffffffffff from memory into f20
fdiv.d f6, f21, f20, dyn # perform operation
fdiv.d f6, f21, f20, rdn # perform operation
fdiv.d f6, f21, f20, rmm # perform operation
fdiv.d f6, f21, f20, rne # perform operation
fdiv.d f6, f21, f20, rtz # perform operation
fdiv.d f6, f21, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f21, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f21, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f21, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f21, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f21, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0000000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0008000000000000 from memory into f10
fdiv.d f1, f8, f10, dyn # perform operation
fdiv.d f1, f8, f10, rdn # perform operation
fdiv.d f1, f8, f10, rmm # perform operation
fdiv.d f1, f8, f10, rne # perform operation
fdiv.d f1, f8, f10, rtz # perform operation
fdiv.d f1, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f8, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8008000000000000 from memory into f10
fdiv.d f15, f7, f10, dyn # perform operation
fdiv.d f15, f7, f10, rdn # perform operation
fdiv.d f15, f7, f10, rmm # perform operation
fdiv.d f15, f7, f10, rne # perform operation
fdiv.d f15, f7, f10, rtz # perform operation
fdiv.d f15, f7, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f7, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f7, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f7, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f7, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f7, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000001 from memory into f12
fdiv.d f14, f19, f12, dyn # perform operation
fdiv.d f14, f19, f12, rdn # perform operation
fdiv.d f14, f19, f12, rmm # perform operation
fdiv.d f14, f19, f12, rne # perform operation
fdiv.d f14, f19, f12, rtz # perform operation
fdiv.d f14, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8000000000000001 from memory into f26
fdiv.d f27, f11, f26, dyn # perform operation
fdiv.d f27, f11, f26, rdn # perform operation
fdiv.d f27, f11, f26, rmm # perform operation
fdiv.d f27, f11, f26, rne # perform operation
fdiv.d f27, f11, f26, rtz # perform operation
fdiv.d f27, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f11, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
fdiv.d f17, f30, f18, dyn # perform operation
fdiv.d f17, f30, f18, rdn # perform operation
fdiv.d f17, f30, f18, rmm # perform operation
fdiv.d f17, f30, f18, rne # perform operation
fdiv.d f17, f30, f18, rtz # perform operation
fdiv.d f17, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f30, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000000 from memory into f30
fdiv.d f29, f21, f30, dyn # perform operation
fdiv.d f29, f21, f30, rdn # perform operation
fdiv.d f29, f21, f30, rmm # perform operation
fdiv.d f29, f21, f30, rne # perform operation
fdiv.d f29, f21, f30, rtz # perform operation
fdiv.d f29, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x0000000000000001 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fdiv.d f9, f21, f6, dyn # perform operation
fdiv.d f9, f21, f6, rdn # perform operation
fdiv.d f9, f21, f6, rmm # perform operation
fdiv.d f9, f21, f6, rne # perform operation
fdiv.d f9, f21, f6, rtz # perform operation
fdiv.d f9, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f21, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fdiv.d f2, f11, f12, dyn # perform operation
fdiv.d f2, f11, f12, rdn # perform operation
fdiv.d f2, f11, f12, rmm # perform operation
fdiv.d f2, f11, f12, rne # perform operation
fdiv.d f2, f11, f12, rtz # perform operation
fdiv.d f2, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
fdiv.d f19, f15, f3, dyn # perform operation
fdiv.d f19, f15, f3, rdn # perform operation
fdiv.d f19, f15, f3, rmm # perform operation
fdiv.d f19, f15, f3, rne # perform operation
fdiv.d f19, f15, f3, rtz # perform operation
fdiv.d f19, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0000000000000001 from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
fdiv.d f3, f29, f9, dyn # perform operation
fdiv.d f3, f29, f9, rdn # perform operation
fdiv.d f3, f29, f9, rmm # perform operation
fdiv.d f3, f29, f9, rne # perform operation
fdiv.d f3, f29, f9, rtz # perform operation
fdiv.d f3, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f29, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000001 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
fdiv.d f8, f14, f6, dyn # perform operation
fdiv.d f8, f14, f6, rdn # perform operation
fdiv.d f8, f14, f6, rmm # perform operation
fdiv.d f8, f14, f6, rne # perform operation
fdiv.d f8, f14, f6, rtz # perform operation
fdiv.d f8, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000001 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
fdiv.d f31, f11, f10, dyn # perform operation
fdiv.d f31, f11, f10, rdn # perform operation
fdiv.d f31, f11, f10, rmm # perform operation
fdiv.d f31, f11, f10, rne # perform operation
fdiv.d f31, f11, f10, rtz # perform operation
fdiv.d f31, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0000000000000001 from memory into f9
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
fdiv.d f7, f9, f20, dyn # perform operation
fdiv.d f7, f9, f20, rdn # perform operation
fdiv.d f7, f9, f20, rmm # perform operation
fdiv.d f7, f9, f20, rne # perform operation
fdiv.d f7, f9, f20, rtz # perform operation
fdiv.d f7, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x0000000000000001 from memory into f26
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fdiv.d f28, f26, f21, dyn # perform operation
fdiv.d f28, f26, f21, rdn # perform operation
fdiv.d f28, f26, f21, rmm # perform operation
fdiv.d f28, f26, f21, rne # perform operation
fdiv.d f28, f26, f21, rtz # perform operation
fdiv.d f28, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f26, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fdiv.d f20, f30, f12, dyn # perform operation
fdiv.d f20, f30, f12, rdn # perform operation
fdiv.d f20, f30, f12, rmm # perform operation
fdiv.d f20, f30, f12, rne # perform operation
fdiv.d f20, f30, f12, rtz # perform operation
fdiv.d f20, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f30, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x8000000000000000 from memory into f24
fdiv.d f29, f13, f24, dyn # perform operation
fdiv.d f29, f13, f24, rdn # perform operation
fdiv.d f29, f13, f24, rmm # perform operation
fdiv.d f29, f13, f24, rne # perform operation
fdiv.d f29, f13, f24, rtz # perform operation
fdiv.d f29, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8000000000000001 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x3ff0000000000000 from memory into f26
fdiv.d f8, f1, f26, dyn # perform operation
fdiv.d f8, f1, f26, rdn # perform operation
fdiv.d f8, f1, f26, rmm # perform operation
fdiv.d f8, f1, f26, rne # perform operation
fdiv.d f8, f1, f26, rtz # perform operation
fdiv.d f8, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff0000000000000 from memory into f16
fdiv.d f31, f6, f16, dyn # perform operation
fdiv.d f31, f6, f16, rdn # perform operation
fdiv.d f31, f6, f16, rmm # perform operation
fdiv.d f31, f6, f16, rne # perform operation
fdiv.d f31, f6, f16, rtz # perform operation
fdiv.d f31, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x3ff8000000000000 from memory into f30
fdiv.d f24, f20, f30, dyn # perform operation
fdiv.d f24, f20, f30, rdn # perform operation
fdiv.d f24, f20, f30, rmm # perform operation
fdiv.d f24, f20, f30, rne # perform operation
fdiv.d f24, f20, f30, rtz # perform operation
fdiv.d f24, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8000000000000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff8000000000000 from memory into f11
fdiv.d f22, f27, f11, dyn # perform operation
fdiv.d f22, f27, f11, rdn # perform operation
fdiv.d f22, f27, f11, rmm # perform operation
fdiv.d f22, f27, f11, rne # perform operation
fdiv.d f22, f27, f11, rtz # perform operation
fdiv.d f22, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f27, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x8000000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x4000000000000000 from memory into f14
fdiv.d f5, f3, f14, dyn # perform operation
fdiv.d f5, f3, f14, rdn # perform operation
fdiv.d f5, f3, f14, rmm # perform operation
fdiv.d f5, f3, f14, rne # perform operation
fdiv.d f5, f3, f14, rtz # perform operation
fdiv.d f5, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f3, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000001 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xc000000000000000 from memory into f27
fdiv.d f23, f25, f27, dyn # perform operation
fdiv.d f23, f25, f27, rdn # perform operation
fdiv.d f23, f25, f27, rmm # perform operation
fdiv.d f23, f25, f27, rne # perform operation
fdiv.d f23, f25, f27, rtz # perform operation
fdiv.d f23, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0010000000000000 from memory into f16
fdiv.d f24, f22, f16, dyn # perform operation
fdiv.d f24, f22, f16, rdn # perform operation
fdiv.d f24, f22, f16, rmm # perform operation
fdiv.d f24, f22, f16, rne # perform operation
fdiv.d f24, f22, f16, rtz # perform operation
fdiv.d f24, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f22, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8000000000000001 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8010000000000000 from memory into f20
fdiv.d f1, f11, f20, dyn # perform operation
fdiv.d f1, f11, f20, rdn # perform operation
fdiv.d f1, f11, f20, rmm # perform operation
fdiv.d f1, f11, f20, rne # perform operation
fdiv.d f1, f11, f20, rtz # perform operation
fdiv.d f1, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x8000000000000001 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fefffffffffffff from memory into f1
fdiv.d f3, f20, f1, dyn # perform operation
fdiv.d f3, f20, f1, rdn # perform operation
fdiv.d f3, f20, f1, rmm # perform operation
fdiv.d f3, f20, f1, rne # perform operation
fdiv.d f3, f20, f1, rtz # perform operation
fdiv.d f3, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000001 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xffefffffffffffff from memory into f22
fdiv.d f6, f2, f22, dyn # perform operation
fdiv.d f6, f2, f22, rdn # perform operation
fdiv.d f6, f2, f22, rmm # perform operation
fdiv.d f6, f2, f22, rne # perform operation
fdiv.d f6, f2, f22, rtz # perform operation
fdiv.d f6, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fdiv.d f13, f6, f20, dyn # perform operation
fdiv.d f13, f6, f20, rdn # perform operation
fdiv.d f13, f6, f20, rmm # perform operation
fdiv.d f13, f6, f20, rne # perform operation
fdiv.d f13, f6, f20, rtz # perform operation
fdiv.d f13, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x800fffffffffffff from memory into f11
fdiv.d f22, f7, f11, dyn # perform operation
fdiv.d f22, f7, f11, rdn # perform operation
fdiv.d f22, f7, f11, rmm # perform operation
fdiv.d f22, f7, f11, rne # perform operation
fdiv.d f22, f7, f11, rtz # perform operation
fdiv.d f22, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8000000000000001 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0008000000000000 from memory into f27
fdiv.d f7, f28, f27, dyn # perform operation
fdiv.d f7, f28, f27, rdn # perform operation
fdiv.d f7, f28, f27, rmm # perform operation
fdiv.d f7, f28, f27, rne # perform operation
fdiv.d f7, f28, f27, rtz # perform operation
fdiv.d f7, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8008000000000000 from memory into f9
fdiv.d f23, f17, f9, dyn # perform operation
fdiv.d f23, f17, f9, rdn # perform operation
fdiv.d f23, f17, f9, rmm # perform operation
fdiv.d f23, f17, f9, rne # perform operation
fdiv.d f23, f17, f9, rtz # perform operation
fdiv.d f23, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x8000000000000001 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0000000000000001 from memory into f5
fdiv.d f25, f14, f5, dyn # perform operation
fdiv.d f25, f14, f5, rdn # perform operation
fdiv.d f25, f14, f5, rmm # perform operation
fdiv.d f25, f14, f5, rne # perform operation
fdiv.d f25, f14, f5, rtz # perform operation
fdiv.d f25, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fdiv.d f6, f12, f16, dyn # perform operation
fdiv.d f6, f12, f16, rdn # perform operation
fdiv.d f6, f12, f16, rmm # perform operation
fdiv.d f6, f12, f16, rne # perform operation
fdiv.d f6, f12, f16, rtz # perform operation
fdiv.d f6, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f12, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
fdiv.d f20, f13, f17, dyn # perform operation
fdiv.d f20, f13, f17, rdn # perform operation
fdiv.d f20, f13, f17, rmm # perform operation
fdiv.d f20, f13, f17, rne # perform operation
fdiv.d f20, f13, f17, rtz # perform operation
fdiv.d f20, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
fdiv.d f20, f29, f14, dyn # perform operation
fdiv.d f20, f29, f14, rdn # perform operation
fdiv.d f20, f29, f14, rmm # perform operation
fdiv.d f20, f29, f14, rne # perform operation
fdiv.d f20, f29, f14, rtz # perform operation
fdiv.d f20, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f29, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff8000000000000 from memory into f14
fdiv.d f20, f12, f14, dyn # perform operation
fdiv.d f20, f12, f14, rdn # perform operation
fdiv.d f20, f12, f14, rmm # perform operation
fdiv.d f20, f12, f14, rne # perform operation
fdiv.d f20, f12, f14, rtz # perform operation
fdiv.d f20, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
fdiv.d f15, f8, f17, dyn # perform operation
fdiv.d f15, f8, f17, rdn # perform operation
fdiv.d f15, f8, f17, rmm # perform operation
fdiv.d f15, f8, f17, rne # perform operation
fdiv.d f15, f8, f17, rtz # perform operation
fdiv.d f15, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f8, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x8000000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff8000000000000 from memory into f17
fdiv.d f28, f6, f17, dyn # perform operation
fdiv.d f28, f6, f17, rdn # perform operation
fdiv.d f28, f6, f17, rmm # perform operation
fdiv.d f28, f6, f17, rne # perform operation
fdiv.d f28, f6, f17, rtz # perform operation
fdiv.d f28, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000001 from memory into f11
fdiv.d f16, f13, f11, dyn # perform operation
fdiv.d f16, f13, f11, rdn # perform operation
fdiv.d f16, f13, f11, rmm # perform operation
fdiv.d f16, f13, f11, rne # perform operation
fdiv.d f16, f13, f11, rtz # perform operation
fdiv.d f16, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x8000000000000001 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
fdiv.d f26, f13, f8, dyn # perform operation
fdiv.d f26, f13, f8, rdn # perform operation
fdiv.d f26, f13, f8, rmm # perform operation
fdiv.d f26, f13, f8, rne # perform operation
fdiv.d f26, f13, f8, rtz # perform operation
fdiv.d f26, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8000000000000001 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
fdiv.d f23, f30, f8, dyn # perform operation
fdiv.d f23, f30, f8, rdn # perform operation
fdiv.d f23, f30, f8, rmm # perform operation
fdiv.d f23, f30, f8, rne # perform operation
fdiv.d f23, f30, f8, rtz # perform operation
fdiv.d f23, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000001 from memory into f7
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x5a392534a57711ad from memory into f15
fdiv.d f8, f7, f15, dyn # perform operation
fdiv.d f8, f7, f15, rdn # perform operation
fdiv.d f8, f7, f15, rmm # perform operation
fdiv.d f8, f7, f15, rne # perform operation
fdiv.d f8, f7, f15, rtz # perform operation
fdiv.d f8, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f7, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x8000000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
fdiv.d f8, f22, f1, dyn # perform operation
fdiv.d f8, f22, f1, rdn # perform operation
fdiv.d f8, f22, f1, rmm # perform operation
fdiv.d f8, f22, f1, rne # perform operation
fdiv.d f8, f22, f1, rtz # perform operation
fdiv.d f8, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0000000000000000 from memory into f14
fdiv.d f13, f17, f14, dyn # perform operation
fdiv.d f13, f17, f14, rdn # perform operation
fdiv.d f13, f17, f14, rmm # perform operation
fdiv.d f13, f17, f14, rne # perform operation
fdiv.d f13, f17, f14, rtz # perform operation
fdiv.d f13, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x8000000000000000 from memory into f31
fdiv.d f19, f22, f31, dyn # perform operation
fdiv.d f19, f22, f31, rdn # perform operation
fdiv.d f19, f22, f31, rmm # perform operation
fdiv.d f19, f22, f31, rne # perform operation
fdiv.d f19, f22, f31, rtz # perform operation
fdiv.d f19, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x3ff0000000000000 from memory into f20
fdiv.d f14, f7, f20, dyn # perform operation
fdiv.d f14, f7, f20, rdn # perform operation
fdiv.d f14, f7, f20, rmm # perform operation
fdiv.d f14, f7, f20, rne # perform operation
fdiv.d f14, f7, f20, rtz # perform operation
fdiv.d f14, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f7, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff0000000000000 from memory into f17
fdiv.d f30, f11, f17, dyn # perform operation
fdiv.d f30, f11, f17, rdn # perform operation
fdiv.d f30, f11, f17, rmm # perform operation
fdiv.d f30, f11, f17, rne # perform operation
fdiv.d f30, f11, f17, rtz # perform operation
fdiv.d f30, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff8000000000000 from memory into f2
fdiv.d f10, f14, f2, dyn # perform operation
fdiv.d f10, f14, f2, rdn # perform operation
fdiv.d f10, f14, f2, rmm # perform operation
fdiv.d f10, f14, f2, rne # perform operation
fdiv.d f10, f14, f2, rtz # perform operation
fdiv.d f10, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f14, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xbff8000000000000 from memory into f16
fdiv.d f9, f6, f16, dyn # perform operation
fdiv.d f9, f6, f16, rdn # perform operation
fdiv.d f9, f6, f16, rmm # perform operation
fdiv.d f9, f6, f16, rne # perform operation
fdiv.d f9, f6, f16, rtz # perform operation
fdiv.d f9, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f6, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff0000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x4000000000000000 from memory into f1
fdiv.d f31, f28, f1, dyn # perform operation
fdiv.d f31, f28, f1, rdn # perform operation
fdiv.d f31, f28, f1, rmm # perform operation
fdiv.d f31, f28, f1, rne # perform operation
fdiv.d f31, f28, f1, rtz # perform operation
fdiv.d f31, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xc000000000000000 from memory into f2
fdiv.d f19, f30, f2, dyn # perform operation
fdiv.d f19, f30, f2, rdn # perform operation
fdiv.d f19, f30, f2, rmm # perform operation
fdiv.d f19, f30, f2, rne # perform operation
fdiv.d f19, f30, f2, rtz # perform operation
fdiv.d f19, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f30, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0010000000000000 from memory into f12
fdiv.d f3, f16, f12, dyn # perform operation
fdiv.d f3, f16, f12, rdn # perform operation
fdiv.d f3, f16, f12, rmm # perform operation
fdiv.d f3, f16, f12, rne # perform operation
fdiv.d f3, f16, f12, rtz # perform operation
fdiv.d f3, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x8010000000000000 from memory into f11
fdiv.d f10, f24, f11, dyn # perform operation
fdiv.d f10, f24, f11, rdn # perform operation
fdiv.d f10, f24, f11, rmm # perform operation
fdiv.d f10, f24, f11, rne # perform operation
fdiv.d f10, f24, f11, rtz # perform operation
fdiv.d f10, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f24, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff0000000000000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fdiv.d f5, f27, f19, dyn # perform operation
fdiv.d f5, f27, f19, rdn # perform operation
fdiv.d f5, f27, f19, rmm # perform operation
fdiv.d f5, f27, f19, rne # perform operation
fdiv.d f5, f27, f19, rtz # perform operation
fdiv.d f5, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xffefffffffffffff from memory into f10
fdiv.d f25, f18, f10, dyn # perform operation
fdiv.d f25, f18, f10, rdn # perform operation
fdiv.d f25, f18, f10, rmm # perform operation
fdiv.d f25, f18, f10, rne # perform operation
fdiv.d f25, f18, f10, rtz # perform operation
fdiv.d f25, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x000fffffffffffff from memory into f21
fdiv.d f31, f13, f21, dyn # perform operation
fdiv.d f31, f13, f21, rdn # perform operation
fdiv.d f31, f13, f21, rmm # perform operation
fdiv.d f31, f13, f21, rne # perform operation
fdiv.d f31, f13, f21, rtz # perform operation
fdiv.d f31, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x800fffffffffffff from memory into f24
fdiv.d f1, f13, f24, dyn # perform operation
fdiv.d f1, f13, f24, rdn # perform operation
fdiv.d f1, f13, f24, rmm # perform operation
fdiv.d f1, f13, f24, rne # perform operation
fdiv.d f1, f13, f24, rtz # perform operation
fdiv.d f1, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f13, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fdiv.d f22, f6, f14, dyn # perform operation
fdiv.d f22, f6, f14, rdn # perform operation
fdiv.d f22, f6, f14, rmm # perform operation
fdiv.d f22, f6, f14, rne # perform operation
fdiv.d f22, f6, f14, rtz # perform operation
fdiv.d f22, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f6, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fdiv.d f31, f14, f1, dyn # perform operation
fdiv.d f31, f14, f1, rdn # perform operation
fdiv.d f31, f14, f1, rmm # perform operation
fdiv.d f31, f14, f1, rne # perform operation
fdiv.d f31, f14, f1, rtz # perform operation
fdiv.d f31, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0000000000000001 from memory into f31
fdiv.d f3, f17, f31, dyn # perform operation
fdiv.d f3, f17, f31, rdn # perform operation
fdiv.d f3, f17, f31, rmm # perform operation
fdiv.d f3, f17, f31, rne # perform operation
fdiv.d f3, f17, f31, rtz # perform operation
fdiv.d f3, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8000000000000001 from memory into f16
fdiv.d f28, f13, f16, dyn # perform operation
fdiv.d f28, f13, f16, rdn # perform operation
fdiv.d f28, f13, f16, rmm # perform operation
fdiv.d f28, f13, f16, rne # perform operation
fdiv.d f28, f13, f16, rtz # perform operation
fdiv.d f28, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f13, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
fdiv.d f25, f1, f2, dyn # perform operation
fdiv.d f25, f1, f2, rdn # perform operation
fdiv.d f25, f1, f2, rmm # perform operation
fdiv.d f25, f1, f2, rne # perform operation
fdiv.d f25, f1, f2, rtz # perform operation
fdiv.d f25, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
fdiv.d f31, f2, f18, dyn # perform operation
fdiv.d f31, f2, f18, rdn # perform operation
fdiv.d f31, f2, f18, rmm # perform operation
fdiv.d f31, f2, f18, rne # perform operation
fdiv.d f31, f2, f18, rtz # perform operation
fdiv.d f31, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff8000000000000 from memory into f20
fdiv.d f18, f30, f20, dyn # perform operation
fdiv.d f18, f30, f20, rdn # perform operation
fdiv.d f18, f30, f20, rmm # perform operation
fdiv.d f18, f30, f20, rne # perform operation
fdiv.d f18, f30, f20, rtz # perform operation
fdiv.d f18, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
fdiv.d f21, f18, f23, dyn # perform operation
fdiv.d f21, f18, f23, rdn # perform operation
fdiv.d f21, f18, f23, rmm # perform operation
fdiv.d f21, f18, f23, rne # perform operation
fdiv.d f21, f18, f23, rtz # perform operation
fdiv.d f21, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f18, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff8000000000000 from memory into f21
fdiv.d f6, f9, f21, dyn # perform operation
fdiv.d f6, f9, f21, rdn # perform operation
fdiv.d f6, f9, f21, rmm # perform operation
fdiv.d f6, f9, f21, rne # perform operation
fdiv.d f6, f9, f21, rtz # perform operation
fdiv.d f6, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
fdiv.d f25, f7, f18, dyn # perform operation
fdiv.d f25, f7, f18, rdn # perform operation
fdiv.d f25, f7, f18, rmm # perform operation
fdiv.d f25, f7, f18, rne # perform operation
fdiv.d f25, f7, f18, rtz # perform operation
fdiv.d f25, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f7, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
fdiv.d f23, f25, f17, dyn # perform operation
fdiv.d f23, f25, f17, rdn # perform operation
fdiv.d f23, f25, f17, rmm # perform operation
fdiv.d f23, f25, f17, rne # perform operation
fdiv.d f23, f25, f17, rtz # perform operation
fdiv.d f23, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f25, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
fdiv.d f16, f17, f9, dyn # perform operation
fdiv.d f16, f17, f9, rdn # perform operation
fdiv.d f16, f17, f9, rmm # perform operation
fdiv.d f16, f17, f9, rne # perform operation
fdiv.d f16, f17, f9, rtz # perform operation
fdiv.d f16, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff0000000000000 from memory into f10
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fdiv.d f29, f10, f6, dyn # perform operation
fdiv.d f29, f10, f6, rdn # perform operation
fdiv.d f29, f10, f6, rmm # perform operation
fdiv.d f29, f10, f6, rne # perform operation
fdiv.d f29, f10, f6, rtz # perform operation
fdiv.d f29, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff0000000000000 from memory into f11
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xa6e895993737426c from memory into f2
fdiv.d f28, f11, f2, dyn # perform operation
fdiv.d f28, f11, f2, rdn # perform operation
fdiv.d f28, f11, f2, rmm # perform operation
fdiv.d f28, f11, f2, rne # perform operation
fdiv.d f28, f11, f2, rtz # perform operation
fdiv.d f28, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f11, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x0000000000000000 from memory into f30
fdiv.d f5, f22, f30, dyn # perform operation
fdiv.d f5, f22, f30, rdn # perform operation
fdiv.d f5, f22, f30, rmm # perform operation
fdiv.d f5, f22, f30, rne # perform operation
fdiv.d f5, f22, f30, rtz # perform operation
fdiv.d f5, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x8000000000000000 from memory into f5
fdiv.d f11, f16, f5, dyn # perform operation
fdiv.d f11, f16, f5, rdn # perform operation
fdiv.d f11, f16, f5, rmm # perform operation
fdiv.d f11, f16, f5, rne # perform operation
fdiv.d f11, f16, f5, rtz # perform operation
fdiv.d f11, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fdiv.d f27, f26, f2, dyn # perform operation
fdiv.d f27, f26, f2, rdn # perform operation
fdiv.d f27, f26, f2, rmm # perform operation
fdiv.d f27, f26, f2, rne # perform operation
fdiv.d f27, f26, f2, rtz # perform operation
fdiv.d f27, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f26, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xbff0000000000000 from memory into f9
fdiv.d f13, f14, f9, dyn # perform operation
fdiv.d f13, f14, f9, rdn # perform operation
fdiv.d f13, f14, f9, rmm # perform operation
fdiv.d f13, f14, f9, rne # perform operation
fdiv.d f13, f14, f9, rtz # perform operation
fdiv.d f13, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x3ff8000000000000 from memory into f5
fdiv.d f9, f28, f5, dyn # perform operation
fdiv.d f9, f28, f5, rdn # perform operation
fdiv.d f9, f28, f5, rmm # perform operation
fdiv.d f9, f28, f5, rne # perform operation
fdiv.d f9, f28, f5, rtz # perform operation
fdiv.d f9, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xbff8000000000000 from memory into f29
fdiv.d f3, f5, f29, dyn # perform operation
fdiv.d f3, f5, f29, rdn # perform operation
fdiv.d f3, f5, f29, rmm # perform operation
fdiv.d f3, f5, f29, rne # perform operation
fdiv.d f3, f5, f29, rtz # perform operation
fdiv.d f3, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x4000000000000000 from memory into f22
fdiv.d f3, f12, f22, dyn # perform operation
fdiv.d f3, f12, f22, rdn # perform operation
fdiv.d f3, f12, f22, rmm # perform operation
fdiv.d f3, f12, f22, rne # perform operation
fdiv.d f3, f12, f22, rtz # perform operation
fdiv.d f3, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xc000000000000000 from memory into f15
fdiv.d f12, f5, f15, dyn # perform operation
fdiv.d f12, f5, f15, rdn # perform operation
fdiv.d f12, f5, f15, rmm # perform operation
fdiv.d f12, f5, f15, rne # perform operation
fdiv.d f12, f5, f15, rtz # perform operation
fdiv.d f12, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x0010000000000000 from memory into f5
fdiv.d f15, f25, f5, dyn # perform operation
fdiv.d f15, f25, f5, rdn # perform operation
fdiv.d f15, f25, f5, rmm # perform operation
fdiv.d f15, f25, f5, rne # perform operation
fdiv.d f15, f25, f5, rtz # perform operation
fdiv.d f15, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x8010000000000000 from memory into f15
fdiv.d f9, f23, f15, dyn # perform operation
fdiv.d f9, f23, f15, rdn # perform operation
fdiv.d f9, f23, f15, rmm # perform operation
fdiv.d f9, f23, f15, rne # perform operation
fdiv.d f9, f23, f15, rtz # perform operation
fdiv.d f9, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fefffffffffffff from memory into f19
fdiv.d f16, f13, f19, dyn # perform operation
fdiv.d f16, f13, f19, rdn # perform operation
fdiv.d f16, f13, f19, rmm # perform operation
fdiv.d f16, f13, f19, rne # perform operation
fdiv.d f16, f13, f19, rtz # perform operation
fdiv.d f16, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f13, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fdiv.d f5, f21, f18, dyn # perform operation
fdiv.d f5, f21, f18, rdn # perform operation
fdiv.d f5, f21, f18, rmm # perform operation
fdiv.d f5, f21, f18, rne # perform operation
fdiv.d f5, f21, f18, rtz # perform operation
fdiv.d f5, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x000fffffffffffff from memory into f12
fdiv.d f20, f23, f12, dyn # perform operation
fdiv.d f20, f23, f12, rdn # perform operation
fdiv.d f20, f23, f12, rmm # perform operation
fdiv.d f20, f23, f12, rne # perform operation
fdiv.d f20, f23, f12, rtz # perform operation
fdiv.d f20, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x800fffffffffffff from memory into f18
fdiv.d f27, f16, f18, dyn # perform operation
fdiv.d f27, f16, f18, rdn # perform operation
fdiv.d f27, f16, f18, rmm # perform operation
fdiv.d f27, f16, f18, rne # perform operation
fdiv.d f27, f16, f18, rtz # perform operation
fdiv.d f27, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x0008000000000000 from memory into f2
fdiv.d f6, f21, f2, dyn # perform operation
fdiv.d f6, f21, f2, rdn # perform operation
fdiv.d f6, f21, f2, rmm # perform operation
fdiv.d f6, f21, f2, rne # perform operation
fdiv.d f6, f21, f2, rtz # perform operation
fdiv.d f6, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff0000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8008000000000000 from memory into f1
fdiv.d f27, f31, f1, dyn # perform operation
fdiv.d f27, f31, f1, rdn # perform operation
fdiv.d f27, f31, f1, rmm # perform operation
fdiv.d f27, f31, f1, rne # perform operation
fdiv.d f27, f31, f1, rtz # perform operation
fdiv.d f27, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff0000000000000 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f25, f18, f19, dyn # perform operation
fdiv.d f25, f18, f19, rdn # perform operation
fdiv.d f25, f18, f19, rmm # perform operation
fdiv.d f25, f18, f19, rne # perform operation
fdiv.d f25, f18, f19, rtz # perform operation
fdiv.d f25, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000000 from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fdiv.d f28, f6, f8, dyn # perform operation
fdiv.d f28, f6, f8, rdn # perform operation
fdiv.d f28, f6, f8, rmm # perform operation
fdiv.d f28, f6, f8, rne # perform operation
fdiv.d f28, f6, f8, rtz # perform operation
fdiv.d f28, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f6, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000000 from memory into f5
fdiv.d f30, f7, f5, dyn # perform operation
fdiv.d f30, f7, f5, rdn # perform operation
fdiv.d f30, f7, f5, rmm # perform operation
fdiv.d f30, f7, f5, rne # perform operation
fdiv.d f30, f7, f5, rtz # perform operation
fdiv.d f30, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fdiv.d f17, f15, f25, dyn # perform operation
fdiv.d f17, f15, f25, rdn # perform operation
fdiv.d f17, f15, f25, rmm # perform operation
fdiv.d f17, f15, f25, rne # perform operation
fdiv.d f17, f15, f25, rtz # perform operation
fdiv.d f17, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
fdiv.d f19, f3, f6, dyn # perform operation
fdiv.d f19, f3, f6, rdn # perform operation
fdiv.d f19, f3, f6, rmm # perform operation
fdiv.d f19, f3, f6, rne # perform operation
fdiv.d f19, f3, f6, rtz # perform operation
fdiv.d f19, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000000 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
fdiv.d f14, f8, f1, dyn # perform operation
fdiv.d f14, f8, f1, rdn # perform operation
fdiv.d f14, f8, f1, rmm # perform operation
fdiv.d f14, f8, f1, rne # perform operation
fdiv.d f14, f8, f1, rtz # perform operation
fdiv.d f14, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f8, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff0000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
fdiv.d f28, f1, f13, dyn # perform operation
fdiv.d f28, f1, f13, rdn # perform operation
fdiv.d f28, f1, f13, rmm # perform operation
fdiv.d f28, f1, f13, rne # perform operation
fdiv.d f28, f1, f13, rtz # perform operation
fdiv.d f28, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f1, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000000 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000001 from memory into f1
fdiv.d f19, f22, f1, dyn # perform operation
fdiv.d f19, f22, f1, rdn # perform operation
fdiv.d f19, f22, f1, rmm # perform operation
fdiv.d f19, f22, f1, rne # perform operation
fdiv.d f19, f22, f1, rtz # perform operation
fdiv.d f19, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fdiv.d f7, f11, f5, dyn # perform operation
fdiv.d f7, f11, f5, rdn # perform operation
fdiv.d f7, f11, f5, rmm # perform operation
fdiv.d f7, f11, f5, rne # perform operation
fdiv.d f7, f11, f5, rtz # perform operation
fdiv.d f7, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff0000000000000 from memory into f14
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fdiv.d f28, f14, f19, dyn # perform operation
fdiv.d f28, f14, f19, rdn # perform operation
fdiv.d f28, f14, f19, rmm # perform operation
fdiv.d f28, f14, f19, rne # perform operation
fdiv.d f28, f14, f19, rtz # perform operation
fdiv.d f28, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x5a392534a57711ad from memory into f2
fdiv.d f18, f25, f2, dyn # perform operation
fdiv.d f18, f25, f2, rdn # perform operation
fdiv.d f18, f25, f2, rmm # perform operation
fdiv.d f18, f25, f2, rne # perform operation
fdiv.d f18, f25, f2, rtz # perform operation
fdiv.d f18, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000000 from memory into f28
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xa6e895993737426c from memory into f27
fdiv.d f18, f28, f27, dyn # perform operation
fdiv.d f18, f28, f27, rdn # perform operation
fdiv.d f18, f28, f27, rmm # perform operation
fdiv.d f18, f28, f27, rne # perform operation
fdiv.d f18, f28, f27, rtz # perform operation
fdiv.d f18, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f28, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x0000000000000000 from memory into f17
fdiv.d f1, f12, f17, dyn # perform operation
fdiv.d f1, f12, f17, rdn # perform operation
fdiv.d f1, f12, f17, rmm # perform operation
fdiv.d f1, f12, f17, rne # perform operation
fdiv.d f1, f12, f17, rtz # perform operation
fdiv.d f1, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8000000000000000 from memory into f18
fdiv.d f6, f24, f18, dyn # perform operation
fdiv.d f6, f24, f18, rdn # perform operation
fdiv.d f6, f24, f18, rmm # perform operation
fdiv.d f6, f24, f18, rne # perform operation
fdiv.d f6, f24, f18, rtz # perform operation
fdiv.d f6, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x3ff0000000000000 from memory into f31
fdiv.d f17, f18, f31, dyn # perform operation
fdiv.d f17, f18, f31, rdn # perform operation
fdiv.d f17, f18, f31, rmm # perform operation
fdiv.d f17, f18, f31, rne # perform operation
fdiv.d f17, f18, f31, rtz # perform operation
fdiv.d f17, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xbff0000000000000 from memory into f5
fdiv.d f7, f28, f5, dyn # perform operation
fdiv.d f7, f28, f5, rdn # perform operation
fdiv.d f7, f28, f5, rmm # perform operation
fdiv.d f7, f28, f5, rne # perform operation
fdiv.d f7, f28, f5, rtz # perform operation
fdiv.d f7, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fdiv.d f14, f16, f13, dyn # perform operation
fdiv.d f14, f16, f13, rdn # perform operation
fdiv.d f14, f16, f13, rmm # perform operation
fdiv.d f14, f16, f13, rne # perform operation
fdiv.d f14, f16, f13, rtz # perform operation
fdiv.d f14, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fdiv.d f21, f24, f23, dyn # perform operation
fdiv.d f21, f24, f23, rdn # perform operation
fdiv.d f21, f24, f23, rmm # perform operation
fdiv.d f21, f24, f23, rne # perform operation
fdiv.d f21, f24, f23, rtz # perform operation
fdiv.d f21, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f24, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x4000000000000000 from memory into f23
fdiv.d f22, f21, f23, dyn # perform operation
fdiv.d f22, f21, f23, rdn # perform operation
fdiv.d f22, f21, f23, rmm # perform operation
fdiv.d f22, f21, f23, rne # perform operation
fdiv.d f22, f21, f23, rtz # perform operation
fdiv.d f22, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f21, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xc000000000000000 from memory into f24
fdiv.d f16, f7, f24, dyn # perform operation
fdiv.d f16, f7, f24, rdn # perform operation
fdiv.d f16, f7, f24, rmm # perform operation
fdiv.d f16, f7, f24, rne # perform operation
fdiv.d f16, f7, f24, rtz # perform operation
fdiv.d f16, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fdiv.d f18, f11, f8, dyn # perform operation
fdiv.d f18, f11, f8, rdn # perform operation
fdiv.d f18, f11, f8, rmm # perform operation
fdiv.d f18, f11, f8, rne # perform operation
fdiv.d f18, f11, f8, rtz # perform operation
fdiv.d f18, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f11, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8010000000000000 from memory into f10
fdiv.d f5, f18, f10, dyn # perform operation
fdiv.d f5, f18, f10, rdn # perform operation
fdiv.d f5, f18, f10, rmm # perform operation
fdiv.d f5, f18, f10, rne # perform operation
fdiv.d f5, f18, f10, rtz # perform operation
fdiv.d f5, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7fefffffffffffff from memory into f31
fdiv.d f10, f22, f31, dyn # perform operation
fdiv.d f10, f22, f31, rdn # perform operation
fdiv.d f10, f22, f31, rmm # perform operation
fdiv.d f10, f22, f31, rne # perform operation
fdiv.d f10, f22, f31, rtz # perform operation
fdiv.d f10, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff8000000000000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xffefffffffffffff from memory into f9
fdiv.d f3, f5, f9, dyn # perform operation
fdiv.d f3, f5, f9, rdn # perform operation
fdiv.d f3, f5, f9, rmm # perform operation
fdiv.d f3, f5, f9, rne # perform operation
fdiv.d f3, f5, f9, rtz # perform operation
fdiv.d f3, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f5, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x000fffffffffffff from memory into f8
fdiv.d f22, f13, f8, dyn # perform operation
fdiv.d f22, f13, f8, rdn # perform operation
fdiv.d f22, f13, f8, rmm # perform operation
fdiv.d f22, f13, f8, rne # perform operation
fdiv.d f22, f13, f8, rtz # perform operation
fdiv.d f22, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7ff8000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x800fffffffffffff from memory into f5
fdiv.d f15, f26, f5, dyn # perform operation
fdiv.d f15, f26, f5, rdn # perform operation
fdiv.d f15, f26, f5, rmm # perform operation
fdiv.d f15, f26, f5, rne # perform operation
fdiv.d f15, f26, f5, rtz # perform operation
fdiv.d f15, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff8000000000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0008000000000000 from memory into f13
fdiv.d f9, f16, f13, dyn # perform operation
fdiv.d f9, f16, f13, rdn # perform operation
fdiv.d f9, f16, f13, rmm # perform operation
fdiv.d f9, f16, f13, rne # perform operation
fdiv.d f9, f16, f13, rtz # perform operation
fdiv.d f9, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fdiv.d f3, f6, f27, dyn # perform operation
fdiv.d f3, f6, f27, rdn # perform operation
fdiv.d f3, f6, f27, rmm # perform operation
fdiv.d f3, f6, f27, rne # perform operation
fdiv.d f3, f6, f27, rtz # perform operation
fdiv.d f3, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f6, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x0000000000000001 from memory into f27
fdiv.d f22, f25, f27, dyn # perform operation
fdiv.d f22, f25, f27, rdn # perform operation
fdiv.d f22, f25, f27, rmm # perform operation
fdiv.d f22, f25, f27, rne # perform operation
fdiv.d f22, f25, f27, rtz # perform operation
fdiv.d f22, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fdiv.d f28, f11, f12, dyn # perform operation
fdiv.d f28, f11, f12, rdn # perform operation
fdiv.d f28, f11, f12, rmm # perform operation
fdiv.d f28, f11, f12, rne # perform operation
fdiv.d f28, f11, f12, rtz # perform operation
fdiv.d f28, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff8000000000000 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000000 from memory into f23
fdiv.d f26, f2, f23, dyn # perform operation
fdiv.d f26, f2, f23, rdn # perform operation
fdiv.d f26, f2, f23, rmm # perform operation
fdiv.d f26, f2, f23, rne # perform operation
fdiv.d f26, f2, f23, rtz # perform operation
fdiv.d f26, f2, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f2, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f2, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f2, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f2, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f2, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff8000000000000 from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000000 from memory into f19
fdiv.d f21, f1, f19, dyn # perform operation
fdiv.d f21, f1, f19, rdn # perform operation
fdiv.d f21, f1, f19, rmm # perform operation
fdiv.d f21, f1, f19, rne # perform operation
fdiv.d f21, f1, f19, rtz # perform operation
fdiv.d f21, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
fdiv.d f6, f31, f8, dyn # perform operation
fdiv.d f6, f31, f8, rdn # perform operation
fdiv.d f6, f31, f8, rmm # perform operation
fdiv.d f6, f31, f8, rne # perform operation
fdiv.d f6, f31, f8, rtz # perform operation
fdiv.d f6, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff8000000000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
fdiv.d f2, f6, f24, dyn # perform operation
fdiv.d f2, f6, f24, rdn # perform operation
fdiv.d f2, f6, f24, rmm # perform operation
fdiv.d f2, f6, f24, rne # perform operation
fdiv.d f2, f6, f24, rtz # perform operation
fdiv.d f2, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f6, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff8000000000000 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fdiv.d f27, f9, f1, dyn # perform operation
fdiv.d f27, f9, f1, rdn # perform operation
fdiv.d f27, f9, f1, rmm # perform operation
fdiv.d f27, f9, f1, rne # perform operation
fdiv.d f27, f9, f1, rtz # perform operation
fdiv.d f27, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000001 from memory into f24
fdiv.d f2, f11, f24, dyn # perform operation
fdiv.d f2, f11, f24, rdn # perform operation
fdiv.d f2, f11, f24, rmm # perform operation
fdiv.d f2, f11, f24, rne # perform operation
fdiv.d f2, f11, f24, rtz # perform operation
fdiv.d f2, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f11, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff8000000000000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
fdiv.d f3, f22, f24, dyn # perform operation
fdiv.d f3, f22, f24, rdn # perform operation
fdiv.d f3, f22, f24, rmm # perform operation
fdiv.d f3, f22, f24, rne # perform operation
fdiv.d f3, f22, f24, rtz # perform operation
fdiv.d f3, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f22, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7ff8000000000000 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
fdiv.d f19, f11, f12, dyn # perform operation
fdiv.d f19, f11, f12, rdn # perform operation
fdiv.d f19, f11, f12, rmm # perform operation
fdiv.d f19, f11, f12, rne # perform operation
fdiv.d f19, f11, f12, rtz # perform operation
fdiv.d f19, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff8000000000000 from memory into f27
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
fdiv.d f13, f27, f19, dyn # perform operation
fdiv.d f13, f27, f19, rdn # perform operation
fdiv.d f13, f27, f19, rmm # perform operation
fdiv.d f13, f27, f19, rne # perform operation
fdiv.d f13, f27, f19, rtz # perform operation
fdiv.d f13, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff8000000000000 from memory into f8
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
fdiv.d f18, f8, f31, dyn # perform operation
fdiv.d f18, f8, f31, rdn # perform operation
fdiv.d f18, f8, f31, rmm # perform operation
fdiv.d f18, f8, f31, rne # perform operation
fdiv.d f18, f8, f31, rtz # perform operation
fdiv.d f18, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7fffffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fdiv.d f27, f23, f13, dyn # perform operation
fdiv.d f27, f23, f13, rdn # perform operation
fdiv.d f27, f23, f13, rmm # perform operation
fdiv.d f27, f23, f13, rne # perform operation
fdiv.d f27, f23, f13, rtz # perform operation
fdiv.d f27, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x8000000000000000 from memory into f2
fdiv.d f30, f25, f2, dyn # perform operation
fdiv.d f30, f25, f2, rdn # perform operation
fdiv.d f30, f25, f2, rmm # perform operation
fdiv.d f30, f25, f2, rne # perform operation
fdiv.d f30, f25, f2, rtz # perform operation
fdiv.d f30, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x3ff0000000000000 from memory into f27
fdiv.d f14, f24, f27, dyn # perform operation
fdiv.d f14, f24, f27, rdn # perform operation
fdiv.d f14, f24, f27, rmm # perform operation
fdiv.d f14, f24, f27, rne # perform operation
fdiv.d f14, f24, f27, rtz # perform operation
fdiv.d f14, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7fffffffffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xbff0000000000000 from memory into f3
fdiv.d f30, f20, f3, dyn # perform operation
fdiv.d f30, f20, f3, rdn # perform operation
fdiv.d f30, f20, f3, rmm # perform operation
fdiv.d f30, f20, f3, rne # perform operation
fdiv.d f30, f20, f3, rtz # perform operation
fdiv.d f30, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x3ff8000000000000 from memory into f13
fdiv.d f18, f7, f13, dyn # perform operation
fdiv.d f18, f7, f13, rdn # perform operation
fdiv.d f18, f7, f13, rmm # perform operation
fdiv.d f18, f7, f13, rne # perform operation
fdiv.d f18, f7, f13, rtz # perform operation
fdiv.d f18, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f7, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xbff8000000000000 from memory into f26
fdiv.d f20, f25, f26, dyn # perform operation
fdiv.d f20, f25, f26, rdn # perform operation
fdiv.d f20, f25, f26, rmm # perform operation
fdiv.d f20, f25, f26, rne # perform operation
fdiv.d f20, f25, f26, rtz # perform operation
fdiv.d f20, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x4000000000000000 from memory into f5
fdiv.d f14, f27, f5, dyn # perform operation
fdiv.d f14, f27, f5, rdn # perform operation
fdiv.d f14, f27, f5, rmm # perform operation
fdiv.d f14, f27, f5, rne # perform operation
fdiv.d f14, f27, f5, rtz # perform operation
fdiv.d f14, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f27, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xc000000000000000 from memory into f21
fdiv.d f28, f18, f21, dyn # perform operation
fdiv.d f28, f18, f21, rdn # perform operation
fdiv.d f28, f18, f21, rmm # perform operation
fdiv.d f28, f18, f21, rne # perform operation
fdiv.d f28, f18, f21, rtz # perform operation
fdiv.d f28, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x0010000000000000 from memory into f18
fdiv.d f6, f5, f18, dyn # perform operation
fdiv.d f6, f5, f18, rdn # perform operation
fdiv.d f6, f5, f18, rmm # perform operation
fdiv.d f6, f5, f18, rne # perform operation
fdiv.d f6, f5, f18, rtz # perform operation
fdiv.d f6, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fdiv.d f3, f18, f29, dyn # perform operation
fdiv.d f3, f18, f29, rdn # perform operation
fdiv.d f3, f18, f29, rmm # perform operation
fdiv.d f3, f18, f29, rne # perform operation
fdiv.d f3, f18, f29, rtz # perform operation
fdiv.d f3, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fffffffffffffff from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7fefffffffffffff from memory into f28
fdiv.d f24, f30, f28, dyn # perform operation
fdiv.d f24, f30, f28, rdn # perform operation
fdiv.d f24, f30, f28, rmm # perform operation
fdiv.d f24, f30, f28, rne # perform operation
fdiv.d f24, f30, f28, rtz # perform operation
fdiv.d f24, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f30, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7fffffffffffffff from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xffefffffffffffff from memory into f18
fdiv.d f15, f13, f18, dyn # perform operation
fdiv.d f15, f13, f18, rdn # perform operation
fdiv.d f15, f13, f18, rmm # perform operation
fdiv.d f15, f13, f18, rne # perform operation
fdiv.d f15, f13, f18, rtz # perform operation
fdiv.d f15, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7fffffffffffffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fdiv.d f3, f21, f1, dyn # perform operation
fdiv.d f3, f21, f1, rdn # perform operation
fdiv.d f3, f21, f1, rmm # perform operation
fdiv.d f3, f21, f1, rne # perform operation
fdiv.d f3, f21, f1, rtz # perform operation
fdiv.d f3, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fffffffffffffff from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x800fffffffffffff from memory into f31
fdiv.d f22, f5, f31, dyn # perform operation
fdiv.d f22, f5, f31, rdn # perform operation
fdiv.d f22, f5, f31, rmm # perform operation
fdiv.d f22, f5, f31, rne # perform operation
fdiv.d f22, f5, f31, rtz # perform operation
fdiv.d f22, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fdiv.d f6, f24, f9, dyn # perform operation
fdiv.d f6, f24, f9, rdn # perform operation
fdiv.d f6, f24, f9, rmm # perform operation
fdiv.d f6, f24, f9, rne # perform operation
fdiv.d f6, f24, f9, rtz # perform operation
fdiv.d f6, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7fffffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x8008000000000000 from memory into f30
fdiv.d f17, f24, f30, dyn # perform operation
fdiv.d f17, f24, f30, rdn # perform operation
fdiv.d f17, f24, f30, rmm # perform operation
fdiv.d f17, f24, f30, rne # perform operation
fdiv.d f17, f24, f30, rtz # perform operation
fdiv.d f17, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7fffffffffffffff from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f7, f10, f19, dyn # perform operation
fdiv.d f7, f10, f19, rdn # perform operation
fdiv.d f7, f10, f19, rmm # perform operation
fdiv.d f7, f10, f19, rne # perform operation
fdiv.d f7, f10, f19, rtz # perform operation
fdiv.d f7, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f10, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7fffffffffffffff from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f26, f17, f22, dyn # perform operation
fdiv.d f26, f17, f22, rdn # perform operation
fdiv.d f26, f17, f22, rmm # perform operation
fdiv.d f26, f17, f22, rne # perform operation
fdiv.d f26, f17, f22, rtz # perform operation
fdiv.d f26, f17, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f17, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f17, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff0000000000000 from memory into f1
fdiv.d f19, f12, f1, dyn # perform operation
fdiv.d f19, f12, f1, rdn # perform operation
fdiv.d f19, f12, f1, rmm # perform operation
fdiv.d f19, f12, f1, rne # perform operation
fdiv.d f19, f12, f1, rtz # perform operation
fdiv.d f19, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000000 from memory into f7
fdiv.d f19, f27, f7, dyn # perform operation
fdiv.d f19, f27, f7, rdn # perform operation
fdiv.d f19, f27, f7, rmm # perform operation
fdiv.d f19, f27, f7, rne # perform operation
fdiv.d f19, f27, f7, rtz # perform operation
fdiv.d f19, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f27, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7fffffffffffffff from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fdiv.d f2, f27, f13, dyn # perform operation
fdiv.d f2, f27, f13, rdn # perform operation
fdiv.d f2, f27, f13, rmm # perform operation
fdiv.d f2, f27, f13, rne # perform operation
fdiv.d f2, f27, f13, rtz # perform operation
fdiv.d f2, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7fffffffffffffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7fffffffffffffff from memory into f19
fdiv.d f25, f2, f19, dyn # perform operation
fdiv.d f25, f2, f19, rdn # perform operation
fdiv.d f25, f2, f19, rmm # perform operation
fdiv.d f25, f2, f19, rne # perform operation
fdiv.d f25, f2, f19, rtz # perform operation
fdiv.d f25, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f2, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7fffffffffffffff from memory into f25
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff8000000000000 from memory into f20
fdiv.d f13, f25, f20, dyn # perform operation
fdiv.d f13, f25, f20, rdn # perform operation
fdiv.d f13, f25, f20, rmm # perform operation
fdiv.d f13, f25, f20, rne # perform operation
fdiv.d f13, f25, f20, rtz # perform operation
fdiv.d f13, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fdiv.d f11, f26, f16, dyn # perform operation
fdiv.d f11, f26, f16, rdn # perform operation
fdiv.d f11, f26, f16, rmm # perform operation
fdiv.d f11, f26, f16, rne # perform operation
fdiv.d f11, f26, f16, rtz # perform operation
fdiv.d f11, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7fffffffffffffff from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff7ffffffffffff from memory into f31
fdiv.d f30, f1, f31, dyn # perform operation
fdiv.d f30, f1, f31, rdn # perform operation
fdiv.d f30, f1, f31, rmm # perform operation
fdiv.d f30, f1, f31, rne # perform operation
fdiv.d f30, f1, f31, rtz # perform operation
fdiv.d f30, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7fffffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000001 from memory into f27
fdiv.d f20, f8, f27, dyn # perform operation
fdiv.d f20, f8, f27, rdn # perform operation
fdiv.d f20, f8, f27, rmm # perform operation
fdiv.d f20, f8, f27, rne # perform operation
fdiv.d f20, f8, f27, rtz # perform operation
fdiv.d f20, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x5a392534a57711ad from memory into f17
fdiv.d f25, f26, f17, dyn # perform operation
fdiv.d f25, f26, f17, rdn # perform operation
fdiv.d f25, f26, f17, rmm # perform operation
fdiv.d f25, f26, f17, rne # perform operation
fdiv.d f25, f26, f17, rtz # perform operation
fdiv.d f25, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7fffffffffffffff from memory into f7
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xa6e895993737426c from memory into f14
fdiv.d f11, f7, f14, dyn # perform operation
fdiv.d f11, f7, f14, rdn # perform operation
fdiv.d f11, f7, f14, rmm # perform operation
fdiv.d f11, f7, f14, rne # perform operation
fdiv.d f11, f7, f14, rtz # perform operation
fdiv.d f11, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x0000000000000000 from memory into f12
fdiv.d f10, f23, f12, dyn # perform operation
fdiv.d f10, f23, f12, rdn # perform operation
fdiv.d f10, f23, f12, rmm # perform operation
fdiv.d f10, f23, f12, rne # perform operation
fdiv.d f10, f23, f12, rtz # perform operation
fdiv.d f10, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff8000000000000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8000000000000000 from memory into f29
fdiv.d f15, f21, f29, dyn # perform operation
fdiv.d f15, f21, f29, rdn # perform operation
fdiv.d f15, f21, f29, rmm # perform operation
fdiv.d f15, f21, f29, rne # perform operation
fdiv.d f15, f21, f29, rtz # perform operation
fdiv.d f15, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff0000000000000 from memory into f7
fdiv.d f10, f8, f7, dyn # perform operation
fdiv.d f10, f8, f7, rdn # perform operation
fdiv.d f10, f8, f7, rmm # perform operation
fdiv.d f10, f8, f7, rne # perform operation
fdiv.d f10, f8, f7, rtz # perform operation
fdiv.d f10, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff8000000000000 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xbff0000000000000 from memory into f28
fdiv.d f19, f20, f28, dyn # perform operation
fdiv.d f19, f20, f28, rdn # perform operation
fdiv.d f19, f20, f28, rmm # perform operation
fdiv.d f19, f20, f28, rne # perform operation
fdiv.d f19, f20, f28, rtz # perform operation
fdiv.d f19, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff8000000000000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x3ff8000000000000 from memory into f9
fdiv.d f8, f19, f9, dyn # perform operation
fdiv.d f8, f19, f9, rdn # perform operation
fdiv.d f8, f19, f9, rmm # perform operation
fdiv.d f8, f19, f9, rne # perform operation
fdiv.d f8, f19, f9, rtz # perform operation
fdiv.d f8, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xbff8000000000000 from memory into f17
fdiv.d f16, f26, f17, dyn # perform operation
fdiv.d f16, f26, f17, rdn # perform operation
fdiv.d f16, f26, f17, rmm # perform operation
fdiv.d f16, f26, f17, rne # perform operation
fdiv.d f16, f26, f17, rtz # perform operation
fdiv.d f16, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x4000000000000000 from memory into f18
fdiv.d f2, f3, f18, dyn # perform operation
fdiv.d f2, f3, f18, rdn # perform operation
fdiv.d f2, f3, f18, rmm # perform operation
fdiv.d f2, f3, f18, rne # perform operation
fdiv.d f2, f3, f18, rtz # perform operation
fdiv.d f2, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0xfff8000000000000 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xc000000000000000 from memory into f18
fdiv.d f28, f29, f18, dyn # perform operation
fdiv.d f28, f29, f18, rdn # perform operation
fdiv.d f28, f29, f18, rmm # perform operation
fdiv.d f28, f29, f18, rne # perform operation
fdiv.d f28, f29, f18, rtz # perform operation
fdiv.d f28, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff8000000000000 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x0010000000000000 from memory into f29
fdiv.d f7, f3, f29, dyn # perform operation
fdiv.d f7, f3, f29, rdn # perform operation
fdiv.d f7, f3, f29, rmm # perform operation
fdiv.d f7, f3, f29, rne # perform operation
fdiv.d f7, f3, f29, rtz # perform operation
fdiv.d f7, f3, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f3, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f3, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x8010000000000000 from memory into f16
fdiv.d f19, f28, f16, dyn # perform operation
fdiv.d f19, f28, f16, rdn # perform operation
fdiv.d f19, f28, f16, rmm # perform operation
fdiv.d f19, f28, f16, rne # perform operation
fdiv.d f19, f28, f16, rtz # perform operation
fdiv.d f19, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f28, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff8000000000000 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fefffffffffffff from memory into f12
fdiv.d f21, f11, f12, dyn # perform operation
fdiv.d f21, f11, f12, rdn # perform operation
fdiv.d f21, f11, f12, rmm # perform operation
fdiv.d f21, f11, f12, rne # perform operation
fdiv.d f21, f11, f12, rtz # perform operation
fdiv.d f21, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f11, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff8000000000000 from memory into f23
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xffefffffffffffff from memory into f12
fdiv.d f3, f23, f12, dyn # perform operation
fdiv.d f3, f23, f12, rdn # perform operation
fdiv.d f3, f23, f12, rmm # perform operation
fdiv.d f3, f23, f12, rne # perform operation
fdiv.d f3, f23, f12, rtz # perform operation
fdiv.d f3, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f23, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x000fffffffffffff from memory into f27
fdiv.d f23, f13, f27, dyn # perform operation
fdiv.d f23, f13, f27, rdn # perform operation
fdiv.d f23, f13, f27, rmm # perform operation
fdiv.d f23, f13, f27, rne # perform operation
fdiv.d f23, f13, f27, rtz # perform operation
fdiv.d f23, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff8000000000000 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x800fffffffffffff from memory into f30
fdiv.d f22, f18, f30, dyn # perform operation
fdiv.d f22, f18, f30, rdn # perform operation
fdiv.d f22, f18, f30, rmm # perform operation
fdiv.d f22, f18, f30, rne # perform operation
fdiv.d f22, f18, f30, rtz # perform operation
fdiv.d f22, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f18, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x0008000000000000 from memory into f9
fdiv.d f14, f15, f9, dyn # perform operation
fdiv.d f14, f15, f9, rdn # perform operation
fdiv.d f14, f15, f9, rmm # perform operation
fdiv.d f14, f15, f9, rne # perform operation
fdiv.d f14, f15, f9, rtz # perform operation
fdiv.d f14, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f15, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x8008000000000000 from memory into f23
fdiv.d f31, f28, f23, dyn # perform operation
fdiv.d f31, f28, f23, rdn # perform operation
fdiv.d f31, f28, f23, rmm # perform operation
fdiv.d f31, f28, f23, rne # perform operation
fdiv.d f31, f28, f23, rtz # perform operation
fdiv.d f31, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f28, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff8000000000000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x0000000000000001 from memory into f1
fdiv.d f9, f12, f1, dyn # perform operation
fdiv.d f9, f12, f1, rdn # perform operation
fdiv.d f9, f12, f1, rmm # perform operation
fdiv.d f9, f12, f1, rne # perform operation
fdiv.d f9, f12, f1, rtz # perform operation
fdiv.d f9, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff8000000000000 from memory into f25
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8000000000000001 from memory into f8
fdiv.d f13, f25, f8, dyn # perform operation
fdiv.d f13, f25, f8, rdn # perform operation
fdiv.d f13, f25, f8, rmm # perform operation
fdiv.d f13, f25, f8, rne # perform operation
fdiv.d f13, f25, f8, rtz # perform operation
fdiv.d f13, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f25, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0xfff8000000000000 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000000 from memory into f6
fdiv.d f5, f14, f6, dyn # perform operation
fdiv.d f5, f14, f6, rdn # perform operation
fdiv.d f5, f14, f6, rmm # perform operation
fdiv.d f5, f14, f6, rne # perform operation
fdiv.d f5, f14, f6, rtz # perform operation
fdiv.d f5, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff8000000000000 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xfff0000000000000 from memory into f23
fdiv.d f20, f22, f23, dyn # perform operation
fdiv.d f20, f22, f23, rdn # perform operation
fdiv.d f20, f22, f23, rmm # perform operation
fdiv.d f20, f22, f23, rne # perform operation
fdiv.d f20, f22, f23, rtz # perform operation
fdiv.d f20, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff8000000000000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff8000000000000 from memory into f24
fdiv.d f14, f7, f24, dyn # perform operation
fdiv.d f14, f7, f24, rdn # perform operation
fdiv.d f14, f7, f24, rmm # perform operation
fdiv.d f14, f7, f24, rne # perform operation
fdiv.d f14, f7, f24, rtz # perform operation
fdiv.d f14, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f7, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff8000000000000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7fffffffffffffff from memory into f18
fdiv.d f20, f24, f18, dyn # perform operation
fdiv.d f20, f24, f18, rdn # perform operation
fdiv.d f20, f24, f18, rmm # perform operation
fdiv.d f20, f24, f18, rne # perform operation
fdiv.d f20, f24, f18, rtz # perform operation
fdiv.d f20, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f24, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xfff8000000000000 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff8000000000000 from memory into f13
fdiv.d f26, f31, f13, dyn # perform operation
fdiv.d f26, f31, f13, rdn # perform operation
fdiv.d f26, f31, f13, rmm # perform operation
fdiv.d f26, f31, f13, rne # perform operation
fdiv.d f26, f31, f13, rtz # perform operation
fdiv.d f26, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
fdiv.d f19, f15, f8, dyn # perform operation
fdiv.d f19, f15, f8, rdn # perform operation
fdiv.d f19, f15, f8, rmm # perform operation
fdiv.d f19, f15, f8, rne # perform operation
fdiv.d f19, f15, f8, rtz # perform operation
fdiv.d f19, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff8000000000000 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
fdiv.d f28, f26, f16, dyn # perform operation
fdiv.d f28, f26, f16, rdn # perform operation
fdiv.d f28, f26, f16, rmm # perform operation
fdiv.d f28, f26, f16, rne # perform operation
fdiv.d f28, f26, f16, rtz # perform operation
fdiv.d f28, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000001 from memory into f28
fdiv.d f9, f15, f28, dyn # perform operation
fdiv.d f9, f15, f28, rdn # perform operation
fdiv.d f9, f15, f28, rmm # perform operation
fdiv.d f9, f15, f28, rne # perform operation
fdiv.d f9, f15, f28, rtz # perform operation
fdiv.d f9, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff8000000000000 from memory into f28
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
fdiv.d f29, f28, f13, dyn # perform operation
fdiv.d f29, f28, f13, rdn # perform operation
fdiv.d f29, f28, f13, rmm # perform operation
fdiv.d f29, f28, f13, rne # perform operation
fdiv.d f29, f28, f13, rtz # perform operation
fdiv.d f29, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff8000000000000 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xfff8000000000000 from memory into f18
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
fdiv.d f13, f18, f11, dyn # perform operation
fdiv.d f13, f18, f11, rdn # perform operation
fdiv.d f13, f18, f11, rmm # perform operation
fdiv.d f13, f18, f11, rne # perform operation
fdiv.d f13, f18, f11, rtz # perform operation
fdiv.d f13, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f18, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff0000000000001 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x0000000000000000 from memory into f11
fdiv.d f29, f23, f11, dyn # perform operation
fdiv.d f29, f23, f11, rdn # perform operation
fdiv.d f29, f23, f11, rmm # perform operation
fdiv.d f29, f23, f11, rne # perform operation
fdiv.d f29, f23, f11, rtz # perform operation
fdiv.d f29, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x7ff0000000000001 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fdiv.d f2, f9, f12, dyn # perform operation
fdiv.d f2, f9, f12, rdn # perform operation
fdiv.d f2, f9, f12, rmm # perform operation
fdiv.d f2, f9, f12, rne # perform operation
fdiv.d f2, f9, f12, rtz # perform operation
fdiv.d f2, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f9, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff0000000000001 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff0000000000000 from memory into f3
fdiv.d f31, f14, f3, dyn # perform operation
fdiv.d f31, f14, f3, rdn # perform operation
fdiv.d f31, f14, f3, rmm # perform operation
fdiv.d f31, f14, f3, rne # perform operation
fdiv.d f31, f14, f3, rtz # perform operation
fdiv.d f31, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff0000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fdiv.d f10, f8, f11, dyn # perform operation
fdiv.d f10, f8, f11, rdn # perform operation
fdiv.d f10, f8, f11, rmm # perform operation
fdiv.d f10, f8, f11, rne # perform operation
fdiv.d f10, f8, f11, rtz # perform operation
fdiv.d f10, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff0000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x3ff8000000000000 from memory into f11
fdiv.d f31, f6, f11, dyn # perform operation
fdiv.d f31, f6, f11, rdn # perform operation
fdiv.d f31, f6, f11, rmm # perform operation
fdiv.d f31, f6, f11, rne # perform operation
fdiv.d f31, f6, f11, rtz # perform operation
fdiv.d f31, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000001 from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fdiv.d f3, f29, f7, dyn # perform operation
fdiv.d f3, f29, f7, rdn # perform operation
fdiv.d f3, f29, f7, rmm # perform operation
fdiv.d f3, f29, f7, rne # perform operation
fdiv.d f3, f29, f7, rtz # perform operation
fdiv.d f3, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x4000000000000000 from memory into f13
fdiv.d f23, f5, f13, dyn # perform operation
fdiv.d f23, f5, f13, rdn # perform operation
fdiv.d f23, f5, f13, rmm # perform operation
fdiv.d f23, f5, f13, rne # perform operation
fdiv.d f23, f5, f13, rtz # perform operation
fdiv.d f23, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fdiv.d f25, f16, f28, dyn # perform operation
fdiv.d f25, f16, f28, rdn # perform operation
fdiv.d f25, f16, f28, rmm # perform operation
fdiv.d f25, f16, f28, rne # perform operation
fdiv.d f25, f16, f28, rtz # perform operation
fdiv.d f25, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f16, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x0010000000000000 from memory into f8
fdiv.d f25, f18, f8, dyn # perform operation
fdiv.d f25, f18, f8, rdn # perform operation
fdiv.d f25, f18, f8, rmm # perform operation
fdiv.d f25, f18, f8, rne # perform operation
fdiv.d f25, f18, f8, rtz # perform operation
fdiv.d f25, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x8010000000000000 from memory into f29
fdiv.d f16, f18, f29, dyn # perform operation
fdiv.d f16, f18, f29, rdn # perform operation
fdiv.d f16, f18, f29, rmm # perform operation
fdiv.d f16, f18, f29, rne # perform operation
fdiv.d f16, f18, f29, rtz # perform operation
fdiv.d f16, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7fefffffffffffff from memory into f5
fdiv.d f31, f13, f5, dyn # perform operation
fdiv.d f31, f13, f5, rdn # perform operation
fdiv.d f31, f13, f5, rmm # perform operation
fdiv.d f31, f13, f5, rne # perform operation
fdiv.d f31, f13, f5, rtz # perform operation
fdiv.d f31, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fdiv.d f23, f30, f7, dyn # perform operation
fdiv.d f23, f30, f7, rdn # perform operation
fdiv.d f23, f30, f7, rmm # perform operation
fdiv.d f23, f30, f7, rne # perform operation
fdiv.d f23, f30, f7, rtz # perform operation
fdiv.d f23, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x000fffffffffffff from memory into f1
fdiv.d f18, f21, f1, dyn # perform operation
fdiv.d f18, f21, f1, rdn # perform operation
fdiv.d f18, f21, f1, rmm # perform operation
fdiv.d f18, f21, f1, rne # perform operation
fdiv.d f18, f21, f1, rtz # perform operation
fdiv.d f18, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f21, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x800fffffffffffff from memory into f1
fdiv.d f21, f18, f1, dyn # perform operation
fdiv.d f21, f18, f1, rdn # perform operation
fdiv.d f21, f18, f1, rmm # perform operation
fdiv.d f21, f18, f1, rne # perform operation
fdiv.d f21, f18, f1, rtz # perform operation
fdiv.d f21, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x7ff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x0008000000000000 from memory into f22
fdiv.d f30, f2, f22, dyn # perform operation
fdiv.d f30, f2, f22, rdn # perform operation
fdiv.d f30, f2, f22, rmm # perform operation
fdiv.d f30, f2, f22, rne # perform operation
fdiv.d f30, f2, f22, rtz # perform operation
fdiv.d f30, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff0000000000001 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x8008000000000000 from memory into f27
fdiv.d f25, f18, f27, dyn # perform operation
fdiv.d f25, f18, f27, rdn # perform operation
fdiv.d f25, f18, f27, rmm # perform operation
fdiv.d f25, f18, f27, rne # perform operation
fdiv.d f25, f18, f27, rtz # perform operation
fdiv.d f25, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff0000000000001 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x0000000000000001 from memory into f16
fdiv.d f6, f21, f16, dyn # perform operation
fdiv.d f6, f21, f16, rdn # perform operation
fdiv.d f6, f21, f16, rmm # perform operation
fdiv.d f6, f21, f16, rne # perform operation
fdiv.d f6, f21, f16, rtz # perform operation
fdiv.d f6, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x8000000000000001 from memory into f17
fdiv.d f24, f15, f17, dyn # perform operation
fdiv.d f24, f15, f17, rdn # perform operation
fdiv.d f24, f15, f17, rmm # perform operation
fdiv.d f24, f15, f17, rne # perform operation
fdiv.d f24, f15, f17, rtz # perform operation
fdiv.d f24, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7ff0000000000000 from memory into f29
fdiv.d f1, f13, f29, dyn # perform operation
fdiv.d f1, f13, f29, rdn # perform operation
fdiv.d f1, f13, f29, rmm # perform operation
fdiv.d f1, f13, f29, rne # perform operation
fdiv.d f1, f13, f29, rtz # perform operation
fdiv.d f1, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xfff0000000000000 from memory into f25
fdiv.d f20, f19, f25, dyn # perform operation
fdiv.d f20, f19, f25, rdn # perform operation
fdiv.d f20, f19, f25, rmm # perform operation
fdiv.d f20, f19, f25, rne # perform operation
fdiv.d f20, f19, f25, rtz # perform operation
fdiv.d f20, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f19, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff8000000000000 from memory into f18
fdiv.d f25, f20, f18, dyn # perform operation
fdiv.d f25, f20, f18, rdn # perform operation
fdiv.d f25, f20, f18, rmm # perform operation
fdiv.d f25, f20, f18, rne # perform operation
fdiv.d f25, f20, f18, rtz # perform operation
fdiv.d f25, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f20, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x7fffffffffffffff from memory into f29
fdiv.d f11, f19, f29, dyn # perform operation
fdiv.d f11, f19, f29, rdn # perform operation
fdiv.d f11, f19, f29, rmm # perform operation
fdiv.d f11, f19, f29, rne # perform operation
fdiv.d f11, f19, f29, rtz # perform operation
fdiv.d f11, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff8000000000000 from memory into f6
fdiv.d f25, f15, f6, dyn # perform operation
fdiv.d f25, f15, f6, rdn # perform operation
fdiv.d f25, f15, f6, rmm # perform operation
fdiv.d f25, f15, f6, rne # perform operation
fdiv.d f25, f15, f6, rtz # perform operation
fdiv.d f25, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff0000000000001 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff0000000000001 from memory into f3
fdiv.d f30, f19, f3, dyn # perform operation
fdiv.d f30, f19, f3, rdn # perform operation
fdiv.d f30, f19, f3, rmm # perform operation
fdiv.d f30, f19, f3, rne # perform operation
fdiv.d f30, f19, f3, rtz # perform operation
fdiv.d f30, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff0000000000001 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fdiv.d f15, f5, f18, dyn # perform operation
fdiv.d f15, f5, f18, rdn # perform operation
fdiv.d f15, f5, f18, rmm # perform operation
fdiv.d f15, f5, f18, rne # perform operation
fdiv.d f15, f5, f18, rtz # perform operation
fdiv.d f15, f5, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f5, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f5, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f5, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f5, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f5, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000001 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
fdiv.d f2, f22, f10, dyn # perform operation
fdiv.d f2, f22, f10, rdn # perform operation
fdiv.d f2, f22, f10, rmm # perform operation
fdiv.d f2, f22, f10, rne # perform operation
fdiv.d f2, f22, f10, rtz # perform operation
fdiv.d f2, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff0000000000001 from memory into f15
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
fdiv.d f20, f15, f26, dyn # perform operation
fdiv.d f20, f15, f26, rdn # perform operation
fdiv.d f20, f15, f26, rmm # perform operation
fdiv.d f20, f15, f26, rne # perform operation
fdiv.d f20, f15, f26, rtz # perform operation
fdiv.d f20, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
fdiv.d f13, f17, f9, dyn # perform operation
fdiv.d f13, f17, f9, rdn # perform operation
fdiv.d f13, f17, f9, rmm # perform operation
fdiv.d f13, f17, f9, rne # perform operation
fdiv.d f13, f17, f9, rtz # perform operation
fdiv.d f13, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fdiv.d f23, f6, f13, dyn # perform operation
fdiv.d f23, f6, f13, rdn # perform operation
fdiv.d f23, f6, f13, rmm # perform operation
fdiv.d f23, f6, f13, rne # perform operation
fdiv.d f23, f6, f13, rtz # perform operation
fdiv.d f23, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x8000000000000000 from memory into f25
fdiv.d f31, f24, f25, dyn # perform operation
fdiv.d f31, f24, f25, rdn # perform operation
fdiv.d f31, f24, f25, rmm # perform operation
fdiv.d f31, f24, f25, rne # perform operation
fdiv.d f31, f24, f25, rtz # perform operation
fdiv.d f31, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f24, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x7ff7ffffffffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x3ff0000000000000 from memory into f15
fdiv.d f10, f3, f15, dyn # perform operation
fdiv.d f10, f3, f15, rdn # perform operation
fdiv.d f10, f3, f15, rmm # perform operation
fdiv.d f10, f3, f15, rne # perform operation
fdiv.d f10, f3, f15, rtz # perform operation
fdiv.d f10, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f3, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xbff0000000000000 from memory into f30
fdiv.d f9, f24, f30, dyn # perform operation
fdiv.d f9, f24, f30, rdn # perform operation
fdiv.d f9, f24, f30, rmm # perform operation
fdiv.d f9, f24, f30, rne # perform operation
fdiv.d f9, f24, f30, rtz # perform operation
fdiv.d f9, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x3ff8000000000000 from memory into f7
fdiv.d f14, f22, f7, dyn # perform operation
fdiv.d f14, f22, f7, rdn # perform operation
fdiv.d f14, f22, f7, rmm # perform operation
fdiv.d f14, f22, f7, rne # perform operation
fdiv.d f14, f22, f7, rtz # perform operation
fdiv.d f14, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xbff8000000000000 from memory into f13
fdiv.d f5, f28, f13, dyn # perform operation
fdiv.d f5, f28, f13, rdn # perform operation
fdiv.d f5, f28, f13, rmm # perform operation
fdiv.d f5, f28, f13, rne # perform operation
fdiv.d f5, f28, f13, rtz # perform operation
fdiv.d f5, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x7ff7ffffffffffff from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x4000000000000000 from memory into f28
fdiv.d f7, f21, f28, dyn # perform operation
fdiv.d f7, f21, f28, rdn # perform operation
fdiv.d f7, f21, f28, rmm # perform operation
fdiv.d f7, f21, f28, rne # perform operation
fdiv.d f7, f21, f28, rtz # perform operation
fdiv.d f7, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f21, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7ff7ffffffffffff from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xc000000000000000 from memory into f12
fdiv.d f7, f6, f12, dyn # perform operation
fdiv.d f7, f6, f12, rdn # perform operation
fdiv.d f7, f6, f12, rmm # perform operation
fdiv.d f7, f6, f12, rne # perform operation
fdiv.d f7, f6, f12, rtz # perform operation
fdiv.d f7, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x0010000000000000 from memory into f10
fdiv.d f19, f16, f10, dyn # perform operation
fdiv.d f19, f16, f10, rdn # perform operation
fdiv.d f19, f16, f10, rmm # perform operation
fdiv.d f19, f16, f10, rne # perform operation
fdiv.d f19, f16, f10, rtz # perform operation
fdiv.d f19, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8010000000000000 from memory into f21
fdiv.d f12, f23, f21, dyn # perform operation
fdiv.d f12, f23, f21, rdn # perform operation
fdiv.d f12, f23, f21, rmm # perform operation
fdiv.d f12, f23, f21, rne # perform operation
fdiv.d f12, f23, f21, rtz # perform operation
fdiv.d f12, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fefffffffffffff from memory into f26
fdiv.d f22, f16, f26, dyn # perform operation
fdiv.d f22, f16, f26, rdn # perform operation
fdiv.d f22, f16, f26, rmm # perform operation
fdiv.d f22, f16, f26, rne # perform operation
fdiv.d f22, f16, f26, rtz # perform operation
fdiv.d f22, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f16, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff7ffffffffffff from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xffefffffffffffff from memory into f15
fdiv.d f23, f24, f15, dyn # perform operation
fdiv.d f23, f24, f15, rdn # perform operation
fdiv.d f23, f24, f15, rmm # perform operation
fdiv.d f23, f24, f15, rne # perform operation
fdiv.d f23, f24, f15, rtz # perform operation
fdiv.d f23, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f24, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x000fffffffffffff from memory into f2
fdiv.d f31, f1, f2, dyn # perform operation
fdiv.d f31, f1, f2, rdn # perform operation
fdiv.d f31, f1, f2, rmm # perform operation
fdiv.d f31, f1, f2, rne # perform operation
fdiv.d f31, f1, f2, rtz # perform operation
fdiv.d f31, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x7ff7ffffffffffff from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x800fffffffffffff from memory into f3
fdiv.d f13, f27, f3, dyn # perform operation
fdiv.d f13, f27, f3, rdn # perform operation
fdiv.d f13, f27, f3, rmm # perform operation
fdiv.d f13, f27, f3, rne # perform operation
fdiv.d f13, f27, f3, rtz # perform operation
fdiv.d f13, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f27, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x7ff7ffffffffffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0008000000000000 from memory into f15
fdiv.d f25, f28, f15, dyn # perform operation
fdiv.d f25, f28, f15, rdn # perform operation
fdiv.d f25, f28, f15, rmm # perform operation
fdiv.d f25, f28, f15, rne # perform operation
fdiv.d f25, f28, f15, rtz # perform operation
fdiv.d f25, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f28, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x7ff7ffffffffffff from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x8008000000000000 from memory into f21
fdiv.d f16, f23, f21, dyn # perform operation
fdiv.d f16, f23, f21, rdn # perform operation
fdiv.d f16, f23, f21, rmm # perform operation
fdiv.d f16, f23, f21, rne # perform operation
fdiv.d f16, f23, f21, rtz # perform operation
fdiv.d f16, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x7ff7ffffffffffff from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x0000000000000001 from memory into f7
fdiv.d f22, f8, f7, dyn # perform operation
fdiv.d f22, f8, f7, rdn # perform operation
fdiv.d f22, f8, f7, rmm # perform operation
fdiv.d f22, f8, f7, rne # perform operation
fdiv.d f22, f8, f7, rtz # perform operation
fdiv.d f22, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7ff7ffffffffffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x8000000000000001 from memory into f19
fdiv.d f17, f12, f19, dyn # perform operation
fdiv.d f17, f12, f19, rdn # perform operation
fdiv.d f17, f12, f19, rmm # perform operation
fdiv.d f17, f12, f19, rne # perform operation
fdiv.d f17, f12, f19, rtz # perform operation
fdiv.d f17, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff0000000000000 from memory into f22
fdiv.d f28, f14, f22, dyn # perform operation
fdiv.d f28, f14, f22, rdn # perform operation
fdiv.d f28, f14, f22, rmm # perform operation
fdiv.d f28, f14, f22, rne # perform operation
fdiv.d f28, f14, f22, rtz # perform operation
fdiv.d f28, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xfff0000000000000 from memory into f21
fdiv.d f9, f22, f21, dyn # perform operation
fdiv.d f9, f22, f21, rdn # perform operation
fdiv.d f9, f22, f21, rmm # perform operation
fdiv.d f9, f22, f21, rne # perform operation
fdiv.d f9, f22, f21, rtz # perform operation
fdiv.d f9, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff7ffffffffffff from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fdiv.d f5, f13, f10, dyn # perform operation
fdiv.d f5, f13, f10, rdn # perform operation
fdiv.d f5, f13, f10, rmm # perform operation
fdiv.d f5, f13, f10, rne # perform operation
fdiv.d f5, f13, f10, rtz # perform operation
fdiv.d f5, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f13, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff7ffffffffffff from memory into f17
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x7fffffffffffffff from memory into f11
fdiv.d f27, f17, f11, dyn # perform operation
fdiv.d f27, f17, f11, rdn # perform operation
fdiv.d f27, f17, f11, rmm # perform operation
fdiv.d f27, f17, f11, rne # perform operation
fdiv.d f27, f17, f11, rtz # perform operation
fdiv.d f27, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f17, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x7ff7ffffffffffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff8000000000000 from memory into f15
fdiv.d f31, f22, f15, dyn # perform operation
fdiv.d f31, f22, f15, rdn # perform operation
fdiv.d f31, f22, f15, rmm # perform operation
fdiv.d f31, f22, f15, rne # perform operation
fdiv.d f31, f22, f15, rtz # perform operation
fdiv.d f31, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x7ff7ffffffffffff from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x7ff0000000000001 from memory into f31
fdiv.d f1, f15, f31, dyn # perform operation
fdiv.d f1, f15, f31, rdn # perform operation
fdiv.d f1, f15, f31, rmm # perform operation
fdiv.d f1, f15, f31, rne # perform operation
fdiv.d f1, f15, f31, rtz # perform operation
fdiv.d f1, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f15, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff7ffffffffffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x7ff7ffffffffffff from memory into f18
fdiv.d f1, f16, f18, dyn # perform operation
fdiv.d f1, f16, f18, rdn # perform operation
fdiv.d f1, f16, f18, rmm # perform operation
fdiv.d f1, f16, f18, rne # perform operation
fdiv.d f1, f16, f18, rtz # perform operation
fdiv.d f1, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x7ff7ffffffffffff from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000001 from memory into f12
fdiv.d f31, f7, f12, dyn # perform operation
fdiv.d f31, f7, f12, rdn # perform operation
fdiv.d f31, f7, f12, rmm # perform operation
fdiv.d f31, f7, f12, rne # perform operation
fdiv.d f31, f7, f12, rtz # perform operation
fdiv.d f31, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f7, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x7ff7ffffffffffff from memory into f1
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x5a392534a57711ad from memory into f28
fdiv.d f10, f1, f28, dyn # perform operation
fdiv.d f10, f1, f28, rdn # perform operation
fdiv.d f10, f1, f28, rmm # perform operation
fdiv.d f10, f1, f28, rne # perform operation
fdiv.d f10, f1, f28, rtz # perform operation
fdiv.d f10, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ff7ffffffffffff fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff7ffffffffffff from memory into f25
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xa6e895993737426c from memory into f12
fdiv.d f30, f25, f12, dyn # perform operation
fdiv.d f30, f25, f12, rdn # perform operation
fdiv.d f30, f25, f12, rmm # perform operation
fdiv.d f30, f25, f12, rne # perform operation
fdiv.d f30, f25, f12, rtz # perform operation
fdiv.d f30, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f25, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000000 from memory into f28
fdiv.d f5, f19, f28, dyn # perform operation
fdiv.d f5, f19, f28, rdn # perform operation
fdiv.d f5, f19, f28, rmm # perform operation
fdiv.d f5, f19, f28, rne # perform operation
fdiv.d f5, f19, f28, rtz # perform operation
fdiv.d f5, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000000 from memory into f12
fdiv.d f20, f8, f12, dyn # perform operation
fdiv.d f20, f8, f12, rdn # perform operation
fdiv.d f20, f8, f12, rmm # perform operation
fdiv.d f20, f8, f12, rne # perform operation
fdiv.d f20, f8, f12, rtz # perform operation
fdiv.d f20, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f8, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xfff0000000000001 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x3ff0000000000000 from memory into f2
fdiv.d f19, f27, f2, dyn # perform operation
fdiv.d f19, f27, f2, rdn # perform operation
fdiv.d f19, f27, f2, rmm # perform operation
fdiv.d f19, f27, f2, rne # perform operation
fdiv.d f19, f27, f2, rtz # perform operation
fdiv.d f19, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xfff0000000000001 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xbff0000000000000 from memory into f11
fdiv.d f17, f10, f11, dyn # perform operation
fdiv.d f17, f10, f11, rdn # perform operation
fdiv.d f17, f10, f11, rmm # perform operation
fdiv.d f17, f10, f11, rne # perform operation
fdiv.d f17, f10, f11, rtz # perform operation
fdiv.d f17, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0xfff0000000000001 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x3ff8000000000000 from memory into f3
fdiv.d f11, f2, f3, dyn # perform operation
fdiv.d f11, f2, f3, rdn # perform operation
fdiv.d f11, f2, f3, rmm # perform operation
fdiv.d f11, f2, f3, rne # perform operation
fdiv.d f11, f2, f3, rtz # perform operation
fdiv.d f11, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xbff8000000000000 from memory into f23
fdiv.d f17, f13, f23, dyn # perform operation
fdiv.d f17, f13, f23, rdn # perform operation
fdiv.d f17, f13, f23, rmm # perform operation
fdiv.d f17, f13, f23, rne # perform operation
fdiv.d f17, f13, f23, rtz # perform operation
fdiv.d f17, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x4000000000000000 from memory into f20
fdiv.d f5, f19, f20, dyn # perform operation
fdiv.d f5, f19, f20, rdn # perform operation
fdiv.d f5, f19, f20, rmm # perform operation
fdiv.d f5, f19, f20, rne # perform operation
fdiv.d f5, f19, f20, rtz # perform operation
fdiv.d f5, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f19, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xfff0000000000001 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fdiv.d f25, f24, f31, dyn # perform operation
fdiv.d f25, f24, f31, rdn # perform operation
fdiv.d f25, f24, f31, rmm # perform operation
fdiv.d f25, f24, f31, rne # perform operation
fdiv.d f25, f24, f31, rtz # perform operation
fdiv.d f25, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f24, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000001 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x0010000000000000 from memory into f3
fdiv.d f22, f16, f3, dyn # perform operation
fdiv.d f22, f16, f3, rdn # perform operation
fdiv.d f22, f16, f3, rmm # perform operation
fdiv.d f22, f16, f3, rne # perform operation
fdiv.d f22, f16, f3, rtz # perform operation
fdiv.d f22, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f16, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x8010000000000000 from memory into f18
fdiv.d f27, f3, f18, dyn # perform operation
fdiv.d f27, f3, f18, rdn # perform operation
fdiv.d f27, f3, f18, rmm # perform operation
fdiv.d f27, f3, f18, rne # perform operation
fdiv.d f27, f3, f18, rtz # perform operation
fdiv.d f27, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000001 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7fefffffffffffff from memory into f30
fdiv.d f1, f28, f30, dyn # perform operation
fdiv.d f1, f28, f30, rdn # perform operation
fdiv.d f1, f28, f30, rmm # perform operation
fdiv.d f1, f28, f30, rne # perform operation
fdiv.d f1, f28, f30, rtz # perform operation
fdiv.d f1, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff0000000000001 from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xffefffffffffffff from memory into f25
fdiv.d f20, f8, f25, dyn # perform operation
fdiv.d f20, f8, f25, rdn # perform operation
fdiv.d f20, f8, f25, rmm # perform operation
fdiv.d f20, f8, f25, rne # perform operation
fdiv.d f20, f8, f25, rtz # perform operation
fdiv.d f20, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x000fffffffffffff from memory into f20
fdiv.d f16, f30, f20, dyn # perform operation
fdiv.d f16, f30, f20, rdn # perform operation
fdiv.d f16, f30, f20, rmm # perform operation
fdiv.d f16, f30, f20, rne # perform operation
fdiv.d f16, f30, f20, rtz # perform operation
fdiv.d f16, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x800fffffffffffff from memory into f25
fdiv.d f6, f7, f25, dyn # perform operation
fdiv.d f6, f7, f25, rdn # perform operation
fdiv.d f6, f7, f25, rmm # perform operation
fdiv.d f6, f7, f25, rne # perform operation
fdiv.d f6, f7, f25, rtz # perform operation
fdiv.d f6, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0008000000000000 from memory into f28
fdiv.d f23, f20, f28, dyn # perform operation
fdiv.d f23, f20, f28, rdn # perform operation
fdiv.d f23, f20, f28, rmm # perform operation
fdiv.d f23, f20, f28, rne # perform operation
fdiv.d f23, f20, f28, rtz # perform operation
fdiv.d f23, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f20, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff0000000000001 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x8008000000000000 from memory into f26
fdiv.d f13, f30, f26, dyn # perform operation
fdiv.d f13, f30, f26, rdn # perform operation
fdiv.d f13, f30, f26, rmm # perform operation
fdiv.d f13, f30, f26, rne # perform operation
fdiv.d f13, f30, f26, rtz # perform operation
fdiv.d f13, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f13, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f13, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x0000000000000001 from memory into f19
fdiv.d f1, f9, f19, dyn # perform operation
fdiv.d f1, f9, f19, rdn # perform operation
fdiv.d f1, f9, f19, rmm # perform operation
fdiv.d f1, f9, f19, rne # perform operation
fdiv.d f1, f9, f19, rtz # perform operation
fdiv.d f1, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0xfff0000000000001 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x8000000000000001 from memory into f9
fdiv.d f20, f13, f9, dyn # perform operation
fdiv.d f20, f13, f9, rdn # perform operation
fdiv.d f20, f13, f9, rmm # perform operation
fdiv.d f20, f13, f9, rne # perform operation
fdiv.d f20, f13, f9, rtz # perform operation
fdiv.d f20, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f13, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xfff0000000000001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f25, 0(x2) # load 0x7ff0000000000000 from memory into f25
fdiv.d f23, f3, f25, dyn # perform operation
fdiv.d f23, f3, f25, rdn # perform operation
fdiv.d f23, f3, f25, rmm # perform operation
fdiv.d f23, f3, f25, rne # perform operation
fdiv.d f23, f3, f25, rtz # perform operation
fdiv.d f23, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f23, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f23, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0xfff0000000000000 from memory into f12
fdiv.d f29, f6, f12, dyn # perform operation
fdiv.d f29, f6, f12, rdn # perform operation
fdiv.d f29, f6, f12, rmm # perform operation
fdiv.d f29, f6, f12, rne # perform operation
fdiv.d f29, f6, f12, rtz # perform operation
fdiv.d f29, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xfff0000000000001 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x7ff8000000000000 from memory into f19
fdiv.d f17, f7, f19, dyn # perform operation
fdiv.d f17, f7, f19, rdn # perform operation
fdiv.d f17, f7, f19, rmm # perform operation
fdiv.d f17, f7, f19, rne # perform operation
fdiv.d f17, f7, f19, rtz # perform operation
fdiv.d f17, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f17, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f17, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f17, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f17, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f17, f7, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xfff0000000000001 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fdiv.d f29, f22, f12, dyn # perform operation
fdiv.d f29, f22, f12, rdn # perform operation
fdiv.d f29, f22, f12, rmm # perform operation
fdiv.d f29, f22, f12, rne # perform operation
fdiv.d f29, f22, f12, rtz # perform operation
fdiv.d f29, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xfff0000000000001 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xfff8000000000000 from memory into f1
fdiv.d f21, f6, f1, dyn # perform operation
fdiv.d f21, f6, f1, rdn # perform operation
fdiv.d f21, f6, f1, rmm # perform operation
fdiv.d f21, f6, f1, rne # perform operation
fdiv.d f21, f6, f1, rtz # perform operation
fdiv.d f21, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xfff0000000000001 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x7ff0000000000001 from memory into f30
fdiv.d f1, f28, f30, dyn # perform operation
fdiv.d f1, f28, f30, rdn # perform operation
fdiv.d f1, f28, f30, rmm # perform operation
fdiv.d f1, f28, f30, rne # perform operation
fdiv.d f1, f28, f30, rtz # perform operation
fdiv.d f1, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xfff0000000000001 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x7ff7ffffffffffff from memory into f5
fdiv.d f1, f11, f5, dyn # perform operation
fdiv.d f1, f11, f5, rdn # perform operation
fdiv.d f1, f11, f5, rmm # perform operation
fdiv.d f1, f11, f5, rne # perform operation
fdiv.d f1, f11, f5, rtz # perform operation
fdiv.d f1, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f1, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f1, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0xfff0000000000001 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xfff0000000000001 from memory into f19
fdiv.d f2, f15, f19, dyn # perform operation
fdiv.d f2, f15, f19, rdn # perform operation
fdiv.d f2, f15, f19, rmm # perform operation
fdiv.d f2, f15, f19, rne # perform operation
fdiv.d f2, f15, f19, rtz # perform operation
fdiv.d f2, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f2, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f2, f15, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xfff0000000000001 from memory into f20
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f3, 0(x2) # load 0x5a392534a57711ad from memory into f3
fdiv.d f9, f20, f3, dyn # perform operation
fdiv.d f9, f20, f3, rdn # perform operation
fdiv.d f9, f20, f3, rmm # perform operation
fdiv.d f9, f20, f3, rne # perform operation
fdiv.d f9, f20, f3, rtz # perform operation
fdiv.d f9, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xfff0000000000001 fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xfff0000000000001 from memory into f9
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
fdiv.d f3, f9, f8, dyn # perform operation
fdiv.d f3, f9, f8, rdn # perform operation
fdiv.d f3, f9, f8, rmm # perform operation
fdiv.d f3, f9, f8, rne # perform operation
fdiv.d f3, f9, f8, rtz # perform operation
fdiv.d f3, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x5a392534a57711ad from memory into f1
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f15, 0(x2) # load 0x0000000000000000 from memory into f15
fdiv.d f9, f1, f15, dyn # perform operation
fdiv.d f9, f1, f15, rdn # perform operation
fdiv.d f9, f1, f15, rmm # perform operation
fdiv.d f9, f1, f15, rne # perform operation
fdiv.d f9, f1, f15, rtz # perform operation
fdiv.d f9, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f1, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f11, 0(x2) # load 0x5a392534a57711ad from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x8000000000000000 from memory into f10
fdiv.d f6, f11, f10, dyn # perform operation
fdiv.d f6, f11, f10, rdn # perform operation
fdiv.d f6, f11, f10, rmm # perform operation
fdiv.d f6, f11, f10, rne # perform operation
fdiv.d f6, f11, f10, rtz # perform operation
fdiv.d f6, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x3ff0000000000000 from memory into f16
fdiv.d f5, f20, f16, dyn # perform operation
fdiv.d f5, f20, f16, rdn # perform operation
fdiv.d f5, f20, f16, rmm # perform operation
fdiv.d f5, f20, f16, rne # perform operation
fdiv.d f5, f20, f16, rtz # perform operation
fdiv.d f5, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f5, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f5, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f5, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f5, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f5, f20, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f27, 0(x2) # load 0xbff0000000000000 from memory into f27
fdiv.d f12, f29, f27, dyn # perform operation
fdiv.d f12, f29, f27, rdn # perform operation
fdiv.d f12, f29, f27, rmm # perform operation
fdiv.d f12, f29, f27, rne # perform operation
fdiv.d f12, f29, f27, rtz # perform operation
fdiv.d f12, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x3ff8000000000000 from memory into f14
fdiv.d f8, f30, f14, dyn # perform operation
fdiv.d f8, f30, f14, rdn # perform operation
fdiv.d f8, f30, f14, rmm # perform operation
fdiv.d f8, f30, f14, rne # perform operation
fdiv.d f8, f30, f14, rtz # perform operation
fdiv.d f8, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xbff8000000000000 from memory into f21
fdiv.d f20, f5, f21, dyn # perform operation
fdiv.d f20, f5, f21, rdn # perform operation
fdiv.d f20, f5, f21, rmm # perform operation
fdiv.d f20, f5, f21, rne # perform operation
fdiv.d f20, f5, f21, rtz # perform operation
fdiv.d f20, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f5, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x5a392534a57711ad from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f2, 0(x2) # load 0x4000000000000000 from memory into f2
fdiv.d f22, f24, f2, dyn # perform operation
fdiv.d f22, f24, f2, rdn # perform operation
fdiv.d f22, f24, f2, rmm # perform operation
fdiv.d f22, f24, f2, rne # perform operation
fdiv.d f22, f24, f2, rtz # perform operation
fdiv.d f22, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f22, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f22, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f22, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f22, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f22, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x5a392534a57711ad from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xc000000000000000 from memory into f28
fdiv.d f9, f26, f28, dyn # perform operation
fdiv.d f9, f26, f28, rdn # perform operation
fdiv.d f9, f26, f28, rmm # perform operation
fdiv.d f9, f26, f28, rne # perform operation
fdiv.d f9, f26, f28, rtz # perform operation
fdiv.d f9, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f26, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x0010000000000000 from memory into f31
fdiv.d f26, f16, f31, dyn # perform operation
fdiv.d f26, f16, f31, rdn # perform operation
fdiv.d f26, f16, f31, rmm # perform operation
fdiv.d f26, f16, f31, rne # perform operation
fdiv.d f26, f16, f31, rtz # perform operation
fdiv.d f26, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f9, 0(x2) # load 0x5a392534a57711ad from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x8010000000000000 from memory into f8
fdiv.d f15, f9, f8, dyn # perform operation
fdiv.d f15, f9, f8, rdn # perform operation
fdiv.d f15, f9, f8, rmm # perform operation
fdiv.d f15, f9, f8, rne # perform operation
fdiv.d f15, f9, f8, rtz # perform operation
fdiv.d f15, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f9, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x7fefffffffffffff from memory into f6
fdiv.d f18, f16, f6, dyn # perform operation
fdiv.d f18, f16, f6, rdn # perform operation
fdiv.d f18, f16, f6, rmm # perform operation
fdiv.d f18, f16, f6, rne # perform operation
fdiv.d f18, f16, f6, rtz # perform operation
fdiv.d f18, f16, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f16, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f16, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f16, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f16, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f16, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xffefffffffffffff from memory into f7
fdiv.d f15, f14, f7, dyn # perform operation
fdiv.d f15, f14, f7, rdn # perform operation
fdiv.d f15, f14, f7, rmm # perform operation
fdiv.d f15, f14, f7, rne # perform operation
fdiv.d f15, f14, f7, rtz # perform operation
fdiv.d f15, f14, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f14, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f14, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f14, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f14, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f14, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f8, 0(x2) # load 0x5a392534a57711ad from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x000fffffffffffff from memory into f26
fdiv.d f20, f8, f26, dyn # perform operation
fdiv.d f20, f8, f26, rdn # perform operation
fdiv.d f20, f8, f26, rmm # perform operation
fdiv.d f20, f8, f26, rne # perform operation
fdiv.d f20, f8, f26, rtz # perform operation
fdiv.d f20, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x800fffffffffffff from memory into f13
fdiv.d f11, f5, f13, dyn # perform operation
fdiv.d f11, f5, f13, rdn # perform operation
fdiv.d f11, f5, f13, rmm # perform operation
fdiv.d f11, f5, f13, rne # perform operation
fdiv.d f11, f5, f13, rtz # perform operation
fdiv.d f11, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f11, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f11, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f11, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f11, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f11, f5, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x0008000000000000 from memory into f24
fdiv.d f7, f20, f24, dyn # perform operation
fdiv.d f7, f20, f24, rdn # perform operation
fdiv.d f7, f20, f24, rmm # perform operation
fdiv.d f7, f20, f24, rne # perform operation
fdiv.d f7, f20, f24, rtz # perform operation
fdiv.d f7, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x5a392534a57711ad from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fdiv.d f9, f13, f28, dyn # perform operation
fdiv.d f9, f13, f28, rdn # perform operation
fdiv.d f9, f13, f28, rmm # perform operation
fdiv.d f9, f13, f28, rne # perform operation
fdiv.d f9, f13, f28, rtz # perform operation
fdiv.d f9, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f13, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f31, 0(x2) # load 0x5a392534a57711ad from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f23, 0(x2) # load 0x0000000000000001 from memory into f23
fdiv.d f27, f31, f23, dyn # perform operation
fdiv.d f27, f31, f23, rdn # perform operation
fdiv.d f27, f31, f23, rmm # perform operation
fdiv.d f27, f31, f23, rne # perform operation
fdiv.d f27, f31, f23, rtz # perform operation
fdiv.d f27, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f31, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f27, 0(x2) # load 0x5a392534a57711ad from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x8000000000000001 from memory into f12
fdiv.d f8, f27, f12, dyn # perform operation
fdiv.d f8, f27, f12, rdn # perform operation
fdiv.d f8, f27, f12, rmm # perform operation
fdiv.d f8, f27, f12, rne # perform operation
fdiv.d f8, f27, f12, rtz # perform operation
fdiv.d f8, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x7ff0000000000000 from memory into f24
fdiv.d f12, f14, f24, dyn # perform operation
fdiv.d f12, f14, f24, rdn # perform operation
fdiv.d f12, f14, f24, rmm # perform operation
fdiv.d f12, f14, f24, rne # perform operation
fdiv.d f12, f14, f24, rtz # perform operation
fdiv.d f12, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f21, 0(x2) # load 0x5a392534a57711ad from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xfff0000000000000 from memory into f26
fdiv.d f7, f21, f26, dyn # perform operation
fdiv.d f7, f21, f26, rdn # perform operation
fdiv.d f7, f21, f26, rmm # perform operation
fdiv.d f7, f21, f26, rne # perform operation
fdiv.d f7, f21, f26, rtz # perform operation
fdiv.d f7, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x7ff8000000000000 from memory into f10
fdiv.d f12, f20, f10, dyn # perform operation
fdiv.d f12, f20, f10, rdn # perform operation
fdiv.d f12, f20, f10, rmm # perform operation
fdiv.d f12, f20, f10, rne # perform operation
fdiv.d f12, f20, f10, rtz # perform operation
fdiv.d f12, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f12, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f12, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f12, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f12, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f12, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f18, 0(x2) # load 0x5a392534a57711ad from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f26, 0(x2) # load 0x7fffffffffffffff from memory into f26
fdiv.d f25, f18, f26, dyn # perform operation
fdiv.d f25, f18, f26, rdn # perform operation
fdiv.d f25, f18, f26, rmm # perform operation
fdiv.d f25, f18, f26, rne # perform operation
fdiv.d f25, f18, f26, rtz # perform operation
fdiv.d f25, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f18, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x5a392534a57711ad from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xfff8000000000000 from memory into f8
fdiv.d f18, f20, f8, dyn # perform operation
fdiv.d f18, f20, f8, rdn # perform operation
fdiv.d f18, f20, f8, rmm # perform operation
fdiv.d f18, f20, f8, rne # perform operation
fdiv.d f18, f20, f8, rtz # perform operation
fdiv.d f18, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f18, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f18, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f18, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f18, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f18, f20, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f30, 0(x2) # load 0x5a392534a57711ad from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x7ff0000000000001 from memory into f16
fdiv.d f25, f30, f16, dyn # perform operation
fdiv.d f25, f30, f16, rdn # perform operation
fdiv.d f25, f30, f16, rmm # perform operation
fdiv.d f25, f30, f16, rne # perform operation
fdiv.d f25, f30, f16, rtz # perform operation
fdiv.d f25, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f5, 0(x2) # load 0x5a392534a57711ad from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7ff7ffffffffffff from memory into f14
fdiv.d f21, f5, f14, dyn # perform operation
fdiv.d f21, f5, f14, rdn # perform operation
fdiv.d f21, f5, f14, rmm # perform operation
fdiv.d f21, f5, f14, rne # perform operation
fdiv.d f21, f5, f14, rtz # perform operation
fdiv.d f21, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f21, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f21, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f21, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f21, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f21, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f29, 0(x2) # load 0x5a392534a57711ad from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0xfff0000000000001 from memory into f17
fdiv.d f26, f29, f17, dyn # perform operation
fdiv.d f26, f29, f17, rdn # perform operation
fdiv.d f26, f29, f17, rmm # perform operation
fdiv.d f26, f29, f17, rne # perform operation
fdiv.d f26, f29, f17, rtz # perform operation
fdiv.d f26, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x5a392534a57711ad from memory into f14
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x5a392534a57711ad from memory into f6
fdiv.d f7, f14, f6, dyn # perform operation
fdiv.d f7, f14, f6, rdn # perform operation
fdiv.d f7, f14, f6, rmm # perform operation
fdiv.d f7, f14, f6, rne # perform operation
fdiv.d f7, f14, f6, rtz # perform operation
fdiv.d f7, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x5a392534a57711ad fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f19, 0(x2) # load 0x5a392534a57711ad from memory into f19
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f21, 0(x2) # load 0xa6e895993737426c from memory into f21
fdiv.d f14, f19, f21, dyn # perform operation
fdiv.d f14, f19, f21, rdn # perform operation
fdiv.d f14, f19, f21, rmm # perform operation
fdiv.d f14, f19, f21, rne # perform operation
fdiv.d f14, f19, f21, rtz # perform operation
fdiv.d f14, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f14, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f14, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f14, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f14, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f14, f19, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000000
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x0000000000000000 from memory into f13
fdiv.d f24, f22, f13, dyn # perform operation
fdiv.d f24, f22, f13, rdn # perform operation
fdiv.d f24, f22, f13, rmm # perform operation
fdiv.d f24, f22, f13, rne # perform operation
fdiv.d f24, f22, f13, rtz # perform operation
fdiv.d f24, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f22, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xa6e895993737426c from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000000
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0x8000000000000000 from memory into f7
fdiv.d f27, f10, f7, dyn # perform operation
fdiv.d f27, f10, f7, rdn # perform operation
fdiv.d f27, f10, f7, rmm # perform operation
fdiv.d f27, f10, f7, rne # perform operation
fdiv.d f27, f10, f7, rtz # perform operation
fdiv.d f27, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f27, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f27, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f27, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f27, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f27, f10, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xa6e895993737426c from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff00000 # load x2 with 32 LSBs of 0x3ff0000000000000
sw x3, 4(x2) # store x4 (0x3ff00000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x3ff0000000000000 from memory into f24
fdiv.d f30, f31, f24, dyn # perform operation
fdiv.d f30, f31, f24, rdn # perform operation
fdiv.d f30, f31, f24, rmm # perform operation
fdiv.d f30, f31, f24, rne # perform operation
fdiv.d f30, f31, f24, rtz # perform operation
fdiv.d f30, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xa6e895993737426c from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff00000 # load x2 with 32 LSBs of 0xbff0000000000000
sw x3, 4(x2) # store x4 (0xbff00000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0xbff0000000000000 from memory into f10
fdiv.d f8, f16, f10, dyn # perform operation
fdiv.d f8, f16, f10, rdn # perform operation
fdiv.d f8, f16, f10, rmm # perform operation
fdiv.d f8, f16, f10, rne # perform operation
fdiv.d f8, f16, f10, rtz # perform operation
fdiv.d f8, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f8, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f8, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f8, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f8, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f8, f16, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x3ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f22, 0(x2) # load 0xa6e895993737426c from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x3ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x3ff80000 # load x2 with 32 LSBs of 0x3ff8000000000000
sw x3, 4(x2) # store x4 (0x3ff80000) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x3ff8000000000000 from memory into f10
fdiv.d f20, f22, f10, dyn # perform operation
fdiv.d f20, f22, f10, rdn # perform operation
fdiv.d f20, f22, f10, rmm # perform operation
fdiv.d f20, f22, f10, rne # perform operation
fdiv.d f20, f22, f10, rtz # perform operation
fdiv.d f20, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xbff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f6, 0(x2) # load 0xa6e895993737426c from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xbff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xbff80000 # load x2 with 32 LSBs of 0xbff8000000000000
sw x3, 4(x2) # store x4 (0xbff80000) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xbff8000000000000 from memory into f7
fdiv.d f10, f6, f7, dyn # perform operation
fdiv.d f10, f6, f7, rdn # perform operation
fdiv.d f10, f6, f7, rmm # perform operation
fdiv.d f10, f6, f7, rne # perform operation
fdiv.d f10, f6, f7, rtz # perform operation
fdiv.d f10, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x4000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xa6e895993737426c from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x4000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x40000000 # load x2 with 32 LSBs of 0x4000000000000000
sw x3, 4(x2) # store x4 (0x40000000) in memory 4 bytes after x3
fld f24, 0(x2) # load 0x4000000000000000 from memory into f24
fdiv.d f25, f30, f24, dyn # perform operation
fdiv.d f25, f30, f24, rdn # perform operation
fdiv.d f25, f30, f24, rmm # perform operation
fdiv.d f25, f30, f24, rne # perform operation
fdiv.d f25, f30, f24, rtz # perform operation
fdiv.d f25, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xc000000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f18, 0(x2) # load 0xa6e895993737426c from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xc000000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xc0000000 # load x2 with 32 LSBs of 0xc000000000000000
sw x3, 4(x2) # store x4 (0xc0000000) in memory 4 bytes after x3
fld f31, 0(x2) # load 0xc000000000000000 from memory into f31
fdiv.d f20, f18, f31, dyn # perform operation
fdiv.d f20, f18, f31, rdn # perform operation
fdiv.d f20, f18, f31, rmm # perform operation
fdiv.d f20, f18, f31, rne # perform operation
fdiv.d f20, f18, f31, rtz # perform operation
fdiv.d f20, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f18, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x10000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00100000 # load x2 with 32 LSBs of 0x0010000000000000
sw x3, 4(x2) # store x4 (0x00100000) in memory 4 bytes after x3
fld f6, 0(x2) # load 0x0010000000000000 from memory into f6
fdiv.d f26, f23, f6, dyn # perform operation
fdiv.d f26, f23, f6, rdn # perform operation
fdiv.d f26, f23, f6, rmm # perform operation
fdiv.d f26, f23, f6, rne # perform operation
fdiv.d f26, f23, f6, rtz # perform operation
fdiv.d f26, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f26, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f26, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f26, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f26, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f26, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8010000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8010000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80100000 # load x2 with 32 LSBs of 0x8010000000000000
sw x3, 4(x2) # store x4 (0x80100000) in memory 4 bytes after x3
fld f1, 0(x2) # load 0x8010000000000000 from memory into f1
fdiv.d f25, f26, f1, dyn # perform operation
fdiv.d f25, f26, f1, rdn # perform operation
fdiv.d f25, f26, f1, rmm # perform operation
fdiv.d f25, f26, f1, rne # perform operation
fdiv.d f25, f26, f1, rtz # perform operation
fdiv.d f25, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f25, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f25, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fefffff # load x2 with 32 LSBs of 0x7fefffffffffffff
sw x3, 4(x2) # store x4 (0x7fefffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x7fefffffffffffff from memory into f14
fdiv.d f29, f7, f14, dyn # perform operation
fdiv.d f29, f7, f14, rdn # perform operation
fdiv.d f29, f7, f14, rmm # perform operation
fdiv.d f29, f7, f14, rne # perform operation
fdiv.d f29, f7, f14, rtz # perform operation
fdiv.d f29, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f29, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f29, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f29, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f29, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f29, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xffefffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0xffefffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0xffefffff # load x2 with 32 LSBs of 0xffefffffffffffff
sw x3, 4(x2) # store x4 (0xffefffff) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xffefffffffffffff from memory into f3
fdiv.d f7, f25, f3, dyn # perform operation
fdiv.d f7, f25, f3, rdn # perform operation
fdiv.d f7, f25, f3, rmm # perform operation
fdiv.d f7, f25, f3, rne # perform operation
fdiv.d f7, f25, f3, rtz # perform operation
fdiv.d f7, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f8, 0(x2) # load 0xa6e895993737426c from memory into f8
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x000fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x000fffff # load x2 with 32 LSBs of 0x000fffffffffffff
sw x3, 4(x2) # store x4 (0x000fffff) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x000fffffffffffff from memory into f14
fdiv.d f31, f8, f14, dyn # perform operation
fdiv.d f31, f8, f14, rdn # perform operation
fdiv.d f31, f8, f14, rmm # perform operation
fdiv.d f31, f8, f14, rne # perform operation
fdiv.d f31, f8, f14, rtz # perform operation
fdiv.d f31, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f31, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f31, f8, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x800fffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f3, 0(x2) # load 0xa6e895993737426c from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x800fffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x800fffff # load x2 with 32 LSBs of 0x800fffffffffffff
sw x3, 4(x2) # store x4 (0x800fffff) in memory 4 bytes after x3
fld f10, 0(x2) # load 0x800fffffffffffff from memory into f10
fdiv.d f28, f3, f10, dyn # perform operation
fdiv.d f28, f3, f10, rdn # perform operation
fdiv.d f28, f3, f10, rmm # perform operation
fdiv.d f28, f3, f10, rne # perform operation
fdiv.d f28, f3, f10, rtz # perform operation
fdiv.d f28, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f28, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f28, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f28, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f28, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f28, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f23, 0(x2) # load 0xa6e895993737426c from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x0008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x00080000 # load x2 with 32 LSBs of 0x0008000000000000
sw x3, 4(x2) # store x4 (0x00080000) in memory 4 bytes after x3
fld f14, 0(x2) # load 0x0008000000000000 from memory into f14
fdiv.d f7, f23, f14, dyn # perform operation
fdiv.d f7, f23, f14, rdn # perform operation
fdiv.d f7, f23, f14, rmm # perform operation
fdiv.d f7, f23, f14, rne # perform operation
fdiv.d f7, f23, f14, rtz # perform operation
fdiv.d f7, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f7, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f7, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f7, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f7, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f7, f23, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8008000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f7, 0(x2) # load 0xa6e895993737426c from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x8008000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x80080000 # load x2 with 32 LSBs of 0x8008000000000000
sw x3, 4(x2) # store x4 (0x80080000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x8008000000000000 from memory into f28
fdiv.d f30, f7, f28, dyn # perform operation
fdiv.d f30, f7, f28, rdn # perform operation
fdiv.d f30, f7, f28, rmm # perform operation
fdiv.d f30, f7, f28, rne # perform operation
fdiv.d f30, f7, f28, rtz # perform operation
fdiv.d f30, f7, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f7, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f7, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f7, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f7, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f7, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x0000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x00000000 # load x2 with 32 LSBs of 0x0000000000000001
sw x3, 4(x2) # store x4 (0x00000000) in memory 4 bytes after x3
fld f28, 0(x2) # load 0x0000000000000001 from memory into f28
fdiv.d f24, f1, f28, dyn # perform operation
fdiv.d f24, f1, f28, rdn # perform operation
fdiv.d f24, f1, f28, rmm # perform operation
fdiv.d f24, f1, f28, rne # perform operation
fdiv.d f24, f1, f28, rtz # perform operation
fdiv.d f24, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x8000000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x8000000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x80000000 # load x2 with 32 LSBs of 0x8000000000000001
sw x3, 4(x2) # store x4 (0x80000000) in memory 4 bytes after x3
fld f22, 0(x2) # load 0x8000000000000001 from memory into f22
fdiv.d f20, f19, f22, dyn # perform operation
fdiv.d f20, f19, f22, rdn # perform operation
fdiv.d f20, f19, f22, rmm # perform operation
fdiv.d f20, f19, f22, rne # perform operation
fdiv.d f20, f19, f22, rtz # perform operation
fdiv.d f20, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f20, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f20, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f26, 0(x2) # load 0xa6e895993737426c from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000000
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff0000000000000 from memory into f20
fdiv.d f15, f26, f20, dyn # perform operation
fdiv.d f15, f26, f20, rdn # perform operation
fdiv.d f15, f26, f20, rmm # perform operation
fdiv.d f15, f26, f20, rne # perform operation
fdiv.d f15, f26, f20, rtz # perform operation
fdiv.d f15, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f15, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f15, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f15, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f15, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f15, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f24, 0(x2) # load 0xa6e895993737426c from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff0000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000000
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xfff0000000000000 from memory into f5
fdiv.d f30, f24, f5, dyn # perform operation
fdiv.d f30, f24, f5, rdn # perform operation
fdiv.d f30, f24, f5, rmm # perform operation
fdiv.d f30, f24, f5, rne # perform operation
fdiv.d f30, f24, f5, rtz # perform operation
fdiv.d f30, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f30, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f30, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f28, 0(x2) # load 0xa6e895993737426c from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0x7ff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0x7ff80000 # load x2 with 32 LSBs of 0x7ff8000000000000
sw x3, 4(x2) # store x4 (0x7ff80000) in memory 4 bytes after x3
fld f13, 0(x2) # load 0x7ff8000000000000 from memory into f13
fdiv.d f24, f28, f13, dyn # perform operation
fdiv.d f24, f28, f13, rdn # perform operation
fdiv.d f24, f28, f13, rmm # perform operation
fdiv.d f24, f28, f13, rne # perform operation
fdiv.d f24, f28, f13, rtz # perform operation
fdiv.d f24, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f24, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f24, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f24, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f24, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f24, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7fffffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f5, 0(x2) # load 0xa6e895993737426c from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7fffffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7fffffff # load x2 with 32 LSBs of 0x7fffffffffffffff
sw x3, 4(x2) # store x4 (0x7fffffff) in memory 4 bytes after x3
fld f12, 0(x2) # load 0x7fffffffffffffff from memory into f12
fdiv.d f19, f5, f12, dyn # perform operation
fdiv.d f19, f5, f12, rdn # perform operation
fdiv.d f19, f5, f12, rmm # perform operation
fdiv.d f19, f5, f12, rne # perform operation
fdiv.d f19, f5, f12, rtz # perform operation
fdiv.d f19, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff8000000000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f20, 0(x2) # load 0xa6e895993737426c from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with 32 MSBs 0xfff8000000000000
sw x3, 0(x2) # store x3 (0x00000000) in memory
li x3, 0xfff80000 # load x2 with 32 LSBs of 0xfff8000000000000
sw x3, 4(x2) # store x4 (0xfff80000) in memory 4 bytes after x3
fld f30, 0(x2) # load 0xfff8000000000000 from memory into f30
fdiv.d f6, f20, f30, dyn # perform operation
fdiv.d f6, f20, f30, rdn # perform operation
fdiv.d f6, f20, f30, rmm # perform operation
fdiv.d f6, f20, f30, rne # perform operation
fdiv.d f6, f20, f30, rtz # perform operation
fdiv.d f6, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f6, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f6, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f6, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f6, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f6, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f9, 0(x2) # load 0xa6e895993737426c from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0x7ff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0x7ff00000 # load x2 with 32 LSBs of 0x7ff0000000000001
sw x3, 4(x2) # store x4 (0x7ff00000) in memory 4 bytes after x3
fld f17, 0(x2) # load 0x7ff0000000000001 from memory into f17
fdiv.d f3, f9, f17, dyn # perform operation
fdiv.d f3, f9, f17, rdn # perform operation
fdiv.d f3, f9, f17, rmm # perform operation
fdiv.d f3, f9, f17, rne # perform operation
fdiv.d f3, f9, f17, rtz # perform operation
fdiv.d f3, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f3, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f3, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f3, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f3, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f3, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x7ff7ffffffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f25, 0(x2) # load 0xa6e895993737426c from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with 32 MSBs 0x7ff7ffffffffffff
sw x3, 0(x2) # store x3 (0xffffffff) in memory
li x3, 0x7ff7ffff # load x2 with 32 LSBs of 0x7ff7ffffffffffff
sw x3, 4(x2) # store x4 (0x7ff7ffff) in memory 4 bytes after x3
fld f20, 0(x2) # load 0x7ff7ffffffffffff from memory into f20
fdiv.d f9, f25, f20, dyn # perform operation
fdiv.d f9, f25, f20, rdn # perform operation
fdiv.d f9, f25, f20, rmm # perform operation
fdiv.d f9, f25, f20, rne # perform operation
fdiv.d f9, f25, f20, rtz # perform operation
fdiv.d f9, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f9, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f9, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f9, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f9, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f9, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xfff0000000000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f11, 0(x2) # load 0xa6e895993737426c from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with 32 MSBs 0xfff0000000000001
sw x3, 0(x2) # store x3 (0x00000001) in memory
li x3, 0xfff00000 # load x2 with 32 LSBs of 0xfff0000000000001
sw x3, 4(x2) # store x4 (0xfff00000) in memory 4 bytes after x3
fld f16, 0(x2) # load 0xfff0000000000001 from memory into f16
fdiv.d f19, f11, f16, dyn # perform operation
fdiv.d f19, f11, f16, rdn # perform operation
fdiv.d f19, f11, f16, rmm # perform operation
fdiv.d f19, f11, f16, rne # perform operation
fdiv.d f19, f11, f16, rtz # perform operation
fdiv.d f19, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f19, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f19, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f19, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f19, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f19, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0x5a392534a57711ad)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
la x2, scratch
li x3, 0xa57711ad # load x3 with 32 MSBs 0x5a392534a57711ad
sw x3, 0(x2) # store x3 (0xa57711ad) in memory
li x3, 0x5a392534 # load x2 with 32 LSBs of 0x5a392534a57711ad
sw x3, 4(x2) # store x4 (0x5a392534) in memory 4 bytes after x3
fld f16, 0(x2) # load 0x5a392534a57711ad from memory into f16
fdiv.d f10, f19, f16, dyn # perform operation
fdiv.d f10, f19, f16, rdn # perform operation
fdiv.d f10, f19, f16, rmm # perform operation
fdiv.d f10, f19, f16, rne # perform operation
fdiv.d f10, f19, f16, rtz # perform operation
fdiv.d f10, f19, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f10, f19, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f10, f19, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f10, f19, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f10, f19, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f10, f19, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xa6e895993737426c fs2 = 0xa6e895993737426c)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f1, 0(x2) # load 0xa6e895993737426c from memory into f1
la x2, scratch
li x3, 0x3737426c # load x3 with 32 MSBs 0xa6e895993737426c
sw x3, 0(x2) # store x3 (0x3737426c) in memory
li x3, 0xa6e89599 # load x2 with 32 LSBs of 0xa6e895993737426c
sw x3, 4(x2) # store x4 (0xa6e89599) in memory 4 bytes after x3
fld f19, 0(x2) # load 0xa6e895993737426c from memory into f19
fdiv.d f16, f1, f19, dyn # perform operation
fdiv.d f16, f1, f19, rdn # perform operation
fdiv.d f16, f1, f19, rmm # perform operation
fdiv.d f16, f1, f19, rne # perform operation
fdiv.d f16, f1, f19, rtz # perform operation
fdiv.d f16, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fdiv.d f16, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fdiv.d f16, f1, f19 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
