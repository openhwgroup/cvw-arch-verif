///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/lockstep/rv32/F/WALLY-COV-fmadd.s.S
// David_Harris@hmc.edu

 # testgen_header.S
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

#include "macros.h"

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

# initialize signature pointer
la x4, begin_signature

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cp_gpr/fpr_hazard nohaz test
add x18, x1, x20 # perform first operation
fmadd.s f21, f29, f26, f17 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x28, x30, x19 # perform first operation
fmadd.s f31, f9, f24, f29 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard nohaz test
add x2, x10, x9 # perform first operation
fmadd.s f31, f6, f29, f5 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f31, f15, f26 # perform first operation
fmadd.s f26, f31, f23, f1 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f7, f14, f8 # perform first operation
fmadd.s f7, f28, f7, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard raw test
fmul.s f25, f27, f12 # perform first operation
fmadd.s f25, f1, f2, f25 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f21, f16, f7 # perform first operation
fmadd.s f21, f15, f18, f24 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f15, f5, f14 # perform first operation
fmadd.s f15, f23, f17, f2 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard waw test
fmul.s f5, f7, f31 # perform first operation
fmadd.s f5, f10, f1, f8 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f14, f3, f30 # perform first operation
fmadd.s f3, f18, f29, f13 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f25, f13, f2 # perform first operation
fmadd.s f2, f24, f16, f3 # perform second (triggering) operation

# Testcase cp_gpr/fpr_hazard war test
fmul.s f28, f29, f20 # perform first operation
fmadd.s f15, f26, f10, f30 # perform second (triggering) operation

# Testcase cp_fs1 (Test source fs1 = f0)
la x2, scratch
li x3, 0x4688d034 # load x3 with value 0x4688d034
sw x3, 0(x2) # store 0x4688d034 in memory
flw f0, 0(x2) # load 0x4688d034 from memory into f0
la x2, scratch
li x3, 0xace977b6 # load x3 with value 0xace977b6
sw x3, 0(x2) # store 0xace977b6 in memory
flw f17, 0(x2) # load 0xace977b6 from memory into f17
la x2, scratch
li x3, 0x05e65af8 # load x3 with value 0x05e65af8
sw x3, 0(x2) # store 0x05e65af8 in memory
flw f3, 0(x2) # load 0x05e65af8 from memory into f3
fmadd.s f31, f0, f17, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
la x2, scratch
li x3, 0x8c1d2a6f # load x3 with value 0x8c1d2a6f
sw x3, 0(x2) # store 0x8c1d2a6f in memory
flw f1, 0(x2) # load 0x8c1d2a6f from memory into f1
la x2, scratch
li x3, 0x82213b8b # load x3 with value 0x82213b8b
sw x3, 0(x2) # store 0x82213b8b in memory
flw f31, 0(x2) # load 0x82213b8b from memory into f31
la x2, scratch
li x3, 0x79d877e1 # load x3 with value 0x79d877e1
sw x3, 0(x2) # store 0x79d877e1 in memory
flw f18, 0(x2) # load 0x79d877e1 from memory into f18
fmadd.s f6, f1, f31, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
la x2, scratch
li x3, 0x787373f7 # load x3 with value 0x787373f7
sw x3, 0(x2) # store 0x787373f7 in memory
flw f2, 0(x2) # load 0x787373f7 from memory into f2
la x2, scratch
li x3, 0x8e8b0277 # load x3 with value 0x8e8b0277
sw x3, 0(x2) # store 0x8e8b0277 in memory
flw f18, 0(x2) # load 0x8e8b0277 from memory into f18
la x2, scratch
li x3, 0x19fe54ed # load x3 with value 0x19fe54ed
sw x3, 0(x2) # store 0x19fe54ed in memory
flw f13, 0(x2) # load 0x19fe54ed from memory into f13
fmadd.s f1, f2, f18, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
la x2, scratch
li x3, 0xacf96392 # load x3 with value 0xacf96392
sw x3, 0(x2) # store 0xacf96392 in memory
flw f3, 0(x2) # load 0xacf96392 from memory into f3
la x2, scratch
li x3, 0x55e914f9 # load x3 with value 0x55e914f9
sw x3, 0(x2) # store 0x55e914f9 in memory
flw f1, 0(x2) # load 0x55e914f9 from memory into f1
la x2, scratch
li x3, 0x94abf08b # load x3 with value 0x94abf08b
sw x3, 0(x2) # store 0x94abf08b in memory
flw f23, 0(x2) # load 0x94abf08b from memory into f23
fmadd.s f11, f3, f1, f23 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2d5f5e9f # load x3 with value 0x2d5f5e9f
sw x3, 0(x2) # store 0x2d5f5e9f in memory
flw f4, 0(x2) # load 0x2d5f5e9f from memory into f4
la x2, scratch
li x3, 0x876132fa # load x3 with value 0x876132fa
sw x3, 0(x2) # store 0x876132fa in memory
flw f17, 0(x2) # load 0x876132fa from memory into f17
la x2, scratch
li x3, 0x9bebd7f7 # load x3 with value 0x9bebd7f7
sw x3, 0(x2) # store 0x9bebd7f7 in memory
flw f7, 0(x2) # load 0x9bebd7f7 from memory into f7
fmadd.s f10, f4, f17, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x09d46de6 # load x3 with value 0x09d46de6
sw x3, 0(x2) # store 0x09d46de6 in memory
flw f5, 0(x2) # load 0x09d46de6 from memory into f5
la x2, scratch
li x3, 0x25626190 # load x3 with value 0x25626190
sw x3, 0(x2) # store 0x25626190 in memory
flw f27, 0(x2) # load 0x25626190 from memory into f27
la x2, scratch
li x3, 0x7d2c339d # load x3 with value 0x7d2c339d
sw x3, 0(x2) # store 0x7d2c339d in memory
flw f11, 0(x2) # load 0x7d2c339d from memory into f11
fmadd.s f14, f5, f27, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xcf42d31b # load x3 with value 0xcf42d31b
sw x3, 0(x2) # store 0xcf42d31b in memory
flw f6, 0(x2) # load 0xcf42d31b from memory into f6
la x2, scratch
li x3, 0xbf453c83 # load x3 with value 0xbf453c83
sw x3, 0(x2) # store 0xbf453c83 in memory
flw f19, 0(x2) # load 0xbf453c83 from memory into f19
la x2, scratch
li x3, 0x58652780 # load x3 with value 0x58652780
sw x3, 0(x2) # store 0x58652780 in memory
flw f7, 0(x2) # load 0x58652780 from memory into f7
fmadd.s f20, f6, f19, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa1b941b4 # load x3 with value 0xa1b941b4
sw x3, 0(x2) # store 0xa1b941b4 in memory
flw f7, 0(x2) # load 0xa1b941b4 from memory into f7
la x2, scratch
li x3, 0x73896209 # load x3 with value 0x73896209
sw x3, 0(x2) # store 0x73896209 in memory
flw f16, 0(x2) # load 0x73896209 from memory into f16
la x2, scratch
li x3, 0x212ea237 # load x3 with value 0x212ea237
sw x3, 0(x2) # store 0x212ea237 in memory
flw f27, 0(x2) # load 0x212ea237 from memory into f27
fmadd.s f15, f7, f16, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
la x2, scratch
li x3, 0x814a6ee4 # load x3 with value 0x814a6ee4
sw x3, 0(x2) # store 0x814a6ee4 in memory
flw f8, 0(x2) # load 0x814a6ee4 from memory into f8
la x2, scratch
li x3, 0x1b330902 # load x3 with value 0x1b330902
sw x3, 0(x2) # store 0x1b330902 in memory
flw f12, 0(x2) # load 0x1b330902 from memory into f12
la x2, scratch
li x3, 0xec9bcf74 # load x3 with value 0xec9bcf74
sw x3, 0(x2) # store 0xec9bcf74 in memory
flw f30, 0(x2) # load 0xec9bcf74 from memory into f30
fmadd.s f10, f8, f12, f30 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
la x2, scratch
li x3, 0x3867439a # load x3 with value 0x3867439a
sw x3, 0(x2) # store 0x3867439a in memory
flw f9, 0(x2) # load 0x3867439a from memory into f9
la x2, scratch
li x3, 0x87efd490 # load x3 with value 0x87efd490
sw x3, 0(x2) # store 0x87efd490 in memory
flw f22, 0(x2) # load 0x87efd490 from memory into f22
la x2, scratch
li x3, 0x5c16e01e # load x3 with value 0x5c16e01e
sw x3, 0(x2) # store 0x5c16e01e in memory
flw f27, 0(x2) # load 0x5c16e01e from memory into f27
fmadd.s f30, f9, f22, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
la x2, scratch
li x3, 0x96656a12 # load x3 with value 0x96656a12
sw x3, 0(x2) # store 0x96656a12 in memory
flw f10, 0(x2) # load 0x96656a12 from memory into f10
la x2, scratch
li x3, 0x2c4bef73 # load x3 with value 0x2c4bef73
sw x3, 0(x2) # store 0x2c4bef73 in memory
flw f3, 0(x2) # load 0x2c4bef73 from memory into f3
la x2, scratch
li x3, 0xd4ed91b3 # load x3 with value 0xd4ed91b3
sw x3, 0(x2) # store 0xd4ed91b3 in memory
flw f11, 0(x2) # load 0xd4ed91b3 from memory into f11
fmadd.s f31, f10, f3, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
la x2, scratch
li x3, 0x60f0778b # load x3 with value 0x60f0778b
sw x3, 0(x2) # store 0x60f0778b in memory
flw f11, 0(x2) # load 0x60f0778b from memory into f11
la x2, scratch
li x3, 0x3337a039 # load x3 with value 0x3337a039
sw x3, 0(x2) # store 0x3337a039 in memory
flw f16, 0(x2) # load 0x3337a039 from memory into f16
la x2, scratch
li x3, 0xf9a5dc54 # load x3 with value 0xf9a5dc54
sw x3, 0(x2) # store 0xf9a5dc54 in memory
flw f2, 0(x2) # load 0xf9a5dc54 from memory into f2
fmadd.s f15, f11, f16, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
la x2, scratch
li x3, 0x83fd3c85 # load x3 with value 0x83fd3c85
sw x3, 0(x2) # store 0x83fd3c85 in memory
flw f12, 0(x2) # load 0x83fd3c85 from memory into f12
la x2, scratch
li x3, 0xde77d426 # load x3 with value 0xde77d426
sw x3, 0(x2) # store 0xde77d426 in memory
flw f23, 0(x2) # load 0xde77d426 from memory into f23
la x2, scratch
li x3, 0xf534a6fd # load x3 with value 0xf534a6fd
sw x3, 0(x2) # store 0xf534a6fd in memory
flw f24, 0(x2) # load 0xf534a6fd from memory into f24
fmadd.s f19, f12, f23, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
la x2, scratch
li x3, 0xfdc96d71 # load x3 with value 0xfdc96d71
sw x3, 0(x2) # store 0xfdc96d71 in memory
flw f13, 0(x2) # load 0xfdc96d71 from memory into f13
la x2, scratch
li x3, 0x4c1c8e2d # load x3 with value 0x4c1c8e2d
sw x3, 0(x2) # store 0x4c1c8e2d in memory
flw f26, 0(x2) # load 0x4c1c8e2d from memory into f26
la x2, scratch
li x3, 0x4ff747c4 # load x3 with value 0x4ff747c4
sw x3, 0(x2) # store 0x4ff747c4 in memory
flw f14, 0(x2) # load 0x4ff747c4 from memory into f14
fmadd.s f16, f13, f26, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
la x2, scratch
li x3, 0xc753f057 # load x3 with value 0xc753f057
sw x3, 0(x2) # store 0xc753f057 in memory
flw f14, 0(x2) # load 0xc753f057 from memory into f14
la x2, scratch
li x3, 0xc189291e # load x3 with value 0xc189291e
sw x3, 0(x2) # store 0xc189291e in memory
flw f10, 0(x2) # load 0xc189291e from memory into f10
la x2, scratch
li x3, 0x383c53c9 # load x3 with value 0x383c53c9
sw x3, 0(x2) # store 0x383c53c9 in memory
flw f24, 0(x2) # load 0x383c53c9 from memory into f24
fmadd.s f6, f14, f10, f24 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
la x2, scratch
li x3, 0xf2686e78 # load x3 with value 0xf2686e78
sw x3, 0(x2) # store 0xf2686e78 in memory
flw f15, 0(x2) # load 0xf2686e78 from memory into f15
la x2, scratch
li x3, 0x4e1c8e82 # load x3 with value 0x4e1c8e82
sw x3, 0(x2) # store 0x4e1c8e82 in memory
flw f24, 0(x2) # load 0x4e1c8e82 from memory into f24
la x2, scratch
li x3, 0x99b4ce9e # load x3 with value 0x99b4ce9e
sw x3, 0(x2) # store 0x99b4ce9e in memory
flw f18, 0(x2) # load 0x99b4ce9e from memory into f18
fmadd.s f2, f15, f24, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
la x2, scratch
li x3, 0xedcc8c14 # load x3 with value 0xedcc8c14
sw x3, 0(x2) # store 0xedcc8c14 in memory
flw f16, 0(x2) # load 0xedcc8c14 from memory into f16
la x2, scratch
li x3, 0xd3a134c5 # load x3 with value 0xd3a134c5
sw x3, 0(x2) # store 0xd3a134c5 in memory
flw f1, 0(x2) # load 0xd3a134c5 from memory into f1
la x2, scratch
li x3, 0x2ca3ffb5 # load x3 with value 0x2ca3ffb5
sw x3, 0(x2) # store 0x2ca3ffb5 in memory
flw f13, 0(x2) # load 0x2ca3ffb5 from memory into f13
fmadd.s f5, f16, f1, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
la x2, scratch
li x3, 0x00821f13 # load x3 with value 0x00821f13
sw x3, 0(x2) # store 0x00821f13 in memory
flw f17, 0(x2) # load 0x00821f13 from memory into f17
la x2, scratch
li x3, 0x7d519a39 # load x3 with value 0x7d519a39
sw x3, 0(x2) # store 0x7d519a39 in memory
flw f5, 0(x2) # load 0x7d519a39 from memory into f5
la x2, scratch
li x3, 0xe5844b05 # load x3 with value 0xe5844b05
sw x3, 0(x2) # store 0xe5844b05 in memory
flw f13, 0(x2) # load 0xe5844b05 from memory into f13
fmadd.s f28, f17, f5, f13 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
la x2, scratch
li x3, 0xe2b0b1fe # load x3 with value 0xe2b0b1fe
sw x3, 0(x2) # store 0xe2b0b1fe in memory
flw f18, 0(x2) # load 0xe2b0b1fe from memory into f18
la x2, scratch
li x3, 0x0f02f517 # load x3 with value 0x0f02f517
sw x3, 0(x2) # store 0x0f02f517 in memory
flw f5, 0(x2) # load 0x0f02f517 from memory into f5
la x2, scratch
li x3, 0x7c021e81 # load x3 with value 0x7c021e81
sw x3, 0(x2) # store 0x7c021e81 in memory
flw f14, 0(x2) # load 0x7c021e81 from memory into f14
fmadd.s f13, f18, f5, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
la x2, scratch
li x3, 0x42b5acf8 # load x3 with value 0x42b5acf8
sw x3, 0(x2) # store 0x42b5acf8 in memory
flw f19, 0(x2) # load 0x42b5acf8 from memory into f19
la x2, scratch
li x3, 0x336818af # load x3 with value 0x336818af
sw x3, 0(x2) # store 0x336818af in memory
flw f1, 0(x2) # load 0x336818af from memory into f1
la x2, scratch
li x3, 0xc4e5ec33 # load x3 with value 0xc4e5ec33
sw x3, 0(x2) # store 0xc4e5ec33 in memory
flw f5, 0(x2) # load 0xc4e5ec33 from memory into f5
fmadd.s f9, f19, f1, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
la x2, scratch
li x3, 0xc9f1464a # load x3 with value 0xc9f1464a
sw x3, 0(x2) # store 0xc9f1464a in memory
flw f20, 0(x2) # load 0xc9f1464a from memory into f20
la x2, scratch
li x3, 0x3caa87a9 # load x3 with value 0x3caa87a9
sw x3, 0(x2) # store 0x3caa87a9 in memory
flw f7, 0(x2) # load 0x3caa87a9 from memory into f7
la x2, scratch
li x3, 0x0c43e11d # load x3 with value 0x0c43e11d
sw x3, 0(x2) # store 0x0c43e11d in memory
flw f1, 0(x2) # load 0x0c43e11d from memory into f1
fmadd.s f27, f20, f7, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
la x2, scratch
li x3, 0xcb94e005 # load x3 with value 0xcb94e005
sw x3, 0(x2) # store 0xcb94e005 in memory
flw f21, 0(x2) # load 0xcb94e005 from memory into f21
la x2, scratch
li x3, 0xd4e455a2 # load x3 with value 0xd4e455a2
sw x3, 0(x2) # store 0xd4e455a2 in memory
flw f1, 0(x2) # load 0xd4e455a2 from memory into f1
la x2, scratch
li x3, 0x1246e5d2 # load x3 with value 0x1246e5d2
sw x3, 0(x2) # store 0x1246e5d2 in memory
flw f8, 0(x2) # load 0x1246e5d2 from memory into f8
fmadd.s f24, f21, f1, f8 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
la x2, scratch
li x3, 0x35c2d7e3 # load x3 with value 0x35c2d7e3
sw x3, 0(x2) # store 0x35c2d7e3 in memory
flw f22, 0(x2) # load 0x35c2d7e3 from memory into f22
la x2, scratch
li x3, 0x73fc5592 # load x3 with value 0x73fc5592
sw x3, 0(x2) # store 0x73fc5592 in memory
flw f3, 0(x2) # load 0x73fc5592 from memory into f3
la x2, scratch
li x3, 0x10b722b4 # load x3 with value 0x10b722b4
sw x3, 0(x2) # store 0x10b722b4 in memory
flw f5, 0(x2) # load 0x10b722b4 from memory into f5
fmadd.s f27, f22, f3, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
la x2, scratch
li x3, 0x7281a773 # load x3 with value 0x7281a773
sw x3, 0(x2) # store 0x7281a773 in memory
flw f23, 0(x2) # load 0x7281a773 from memory into f23
la x2, scratch
li x3, 0x19d03513 # load x3 with value 0x19d03513
sw x3, 0(x2) # store 0x19d03513 in memory
flw f27, 0(x2) # load 0x19d03513 from memory into f27
la x2, scratch
li x3, 0x2f9c628f # load x3 with value 0x2f9c628f
sw x3, 0(x2) # store 0x2f9c628f in memory
flw f14, 0(x2) # load 0x2f9c628f from memory into f14
fmadd.s f5, f23, f27, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
la x2, scratch
li x3, 0x435bc1de # load x3 with value 0x435bc1de
sw x3, 0(x2) # store 0x435bc1de in memory
flw f24, 0(x2) # load 0x435bc1de from memory into f24
la x2, scratch
li x3, 0x4622995c # load x3 with value 0x4622995c
sw x3, 0(x2) # store 0x4622995c in memory
flw f16, 0(x2) # load 0x4622995c from memory into f16
la x2, scratch
li x3, 0xee1a1f5d # load x3 with value 0xee1a1f5d
sw x3, 0(x2) # store 0xee1a1f5d in memory
flw f20, 0(x2) # load 0xee1a1f5d from memory into f20
fmadd.s f7, f24, f16, f20 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
la x2, scratch
li x3, 0x6fdf82cf # load x3 with value 0x6fdf82cf
sw x3, 0(x2) # store 0x6fdf82cf in memory
flw f25, 0(x2) # load 0x6fdf82cf from memory into f25
la x2, scratch
li x3, 0x7dae7917 # load x3 with value 0x7dae7917
sw x3, 0(x2) # store 0x7dae7917 in memory
flw f15, 0(x2) # load 0x7dae7917 from memory into f15
la x2, scratch
li x3, 0xc2675dcb # load x3 with value 0xc2675dcb
sw x3, 0(x2) # store 0xc2675dcb in memory
flw f1, 0(x2) # load 0xc2675dcb from memory into f1
fmadd.s f13, f25, f15, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
la x2, scratch
li x3, 0x4e21904a # load x3 with value 0x4e21904a
sw x3, 0(x2) # store 0x4e21904a in memory
flw f26, 0(x2) # load 0x4e21904a from memory into f26
la x2, scratch
li x3, 0x91a29672 # load x3 with value 0x91a29672
sw x3, 0(x2) # store 0x91a29672 in memory
flw f24, 0(x2) # load 0x91a29672 from memory into f24
la x2, scratch
li x3, 0xfef2c24f # load x3 with value 0xfef2c24f
sw x3, 0(x2) # store 0xfef2c24f in memory
flw f11, 0(x2) # load 0xfef2c24f from memory into f11
fmadd.s f9, f26, f24, f11 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
la x2, scratch
li x3, 0x44fc3e6d # load x3 with value 0x44fc3e6d
sw x3, 0(x2) # store 0x44fc3e6d in memory
flw f27, 0(x2) # load 0x44fc3e6d from memory into f27
la x2, scratch
li x3, 0xd12247d3 # load x3 with value 0xd12247d3
sw x3, 0(x2) # store 0xd12247d3 in memory
flw f12, 0(x2) # load 0xd12247d3 from memory into f12
la x2, scratch
li x3, 0x5796d6db # load x3 with value 0x5796d6db
sw x3, 0(x2) # store 0x5796d6db in memory
flw f18, 0(x2) # load 0x5796d6db from memory into f18
fmadd.s f23, f27, f12, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
la x2, scratch
li x3, 0x8d884caf # load x3 with value 0x8d884caf
sw x3, 0(x2) # store 0x8d884caf in memory
flw f28, 0(x2) # load 0x8d884caf from memory into f28
la x2, scratch
li x3, 0x1205d473 # load x3 with value 0x1205d473
sw x3, 0(x2) # store 0x1205d473 in memory
flw f12, 0(x2) # load 0x1205d473 from memory into f12
la x2, scratch
li x3, 0xf791d0a9 # load x3 with value 0xf791d0a9
sw x3, 0(x2) # store 0xf791d0a9 in memory
flw f18, 0(x2) # load 0xf791d0a9 from memory into f18
fmadd.s f22, f28, f12, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
la x2, scratch
li x3, 0xf519d338 # load x3 with value 0xf519d338
sw x3, 0(x2) # store 0xf519d338 in memory
flw f29, 0(x2) # load 0xf519d338 from memory into f29
la x2, scratch
li x3, 0x7d9154e0 # load x3 with value 0x7d9154e0
sw x3, 0(x2) # store 0x7d9154e0 in memory
flw f24, 0(x2) # load 0x7d9154e0 from memory into f24
la x2, scratch
li x3, 0xe02a7756 # load x3 with value 0xe02a7756
sw x3, 0(x2) # store 0xe02a7756 in memory
flw f18, 0(x2) # load 0xe02a7756 from memory into f18
fmadd.s f22, f29, f24, f18 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
la x2, scratch
li x3, 0x7a16c044 # load x3 with value 0x7a16c044
sw x3, 0(x2) # store 0x7a16c044 in memory
flw f30, 0(x2) # load 0x7a16c044 from memory into f30
la x2, scratch
li x3, 0xc0b53032 # load x3 with value 0xc0b53032
sw x3, 0(x2) # store 0xc0b53032 in memory
flw f28, 0(x2) # load 0xc0b53032 from memory into f28
la x2, scratch
li x3, 0xc418997c # load x3 with value 0xc418997c
sw x3, 0(x2) # store 0xc418997c in memory
flw f21, 0(x2) # load 0xc418997c from memory into f21
fmadd.s f27, f30, f28, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
la x2, scratch
li x3, 0xbf7dc537 # load x3 with value 0xbf7dc537
sw x3, 0(x2) # store 0xbf7dc537 in memory
flw f31, 0(x2) # load 0xbf7dc537 from memory into f31
la x2, scratch
li x3, 0x87e56fed # load x3 with value 0x87e56fed
sw x3, 0(x2) # store 0x87e56fed in memory
flw f12, 0(x2) # load 0x87e56fed from memory into f12
la x2, scratch
li x3, 0x66e799f2 # load x3 with value 0x66e799f2
sw x3, 0(x2) # store 0x66e799f2 in memory
flw f11, 0(x2) # load 0x66e799f2 from memory into f11
fmadd.s f1, f31, f12, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
la x2, scratch
li x3, 0x8d42fa28 # load x3 with value 0x8d42fa28
sw x3, 0(x2) # store 0x8d42fa28 in memory
flw f2, 0(x2) # load 0x8d42fa28 from memory into f2
la x2, scratch
li x3, 0x59edb8ae # load x3 with value 0x59edb8ae
sw x3, 0(x2) # store 0x59edb8ae in memory
flw f0, 0(x2) # load 0x59edb8ae from memory into f0
la x2, scratch
li x3, 0xb41afcba # load x3 with value 0xb41afcba
sw x3, 0(x2) # store 0xb41afcba in memory
flw f23, 0(x2) # load 0xb41afcba from memory into f23
fmadd.s f31, f2, f0, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
la x2, scratch
li x3, 0x6275c17b # load x3 with value 0x6275c17b
sw x3, 0(x2) # store 0x6275c17b in memory
flw f3, 0(x2) # load 0x6275c17b from memory into f3
la x2, scratch
li x3, 0xb79ab863 # load x3 with value 0xb79ab863
sw x3, 0(x2) # store 0xb79ab863 in memory
flw f1, 0(x2) # load 0xb79ab863 from memory into f1
la x2, scratch
li x3, 0xc360f2b9 # load x3 with value 0xc360f2b9
sw x3, 0(x2) # store 0xc360f2b9 in memory
flw f5, 0(x2) # load 0xc360f2b9 from memory into f5
fmadd.s f26, f3, f1, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
la x2, scratch
li x3, 0xbe6759f6 # load x3 with value 0xbe6759f6
sw x3, 0(x2) # store 0xbe6759f6 in memory
flw f1, 0(x2) # load 0xbe6759f6 from memory into f1
la x2, scratch
li x3, 0xec80f8c0 # load x3 with value 0xec80f8c0
sw x3, 0(x2) # store 0xec80f8c0 in memory
flw f2, 0(x2) # load 0xec80f8c0 from memory into f2
la x2, scratch
li x3, 0x21d4d2bc # load x3 with value 0x21d4d2bc
sw x3, 0(x2) # store 0x21d4d2bc in memory
flw f20, 0(x2) # load 0x21d4d2bc from memory into f20
fmadd.s f13, f1, f2, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
la x2, scratch
li x3, 0x9bb4798c # load x3 with value 0x9bb4798c
sw x3, 0(x2) # store 0x9bb4798c in memory
flw f7, 0(x2) # load 0x9bb4798c from memory into f7
la x2, scratch
li x3, 0x732a5806 # load x3 with value 0x732a5806
sw x3, 0(x2) # store 0x732a5806 in memory
flw f3, 0(x2) # load 0x732a5806 from memory into f3
la x2, scratch
li x3, 0xe93ec27d # load x3 with value 0xe93ec27d
sw x3, 0(x2) # store 0xe93ec27d in memory
flw f20, 0(x2) # load 0xe93ec27d from memory into f20
fmadd.s f13, f7, f3, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x9334a5af # load x3 with value 0x9334a5af
sw x3, 0(x2) # store 0x9334a5af in memory
flw f25, 0(x2) # load 0x9334a5af from memory into f25
la x2, scratch
li x3, 0x5feae247 # load x3 with value 0x5feae247
sw x3, 0(x2) # store 0x5feae247 in memory
flw f4, 0(x2) # load 0x5feae247 from memory into f4
la x2, scratch
li x3, 0xd36f15ae # load x3 with value 0xd36f15ae
sw x3, 0(x2) # store 0xd36f15ae in memory
flw f5, 0(x2) # load 0xd36f15ae from memory into f5
fmadd.s f14, f25, f4, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x0441e4f7 # load x3 with value 0x0441e4f7
sw x3, 0(x2) # store 0x0441e4f7 in memory
flw f27, 0(x2) # load 0x0441e4f7 from memory into f27
la x2, scratch
li x3, 0x4315127f # load x3 with value 0x4315127f
sw x3, 0(x2) # store 0x4315127f in memory
flw f5, 0(x2) # load 0x4315127f from memory into f5
la x2, scratch
li x3, 0x59367e56 # load x3 with value 0x59367e56
sw x3, 0(x2) # store 0x59367e56 in memory
flw f13, 0(x2) # load 0x59367e56 from memory into f13
fmadd.s f18, f27, f5, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xec8105e9 # load x3 with value 0xec8105e9
sw x3, 0(x2) # store 0xec8105e9 in memory
flw f25, 0(x2) # load 0xec8105e9 from memory into f25
la x2, scratch
li x3, 0xd8dd7e52 # load x3 with value 0xd8dd7e52
sw x3, 0(x2) # store 0xd8dd7e52 in memory
flw f6, 0(x2) # load 0xd8dd7e52 from memory into f6
la x2, scratch
li x3, 0xbe12191b # load x3 with value 0xbe12191b
sw x3, 0(x2) # store 0xbe12191b in memory
flw f2, 0(x2) # load 0xbe12191b from memory into f2
fmadd.s f19, f25, f6, f2 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x07ea0794 # load x3 with value 0x07ea0794
sw x3, 0(x2) # store 0x07ea0794 in memory
flw f24, 0(x2) # load 0x07ea0794 from memory into f24
la x2, scratch
li x3, 0x9845840c # load x3 with value 0x9845840c
sw x3, 0(x2) # store 0x9845840c in memory
flw f7, 0(x2) # load 0x9845840c from memory into f7
la x2, scratch
li x3, 0x3bf7c1d2 # load x3 with value 0x3bf7c1d2
sw x3, 0(x2) # store 0x3bf7c1d2 in memory
flw f3, 0(x2) # load 0x3bf7c1d2 from memory into f3
fmadd.s f21, f24, f7, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
la x2, scratch
li x3, 0xc0bcbec5 # load x3 with value 0xc0bcbec5
sw x3, 0(x2) # store 0xc0bcbec5 in memory
flw f15, 0(x2) # load 0xc0bcbec5 from memory into f15
la x2, scratch
li x3, 0x284cdc28 # load x3 with value 0x284cdc28
sw x3, 0(x2) # store 0x284cdc28 in memory
flw f8, 0(x2) # load 0x284cdc28 from memory into f8
la x2, scratch
li x3, 0x3db84ad8 # load x3 with value 0x3db84ad8
sw x3, 0(x2) # store 0x3db84ad8 in memory
flw f6, 0(x2) # load 0x3db84ad8 from memory into f6
fmadd.s f13, f15, f8, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
la x2, scratch
li x3, 0xa20e579f # load x3 with value 0xa20e579f
sw x3, 0(x2) # store 0xa20e579f in memory
flw f28, 0(x2) # load 0xa20e579f from memory into f28
la x2, scratch
li x3, 0xae364419 # load x3 with value 0xae364419
sw x3, 0(x2) # store 0xae364419 in memory
flw f9, 0(x2) # load 0xae364419 from memory into f9
la x2, scratch
li x3, 0xe93c1e01 # load x3 with value 0xe93c1e01
sw x3, 0(x2) # store 0xe93c1e01 in memory
flw f13, 0(x2) # load 0xe93c1e01 from memory into f13
fmadd.s f12, f28, f9, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
la x2, scratch
li x3, 0x3990b680 # load x3 with value 0x3990b680
sw x3, 0(x2) # store 0x3990b680 in memory
flw f7, 0(x2) # load 0x3990b680 from memory into f7
la x2, scratch
li x3, 0x7cc7465e # load x3 with value 0x7cc7465e
sw x3, 0(x2) # store 0x7cc7465e in memory
flw f10, 0(x2) # load 0x7cc7465e from memory into f10
la x2, scratch
li x3, 0x570cfc9c # load x3 with value 0x570cfc9c
sw x3, 0(x2) # store 0x570cfc9c in memory
flw f30, 0(x2) # load 0x570cfc9c from memory into f30
fmadd.s f3, f7, f10, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
la x2, scratch
li x3, 0xeea8dfd2 # load x3 with value 0xeea8dfd2
sw x3, 0(x2) # store 0xeea8dfd2 in memory
flw f29, 0(x2) # load 0xeea8dfd2 from memory into f29
la x2, scratch
li x3, 0xba2e0dfe # load x3 with value 0xba2e0dfe
sw x3, 0(x2) # store 0xba2e0dfe in memory
flw f11, 0(x2) # load 0xba2e0dfe from memory into f11
la x2, scratch
li x3, 0xac5ff868 # load x3 with value 0xac5ff868
sw x3, 0(x2) # store 0xac5ff868 in memory
flw f1, 0(x2) # load 0xac5ff868 from memory into f1
fmadd.s f10, f29, f11, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
la x2, scratch
li x3, 0x37a43375 # load x3 with value 0x37a43375
sw x3, 0(x2) # store 0x37a43375 in memory
flw f16, 0(x2) # load 0x37a43375 from memory into f16
la x2, scratch
li x3, 0x345c0913 # load x3 with value 0x345c0913
sw x3, 0(x2) # store 0x345c0913 in memory
flw f12, 0(x2) # load 0x345c0913 from memory into f12
la x2, scratch
li x3, 0xeb7c4476 # load x3 with value 0xeb7c4476
sw x3, 0(x2) # store 0xeb7c4476 in memory
flw f5, 0(x2) # load 0xeb7c4476 from memory into f5
fmadd.s f10, f16, f12, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
la x2, scratch
li x3, 0x52081a96 # load x3 with value 0x52081a96
sw x3, 0(x2) # store 0x52081a96 in memory
flw f18, 0(x2) # load 0x52081a96 from memory into f18
la x2, scratch
li x3, 0x01e244b8 # load x3 with value 0x01e244b8
sw x3, 0(x2) # store 0x01e244b8 in memory
flw f13, 0(x2) # load 0x01e244b8 from memory into f13
la x2, scratch
li x3, 0x8b1d1a98 # load x3 with value 0x8b1d1a98
sw x3, 0(x2) # store 0x8b1d1a98 in memory
flw f23, 0(x2) # load 0x8b1d1a98 from memory into f23
fmadd.s f17, f18, f13, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
la x2, scratch
li x3, 0x91c9a613 # load x3 with value 0x91c9a613
sw x3, 0(x2) # store 0x91c9a613 in memory
flw f28, 0(x2) # load 0x91c9a613 from memory into f28
la x2, scratch
li x3, 0x2d683deb # load x3 with value 0x2d683deb
sw x3, 0(x2) # store 0x2d683deb in memory
flw f14, 0(x2) # load 0x2d683deb from memory into f14
la x2, scratch
li x3, 0x69a35be6 # load x3 with value 0x69a35be6
sw x3, 0(x2) # store 0x69a35be6 in memory
flw f9, 0(x2) # load 0x69a35be6 from memory into f9
fmadd.s f15, f28, f14, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
la x2, scratch
li x3, 0x3a6a976c # load x3 with value 0x3a6a976c
sw x3, 0(x2) # store 0x3a6a976c in memory
flw f19, 0(x2) # load 0x3a6a976c from memory into f19
la x2, scratch
li x3, 0x346fd19f # load x3 with value 0x346fd19f
sw x3, 0(x2) # store 0x346fd19f in memory
flw f15, 0(x2) # load 0x346fd19f from memory into f15
la x2, scratch
li x3, 0xf4db3263 # load x3 with value 0xf4db3263
sw x3, 0(x2) # store 0xf4db3263 in memory
flw f6, 0(x2) # load 0xf4db3263 from memory into f6
fmadd.s f28, f19, f15, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
la x2, scratch
li x3, 0x4742ca49 # load x3 with value 0x4742ca49
sw x3, 0(x2) # store 0x4742ca49 in memory
flw f24, 0(x2) # load 0x4742ca49 from memory into f24
la x2, scratch
li x3, 0x47b49bcb # load x3 with value 0x47b49bcb
sw x3, 0(x2) # store 0x47b49bcb in memory
flw f16, 0(x2) # load 0x47b49bcb from memory into f16
la x2, scratch
li x3, 0x3cac4f9f # load x3 with value 0x3cac4f9f
sw x3, 0(x2) # store 0x3cac4f9f in memory
flw f15, 0(x2) # load 0x3cac4f9f from memory into f15
fmadd.s f28, f24, f16, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
la x2, scratch
li x3, 0xcd69e50b # load x3 with value 0xcd69e50b
sw x3, 0(x2) # store 0xcd69e50b in memory
flw f18, 0(x2) # load 0xcd69e50b from memory into f18
la x2, scratch
li x3, 0x7ac9580b # load x3 with value 0x7ac9580b
sw x3, 0(x2) # store 0x7ac9580b in memory
flw f17, 0(x2) # load 0x7ac9580b from memory into f17
la x2, scratch
li x3, 0x1961d916 # load x3 with value 0x1961d916
sw x3, 0(x2) # store 0x1961d916 in memory
flw f21, 0(x2) # load 0x1961d916 from memory into f21
fmadd.s f2, f18, f17, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
la x2, scratch
li x3, 0x73c273e0 # load x3 with value 0x73c273e0
sw x3, 0(x2) # store 0x73c273e0 in memory
flw f6, 0(x2) # load 0x73c273e0 from memory into f6
la x2, scratch
li x3, 0xd7bc7cbd # load x3 with value 0xd7bc7cbd
sw x3, 0(x2) # store 0xd7bc7cbd in memory
flw f18, 0(x2) # load 0xd7bc7cbd from memory into f18
la x2, scratch
li x3, 0x5136ebd5 # load x3 with value 0x5136ebd5
sw x3, 0(x2) # store 0x5136ebd5 in memory
flw f23, 0(x2) # load 0x5136ebd5 from memory into f23
fmadd.s f11, f6, f18, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
la x2, scratch
li x3, 0x1f246e53 # load x3 with value 0x1f246e53
sw x3, 0(x2) # store 0x1f246e53 in memory
flw f12, 0(x2) # load 0x1f246e53 from memory into f12
la x2, scratch
li x3, 0x8c2dd930 # load x3 with value 0x8c2dd930
sw x3, 0(x2) # store 0x8c2dd930 in memory
flw f19, 0(x2) # load 0x8c2dd930 from memory into f19
la x2, scratch
li x3, 0xb4e761d0 # load x3 with value 0xb4e761d0
sw x3, 0(x2) # store 0xb4e761d0 in memory
flw f20, 0(x2) # load 0xb4e761d0 from memory into f20
fmadd.s f31, f12, f19, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
la x2, scratch
li x3, 0xc5b75647 # load x3 with value 0xc5b75647
sw x3, 0(x2) # store 0xc5b75647 in memory
flw f25, 0(x2) # load 0xc5b75647 from memory into f25
la x2, scratch
li x3, 0xf2d37bd8 # load x3 with value 0xf2d37bd8
sw x3, 0(x2) # store 0xf2d37bd8 in memory
flw f20, 0(x2) # load 0xf2d37bd8 from memory into f20
la x2, scratch
li x3, 0x7fef771a # load x3 with value 0x7fef771a
sw x3, 0(x2) # store 0x7fef771a in memory
flw f3, 0(x2) # load 0x7fef771a from memory into f3
fmadd.s f30, f25, f20, f3 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
la x2, scratch
li x3, 0xa1df99db # load x3 with value 0xa1df99db
sw x3, 0(x2) # store 0xa1df99db in memory
flw f5, 0(x2) # load 0xa1df99db from memory into f5
la x2, scratch
li x3, 0xa63d2325 # load x3 with value 0xa63d2325
sw x3, 0(x2) # store 0xa63d2325 in memory
flw f21, 0(x2) # load 0xa63d2325 from memory into f21
la x2, scratch
li x3, 0xf71ef0bd # load x3 with value 0xf71ef0bd
sw x3, 0(x2) # store 0xf71ef0bd in memory
flw f28, 0(x2) # load 0xf71ef0bd from memory into f28
fmadd.s f21, f5, f21, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
la x2, scratch
li x3, 0x9f13837b # load x3 with value 0x9f13837b
sw x3, 0(x2) # store 0x9f13837b in memory
flw f19, 0(x2) # load 0x9f13837b from memory into f19
la x2, scratch
li x3, 0x47f8fcbf # load x3 with value 0x47f8fcbf
sw x3, 0(x2) # store 0x47f8fcbf in memory
flw f22, 0(x2) # load 0x47f8fcbf from memory into f22
la x2, scratch
li x3, 0xeef2af33 # load x3 with value 0xeef2af33
sw x3, 0(x2) # store 0xeef2af33 in memory
flw f20, 0(x2) # load 0xeef2af33 from memory into f20
fmadd.s f12, f19, f22, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
la x2, scratch
li x3, 0xea94ab45 # load x3 with value 0xea94ab45
sw x3, 0(x2) # store 0xea94ab45 in memory
flw f28, 0(x2) # load 0xea94ab45 from memory into f28
la x2, scratch
li x3, 0x55d19394 # load x3 with value 0x55d19394
sw x3, 0(x2) # store 0x55d19394 in memory
flw f23, 0(x2) # load 0x55d19394 from memory into f23
la x2, scratch
li x3, 0x41d33e39 # load x3 with value 0x41d33e39
sw x3, 0(x2) # store 0x41d33e39 in memory
flw f12, 0(x2) # load 0x41d33e39 from memory into f12
fmadd.s f10, f28, f23, f12 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
la x2, scratch
li x3, 0xdff323b7 # load x3 with value 0xdff323b7
sw x3, 0(x2) # store 0xdff323b7 in memory
flw f9, 0(x2) # load 0xdff323b7 from memory into f9
la x2, scratch
li x3, 0xb67e56c4 # load x3 with value 0xb67e56c4
sw x3, 0(x2) # store 0xb67e56c4 in memory
flw f24, 0(x2) # load 0xb67e56c4 from memory into f24
la x2, scratch
li x3, 0x9e268a5b # load x3 with value 0x9e268a5b
sw x3, 0(x2) # store 0x9e268a5b in memory
flw f7, 0(x2) # load 0x9e268a5b from memory into f7
fmadd.s f12, f9, f24, f7 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
la x2, scratch
li x3, 0x950735fc # load x3 with value 0x950735fc
sw x3, 0(x2) # store 0x950735fc in memory
flw f18, 0(x2) # load 0x950735fc from memory into f18
la x2, scratch
li x3, 0x61780dc6 # load x3 with value 0x61780dc6
sw x3, 0(x2) # store 0x61780dc6 in memory
flw f25, 0(x2) # load 0x61780dc6 from memory into f25
la x2, scratch
li x3, 0x70bd1aba # load x3 with value 0x70bd1aba
sw x3, 0(x2) # store 0x70bd1aba in memory
flw f13, 0(x2) # load 0x70bd1aba from memory into f13
fmadd.s f1, f18, f25, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
la x2, scratch
li x3, 0x28609f6c # load x3 with value 0x28609f6c
sw x3, 0(x2) # store 0x28609f6c in memory
flw f5, 0(x2) # load 0x28609f6c from memory into f5
la x2, scratch
li x3, 0xc0ca0ab8 # load x3 with value 0xc0ca0ab8
sw x3, 0(x2) # store 0xc0ca0ab8 in memory
flw f26, 0(x2) # load 0xc0ca0ab8 from memory into f26
la x2, scratch
li x3, 0xa10e652c # load x3 with value 0xa10e652c
sw x3, 0(x2) # store 0xa10e652c in memory
flw f30, 0(x2) # load 0xa10e652c from memory into f30
fmadd.s f14, f5, f26, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
la x2, scratch
li x3, 0x695348ab # load x3 with value 0x695348ab
sw x3, 0(x2) # store 0x695348ab in memory
flw f12, 0(x2) # load 0x695348ab from memory into f12
la x2, scratch
li x3, 0xd0904b6f # load x3 with value 0xd0904b6f
sw x3, 0(x2) # store 0xd0904b6f in memory
flw f27, 0(x2) # load 0xd0904b6f from memory into f27
la x2, scratch
li x3, 0x5b31a3a6 # load x3 with value 0x5b31a3a6
sw x3, 0(x2) # store 0x5b31a3a6 in memory
flw f15, 0(x2) # load 0x5b31a3a6 from memory into f15
fmadd.s f2, f12, f27, f15 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
la x2, scratch
li x3, 0x8818b170 # load x3 with value 0x8818b170
sw x3, 0(x2) # store 0x8818b170 in memory
flw f11, 0(x2) # load 0x8818b170 from memory into f11
la x2, scratch
li x3, 0x18eaeb93 # load x3 with value 0x18eaeb93
sw x3, 0(x2) # store 0x18eaeb93 in memory
flw f28, 0(x2) # load 0x18eaeb93 from memory into f28
la x2, scratch
li x3, 0xc362e988 # load x3 with value 0xc362e988
sw x3, 0(x2) # store 0xc362e988 in memory
flw f21, 0(x2) # load 0xc362e988 from memory into f21
fmadd.s f16, f11, f28, f21 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
la x2, scratch
li x3, 0xcc5ca167 # load x3 with value 0xcc5ca167
sw x3, 0(x2) # store 0xcc5ca167 in memory
flw f11, 0(x2) # load 0xcc5ca167 from memory into f11
la x2, scratch
li x3, 0x621902c2 # load x3 with value 0x621902c2
sw x3, 0(x2) # store 0x621902c2 in memory
flw f29, 0(x2) # load 0x621902c2 from memory into f29
la x2, scratch
li x3, 0x6a825d49 # load x3 with value 0x6a825d49
sw x3, 0(x2) # store 0x6a825d49 in memory
flw f22, 0(x2) # load 0x6a825d49 from memory into f22
fmadd.s f21, f11, f29, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
la x2, scratch
li x3, 0xf7589074 # load x3 with value 0xf7589074
sw x3, 0(x2) # store 0xf7589074 in memory
flw f5, 0(x2) # load 0xf7589074 from memory into f5
la x2, scratch
li x3, 0x4fe83c55 # load x3 with value 0x4fe83c55
sw x3, 0(x2) # store 0x4fe83c55 in memory
flw f30, 0(x2) # load 0x4fe83c55 from memory into f30
la x2, scratch
li x3, 0x95a94a30 # load x3 with value 0x95a94a30
sw x3, 0(x2) # store 0x95a94a30 in memory
flw f11, 0(x2) # load 0x95a94a30 from memory into f11
fmadd.s f21, f5, f30, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
la x2, scratch
li x3, 0x04aeaf53 # load x3 with value 0x04aeaf53
sw x3, 0(x2) # store 0x04aeaf53 in memory
flw f1, 0(x2) # load 0x04aeaf53 from memory into f1
la x2, scratch
li x3, 0x83ce525d # load x3 with value 0x83ce525d
sw x3, 0(x2) # store 0x83ce525d in memory
flw f31, 0(x2) # load 0x83ce525d from memory into f31
la x2, scratch
li x3, 0x445f7b5d # load x3 with value 0x445f7b5d
sw x3, 0(x2) # store 0x445f7b5d in memory
flw f16, 0(x2) # load 0x445f7b5d from memory into f16
fmadd.s f7, f1, f31, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f0)
la x2, scratch
li x3, 0x12f48681 # load x3 with value 0x12f48681
sw x3, 0(x2) # store 0x12f48681 in memory
flw f29, 0(x2) # load 0x12f48681 from memory into f29
la x2, scratch
li x3, 0x134309d0 # load x3 with value 0x134309d0
sw x3, 0(x2) # store 0x134309d0 in memory
flw f1, 0(x2) # load 0x134309d0 from memory into f1
la x2, scratch
li x3, 0xa2159fa9 # load x3 with value 0xa2159fa9
sw x3, 0(x2) # store 0xa2159fa9 in memory
flw f0, 0(x2) # load 0xa2159fa9 from memory into f0
fmadd.s f15, f29, f1, f0 # perform operation

# Testcase cp_fs3 (Test source fs3 = f1)
la x2, scratch
li x3, 0x52fcf07c # load x3 with value 0x52fcf07c
sw x3, 0(x2) # store 0x52fcf07c in memory
flw f16, 0(x2) # load 0x52fcf07c from memory into f16
la x2, scratch
li x3, 0xe5583030 # load x3 with value 0xe5583030
sw x3, 0(x2) # store 0xe5583030 in memory
flw f7, 0(x2) # load 0xe5583030 from memory into f7
la x2, scratch
li x3, 0x61abb6ff # load x3 with value 0x61abb6ff
sw x3, 0(x2) # store 0x61abb6ff in memory
flw f1, 0(x2) # load 0x61abb6ff from memory into f1
fmadd.s f23, f16, f7, f1 # perform operation

# Testcase cp_fs3 (Test source fs3 = f2)
la x2, scratch
li x3, 0xbc8355d9 # load x3 with value 0xbc8355d9
sw x3, 0(x2) # store 0xbc8355d9 in memory
flw f30, 0(x2) # load 0xbc8355d9 from memory into f30
la x2, scratch
li x3, 0xb5680876 # load x3 with value 0xb5680876
sw x3, 0(x2) # store 0xb5680876 in memory
flw f27, 0(x2) # load 0xb5680876 from memory into f27
la x2, scratch
li x3, 0x627a3cee # load x3 with value 0x627a3cee
sw x3, 0(x2) # store 0x627a3cee in memory
flw f2, 0(x2) # load 0x627a3cee from memory into f2
fmadd.s f13, f30, f27, f2 # perform operation

# Testcase cp_fs3 (Test source fs3 = f3)
la x2, scratch
li x3, 0xe45780f7 # load x3 with value 0xe45780f7
sw x3, 0(x2) # store 0xe45780f7 in memory
flw f2, 0(x2) # load 0xe45780f7 from memory into f2
la x2, scratch
li x3, 0xe9c354b3 # load x3 with value 0xe9c354b3
sw x3, 0(x2) # store 0xe9c354b3 in memory
flw f14, 0(x2) # load 0xe9c354b3 from memory into f14
la x2, scratch
li x3, 0x1e17699a # load x3 with value 0x1e17699a
sw x3, 0(x2) # store 0x1e17699a in memory
flw f3, 0(x2) # load 0x1e17699a from memory into f3
fmadd.s f21, f2, f14, f3 # perform operation

# Testcase cp_fs3 (Test source fs3 = f4)
la x2, scratch
li x3, 0x6e55fa2d # load x3 with value 0x6e55fa2d
sw x3, 0(x2) # store 0x6e55fa2d in memory
flw f13, 0(x2) # load 0x6e55fa2d from memory into f13
la x2, scratch
li x3, 0xe0fa46e4 # load x3 with value 0xe0fa46e4
sw x3, 0(x2) # store 0xe0fa46e4 in memory
flw f16, 0(x2) # load 0xe0fa46e4 from memory into f16
la x2, scratch
li x3, 0x8645569e # load x3 with value 0x8645569e
sw x3, 0(x2) # store 0x8645569e in memory
flw f4, 0(x2) # load 0x8645569e from memory into f4
fmadd.s f10, f13, f16, f4 # perform operation

# Testcase cp_fs3 (Test source fs3 = f5)
la x2, scratch
li x3, 0x41f52737 # load x3 with value 0x41f52737
sw x3, 0(x2) # store 0x41f52737 in memory
flw f15, 0(x2) # load 0x41f52737 from memory into f15
la x2, scratch
li x3, 0x789be962 # load x3 with value 0x789be962
sw x3, 0(x2) # store 0x789be962 in memory
flw f8, 0(x2) # load 0x789be962 from memory into f8
la x2, scratch
li x3, 0xfc915761 # load x3 with value 0xfc915761
sw x3, 0(x2) # store 0xfc915761 in memory
flw f5, 0(x2) # load 0xfc915761 from memory into f5
fmadd.s f3, f15, f8, f5 # perform operation

# Testcase cp_fs3 (Test source fs3 = f6)
la x2, scratch
li x3, 0x829a6953 # load x3 with value 0x829a6953
sw x3, 0(x2) # store 0x829a6953 in memory
flw f21, 0(x2) # load 0x829a6953 from memory into f21
la x2, scratch
li x3, 0xd9645c2d # load x3 with value 0xd9645c2d
sw x3, 0(x2) # store 0xd9645c2d in memory
flw f3, 0(x2) # load 0xd9645c2d from memory into f3
la x2, scratch
li x3, 0x793c0147 # load x3 with value 0x793c0147
sw x3, 0(x2) # store 0x793c0147 in memory
flw f6, 0(x2) # load 0x793c0147 from memory into f6
fmadd.s f7, f21, f3, f6 # perform operation

# Testcase cp_fs3 (Test source fs3 = f7)
la x2, scratch
li x3, 0xc59b8d19 # load x3 with value 0xc59b8d19
sw x3, 0(x2) # store 0xc59b8d19 in memory
flw f2, 0(x2) # load 0xc59b8d19 from memory into f2
la x2, scratch
li x3, 0x79a049cd # load x3 with value 0x79a049cd
sw x3, 0(x2) # store 0x79a049cd in memory
flw f24, 0(x2) # load 0x79a049cd from memory into f24
la x2, scratch
li x3, 0xc6421255 # load x3 with value 0xc6421255
sw x3, 0(x2) # store 0xc6421255 in memory
flw f7, 0(x2) # load 0xc6421255 from memory into f7
fmadd.s f14, f2, f24, f7 # perform operation

# Testcase cp_fs3 (Test source fs3 = f8)
la x2, scratch
li x3, 0x28b46cc4 # load x3 with value 0x28b46cc4
sw x3, 0(x2) # store 0x28b46cc4 in memory
flw f1, 0(x2) # load 0x28b46cc4 from memory into f1
la x2, scratch
li x3, 0x86836eaf # load x3 with value 0x86836eaf
sw x3, 0(x2) # store 0x86836eaf in memory
flw f25, 0(x2) # load 0x86836eaf from memory into f25
la x2, scratch
li x3, 0xbed796e7 # load x3 with value 0xbed796e7
sw x3, 0(x2) # store 0xbed796e7 in memory
flw f8, 0(x2) # load 0xbed796e7 from memory into f8
fmadd.s f19, f1, f25, f8 # perform operation

# Testcase cp_fs3 (Test source fs3 = f9)
la x2, scratch
li x3, 0x7797d44c # load x3 with value 0x7797d44c
sw x3, 0(x2) # store 0x7797d44c in memory
flw f29, 0(x2) # load 0x7797d44c from memory into f29
la x2, scratch
li x3, 0x3f5d704c # load x3 with value 0x3f5d704c
sw x3, 0(x2) # store 0x3f5d704c in memory
flw f3, 0(x2) # load 0x3f5d704c from memory into f3
la x2, scratch
li x3, 0xdae81cba # load x3 with value 0xdae81cba
sw x3, 0(x2) # store 0xdae81cba in memory
flw f9, 0(x2) # load 0xdae81cba from memory into f9
fmadd.s f31, f29, f3, f9 # perform operation

# Testcase cp_fs3 (Test source fs3 = f10)
la x2, scratch
li x3, 0xf06898a1 # load x3 with value 0xf06898a1
sw x3, 0(x2) # store 0xf06898a1 in memory
flw f7, 0(x2) # load 0xf06898a1 from memory into f7
la x2, scratch
li x3, 0xd6082630 # load x3 with value 0xd6082630
sw x3, 0(x2) # store 0xd6082630 in memory
flw f13, 0(x2) # load 0xd6082630 from memory into f13
la x2, scratch
li x3, 0x6ace4205 # load x3 with value 0x6ace4205
sw x3, 0(x2) # store 0x6ace4205 in memory
flw f10, 0(x2) # load 0x6ace4205 from memory into f10
fmadd.s f23, f7, f13, f10 # perform operation

# Testcase cp_fs3 (Test source fs3 = f11)
la x2, scratch
li x3, 0x215a640f # load x3 with value 0x215a640f
sw x3, 0(x2) # store 0x215a640f in memory
flw f6, 0(x2) # load 0x215a640f from memory into f6
la x2, scratch
li x3, 0x935fc40e # load x3 with value 0x935fc40e
sw x3, 0(x2) # store 0x935fc40e in memory
flw f19, 0(x2) # load 0x935fc40e from memory into f19
la x2, scratch
li x3, 0x3d3a0a62 # load x3 with value 0x3d3a0a62
sw x3, 0(x2) # store 0x3d3a0a62 in memory
flw f11, 0(x2) # load 0x3d3a0a62 from memory into f11
fmadd.s f17, f6, f19, f11 # perform operation

# Testcase cp_fs3 (Test source fs3 = f12)
la x2, scratch
li x3, 0xc178f13b # load x3 with value 0xc178f13b
sw x3, 0(x2) # store 0xc178f13b in memory
flw f13, 0(x2) # load 0xc178f13b from memory into f13
la x2, scratch
li x3, 0xf9866497 # load x3 with value 0xf9866497
sw x3, 0(x2) # store 0xf9866497 in memory
flw f10, 0(x2) # load 0xf9866497 from memory into f10
la x2, scratch
li x3, 0xe44088ee # load x3 with value 0xe44088ee
sw x3, 0(x2) # store 0xe44088ee in memory
flw f12, 0(x2) # load 0xe44088ee from memory into f12
fmadd.s f27, f13, f10, f12 # perform operation

# Testcase cp_fs3 (Test source fs3 = f13)
la x2, scratch
li x3, 0x26e6e8f0 # load x3 with value 0x26e6e8f0
sw x3, 0(x2) # store 0x26e6e8f0 in memory
flw f17, 0(x2) # load 0x26e6e8f0 from memory into f17
la x2, scratch
li x3, 0x73ca068e # load x3 with value 0x73ca068e
sw x3, 0(x2) # store 0x73ca068e in memory
flw f11, 0(x2) # load 0x73ca068e from memory into f11
la x2, scratch
li x3, 0x42f2c094 # load x3 with value 0x42f2c094
sw x3, 0(x2) # store 0x42f2c094 in memory
flw f13, 0(x2) # load 0x42f2c094 from memory into f13
fmadd.s f6, f17, f11, f13 # perform operation

# Testcase cp_fs3 (Test source fs3 = f14)
la x2, scratch
li x3, 0xfcf9767d # load x3 with value 0xfcf9767d
sw x3, 0(x2) # store 0xfcf9767d in memory
flw f15, 0(x2) # load 0xfcf9767d from memory into f15
la x2, scratch
li x3, 0x854db08c # load x3 with value 0x854db08c
sw x3, 0(x2) # store 0x854db08c in memory
flw f26, 0(x2) # load 0x854db08c from memory into f26
la x2, scratch
li x3, 0x11e0ca47 # load x3 with value 0x11e0ca47
sw x3, 0(x2) # store 0x11e0ca47 in memory
flw f14, 0(x2) # load 0x11e0ca47 from memory into f14
fmadd.s f2, f15, f26, f14 # perform operation

# Testcase cp_fs3 (Test source fs3 = f15)
la x2, scratch
li x3, 0xad845603 # load x3 with value 0xad845603
sw x3, 0(x2) # store 0xad845603 in memory
flw f20, 0(x2) # load 0xad845603 from memory into f20
la x2, scratch
li x3, 0x1d495981 # load x3 with value 0x1d495981
sw x3, 0(x2) # store 0x1d495981 in memory
flw f19, 0(x2) # load 0x1d495981 from memory into f19
la x2, scratch
li x3, 0x7e96eded # load x3 with value 0x7e96eded
sw x3, 0(x2) # store 0x7e96eded in memory
flw f15, 0(x2) # load 0x7e96eded from memory into f15
fmadd.s f17, f20, f19, f15 # perform operation

# Testcase cp_fs3 (Test source fs3 = f16)
la x2, scratch
li x3, 0xb461ef59 # load x3 with value 0xb461ef59
sw x3, 0(x2) # store 0xb461ef59 in memory
flw f20, 0(x2) # load 0xb461ef59 from memory into f20
la x2, scratch
li x3, 0xe7161b53 # load x3 with value 0xe7161b53
sw x3, 0(x2) # store 0xe7161b53 in memory
flw f24, 0(x2) # load 0xe7161b53 from memory into f24
la x2, scratch
li x3, 0xf3e751eb # load x3 with value 0xf3e751eb
sw x3, 0(x2) # store 0xf3e751eb in memory
flw f16, 0(x2) # load 0xf3e751eb from memory into f16
fmadd.s f22, f20, f24, f16 # perform operation

# Testcase cp_fs3 (Test source fs3 = f17)
la x2, scratch
li x3, 0x26bc841b # load x3 with value 0x26bc841b
sw x3, 0(x2) # store 0x26bc841b in memory
flw f2, 0(x2) # load 0x26bc841b from memory into f2
la x2, scratch
li x3, 0x54d89fa1 # load x3 with value 0x54d89fa1
sw x3, 0(x2) # store 0x54d89fa1 in memory
flw f31, 0(x2) # load 0x54d89fa1 from memory into f31
la x2, scratch
li x3, 0x0c854c9d # load x3 with value 0x0c854c9d
sw x3, 0(x2) # store 0x0c854c9d in memory
flw f17, 0(x2) # load 0x0c854c9d from memory into f17
fmadd.s f13, f2, f31, f17 # perform operation

# Testcase cp_fs3 (Test source fs3 = f18)
la x2, scratch
li x3, 0x0e8c3d2c # load x3 with value 0x0e8c3d2c
sw x3, 0(x2) # store 0x0e8c3d2c in memory
flw f29, 0(x2) # load 0x0e8c3d2c from memory into f29
la x2, scratch
li x3, 0xf89a6c35 # load x3 with value 0xf89a6c35
sw x3, 0(x2) # store 0xf89a6c35 in memory
flw f15, 0(x2) # load 0xf89a6c35 from memory into f15
la x2, scratch
li x3, 0x129817ff # load x3 with value 0x129817ff
sw x3, 0(x2) # store 0x129817ff in memory
flw f18, 0(x2) # load 0x129817ff from memory into f18
fmadd.s f8, f29, f15, f18 # perform operation

# Testcase cp_fs3 (Test source fs3 = f19)
la x2, scratch
li x3, 0x7ebd1c8c # load x3 with value 0x7ebd1c8c
sw x3, 0(x2) # store 0x7ebd1c8c in memory
flw f11, 0(x2) # load 0x7ebd1c8c from memory into f11
la x2, scratch
li x3, 0x610dd821 # load x3 with value 0x610dd821
sw x3, 0(x2) # store 0x610dd821 in memory
flw f13, 0(x2) # load 0x610dd821 from memory into f13
la x2, scratch
li x3, 0x8c1a02f3 # load x3 with value 0x8c1a02f3
sw x3, 0(x2) # store 0x8c1a02f3 in memory
flw f19, 0(x2) # load 0x8c1a02f3 from memory into f19
fmadd.s f26, f11, f13, f19 # perform operation

# Testcase cp_fs3 (Test source fs3 = f20)
la x2, scratch
li x3, 0x2c87d99a # load x3 with value 0x2c87d99a
sw x3, 0(x2) # store 0x2c87d99a in memory
flw f1, 0(x2) # load 0x2c87d99a from memory into f1
la x2, scratch
li x3, 0xcd0cc3c8 # load x3 with value 0xcd0cc3c8
sw x3, 0(x2) # store 0xcd0cc3c8 in memory
flw f26, 0(x2) # load 0xcd0cc3c8 from memory into f26
la x2, scratch
li x3, 0xc735bc2c # load x3 with value 0xc735bc2c
sw x3, 0(x2) # store 0xc735bc2c in memory
flw f20, 0(x2) # load 0xc735bc2c from memory into f20
fmadd.s f25, f1, f26, f20 # perform operation

# Testcase cp_fs3 (Test source fs3 = f21)
la x2, scratch
li x3, 0x5a98874b # load x3 with value 0x5a98874b
sw x3, 0(x2) # store 0x5a98874b in memory
flw f29, 0(x2) # load 0x5a98874b from memory into f29
la x2, scratch
li x3, 0xfb8bbf0b # load x3 with value 0xfb8bbf0b
sw x3, 0(x2) # store 0xfb8bbf0b in memory
flw f5, 0(x2) # load 0xfb8bbf0b from memory into f5
la x2, scratch
li x3, 0x8a7b4fb7 # load x3 with value 0x8a7b4fb7
sw x3, 0(x2) # store 0x8a7b4fb7 in memory
flw f21, 0(x2) # load 0x8a7b4fb7 from memory into f21
fmadd.s f20, f29, f5, f21 # perform operation

# Testcase cp_fs3 (Test source fs3 = f22)
la x2, scratch
li x3, 0xcd7ae7ad # load x3 with value 0xcd7ae7ad
sw x3, 0(x2) # store 0xcd7ae7ad in memory
flw f23, 0(x2) # load 0xcd7ae7ad from memory into f23
la x2, scratch
li x3, 0x7d6066c2 # load x3 with value 0x7d6066c2
sw x3, 0(x2) # store 0x7d6066c2 in memory
flw f5, 0(x2) # load 0x7d6066c2 from memory into f5
la x2, scratch
li x3, 0x4dbb97a4 # load x3 with value 0x4dbb97a4
sw x3, 0(x2) # store 0x4dbb97a4 in memory
flw f22, 0(x2) # load 0x4dbb97a4 from memory into f22
fmadd.s f7, f23, f5, f22 # perform operation

# Testcase cp_fs3 (Test source fs3 = f23)
la x2, scratch
li x3, 0xd5653b8d # load x3 with value 0xd5653b8d
sw x3, 0(x2) # store 0xd5653b8d in memory
flw f7, 0(x2) # load 0xd5653b8d from memory into f7
la x2, scratch
li x3, 0xee2c1507 # load x3 with value 0xee2c1507
sw x3, 0(x2) # store 0xee2c1507 in memory
flw f27, 0(x2) # load 0xee2c1507 from memory into f27
la x2, scratch
li x3, 0x750f5aec # load x3 with value 0x750f5aec
sw x3, 0(x2) # store 0x750f5aec in memory
flw f23, 0(x2) # load 0x750f5aec from memory into f23
fmadd.s f25, f7, f27, f23 # perform operation

# Testcase cp_fs3 (Test source fs3 = f24)
la x2, scratch
li x3, 0x11050414 # load x3 with value 0x11050414
sw x3, 0(x2) # store 0x11050414 in memory
flw f7, 0(x2) # load 0x11050414 from memory into f7
la x2, scratch
li x3, 0xb652b9f7 # load x3 with value 0xb652b9f7
sw x3, 0(x2) # store 0xb652b9f7 in memory
flw f12, 0(x2) # load 0xb652b9f7 from memory into f12
la x2, scratch
li x3, 0x914c20e5 # load x3 with value 0x914c20e5
sw x3, 0(x2) # store 0x914c20e5 in memory
flw f24, 0(x2) # load 0x914c20e5 from memory into f24
fmadd.s f6, f7, f12, f24 # perform operation

# Testcase cp_fs3 (Test source fs3 = f25)
la x2, scratch
li x3, 0xb5bb2fcd # load x3 with value 0xb5bb2fcd
sw x3, 0(x2) # store 0xb5bb2fcd in memory
flw f10, 0(x2) # load 0xb5bb2fcd from memory into f10
la x2, scratch
li x3, 0xb69cbb54 # load x3 with value 0xb69cbb54
sw x3, 0(x2) # store 0xb69cbb54 in memory
flw f7, 0(x2) # load 0xb69cbb54 from memory into f7
la x2, scratch
li x3, 0x4a506f45 # load x3 with value 0x4a506f45
sw x3, 0(x2) # store 0x4a506f45 in memory
flw f25, 0(x2) # load 0x4a506f45 from memory into f25
fmadd.s f29, f10, f7, f25 # perform operation

# Testcase cp_fs3 (Test source fs3 = f26)
la x2, scratch
li x3, 0xf5ccee5c # load x3 with value 0xf5ccee5c
sw x3, 0(x2) # store 0xf5ccee5c in memory
flw f1, 0(x2) # load 0xf5ccee5c from memory into f1
la x2, scratch
li x3, 0x2f398d89 # load x3 with value 0x2f398d89
sw x3, 0(x2) # store 0x2f398d89 in memory
flw f21, 0(x2) # load 0x2f398d89 from memory into f21
la x2, scratch
li x3, 0x0e5abf66 # load x3 with value 0x0e5abf66
sw x3, 0(x2) # store 0x0e5abf66 in memory
flw f26, 0(x2) # load 0x0e5abf66 from memory into f26
fmadd.s f3, f1, f21, f26 # perform operation

# Testcase cp_fs3 (Test source fs3 = f27)
la x2, scratch
li x3, 0xe1fcef56 # load x3 with value 0xe1fcef56
sw x3, 0(x2) # store 0xe1fcef56 in memory
flw f30, 0(x2) # load 0xe1fcef56 from memory into f30
la x2, scratch
li x3, 0xb8eefe90 # load x3 with value 0xb8eefe90
sw x3, 0(x2) # store 0xb8eefe90 in memory
flw f2, 0(x2) # load 0xb8eefe90 from memory into f2
la x2, scratch
li x3, 0xd32fd8b8 # load x3 with value 0xd32fd8b8
sw x3, 0(x2) # store 0xd32fd8b8 in memory
flw f27, 0(x2) # load 0xd32fd8b8 from memory into f27
fmadd.s f12, f30, f2, f27 # perform operation

# Testcase cp_fs3 (Test source fs3 = f28)
la x2, scratch
li x3, 0x5416ea54 # load x3 with value 0x5416ea54
sw x3, 0(x2) # store 0x5416ea54 in memory
flw f25, 0(x2) # load 0x5416ea54 from memory into f25
la x2, scratch
li x3, 0x4456750d # load x3 with value 0x4456750d
sw x3, 0(x2) # store 0x4456750d in memory
flw f20, 0(x2) # load 0x4456750d from memory into f20
la x2, scratch
li x3, 0x91da5ec8 # load x3 with value 0x91da5ec8
sw x3, 0(x2) # store 0x91da5ec8 in memory
flw f28, 0(x2) # load 0x91da5ec8 from memory into f28
fmadd.s f10, f25, f20, f28 # perform operation

# Testcase cp_fs3 (Test source fs3 = f29)
la x2, scratch
li x3, 0xf6883dc9 # load x3 with value 0xf6883dc9
sw x3, 0(x2) # store 0xf6883dc9 in memory
flw f27, 0(x2) # load 0xf6883dc9 from memory into f27
la x2, scratch
li x3, 0x9ad093e0 # load x3 with value 0x9ad093e0
sw x3, 0(x2) # store 0x9ad093e0 in memory
flw f20, 0(x2) # load 0x9ad093e0 from memory into f20
la x2, scratch
li x3, 0xfe51ed5d # load x3 with value 0xfe51ed5d
sw x3, 0(x2) # store 0xfe51ed5d in memory
flw f29, 0(x2) # load 0xfe51ed5d from memory into f29
fmadd.s f7, f27, f20, f29 # perform operation

# Testcase cp_fs3 (Test source fs3 = f30)
la x2, scratch
li x3, 0xe09166eb # load x3 with value 0xe09166eb
sw x3, 0(x2) # store 0xe09166eb in memory
flw f31, 0(x2) # load 0xe09166eb from memory into f31
la x2, scratch
li x3, 0x170829cb # load x3 with value 0x170829cb
sw x3, 0(x2) # store 0x170829cb in memory
flw f21, 0(x2) # load 0x170829cb from memory into f21
la x2, scratch
li x3, 0x828b9d79 # load x3 with value 0x828b9d79
sw x3, 0(x2) # store 0x828b9d79 in memory
flw f30, 0(x2) # load 0x828b9d79 from memory into f30
fmadd.s f17, f31, f21, f30 # perform operation

# Testcase cp_fs3 (Test source fs3 = f31)
la x2, scratch
li x3, 0xcbec1d2f # load x3 with value 0xcbec1d2f
sw x3, 0(x2) # store 0xcbec1d2f in memory
flw f9, 0(x2) # load 0xcbec1d2f from memory into f9
la x2, scratch
li x3, 0x71d5a775 # load x3 with value 0x71d5a775
sw x3, 0(x2) # store 0x71d5a775 in memory
flw f16, 0(x2) # load 0x71d5a775 from memory into f16
la x2, scratch
li x3, 0x0674d212 # load x3 with value 0x0674d212
sw x3, 0(x2) # store 0x0674d212 in memory
flw f31, 0(x2) # load 0x0674d212 from memory into f31
fmadd.s f31, f9, f16, f31 # perform operation

# Testcase cp_fd (Test destination fd = x0)
la x2, scratch
li x3, 0xdfdfedb3 # load x3 with value 0xdfdfedb3
sw x3, 0(x2) # store 0xdfdfedb3 in memory
flw f28, 0(x2) # load 0xdfdfedb3 from memory into f28
la x2, scratch
li x3, 0x7c5c3051 # load x3 with value 0x7c5c3051
sw x3, 0(x2) # store 0x7c5c3051 in memory
flw f24, 0(x2) # load 0x7c5c3051 from memory into f24
la x2, scratch
li x3, 0xfeccbc84 # load x3 with value 0xfeccbc84
sw x3, 0(x2) # store 0xfeccbc84 in memory
flw f10, 0(x2) # load 0xfeccbc84 from memory into f10
fmadd.s f0, f28, f24, f10 # perform operation

# Testcase cp_fd (Test destination fd = x1)
la x2, scratch
li x3, 0xad3a9bad # load x3 with value 0xad3a9bad
sw x3, 0(x2) # store 0xad3a9bad in memory
flw f13, 0(x2) # load 0xad3a9bad from memory into f13
la x2, scratch
li x3, 0x2c182eca # load x3 with value 0x2c182eca
sw x3, 0(x2) # store 0x2c182eca in memory
flw f8, 0(x2) # load 0x2c182eca from memory into f8
la x2, scratch
li x3, 0x471001a3 # load x3 with value 0x471001a3
sw x3, 0(x2) # store 0x471001a3 in memory
flw f3, 0(x2) # load 0x471001a3 from memory into f3
fmadd.s f1, f13, f8, f3 # perform operation

# Testcase cp_fd (Test destination fd = x2)
la x2, scratch
li x3, 0x2b20b982 # load x3 with value 0x2b20b982
sw x3, 0(x2) # store 0x2b20b982 in memory
flw f3, 0(x2) # load 0x2b20b982 from memory into f3
la x2, scratch
li x3, 0x2c3738b1 # load x3 with value 0x2c3738b1
sw x3, 0(x2) # store 0x2c3738b1 in memory
flw f17, 0(x2) # load 0x2c3738b1 from memory into f17
la x2, scratch
li x3, 0x29e73b95 # load x3 with value 0x29e73b95
sw x3, 0(x2) # store 0x29e73b95 in memory
flw f18, 0(x2) # load 0x29e73b95 from memory into f18
fmadd.s f2, f3, f17, f18 # perform operation

# Testcase cp_fd (Test destination fd = x3)
la x2, scratch
li x3, 0x872d2e07 # load x3 with value 0x872d2e07
sw x3, 0(x2) # store 0x872d2e07 in memory
flw f5, 0(x2) # load 0x872d2e07 from memory into f5
la x2, scratch
li x3, 0x541c5d99 # load x3 with value 0x541c5d99
sw x3, 0(x2) # store 0x541c5d99 in memory
flw f19, 0(x2) # load 0x541c5d99 from memory into f19
la x2, scratch
li x3, 0x8923486b # load x3 with value 0x8923486b
sw x3, 0(x2) # store 0x8923486b in memory
flw f10, 0(x2) # load 0x8923486b from memory into f10
fmadd.s f3, f5, f19, f10 # perform operation

# Testcase cp_fd (Test destination fd = x4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x397bb84b # load x3 with value 0x397bb84b
sw x3, 0(x2) # store 0x397bb84b in memory
flw f1, 0(x2) # load 0x397bb84b from memory into f1
la x2, scratch
li x3, 0x6aea8bcb # load x3 with value 0x6aea8bcb
sw x3, 0(x2) # store 0x6aea8bcb in memory
flw f28, 0(x2) # load 0x6aea8bcb from memory into f28
la x2, scratch
li x3, 0x61e45e61 # load x3 with value 0x61e45e61
sw x3, 0(x2) # store 0x61e45e61 in memory
flw f13, 0(x2) # load 0x61e45e61 from memory into f13
fmadd.s f4, f1, f28, f13 # perform operation

# Testcase cp_fd (Test destination fd = x5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa4f485a7 # load x3 with value 0xa4f485a7
sw x3, 0(x2) # store 0xa4f485a7 in memory
flw f17, 0(x2) # load 0xa4f485a7 from memory into f17
la x2, scratch
li x3, 0x281b18d2 # load x3 with value 0x281b18d2
sw x3, 0(x2) # store 0x281b18d2 in memory
flw f4, 0(x2) # load 0x281b18d2 from memory into f4
la x2, scratch
li x3, 0x18240934 # load x3 with value 0x18240934
sw x3, 0(x2) # store 0x18240934 in memory
flw f13, 0(x2) # load 0x18240934 from memory into f13
fmadd.s f5, f17, f4, f13 # perform operation

# Testcase cp_fd (Test destination fd = x6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x78cae467 # load x3 with value 0x78cae467
sw x3, 0(x2) # store 0x78cae467 in memory
flw f1, 0(x2) # load 0x78cae467 from memory into f1
la x2, scratch
li x3, 0x07bf9347 # load x3 with value 0x07bf9347
sw x3, 0(x2) # store 0x07bf9347 in memory
flw f18, 0(x2) # load 0x07bf9347 from memory into f18
la x2, scratch
li x3, 0x4573d3a2 # load x3 with value 0x4573d3a2
sw x3, 0(x2) # store 0x4573d3a2 in memory
flw f24, 0(x2) # load 0x4573d3a2 from memory into f24
fmadd.s f6, f1, f18, f24 # perform operation

# Testcase cp_fd (Test destination fd = x7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xa282382c # load x3 with value 0xa282382c
sw x3, 0(x2) # store 0xa282382c in memory
flw f30, 0(x2) # load 0xa282382c from memory into f30
la x2, scratch
li x3, 0xc68d3dd1 # load x3 with value 0xc68d3dd1
sw x3, 0(x2) # store 0xc68d3dd1 in memory
flw f17, 0(x2) # load 0xc68d3dd1 from memory into f17
la x2, scratch
li x3, 0x97dec530 # load x3 with value 0x97dec530
sw x3, 0(x2) # store 0x97dec530 in memory
flw f15, 0(x2) # load 0x97dec530 from memory into f15
fmadd.s f7, f30, f17, f15 # perform operation

# Testcase cp_fd (Test destination fd = x8)
la x2, scratch
li x3, 0x5fd73035 # load x3 with value 0x5fd73035
sw x3, 0(x2) # store 0x5fd73035 in memory
flw f20, 0(x2) # load 0x5fd73035 from memory into f20
la x2, scratch
li x3, 0xf61c0d72 # load x3 with value 0xf61c0d72
sw x3, 0(x2) # store 0xf61c0d72 in memory
flw f29, 0(x2) # load 0xf61c0d72 from memory into f29
la x2, scratch
li x3, 0xb821da83 # load x3 with value 0xb821da83
sw x3, 0(x2) # store 0xb821da83 in memory
flw f7, 0(x2) # load 0xb821da83 from memory into f7
fmadd.s f8, f20, f29, f7 # perform operation

# Testcase cp_fd (Test destination fd = x9)
la x2, scratch
li x3, 0xe45f6167 # load x3 with value 0xe45f6167
sw x3, 0(x2) # store 0xe45f6167 in memory
flw f11, 0(x2) # load 0xe45f6167 from memory into f11
la x2, scratch
li x3, 0x1fa24316 # load x3 with value 0x1fa24316
sw x3, 0(x2) # store 0x1fa24316 in memory
flw f8, 0(x2) # load 0x1fa24316 from memory into f8
la x2, scratch
li x3, 0x71a92248 # load x3 with value 0x71a92248
sw x3, 0(x2) # store 0x71a92248 in memory
flw f28, 0(x2) # load 0x71a92248 from memory into f28
fmadd.s f9, f11, f8, f28 # perform operation

# Testcase cp_fd (Test destination fd = x10)
la x2, scratch
li x3, 0xba22aef8 # load x3 with value 0xba22aef8
sw x3, 0(x2) # store 0xba22aef8 in memory
flw f17, 0(x2) # load 0xba22aef8 from memory into f17
la x2, scratch
li x3, 0x6fc2a078 # load x3 with value 0x6fc2a078
sw x3, 0(x2) # store 0x6fc2a078 in memory
flw f21, 0(x2) # load 0x6fc2a078 from memory into f21
la x2, scratch
li x3, 0xc8256596 # load x3 with value 0xc8256596
sw x3, 0(x2) # store 0xc8256596 in memory
flw f8, 0(x2) # load 0xc8256596 from memory into f8
fmadd.s f10, f17, f21, f8 # perform operation

# Testcase cp_fd (Test destination fd = x11)
la x2, scratch
li x3, 0x441a0f0e # load x3 with value 0x441a0f0e
sw x3, 0(x2) # store 0x441a0f0e in memory
flw f2, 0(x2) # load 0x441a0f0e from memory into f2
la x2, scratch
li x3, 0x6508ba74 # load x3 with value 0x6508ba74
sw x3, 0(x2) # store 0x6508ba74 in memory
flw f24, 0(x2) # load 0x6508ba74 from memory into f24
la x2, scratch
li x3, 0xc6a1508f # load x3 with value 0xc6a1508f
sw x3, 0(x2) # store 0xc6a1508f in memory
flw f21, 0(x2) # load 0xc6a1508f from memory into f21
fmadd.s f11, f2, f24, f21 # perform operation

# Testcase cp_fd (Test destination fd = x12)
la x2, scratch
li x3, 0x5b951cab # load x3 with value 0x5b951cab
sw x3, 0(x2) # store 0x5b951cab in memory
flw f23, 0(x2) # load 0x5b951cab from memory into f23
la x2, scratch
li x3, 0x92b047bd # load x3 with value 0x92b047bd
sw x3, 0(x2) # store 0x92b047bd in memory
flw f11, 0(x2) # load 0x92b047bd from memory into f11
la x2, scratch
li x3, 0xa1479927 # load x3 with value 0xa1479927
sw x3, 0(x2) # store 0xa1479927 in memory
flw f1, 0(x2) # load 0xa1479927 from memory into f1
fmadd.s f12, f23, f11, f1 # perform operation

# Testcase cp_fd (Test destination fd = x13)
la x2, scratch
li x3, 0xbc17caf9 # load x3 with value 0xbc17caf9
sw x3, 0(x2) # store 0xbc17caf9 in memory
flw f5, 0(x2) # load 0xbc17caf9 from memory into f5
la x2, scratch
li x3, 0xfed52175 # load x3 with value 0xfed52175
sw x3, 0(x2) # store 0xfed52175 in memory
flw f29, 0(x2) # load 0xfed52175 from memory into f29
la x2, scratch
li x3, 0x5f7f0a8b # load x3 with value 0x5f7f0a8b
sw x3, 0(x2) # store 0x5f7f0a8b in memory
flw f22, 0(x2) # load 0x5f7f0a8b from memory into f22
fmadd.s f13, f5, f29, f22 # perform operation

# Testcase cp_fd (Test destination fd = x14)
la x2, scratch
li x3, 0xa87d898b # load x3 with value 0xa87d898b
sw x3, 0(x2) # store 0xa87d898b in memory
flw f21, 0(x2) # load 0xa87d898b from memory into f21
la x2, scratch
li x3, 0x8665bf46 # load x3 with value 0x8665bf46
sw x3, 0(x2) # store 0x8665bf46 in memory
flw f17, 0(x2) # load 0x8665bf46 from memory into f17
la x2, scratch
li x3, 0x9c148c39 # load x3 with value 0x9c148c39
sw x3, 0(x2) # store 0x9c148c39 in memory
flw f10, 0(x2) # load 0x9c148c39 from memory into f10
fmadd.s f14, f21, f17, f10 # perform operation

# Testcase cp_fd (Test destination fd = x15)
la x2, scratch
li x3, 0xaeb86781 # load x3 with value 0xaeb86781
sw x3, 0(x2) # store 0xaeb86781 in memory
flw f13, 0(x2) # load 0xaeb86781 from memory into f13
la x2, scratch
li x3, 0xd39421b0 # load x3 with value 0xd39421b0
sw x3, 0(x2) # store 0xd39421b0 in memory
flw f8, 0(x2) # load 0xd39421b0 from memory into f8
la x2, scratch
li x3, 0x9f45b490 # load x3 with value 0x9f45b490
sw x3, 0(x2) # store 0x9f45b490 in memory
flw f18, 0(x2) # load 0x9f45b490 from memory into f18
fmadd.s f15, f13, f8, f18 # perform operation

# Testcase cp_fd (Test destination fd = x16)
la x2, scratch
li x3, 0x9400e036 # load x3 with value 0x9400e036
sw x3, 0(x2) # store 0x9400e036 in memory
flw f15, 0(x2) # load 0x9400e036 from memory into f15
la x2, scratch
li x3, 0xa05927e1 # load x3 with value 0xa05927e1
sw x3, 0(x2) # store 0xa05927e1 in memory
flw f7, 0(x2) # load 0xa05927e1 from memory into f7
la x2, scratch
li x3, 0x805cc87e # load x3 with value 0x805cc87e
sw x3, 0(x2) # store 0x805cc87e in memory
flw f18, 0(x2) # load 0x805cc87e from memory into f18
fmadd.s f16, f15, f7, f18 # perform operation

# Testcase cp_fd (Test destination fd = x17)
la x2, scratch
li x3, 0xea95433c # load x3 with value 0xea95433c
sw x3, 0(x2) # store 0xea95433c in memory
flw f23, 0(x2) # load 0xea95433c from memory into f23
la x2, scratch
li x3, 0x1204e38a # load x3 with value 0x1204e38a
sw x3, 0(x2) # store 0x1204e38a in memory
flw f12, 0(x2) # load 0x1204e38a from memory into f12
la x2, scratch
li x3, 0x61ebe671 # load x3 with value 0x61ebe671
sw x3, 0(x2) # store 0x61ebe671 in memory
flw f6, 0(x2) # load 0x61ebe671 from memory into f6
fmadd.s f17, f23, f12, f6 # perform operation

# Testcase cp_fd (Test destination fd = x18)
la x2, scratch
li x3, 0x2b16d474 # load x3 with value 0x2b16d474
sw x3, 0(x2) # store 0x2b16d474 in memory
flw f14, 0(x2) # load 0x2b16d474 from memory into f14
la x2, scratch
li x3, 0x930ad544 # load x3 with value 0x930ad544
sw x3, 0(x2) # store 0x930ad544 in memory
flw f5, 0(x2) # load 0x930ad544 from memory into f5
la x2, scratch
li x3, 0xbdba5ced # load x3 with value 0xbdba5ced
sw x3, 0(x2) # store 0xbdba5ced in memory
flw f10, 0(x2) # load 0xbdba5ced from memory into f10
fmadd.s f18, f14, f5, f10 # perform operation

# Testcase cp_fd (Test destination fd = x19)
la x2, scratch
li x3, 0x5f6b21b7 # load x3 with value 0x5f6b21b7
sw x3, 0(x2) # store 0x5f6b21b7 in memory
flw f21, 0(x2) # load 0x5f6b21b7 from memory into f21
la x2, scratch
li x3, 0x8c70f30c # load x3 with value 0x8c70f30c
sw x3, 0(x2) # store 0x8c70f30c in memory
flw f17, 0(x2) # load 0x8c70f30c from memory into f17
la x2, scratch
li x3, 0x5685a3a5 # load x3 with value 0x5685a3a5
sw x3, 0(x2) # store 0x5685a3a5 in memory
flw f9, 0(x2) # load 0x5685a3a5 from memory into f9
fmadd.s f19, f21, f17, f9 # perform operation

# Testcase cp_fd (Test destination fd = x20)
la x2, scratch
li x3, 0xf1cce118 # load x3 with value 0xf1cce118
sw x3, 0(x2) # store 0xf1cce118 in memory
flw f25, 0(x2) # load 0xf1cce118 from memory into f25
la x2, scratch
li x3, 0x71c5e0bc # load x3 with value 0x71c5e0bc
sw x3, 0(x2) # store 0x71c5e0bc in memory
flw f9, 0(x2) # load 0x71c5e0bc from memory into f9
la x2, scratch
li x3, 0xcdba08ce # load x3 with value 0xcdba08ce
sw x3, 0(x2) # store 0xcdba08ce in memory
flw f15, 0(x2) # load 0xcdba08ce from memory into f15
fmadd.s f20, f25, f9, f15 # perform operation

# Testcase cp_fd (Test destination fd = x21)
la x2, scratch
li x3, 0xf2a51105 # load x3 with value 0xf2a51105
sw x3, 0(x2) # store 0xf2a51105 in memory
flw f1, 0(x2) # load 0xf2a51105 from memory into f1
la x2, scratch
li x3, 0xa470e5d9 # load x3 with value 0xa470e5d9
sw x3, 0(x2) # store 0xa470e5d9 in memory
flw f11, 0(x2) # load 0xa470e5d9 from memory into f11
la x2, scratch
li x3, 0x4db135fe # load x3 with value 0x4db135fe
sw x3, 0(x2) # store 0x4db135fe in memory
flw f30, 0(x2) # load 0x4db135fe from memory into f30
fmadd.s f21, f1, f11, f30 # perform operation

# Testcase cp_fd (Test destination fd = x22)
la x2, scratch
li x3, 0x34540ae0 # load x3 with value 0x34540ae0
sw x3, 0(x2) # store 0x34540ae0 in memory
flw f8, 0(x2) # load 0x34540ae0 from memory into f8
la x2, scratch
li x3, 0xe002da9a # load x3 with value 0xe002da9a
sw x3, 0(x2) # store 0xe002da9a in memory
flw f5, 0(x2) # load 0xe002da9a from memory into f5
la x2, scratch
li x3, 0x6afb7796 # load x3 with value 0x6afb7796
sw x3, 0(x2) # store 0x6afb7796 in memory
flw f10, 0(x2) # load 0x6afb7796 from memory into f10
fmadd.s f22, f8, f5, f10 # perform operation

# Testcase cp_fd (Test destination fd = x23)
la x2, scratch
li x3, 0x745f45ef # load x3 with value 0x745f45ef
sw x3, 0(x2) # store 0x745f45ef in memory
flw f28, 0(x2) # load 0x745f45ef from memory into f28
la x2, scratch
li x3, 0xa57c0221 # load x3 with value 0xa57c0221
sw x3, 0(x2) # store 0xa57c0221 in memory
flw f31, 0(x2) # load 0xa57c0221 from memory into f31
la x2, scratch
li x3, 0xf3c7c42f # load x3 with value 0xf3c7c42f
sw x3, 0(x2) # store 0xf3c7c42f in memory
flw f7, 0(x2) # load 0xf3c7c42f from memory into f7
fmadd.s f23, f28, f31, f7 # perform operation

# Testcase cp_fd (Test destination fd = x24)
la x2, scratch
li x3, 0xc224e8b5 # load x3 with value 0xc224e8b5
sw x3, 0(x2) # store 0xc224e8b5 in memory
flw f22, 0(x2) # load 0xc224e8b5 from memory into f22
la x2, scratch
li x3, 0x277e1b7e # load x3 with value 0x277e1b7e
sw x3, 0(x2) # store 0x277e1b7e in memory
flw f19, 0(x2) # load 0x277e1b7e from memory into f19
la x2, scratch
li x3, 0x277e7d1c # load x3 with value 0x277e7d1c
sw x3, 0(x2) # store 0x277e7d1c in memory
flw f18, 0(x2) # load 0x277e7d1c from memory into f18
fmadd.s f24, f22, f19, f18 # perform operation

# Testcase cp_fd (Test destination fd = x25)
la x2, scratch
li x3, 0xb8531b47 # load x3 with value 0xb8531b47
sw x3, 0(x2) # store 0xb8531b47 in memory
flw f17, 0(x2) # load 0xb8531b47 from memory into f17
la x2, scratch
li x3, 0x7a29347b # load x3 with value 0x7a29347b
sw x3, 0(x2) # store 0x7a29347b in memory
flw f11, 0(x2) # load 0x7a29347b from memory into f11
la x2, scratch
li x3, 0x0ce62536 # load x3 with value 0x0ce62536
sw x3, 0(x2) # store 0x0ce62536 in memory
flw f3, 0(x2) # load 0x0ce62536 from memory into f3
fmadd.s f25, f17, f11, f3 # perform operation

# Testcase cp_fd (Test destination fd = x26)
la x2, scratch
li x3, 0x6afbfa12 # load x3 with value 0x6afbfa12
sw x3, 0(x2) # store 0x6afbfa12 in memory
flw f19, 0(x2) # load 0x6afbfa12 from memory into f19
la x2, scratch
li x3, 0xd4de632b # load x3 with value 0xd4de632b
sw x3, 0(x2) # store 0xd4de632b in memory
flw f17, 0(x2) # load 0xd4de632b from memory into f17
la x2, scratch
li x3, 0x78eff46e # load x3 with value 0x78eff46e
sw x3, 0(x2) # store 0x78eff46e in memory
flw f26, 0(x2) # load 0x78eff46e from memory into f26
fmadd.s f26, f19, f17, f26 # perform operation

# Testcase cp_fd (Test destination fd = x27)
la x2, scratch
li x3, 0x5ef3a6b8 # load x3 with value 0x5ef3a6b8
sw x3, 0(x2) # store 0x5ef3a6b8 in memory
flw f7, 0(x2) # load 0x5ef3a6b8 from memory into f7
la x2, scratch
li x3, 0x54d663ab # load x3 with value 0x54d663ab
sw x3, 0(x2) # store 0x54d663ab in memory
flw f14, 0(x2) # load 0x54d663ab from memory into f14
la x2, scratch
li x3, 0x273dabb9 # load x3 with value 0x273dabb9
sw x3, 0(x2) # store 0x273dabb9 in memory
flw f13, 0(x2) # load 0x273dabb9 from memory into f13
fmadd.s f27, f7, f14, f13 # perform operation

# Testcase cp_fd (Test destination fd = x28)
la x2, scratch
li x3, 0x1fe14f1a # load x3 with value 0x1fe14f1a
sw x3, 0(x2) # store 0x1fe14f1a in memory
flw f18, 0(x2) # load 0x1fe14f1a from memory into f18
la x2, scratch
li x3, 0x1f5e36d2 # load x3 with value 0x1f5e36d2
sw x3, 0(x2) # store 0x1f5e36d2 in memory
flw f9, 0(x2) # load 0x1f5e36d2 from memory into f9
la x2, scratch
li x3, 0x8c68f3d1 # load x3 with value 0x8c68f3d1
sw x3, 0(x2) # store 0x8c68f3d1 in memory
flw f27, 0(x2) # load 0x8c68f3d1 from memory into f27
fmadd.s f28, f18, f9, f27 # perform operation

# Testcase cp_fd (Test destination fd = x29)
la x2, scratch
li x3, 0xbf3a92f8 # load x3 with value 0xbf3a92f8
sw x3, 0(x2) # store 0xbf3a92f8 in memory
flw f9, 0(x2) # load 0xbf3a92f8 from memory into f9
la x2, scratch
li x3, 0xff4ab10e # load x3 with value 0xff4ab10e
sw x3, 0(x2) # store 0xff4ab10e in memory
flw f22, 0(x2) # load 0xff4ab10e from memory into f22
la x2, scratch
li x3, 0x3b062039 # load x3 with value 0x3b062039
sw x3, 0(x2) # store 0x3b062039 in memory
flw f27, 0(x2) # load 0x3b062039 from memory into f27
fmadd.s f29, f9, f22, f27 # perform operation

# Testcase cp_fd (Test destination fd = x30)
la x2, scratch
li x3, 0x70ef77dc # load x3 with value 0x70ef77dc
sw x3, 0(x2) # store 0x70ef77dc in memory
flw f29, 0(x2) # load 0x70ef77dc from memory into f29
la x2, scratch
li x3, 0x1ac43b66 # load x3 with value 0x1ac43b66
sw x3, 0(x2) # store 0x1ac43b66 in memory
flw f26, 0(x2) # load 0x1ac43b66 from memory into f26
la x2, scratch
li x3, 0x59c8ba56 # load x3 with value 0x59c8ba56
sw x3, 0(x2) # store 0x59c8ba56 in memory
flw f31, 0(x2) # load 0x59c8ba56 from memory into f31
fmadd.s f30, f29, f26, f31 # perform operation

# Testcase cp_fd (Test destination fd = x31)
la x2, scratch
li x3, 0x9051bc0f # load x3 with value 0x9051bc0f
sw x3, 0(x2) # store 0x9051bc0f in memory
flw f18, 0(x2) # load 0x9051bc0f from memory into f18
la x2, scratch
li x3, 0x0f5b86a3 # load x3 with value 0x0f5b86a3
sw x3, 0(x2) # store 0x0f5b86a3 in memory
flw f15, 0(x2) # load 0x0f5b86a3 from memory into f15
la x2, scratch
li x3, 0xab85e354 # load x3 with value 0xab85e354
sw x3, 0(x2) # store 0xab85e354 in memory
flw f16, 0(x2) # load 0xab85e354 from memory into f16
fmadd.s f31, f18, f15, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xaccdd0f4 # load x3 with value 0xaccdd0f4
sw x3, 0(x2) # store 0xaccdd0f4 in memory
flw f29, 0(x2) # load 0xaccdd0f4 from memory into f29
la x2, scratch
li x3, 0x11335297 # load x3 with value 0x11335297
sw x3, 0(x2) # store 0x11335297 in memory
flw f6, 0(x2) # load 0x11335297 from memory into f6
fmadd.s f26, f21, f29, f6 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
la x2, scratch
li x3, 0xaec4a5a8 # load x3 with value 0xaec4a5a8
sw x3, 0(x2) # store 0xaec4a5a8 in memory
flw f22, 0(x2) # load 0xaec4a5a8 from memory into f22
la x2, scratch
li x3, 0x521debf4 # load x3 with value 0x521debf4
sw x3, 0(x2) # store 0x521debf4 in memory
flw f25, 0(x2) # load 0x521debf4 from memory into f25
fmadd.s f20, f19, f22, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x279abe67 # load x3 with value 0x279abe67
sw x3, 0(x2) # store 0x279abe67 in memory
flw f24, 0(x2) # load 0x279abe67 from memory into f24
la x2, scratch
li x3, 0x293b1f87 # load x3 with value 0x293b1f87
sw x3, 0(x2) # store 0x293b1f87 in memory
flw f7, 0(x2) # load 0x293b1f87 from memory into f7
fmadd.s f23, f8, f24, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x06433411 # load x3 with value 0x06433411
sw x3, 0(x2) # store 0x06433411 in memory
flw f13, 0(x2) # load 0x06433411 from memory into f13
la x2, scratch
li x3, 0x16ef1696 # load x3 with value 0x16ef1696
sw x3, 0(x2) # store 0x16ef1696 in memory
flw f2, 0(x2) # load 0x16ef1696 from memory into f2
fmadd.s f17, f25, f13, f2 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0x2a12dc66 # load x3 with value 0x2a12dc66
sw x3, 0(x2) # store 0x2a12dc66 in memory
flw f20, 0(x2) # load 0x2a12dc66 from memory into f20
la x2, scratch
li x3, 0xac04279b # load x3 with value 0xac04279b
sw x3, 0(x2) # store 0xac04279b in memory
flw f19, 0(x2) # load 0xac04279b from memory into f19
fmadd.s f6, f13, f20, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0xa3540383 # load x3 with value 0xa3540383
sw x3, 0(x2) # store 0xa3540383 in memory
flw f31, 0(x2) # load 0xa3540383 from memory into f31
la x2, scratch
li x3, 0x6c25edef # load x3 with value 0x6c25edef
sw x3, 0(x2) # store 0x6c25edef in memory
flw f9, 0(x2) # load 0x6c25edef from memory into f9
fmadd.s f7, f18, f31, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0xdbcd65d9 # load x3 with value 0xdbcd65d9
sw x3, 0(x2) # store 0xdbcd65d9 in memory
flw f30, 0(x2) # load 0xdbcd65d9 from memory into f30
la x2, scratch
li x3, 0x5bd125b0 # load x3 with value 0x5bd125b0
sw x3, 0(x2) # store 0x5bd125b0 in memory
flw f3, 0(x2) # load 0x5bd125b0 from memory into f3
fmadd.s f13, f31, f30, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xe8acf46f # load x3 with value 0xe8acf46f
sw x3, 0(x2) # store 0xe8acf46f in memory
flw f6, 0(x2) # load 0xe8acf46f from memory into f6
la x2, scratch
li x3, 0x0deb331e # load x3 with value 0x0deb331e
sw x3, 0(x2) # store 0x0deb331e in memory
flw f3, 0(x2) # load 0x0deb331e from memory into f3
fmadd.s f1, f21, f6, f3 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x7090cc49 # load x3 with value 0x7090cc49
sw x3, 0(x2) # store 0x7090cc49 in memory
flw f18, 0(x2) # load 0x7090cc49 from memory into f18
la x2, scratch
li x3, 0x5f826705 # load x3 with value 0x5f826705
sw x3, 0(x2) # store 0x5f826705 in memory
flw f8, 0(x2) # load 0x5f826705 from memory into f8
fmadd.s f31, f30, f18, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xddf156ef # load x3 with value 0xddf156ef
sw x3, 0(x2) # store 0xddf156ef in memory
flw f31, 0(x2) # load 0xddf156ef from memory into f31
la x2, scratch
li x3, 0x66cf36a1 # load x3 with value 0x66cf36a1
sw x3, 0(x2) # store 0x66cf36a1 in memory
flw f22, 0(x2) # load 0x66cf36a1 from memory into f22
fmadd.s f25, f20, f31, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x1c679a55 # load x3 with value 0x1c679a55
sw x3, 0(x2) # store 0x1c679a55 in memory
flw f2, 0(x2) # load 0x1c679a55 from memory into f2
la x2, scratch
li x3, 0xbe9d58c5 # load x3 with value 0xbe9d58c5
sw x3, 0(x2) # store 0xbe9d58c5 in memory
flw f23, 0(x2) # load 0xbe9d58c5 from memory into f23
fmadd.s f14, f20, f2, f23 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xba1b140c # load x3 with value 0xba1b140c
sw x3, 0(x2) # store 0xba1b140c in memory
flw f13, 0(x2) # load 0xba1b140c from memory into f13
la x2, scratch
li x3, 0x9a419887 # load x3 with value 0x9a419887
sw x3, 0(x2) # store 0x9a419887 in memory
flw f31, 0(x2) # load 0x9a419887 from memory into f31
fmadd.s f12, f30, f13, f31 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x4448a9d3 # load x3 with value 0x4448a9d3
sw x3, 0(x2) # store 0x4448a9d3 in memory
flw f1, 0(x2) # load 0x4448a9d3 from memory into f1
la x2, scratch
li x3, 0xf1aa03d2 # load x3 with value 0xf1aa03d2
sw x3, 0(x2) # store 0xf1aa03d2 in memory
flw f8, 0(x2) # load 0xf1aa03d2 from memory into f8
fmadd.s f3, f14, f1, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xf1b663e6 # load x3 with value 0xf1b663e6
sw x3, 0(x2) # store 0xf1b663e6 in memory
flw f13, 0(x2) # load 0xf1b663e6 from memory into f13
la x2, scratch
li x3, 0x68da6ea6 # load x3 with value 0x68da6ea6
sw x3, 0(x2) # store 0x68da6ea6 in memory
flw f28, 0(x2) # load 0x68da6ea6 from memory into f28
fmadd.s f25, f16, f13, f28 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x445b2acc # load x3 with value 0x445b2acc
sw x3, 0(x2) # store 0x445b2acc in memory
flw f3, 0(x2) # load 0x445b2acc from memory into f3
la x2, scratch
li x3, 0x1c3657bd # load x3 with value 0x1c3657bd
sw x3, 0(x2) # store 0x1c3657bd in memory
flw f16, 0(x2) # load 0x1c3657bd from memory into f16
fmadd.s f29, f10, f3, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0x22020c13 # load x3 with value 0x22020c13
sw x3, 0(x2) # store 0x22020c13 in memory
flw f1, 0(x2) # load 0x22020c13 from memory into f1
la x2, scratch
li x3, 0x0817b8be # load x3 with value 0x0817b8be
sw x3, 0(x2) # store 0x0817b8be in memory
flw f16, 0(x2) # load 0x0817b8be from memory into f16
fmadd.s f10, f6, f1, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xcc06b0ab # load x3 with value 0xcc06b0ab
sw x3, 0(x2) # store 0xcc06b0ab in memory
flw f16, 0(x2) # load 0xcc06b0ab from memory into f16
la x2, scratch
li x3, 0x0b6d9011 # load x3 with value 0x0b6d9011
sw x3, 0(x2) # store 0x0b6d9011 in memory
flw f26, 0(x2) # load 0x0b6d9011 from memory into f26
fmadd.s f8, f27, f16, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x5590355a # load x3 with value 0x5590355a
sw x3, 0(x2) # store 0x5590355a in memory
flw f15, 0(x2) # load 0x5590355a from memory into f15
la x2, scratch
li x3, 0x41e2b449 # load x3 with value 0x41e2b449
sw x3, 0(x2) # store 0x41e2b449 in memory
flw f21, 0(x2) # load 0x41e2b449 from memory into f21
fmadd.s f19, f11, f15, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x454b68df # load x3 with value 0x454b68df
sw x3, 0(x2) # store 0x454b68df in memory
flw f28, 0(x2) # load 0x454b68df from memory into f28
la x2, scratch
li x3, 0x4f95cd22 # load x3 with value 0x4f95cd22
sw x3, 0(x2) # store 0x4f95cd22 in memory
flw f16, 0(x2) # load 0x4f95cd22 from memory into f16
fmadd.s f20, f21, f28, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0xd8c1581c # load x3 with value 0xd8c1581c
sw x3, 0(x2) # store 0xd8c1581c in memory
flw f20, 0(x2) # load 0xd8c1581c from memory into f20
la x2, scratch
li x3, 0x52037be7 # load x3 with value 0x52037be7
sw x3, 0(x2) # store 0x52037be7 in memory
flw f21, 0(x2) # load 0x52037be7 from memory into f21
fmadd.s f15, f23, f20, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xf0d77b96 # load x3 with value 0xf0d77b96
sw x3, 0(x2) # store 0xf0d77b96 in memory
flw f13, 0(x2) # load 0xf0d77b96 from memory into f13
la x2, scratch
li x3, 0x8be566cd # load x3 with value 0x8be566cd
sw x3, 0(x2) # store 0x8be566cd in memory
flw f19, 0(x2) # load 0x8be566cd from memory into f19
fmadd.s f27, f16, f13, f19 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x522b91ac # load x3 with value 0x522b91ac
sw x3, 0(x2) # store 0x522b91ac in memory
flw f23, 0(x2) # load 0x522b91ac from memory into f23
la x2, scratch
li x3, 0x174b777e # load x3 with value 0x174b777e
sw x3, 0(x2) # store 0x174b777e in memory
flw f8, 0(x2) # load 0x174b777e from memory into f8
fmadd.s f3, f13, f23, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x9b1e49c8 # load x3 with value 0x9b1e49c8
sw x3, 0(x2) # store 0x9b1e49c8 in memory
flw f2, 0(x2) # load 0x9b1e49c8 from memory into f2
la x2, scratch
li x3, 0x3f067629 # load x3 with value 0x3f067629
sw x3, 0(x2) # store 0x3f067629 in memory
flw f15, 0(x2) # load 0x3f067629 from memory into f15
fmadd.s f17, f7, f2, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xc650d8f3 # load x3 with value 0xc650d8f3
sw x3, 0(x2) # store 0xc650d8f3 in memory
flw f11, 0(x2) # load 0xc650d8f3 from memory into f11
la x2, scratch
li x3, 0xf0ba4fda # load x3 with value 0xf0ba4fda
sw x3, 0(x2) # store 0xf0ba4fda in memory
flw f18, 0(x2) # load 0xf0ba4fda from memory into f18
fmadd.s f28, f20, f11, f18 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x6c9e2637 # load x3 with value 0x6c9e2637
sw x3, 0(x2) # store 0x6c9e2637 in memory
flw f13, 0(x2) # load 0x6c9e2637 from memory into f13
la x2, scratch
li x3, 0x637b6399 # load x3 with value 0x637b6399
sw x3, 0(x2) # store 0x637b6399 in memory
flw f17, 0(x2) # load 0x637b6399 from memory into f17
fmadd.s f2, f24, f13, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xe989e0e8 # load x3 with value 0xe989e0e8
sw x3, 0(x2) # store 0xe989e0e8 in memory
flw f29, 0(x2) # load 0xe989e0e8 from memory into f29
la x2, scratch
li x3, 0x2021d9ef # load x3 with value 0x2021d9ef
sw x3, 0(x2) # store 0x2021d9ef in memory
flw f8, 0(x2) # load 0x2021d9ef from memory into f8
fmadd.s f28, f13, f29, f8 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xd234da72 # load x3 with value 0xd234da72
sw x3, 0(x2) # store 0xd234da72 in memory
flw f26, 0(x2) # load 0xd234da72 from memory into f26
la x2, scratch
li x3, 0xb25c2c26 # load x3 with value 0xb25c2c26
sw x3, 0(x2) # store 0xb25c2c26 in memory
flw f25, 0(x2) # load 0xb25c2c26 from memory into f25
fmadd.s f12, f22, f26, f25 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x59943f19 # load x3 with value 0x59943f19
sw x3, 0(x2) # store 0x59943f19 in memory
flw f14, 0(x2) # load 0x59943f19 from memory into f14
la x2, scratch
li x3, 0x0b796ff7 # load x3 with value 0x0b796ff7
sw x3, 0(x2) # store 0x0b796ff7 in memory
flw f20, 0(x2) # load 0x0b796ff7 from memory into f20
fmadd.s f29, f11, f14, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
la x2, scratch
li x3, 0xa2599eaf # load x3 with value 0xa2599eaf
sw x3, 0(x2) # store 0xa2599eaf in memory
flw f22, 0(x2) # load 0xa2599eaf from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x3e3ed6ed # load x3 with value 0x3e3ed6ed
sw x3, 0(x2) # store 0x3e3ed6ed in memory
flw f3, 0(x2) # load 0x3e3ed6ed from memory into f3
fmadd.s f27, f22, f16, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
la x2, scratch
li x3, 0x62d290d5 # load x3 with value 0x62d290d5
sw x3, 0(x2) # store 0x62d290d5 in memory
flw f25, 0(x2) # load 0x62d290d5 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0xaff165da # load x3 with value 0xaff165da
sw x3, 0(x2) # store 0xaff165da in memory
flw f7, 0(x2) # load 0xaff165da from memory into f7
fmadd.s f15, f25, f18, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
la x2, scratch
li x3, 0xd8190c60 # load x3 with value 0xd8190c60
sw x3, 0(x2) # store 0xd8190c60 in memory
flw f29, 0(x2) # load 0xd8190c60 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xd6bca741 # load x3 with value 0xd6bca741
sw x3, 0(x2) # store 0xd6bca741 in memory
flw f11, 0(x2) # load 0xd6bca741 from memory into f11
fmadd.s f3, f29, f27, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
la x2, scratch
li x3, 0xdda3d2fe # load x3 with value 0xdda3d2fe
sw x3, 0(x2) # store 0xdda3d2fe in memory
flw f14, 0(x2) # load 0xdda3d2fe from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0xcecf4412 # load x3 with value 0xcecf4412
sw x3, 0(x2) # store 0xcecf4412 in memory
flw f27, 0(x2) # load 0xcecf4412 from memory into f27
fmadd.s f25, f14, f26, f27 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
la x2, scratch
li x3, 0xb09e1bd8 # load x3 with value 0xb09e1bd8
sw x3, 0(x2) # store 0xb09e1bd8 in memory
flw f31, 0(x2) # load 0xb09e1bd8 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x779d23e7 # load x3 with value 0x779d23e7
sw x3, 0(x2) # store 0x779d23e7 in memory
flw f8, 0(x2) # load 0x779d23e7 from memory into f8
fmadd.s f15, f31, f28, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
la x2, scratch
li x3, 0xd5d2114d # load x3 with value 0xd5d2114d
sw x3, 0(x2) # store 0xd5d2114d in memory
flw f11, 0(x2) # load 0xd5d2114d from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
la x2, scratch
li x3, 0x9b3d2904 # load x3 with value 0x9b3d2904
sw x3, 0(x2) # store 0x9b3d2904 in memory
flw f7, 0(x2) # load 0x9b3d2904 from memory into f7
fmadd.s f8, f11, f29, f7 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
la x2, scratch
li x3, 0x8b909085 # load x3 with value 0x8b909085
sw x3, 0(x2) # store 0x8b909085 in memory
flw f27, 0(x2) # load 0x8b909085 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x7d247e00 # load x3 with value 0x7d247e00
sw x3, 0(x2) # store 0x7d247e00 in memory
flw f23, 0(x2) # load 0x7d247e00 from memory into f23
fmadd.s f21, f27, f12, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
la x2, scratch
li x3, 0x3d7d59ea # load x3 with value 0x3d7d59ea
sw x3, 0(x2) # store 0x3d7d59ea in memory
flw f20, 0(x2) # load 0x3d7d59ea from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x52bb6a7b # load x3 with value 0x52bb6a7b
sw x3, 0(x2) # store 0x52bb6a7b in memory
flw f30, 0(x2) # load 0x52bb6a7b from memory into f30
fmadd.s f14, f20, f1, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
la x2, scratch
li x3, 0x944595a1 # load x3 with value 0x944595a1
sw x3, 0(x2) # store 0x944595a1 in memory
flw f29, 0(x2) # load 0x944595a1 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0xc9a1e159 # load x3 with value 0xc9a1e159
sw x3, 0(x2) # store 0xc9a1e159 in memory
flw f5, 0(x2) # load 0xc9a1e159 from memory into f5
fmadd.s f21, f29, f22, f5 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
la x2, scratch
li x3, 0xa7ecae6e # load x3 with value 0xa7ecae6e
sw x3, 0(x2) # store 0xa7ecae6e in memory
flw f15, 0(x2) # load 0xa7ecae6e from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0x3ce8d03a # load x3 with value 0x3ce8d03a
sw x3, 0(x2) # store 0x3ce8d03a in memory
flw f13, 0(x2) # load 0x3ce8d03a from memory into f13
fmadd.s f17, f15, f29, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
la x2, scratch
li x3, 0x47ec670e # load x3 with value 0x47ec670e
sw x3, 0(x2) # store 0x47ec670e in memory
flw f2, 0(x2) # load 0x47ec670e from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7b5f4f47 # load x3 with value 0x7b5f4f47
sw x3, 0(x2) # store 0x7b5f4f47 in memory
flw f23, 0(x2) # load 0x7b5f4f47 from memory into f23
fmadd.s f12, f2, f10, f23 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
la x2, scratch
li x3, 0xe1f5a115 # load x3 with value 0xe1f5a115
sw x3, 0(x2) # store 0xe1f5a115 in memory
flw f13, 0(x2) # load 0xe1f5a115 from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xbc619abc # load x3 with value 0xbc619abc
sw x3, 0(x2) # store 0xbc619abc in memory
flw f15, 0(x2) # load 0xbc619abc from memory into f15
fmadd.s f3, f13, f11, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
la x2, scratch
li x3, 0xdfd3f86c # load x3 with value 0xdfd3f86c
sw x3, 0(x2) # store 0xdfd3f86c in memory
flw f19, 0(x2) # load 0xdfd3f86c from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x51885ada # load x3 with value 0x51885ada
sw x3, 0(x2) # store 0x51885ada in memory
flw f29, 0(x2) # load 0x51885ada from memory into f29
fmadd.s f8, f19, f22, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
la x2, scratch
li x3, 0x5ad6b301 # load x3 with value 0x5ad6b301
sw x3, 0(x2) # store 0x5ad6b301 in memory
flw f19, 0(x2) # load 0x5ad6b301 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x405edd04 # load x3 with value 0x405edd04
sw x3, 0(x2) # store 0x405edd04 in memory
flw f25, 0(x2) # load 0x405edd04 from memory into f25
fmadd.s f31, f19, f10, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
la x2, scratch
li x3, 0x9928ed5e # load x3 with value 0x9928ed5e
sw x3, 0(x2) # store 0x9928ed5e in memory
flw f8, 0(x2) # load 0x9928ed5e from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x15adcab8 # load x3 with value 0x15adcab8
sw x3, 0(x2) # store 0x15adcab8 in memory
flw f31, 0(x2) # load 0x15adcab8 from memory into f31
fmadd.s f1, f8, f11, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
la x2, scratch
li x3, 0x1e2c5150 # load x3 with value 0x1e2c5150
sw x3, 0(x2) # store 0x1e2c5150 in memory
flw f13, 0(x2) # load 0x1e2c5150 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x4e1e4b9d # load x3 with value 0x4e1e4b9d
sw x3, 0(x2) # store 0x4e1e4b9d in memory
flw f22, 0(x2) # load 0x4e1e4b9d from memory into f22
fmadd.s f24, f13, f18, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
la x2, scratch
li x3, 0x0905210d # load x3 with value 0x0905210d
sw x3, 0(x2) # store 0x0905210d in memory
flw f11, 0(x2) # load 0x0905210d from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0xaf117858 # load x3 with value 0xaf117858
sw x3, 0(x2) # store 0xaf117858 in memory
flw f6, 0(x2) # load 0xaf117858 from memory into f6
fmadd.s f26, f11, f1, f6 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
la x2, scratch
li x3, 0x4d2c5464 # load x3 with value 0x4d2c5464
sw x3, 0(x2) # store 0x4d2c5464 in memory
flw f17, 0(x2) # load 0x4d2c5464 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0x9dad25d9 # load x3 with value 0x9dad25d9
sw x3, 0(x2) # store 0x9dad25d9 in memory
flw f14, 0(x2) # load 0x9dad25d9 from memory into f14
fmadd.s f11, f17, f31, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
la x2, scratch
li x3, 0xcc5516be # load x3 with value 0xcc5516be
sw x3, 0(x2) # store 0xcc5516be in memory
flw f19, 0(x2) # load 0xcc5516be from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xe731adf0 # load x3 with value 0xe731adf0
sw x3, 0(x2) # store 0xe731adf0 in memory
flw f21, 0(x2) # load 0xe731adf0 from memory into f21
fmadd.s f12, f19, f18, f21 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
la x2, scratch
li x3, 0xf2a9e373 # load x3 with value 0xf2a9e373
sw x3, 0(x2) # store 0xf2a9e373 in memory
flw f23, 0(x2) # load 0xf2a9e373 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xf6ed5c85 # load x3 with value 0xf6ed5c85
sw x3, 0(x2) # store 0xf6ed5c85 in memory
flw f22, 0(x2) # load 0xf6ed5c85 from memory into f22
fmadd.s f26, f23, f25, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
la x2, scratch
li x3, 0xacc55921 # load x3 with value 0xacc55921
sw x3, 0(x2) # store 0xacc55921 in memory
flw f25, 0(x2) # load 0xacc55921 from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xa43cb0a8 # load x3 with value 0xa43cb0a8
sw x3, 0(x2) # store 0xa43cb0a8 in memory
flw f15, 0(x2) # load 0xa43cb0a8 from memory into f15
fmadd.s f1, f25, f29, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
la x2, scratch
li x3, 0x493f8b8c # load x3 with value 0x493f8b8c
sw x3, 0(x2) # store 0x493f8b8c in memory
flw f5, 0(x2) # load 0x493f8b8c from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xeb9edd26 # load x3 with value 0xeb9edd26
sw x3, 0(x2) # store 0xeb9edd26 in memory
flw f12, 0(x2) # load 0xeb9edd26 from memory into f12
fmadd.s f2, f5, f23, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffffffff)
la x2, scratch
li x3, 0x2993ed6c # load x3 with value 0x2993ed6c
sw x3, 0(x2) # store 0x2993ed6c in memory
flw f2, 0(x2) # load 0x2993ed6c from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x23aacb1a # load x3 with value 0x23aacb1a
sw x3, 0(x2) # store 0x23aacb1a in memory
flw f11, 0(x2) # load 0x23aacb1a from memory into f11
fmadd.s f28, f2, f18, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
la x2, scratch
li x3, 0x84e09880 # load x3 with value 0x84e09880
sw x3, 0(x2) # store 0x84e09880 in memory
flw f28, 0(x2) # load 0x84e09880 from memory into f28
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xbbe6507f # load x3 with value 0xbbe6507f
sw x3, 0(x2) # store 0xbbe6507f in memory
flw f29, 0(x2) # load 0xbbe6507f from memory into f29
fmadd.s f19, f28, f1, f29 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
la x2, scratch
li x3, 0xcd96c970 # load x3 with value 0xcd96c970
sw x3, 0(x2) # store 0xcd96c970 in memory
flw f21, 0(x2) # load 0xcd96c970 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x44113af3 # load x3 with value 0x44113af3
sw x3, 0(x2) # store 0x44113af3 in memory
flw f14, 0(x2) # load 0x44113af3 from memory into f14
fmadd.s f15, f21, f10, f14 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xffbfffff)
la x2, scratch
li x3, 0x10fc6291 # load x3 with value 0x10fc6291
sw x3, 0(x2) # store 0x10fc6291 in memory
flw f27, 0(x2) # load 0x10fc6291 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x0c91ceef # load x3 with value 0x0c91ceef
sw x3, 0(x2) # store 0x0c91ceef in memory
flw f30, 0(x2) # load 0x0c91ceef from memory into f30
fmadd.s f26, f27, f5, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
la x2, scratch
li x3, 0x30ba5b59 # load x3 with value 0x30ba5b59
sw x3, 0(x2) # store 0x30ba5b59 in memory
flw f9, 0(x2) # load 0x30ba5b59 from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x0d8f6142 # load x3 with value 0x0d8f6142
sw x3, 0(x2) # store 0x0d8f6142 in memory
flw f11, 0(x2) # load 0x0d8f6142 from memory into f11
fmadd.s f31, f9, f20, f11 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
la x2, scratch
li x3, 0x7492071e # load x3 with value 0x7492071e
sw x3, 0(x2) # store 0x7492071e in memory
flw f30, 0(x2) # load 0x7492071e from memory into f30
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xd46e3b99 # load x3 with value 0xd46e3b99
sw x3, 0(x2) # store 0xd46e3b99 in memory
flw f21, 0(x2) # load 0xd46e3b99 from memory into f21
fmadd.s f2, f30, f5, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
la x2, scratch
li x3, 0x9d88fa84 # load x3 with value 0x9d88fa84
sw x3, 0(x2) # store 0x9d88fa84 in memory
flw f17, 0(x2) # load 0x9d88fa84 from memory into f17
la x2, scratch
li x3, 0x2b4ed81a # load x3 with value 0x2b4ed81a
sw x3, 0(x2) # store 0x2b4ed81a in memory
flw f2, 0(x2) # load 0x2b4ed81a from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f10, f17, f2, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
la x2, scratch
li x3, 0xb0f0ad4d # load x3 with value 0xb0f0ad4d
sw x3, 0(x2) # store 0xb0f0ad4d in memory
flw f19, 0(x2) # load 0xb0f0ad4d from memory into f19
la x2, scratch
li x3, 0x8476b573 # load x3 with value 0x8476b573
sw x3, 0(x2) # store 0x8476b573 in memory
flw f27, 0(x2) # load 0x8476b573 from memory into f27
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
fmadd.s f2, f19, f27, f22 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
la x2, scratch
li x3, 0x81258f5a # load x3 with value 0x81258f5a
sw x3, 0(x2) # store 0x81258f5a in memory
flw f31, 0(x2) # load 0x81258f5a from memory into f31
la x2, scratch
li x3, 0xd54acc41 # load x3 with value 0xd54acc41
sw x3, 0(x2) # store 0xd54acc41 in memory
flw f14, 0(x2) # load 0xd54acc41 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f20, f31, f14, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
la x2, scratch
li x3, 0x85796bfb # load x3 with value 0x85796bfb
sw x3, 0(x2) # store 0x85796bfb in memory
flw f23, 0(x2) # load 0x85796bfb from memory into f23
la x2, scratch
li x3, 0xf1046507 # load x3 with value 0xf1046507
sw x3, 0(x2) # store 0xf1046507 in memory
flw f27, 0(x2) # load 0xf1046507 from memory into f27
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f22, f23, f27, f10 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
la x2, scratch
li x3, 0x7b618e60 # load x3 with value 0x7b618e60
sw x3, 0(x2) # store 0x7b618e60 in memory
flw f22, 0(x2) # load 0x7b618e60 from memory into f22
la x2, scratch
li x3, 0x64322758 # load x3 with value 0x64322758
sw x3, 0(x2) # store 0x64322758 in memory
flw f26, 0(x2) # load 0x64322758 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmadd.s f20, f22, f26, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
la x2, scratch
li x3, 0xfde30939 # load x3 with value 0xfde30939
sw x3, 0(x2) # store 0xfde30939 in memory
flw f21, 0(x2) # load 0xfde30939 from memory into f21
la x2, scratch
li x3, 0x8ab83696 # load x3 with value 0x8ab83696
sw x3, 0(x2) # store 0x8ab83696 in memory
flw f17, 0(x2) # load 0x8ab83696 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
fmadd.s f19, f21, f17, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
la x2, scratch
li x3, 0xc98ebb81 # load x3 with value 0xc98ebb81
sw x3, 0(x2) # store 0xc98ebb81 in memory
flw f20, 0(x2) # load 0xc98ebb81 from memory into f20
la x2, scratch
li x3, 0x1ebcec55 # load x3 with value 0x1ebcec55
sw x3, 0(x2) # store 0x1ebcec55 in memory
flw f31, 0(x2) # load 0x1ebcec55 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
fmadd.s f14, f20, f31, f3 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
la x2, scratch
li x3, 0xe619a46f # load x3 with value 0xe619a46f
sw x3, 0(x2) # store 0xe619a46f in memory
flw f24, 0(x2) # load 0xe619a46f from memory into f24
la x2, scratch
li x3, 0xc820c4f3 # load x3 with value 0xc820c4f3
sw x3, 0(x2) # store 0xc820c4f3 in memory
flw f29, 0(x2) # load 0xc820c4f3 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f21, f24, f29, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
la x2, scratch
li x3, 0x975fe9cb # load x3 with value 0x975fe9cb
sw x3, 0(x2) # store 0x975fe9cb in memory
flw f18, 0(x2) # load 0x975fe9cb from memory into f18
la x2, scratch
li x3, 0x8a2ca908 # load x3 with value 0x8a2ca908
sw x3, 0(x2) # store 0x8a2ca908 in memory
flw f2, 0(x2) # load 0x8a2ca908 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f21, f18, f2, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
la x2, scratch
li x3, 0x91a982ef # load x3 with value 0x91a982ef
sw x3, 0(x2) # store 0x91a982ef in memory
flw f18, 0(x2) # load 0x91a982ef from memory into f18
la x2, scratch
li x3, 0x04321e50 # load x3 with value 0x04321e50
sw x3, 0(x2) # store 0x04321e50 in memory
flw f8, 0(x2) # load 0x04321e50 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmadd.s f21, f18, f8, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
la x2, scratch
li x3, 0x90bdf704 # load x3 with value 0x90bdf704
sw x3, 0(x2) # store 0x90bdf704 in memory
flw f2, 0(x2) # load 0x90bdf704 from memory into f2
la x2, scratch
li x3, 0xb5b43099 # load x3 with value 0xb5b43099
sw x3, 0(x2) # store 0xb5b43099 in memory
flw f1, 0(x2) # load 0xb5b43099 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmadd.s f14, f2, f1, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
la x2, scratch
li x3, 0xb3105598 # load x3 with value 0xb3105598
sw x3, 0(x2) # store 0xb3105598 in memory
flw f11, 0(x2) # load 0xb3105598 from memory into f11
la x2, scratch
li x3, 0x1eace38d # load x3 with value 0x1eace38d
sw x3, 0(x2) # store 0x1eace38d in memory
flw f13, 0(x2) # load 0x1eace38d from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fmadd.s f15, f11, f13, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
la x2, scratch
li x3, 0xc08b64fb # load x3 with value 0xc08b64fb
sw x3, 0(x2) # store 0xc08b64fb in memory
flw f21, 0(x2) # load 0xc08b64fb from memory into f21
la x2, scratch
li x3, 0x0ee73c09 # load x3 with value 0x0ee73c09
sw x3, 0(x2) # store 0x0ee73c09 in memory
flw f25, 0(x2) # load 0x0ee73c09 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmadd.s f6, f21, f25, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
la x2, scratch
li x3, 0x327e96a5 # load x3 with value 0x327e96a5
sw x3, 0(x2) # store 0x327e96a5 in memory
flw f2, 0(x2) # load 0x327e96a5 from memory into f2
la x2, scratch
li x3, 0x3f28f31a # load x3 with value 0x3f28f31a
sw x3, 0(x2) # store 0x3f28f31a in memory
flw f19, 0(x2) # load 0x3f28f31a from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmadd.s f16, f2, f19, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
la x2, scratch
li x3, 0xafd3d954 # load x3 with value 0xafd3d954
sw x3, 0(x2) # store 0xafd3d954 in memory
flw f22, 0(x2) # load 0xafd3d954 from memory into f22
la x2, scratch
li x3, 0xa2d89f87 # load x3 with value 0xa2d89f87
sw x3, 0(x2) # store 0xa2d89f87 in memory
flw f16, 0(x2) # load 0xa2d89f87 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fmadd.s f3, f22, f16, f31 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
la x2, scratch
li x3, 0xfc4de053 # load x3 with value 0xfc4de053
sw x3, 0(x2) # store 0xfc4de053 in memory
flw f21, 0(x2) # load 0xfc4de053 from memory into f21
la x2, scratch
li x3, 0x7d59e7e0 # load x3 with value 0x7d59e7e0
sw x3, 0(x2) # store 0x7d59e7e0 in memory
flw f1, 0(x2) # load 0x7d59e7e0 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
fmadd.s f5, f21, f1, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
la x2, scratch
li x3, 0x85129d7b # load x3 with value 0x85129d7b
sw x3, 0(x2) # store 0x85129d7b in memory
flw f7, 0(x2) # load 0x85129d7b from memory into f7
la x2, scratch
li x3, 0x41091af5 # load x3 with value 0x41091af5
sw x3, 0(x2) # store 0x41091af5 in memory
flw f27, 0(x2) # load 0x41091af5 from memory into f27
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f30, f7, f27, f1 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
la x2, scratch
li x3, 0xc2127ada # load x3 with value 0xc2127ada
sw x3, 0(x2) # store 0xc2127ada in memory
flw f18, 0(x2) # load 0xc2127ada from memory into f18
la x2, scratch
li x3, 0xe734f537 # load x3 with value 0xe734f537
sw x3, 0(x2) # store 0xe734f537 in memory
flw f17, 0(x2) # load 0xe734f537 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmadd.s f14, f18, f17, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
la x2, scratch
li x3, 0x94dfb8e7 # load x3 with value 0x94dfb8e7
sw x3, 0(x2) # store 0x94dfb8e7 in memory
flw f14, 0(x2) # load 0x94dfb8e7 from memory into f14
la x2, scratch
li x3, 0x044781f1 # load x3 with value 0x044781f1
sw x3, 0(x2) # store 0x044781f1 in memory
flw f24, 0(x2) # load 0x044781f1 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fmadd.s f6, f14, f24, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
la x2, scratch
li x3, 0x922a2377 # load x3 with value 0x922a2377
sw x3, 0(x2) # store 0x922a2377 in memory
flw f18, 0(x2) # load 0x922a2377 from memory into f18
la x2, scratch
li x3, 0x170700d2 # load x3 with value 0x170700d2
sw x3, 0(x2) # store 0x170700d2 in memory
flw f13, 0(x2) # load 0x170700d2 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmadd.s f5, f18, f13, f7 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
la x2, scratch
li x3, 0x9dbc34c2 # load x3 with value 0x9dbc34c2
sw x3, 0(x2) # store 0x9dbc34c2 in memory
flw f7, 0(x2) # load 0x9dbc34c2 from memory into f7
la x2, scratch
li x3, 0xae281e82 # load x3 with value 0xae281e82
sw x3, 0(x2) # store 0xae281e82 in memory
flw f12, 0(x2) # load 0xae281e82 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f19, f7, f12, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
la x2, scratch
li x3, 0x71a45804 # load x3 with value 0x71a45804
sw x3, 0(x2) # store 0x71a45804 in memory
flw f14, 0(x2) # load 0x71a45804 from memory into f14
la x2, scratch
li x3, 0x530afd17 # load x3 with value 0x530afd17
sw x3, 0(x2) # store 0x530afd17 in memory
flw f2, 0(x2) # load 0x530afd17 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f21, f14, f2, f15 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffffffff)
la x2, scratch
li x3, 0xff05e4de # load x3 with value 0xff05e4de
sw x3, 0(x2) # store 0xff05e4de in memory
flw f3, 0(x2) # load 0xff05e4de from memory into f3
la x2, scratch
li x3, 0xbf591e5d # load x3 with value 0xbf591e5d
sw x3, 0(x2) # store 0xbf591e5d in memory
flw f30, 0(x2) # load 0xbf591e5d from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmadd.s f20, f3, f30, f12 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
la x2, scratch
li x3, 0x311edcc5 # load x3 with value 0x311edcc5
sw x3, 0(x2) # store 0x311edcc5 in memory
flw f15, 0(x2) # load 0x311edcc5 from memory into f15
la x2, scratch
li x3, 0xef7cc21a # load x3 with value 0xef7cc21a
sw x3, 0(x2) # store 0xef7cc21a in memory
flw f21, 0(x2) # load 0xef7cc21a from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f8, f15, f21, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
la x2, scratch
li x3, 0x7cacd198 # load x3 with value 0x7cacd198
sw x3, 0(x2) # store 0x7cacd198 in memory
flw f24, 0(x2) # load 0x7cacd198 from memory into f24
la x2, scratch
li x3, 0x42ebab26 # load x3 with value 0x42ebab26
sw x3, 0(x2) # store 0x42ebab26 in memory
flw f6, 0(x2) # load 0x42ebab26 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmadd.s f11, f24, f6, f30 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xffbfffff)
la x2, scratch
li x3, 0xd4559b53 # load x3 with value 0xd4559b53
sw x3, 0(x2) # store 0xd4559b53 in memory
flw f20, 0(x2) # load 0xd4559b53 from memory into f20
la x2, scratch
li x3, 0x4600697c # load x3 with value 0x4600697c
sw x3, 0(x2) # store 0x4600697c in memory
flw f11, 0(x2) # load 0x4600697c from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fmadd.s f15, f20, f11, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
la x2, scratch
li x3, 0x40301313 # load x3 with value 0x40301313
sw x3, 0(x2) # store 0x40301313 in memory
flw f28, 0(x2) # load 0x40301313 from memory into f28
la x2, scratch
li x3, 0xf7af805a # load x3 with value 0xf7af805a
sw x3, 0(x2) # store 0xf7af805a in memory
flw f5, 0(x2) # load 0xf7af805a from memory into f5
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f14, f28, f5, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
la x2, scratch
li x3, 0x769fe78f # load x3 with value 0x769fe78f
sw x3, 0(x2) # store 0x769fe78f in memory
flw f3, 0(x2) # load 0x769fe78f from memory into f3
la x2, scratch
li x3, 0x08d51cf4 # load x3 with value 0x08d51cf4
sw x3, 0(x2) # store 0x08d51cf4 in memory
flw f31, 0(x2) # load 0x08d51cf4 from memory into f31
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmadd.s f2, f3, f31, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
la x2, scratch
li x3, 0xdd395ecd # load x3 with value 0xdd395ecd
sw x3, 0(x2) # store 0xdd395ecd in memory
flw f0, 0(x2) # load 0xdd395ecd from memory into f0
la x2, scratch
li x3, 0x1960ab4c # load x3 with value 0x1960ab4c
sw x3, 0(x2) # store 0x1960ab4c in memory
flw f30, 0(x2) # load 0x1960ab4c from memory into f30
la x2, scratch
li x3, 0xe2eb58c8 # load x3 with value 0xe2eb58c8
sw x3, 0(x2) # store 0xe2eb58c8 in memory
flw f10, 0(x2) # load 0xe2eb58c8 from memory into f10
fmadd.s f0, f0, f30, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
la x2, scratch
li x3, 0x2862c688 # load x3 with value 0x2862c688
sw x3, 0(x2) # store 0x2862c688 in memory
flw f1, 0(x2) # load 0x2862c688 from memory into f1
la x2, scratch
li x3, 0x27ffa82c # load x3 with value 0x27ffa82c
sw x3, 0(x2) # store 0x27ffa82c in memory
flw f18, 0(x2) # load 0x27ffa82c from memory into f18
la x2, scratch
li x3, 0xbc0b305d # load x3 with value 0xbc0b305d
sw x3, 0(x2) # store 0xbc0b305d in memory
flw f5, 0(x2) # load 0xbc0b305d from memory into f5
fmadd.s f1, f1, f18, f5 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
la x2, scratch
li x3, 0x81b73189 # load x3 with value 0x81b73189
sw x3, 0(x2) # store 0x81b73189 in memory
flw f2, 0(x2) # load 0x81b73189 from memory into f2
la x2, scratch
li x3, 0x63d9324c # load x3 with value 0x63d9324c
sw x3, 0(x2) # store 0x63d9324c in memory
flw f2, 0(x2) # load 0x63d9324c from memory into f2
la x2, scratch
li x3, 0xc4bbd60c # load x3 with value 0xc4bbd60c
sw x3, 0(x2) # store 0xc4bbd60c in memory
flw f20, 0(x2) # load 0xc4bbd60c from memory into f20
fmadd.s f2, f2, f2, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
la x2, scratch
li x3, 0x72b321e9 # load x3 with value 0x72b321e9
sw x3, 0(x2) # store 0x72b321e9 in memory
flw f3, 0(x2) # load 0x72b321e9 from memory into f3
la x2, scratch
li x3, 0xfb9a03e4 # load x3 with value 0xfb9a03e4
sw x3, 0(x2) # store 0xfb9a03e4 in memory
flw f19, 0(x2) # load 0xfb9a03e4 from memory into f19
la x2, scratch
li x3, 0xd4c2971c # load x3 with value 0xd4c2971c
sw x3, 0(x2) # store 0xd4c2971c in memory
flw f24, 0(x2) # load 0xd4c2971c from memory into f24
fmadd.s f3, f3, f19, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
mv x6, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x2909b62e # load x3 with value 0x2909b62e
sw x3, 0(x2) # store 0x2909b62e in memory
flw f4, 0(x2) # load 0x2909b62e from memory into f4
la x2, scratch
li x3, 0xd6ebcd01 # load x3 with value 0xd6ebcd01
sw x3, 0(x2) # store 0xd6ebcd01 in memory
flw f5, 0(x2) # load 0xd6ebcd01 from memory into f5
la x2, scratch
li x3, 0x9f424f77 # load x3 with value 0x9f424f77
sw x3, 0(x2) # store 0x9f424f77 in memory
flw f11, 0(x2) # load 0x9f424f77 from memory into f11
fmadd.s f4, f4, f5, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
la x2, scratch
li x3, 0xa9c0f552 # load x3 with value 0xa9c0f552
sw x3, 0(x2) # store 0xa9c0f552 in memory
flw f5, 0(x2) # load 0xa9c0f552 from memory into f5
la x2, scratch
li x3, 0xc10ca55f # load x3 with value 0xc10ca55f
sw x3, 0(x2) # store 0xc10ca55f in memory
flw f13, 0(x2) # load 0xc10ca55f from memory into f13
la x2, scratch
li x3, 0x1328048a # load x3 with value 0x1328048a
sw x3, 0(x2) # store 0x1328048a in memory
flw f25, 0(x2) # load 0x1328048a from memory into f25
fmadd.s f5, f5, f13, f25 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x49351df9 # load x3 with value 0x49351df9
sw x3, 0(x2) # store 0x49351df9 in memory
flw f6, 0(x2) # load 0x49351df9 from memory into f6
la x2, scratch
li x3, 0xe156e1ba # load x3 with value 0xe156e1ba
sw x3, 0(x2) # store 0xe156e1ba in memory
flw f23, 0(x2) # load 0xe156e1ba from memory into f23
la x2, scratch
li x3, 0xb75f7a1f # load x3 with value 0xb75f7a1f
sw x3, 0(x2) # store 0xb75f7a1f in memory
flw f27, 0(x2) # load 0xb75f7a1f from memory into f27
fmadd.s f6, f6, f23, f27 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xc3d7de4b # load x3 with value 0xc3d7de4b
sw x3, 0(x2) # store 0xc3d7de4b in memory
flw f7, 0(x2) # load 0xc3d7de4b from memory into f7
la x2, scratch
li x3, 0xbdf7dfb7 # load x3 with value 0xbdf7dfb7
sw x3, 0(x2) # store 0xbdf7dfb7 in memory
flw f24, 0(x2) # load 0xbdf7dfb7 from memory into f24
la x2, scratch
li x3, 0xc563e6b0 # load x3 with value 0xc563e6b0
sw x3, 0(x2) # store 0xc563e6b0 in memory
flw f21, 0(x2) # load 0xc563e6b0 from memory into f21
fmadd.s f7, f7, f24, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
la x2, scratch
li x3, 0x248e8732 # load x3 with value 0x248e8732
sw x3, 0(x2) # store 0x248e8732 in memory
flw f8, 0(x2) # load 0x248e8732 from memory into f8
la x2, scratch
li x3, 0x4b327f91 # load x3 with value 0x4b327f91
sw x3, 0(x2) # store 0x4b327f91 in memory
flw f20, 0(x2) # load 0x4b327f91 from memory into f20
la x2, scratch
li x3, 0x00b2ce6f # load x3 with value 0x00b2ce6f
sw x3, 0(x2) # store 0x00b2ce6f in memory
flw f29, 0(x2) # load 0x00b2ce6f from memory into f29
fmadd.s f8, f8, f20, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
la x2, scratch
li x3, 0x55d4aca6 # load x3 with value 0x55d4aca6
sw x3, 0(x2) # store 0x55d4aca6 in memory
flw f9, 0(x2) # load 0x55d4aca6 from memory into f9
la x2, scratch
li x3, 0x16d14d41 # load x3 with value 0x16d14d41
sw x3, 0(x2) # store 0x16d14d41 in memory
flw f21, 0(x2) # load 0x16d14d41 from memory into f21
la x2, scratch
li x3, 0xeec7e5fc # load x3 with value 0xeec7e5fc
sw x3, 0(x2) # store 0xeec7e5fc in memory
flw f24, 0(x2) # load 0xeec7e5fc from memory into f24
fmadd.s f9, f9, f21, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
la x2, scratch
li x3, 0x44373408 # load x3 with value 0x44373408
sw x3, 0(x2) # store 0x44373408 in memory
flw f10, 0(x2) # load 0x44373408 from memory into f10
la x2, scratch
li x3, 0xa4d483c4 # load x3 with value 0xa4d483c4
sw x3, 0(x2) # store 0xa4d483c4 in memory
flw f8, 0(x2) # load 0xa4d483c4 from memory into f8
la x2, scratch
li x3, 0x2afbce68 # load x3 with value 0x2afbce68
sw x3, 0(x2) # store 0x2afbce68 in memory
flw f10, 0(x2) # load 0x2afbce68 from memory into f10
fmadd.s f10, f10, f8, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
la x2, scratch
li x3, 0x0e501081 # load x3 with value 0x0e501081
sw x3, 0(x2) # store 0x0e501081 in memory
flw f11, 0(x2) # load 0x0e501081 from memory into f11
la x2, scratch
li x3, 0x4fc096f8 # load x3 with value 0x4fc096f8
sw x3, 0(x2) # store 0x4fc096f8 in memory
flw f3, 0(x2) # load 0x4fc096f8 from memory into f3
la x2, scratch
li x3, 0x19b74b81 # load x3 with value 0x19b74b81
sw x3, 0(x2) # store 0x19b74b81 in memory
flw f14, 0(x2) # load 0x19b74b81 from memory into f14
fmadd.s f11, f11, f3, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
la x2, scratch
li x3, 0x9a31de77 # load x3 with value 0x9a31de77
sw x3, 0(x2) # store 0x9a31de77 in memory
flw f12, 0(x2) # load 0x9a31de77 from memory into f12
la x2, scratch
li x3, 0xa592054f # load x3 with value 0xa592054f
sw x3, 0(x2) # store 0xa592054f in memory
flw f23, 0(x2) # load 0xa592054f from memory into f23
la x2, scratch
li x3, 0x3ee792f2 # load x3 with value 0x3ee792f2
sw x3, 0(x2) # store 0x3ee792f2 in memory
flw f15, 0(x2) # load 0x3ee792f2 from memory into f15
fmadd.s f12, f12, f23, f15 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
la x2, scratch
li x3, 0xad4f7b8d # load x3 with value 0xad4f7b8d
sw x3, 0(x2) # store 0xad4f7b8d in memory
flw f13, 0(x2) # load 0xad4f7b8d from memory into f13
la x2, scratch
li x3, 0x2a317cea # load x3 with value 0x2a317cea
sw x3, 0(x2) # store 0x2a317cea in memory
flw f15, 0(x2) # load 0x2a317cea from memory into f15
la x2, scratch
li x3, 0xb8b43557 # load x3 with value 0xb8b43557
sw x3, 0(x2) # store 0xb8b43557 in memory
flw f23, 0(x2) # load 0xb8b43557 from memory into f23
fmadd.s f13, f13, f15, f23 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
la x2, scratch
li x3, 0x88b88323 # load x3 with value 0x88b88323
sw x3, 0(x2) # store 0x88b88323 in memory
flw f14, 0(x2) # load 0x88b88323 from memory into f14
la x2, scratch
li x3, 0xbe0114ee # load x3 with value 0xbe0114ee
sw x3, 0(x2) # store 0xbe0114ee in memory
flw f29, 0(x2) # load 0xbe0114ee from memory into f29
la x2, scratch
li x3, 0xb9946891 # load x3 with value 0xb9946891
sw x3, 0(x2) # store 0xb9946891 in memory
flw f11, 0(x2) # load 0xb9946891 from memory into f11
fmadd.s f14, f14, f29, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
la x2, scratch
li x3, 0xf35170cc # load x3 with value 0xf35170cc
sw x3, 0(x2) # store 0xf35170cc in memory
flw f15, 0(x2) # load 0xf35170cc from memory into f15
la x2, scratch
li x3, 0x8460561d # load x3 with value 0x8460561d
sw x3, 0(x2) # store 0x8460561d in memory
flw f14, 0(x2) # load 0x8460561d from memory into f14
la x2, scratch
li x3, 0x799a291f # load x3 with value 0x799a291f
sw x3, 0(x2) # store 0x799a291f in memory
flw f9, 0(x2) # load 0x799a291f from memory into f9
fmadd.s f15, f15, f14, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
la x2, scratch
li x3, 0x13afa71d # load x3 with value 0x13afa71d
sw x3, 0(x2) # store 0x13afa71d in memory
flw f16, 0(x2) # load 0x13afa71d from memory into f16
la x2, scratch
li x3, 0xb39efe5b # load x3 with value 0xb39efe5b
sw x3, 0(x2) # store 0xb39efe5b in memory
flw f10, 0(x2) # load 0xb39efe5b from memory into f10
la x2, scratch
li x3, 0xfa0cb186 # load x3 with value 0xfa0cb186
sw x3, 0(x2) # store 0xfa0cb186 in memory
flw f6, 0(x2) # load 0xfa0cb186 from memory into f6
fmadd.s f16, f16, f10, f6 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
la x2, scratch
li x3, 0x0224e6ef # load x3 with value 0x0224e6ef
sw x3, 0(x2) # store 0x0224e6ef in memory
flw f17, 0(x2) # load 0x0224e6ef from memory into f17
la x2, scratch
li x3, 0x92690d5e # load x3 with value 0x92690d5e
sw x3, 0(x2) # store 0x92690d5e in memory
flw f26, 0(x2) # load 0x92690d5e from memory into f26
la x2, scratch
li x3, 0x2dc96ea8 # load x3 with value 0x2dc96ea8
sw x3, 0(x2) # store 0x2dc96ea8 in memory
flw f21, 0(x2) # load 0x2dc96ea8 from memory into f21
fmadd.s f17, f17, f26, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
la x2, scratch
li x3, 0x375a51f1 # load x3 with value 0x375a51f1
sw x3, 0(x2) # store 0x375a51f1 in memory
flw f18, 0(x2) # load 0x375a51f1 from memory into f18
la x2, scratch
li x3, 0x2423b4d8 # load x3 with value 0x2423b4d8
sw x3, 0(x2) # store 0x2423b4d8 in memory
flw f6, 0(x2) # load 0x2423b4d8 from memory into f6
la x2, scratch
li x3, 0x158adc96 # load x3 with value 0x158adc96
sw x3, 0(x2) # store 0x158adc96 in memory
flw f29, 0(x2) # load 0x158adc96 from memory into f29
fmadd.s f18, f18, f6, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
la x2, scratch
li x3, 0x6d25b553 # load x3 with value 0x6d25b553
sw x3, 0(x2) # store 0x6d25b553 in memory
flw f19, 0(x2) # load 0x6d25b553 from memory into f19
la x2, scratch
li x3, 0x4259eed0 # load x3 with value 0x4259eed0
sw x3, 0(x2) # store 0x4259eed0 in memory
flw f31, 0(x2) # load 0x4259eed0 from memory into f31
la x2, scratch
li x3, 0x6331fb90 # load x3 with value 0x6331fb90
sw x3, 0(x2) # store 0x6331fb90 in memory
flw f29, 0(x2) # load 0x6331fb90 from memory into f29
fmadd.s f19, f19, f31, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
la x2, scratch
li x3, 0xab383ef2 # load x3 with value 0xab383ef2
sw x3, 0(x2) # store 0xab383ef2 in memory
flw f20, 0(x2) # load 0xab383ef2 from memory into f20
la x2, scratch
li x3, 0x5e9328cd # load x3 with value 0x5e9328cd
sw x3, 0(x2) # store 0x5e9328cd in memory
flw f21, 0(x2) # load 0x5e9328cd from memory into f21
la x2, scratch
li x3, 0xa2d47d7d # load x3 with value 0xa2d47d7d
sw x3, 0(x2) # store 0xa2d47d7d in memory
flw f9, 0(x2) # load 0xa2d47d7d from memory into f9
fmadd.s f20, f20, f21, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
la x2, scratch
li x3, 0x4a8aaf74 # load x3 with value 0x4a8aaf74
sw x3, 0(x2) # store 0x4a8aaf74 in memory
flw f21, 0(x2) # load 0x4a8aaf74 from memory into f21
la x2, scratch
li x3, 0x75383a26 # load x3 with value 0x75383a26
sw x3, 0(x2) # store 0x75383a26 in memory
flw f11, 0(x2) # load 0x75383a26 from memory into f11
la x2, scratch
li x3, 0xd4824c9d # load x3 with value 0xd4824c9d
sw x3, 0(x2) # store 0xd4824c9d in memory
flw f10, 0(x2) # load 0xd4824c9d from memory into f10
fmadd.s f21, f21, f11, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
la x2, scratch
li x3, 0x9e95814f # load x3 with value 0x9e95814f
sw x3, 0(x2) # store 0x9e95814f in memory
flw f22, 0(x2) # load 0x9e95814f from memory into f22
la x2, scratch
li x3, 0x85c6af24 # load x3 with value 0x85c6af24
sw x3, 0(x2) # store 0x85c6af24 in memory
flw f2, 0(x2) # load 0x85c6af24 from memory into f2
la x2, scratch
li x3, 0xf7733042 # load x3 with value 0xf7733042
sw x3, 0(x2) # store 0xf7733042 in memory
flw f8, 0(x2) # load 0xf7733042 from memory into f8
fmadd.s f22, f22, f2, f8 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
la x2, scratch
li x3, 0x2dcdd42a # load x3 with value 0x2dcdd42a
sw x3, 0(x2) # store 0x2dcdd42a in memory
flw f23, 0(x2) # load 0x2dcdd42a from memory into f23
la x2, scratch
li x3, 0x5357de53 # load x3 with value 0x5357de53
sw x3, 0(x2) # store 0x5357de53 in memory
flw f5, 0(x2) # load 0x5357de53 from memory into f5
la x2, scratch
li x3, 0xc783f081 # load x3 with value 0xc783f081
sw x3, 0(x2) # store 0xc783f081 in memory
flw f29, 0(x2) # load 0xc783f081 from memory into f29
fmadd.s f23, f23, f5, f29 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
la x2, scratch
li x3, 0x37f696e6 # load x3 with value 0x37f696e6
sw x3, 0(x2) # store 0x37f696e6 in memory
flw f24, 0(x2) # load 0x37f696e6 from memory into f24
la x2, scratch
li x3, 0xc8c22631 # load x3 with value 0xc8c22631
sw x3, 0(x2) # store 0xc8c22631 in memory
flw f8, 0(x2) # load 0xc8c22631 from memory into f8
la x2, scratch
li x3, 0xa3933314 # load x3 with value 0xa3933314
sw x3, 0(x2) # store 0xa3933314 in memory
flw f17, 0(x2) # load 0xa3933314 from memory into f17
fmadd.s f24, f24, f8, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
la x2, scratch
li x3, 0x69e1e885 # load x3 with value 0x69e1e885
sw x3, 0(x2) # store 0x69e1e885 in memory
flw f25, 0(x2) # load 0x69e1e885 from memory into f25
la x2, scratch
li x3, 0x524fb5e7 # load x3 with value 0x524fb5e7
sw x3, 0(x2) # store 0x524fb5e7 in memory
flw f11, 0(x2) # load 0x524fb5e7 from memory into f11
la x2, scratch
li x3, 0xa4774549 # load x3 with value 0xa4774549
sw x3, 0(x2) # store 0xa4774549 in memory
flw f2, 0(x2) # load 0xa4774549 from memory into f2
fmadd.s f25, f25, f11, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
la x2, scratch
li x3, 0x76a34571 # load x3 with value 0x76a34571
sw x3, 0(x2) # store 0x76a34571 in memory
flw f26, 0(x2) # load 0x76a34571 from memory into f26
la x2, scratch
li x3, 0xdf4e73dc # load x3 with value 0xdf4e73dc
sw x3, 0(x2) # store 0xdf4e73dc in memory
flw f23, 0(x2) # load 0xdf4e73dc from memory into f23
la x2, scratch
li x3, 0xfc2b828e # load x3 with value 0xfc2b828e
sw x3, 0(x2) # store 0xfc2b828e in memory
flw f10, 0(x2) # load 0xfc2b828e from memory into f10
fmadd.s f26, f26, f23, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
la x2, scratch
li x3, 0xd16eef7d # load x3 with value 0xd16eef7d
sw x3, 0(x2) # store 0xd16eef7d in memory
flw f27, 0(x2) # load 0xd16eef7d from memory into f27
la x2, scratch
li x3, 0x724917f7 # load x3 with value 0x724917f7
sw x3, 0(x2) # store 0x724917f7 in memory
flw f13, 0(x2) # load 0x724917f7 from memory into f13
la x2, scratch
li x3, 0xeb2f5c4b # load x3 with value 0xeb2f5c4b
sw x3, 0(x2) # store 0xeb2f5c4b in memory
flw f2, 0(x2) # load 0xeb2f5c4b from memory into f2
fmadd.s f27, f27, f13, f2 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
la x2, scratch
li x3, 0x7347928d # load x3 with value 0x7347928d
sw x3, 0(x2) # store 0x7347928d in memory
flw f28, 0(x2) # load 0x7347928d from memory into f28
la x2, scratch
li x3, 0x0fb0ac0c # load x3 with value 0x0fb0ac0c
sw x3, 0(x2) # store 0x0fb0ac0c in memory
flw f17, 0(x2) # load 0x0fb0ac0c from memory into f17
la x2, scratch
li x3, 0xdcd5427e # load x3 with value 0xdcd5427e
sw x3, 0(x2) # store 0xdcd5427e in memory
flw f21, 0(x2) # load 0xdcd5427e from memory into f21
fmadd.s f28, f28, f17, f21 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
la x2, scratch
li x3, 0x9ae5cd92 # load x3 with value 0x9ae5cd92
sw x3, 0(x2) # store 0x9ae5cd92 in memory
flw f29, 0(x2) # load 0x9ae5cd92 from memory into f29
la x2, scratch
li x3, 0x7f551888 # load x3 with value 0x7f551888
sw x3, 0(x2) # store 0x7f551888 in memory
flw f9, 0(x2) # load 0x7f551888 from memory into f9
la x2, scratch
li x3, 0x2da6c172 # load x3 with value 0x2da6c172
sw x3, 0(x2) # store 0x2da6c172 in memory
flw f3, 0(x2) # load 0x2da6c172 from memory into f3
fmadd.s f29, f29, f9, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
la x2, scratch
li x3, 0x149e1840 # load x3 with value 0x149e1840
sw x3, 0(x2) # store 0x149e1840 in memory
flw f30, 0(x2) # load 0x149e1840 from memory into f30
la x2, scratch
li x3, 0x4499283e # load x3 with value 0x4499283e
sw x3, 0(x2) # store 0x4499283e in memory
flw f31, 0(x2) # load 0x4499283e from memory into f31
la x2, scratch
li x3, 0x53e0a250 # load x3 with value 0x53e0a250
sw x3, 0(x2) # store 0x53e0a250 in memory
flw f12, 0(x2) # load 0x53e0a250 from memory into f12
fmadd.s f30, f30, f31, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
la x2, scratch
li x3, 0x09972bca # load x3 with value 0x09972bca
sw x3, 0(x2) # store 0x09972bca in memory
flw f31, 0(x2) # load 0x09972bca from memory into f31
la x2, scratch
li x3, 0xc699eb73 # load x3 with value 0xc699eb73
sw x3, 0(x2) # store 0xc699eb73 in memory
flw f26, 0(x2) # load 0xc699eb73 from memory into f26
la x2, scratch
li x3, 0x2fa5efc4 # load x3 with value 0x2fa5efc4
sw x3, 0(x2) # store 0x2fa5efc4 in memory
flw f19, 0(x2) # load 0x2fa5efc4 from memory into f19
fmadd.s f31, f31, f26, f19 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
la x2, scratch
li x3, 0x362f722f # load x3 with value 0x362f722f
sw x3, 0(x2) # store 0x362f722f in memory
flw f14, 0(x2) # load 0x362f722f from memory into f14
la x2, scratch
li x3, 0x22e5461d # load x3 with value 0x22e5461d
sw x3, 0(x2) # store 0x22e5461d in memory
flw f0, 0(x2) # load 0x22e5461d from memory into f0
la x2, scratch
li x3, 0xc8a44449 # load x3 with value 0xc8a44449
sw x3, 0(x2) # store 0xc8a44449 in memory
flw f8, 0(x2) # load 0xc8a44449 from memory into f8
fmadd.s f0, f14, f0, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
la x2, scratch
li x3, 0x90f0ea41 # load x3 with value 0x90f0ea41
sw x3, 0(x2) # store 0x90f0ea41 in memory
flw f23, 0(x2) # load 0x90f0ea41 from memory into f23
la x2, scratch
li x3, 0xf769ec0f # load x3 with value 0xf769ec0f
sw x3, 0(x2) # store 0xf769ec0f in memory
flw f1, 0(x2) # load 0xf769ec0f from memory into f1
la x2, scratch
li x3, 0x07c9ee32 # load x3 with value 0x07c9ee32
sw x3, 0(x2) # store 0x07c9ee32 in memory
flw f18, 0(x2) # load 0x07c9ee32 from memory into f18
fmadd.s f1, f23, f1, f18 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
la x2, scratch
li x3, 0x91971ffd # load x3 with value 0x91971ffd
sw x3, 0(x2) # store 0x91971ffd in memory
flw f25, 0(x2) # load 0x91971ffd from memory into f25
la x2, scratch
li x3, 0x340da611 # load x3 with value 0x340da611
sw x3, 0(x2) # store 0x340da611 in memory
flw f2, 0(x2) # load 0x340da611 from memory into f2
la x2, scratch
li x3, 0xb2246502 # load x3 with value 0xb2246502
sw x3, 0(x2) # store 0xb2246502 in memory
flw f24, 0(x2) # load 0xb2246502 from memory into f24
fmadd.s f2, f25, f2, f24 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
la x2, scratch
li x3, 0x7ae8357b # load x3 with value 0x7ae8357b
sw x3, 0(x2) # store 0x7ae8357b in memory
flw f19, 0(x2) # load 0x7ae8357b from memory into f19
la x2, scratch
li x3, 0xb8ac784c # load x3 with value 0xb8ac784c
sw x3, 0(x2) # store 0xb8ac784c in memory
flw f3, 0(x2) # load 0xb8ac784c from memory into f3
la x2, scratch
li x3, 0x9c67fe86 # load x3 with value 0x9c67fe86
sw x3, 0(x2) # store 0x9c67fe86 in memory
flw f7, 0(x2) # load 0x9c67fe86 from memory into f7
fmadd.s f3, f19, f3, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xe9e22d7f # load x3 with value 0xe9e22d7f
sw x3, 0(x2) # store 0xe9e22d7f in memory
flw f12, 0(x2) # load 0xe9e22d7f from memory into f12
la x2, scratch
li x3, 0x073e38aa # load x3 with value 0x073e38aa
sw x3, 0(x2) # store 0x073e38aa in memory
flw f4, 0(x2) # load 0x073e38aa from memory into f4
la x2, scratch
li x3, 0xca693aec # load x3 with value 0xca693aec
sw x3, 0(x2) # store 0xca693aec in memory
flw f31, 0(x2) # load 0xca693aec from memory into f31
fmadd.s f4, f12, f4, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
mv x6, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x8d7c3b10 # load x3 with value 0x8d7c3b10
sw x3, 0(x2) # store 0x8d7c3b10 in memory
flw f15, 0(x2) # load 0x8d7c3b10 from memory into f15
la x2, scratch
li x3, 0xaf1c16f8 # load x3 with value 0xaf1c16f8
sw x3, 0(x2) # store 0xaf1c16f8 in memory
flw f5, 0(x2) # load 0xaf1c16f8 from memory into f5
la x2, scratch
li x3, 0x9e19c9b4 # load x3 with value 0x9e19c9b4
sw x3, 0(x2) # store 0x9e19c9b4 in memory
flw f29, 0(x2) # load 0x9e19c9b4 from memory into f29
fmadd.s f5, f15, f5, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
mv x7, x6 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x69353fb0 # load x3 with value 0x69353fb0
sw x3, 0(x2) # store 0x69353fb0 in memory
flw f24, 0(x2) # load 0x69353fb0 from memory into f24
la x2, scratch
li x3, 0xf48b4e1f # load x3 with value 0xf48b4e1f
sw x3, 0(x2) # store 0xf48b4e1f in memory
flw f6, 0(x2) # load 0xf48b4e1f from memory into f6
la x2, scratch
li x3, 0x4242e206 # load x3 with value 0x4242e206
sw x3, 0(x2) # store 0x4242e206 in memory
flw f22, 0(x2) # load 0x4242e206 from memory into f22
fmadd.s f6, f24, f6, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x68f11845 # load x3 with value 0x68f11845
sw x3, 0(x2) # store 0x68f11845 in memory
flw f30, 0(x2) # load 0x68f11845 from memory into f30
la x2, scratch
li x3, 0x1a5e2b2b # load x3 with value 0x1a5e2b2b
sw x3, 0(x2) # store 0x1a5e2b2b in memory
flw f7, 0(x2) # load 0x1a5e2b2b from memory into f7
la x2, scratch
li x3, 0x0d7ba46f # load x3 with value 0x0d7ba46f
sw x3, 0(x2) # store 0x0d7ba46f in memory
flw f1, 0(x2) # load 0x0d7ba46f from memory into f1
fmadd.s f7, f30, f7, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
la x2, scratch
li x3, 0x7f09d210 # load x3 with value 0x7f09d210
sw x3, 0(x2) # store 0x7f09d210 in memory
flw f26, 0(x2) # load 0x7f09d210 from memory into f26
la x2, scratch
li x3, 0x95f1c0c4 # load x3 with value 0x95f1c0c4
sw x3, 0(x2) # store 0x95f1c0c4 in memory
flw f8, 0(x2) # load 0x95f1c0c4 from memory into f8
la x2, scratch
li x3, 0x5cbf66e2 # load x3 with value 0x5cbf66e2
sw x3, 0(x2) # store 0x5cbf66e2 in memory
flw f30, 0(x2) # load 0x5cbf66e2 from memory into f30
fmadd.s f8, f26, f8, f30 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
la x2, scratch
li x3, 0x8f67d62b # load x3 with value 0x8f67d62b
sw x3, 0(x2) # store 0x8f67d62b in memory
flw f29, 0(x2) # load 0x8f67d62b from memory into f29
la x2, scratch
li x3, 0x272829bf # load x3 with value 0x272829bf
sw x3, 0(x2) # store 0x272829bf in memory
flw f9, 0(x2) # load 0x272829bf from memory into f9
la x2, scratch
li x3, 0x4c1bc270 # load x3 with value 0x4c1bc270
sw x3, 0(x2) # store 0x4c1bc270 in memory
flw f16, 0(x2) # load 0x4c1bc270 from memory into f16
fmadd.s f9, f29, f9, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
la x2, scratch
li x3, 0x60f0fc15 # load x3 with value 0x60f0fc15
sw x3, 0(x2) # store 0x60f0fc15 in memory
flw f12, 0(x2) # load 0x60f0fc15 from memory into f12
la x2, scratch
li x3, 0x74bdecff # load x3 with value 0x74bdecff
sw x3, 0(x2) # store 0x74bdecff in memory
flw f10, 0(x2) # load 0x74bdecff from memory into f10
la x2, scratch
li x3, 0xf9e9ba1e # load x3 with value 0xf9e9ba1e
sw x3, 0(x2) # store 0xf9e9ba1e in memory
flw f9, 0(x2) # load 0xf9e9ba1e from memory into f9
fmadd.s f10, f12, f10, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
la x2, scratch
li x3, 0x9b56d8e0 # load x3 with value 0x9b56d8e0
sw x3, 0(x2) # store 0x9b56d8e0 in memory
flw f2, 0(x2) # load 0x9b56d8e0 from memory into f2
la x2, scratch
li x3, 0xfed93ace # load x3 with value 0xfed93ace
sw x3, 0(x2) # store 0xfed93ace in memory
flw f11, 0(x2) # load 0xfed93ace from memory into f11
la x2, scratch
li x3, 0x196c5e3d # load x3 with value 0x196c5e3d
sw x3, 0(x2) # store 0x196c5e3d in memory
flw f22, 0(x2) # load 0x196c5e3d from memory into f22
fmadd.s f11, f2, f11, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
la x2, scratch
li x3, 0xa1e8354c # load x3 with value 0xa1e8354c
sw x3, 0(x2) # store 0xa1e8354c in memory
flw f25, 0(x2) # load 0xa1e8354c from memory into f25
la x2, scratch
li x3, 0x82ebe51a # load x3 with value 0x82ebe51a
sw x3, 0(x2) # store 0x82ebe51a in memory
flw f12, 0(x2) # load 0x82ebe51a from memory into f12
la x2, scratch
li x3, 0xc2fd9400 # load x3 with value 0xc2fd9400
sw x3, 0(x2) # store 0xc2fd9400 in memory
flw f31, 0(x2) # load 0xc2fd9400 from memory into f31
fmadd.s f12, f25, f12, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
la x2, scratch
li x3, 0xc250b3eb # load x3 with value 0xc250b3eb
sw x3, 0(x2) # store 0xc250b3eb in memory
flw f21, 0(x2) # load 0xc250b3eb from memory into f21
la x2, scratch
li x3, 0x07227750 # load x3 with value 0x07227750
sw x3, 0(x2) # store 0x07227750 in memory
flw f13, 0(x2) # load 0x07227750 from memory into f13
la x2, scratch
li x3, 0x5cbf61f2 # load x3 with value 0x5cbf61f2
sw x3, 0(x2) # store 0x5cbf61f2 in memory
flw f16, 0(x2) # load 0x5cbf61f2 from memory into f16
fmadd.s f13, f21, f13, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
la x2, scratch
li x3, 0x7a5f9beb # load x3 with value 0x7a5f9beb
sw x3, 0(x2) # store 0x7a5f9beb in memory
flw f24, 0(x2) # load 0x7a5f9beb from memory into f24
la x2, scratch
li x3, 0xc5873785 # load x3 with value 0xc5873785
sw x3, 0(x2) # store 0xc5873785 in memory
flw f14, 0(x2) # load 0xc5873785 from memory into f14
la x2, scratch
li x3, 0x45d44bfe # load x3 with value 0x45d44bfe
sw x3, 0(x2) # store 0x45d44bfe in memory
flw f20, 0(x2) # load 0x45d44bfe from memory into f20
fmadd.s f14, f24, f14, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
la x2, scratch
li x3, 0xa8ed9525 # load x3 with value 0xa8ed9525
sw x3, 0(x2) # store 0xa8ed9525 in memory
flw f28, 0(x2) # load 0xa8ed9525 from memory into f28
la x2, scratch
li x3, 0xc568a140 # load x3 with value 0xc568a140
sw x3, 0(x2) # store 0xc568a140 in memory
flw f15, 0(x2) # load 0xc568a140 from memory into f15
la x2, scratch
li x3, 0x00c1a9bd # load x3 with value 0x00c1a9bd
sw x3, 0(x2) # store 0x00c1a9bd in memory
flw f5, 0(x2) # load 0x00c1a9bd from memory into f5
fmadd.s f15, f28, f15, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
la x2, scratch
li x3, 0xda1f6cef # load x3 with value 0xda1f6cef
sw x3, 0(x2) # store 0xda1f6cef in memory
flw f25, 0(x2) # load 0xda1f6cef from memory into f25
la x2, scratch
li x3, 0x2eb7c0f6 # load x3 with value 0x2eb7c0f6
sw x3, 0(x2) # store 0x2eb7c0f6 in memory
flw f16, 0(x2) # load 0x2eb7c0f6 from memory into f16
la x2, scratch
li x3, 0x2452ddb2 # load x3 with value 0x2452ddb2
sw x3, 0(x2) # store 0x2452ddb2 in memory
flw f5, 0(x2) # load 0x2452ddb2 from memory into f5
fmadd.s f16, f25, f16, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
la x2, scratch
li x3, 0xe038b479 # load x3 with value 0xe038b479
sw x3, 0(x2) # store 0xe038b479 in memory
flw f29, 0(x2) # load 0xe038b479 from memory into f29
la x2, scratch
li x3, 0x64d41ccc # load x3 with value 0x64d41ccc
sw x3, 0(x2) # store 0x64d41ccc in memory
flw f17, 0(x2) # load 0x64d41ccc from memory into f17
la x2, scratch
li x3, 0xe815e0e0 # load x3 with value 0xe815e0e0
sw x3, 0(x2) # store 0xe815e0e0 in memory
flw f6, 0(x2) # load 0xe815e0e0 from memory into f6
fmadd.s f17, f29, f17, f6 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
la x2, scratch
li x3, 0xc9a681ee # load x3 with value 0xc9a681ee
sw x3, 0(x2) # store 0xc9a681ee in memory
flw f22, 0(x2) # load 0xc9a681ee from memory into f22
la x2, scratch
li x3, 0x0a70e98b # load x3 with value 0x0a70e98b
sw x3, 0(x2) # store 0x0a70e98b in memory
flw f18, 0(x2) # load 0x0a70e98b from memory into f18
la x2, scratch
li x3, 0x53a569aa # load x3 with value 0x53a569aa
sw x3, 0(x2) # store 0x53a569aa in memory
flw f10, 0(x2) # load 0x53a569aa from memory into f10
fmadd.s f18, f22, f18, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
la x2, scratch
li x3, 0x13eb49e5 # load x3 with value 0x13eb49e5
sw x3, 0(x2) # store 0x13eb49e5 in memory
flw f5, 0(x2) # load 0x13eb49e5 from memory into f5
la x2, scratch
li x3, 0xcffa9c14 # load x3 with value 0xcffa9c14
sw x3, 0(x2) # store 0xcffa9c14 in memory
flw f19, 0(x2) # load 0xcffa9c14 from memory into f19
la x2, scratch
li x3, 0xd6356eee # load x3 with value 0xd6356eee
sw x3, 0(x2) # store 0xd6356eee in memory
flw f8, 0(x2) # load 0xd6356eee from memory into f8
fmadd.s f19, f5, f19, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
la x2, scratch
li x3, 0xc57f893f # load x3 with value 0xc57f893f
sw x3, 0(x2) # store 0xc57f893f in memory
flw f17, 0(x2) # load 0xc57f893f from memory into f17
la x2, scratch
li x3, 0xc231c45f # load x3 with value 0xc231c45f
sw x3, 0(x2) # store 0xc231c45f in memory
flw f20, 0(x2) # load 0xc231c45f from memory into f20
la x2, scratch
li x3, 0xaecf3548 # load x3 with value 0xaecf3548
sw x3, 0(x2) # store 0xaecf3548 in memory
flw f31, 0(x2) # load 0xaecf3548 from memory into f31
fmadd.s f20, f17, f20, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
la x2, scratch
li x3, 0x841c54f0 # load x3 with value 0x841c54f0
sw x3, 0(x2) # store 0x841c54f0 in memory
flw f6, 0(x2) # load 0x841c54f0 from memory into f6
la x2, scratch
li x3, 0xa6081538 # load x3 with value 0xa6081538
sw x3, 0(x2) # store 0xa6081538 in memory
flw f21, 0(x2) # load 0xa6081538 from memory into f21
la x2, scratch
li x3, 0x64debda2 # load x3 with value 0x64debda2
sw x3, 0(x2) # store 0x64debda2 in memory
flw f21, 0(x2) # load 0x64debda2 from memory into f21
fmadd.s f21, f6, f21, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
la x2, scratch
li x3, 0xaf115a76 # load x3 with value 0xaf115a76
sw x3, 0(x2) # store 0xaf115a76 in memory
flw f8, 0(x2) # load 0xaf115a76 from memory into f8
la x2, scratch
li x3, 0x73644708 # load x3 with value 0x73644708
sw x3, 0(x2) # store 0x73644708 in memory
flw f22, 0(x2) # load 0x73644708 from memory into f22
la x2, scratch
li x3, 0x6d13208d # load x3 with value 0x6d13208d
sw x3, 0(x2) # store 0x6d13208d in memory
flw f29, 0(x2) # load 0x6d13208d from memory into f29
fmadd.s f22, f8, f22, f29 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
la x2, scratch
li x3, 0x00798c92 # load x3 with value 0x00798c92
sw x3, 0(x2) # store 0x00798c92 in memory
flw f25, 0(x2) # load 0x00798c92 from memory into f25
la x2, scratch
li x3, 0xa7bd0e62 # load x3 with value 0xa7bd0e62
sw x3, 0(x2) # store 0xa7bd0e62 in memory
flw f23, 0(x2) # load 0xa7bd0e62 from memory into f23
la x2, scratch
li x3, 0x8f589b98 # load x3 with value 0x8f589b98
sw x3, 0(x2) # store 0x8f589b98 in memory
flw f1, 0(x2) # load 0x8f589b98 from memory into f1
fmadd.s f23, f25, f23, f1 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
la x2, scratch
li x3, 0xc042df00 # load x3 with value 0xc042df00
sw x3, 0(x2) # store 0xc042df00 in memory
flw f18, 0(x2) # load 0xc042df00 from memory into f18
la x2, scratch
li x3, 0xc97a9913 # load x3 with value 0xc97a9913
sw x3, 0(x2) # store 0xc97a9913 in memory
flw f24, 0(x2) # load 0xc97a9913 from memory into f24
la x2, scratch
li x3, 0x5a0841f9 # load x3 with value 0x5a0841f9
sw x3, 0(x2) # store 0x5a0841f9 in memory
flw f5, 0(x2) # load 0x5a0841f9 from memory into f5
fmadd.s f24, f18, f24, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
la x2, scratch
li x3, 0x522e2f67 # load x3 with value 0x522e2f67
sw x3, 0(x2) # store 0x522e2f67 in memory
flw f19, 0(x2) # load 0x522e2f67 from memory into f19
la x2, scratch
li x3, 0xa014ae04 # load x3 with value 0xa014ae04
sw x3, 0(x2) # store 0xa014ae04 in memory
flw f25, 0(x2) # load 0xa014ae04 from memory into f25
la x2, scratch
li x3, 0xd92b8b60 # load x3 with value 0xd92b8b60
sw x3, 0(x2) # store 0xd92b8b60 in memory
flw f15, 0(x2) # load 0xd92b8b60 from memory into f15
fmadd.s f25, f19, f25, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
la x2, scratch
li x3, 0x27acd251 # load x3 with value 0x27acd251
sw x3, 0(x2) # store 0x27acd251 in memory
flw f12, 0(x2) # load 0x27acd251 from memory into f12
la x2, scratch
li x3, 0x3dbe48b3 # load x3 with value 0x3dbe48b3
sw x3, 0(x2) # store 0x3dbe48b3 in memory
flw f26, 0(x2) # load 0x3dbe48b3 from memory into f26
la x2, scratch
li x3, 0x7ec85021 # load x3 with value 0x7ec85021
sw x3, 0(x2) # store 0x7ec85021 in memory
flw f7, 0(x2) # load 0x7ec85021 from memory into f7
fmadd.s f26, f12, f26, f7 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
la x2, scratch
li x3, 0xec00cb5b # load x3 with value 0xec00cb5b
sw x3, 0(x2) # store 0xec00cb5b in memory
flw f17, 0(x2) # load 0xec00cb5b from memory into f17
la x2, scratch
li x3, 0xd80d470b # load x3 with value 0xd80d470b
sw x3, 0(x2) # store 0xd80d470b in memory
flw f27, 0(x2) # load 0xd80d470b from memory into f27
la x2, scratch
li x3, 0x05b4ca3e # load x3 with value 0x05b4ca3e
sw x3, 0(x2) # store 0x05b4ca3e in memory
flw f2, 0(x2) # load 0x05b4ca3e from memory into f2
fmadd.s f27, f17, f27, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
la x2, scratch
li x3, 0x94748cfb # load x3 with value 0x94748cfb
sw x3, 0(x2) # store 0x94748cfb in memory
flw f12, 0(x2) # load 0x94748cfb from memory into f12
la x2, scratch
li x3, 0xbf49ac8b # load x3 with value 0xbf49ac8b
sw x3, 0(x2) # store 0xbf49ac8b in memory
flw f28, 0(x2) # load 0xbf49ac8b from memory into f28
la x2, scratch
li x3, 0x3747e523 # load x3 with value 0x3747e523
sw x3, 0(x2) # store 0x3747e523 in memory
flw f15, 0(x2) # load 0x3747e523 from memory into f15
fmadd.s f28, f12, f28, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
la x2, scratch
li x3, 0x32c34278 # load x3 with value 0x32c34278
sw x3, 0(x2) # store 0x32c34278 in memory
flw f21, 0(x2) # load 0x32c34278 from memory into f21
la x2, scratch
li x3, 0x45c04918 # load x3 with value 0x45c04918
sw x3, 0(x2) # store 0x45c04918 in memory
flw f29, 0(x2) # load 0x45c04918 from memory into f29
la x2, scratch
li x3, 0x0332f7b9 # load x3 with value 0x0332f7b9
sw x3, 0(x2) # store 0x0332f7b9 in memory
flw f22, 0(x2) # load 0x0332f7b9 from memory into f22
fmadd.s f29, f21, f29, f22 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
la x2, scratch
li x3, 0x1da43f03 # load x3 with value 0x1da43f03
sw x3, 0(x2) # store 0x1da43f03 in memory
flw f28, 0(x2) # load 0x1da43f03 from memory into f28
la x2, scratch
li x3, 0xf5853d03 # load x3 with value 0xf5853d03
sw x3, 0(x2) # store 0xf5853d03 in memory
flw f30, 0(x2) # load 0xf5853d03 from memory into f30
la x2, scratch
li x3, 0x1ee310c8 # load x3 with value 0x1ee310c8
sw x3, 0(x2) # store 0x1ee310c8 in memory
flw f20, 0(x2) # load 0x1ee310c8 from memory into f20
fmadd.s f30, f28, f30, f20 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
la x2, scratch
li x3, 0xcccfd857 # load x3 with value 0xcccfd857
sw x3, 0(x2) # store 0xcccfd857 in memory
flw f17, 0(x2) # load 0xcccfd857 from memory into f17
la x2, scratch
li x3, 0x86210f9b # load x3 with value 0x86210f9b
sw x3, 0(x2) # store 0x86210f9b in memory
flw f31, 0(x2) # load 0x86210f9b from memory into f31
la x2, scratch
li x3, 0x4473a36a # load x3 with value 0x4473a36a
sw x3, 0(x2) # store 0x4473a36a in memory
flw f11, 0(x2) # load 0x4473a36a from memory into f11
fmadd.s f31, f17, f31, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f0)
la x2, scratch
li x3, 0x5d2fdffa # load x3 with value 0x5d2fdffa
sw x3, 0(x2) # store 0x5d2fdffa in memory
flw f15, 0(x2) # load 0x5d2fdffa from memory into f15
la x2, scratch
li x3, 0xe415ce51 # load x3 with value 0xe415ce51
sw x3, 0(x2) # store 0xe415ce51 in memory
flw f28, 0(x2) # load 0xe415ce51 from memory into f28
la x2, scratch
li x3, 0x21a50ac3 # load x3 with value 0x21a50ac3
sw x3, 0(x2) # store 0x21a50ac3 in memory
flw f0, 0(x2) # load 0x21a50ac3 from memory into f0
fmadd.s f0, f15, f28, f0 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f1)
la x2, scratch
li x3, 0xd9ad0672 # load x3 with value 0xd9ad0672
sw x3, 0(x2) # store 0xd9ad0672 in memory
flw f26, 0(x2) # load 0xd9ad0672 from memory into f26
la x2, scratch
li x3, 0x9cc4b58e # load x3 with value 0x9cc4b58e
sw x3, 0(x2) # store 0x9cc4b58e in memory
flw f3, 0(x2) # load 0x9cc4b58e from memory into f3
la x2, scratch
li x3, 0xac7ec703 # load x3 with value 0xac7ec703
sw x3, 0(x2) # store 0xac7ec703 in memory
flw f1, 0(x2) # load 0xac7ec703 from memory into f1
fmadd.s f1, f26, f3, f1 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f2)
la x2, scratch
li x3, 0x1ca85821 # load x3 with value 0x1ca85821
sw x3, 0(x2) # store 0x1ca85821 in memory
flw f9, 0(x2) # load 0x1ca85821 from memory into f9
la x2, scratch
li x3, 0x47a195b0 # load x3 with value 0x47a195b0
sw x3, 0(x2) # store 0x47a195b0 in memory
flw f16, 0(x2) # load 0x47a195b0 from memory into f16
la x2, scratch
li x3, 0x643b8cae # load x3 with value 0x643b8cae
sw x3, 0(x2) # store 0x643b8cae in memory
flw f2, 0(x2) # load 0x643b8cae from memory into f2
fmadd.s f2, f9, f16, f2 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f3)
la x2, scratch
li x3, 0x4c93cb50 # load x3 with value 0x4c93cb50
sw x3, 0(x2) # store 0x4c93cb50 in memory
flw f17, 0(x2) # load 0x4c93cb50 from memory into f17
la x2, scratch
li x3, 0x71f5ced3 # load x3 with value 0x71f5ced3
sw x3, 0(x2) # store 0x71f5ced3 in memory
flw f1, 0(x2) # load 0x71f5ced3 from memory into f1
la x2, scratch
li x3, 0x8aac9132 # load x3 with value 0x8aac9132
sw x3, 0(x2) # store 0x8aac9132 in memory
flw f3, 0(x2) # load 0x8aac9132 from memory into f3
fmadd.s f3, f17, f1, f3 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f4)
mv x5, x4 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0xfd40d6b2 # load x3 with value 0xfd40d6b2
sw x3, 0(x2) # store 0xfd40d6b2 in memory
flw f28, 0(x2) # load 0xfd40d6b2 from memory into f28
la x2, scratch
li x3, 0xbe4539f6 # load x3 with value 0xbe4539f6
sw x3, 0(x2) # store 0xbe4539f6 in memory
flw f9, 0(x2) # load 0xbe4539f6 from memory into f9
la x2, scratch
li x3, 0xe42773aa # load x3 with value 0xe42773aa
sw x3, 0(x2) # store 0xe42773aa in memory
flw f4, 0(x2) # load 0xe42773aa from memory into f4
fmadd.s f4, f28, f9, f4 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f5)
mv x7, x5 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x20615f79 # load x3 with value 0x20615f79
sw x3, 0(x2) # store 0x20615f79 in memory
flw f8, 0(x2) # load 0x20615f79 from memory into f8
la x2, scratch
li x3, 0xb6e74c34 # load x3 with value 0xb6e74c34
sw x3, 0(x2) # store 0xb6e74c34 in memory
flw f6, 0(x2) # load 0xb6e74c34 from memory into f6
la x2, scratch
li x3, 0xfc3213a7 # load x3 with value 0xfc3213a7
sw x3, 0(x2) # store 0xfc3213a7 in memory
flw f5, 0(x2) # load 0xfc3213a7 from memory into f5
fmadd.s f5, f8, f6, f5 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f6)
la x2, scratch
li x3, 0x1fc05de9 # load x3 with value 0x1fc05de9
sw x3, 0(x2) # store 0x1fc05de9 in memory
flw f29, 0(x2) # load 0x1fc05de9 from memory into f29
la x2, scratch
li x3, 0x40dd152e # load x3 with value 0x40dd152e
sw x3, 0(x2) # store 0x40dd152e in memory
flw f22, 0(x2) # load 0x40dd152e from memory into f22
la x2, scratch
li x3, 0x5f9e54a0 # load x3 with value 0x5f9e54a0
sw x3, 0(x2) # store 0x5f9e54a0 in memory
flw f6, 0(x2) # load 0x5f9e54a0 from memory into f6
fmadd.s f6, f29, f22, f6 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f7)
mv x4, x7 # switch signature pointer register to avoid conflict with test
la x2, scratch
li x3, 0x3c3edcb4 # load x3 with value 0x3c3edcb4
sw x3, 0(x2) # store 0x3c3edcb4 in memory
flw f29, 0(x2) # load 0x3c3edcb4 from memory into f29
la x2, scratch
li x3, 0x4bdaf571 # load x3 with value 0x4bdaf571
sw x3, 0(x2) # store 0x4bdaf571 in memory
flw f16, 0(x2) # load 0x4bdaf571 from memory into f16
la x2, scratch
li x3, 0x52e7adba # load x3 with value 0x52e7adba
sw x3, 0(x2) # store 0x52e7adba in memory
flw f7, 0(x2) # load 0x52e7adba from memory into f7
fmadd.s f7, f29, f16, f7 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f8)
la x2, scratch
li x3, 0x379f3a13 # load x3 with value 0x379f3a13
sw x3, 0(x2) # store 0x379f3a13 in memory
flw f17, 0(x2) # load 0x379f3a13 from memory into f17
la x2, scratch
li x3, 0x4d4cbf5f # load x3 with value 0x4d4cbf5f
sw x3, 0(x2) # store 0x4d4cbf5f in memory
flw f31, 0(x2) # load 0x4d4cbf5f from memory into f31
la x2, scratch
li x3, 0x475dbad2 # load x3 with value 0x475dbad2
sw x3, 0(x2) # store 0x475dbad2 in memory
flw f8, 0(x2) # load 0x475dbad2 from memory into f8
fmadd.s f8, f17, f31, f8 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f9)
la x2, scratch
li x3, 0x9c3aee82 # load x3 with value 0x9c3aee82
sw x3, 0(x2) # store 0x9c3aee82 in memory
flw f26, 0(x2) # load 0x9c3aee82 from memory into f26
la x2, scratch
li x3, 0x1a99c895 # load x3 with value 0x1a99c895
sw x3, 0(x2) # store 0x1a99c895 in memory
flw f15, 0(x2) # load 0x1a99c895 from memory into f15
la x2, scratch
li x3, 0x78083430 # load x3 with value 0x78083430
sw x3, 0(x2) # store 0x78083430 in memory
flw f9, 0(x2) # load 0x78083430 from memory into f9
fmadd.s f9, f26, f15, f9 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f10)
la x2, scratch
li x3, 0xa58736a4 # load x3 with value 0xa58736a4
sw x3, 0(x2) # store 0xa58736a4 in memory
flw f25, 0(x2) # load 0xa58736a4 from memory into f25
la x2, scratch
li x3, 0xadadb174 # load x3 with value 0xadadb174
sw x3, 0(x2) # store 0xadadb174 in memory
flw f6, 0(x2) # load 0xadadb174 from memory into f6
la x2, scratch
li x3, 0x2d56a063 # load x3 with value 0x2d56a063
sw x3, 0(x2) # store 0x2d56a063 in memory
flw f10, 0(x2) # load 0x2d56a063 from memory into f10
fmadd.s f10, f25, f6, f10 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f11)
la x2, scratch
li x3, 0x5a0f44f6 # load x3 with value 0x5a0f44f6
sw x3, 0(x2) # store 0x5a0f44f6 in memory
flw f21, 0(x2) # load 0x5a0f44f6 from memory into f21
la x2, scratch
li x3, 0xd362a9bf # load x3 with value 0xd362a9bf
sw x3, 0(x2) # store 0xd362a9bf in memory
flw f2, 0(x2) # load 0xd362a9bf from memory into f2
la x2, scratch
li x3, 0xb3d16acf # load x3 with value 0xb3d16acf
sw x3, 0(x2) # store 0xb3d16acf in memory
flw f11, 0(x2) # load 0xb3d16acf from memory into f11
fmadd.s f11, f21, f2, f11 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f12)
la x2, scratch
li x3, 0xf08081ad # load x3 with value 0xf08081ad
sw x3, 0(x2) # store 0xf08081ad in memory
flw f10, 0(x2) # load 0xf08081ad from memory into f10
la x2, scratch
li x3, 0x095d0033 # load x3 with value 0x095d0033
sw x3, 0(x2) # store 0x095d0033 in memory
flw f13, 0(x2) # load 0x095d0033 from memory into f13
la x2, scratch
li x3, 0x18401245 # load x3 with value 0x18401245
sw x3, 0(x2) # store 0x18401245 in memory
flw f12, 0(x2) # load 0x18401245 from memory into f12
fmadd.s f12, f10, f13, f12 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f13)
la x2, scratch
li x3, 0xe4c9cd67 # load x3 with value 0xe4c9cd67
sw x3, 0(x2) # store 0xe4c9cd67 in memory
flw f31, 0(x2) # load 0xe4c9cd67 from memory into f31
la x2, scratch
li x3, 0x272eaf29 # load x3 with value 0x272eaf29
sw x3, 0(x2) # store 0x272eaf29 in memory
flw f3, 0(x2) # load 0x272eaf29 from memory into f3
la x2, scratch
li x3, 0x64415329 # load x3 with value 0x64415329
sw x3, 0(x2) # store 0x64415329 in memory
flw f13, 0(x2) # load 0x64415329 from memory into f13
fmadd.s f13, f31, f3, f13 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f14)
la x2, scratch
li x3, 0xc76b536d # load x3 with value 0xc76b536d
sw x3, 0(x2) # store 0xc76b536d in memory
flw f8, 0(x2) # load 0xc76b536d from memory into f8
la x2, scratch
li x3, 0x75779866 # load x3 with value 0x75779866
sw x3, 0(x2) # store 0x75779866 in memory
flw f14, 0(x2) # load 0x75779866 from memory into f14
la x2, scratch
li x3, 0x166bca08 # load x3 with value 0x166bca08
sw x3, 0(x2) # store 0x166bca08 in memory
flw f14, 0(x2) # load 0x166bca08 from memory into f14
fmadd.s f14, f8, f14, f14 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f15)
la x2, scratch
li x3, 0x95b76c61 # load x3 with value 0x95b76c61
sw x3, 0(x2) # store 0x95b76c61 in memory
flw f12, 0(x2) # load 0x95b76c61 from memory into f12
la x2, scratch
li x3, 0x643224c2 # load x3 with value 0x643224c2
sw x3, 0(x2) # store 0x643224c2 in memory
flw f29, 0(x2) # load 0x643224c2 from memory into f29
la x2, scratch
li x3, 0xa6b929c8 # load x3 with value 0xa6b929c8
sw x3, 0(x2) # store 0xa6b929c8 in memory
flw f15, 0(x2) # load 0xa6b929c8 from memory into f15
fmadd.s f15, f12, f29, f15 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f16)
la x2, scratch
li x3, 0x77d0b46f # load x3 with value 0x77d0b46f
sw x3, 0(x2) # store 0x77d0b46f in memory
flw f3, 0(x2) # load 0x77d0b46f from memory into f3
la x2, scratch
li x3, 0xa9d005f3 # load x3 with value 0xa9d005f3
sw x3, 0(x2) # store 0xa9d005f3 in memory
flw f30, 0(x2) # load 0xa9d005f3 from memory into f30
la x2, scratch
li x3, 0x0fb0690d # load x3 with value 0x0fb0690d
sw x3, 0(x2) # store 0x0fb0690d in memory
flw f16, 0(x2) # load 0x0fb0690d from memory into f16
fmadd.s f16, f3, f30, f16 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f17)
la x2, scratch
li x3, 0x4cf1ee02 # load x3 with value 0x4cf1ee02
sw x3, 0(x2) # store 0x4cf1ee02 in memory
flw f15, 0(x2) # load 0x4cf1ee02 from memory into f15
la x2, scratch
li x3, 0xf29b72d9 # load x3 with value 0xf29b72d9
sw x3, 0(x2) # store 0xf29b72d9 in memory
flw f12, 0(x2) # load 0xf29b72d9 from memory into f12
la x2, scratch
li x3, 0xcb2e9034 # load x3 with value 0xcb2e9034
sw x3, 0(x2) # store 0xcb2e9034 in memory
flw f17, 0(x2) # load 0xcb2e9034 from memory into f17
fmadd.s f17, f15, f12, f17 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f18)
la x2, scratch
li x3, 0x1e0d7ac7 # load x3 with value 0x1e0d7ac7
sw x3, 0(x2) # store 0x1e0d7ac7 in memory
flw f9, 0(x2) # load 0x1e0d7ac7 from memory into f9
la x2, scratch
li x3, 0x2e1a1da5 # load x3 with value 0x2e1a1da5
sw x3, 0(x2) # store 0x2e1a1da5 in memory
flw f15, 0(x2) # load 0x2e1a1da5 from memory into f15
la x2, scratch
li x3, 0xce058bda # load x3 with value 0xce058bda
sw x3, 0(x2) # store 0xce058bda in memory
flw f18, 0(x2) # load 0xce058bda from memory into f18
fmadd.s f18, f9, f15, f18 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f19)
la x2, scratch
li x3, 0xf302818c # load x3 with value 0xf302818c
sw x3, 0(x2) # store 0xf302818c in memory
flw f19, 0(x2) # load 0xf302818c from memory into f19
la x2, scratch
li x3, 0x76d72a4f # load x3 with value 0x76d72a4f
sw x3, 0(x2) # store 0x76d72a4f in memory
flw f30, 0(x2) # load 0x76d72a4f from memory into f30
la x2, scratch
li x3, 0xa63093ec # load x3 with value 0xa63093ec
sw x3, 0(x2) # store 0xa63093ec in memory
flw f19, 0(x2) # load 0xa63093ec from memory into f19
fmadd.s f19, f19, f30, f19 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f20)
la x2, scratch
li x3, 0xc7f2d947 # load x3 with value 0xc7f2d947
sw x3, 0(x2) # store 0xc7f2d947 in memory
flw f5, 0(x2) # load 0xc7f2d947 from memory into f5
la x2, scratch
li x3, 0xe085620b # load x3 with value 0xe085620b
sw x3, 0(x2) # store 0xe085620b in memory
flw f22, 0(x2) # load 0xe085620b from memory into f22
la x2, scratch
li x3, 0xa433ba06 # load x3 with value 0xa433ba06
sw x3, 0(x2) # store 0xa433ba06 in memory
flw f20, 0(x2) # load 0xa433ba06 from memory into f20
fmadd.s f20, f5, f22, f20 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f21)
la x2, scratch
li x3, 0x9d99e8f5 # load x3 with value 0x9d99e8f5
sw x3, 0(x2) # store 0x9d99e8f5 in memory
flw f11, 0(x2) # load 0x9d99e8f5 from memory into f11
la x2, scratch
li x3, 0x652520bc # load x3 with value 0x652520bc
sw x3, 0(x2) # store 0x652520bc in memory
flw f10, 0(x2) # load 0x652520bc from memory into f10
la x2, scratch
li x3, 0x6749215a # load x3 with value 0x6749215a
sw x3, 0(x2) # store 0x6749215a in memory
flw f21, 0(x2) # load 0x6749215a from memory into f21
fmadd.s f21, f11, f10, f21 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f22)
la x2, scratch
li x3, 0x2fbfa290 # load x3 with value 0x2fbfa290
sw x3, 0(x2) # store 0x2fbfa290 in memory
flw f19, 0(x2) # load 0x2fbfa290 from memory into f19
la x2, scratch
li x3, 0xb553cd7f # load x3 with value 0xb553cd7f
sw x3, 0(x2) # store 0xb553cd7f in memory
flw f30, 0(x2) # load 0xb553cd7f from memory into f30
la x2, scratch
li x3, 0x7f4b2732 # load x3 with value 0x7f4b2732
sw x3, 0(x2) # store 0x7f4b2732 in memory
flw f22, 0(x2) # load 0x7f4b2732 from memory into f22
fmadd.s f22, f19, f30, f22 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f23)
la x2, scratch
li x3, 0xdc0d20f4 # load x3 with value 0xdc0d20f4
sw x3, 0(x2) # store 0xdc0d20f4 in memory
flw f18, 0(x2) # load 0xdc0d20f4 from memory into f18
la x2, scratch
li x3, 0xf69b971e # load x3 with value 0xf69b971e
sw x3, 0(x2) # store 0xf69b971e in memory
flw f13, 0(x2) # load 0xf69b971e from memory into f13
la x2, scratch
li x3, 0x74098442 # load x3 with value 0x74098442
sw x3, 0(x2) # store 0x74098442 in memory
flw f23, 0(x2) # load 0x74098442 from memory into f23
fmadd.s f23, f18, f13, f23 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f24)
la x2, scratch
li x3, 0x3561eab1 # load x3 with value 0x3561eab1
sw x3, 0(x2) # store 0x3561eab1 in memory
flw f12, 0(x2) # load 0x3561eab1 from memory into f12
la x2, scratch
li x3, 0xbb90e038 # load x3 with value 0xbb90e038
sw x3, 0(x2) # store 0xbb90e038 in memory
flw f15, 0(x2) # load 0xbb90e038 from memory into f15
la x2, scratch
li x3, 0x2d5759c4 # load x3 with value 0x2d5759c4
sw x3, 0(x2) # store 0x2d5759c4 in memory
flw f24, 0(x2) # load 0x2d5759c4 from memory into f24
fmadd.s f24, f12, f15, f24 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f25)
la x2, scratch
li x3, 0xb105d78a # load x3 with value 0xb105d78a
sw x3, 0(x2) # store 0xb105d78a in memory
flw f21, 0(x2) # load 0xb105d78a from memory into f21
la x2, scratch
li x3, 0xe25b364f # load x3 with value 0xe25b364f
sw x3, 0(x2) # store 0xe25b364f in memory
flw f6, 0(x2) # load 0xe25b364f from memory into f6
la x2, scratch
li x3, 0x0cb114e5 # load x3 with value 0x0cb114e5
sw x3, 0(x2) # store 0x0cb114e5 in memory
flw f25, 0(x2) # load 0x0cb114e5 from memory into f25
fmadd.s f25, f21, f6, f25 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f26)
la x2, scratch
li x3, 0x2b3ae35b # load x3 with value 0x2b3ae35b
sw x3, 0(x2) # store 0x2b3ae35b in memory
flw f8, 0(x2) # load 0x2b3ae35b from memory into f8
la x2, scratch
li x3, 0x94d34a43 # load x3 with value 0x94d34a43
sw x3, 0(x2) # store 0x94d34a43 in memory
flw f18, 0(x2) # load 0x94d34a43 from memory into f18
la x2, scratch
li x3, 0x41f1e79e # load x3 with value 0x41f1e79e
sw x3, 0(x2) # store 0x41f1e79e in memory
flw f26, 0(x2) # load 0x41f1e79e from memory into f26
fmadd.s f26, f8, f18, f26 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f27)
la x2, scratch
li x3, 0xf6723b5c # load x3 with value 0xf6723b5c
sw x3, 0(x2) # store 0xf6723b5c in memory
flw f5, 0(x2) # load 0xf6723b5c from memory into f5
la x2, scratch
li x3, 0x24d07a5a # load x3 with value 0x24d07a5a
sw x3, 0(x2) # store 0x24d07a5a in memory
flw f3, 0(x2) # load 0x24d07a5a from memory into f3
la x2, scratch
li x3, 0x5acd3d56 # load x3 with value 0x5acd3d56
sw x3, 0(x2) # store 0x5acd3d56 in memory
flw f27, 0(x2) # load 0x5acd3d56 from memory into f27
fmadd.s f27, f5, f3, f27 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f28)
la x2, scratch
li x3, 0x7ed2d1df # load x3 with value 0x7ed2d1df
sw x3, 0(x2) # store 0x7ed2d1df in memory
flw f7, 0(x2) # load 0x7ed2d1df from memory into f7
la x2, scratch
li x3, 0x9fddf5fa # load x3 with value 0x9fddf5fa
sw x3, 0(x2) # store 0x9fddf5fa in memory
flw f8, 0(x2) # load 0x9fddf5fa from memory into f8
la x2, scratch
li x3, 0xd3e74e8b # load x3 with value 0xd3e74e8b
sw x3, 0(x2) # store 0xd3e74e8b in memory
flw f28, 0(x2) # load 0xd3e74e8b from memory into f28
fmadd.s f28, f7, f8, f28 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f29)
la x2, scratch
li x3, 0xab658088 # load x3 with value 0xab658088
sw x3, 0(x2) # store 0xab658088 in memory
flw f24, 0(x2) # load 0xab658088 from memory into f24
la x2, scratch
li x3, 0xdcc7e05b # load x3 with value 0xdcc7e05b
sw x3, 0(x2) # store 0xdcc7e05b in memory
flw f25, 0(x2) # load 0xdcc7e05b from memory into f25
la x2, scratch
li x3, 0x62675977 # load x3 with value 0x62675977
sw x3, 0(x2) # store 0x62675977 in memory
flw f29, 0(x2) # load 0x62675977 from memory into f29
fmadd.s f29, f24, f25, f29 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f30)
la x2, scratch
li x3, 0x3a6311c6 # load x3 with value 0x3a6311c6
sw x3, 0(x2) # store 0x3a6311c6 in memory
flw f30, 0(x2) # load 0x3a6311c6 from memory into f30
la x2, scratch
li x3, 0x57c7358a # load x3 with value 0x57c7358a
sw x3, 0(x2) # store 0x57c7358a in memory
flw f11, 0(x2) # load 0x57c7358a from memory into f11
la x2, scratch
li x3, 0x3a52d137 # load x3 with value 0x3a52d137
sw x3, 0(x2) # store 0x3a52d137 in memory
flw f30, 0(x2) # load 0x3a52d137 from memory into f30
fmadd.s f30, f30, f11, f30 # perform operation

# Testcase cmp_fd_fs3 (Test fd = fs3 = f31)
la x2, scratch
li x3, 0x7940c664 # load x3 with value 0x7940c664
sw x3, 0(x2) # store 0x7940c664 in memory
flw f13, 0(x2) # load 0x7940c664 from memory into f13
la x2, scratch
li x3, 0xf5128a3a # load x3 with value 0xf5128a3a
sw x3, 0(x2) # store 0xf5128a3a in memory
flw f16, 0(x2) # load 0xf5128a3a from memory into f16
la x2, scratch
li x3, 0xe4c75b84 # load x3 with value 0xe4c75b84
sw x3, 0(x2) # store 0xe4c75b84 in memory
flw f31, 0(x2) # load 0xe4c75b84 from memory into f31
fmadd.s f31, f13, f16, f31 # perform operation

# Testcase cp_frm
la x2, scratch
li x3, 0xde2404bd # load x3 with value 0xde2404bd
sw x3, 0(x2) # store 0xde2404bd in memory
flw f8, 0(x2) # load 0xde2404bd from memory into f8
la x2, scratch
li x3, 0x9f7c6afc # load x3 with value 0x9f7c6afc
sw x3, 0(x2) # store 0x9f7c6afc in memory
flw f27, 0(x2) # load 0x9f7c6afc from memory into f27
la x2, scratch
li x3, 0x0000000a # load x3 with value 0x0000000a
sw x3, 0(x2) # store 0x0000000a in memory
flw f10, 0(x2) # load 0x0000000a from memory into f10
fmadd.s f30, f8, f27, f10, dyn # perform operation
fmadd.s f30, f8, f27, f10, rdn # perform operation
fmadd.s f30, f8, f27, f10, rmm # perform operation
fmadd.s f30, f8, f27, f10, rne # perform operation
fmadd.s f30, f8, f27, f10, rtz # perform operation
fmadd.s f30, f8, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f27, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x35ff14fa # load x3 with value 0x35ff14fa
sw x3, 0(x2) # store 0x35ff14fa in memory
flw f6, 0(x2) # load 0x35ff14fa from memory into f6
fmadd.s f3, f16, f28, f6, dyn # perform operation
fmadd.s f3, f16, f28, f6, rdn # perform operation
fmadd.s f3, f16, f28, f6, rmm # perform operation
fmadd.s f3, f16, f28, f6, rne # perform operation
fmadd.s f3, f16, f28, f6, rtz # perform operation
fmadd.s f3, f16, f28, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f28, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f28, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xb76bf2de # load x3 with value 0xb76bf2de
sw x3, 0(x2) # store 0xb76bf2de in memory
flw f28, 0(x2) # load 0xb76bf2de from memory into f28
fmadd.s f9, f3, f5, f28, dyn # perform operation
fmadd.s f9, f3, f5, f28, rdn # perform operation
fmadd.s f9, f3, f5, f28, rmm # perform operation
fmadd.s f9, f3, f5, f28, rne # perform operation
fmadd.s f9, f3, f5, f28, rtz # perform operation
fmadd.s f9, f3, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0x69f99db2 # load x3 with value 0x69f99db2
sw x3, 0(x2) # store 0x69f99db2 in memory
flw f7, 0(x2) # load 0x69f99db2 from memory into f7
fmadd.s f22, f17, f2, f7, dyn # perform operation
fmadd.s f22, f17, f2, f7, rdn # perform operation
fmadd.s f22, f17, f2, f7, rmm # perform operation
fmadd.s f22, f17, f2, f7, rne # perform operation
fmadd.s f22, f17, f2, f7, rtz # perform operation
fmadd.s f22, f17, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xa4f27bc2 # load x3 with value 0xa4f27bc2
sw x3, 0(x2) # store 0xa4f27bc2 in memory
flw f14, 0(x2) # load 0xa4f27bc2 from memory into f14
fmadd.s f18, f6, f19, f14, dyn # perform operation
fmadd.s f18, f6, f19, f14, rdn # perform operation
fmadd.s f18, f6, f19, f14, rmm # perform operation
fmadd.s f18, f6, f19, f14, rne # perform operation
fmadd.s f18, f6, f19, f14, rtz # perform operation
fmadd.s f18, f6, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f19, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
la x2, scratch
li x3, 0x3335f591 # load x3 with value 0x3335f591
sw x3, 0(x2) # store 0x3335f591 in memory
flw f30, 0(x2) # load 0x3335f591 from memory into f30
fmadd.s f31, f2, f7, f30, dyn # perform operation
fmadd.s f31, f2, f7, f30, rdn # perform operation
fmadd.s f31, f2, f7, f30, rmm # perform operation
fmadd.s f31, f2, f7, f30, rne # perform operation
fmadd.s f31, f2, f7, f30, rtz # perform operation
fmadd.s f31, f2, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x706483df # load x3 with value 0x706483df
sw x3, 0(x2) # store 0x706483df in memory
flw f12, 0(x2) # load 0x706483df from memory into f12
fmadd.s f22, f20, f31, f12, dyn # perform operation
fmadd.s f22, f20, f31, f12, rdn # perform operation
fmadd.s f22, f20, f31, f12, rmm # perform operation
fmadd.s f22, f20, f31, f12, rne # perform operation
fmadd.s f22, f20, f31, f12, rtz # perform operation
fmadd.s f22, f20, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0xe544aedd # load x3 with value 0xe544aedd
sw x3, 0(x2) # store 0xe544aedd in memory
flw f29, 0(x2) # load 0xe544aedd from memory into f29
fmadd.s f10, f23, f8, f29, dyn # perform operation
fmadd.s f10, f23, f8, f29, rdn # perform operation
fmadd.s f10, f23, f8, f29, rmm # perform operation
fmadd.s f10, f23, f8, f29, rne # perform operation
fmadd.s f10, f23, f8, f29, rtz # perform operation
fmadd.s f10, f23, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xc8ce9f5a # load x3 with value 0xc8ce9f5a
sw x3, 0(x2) # store 0xc8ce9f5a in memory
flw f28, 0(x2) # load 0xc8ce9f5a from memory into f28
fmadd.s f6, f10, f15, f28, dyn # perform operation
fmadd.s f6, f10, f15, f28, rdn # perform operation
fmadd.s f6, f10, f15, f28, rmm # perform operation
fmadd.s f6, f10, f15, f28, rne # perform operation
fmadd.s f6, f10, f15, f28, rtz # perform operation
fmadd.s f6, f10, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f10, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f10, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x241896cd # load x3 with value 0x241896cd
sw x3, 0(x2) # store 0x241896cd in memory
flw f20, 0(x2) # load 0x241896cd from memory into f20
fmadd.s f1, f28, f22, f20, dyn # perform operation
fmadd.s f1, f28, f22, f20, rdn # perform operation
fmadd.s f1, f28, f22, f20, rmm # perform operation
fmadd.s f1, f28, f22, f20, rne # perform operation
fmadd.s f1, f28, f22, f20, rtz # perform operation
fmadd.s f1, f28, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f22, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x7f59965f # load x3 with value 0x7f59965f
sw x3, 0(x2) # store 0x7f59965f in memory
flw f9, 0(x2) # load 0x7f59965f from memory into f9
fmadd.s f25, f17, f1, f9, dyn # perform operation
fmadd.s f25, f17, f1, f9, rdn # perform operation
fmadd.s f25, f17, f1, f9, rmm # perform operation
fmadd.s f25, f17, f1, f9, rne # perform operation
fmadd.s f25, f17, f1, f9, rtz # perform operation
fmadd.s f25, f17, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f17, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f17, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x7af67efe # load x3 with value 0x7af67efe
sw x3, 0(x2) # store 0x7af67efe in memory
flw f22, 0(x2) # load 0x7af67efe from memory into f22
fmadd.s f30, f21, f25, f22, dyn # perform operation
fmadd.s f30, f21, f25, f22, rdn # perform operation
fmadd.s f30, f21, f25, f22, rmm # perform operation
fmadd.s f30, f21, f25, f22, rne # perform operation
fmadd.s f30, f21, f25, f22, rtz # perform operation
fmadd.s f30, f21, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f25, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x7eee7e05 # load x3 with value 0x7eee7e05
sw x3, 0(x2) # store 0x7eee7e05 in memory
flw f19, 0(x2) # load 0x7eee7e05 from memory into f19
fmadd.s f11, f28, f26, f19, dyn # perform operation
fmadd.s f11, f28, f26, f19, rdn # perform operation
fmadd.s f11, f28, f26, f19, rmm # perform operation
fmadd.s f11, f28, f26, f19, rne # perform operation
fmadd.s f11, f28, f26, f19, rtz # perform operation
fmadd.s f11, f28, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x95bd901a # load x3 with value 0x95bd901a
sw x3, 0(x2) # store 0x95bd901a in memory
flw f18, 0(x2) # load 0x95bd901a from memory into f18
fmadd.s f29, f1, f21, f18, dyn # perform operation
fmadd.s f29, f1, f21, f18, rdn # perform operation
fmadd.s f29, f1, f21, f18, rmm # perform operation
fmadd.s f29, f1, f21, f18, rne # perform operation
fmadd.s f29, f1, f21, f18, rtz # perform operation
fmadd.s f29, f1, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f1, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f1, f21, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x337ea35e # load x3 with value 0x337ea35e
sw x3, 0(x2) # store 0x337ea35e in memory
flw f26, 0(x2) # load 0x337ea35e from memory into f26
fmadd.s f6, f11, f25, f26, dyn # perform operation
fmadd.s f6, f11, f25, f26, rdn # perform operation
fmadd.s f6, f11, f25, f26, rmm # perform operation
fmadd.s f6, f11, f25, f26, rne # perform operation
fmadd.s f6, f11, f25, f26, rtz # perform operation
fmadd.s f6, f11, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xea28862a # load x3 with value 0xea28862a
sw x3, 0(x2) # store 0xea28862a in memory
flw f20, 0(x2) # load 0xea28862a from memory into f20
fmadd.s f29, f2, f9, f20, dyn # perform operation
fmadd.s f29, f2, f9, f20, rdn # perform operation
fmadd.s f29, f2, f9, f20, rmm # perform operation
fmadd.s f29, f2, f9, f20, rne # perform operation
fmadd.s f29, f2, f9, f20, rtz # perform operation
fmadd.s f29, f2, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f9, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0xe51b2a43 # load x3 with value 0xe51b2a43
sw x3, 0(x2) # store 0xe51b2a43 in memory
flw f9, 0(x2) # load 0xe51b2a43 from memory into f9
fmadd.s f5, f14, f7, f9, dyn # perform operation
fmadd.s f5, f14, f7, f9, rdn # perform operation
fmadd.s f5, f14, f7, f9, rmm # perform operation
fmadd.s f5, f14, f7, f9, rne # perform operation
fmadd.s f5, f14, f7, f9, rtz # perform operation
fmadd.s f5, f14, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x54006ab2 # load x3 with value 0x54006ab2
sw x3, 0(x2) # store 0x54006ab2 in memory
flw f12, 0(x2) # load 0x54006ab2 from memory into f12
fmadd.s f25, f21, f27, f12, dyn # perform operation
fmadd.s f25, f21, f27, f12, rdn # perform operation
fmadd.s f25, f21, f27, f12, rmm # perform operation
fmadd.s f25, f21, f27, f12, rne # perform operation
fmadd.s f25, f21, f27, f12, rtz # perform operation
fmadd.s f25, f21, f27, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f27, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f27, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f27, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f27, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f27, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x1edc3cf9 # load x3 with value 0x1edc3cf9
sw x3, 0(x2) # store 0x1edc3cf9 in memory
flw f7, 0(x2) # load 0x1edc3cf9 from memory into f7
fmadd.s f19, f25, f3, f7, dyn # perform operation
fmadd.s f19, f25, f3, f7, rdn # perform operation
fmadd.s f19, f25, f3, f7, rmm # perform operation
fmadd.s f19, f25, f3, f7, rne # perform operation
fmadd.s f19, f25, f3, f7, rtz # perform operation
fmadd.s f19, f25, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f25, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f25, f3, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x2994112d # load x3 with value 0x2994112d
sw x3, 0(x2) # store 0x2994112d in memory
flw f16, 0(x2) # load 0x2994112d from memory into f16
fmadd.s f1, f27, f23, f16, dyn # perform operation
fmadd.s f1, f27, f23, f16, rdn # perform operation
fmadd.s f1, f27, f23, f16, rmm # perform operation
fmadd.s f1, f27, f23, f16, rne # perform operation
fmadd.s f1, f27, f23, f16, rtz # perform operation
fmadd.s f1, f27, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f23, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x41f51a83 # load x3 with value 0x41f51a83
sw x3, 0(x2) # store 0x41f51a83 in memory
flw f23, 0(x2) # load 0x41f51a83 from memory into f23
fmadd.s f19, f24, f17, f23, dyn # perform operation
fmadd.s f19, f24, f17, f23, rdn # perform operation
fmadd.s f19, f24, f17, f23, rmm # perform operation
fmadd.s f19, f24, f17, f23, rne # perform operation
fmadd.s f19, f24, f17, f23, rtz # perform operation
fmadd.s f19, f24, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f17, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x3afb9f0e # load x3 with value 0x3afb9f0e
sw x3, 0(x2) # store 0x3afb9f0e in memory
flw f26, 0(x2) # load 0x3afb9f0e from memory into f26
fmadd.s f9, f17, f2, f26, dyn # perform operation
fmadd.s f9, f17, f2, f26, rdn # perform operation
fmadd.s f9, f17, f2, f26, rmm # perform operation
fmadd.s f9, f17, f2, f26, rne # perform operation
fmadd.s f9, f17, f2, f26, rtz # perform operation
fmadd.s f9, f17, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
la x2, scratch
li x3, 0xa46c0ab0 # load x3 with value 0xa46c0ab0
sw x3, 0(x2) # store 0xa46c0ab0 in memory
flw f17, 0(x2) # load 0xa46c0ab0 from memory into f17
fmadd.s f23, f7, f26, f17, dyn # perform operation
fmadd.s f23, f7, f26, f17, rdn # perform operation
fmadd.s f23, f7, f26, f17, rmm # perform operation
fmadd.s f23, f7, f26, f17, rne # perform operation
fmadd.s f23, f7, f26, f17, rtz # perform operation
fmadd.s f23, f7, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f26, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x191a54d1 # load x3 with value 0x191a54d1
sw x3, 0(x2) # store 0x191a54d1 in memory
flw f12, 0(x2) # load 0x191a54d1 from memory into f12
fmadd.s f2, f1, f10, f12, dyn # perform operation
fmadd.s f2, f1, f10, f12, rdn # perform operation
fmadd.s f2, f1, f10, f12, rmm # perform operation
fmadd.s f2, f1, f10, f12, rne # perform operation
fmadd.s f2, f1, f10, f12, rtz # perform operation
fmadd.s f2, f1, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x971a0d63 # load x3 with value 0x971a0d63
sw x3, 0(x2) # store 0x971a0d63 in memory
flw f18, 0(x2) # load 0x971a0d63 from memory into f18
fmadd.s f17, f2, f9, f18, dyn # perform operation
fmadd.s f17, f2, f9, f18, rdn # perform operation
fmadd.s f17, f2, f9, f18, rmm # perform operation
fmadd.s f17, f2, f9, f18, rne # perform operation
fmadd.s f17, f2, f9, f18, rtz # perform operation
fmadd.s f17, f2, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0xd57a823a # load x3 with value 0xd57a823a
sw x3, 0(x2) # store 0xd57a823a in memory
flw f9, 0(x2) # load 0xd57a823a from memory into f9
fmadd.s f2, f13, f27, f9, dyn # perform operation
fmadd.s f2, f13, f27, f9, rdn # perform operation
fmadd.s f2, f13, f27, f9, rmm # perform operation
fmadd.s f2, f13, f27, f9, rne # perform operation
fmadd.s f2, f13, f27, f9, rtz # perform operation
fmadd.s f2, f13, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x24509563 # load x3 with value 0x24509563
sw x3, 0(x2) # store 0x24509563 in memory
flw f31, 0(x2) # load 0x24509563 from memory into f31
fmadd.s f20, f8, f5, f31, dyn # perform operation
fmadd.s f20, f8, f5, f31, rdn # perform operation
fmadd.s f20, f8, f5, f31, rmm # perform operation
fmadd.s f20, f8, f5, f31, rne # perform operation
fmadd.s f20, f8, f5, f31, rtz # perform operation
fmadd.s f20, f8, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f5, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x4be10344 # load x3 with value 0x4be10344
sw x3, 0(x2) # store 0x4be10344 in memory
flw f25, 0(x2) # load 0x4be10344 from memory into f25
fmadd.s f3, f7, f12, f25, dyn # perform operation
fmadd.s f3, f7, f12, f25, rdn # perform operation
fmadd.s f3, f7, f12, f25, rmm # perform operation
fmadd.s f3, f7, f12, f25, rne # perform operation
fmadd.s f3, f7, f12, f25, rtz # perform operation
fmadd.s f3, f7, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f7, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f7, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f7, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f7, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f7, f12, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x154e6185 # load x3 with value 0x154e6185
sw x3, 0(x2) # store 0x154e6185 in memory
flw f25, 0(x2) # load 0x154e6185 from memory into f25
fmadd.s f23, f10, f22, f25, dyn # perform operation
fmadd.s f23, f10, f22, f25, rdn # perform operation
fmadd.s f23, f10, f22, f25, rmm # perform operation
fmadd.s f23, f10, f22, f25, rne # perform operation
fmadd.s f23, f10, f22, f25, rtz # perform operation
fmadd.s f23, f10, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f22, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x9065e08d # load x3 with value 0x9065e08d
sw x3, 0(x2) # store 0x9065e08d in memory
flw f24, 0(x2) # load 0x9065e08d from memory into f24
fmadd.s f16, f28, f9, f24, dyn # perform operation
fmadd.s f16, f28, f9, f24, rdn # perform operation
fmadd.s f16, f28, f9, f24, rmm # perform operation
fmadd.s f16, f28, f9, f24, rne # perform operation
fmadd.s f16, f28, f9, f24, rtz # perform operation
fmadd.s f16, f28, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f9, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x0908fb1f # load x3 with value 0x0908fb1f
sw x3, 0(x2) # store 0x0908fb1f in memory
flw f29, 0(x2) # load 0x0908fb1f from memory into f29
fmadd.s f17, f31, f7, f29, dyn # perform operation
fmadd.s f17, f31, f7, f29, rdn # perform operation
fmadd.s f17, f31, f7, f29, rmm # perform operation
fmadd.s f17, f31, f7, f29, rne # perform operation
fmadd.s f17, f31, f7, f29, rtz # perform operation
fmadd.s f17, f31, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f31, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f31, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f31, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f31, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f31, f7, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x867a0620 # load x3 with value 0x867a0620
sw x3, 0(x2) # store 0x867a0620 in memory
flw f1, 0(x2) # load 0x867a0620 from memory into f1
fmadd.s f26, f27, f17, f1, dyn # perform operation
fmadd.s f26, f27, f17, f1, rdn # perform operation
fmadd.s f26, f27, f17, f1, rmm # perform operation
fmadd.s f26, f27, f17, f1, rne # perform operation
fmadd.s f26, f27, f17, f1, rtz # perform operation
fmadd.s f26, f27, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x28b96d6b # load x3 with value 0x28b96d6b
sw x3, 0(x2) # store 0x28b96d6b in memory
flw f2, 0(x2) # load 0x28b96d6b from memory into f2
fmadd.s f10, f8, f17, f2, dyn # perform operation
fmadd.s f10, f8, f17, f2, rdn # perform operation
fmadd.s f10, f8, f17, f2, rmm # perform operation
fmadd.s f10, f8, f17, f2, rne # perform operation
fmadd.s f10, f8, f17, f2, rtz # perform operation
fmadd.s f10, f8, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f8, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f8, f17, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0xf8c06bc3 # load x3 with value 0xf8c06bc3
sw x3, 0(x2) # store 0xf8c06bc3 in memory
flw f20, 0(x2) # load 0xf8c06bc3 from memory into f20
fmadd.s f31, f28, f16, f20, dyn # perform operation
fmadd.s f31, f28, f16, f20, rdn # perform operation
fmadd.s f31, f28, f16, f20, rmm # perform operation
fmadd.s f31, f28, f16, f20, rne # perform operation
fmadd.s f31, f28, f16, f20, rtz # perform operation
fmadd.s f31, f28, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x7cf384db # load x3 with value 0x7cf384db
sw x3, 0(x2) # store 0x7cf384db in memory
flw f15, 0(x2) # load 0x7cf384db from memory into f15
fmadd.s f2, f22, f18, f15, dyn # perform operation
fmadd.s f2, f22, f18, f15, rdn # perform operation
fmadd.s f2, f22, f18, f15, rmm # perform operation
fmadd.s f2, f22, f18, f15, rne # perform operation
fmadd.s f2, f22, f18, f15, rtz # perform operation
fmadd.s f2, f22, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f18, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0xebfd49d7 # load x3 with value 0xebfd49d7
sw x3, 0(x2) # store 0xebfd49d7 in memory
flw f22, 0(x2) # load 0xebfd49d7 from memory into f22
fmadd.s f27, f24, f16, f22, dyn # perform operation
fmadd.s f27, f24, f16, f22, rdn # perform operation
fmadd.s f27, f24, f16, f22, rmm # perform operation
fmadd.s f27, f24, f16, f22, rne # perform operation
fmadd.s f27, f24, f16, f22, rtz # perform operation
fmadd.s f27, f24, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f16, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xa80a6cba # load x3 with value 0xa80a6cba
sw x3, 0(x2) # store 0xa80a6cba in memory
flw f29, 0(x2) # load 0xa80a6cba from memory into f29
fmadd.s f1, f17, f19, f29, dyn # perform operation
fmadd.s f1, f17, f19, f29, rdn # perform operation
fmadd.s f1, f17, f19, f29, rmm # perform operation
fmadd.s f1, f17, f19, f29, rne # perform operation
fmadd.s f1, f17, f19, f29, rtz # perform operation
fmadd.s f1, f17, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f19, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0xeb813940 # load x3 with value 0xeb813940
sw x3, 0(x2) # store 0xeb813940 in memory
flw f28, 0(x2) # load 0xeb813940 from memory into f28
fmadd.s f6, f9, f31, f28, dyn # perform operation
fmadd.s f6, f9, f31, f28, rdn # perform operation
fmadd.s f6, f9, f31, f28, rmm # perform operation
fmadd.s f6, f9, f31, f28, rne # perform operation
fmadd.s f6, f9, f31, f28, rtz # perform operation
fmadd.s f6, f9, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f31, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xe35c7f05 # load x3 with value 0xe35c7f05
sw x3, 0(x2) # store 0xe35c7f05 in memory
flw f5, 0(x2) # load 0xe35c7f05 from memory into f5
fmadd.s f30, f23, f29, f5, dyn # perform operation
fmadd.s f30, f23, f29, f5, rdn # perform operation
fmadd.s f30, f23, f29, f5, rmm # perform operation
fmadd.s f30, f23, f29, f5, rne # perform operation
fmadd.s f30, f23, f29, f5, rtz # perform operation
fmadd.s f30, f23, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f29, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
la x2, scratch
li x3, 0x8f80f2fa # load x3 with value 0x8f80f2fa
sw x3, 0(x2) # store 0x8f80f2fa in memory
flw f23, 0(x2) # load 0x8f80f2fa from memory into f23
fmadd.s f20, f7, f6, f23, dyn # perform operation
fmadd.s f20, f7, f6, f23, rdn # perform operation
fmadd.s f20, f7, f6, f23, rmm # perform operation
fmadd.s f20, f7, f6, f23, rne # perform operation
fmadd.s f20, f7, f6, f23, rtz # perform operation
fmadd.s f20, f7, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f7, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f7, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f7, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f7, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f7, f6, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0x8f815a8f # load x3 with value 0x8f815a8f
sw x3, 0(x2) # store 0x8f815a8f in memory
flw f2, 0(x2) # load 0x8f815a8f from memory into f2
fmadd.s f14, f17, f16, f2, dyn # perform operation
fmadd.s f14, f17, f16, f2, rdn # perform operation
fmadd.s f14, f17, f16, f2, rmm # perform operation
fmadd.s f14, f17, f16, f2, rne # perform operation
fmadd.s f14, f17, f16, f2, rtz # perform operation
fmadd.s f14, f17, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0xd9c86416 # load x3 with value 0xd9c86416
sw x3, 0(x2) # store 0xd9c86416 in memory
flw f19, 0(x2) # load 0xd9c86416 from memory into f19
fmadd.s f9, f24, f1, f19, dyn # perform operation
fmadd.s f9, f24, f1, f19, rdn # perform operation
fmadd.s f9, f24, f1, f19, rmm # perform operation
fmadd.s f9, f24, f1, f19, rne # perform operation
fmadd.s f9, f24, f1, f19, rtz # perform operation
fmadd.s f9, f24, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xdeeeb33b # load x3 with value 0xdeeeb33b
sw x3, 0(x2) # store 0xdeeeb33b in memory
flw f21, 0(x2) # load 0xdeeeb33b from memory into f21
fmadd.s f19, f5, f10, f21, dyn # perform operation
fmadd.s f19, f5, f10, f21, rdn # perform operation
fmadd.s f19, f5, f10, f21, rmm # perform operation
fmadd.s f19, f5, f10, f21, rne # perform operation
fmadd.s f19, f5, f10, f21, rtz # perform operation
fmadd.s f19, f5, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f5, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f5, f10, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x9f72ec13 # load x3 with value 0x9f72ec13
sw x3, 0(x2) # store 0x9f72ec13 in memory
flw f30, 0(x2) # load 0x9f72ec13 from memory into f30
fmadd.s f5, f26, f28, f30, dyn # perform operation
fmadd.s f5, f26, f28, f30, rdn # perform operation
fmadd.s f5, f26, f28, f30, rmm # perform operation
fmadd.s f5, f26, f28, f30, rne # perform operation
fmadd.s f5, f26, f28, f30, rtz # perform operation
fmadd.s f5, f26, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f28, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x2a6bacee # load x3 with value 0x2a6bacee
sw x3, 0(x2) # store 0x2a6bacee in memory
flw f8, 0(x2) # load 0x2a6bacee from memory into f8
fmadd.s f18, f12, f28, f8, dyn # perform operation
fmadd.s f18, f12, f28, f8, rdn # perform operation
fmadd.s f18, f12, f28, f8, rmm # perform operation
fmadd.s f18, f12, f28, f8, rne # perform operation
fmadd.s f18, f12, f28, f8, rtz # perform operation
fmadd.s f18, f12, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f28, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0xb78b1a43 # load x3 with value 0xb78b1a43
sw x3, 0(x2) # store 0xb78b1a43 in memory
flw f12, 0(x2) # load 0xb78b1a43 from memory into f12
fmadd.s f2, f17, f1, f12, dyn # perform operation
fmadd.s f2, f17, f1, f12, rdn # perform operation
fmadd.s f2, f17, f1, f12, rmm # perform operation
fmadd.s f2, f17, f1, f12, rne # perform operation
fmadd.s f2, f17, f1, f12, rtz # perform operation
fmadd.s f2, f17, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xa89fe817 # load x3 with value 0xa89fe817
sw x3, 0(x2) # store 0xa89fe817 in memory
flw f20, 0(x2) # load 0xa89fe817 from memory into f20
fmadd.s f26, f17, f2, f20, dyn # perform operation
fmadd.s f26, f17, f2, f20, rdn # perform operation
fmadd.s f26, f17, f2, f20, rmm # perform operation
fmadd.s f26, f17, f2, f20, rne # perform operation
fmadd.s f26, f17, f2, f20, rtz # perform operation
fmadd.s f26, f17, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f2, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xc4b4a0c6 # load x3 with value 0xc4b4a0c6
sw x3, 0(x2) # store 0xc4b4a0c6 in memory
flw f26, 0(x2) # load 0xc4b4a0c6 from memory into f26
fmadd.s f2, f10, f13, f26, dyn # perform operation
fmadd.s f2, f10, f13, f26, rdn # perform operation
fmadd.s f2, f10, f13, f26, rmm # perform operation
fmadd.s f2, f10, f13, f26, rne # perform operation
fmadd.s f2, f10, f13, f26, rtz # perform operation
fmadd.s f2, f10, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f13, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x319d7669 # load x3 with value 0x319d7669
sw x3, 0(x2) # store 0x319d7669 in memory
flw f31, 0(x2) # load 0x319d7669 from memory into f31
fmadd.s f26, f5, f7, f31, dyn # perform operation
fmadd.s f26, f5, f7, f31, rdn # perform operation
fmadd.s f26, f5, f7, f31, rmm # perform operation
fmadd.s f26, f5, f7, f31, rne # perform operation
fmadd.s f26, f5, f7, f31, rtz # perform operation
fmadd.s f26, f5, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f7, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xd8d08dd4 # load x3 with value 0xd8d08dd4
sw x3, 0(x2) # store 0xd8d08dd4 in memory
flw f21, 0(x2) # load 0xd8d08dd4 from memory into f21
fmadd.s f3, f1, f16, f21, dyn # perform operation
fmadd.s f3, f1, f16, f21, rdn # perform operation
fmadd.s f3, f1, f16, f21, rmm # perform operation
fmadd.s f3, f1, f16, f21, rne # perform operation
fmadd.s f3, f1, f16, f21, rtz # perform operation
fmadd.s f3, f1, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x066b12ee # load x3 with value 0x066b12ee
sw x3, 0(x2) # store 0x066b12ee in memory
flw f5, 0(x2) # load 0x066b12ee from memory into f5
fmadd.s f28, f25, f13, f5, dyn # perform operation
fmadd.s f28, f25, f13, f5, rdn # perform operation
fmadd.s f28, f25, f13, f5, rmm # perform operation
fmadd.s f28, f25, f13, f5, rne # perform operation
fmadd.s f28, f25, f13, f5, rtz # perform operation
fmadd.s f28, f25, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x94d3ad51 # load x3 with value 0x94d3ad51
sw x3, 0(x2) # store 0x94d3ad51 in memory
flw f31, 0(x2) # load 0x94d3ad51 from memory into f31
fmadd.s f7, f6, f16, f31, dyn # perform operation
fmadd.s f7, f6, f16, f31, rdn # perform operation
fmadd.s f7, f6, f16, f31, rmm # perform operation
fmadd.s f7, f6, f16, f31, rne # perform operation
fmadd.s f7, f6, f16, f31, rtz # perform operation
fmadd.s f7, f6, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f6, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f6, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f6, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f6, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f6, f16, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x589d5c7f # load x3 with value 0x589d5c7f
sw x3, 0(x2) # store 0x589d5c7f in memory
flw f1, 0(x2) # load 0x589d5c7f from memory into f1
fmadd.s f6, f20, f11, f1, dyn # perform operation
fmadd.s f6, f20, f11, f1, rdn # perform operation
fmadd.s f6, f20, f11, f1, rmm # perform operation
fmadd.s f6, f20, f11, f1, rne # perform operation
fmadd.s f6, f20, f11, f1, rtz # perform operation
fmadd.s f6, f20, f11, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f20, f11, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f20, f11, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0xa5c3a41a # load x3 with value 0xa5c3a41a
sw x3, 0(x2) # store 0xa5c3a41a in memory
flw f15, 0(x2) # load 0xa5c3a41a from memory into f15
fmadd.s f1, f6, f31, f15, dyn # perform operation
fmadd.s f1, f6, f31, f15, rdn # perform operation
fmadd.s f1, f6, f31, f15, rmm # perform operation
fmadd.s f1, f6, f31, f15, rne # perform operation
fmadd.s f1, f6, f31, f15, rtz # perform operation
fmadd.s f1, f6, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f6, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f6, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f6, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f6, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f6, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x749f3b00 # load x3 with value 0x749f3b00
sw x3, 0(x2) # store 0x749f3b00 in memory
flw f17, 0(x2) # load 0x749f3b00 from memory into f17
fmadd.s f24, f5, f16, f17, dyn # perform operation
fmadd.s f24, f5, f16, f17, rdn # perform operation
fmadd.s f24, f5, f16, f17, rmm # perform operation
fmadd.s f24, f5, f16, f17, rne # perform operation
fmadd.s f24, f5, f16, f17, rtz # perform operation
fmadd.s f24, f5, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f5, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f5, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0xab6b0b92 # load x3 with value 0xab6b0b92
sw x3, 0(x2) # store 0xab6b0b92 in memory
flw f25, 0(x2) # load 0xab6b0b92 from memory into f25
fmadd.s f29, f15, f30, f25, dyn # perform operation
fmadd.s f29, f15, f30, f25, rdn # perform operation
fmadd.s f29, f15, f30, f25, rmm # perform operation
fmadd.s f29, f15, f30, f25, rne # perform operation
fmadd.s f29, f15, f30, f25, rtz # perform operation
fmadd.s f29, f15, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f15, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f15, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x1fb710c3 # load x3 with value 0x1fb710c3
sw x3, 0(x2) # store 0x1fb710c3 in memory
flw f7, 0(x2) # load 0x1fb710c3 from memory into f7
fmadd.s f11, f28, f13, f7, dyn # perform operation
fmadd.s f11, f28, f13, f7, rdn # perform operation
fmadd.s f11, f28, f13, f7, rmm # perform operation
fmadd.s f11, f28, f13, f7, rne # perform operation
fmadd.s f11, f28, f13, f7, rtz # perform operation
fmadd.s f11, f28, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x1844f65c # load x3 with value 0x1844f65c
sw x3, 0(x2) # store 0x1844f65c in memory
flw f29, 0(x2) # load 0x1844f65c from memory into f29
fmadd.s f15, f18, f27, f29, dyn # perform operation
fmadd.s f15, f18, f27, f29, rdn # perform operation
fmadd.s f15, f18, f27, f29, rmm # perform operation
fmadd.s f15, f18, f27, f29, rne # perform operation
fmadd.s f15, f18, f27, f29, rtz # perform operation
fmadd.s f15, f18, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xc6889792 # load x3 with value 0xc6889792
sw x3, 0(x2) # store 0xc6889792 in memory
flw f20, 0(x2) # load 0xc6889792 from memory into f20
fmadd.s f29, f18, f13, f20, dyn # perform operation
fmadd.s f29, f18, f13, f20, rdn # perform operation
fmadd.s f29, f18, f13, f20, rmm # perform operation
fmadd.s f29, f18, f13, f20, rne # perform operation
fmadd.s f29, f18, f13, f20, rtz # perform operation
fmadd.s f29, f18, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f13, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0x72013fc1 # load x3 with value 0x72013fc1
sw x3, 0(x2) # store 0x72013fc1 in memory
flw f11, 0(x2) # load 0x72013fc1 from memory into f11
fmadd.s f9, f7, f3, f11, dyn # perform operation
fmadd.s f9, f7, f3, f11, rdn # perform operation
fmadd.s f9, f7, f3, f11, rmm # perform operation
fmadd.s f9, f7, f3, f11, rne # perform operation
fmadd.s f9, f7, f3, f11, rtz # perform operation
fmadd.s f9, f7, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f3, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x7e73aa2d # load x3 with value 0x7e73aa2d
sw x3, 0(x2) # store 0x7e73aa2d in memory
flw f21, 0(x2) # load 0x7e73aa2d from memory into f21
fmadd.s f24, f15, f29, f21, dyn # perform operation
fmadd.s f24, f15, f29, f21, rdn # perform operation
fmadd.s f24, f15, f29, f21, rmm # perform operation
fmadd.s f24, f15, f29, f21, rne # perform operation
fmadd.s f24, f15, f29, f21, rtz # perform operation
fmadd.s f24, f15, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f29, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0xa2a39766 # load x3 with value 0xa2a39766
sw x3, 0(x2) # store 0xa2a39766 in memory
flw f2, 0(x2) # load 0xa2a39766 from memory into f2
fmadd.s f7, f19, f18, f2, dyn # perform operation
fmadd.s f7, f19, f18, f2, rdn # perform operation
fmadd.s f7, f19, f18, f2, rmm # perform operation
fmadd.s f7, f19, f18, f2, rne # perform operation
fmadd.s f7, f19, f18, f2, rtz # perform operation
fmadd.s f7, f19, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0x6dd5a1fa # load x3 with value 0x6dd5a1fa
sw x3, 0(x2) # store 0x6dd5a1fa in memory
flw f31, 0(x2) # load 0x6dd5a1fa from memory into f31
fmadd.s f14, f2, f25, f31, dyn # perform operation
fmadd.s f14, f2, f25, f31, rdn # perform operation
fmadd.s f14, f2, f25, f31, rmm # perform operation
fmadd.s f14, f2, f25, f31, rne # perform operation
fmadd.s f14, f2, f25, f31, rtz # perform operation
fmadd.s f14, f2, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xd1a94838 # load x3 with value 0xd1a94838
sw x3, 0(x2) # store 0xd1a94838 in memory
flw f10, 0(x2) # load 0xd1a94838 from memory into f10
fmadd.s f16, f25, f18, f10, dyn # perform operation
fmadd.s f16, f25, f18, f10, rdn # perform operation
fmadd.s f16, f25, f18, f10, rmm # perform operation
fmadd.s f16, f25, f18, f10, rne # perform operation
fmadd.s f16, f25, f18, f10, rtz # perform operation
fmadd.s f16, f25, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f25, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f25, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x0d5ada74 # load x3 with value 0x0d5ada74
sw x3, 0(x2) # store 0x0d5ada74 in memory
flw f12, 0(x2) # load 0x0d5ada74 from memory into f12
fmadd.s f14, f8, f18, f12, dyn # perform operation
fmadd.s f14, f8, f18, f12, rdn # perform operation
fmadd.s f14, f8, f18, f12, rmm # perform operation
fmadd.s f14, f8, f18, f12, rne # perform operation
fmadd.s f14, f8, f18, f12, rtz # perform operation
fmadd.s f14, f8, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x2b09454f # load x3 with value 0x2b09454f
sw x3, 0(x2) # store 0x2b09454f in memory
flw f18, 0(x2) # load 0x2b09454f from memory into f18
fmadd.s f12, f26, f19, f18, dyn # perform operation
fmadd.s f12, f26, f19, f18, rdn # perform operation
fmadd.s f12, f26, f19, f18, rmm # perform operation
fmadd.s f12, f26, f19, f18, rne # perform operation
fmadd.s f12, f26, f19, f18, rtz # perform operation
fmadd.s f12, f26, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xfa6dbe43 # load x3 with value 0xfa6dbe43
sw x3, 0(x2) # store 0xfa6dbe43 in memory
flw f20, 0(x2) # load 0xfa6dbe43 from memory into f20
fmadd.s f16, f17, f30, f20, dyn # perform operation
fmadd.s f16, f17, f30, f20, rdn # perform operation
fmadd.s f16, f17, f30, f20, rmm # perform operation
fmadd.s f16, f17, f30, f20, rne # perform operation
fmadd.s f16, f17, f30, f20, rtz # perform operation
fmadd.s f16, f17, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xd5f5f511 # load x3 with value 0xd5f5f511
sw x3, 0(x2) # store 0xd5f5f511 in memory
flw f30, 0(x2) # load 0xd5f5f511 from memory into f30
fmadd.s f28, f29, f16, f30, dyn # perform operation
fmadd.s f28, f29, f16, f30, rdn # perform operation
fmadd.s f28, f29, f16, f30, rmm # perform operation
fmadd.s f28, f29, f16, f30, rne # perform operation
fmadd.s f28, f29, f16, f30, rtz # perform operation
fmadd.s f28, f29, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f16, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x07830707 # load x3 with value 0x07830707
sw x3, 0(x2) # store 0x07830707 in memory
flw f31, 0(x2) # load 0x07830707 from memory into f31
fmadd.s f28, f27, f26, f31, dyn # perform operation
fmadd.s f28, f27, f26, f31, rdn # perform operation
fmadd.s f28, f27, f26, f31, rmm # perform operation
fmadd.s f28, f27, f26, f31, rne # perform operation
fmadd.s f28, f27, f26, f31, rtz # perform operation
fmadd.s f28, f27, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0x585d4104 # load x3 with value 0x585d4104
sw x3, 0(x2) # store 0x585d4104 in memory
flw f17, 0(x2) # load 0x585d4104 from memory into f17
fmadd.s f20, f31, f12, f17, dyn # perform operation
fmadd.s f20, f31, f12, f17, rdn # perform operation
fmadd.s f20, f31, f12, f17, rmm # perform operation
fmadd.s f20, f31, f12, f17, rne # perform operation
fmadd.s f20, f31, f12, f17, rtz # perform operation
fmadd.s f20, f31, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f31, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f31, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f31, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f31, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f31, f12, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
la x2, scratch
li x3, 0x3832d5b0 # load x3 with value 0x3832d5b0
sw x3, 0(x2) # store 0x3832d5b0 in memory
flw f25, 0(x2) # load 0x3832d5b0 from memory into f25
fmadd.s f11, f24, f9, f25, dyn # perform operation
fmadd.s f11, f24, f9, f25, rdn # perform operation
fmadd.s f11, f24, f9, f25, rmm # perform operation
fmadd.s f11, f24, f9, f25, rne # perform operation
fmadd.s f11, f24, f9, f25, rtz # perform operation
fmadd.s f11, f24, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f9, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0x0217690f # load x3 with value 0x0217690f
sw x3, 0(x2) # store 0x0217690f in memory
flw f10, 0(x2) # load 0x0217690f from memory into f10
fmadd.s f11, f8, f18, f10, dyn # perform operation
fmadd.s f11, f8, f18, f10, rdn # perform operation
fmadd.s f11, f8, f18, f10, rmm # perform operation
fmadd.s f11, f8, f18, f10, rne # perform operation
fmadd.s f11, f8, f18, f10, rtz # perform operation
fmadd.s f11, f8, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f18, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x71e85577 # load x3 with value 0x71e85577
sw x3, 0(x2) # store 0x71e85577 in memory
flw f12, 0(x2) # load 0x71e85577 from memory into f12
fmadd.s f27, f25, f16, f12, dyn # perform operation
fmadd.s f27, f25, f16, f12, rdn # perform operation
fmadd.s f27, f25, f16, f12, rmm # perform operation
fmadd.s f27, f25, f16, f12, rne # perform operation
fmadd.s f27, f25, f16, f12, rtz # perform operation
fmadd.s f27, f25, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0xca451afd # load x3 with value 0xca451afd
sw x3, 0(x2) # store 0xca451afd in memory
flw f24, 0(x2) # load 0xca451afd from memory into f24
fmadd.s f6, f12, f29, f24, dyn # perform operation
fmadd.s f6, f12, f29, f24, rdn # perform operation
fmadd.s f6, f12, f29, f24, rmm # perform operation
fmadd.s f6, f12, f29, f24, rne # perform operation
fmadd.s f6, f12, f29, f24, rtz # perform operation
fmadd.s f6, f12, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xe9654c09 # load x3 with value 0xe9654c09
sw x3, 0(x2) # store 0xe9654c09 in memory
flw f16, 0(x2) # load 0xe9654c09 from memory into f16
fmadd.s f21, f8, f17, f16, dyn # perform operation
fmadd.s f21, f8, f17, f16, rdn # perform operation
fmadd.s f21, f8, f17, f16, rmm # perform operation
fmadd.s f21, f8, f17, f16, rne # perform operation
fmadd.s f21, f8, f17, f16, rtz # perform operation
fmadd.s f21, f8, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f17, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xc7419778 # load x3 with value 0xc7419778
sw x3, 0(x2) # store 0xc7419778 in memory
flw f3, 0(x2) # load 0xc7419778 from memory into f3
fmadd.s f27, f16, f25, f3, dyn # perform operation
fmadd.s f27, f16, f25, f3, rdn # perform operation
fmadd.s f27, f16, f25, f3, rmm # perform operation
fmadd.s f27, f16, f25, f3, rne # perform operation
fmadd.s f27, f16, f25, f3, rtz # perform operation
fmadd.s f27, f16, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x118b9af7 # load x3 with value 0x118b9af7
sw x3, 0(x2) # store 0x118b9af7 in memory
flw f9, 0(x2) # load 0x118b9af7 from memory into f9
fmadd.s f29, f3, f24, f9, dyn # perform operation
fmadd.s f29, f3, f24, f9, rdn # perform operation
fmadd.s f29, f3, f24, f9, rmm # perform operation
fmadd.s f29, f3, f24, f9, rne # perform operation
fmadd.s f29, f3, f24, f9, rtz # perform operation
fmadd.s f29, f3, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x29c806f2 # load x3 with value 0x29c806f2
sw x3, 0(x2) # store 0x29c806f2 in memory
flw f18, 0(x2) # load 0x29c806f2 from memory into f18
fmadd.s f30, f7, f28, f18, dyn # perform operation
fmadd.s f30, f7, f28, f18, rdn # perform operation
fmadd.s f30, f7, f28, f18, rmm # perform operation
fmadd.s f30, f7, f28, f18, rne # perform operation
fmadd.s f30, f7, f28, f18, rtz # perform operation
fmadd.s f30, f7, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f7, f28, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x296cd586 # load x3 with value 0x296cd586
sw x3, 0(x2) # store 0x296cd586 in memory
flw f8, 0(x2) # load 0x296cd586 from memory into f8
fmadd.s f30, f15, f23, f8, dyn # perform operation
fmadd.s f30, f15, f23, f8, rdn # perform operation
fmadd.s f30, f15, f23, f8, rmm # perform operation
fmadd.s f30, f15, f23, f8, rne # perform operation
fmadd.s f30, f15, f23, f8, rtz # perform operation
fmadd.s f30, f15, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f15, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f15, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x624939ac # load x3 with value 0x624939ac
sw x3, 0(x2) # store 0x624939ac in memory
flw f28, 0(x2) # load 0x624939ac from memory into f28
fmadd.s f3, f24, f17, f28, dyn # perform operation
fmadd.s f3, f24, f17, f28, rdn # perform operation
fmadd.s f3, f24, f17, f28, rmm # perform operation
fmadd.s f3, f24, f17, f28, rne # perform operation
fmadd.s f3, f24, f17, f28, rtz # perform operation
fmadd.s f3, f24, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f24, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f24, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f24, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f24, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f24, f17, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x09138ccb # load x3 with value 0x09138ccb
sw x3, 0(x2) # store 0x09138ccb in memory
flw f9, 0(x2) # load 0x09138ccb from memory into f9
fmadd.s f23, f17, f18, f9, dyn # perform operation
fmadd.s f23, f17, f18, f9, rdn # perform operation
fmadd.s f23, f17, f18, f9, rmm # perform operation
fmadd.s f23, f17, f18, f9, rne # perform operation
fmadd.s f23, f17, f18, f9, rtz # perform operation
fmadd.s f23, f17, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x7b6eecad # load x3 with value 0x7b6eecad
sw x3, 0(x2) # store 0x7b6eecad in memory
flw f24, 0(x2) # load 0x7b6eecad from memory into f24
fmadd.s f12, f18, f15, f24, dyn # perform operation
fmadd.s f12, f18, f15, f24, rdn # perform operation
fmadd.s f12, f18, f15, f24, rmm # perform operation
fmadd.s f12, f18, f15, f24, rne # perform operation
fmadd.s f12, f18, f15, f24, rtz # perform operation
fmadd.s f12, f18, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f15, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x70040c23 # load x3 with value 0x70040c23
sw x3, 0(x2) # store 0x70040c23 in memory
flw f17, 0(x2) # load 0x70040c23 from memory into f17
fmadd.s f27, f9, f2, f17, dyn # perform operation
fmadd.s f27, f9, f2, f17, rdn # perform operation
fmadd.s f27, f9, f2, f17, rmm # perform operation
fmadd.s f27, f9, f2, f17, rne # perform operation
fmadd.s f27, f9, f2, f17, rtz # perform operation
fmadd.s f27, f9, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x2fbdbae3 # load x3 with value 0x2fbdbae3
sw x3, 0(x2) # store 0x2fbdbae3 in memory
flw f22, 0(x2) # load 0x2fbdbae3 from memory into f22
fmadd.s f1, f18, f19, f22, dyn # perform operation
fmadd.s f1, f18, f19, f22, rdn # perform operation
fmadd.s f1, f18, f19, f22, rmm # perform operation
fmadd.s f1, f18, f19, f22, rne # perform operation
fmadd.s f1, f18, f19, f22, rtz # perform operation
fmadd.s f1, f18, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xda954d4a # load x3 with value 0xda954d4a
sw x3, 0(x2) # store 0xda954d4a in memory
flw f2, 0(x2) # load 0xda954d4a from memory into f2
fmadd.s f3, f11, f23, f2, dyn # perform operation
fmadd.s f3, f11, f23, f2, rdn # perform operation
fmadd.s f3, f11, f23, f2, rmm # perform operation
fmadd.s f3, f11, f23, f2, rne # perform operation
fmadd.s f3, f11, f23, f2, rtz # perform operation
fmadd.s f3, f11, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f11, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f11, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
la x2, scratch
li x3, 0x8f442ebc # load x3 with value 0x8f442ebc
sw x3, 0(x2) # store 0x8f442ebc in memory
flw f7, 0(x2) # load 0x8f442ebc from memory into f7
fmadd.s f17, f27, f12, f7, dyn # perform operation
fmadd.s f17, f27, f12, f7, rdn # perform operation
fmadd.s f17, f27, f12, f7, rmm # perform operation
fmadd.s f17, f27, f12, f7, rne # perform operation
fmadd.s f17, f27, f12, f7, rtz # perform operation
fmadd.s f17, f27, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x6d0f0067 # load x3 with value 0x6d0f0067
sw x3, 0(x2) # store 0x6d0f0067 in memory
flw f31, 0(x2) # load 0x6d0f0067 from memory into f31
fmadd.s f6, f8, f28, f31, dyn # perform operation
fmadd.s f6, f8, f28, f31, rdn # perform operation
fmadd.s f6, f8, f28, f31, rmm # perform operation
fmadd.s f6, f8, f28, f31, rne # perform operation
fmadd.s f6, f8, f28, f31, rtz # perform operation
fmadd.s f6, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f28, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xb9983aeb # load x3 with value 0xb9983aeb
sw x3, 0(x2) # store 0xb9983aeb in memory
flw f17, 0(x2) # load 0xb9983aeb from memory into f17
fmadd.s f27, f28, f19, f17, dyn # perform operation
fmadd.s f27, f28, f19, f17, rdn # perform operation
fmadd.s f27, f28, f19, f17, rmm # perform operation
fmadd.s f27, f28, f19, f17, rne # perform operation
fmadd.s f27, f28, f19, f17, rtz # perform operation
fmadd.s f27, f28, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x69c298bb # load x3 with value 0x69c298bb
sw x3, 0(x2) # store 0x69c298bb in memory
flw f8, 0(x2) # load 0x69c298bb from memory into f8
fmadd.s f5, f18, f2, f8, dyn # perform operation
fmadd.s f5, f18, f2, f8, rdn # perform operation
fmadd.s f5, f18, f2, f8, rmm # perform operation
fmadd.s f5, f18, f2, f8, rne # perform operation
fmadd.s f5, f18, f2, f8, rtz # perform operation
fmadd.s f5, f18, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f2, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0xb6c88957 # load x3 with value 0xb6c88957
sw x3, 0(x2) # store 0xb6c88957 in memory
flw f20, 0(x2) # load 0xb6c88957 from memory into f20
fmadd.s f14, f22, f10, f20, dyn # perform operation
fmadd.s f14, f22, f10, f20, rdn # perform operation
fmadd.s f14, f22, f10, f20, rmm # perform operation
fmadd.s f14, f22, f10, f20, rne # perform operation
fmadd.s f14, f22, f10, f20, rtz # perform operation
fmadd.s f14, f22, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f22, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f22, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xfab1afdf # load x3 with value 0xfab1afdf
sw x3, 0(x2) # store 0xfab1afdf in memory
flw f30, 0(x2) # load 0xfab1afdf from memory into f30
fmadd.s f7, f23, f20, f30, dyn # perform operation
fmadd.s f7, f23, f20, f30, rdn # perform operation
fmadd.s f7, f23, f20, f30, rmm # perform operation
fmadd.s f7, f23, f20, f30, rne # perform operation
fmadd.s f7, f23, f20, f30, rtz # perform operation
fmadd.s f7, f23, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f20, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0xc9029129 # load x3 with value 0xc9029129
sw x3, 0(x2) # store 0xc9029129 in memory
flw f21, 0(x2) # load 0xc9029129 from memory into f21
fmadd.s f31, f17, f25, f21, dyn # perform operation
fmadd.s f31, f17, f25, f21, rdn # perform operation
fmadd.s f31, f17, f25, f21, rmm # perform operation
fmadd.s f31, f17, f25, f21, rne # perform operation
fmadd.s f31, f17, f25, f21, rtz # perform operation
fmadd.s f31, f17, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f17, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f17, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f17, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f17, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f17, f25, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xd6c4870b # load x3 with value 0xd6c4870b
sw x3, 0(x2) # store 0xd6c4870b in memory
flw f27, 0(x2) # load 0xd6c4870b from memory into f27
fmadd.s f21, f2, f16, f27, dyn # perform operation
fmadd.s f21, f2, f16, f27, rdn # perform operation
fmadd.s f21, f2, f16, f27, rmm # perform operation
fmadd.s f21, f2, f16, f27, rne # perform operation
fmadd.s f21, f2, f16, f27, rtz # perform operation
fmadd.s f21, f2, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x5966242a # load x3 with value 0x5966242a
sw x3, 0(x2) # store 0x5966242a in memory
flw f6, 0(x2) # load 0x5966242a from memory into f6
fmadd.s f16, f30, f22, f6, dyn # perform operation
fmadd.s f16, f30, f22, f6, rdn # perform operation
fmadd.s f16, f30, f22, f6, rmm # perform operation
fmadd.s f16, f30, f22, f6, rne # perform operation
fmadd.s f16, f30, f22, f6, rtz # perform operation
fmadd.s f16, f30, f22, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f22, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f22, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x5ab498d1 # load x3 with value 0x5ab498d1
sw x3, 0(x2) # store 0x5ab498d1 in memory
flw f20, 0(x2) # load 0x5ab498d1 from memory into f20
fmadd.s f24, f27, f26, f20, dyn # perform operation
fmadd.s f24, f27, f26, f20, rdn # perform operation
fmadd.s f24, f27, f26, f20, rmm # perform operation
fmadd.s f24, f27, f26, f20, rne # perform operation
fmadd.s f24, f27, f26, f20, rtz # perform operation
fmadd.s f24, f27, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xc2404a33 # load x3 with value 0xc2404a33
sw x3, 0(x2) # store 0xc2404a33 in memory
flw f7, 0(x2) # load 0xc2404a33 from memory into f7
fmadd.s f17, f23, f15, f7, dyn # perform operation
fmadd.s f17, f23, f15, f7, rdn # perform operation
fmadd.s f17, f23, f15, f7, rmm # perform operation
fmadd.s f17, f23, f15, f7, rne # perform operation
fmadd.s f17, f23, f15, f7, rtz # perform operation
fmadd.s f17, f23, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f15, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x830047a1 # load x3 with value 0x830047a1
sw x3, 0(x2) # store 0x830047a1 in memory
flw f30, 0(x2) # load 0x830047a1 from memory into f30
fmadd.s f14, f21, f3, f30, dyn # perform operation
fmadd.s f14, f21, f3, f30, rdn # perform operation
fmadd.s f14, f21, f3, f30, rmm # perform operation
fmadd.s f14, f21, f3, f30, rne # perform operation
fmadd.s f14, f21, f3, f30, rtz # perform operation
fmadd.s f14, f21, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f21, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f21, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xbc8e8e15 # load x3 with value 0xbc8e8e15
sw x3, 0(x2) # store 0xbc8e8e15 in memory
flw f19, 0(x2) # load 0xbc8e8e15 from memory into f19
fmadd.s f22, f18, f26, f19, dyn # perform operation
fmadd.s f22, f18, f26, f19, rdn # perform operation
fmadd.s f22, f18, f26, f19, rmm # perform operation
fmadd.s f22, f18, f26, f19, rne # perform operation
fmadd.s f22, f18, f26, f19, rtz # perform operation
fmadd.s f22, f18, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f26, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x8f269b85 # load x3 with value 0x8f269b85
sw x3, 0(x2) # store 0x8f269b85 in memory
flw f12, 0(x2) # load 0x8f269b85 from memory into f12
fmadd.s f14, f17, f19, f12, dyn # perform operation
fmadd.s f14, f17, f19, f12, rdn # perform operation
fmadd.s f14, f17, f19, f12, rmm # perform operation
fmadd.s f14, f17, f19, f12, rne # perform operation
fmadd.s f14, f17, f19, f12, rtz # perform operation
fmadd.s f14, f17, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f19, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0xcc7f96cd # load x3 with value 0xcc7f96cd
sw x3, 0(x2) # store 0xcc7f96cd in memory
flw f26, 0(x2) # load 0xcc7f96cd from memory into f26
fmadd.s f14, f16, f8, f26, dyn # perform operation
fmadd.s f14, f16, f8, f26, rdn # perform operation
fmadd.s f14, f16, f8, f26, rmm # perform operation
fmadd.s f14, f16, f8, f26, rne # perform operation
fmadd.s f14, f16, f8, f26, rtz # perform operation
fmadd.s f14, f16, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f16, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f16, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x7c8feb4f # load x3 with value 0x7c8feb4f
sw x3, 0(x2) # store 0x7c8feb4f in memory
flw f20, 0(x2) # load 0x7c8feb4f from memory into f20
fmadd.s f21, f7, f11, f20, dyn # perform operation
fmadd.s f21, f7, f11, f20, rdn # perform operation
fmadd.s f21, f7, f11, f20, rmm # perform operation
fmadd.s f21, f7, f11, f20, rne # perform operation
fmadd.s f21, f7, f11, f20, rtz # perform operation
fmadd.s f21, f7, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f11, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x4fa22442 # load x3 with value 0x4fa22442
sw x3, 0(x2) # store 0x4fa22442 in memory
flw f28, 0(x2) # load 0x4fa22442 from memory into f28
fmadd.s f14, f13, f1, f28, dyn # perform operation
fmadd.s f14, f13, f1, f28, rdn # perform operation
fmadd.s f14, f13, f1, f28, rmm # perform operation
fmadd.s f14, f13, f1, f28, rne # perform operation
fmadd.s f14, f13, f1, f28, rtz # perform operation
fmadd.s f14, f13, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xc4f23fb0 # load x3 with value 0xc4f23fb0
sw x3, 0(x2) # store 0xc4f23fb0 in memory
flw f2, 0(x2) # load 0xc4f23fb0 from memory into f2
fmadd.s f13, f9, f29, f2, dyn # perform operation
fmadd.s f13, f9, f29, f2, rdn # perform operation
fmadd.s f13, f9, f29, f2, rmm # perform operation
fmadd.s f13, f9, f29, f2, rne # perform operation
fmadd.s f13, f9, f29, f2, rtz # perform operation
fmadd.s f13, f9, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f29, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x91fe1258 # load x3 with value 0x91fe1258
sw x3, 0(x2) # store 0x91fe1258 in memory
flw f3, 0(x2) # load 0x91fe1258 from memory into f3
fmadd.s f28, f2, f17, f3, dyn # perform operation
fmadd.s f28, f2, f17, f3, rdn # perform operation
fmadd.s f28, f2, f17, f3, rmm # perform operation
fmadd.s f28, f2, f17, f3, rne # perform operation
fmadd.s f28, f2, f17, f3, rtz # perform operation
fmadd.s f28, f2, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f17, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0x53fce5ed # load x3 with value 0x53fce5ed
sw x3, 0(x2) # store 0x53fce5ed in memory
flw f11, 0(x2) # load 0x53fce5ed from memory into f11
fmadd.s f17, f3, f5, f11, dyn # perform operation
fmadd.s f17, f3, f5, f11, rdn # perform operation
fmadd.s f17, f3, f5, f11, rmm # perform operation
fmadd.s f17, f3, f5, f11, rne # perform operation
fmadd.s f17, f3, f5, f11, rtz # perform operation
fmadd.s f17, f3, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x5c3b52a3 # load x3 with value 0x5c3b52a3
sw x3, 0(x2) # store 0x5c3b52a3 in memory
flw f31, 0(x2) # load 0x5c3b52a3 from memory into f31
fmadd.s f3, f12, f22, f31, dyn # perform operation
fmadd.s f3, f12, f22, f31, rdn # perform operation
fmadd.s f3, f12, f22, f31, rmm # perform operation
fmadd.s f3, f12, f22, f31, rne # perform operation
fmadd.s f3, f12, f22, f31, rtz # perform operation
fmadd.s f3, f12, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f22, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x4b586469 # load x3 with value 0x4b586469
sw x3, 0(x2) # store 0x4b586469 in memory
flw f11, 0(x2) # load 0x4b586469 from memory into f11
fmadd.s f23, f5, f6, f11, dyn # perform operation
fmadd.s f23, f5, f6, f11, rdn # perform operation
fmadd.s f23, f5, f6, f11, rmm # perform operation
fmadd.s f23, f5, f6, f11, rne # perform operation
fmadd.s f23, f5, f6, f11, rtz # perform operation
fmadd.s f23, f5, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f6, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x185aa466 # load x3 with value 0x185aa466
sw x3, 0(x2) # store 0x185aa466 in memory
flw f18, 0(x2) # load 0x185aa466 from memory into f18
fmadd.s f1, f3, f31, f18, dyn # perform operation
fmadd.s f1, f3, f31, f18, rdn # perform operation
fmadd.s f1, f3, f31, f18, rmm # perform operation
fmadd.s f1, f3, f31, f18, rne # perform operation
fmadd.s f1, f3, f31, f18, rtz # perform operation
fmadd.s f1, f3, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x43be4c8d # load x3 with value 0x43be4c8d
sw x3, 0(x2) # store 0x43be4c8d in memory
flw f24, 0(x2) # load 0x43be4c8d from memory into f24
fmadd.s f2, f13, f30, f24, dyn # perform operation
fmadd.s f2, f13, f30, f24, rdn # perform operation
fmadd.s f2, f13, f30, f24, rmm # perform operation
fmadd.s f2, f13, f30, f24, rne # perform operation
fmadd.s f2, f13, f30, f24, rtz # perform operation
fmadd.s f2, f13, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0xa8960104 # load x3 with value 0xa8960104
sw x3, 0(x2) # store 0xa8960104 in memory
flw f3, 0(x2) # load 0xa8960104 from memory into f3
fmadd.s f6, f25, f28, f3, dyn # perform operation
fmadd.s f6, f25, f28, f3, rdn # perform operation
fmadd.s f6, f25, f28, f3, rmm # perform operation
fmadd.s f6, f25, f28, f3, rne # perform operation
fmadd.s f6, f25, f28, f3, rtz # perform operation
fmadd.s f6, f25, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f25, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f25, f28, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0x1c8ae054 # load x3 with value 0x1c8ae054
sw x3, 0(x2) # store 0x1c8ae054 in memory
flw f24, 0(x2) # load 0x1c8ae054 from memory into f24
fmadd.s f9, f8, f10, f24, dyn # perform operation
fmadd.s f9, f8, f10, f24, rdn # perform operation
fmadd.s f9, f8, f10, f24, rmm # perform operation
fmadd.s f9, f8, f10, f24, rne # perform operation
fmadd.s f9, f8, f10, f24, rtz # perform operation
fmadd.s f9, f8, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x9e2c5362 # load x3 with value 0x9e2c5362
sw x3, 0(x2) # store 0x9e2c5362 in memory
flw f9, 0(x2) # load 0x9e2c5362 from memory into f9
fmadd.s f18, f25, f2, f9, dyn # perform operation
fmadd.s f18, f25, f2, f9, rdn # perform operation
fmadd.s f18, f25, f2, f9, rmm # perform operation
fmadd.s f18, f25, f2, f9, rne # perform operation
fmadd.s f18, f25, f2, f9, rtz # perform operation
fmadd.s f18, f25, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x769c58e6 # load x3 with value 0x769c58e6
sw x3, 0(x2) # store 0x769c58e6 in memory
flw f16, 0(x2) # load 0x769c58e6 from memory into f16
fmadd.s f23, f12, f30, f16, dyn # perform operation
fmadd.s f23, f12, f30, f16, rdn # perform operation
fmadd.s f23, f12, f30, f16, rmm # perform operation
fmadd.s f23, f12, f30, f16, rne # perform operation
fmadd.s f23, f12, f30, f16, rtz # perform operation
fmadd.s f23, f12, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f30, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0x04d74c5f # load x3 with value 0x04d74c5f
sw x3, 0(x2) # store 0x04d74c5f in memory
flw f9, 0(x2) # load 0x04d74c5f from memory into f9
fmadd.s f3, f21, f31, f9, dyn # perform operation
fmadd.s f3, f21, f31, f9, rdn # perform operation
fmadd.s f3, f21, f31, f9, rmm # perform operation
fmadd.s f3, f21, f31, f9, rne # perform operation
fmadd.s f3, f21, f31, f9, rtz # perform operation
fmadd.s f3, f21, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f31, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0x6b83b00a # load x3 with value 0x6b83b00a
sw x3, 0(x2) # store 0x6b83b00a in memory
flw f19, 0(x2) # load 0x6b83b00a from memory into f19
fmadd.s f30, f26, f6, f19, dyn # perform operation
fmadd.s f30, f26, f6, f19, rdn # perform operation
fmadd.s f30, f26, f6, f19, rmm # perform operation
fmadd.s f30, f26, f6, f19, rne # perform operation
fmadd.s f30, f26, f6, f19, rtz # perform operation
fmadd.s f30, f26, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0xb2279589 # load x3 with value 0xb2279589
sw x3, 0(x2) # store 0xb2279589 in memory
flw f10, 0(x2) # load 0xb2279589 from memory into f10
fmadd.s f24, f22, f25, f10, dyn # perform operation
fmadd.s f24, f22, f25, f10, rdn # perform operation
fmadd.s f24, f22, f25, f10, rmm # perform operation
fmadd.s f24, f22, f25, f10, rne # perform operation
fmadd.s f24, f22, f25, f10, rtz # perform operation
fmadd.s f24, f22, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xf8172b0f # load x3 with value 0xf8172b0f
sw x3, 0(x2) # store 0xf8172b0f in memory
flw f17, 0(x2) # load 0xf8172b0f from memory into f17
fmadd.s f18, f1, f19, f17, dyn # perform operation
fmadd.s f18, f1, f19, f17, rdn # perform operation
fmadd.s f18, f1, f19, f17, rmm # perform operation
fmadd.s f18, f1, f19, f17, rne # perform operation
fmadd.s f18, f1, f19, f17, rtz # perform operation
fmadd.s f18, f1, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f19, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x69528b7c # load x3 with value 0x69528b7c
sw x3, 0(x2) # store 0x69528b7c in memory
flw f9, 0(x2) # load 0x69528b7c from memory into f9
fmadd.s f3, f26, f24, f9, dyn # perform operation
fmadd.s f3, f26, f24, f9, rdn # perform operation
fmadd.s f3, f26, f24, f9, rmm # perform operation
fmadd.s f3, f26, f24, f9, rne # perform operation
fmadd.s f3, f26, f24, f9, rtz # perform operation
fmadd.s f3, f26, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f24, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x11f1991b # load x3 with value 0x11f1991b
sw x3, 0(x2) # store 0x11f1991b in memory
flw f30, 0(x2) # load 0x11f1991b from memory into f30
fmadd.s f7, f20, f14, f30, dyn # perform operation
fmadd.s f7, f20, f14, f30, rdn # perform operation
fmadd.s f7, f20, f14, f30, rmm # perform operation
fmadd.s f7, f20, f14, f30, rne # perform operation
fmadd.s f7, f20, f14, f30, rtz # perform operation
fmadd.s f7, f20, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x6f8d7c4f # load x3 with value 0x6f8d7c4f
sw x3, 0(x2) # store 0x6f8d7c4f in memory
flw f5, 0(x2) # load 0x6f8d7c4f from memory into f5
fmadd.s f15, f31, f20, f5, dyn # perform operation
fmadd.s f15, f31, f20, f5, rdn # perform operation
fmadd.s f15, f31, f20, f5, rmm # perform operation
fmadd.s f15, f31, f20, f5, rne # perform operation
fmadd.s f15, f31, f20, f5, rtz # perform operation
fmadd.s f15, f31, f20, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f31, f20, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f31, f20, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x1921ba10 # load x3 with value 0x1921ba10
sw x3, 0(x2) # store 0x1921ba10 in memory
flw f19, 0(x2) # load 0x1921ba10 from memory into f19
fmadd.s f26, f5, f1, f19, dyn # perform operation
fmadd.s f26, f5, f1, f19, rdn # perform operation
fmadd.s f26, f5, f1, f19, rmm # perform operation
fmadd.s f26, f5, f1, f19, rne # perform operation
fmadd.s f26, f5, f1, f19, rtz # perform operation
fmadd.s f26, f5, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f1, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x68043781 # load x3 with value 0x68043781
sw x3, 0(x2) # store 0x68043781 in memory
flw f15, 0(x2) # load 0x68043781 from memory into f15
fmadd.s f7, f22, f31, f15, dyn # perform operation
fmadd.s f7, f22, f31, f15, rdn # perform operation
fmadd.s f7, f22, f31, f15, rmm # perform operation
fmadd.s f7, f22, f31, f15, rne # perform operation
fmadd.s f7, f22, f31, f15, rtz # perform operation
fmadd.s f7, f22, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f31, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xbe0fe89c # load x3 with value 0xbe0fe89c
sw x3, 0(x2) # store 0xbe0fe89c in memory
flw f27, 0(x2) # load 0xbe0fe89c from memory into f27
fmadd.s f9, f5, f31, f27, dyn # perform operation
fmadd.s f9, f5, f31, f27, rdn # perform operation
fmadd.s f9, f5, f31, f27, rmm # perform operation
fmadd.s f9, f5, f31, f27, rne # perform operation
fmadd.s f9, f5, f31, f27, rtz # perform operation
fmadd.s f9, f5, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f31, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0x799258f0 # load x3 with value 0x799258f0
sw x3, 0(x2) # store 0x799258f0 in memory
flw f2, 0(x2) # load 0x799258f0 from memory into f2
fmadd.s f31, f9, f16, f2, dyn # perform operation
fmadd.s f31, f9, f16, f2, rdn # perform operation
fmadd.s f31, f9, f16, f2, rmm # perform operation
fmadd.s f31, f9, f16, f2, rne # perform operation
fmadd.s f31, f9, f16, f2, rtz # perform operation
fmadd.s f31, f9, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f16, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x0c62a078 # load x3 with value 0x0c62a078
sw x3, 0(x2) # store 0x0c62a078 in memory
flw f24, 0(x2) # load 0x0c62a078 from memory into f24
fmadd.s f7, f15, f10, f24, dyn # perform operation
fmadd.s f7, f15, f10, f24, rdn # perform operation
fmadd.s f7, f15, f10, f24, rmm # perform operation
fmadd.s f7, f15, f10, f24, rne # perform operation
fmadd.s f7, f15, f10, f24, rtz # perform operation
fmadd.s f7, f15, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f10, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0xa27a7347 # load x3 with value 0xa27a7347
sw x3, 0(x2) # store 0xa27a7347 in memory
flw f5, 0(x2) # load 0xa27a7347 from memory into f5
fmadd.s f20, f30, f13, f5, dyn # perform operation
fmadd.s f20, f30, f13, f5, rdn # perform operation
fmadd.s f20, f30, f13, f5, rmm # perform operation
fmadd.s f20, f30, f13, f5, rne # perform operation
fmadd.s f20, f30, f13, f5, rtz # perform operation
fmadd.s f20, f30, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0xee3c34ab # load x3 with value 0xee3c34ab
sw x3, 0(x2) # store 0xee3c34ab in memory
flw f14, 0(x2) # load 0xee3c34ab from memory into f14
fmadd.s f11, f23, f21, f14, dyn # perform operation
fmadd.s f11, f23, f21, f14, rdn # perform operation
fmadd.s f11, f23, f21, f14, rmm # perform operation
fmadd.s f11, f23, f21, f14, rne # perform operation
fmadd.s f11, f23, f21, f14, rtz # perform operation
fmadd.s f11, f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f21, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x3c93a561 # load x3 with value 0x3c93a561
sw x3, 0(x2) # store 0x3c93a561 in memory
flw f25, 0(x2) # load 0x3c93a561 from memory into f25
fmadd.s f30, f23, f15, f25, dyn # perform operation
fmadd.s f30, f23, f15, f25, rdn # perform operation
fmadd.s f30, f23, f15, f25, rmm # perform operation
fmadd.s f30, f23, f15, f25, rne # perform operation
fmadd.s f30, f23, f15, f25, rtz # perform operation
fmadd.s f30, f23, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f15, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x954dc490 # load x3 with value 0x954dc490
sw x3, 0(x2) # store 0x954dc490 in memory
flw f26, 0(x2) # load 0x954dc490 from memory into f26
fmadd.s f17, f25, f31, f26, dyn # perform operation
fmadd.s f17, f25, f31, f26, rdn # perform operation
fmadd.s f17, f25, f31, f26, rmm # perform operation
fmadd.s f17, f25, f31, f26, rne # perform operation
fmadd.s f17, f25, f31, f26, rtz # perform operation
fmadd.s f17, f25, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
la x2, scratch
li x3, 0x9d687666 # load x3 with value 0x9d687666
sw x3, 0(x2) # store 0x9d687666 in memory
flw f23, 0(x2) # load 0x9d687666 from memory into f23
fmadd.s f27, f16, f22, f23, dyn # perform operation
fmadd.s f27, f16, f22, f23, rdn # perform operation
fmadd.s f27, f16, f22, f23, rmm # perform operation
fmadd.s f27, f16, f22, f23, rne # perform operation
fmadd.s f27, f16, f22, f23, rtz # perform operation
fmadd.s f27, f16, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x5ce0d49c # load x3 with value 0x5ce0d49c
sw x3, 0(x2) # store 0x5ce0d49c in memory
flw f27, 0(x2) # load 0x5ce0d49c from memory into f27
fmadd.s f7, f29, f12, f27, dyn # perform operation
fmadd.s f7, f29, f12, f27, rdn # perform operation
fmadd.s f7, f29, f12, f27, rmm # perform operation
fmadd.s f7, f29, f12, f27, rne # perform operation
fmadd.s f7, f29, f12, f27, rtz # perform operation
fmadd.s f7, f29, f12, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f29, f12, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f29, f12, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0xb9651e17 # load x3 with value 0xb9651e17
sw x3, 0(x2) # store 0xb9651e17 in memory
flw f5, 0(x2) # load 0xb9651e17 from memory into f5
fmadd.s f16, f23, f30, f5, dyn # perform operation
fmadd.s f16, f23, f30, f5, rdn # perform operation
fmadd.s f16, f23, f30, f5, rmm # perform operation
fmadd.s f16, f23, f30, f5, rne # perform operation
fmadd.s f16, f23, f30, f5, rtz # perform operation
fmadd.s f16, f23, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xf5a1208b # load x3 with value 0xf5a1208b
sw x3, 0(x2) # store 0xf5a1208b in memory
flw f19, 0(x2) # load 0xf5a1208b from memory into f19
fmadd.s f23, f3, f6, f19, dyn # perform operation
fmadd.s f23, f3, f6, f19, rdn # perform operation
fmadd.s f23, f3, f6, f19, rmm # perform operation
fmadd.s f23, f3, f6, f19, rne # perform operation
fmadd.s f23, f3, f6, f19, rtz # perform operation
fmadd.s f23, f3, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xd46a2bb6 # load x3 with value 0xd46a2bb6
sw x3, 0(x2) # store 0xd46a2bb6 in memory
flw f28, 0(x2) # load 0xd46a2bb6 from memory into f28
fmadd.s f23, f31, f10, f28, dyn # perform operation
fmadd.s f23, f31, f10, f28, rdn # perform operation
fmadd.s f23, f31, f10, f28, rmm # perform operation
fmadd.s f23, f31, f10, f28, rne # perform operation
fmadd.s f23, f31, f10, f28, rtz # perform operation
fmadd.s f23, f31, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0x0c0aed28 # load x3 with value 0x0c0aed28
sw x3, 0(x2) # store 0x0c0aed28 in memory
flw f20, 0(x2) # load 0x0c0aed28 from memory into f20
fmadd.s f30, f8, f5, f20, dyn # perform operation
fmadd.s f30, f8, f5, f20, rdn # perform operation
fmadd.s f30, f8, f5, f20, rmm # perform operation
fmadd.s f30, f8, f5, f20, rne # perform operation
fmadd.s f30, f8, f5, f20, rtz # perform operation
fmadd.s f30, f8, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f5, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
la x2, scratch
li x3, 0xfbe7a78b # load x3 with value 0xfbe7a78b
sw x3, 0(x2) # store 0xfbe7a78b in memory
flw f21, 0(x2) # load 0xfbe7a78b from memory into f21
fmadd.s f18, f22, f13, f21, dyn # perform operation
fmadd.s f18, f22, f13, f21, rdn # perform operation
fmadd.s f18, f22, f13, f21, rmm # perform operation
fmadd.s f18, f22, f13, f21, rne # perform operation
fmadd.s f18, f22, f13, f21, rtz # perform operation
fmadd.s f18, f22, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f22, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f22, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0xf1501579 # load x3 with value 0xf1501579
sw x3, 0(x2) # store 0xf1501579 in memory
flw f16, 0(x2) # load 0xf1501579 from memory into f16
fmadd.s f20, f25, f11, f16, dyn # perform operation
fmadd.s f20, f25, f11, f16, rdn # perform operation
fmadd.s f20, f25, f11, f16, rmm # perform operation
fmadd.s f20, f25, f11, f16, rne # perform operation
fmadd.s f20, f25, f11, f16, rtz # perform operation
fmadd.s f20, f25, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x9fa44ae9 # load x3 with value 0x9fa44ae9
sw x3, 0(x2) # store 0x9fa44ae9 in memory
flw f20, 0(x2) # load 0x9fa44ae9 from memory into f20
fmadd.s f17, f6, f26, f20, dyn # perform operation
fmadd.s f17, f6, f26, f20, rdn # perform operation
fmadd.s f17, f6, f26, f20, rmm # perform operation
fmadd.s f17, f6, f26, f20, rne # perform operation
fmadd.s f17, f6, f26, f20, rtz # perform operation
fmadd.s f17, f6, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f26, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x0c08a961 # load x3 with value 0x0c08a961
sw x3, 0(x2) # store 0x0c08a961 in memory
flw f28, 0(x2) # load 0x0c08a961 from memory into f28
fmadd.s f11, f6, f1, f28, dyn # perform operation
fmadd.s f11, f6, f1, f28, rdn # perform operation
fmadd.s f11, f6, f1, f28, rmm # perform operation
fmadd.s f11, f6, f1, f28, rne # perform operation
fmadd.s f11, f6, f1, f28, rtz # perform operation
fmadd.s f11, f6, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f6, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f6, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xac7463ed # load x3 with value 0xac7463ed
sw x3, 0(x2) # store 0xac7463ed in memory
flw f8, 0(x2) # load 0xac7463ed from memory into f8
fmadd.s f7, f31, f29, f8, dyn # perform operation
fmadd.s f7, f31, f29, f8, rdn # perform operation
fmadd.s f7, f31, f29, f8, rmm # perform operation
fmadd.s f7, f31, f29, f8, rne # perform operation
fmadd.s f7, f31, f29, f8, rtz # perform operation
fmadd.s f7, f31, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f31, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f31, f29, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0xc7e1bc72 # load x3 with value 0xc7e1bc72
sw x3, 0(x2) # store 0xc7e1bc72 in memory
flw f12, 0(x2) # load 0xc7e1bc72 from memory into f12
fmadd.s f19, f6, f16, f12, dyn # perform operation
fmadd.s f19, f6, f16, f12, rdn # perform operation
fmadd.s f19, f6, f16, f12, rmm # perform operation
fmadd.s f19, f6, f16, f12, rne # perform operation
fmadd.s f19, f6, f16, f12, rtz # perform operation
fmadd.s f19, f6, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f6, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f6, f16, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0xd243fc67 # load x3 with value 0xd243fc67
sw x3, 0(x2) # store 0xd243fc67 in memory
flw f12, 0(x2) # load 0xd243fc67 from memory into f12
fmadd.s f30, f27, f5, f12, dyn # perform operation
fmadd.s f30, f27, f5, f12, rdn # perform operation
fmadd.s f30, f27, f5, f12, rmm # perform operation
fmadd.s f30, f27, f5, f12, rne # perform operation
fmadd.s f30, f27, f5, f12, rtz # perform operation
fmadd.s f30, f27, f5, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f5, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f5, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xa298f935 # load x3 with value 0xa298f935
sw x3, 0(x2) # store 0xa298f935 in memory
flw f9, 0(x2) # load 0xa298f935 from memory into f9
fmadd.s f20, f2, f14, f9, dyn # perform operation
fmadd.s f20, f2, f14, f9, rdn # perform operation
fmadd.s f20, f2, f14, f9, rmm # perform operation
fmadd.s f20, f2, f14, f9, rne # perform operation
fmadd.s f20, f2, f14, f9, rtz # perform operation
fmadd.s f20, f2, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f2, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f2, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x20bcb1f1 # load x3 with value 0x20bcb1f1
sw x3, 0(x2) # store 0x20bcb1f1 in memory
flw f28, 0(x2) # load 0x20bcb1f1 from memory into f28
fmadd.s f25, f2, f14, f28, dyn # perform operation
fmadd.s f25, f2, f14, f28, rdn # perform operation
fmadd.s f25, f2, f14, f28, rmm # perform operation
fmadd.s f25, f2, f14, f28, rne # perform operation
fmadd.s f25, f2, f14, f28, rtz # perform operation
fmadd.s f25, f2, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0x249c9129 # load x3 with value 0x249c9129
sw x3, 0(x2) # store 0x249c9129 in memory
flw f26, 0(x2) # load 0x249c9129 from memory into f26
fmadd.s f28, f2, f6, f26, dyn # perform operation
fmadd.s f28, f2, f6, f26, rdn # perform operation
fmadd.s f28, f2, f6, f26, rmm # perform operation
fmadd.s f28, f2, f6, f26, rne # perform operation
fmadd.s f28, f2, f6, f26, rtz # perform operation
fmadd.s f28, f2, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f6, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x8947474f # load x3 with value 0x8947474f
sw x3, 0(x2) # store 0x8947474f in memory
flw f12, 0(x2) # load 0x8947474f from memory into f12
fmadd.s f14, f10, f29, f12, dyn # perform operation
fmadd.s f14, f10, f29, f12, rdn # perform operation
fmadd.s f14, f10, f29, f12, rmm # perform operation
fmadd.s f14, f10, f29, f12, rne # perform operation
fmadd.s f14, f10, f29, f12, rtz # perform operation
fmadd.s f14, f10, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x67db91f9 # load x3 with value 0x67db91f9
sw x3, 0(x2) # store 0x67db91f9 in memory
flw f9, 0(x2) # load 0x67db91f9 from memory into f9
fmadd.s f8, f7, f16, f9, dyn # perform operation
fmadd.s f8, f7, f16, f9, rdn # perform operation
fmadd.s f8, f7, f16, f9, rmm # perform operation
fmadd.s f8, f7, f16, f9, rne # perform operation
fmadd.s f8, f7, f16, f9, rtz # perform operation
fmadd.s f8, f7, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x1dc387e6 # load x3 with value 0x1dc387e6
sw x3, 0(x2) # store 0x1dc387e6 in memory
flw f30, 0(x2) # load 0x1dc387e6 from memory into f30
fmadd.s f1, f17, f31, f30, dyn # perform operation
fmadd.s f1, f17, f31, f30, rdn # perform operation
fmadd.s f1, f17, f31, f30, rmm # perform operation
fmadd.s f1, f17, f31, f30, rne # perform operation
fmadd.s f1, f17, f31, f30, rtz # perform operation
fmadd.s f1, f17, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f31, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xa660408d # load x3 with value 0xa660408d
sw x3, 0(x2) # store 0xa660408d in memory
flw f7, 0(x2) # load 0xa660408d from memory into f7
fmadd.s f25, f13, f23, f7, dyn # perform operation
fmadd.s f25, f13, f23, f7, rdn # perform operation
fmadd.s f25, f13, f23, f7, rmm # perform operation
fmadd.s f25, f13, f23, f7, rne # perform operation
fmadd.s f25, f13, f23, f7, rtz # perform operation
fmadd.s f25, f13, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f23, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x918545b2 # load x3 with value 0x918545b2
sw x3, 0(x2) # store 0x918545b2 in memory
flw f16, 0(x2) # load 0x918545b2 from memory into f16
fmadd.s f2, f21, f29, f16, dyn # perform operation
fmadd.s f2, f21, f29, f16, rdn # perform operation
fmadd.s f2, f21, f29, f16, rmm # perform operation
fmadd.s f2, f21, f29, f16, rne # perform operation
fmadd.s f2, f21, f29, f16, rtz # perform operation
fmadd.s f2, f21, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f29, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0xfdcd49bc # load x3 with value 0xfdcd49bc
sw x3, 0(x2) # store 0xfdcd49bc in memory
flw f9, 0(x2) # load 0xfdcd49bc from memory into f9
fmadd.s f18, f23, f27, f9, dyn # perform operation
fmadd.s f18, f23, f27, f9, rdn # perform operation
fmadd.s f18, f23, f27, f9, rmm # perform operation
fmadd.s f18, f23, f27, f9, rne # perform operation
fmadd.s f18, f23, f27, f9, rtz # perform operation
fmadd.s f18, f23, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xaf57d0c6 # load x3 with value 0xaf57d0c6
sw x3, 0(x2) # store 0xaf57d0c6 in memory
flw f30, 0(x2) # load 0xaf57d0c6 from memory into f30
fmadd.s f27, f14, f12, f30, dyn # perform operation
fmadd.s f27, f14, f12, f30, rdn # perform operation
fmadd.s f27, f14, f12, f30, rmm # perform operation
fmadd.s f27, f14, f12, f30, rne # perform operation
fmadd.s f27, f14, f12, f30, rtz # perform operation
fmadd.s f27, f14, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0xd07d8b70 # load x3 with value 0xd07d8b70
sw x3, 0(x2) # store 0xd07d8b70 in memory
flw f22, 0(x2) # load 0xd07d8b70 from memory into f22
fmadd.s f17, f9, f6, f22, dyn # perform operation
fmadd.s f17, f9, f6, f22, rdn # perform operation
fmadd.s f17, f9, f6, f22, rmm # perform operation
fmadd.s f17, f9, f6, f22, rne # perform operation
fmadd.s f17, f9, f6, f22, rtz # perform operation
fmadd.s f17, f9, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f6, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0xa13fbd75 # load x3 with value 0xa13fbd75
sw x3, 0(x2) # store 0xa13fbd75 in memory
flw f16, 0(x2) # load 0xa13fbd75 from memory into f16
fmadd.s f3, f2, f11, f16, dyn # perform operation
fmadd.s f3, f2, f11, f16, rdn # perform operation
fmadd.s f3, f2, f11, f16, rmm # perform operation
fmadd.s f3, f2, f11, f16, rne # perform operation
fmadd.s f3, f2, f11, f16, rtz # perform operation
fmadd.s f3, f2, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0xfd9df8d5 # load x3 with value 0xfd9df8d5
sw x3, 0(x2) # store 0xfd9df8d5 in memory
flw f28, 0(x2) # load 0xfd9df8d5 from memory into f28
fmadd.s f18, f7, f2, f28, dyn # perform operation
fmadd.s f18, f7, f2, f28, rdn # perform operation
fmadd.s f18, f7, f2, f28, rmm # perform operation
fmadd.s f18, f7, f2, f28, rne # perform operation
fmadd.s f18, f7, f2, f28, rtz # perform operation
fmadd.s f18, f7, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0xd3d545a9 # load x3 with value 0xd3d545a9
sw x3, 0(x2) # store 0xd3d545a9 in memory
flw f7, 0(x2) # load 0xd3d545a9 from memory into f7
fmadd.s f30, f26, f11, f7, dyn # perform operation
fmadd.s f30, f26, f11, f7, rdn # perform operation
fmadd.s f30, f26, f11, f7, rmm # perform operation
fmadd.s f30, f26, f11, f7, rne # perform operation
fmadd.s f30, f26, f11, f7, rtz # perform operation
fmadd.s f30, f26, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f11, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x4cafb73f # load x3 with value 0x4cafb73f
sw x3, 0(x2) # store 0x4cafb73f in memory
flw f6, 0(x2) # load 0x4cafb73f from memory into f6
fmadd.s f30, f5, f7, f6, dyn # perform operation
fmadd.s f30, f5, f7, f6, rdn # perform operation
fmadd.s f30, f5, f7, f6, rmm # perform operation
fmadd.s f30, f5, f7, f6, rne # perform operation
fmadd.s f30, f5, f7, f6, rtz # perform operation
fmadd.s f30, f5, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xfbca513b # load x3 with value 0xfbca513b
sw x3, 0(x2) # store 0xfbca513b in memory
flw f18, 0(x2) # load 0xfbca513b from memory into f18
fmadd.s f5, f26, f14, f18, dyn # perform operation
fmadd.s f5, f26, f14, f18, rdn # perform operation
fmadd.s f5, f26, f14, f18, rmm # perform operation
fmadd.s f5, f26, f14, f18, rne # perform operation
fmadd.s f5, f26, f14, f18, rtz # perform operation
fmadd.s f5, f26, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f14, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xc392e403 # load x3 with value 0xc392e403
sw x3, 0(x2) # store 0xc392e403 in memory
flw f22, 0(x2) # load 0xc392e403 from memory into f22
fmadd.s f27, f1, f21, f22, dyn # perform operation
fmadd.s f27, f1, f21, f22, rdn # perform operation
fmadd.s f27, f1, f21, f22, rmm # perform operation
fmadd.s f27, f1, f21, f22, rne # perform operation
fmadd.s f27, f1, f21, f22, rtz # perform operation
fmadd.s f27, f1, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0xf6ff1067 # load x3 with value 0xf6ff1067
sw x3, 0(x2) # store 0xf6ff1067 in memory
flw f27, 0(x2) # load 0xf6ff1067 from memory into f27
fmadd.s f14, f20, f24, f27, dyn # perform operation
fmadd.s f14, f20, f24, f27, rdn # perform operation
fmadd.s f14, f20, f24, f27, rmm # perform operation
fmadd.s f14, f20, f24, f27, rne # perform operation
fmadd.s f14, f20, f24, f27, rtz # perform operation
fmadd.s f14, f20, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f20, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f20, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x131c8424 # load x3 with value 0x131c8424
sw x3, 0(x2) # store 0x131c8424 in memory
flw f24, 0(x2) # load 0x131c8424 from memory into f24
fmadd.s f6, f26, f29, f24, dyn # perform operation
fmadd.s f6, f26, f29, f24, rdn # perform operation
fmadd.s f6, f26, f29, f24, rmm # perform operation
fmadd.s f6, f26, f29, f24, rne # perform operation
fmadd.s f6, f26, f29, f24, rtz # perform operation
fmadd.s f6, f26, f29, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f26, f29, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f26, f29, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x9308e21d # load x3 with value 0x9308e21d
sw x3, 0(x2) # store 0x9308e21d in memory
flw f17, 0(x2) # load 0x9308e21d from memory into f17
fmadd.s f7, f10, f3, f17, dyn # perform operation
fmadd.s f7, f10, f3, f17, rdn # perform operation
fmadd.s f7, f10, f3, f17, rmm # perform operation
fmadd.s f7, f10, f3, f17, rne # perform operation
fmadd.s f7, f10, f3, f17, rtz # perform operation
fmadd.s f7, f10, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x19f8a611 # load x3 with value 0x19f8a611
sw x3, 0(x2) # store 0x19f8a611 in memory
flw f19, 0(x2) # load 0x19f8a611 from memory into f19
fmadd.s f31, f6, f18, f19, dyn # perform operation
fmadd.s f31, f6, f18, f19, rdn # perform operation
fmadd.s f31, f6, f18, f19, rmm # perform operation
fmadd.s f31, f6, f18, f19, rne # perform operation
fmadd.s f31, f6, f18, f19, rtz # perform operation
fmadd.s f31, f6, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xef069c21 # load x3 with value 0xef069c21
sw x3, 0(x2) # store 0xef069c21 in memory
flw f7, 0(x2) # load 0xef069c21 from memory into f7
fmadd.s f19, f27, f22, f7, dyn # perform operation
fmadd.s f19, f27, f22, f7, rdn # perform operation
fmadd.s f19, f27, f22, f7, rmm # perform operation
fmadd.s f19, f27, f22, f7, rne # perform operation
fmadd.s f19, f27, f22, f7, rtz # perform operation
fmadd.s f19, f27, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f22, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x2d32c19a # load x3 with value 0x2d32c19a
sw x3, 0(x2) # store 0x2d32c19a in memory
flw f2, 0(x2) # load 0x2d32c19a from memory into f2
fmadd.s f23, f5, f13, f2, dyn # perform operation
fmadd.s f23, f5, f13, f2, rdn # perform operation
fmadd.s f23, f5, f13, f2, rmm # perform operation
fmadd.s f23, f5, f13, f2, rne # perform operation
fmadd.s f23, f5, f13, f2, rtz # perform operation
fmadd.s f23, f5, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0xa48b274f # load x3 with value 0xa48b274f
sw x3, 0(x2) # store 0xa48b274f in memory
flw f11, 0(x2) # load 0xa48b274f from memory into f11
fmadd.s f26, f30, f29, f11, dyn # perform operation
fmadd.s f26, f30, f29, f11, rdn # perform operation
fmadd.s f26, f30, f29, f11, rmm # perform operation
fmadd.s f26, f30, f29, f11, rne # perform operation
fmadd.s f26, f30, f29, f11, rtz # perform operation
fmadd.s f26, f30, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f29, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x010ce1d2 # load x3 with value 0x010ce1d2
sw x3, 0(x2) # store 0x010ce1d2 in memory
flw f18, 0(x2) # load 0x010ce1d2 from memory into f18
fmadd.s f1, f20, f25, f18, dyn # perform operation
fmadd.s f1, f20, f25, f18, rdn # perform operation
fmadd.s f1, f20, f25, f18, rmm # perform operation
fmadd.s f1, f20, f25, f18, rne # perform operation
fmadd.s f1, f20, f25, f18, rtz # perform operation
fmadd.s f1, f20, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f25, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xb8c8a87c # load x3 with value 0xb8c8a87c
sw x3, 0(x2) # store 0xb8c8a87c in memory
flw f14, 0(x2) # load 0xb8c8a87c from memory into f14
fmadd.s f13, f28, f16, f14, dyn # perform operation
fmadd.s f13, f28, f16, f14, rdn # perform operation
fmadd.s f13, f28, f16, f14, rmm # perform operation
fmadd.s f13, f28, f16, f14, rne # perform operation
fmadd.s f13, f28, f16, f14, rtz # perform operation
fmadd.s f13, f28, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
la x2, scratch
li x3, 0x6bcf6ded # load x3 with value 0x6bcf6ded
sw x3, 0(x2) # store 0x6bcf6ded in memory
flw f1, 0(x2) # load 0x6bcf6ded from memory into f1
fmadd.s f12, f16, f25, f1, dyn # perform operation
fmadd.s f12, f16, f25, f1, rdn # perform operation
fmadd.s f12, f16, f25, f1, rmm # perform operation
fmadd.s f12, f16, f25, f1, rne # perform operation
fmadd.s f12, f16, f25, f1, rtz # perform operation
fmadd.s f12, f16, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f16, f25, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xe91a9f6c # load x3 with value 0xe91a9f6c
sw x3, 0(x2) # store 0xe91a9f6c in memory
flw f8, 0(x2) # load 0xe91a9f6c from memory into f8
fmadd.s f15, f10, f7, f8, dyn # perform operation
fmadd.s f15, f10, f7, f8, rdn # perform operation
fmadd.s f15, f10, f7, f8, rmm # perform operation
fmadd.s f15, f10, f7, f8, rne # perform operation
fmadd.s f15, f10, f7, f8, rtz # perform operation
fmadd.s f15, f10, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f7, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0xd8b5a12c # load x3 with value 0xd8b5a12c
sw x3, 0(x2) # store 0xd8b5a12c in memory
flw f9, 0(x2) # load 0xd8b5a12c from memory into f9
fmadd.s f15, f17, f26, f9, dyn # perform operation
fmadd.s f15, f17, f26, f9, rdn # perform operation
fmadd.s f15, f17, f26, f9, rmm # perform operation
fmadd.s f15, f17, f26, f9, rne # perform operation
fmadd.s f15, f17, f26, f9, rtz # perform operation
fmadd.s f15, f17, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f26, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x949644a4 # load x3 with value 0x949644a4
sw x3, 0(x2) # store 0x949644a4 in memory
flw f14, 0(x2) # load 0x949644a4 from memory into f14
fmadd.s f29, f28, f31, f14, dyn # perform operation
fmadd.s f29, f28, f31, f14, rdn # perform operation
fmadd.s f29, f28, f31, f14, rmm # perform operation
fmadd.s f29, f28, f31, f14, rne # perform operation
fmadd.s f29, f28, f31, f14, rtz # perform operation
fmadd.s f29, f28, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f28, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f28, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f28, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f28, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f28, f31, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0xab1bb22f # load x3 with value 0xab1bb22f
sw x3, 0(x2) # store 0xab1bb22f in memory
flw f8, 0(x2) # load 0xab1bb22f from memory into f8
fmadd.s f22, f18, f17, f8, dyn # perform operation
fmadd.s f22, f18, f17, f8, rdn # perform operation
fmadd.s f22, f18, f17, f8, rmm # perform operation
fmadd.s f22, f18, f17, f8, rne # perform operation
fmadd.s f22, f18, f17, f8, rtz # perform operation
fmadd.s f22, f18, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f17, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x538314d4 # load x3 with value 0x538314d4
sw x3, 0(x2) # store 0x538314d4 in memory
flw f16, 0(x2) # load 0x538314d4 from memory into f16
fmadd.s f15, f23, f2, f16, dyn # perform operation
fmadd.s f15, f23, f2, f16, rdn # perform operation
fmadd.s f15, f23, f2, f16, rmm # perform operation
fmadd.s f15, f23, f2, f16, rne # perform operation
fmadd.s f15, f23, f2, f16, rtz # perform operation
fmadd.s f15, f23, f2, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f2, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f2, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f2, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f2, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f2, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0x918651c2 # load x3 with value 0x918651c2
sw x3, 0(x2) # store 0x918651c2 in memory
flw f30, 0(x2) # load 0x918651c2 from memory into f30
fmadd.s f9, f24, f5, f30, dyn # perform operation
fmadd.s f9, f24, f5, f30, rdn # perform operation
fmadd.s f9, f24, f5, f30, rmm # perform operation
fmadd.s f9, f24, f5, f30, rne # perform operation
fmadd.s f9, f24, f5, f30, rtz # perform operation
fmadd.s f9, f24, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
la x2, scratch
li x3, 0xa0bd4af7 # load x3 with value 0xa0bd4af7
sw x3, 0(x2) # store 0xa0bd4af7 in memory
flw f30, 0(x2) # load 0xa0bd4af7 from memory into f30
fmadd.s f23, f10, f22, f30, dyn # perform operation
fmadd.s f23, f10, f22, f30, rdn # perform operation
fmadd.s f23, f10, f22, f30, rmm # perform operation
fmadd.s f23, f10, f22, f30, rne # perform operation
fmadd.s f23, f10, f22, f30, rtz # perform operation
fmadd.s f23, f10, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f22, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x9605fdf2 # load x3 with value 0x9605fdf2
sw x3, 0(x2) # store 0x9605fdf2 in memory
flw f21, 0(x2) # load 0x9605fdf2 from memory into f21
fmadd.s f9, f24, f28, f21, dyn # perform operation
fmadd.s f9, f24, f28, f21, rdn # perform operation
fmadd.s f9, f24, f28, f21, rmm # perform operation
fmadd.s f9, f24, f28, f21, rne # perform operation
fmadd.s f9, f24, f28, f21, rtz # perform operation
fmadd.s f9, f24, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f28, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0xce6d89af # load x3 with value 0xce6d89af
sw x3, 0(x2) # store 0xce6d89af in memory
flw f16, 0(x2) # load 0xce6d89af from memory into f16
fmadd.s f22, f27, f10, f16, dyn # perform operation
fmadd.s f22, f27, f10, f16, rdn # perform operation
fmadd.s f22, f27, f10, f16, rmm # perform operation
fmadd.s f22, f27, f10, f16, rne # perform operation
fmadd.s f22, f27, f10, f16, rtz # perform operation
fmadd.s f22, f27, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f27, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f27, f10, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xb4b608a2 # load x3 with value 0xb4b608a2
sw x3, 0(x2) # store 0xb4b608a2 in memory
flw f3, 0(x2) # load 0xb4b608a2 from memory into f3
fmadd.s f30, f6, f29, f3, dyn # perform operation
fmadd.s f30, f6, f29, f3, rdn # perform operation
fmadd.s f30, f6, f29, f3, rmm # perform operation
fmadd.s f30, f6, f29, f3, rne # perform operation
fmadd.s f30, f6, f29, f3, rtz # perform operation
fmadd.s f30, f6, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x0dfa790a # load x3 with value 0x0dfa790a
sw x3, 0(x2) # store 0x0dfa790a in memory
flw f8, 0(x2) # load 0x0dfa790a from memory into f8
fmadd.s f23, f10, f13, f8, dyn # perform operation
fmadd.s f23, f10, f13, f8, rdn # perform operation
fmadd.s f23, f10, f13, f8, rmm # perform operation
fmadd.s f23, f10, f13, f8, rne # perform operation
fmadd.s f23, f10, f13, f8, rtz # perform operation
fmadd.s f23, f10, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f13, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
la x2, scratch
li x3, 0x4ea11790 # load x3 with value 0x4ea11790
sw x3, 0(x2) # store 0x4ea11790 in memory
flw f3, 0(x2) # load 0x4ea11790 from memory into f3
fmadd.s f8, f23, f25, f3, dyn # perform operation
fmadd.s f8, f23, f25, f3, rdn # perform operation
fmadd.s f8, f23, f25, f3, rmm # perform operation
fmadd.s f8, f23, f25, f3, rne # perform operation
fmadd.s f8, f23, f25, f3, rtz # perform operation
fmadd.s f8, f23, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x668def9f # load x3 with value 0x668def9f
sw x3, 0(x2) # store 0x668def9f in memory
flw f15, 0(x2) # load 0x668def9f from memory into f15
fmadd.s f22, f19, f26, f15, dyn # perform operation
fmadd.s f22, f19, f26, f15, rdn # perform operation
fmadd.s f22, f19, f26, f15, rmm # perform operation
fmadd.s f22, f19, f26, f15, rne # perform operation
fmadd.s f22, f19, f26, f15, rtz # perform operation
fmadd.s f22, f19, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x1eecc60e # load x3 with value 0x1eecc60e
sw x3, 0(x2) # store 0x1eecc60e in memory
flw f15, 0(x2) # load 0x1eecc60e from memory into f15
fmadd.s f29, f27, f13, f15, dyn # perform operation
fmadd.s f29, f27, f13, f15, rdn # perform operation
fmadd.s f29, f27, f13, f15, rmm # perform operation
fmadd.s f29, f27, f13, f15, rne # perform operation
fmadd.s f29, f27, f13, f15, rtz # perform operation
fmadd.s f29, f27, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x6896ce23 # load x3 with value 0x6896ce23
sw x3, 0(x2) # store 0x6896ce23 in memory
flw f3, 0(x2) # load 0x6896ce23 from memory into f3
fmadd.s f2, f31, f23, f3, dyn # perform operation
fmadd.s f2, f31, f23, f3, rdn # perform operation
fmadd.s f2, f31, f23, f3, rmm # perform operation
fmadd.s f2, f31, f23, f3, rne # perform operation
fmadd.s f2, f31, f23, f3, rtz # perform operation
fmadd.s f2, f31, f23, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f23, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f23, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f23, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f23, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f23, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xee240e83 # load x3 with value 0xee240e83
sw x3, 0(x2) # store 0xee240e83 in memory
flw f11, 0(x2) # load 0xee240e83 from memory into f11
fmadd.s f24, f7, f8, f11, dyn # perform operation
fmadd.s f24, f7, f8, f11, rdn # perform operation
fmadd.s f24, f7, f8, f11, rmm # perform operation
fmadd.s f24, f7, f8, f11, rne # perform operation
fmadd.s f24, f7, f8, f11, rtz # perform operation
fmadd.s f24, f7, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f8, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x39ecf8e9 # load x3 with value 0x39ecf8e9
sw x3, 0(x2) # store 0x39ecf8e9 in memory
flw f3, 0(x2) # load 0x39ecf8e9 from memory into f3
fmadd.s f13, f20, f24, f3, dyn # perform operation
fmadd.s f13, f20, f24, f3, rdn # perform operation
fmadd.s f13, f20, f24, f3, rmm # perform operation
fmadd.s f13, f20, f24, f3, rne # perform operation
fmadd.s f13, f20, f24, f3, rtz # perform operation
fmadd.s f13, f20, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f20, f24, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0xf1ec5714 # load x3 with value 0xf1ec5714
sw x3, 0(x2) # store 0xf1ec5714 in memory
flw f24, 0(x2) # load 0xf1ec5714 from memory into f24
fmadd.s f9, f17, f2, f24, dyn # perform operation
fmadd.s f9, f17, f2, f24, rdn # perform operation
fmadd.s f9, f17, f2, f24, rmm # perform operation
fmadd.s f9, f17, f2, f24, rne # perform operation
fmadd.s f9, f17, f2, f24, rtz # perform operation
fmadd.s f9, f17, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f2, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x03fa8a68 # load x3 with value 0x03fa8a68
sw x3, 0(x2) # store 0x03fa8a68 in memory
flw f28, 0(x2) # load 0x03fa8a68 from memory into f28
fmadd.s f31, f23, f15, f28, dyn # perform operation
fmadd.s f31, f23, f15, f28, rdn # perform operation
fmadd.s f31, f23, f15, f28, rmm # perform operation
fmadd.s f31, f23, f15, f28, rne # perform operation
fmadd.s f31, f23, f15, f28, rtz # perform operation
fmadd.s f31, f23, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f15, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xb3d5b0db # load x3 with value 0xb3d5b0db
sw x3, 0(x2) # store 0xb3d5b0db in memory
flw f7, 0(x2) # load 0xb3d5b0db from memory into f7
fmadd.s f17, f26, f24, f7, dyn # perform operation
fmadd.s f17, f26, f24, f7, rdn # perform operation
fmadd.s f17, f26, f24, f7, rmm # perform operation
fmadd.s f17, f26, f24, f7, rne # perform operation
fmadd.s f17, f26, f24, f7, rtz # perform operation
fmadd.s f17, f26, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0xf49f30e2 # load x3 with value 0xf49f30e2
sw x3, 0(x2) # store 0xf49f30e2 in memory
flw f21, 0(x2) # load 0xf49f30e2 from memory into f21
fmadd.s f29, f14, f23, f21, dyn # perform operation
fmadd.s f29, f14, f23, f21, rdn # perform operation
fmadd.s f29, f14, f23, f21, rmm # perform operation
fmadd.s f29, f14, f23, f21, rne # perform operation
fmadd.s f29, f14, f23, f21, rtz # perform operation
fmadd.s f29, f14, f23, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f23, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f23, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f23, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f23, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f23, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x7b71b46c # load x3 with value 0x7b71b46c
sw x3, 0(x2) # store 0x7b71b46c in memory
flw f11, 0(x2) # load 0x7b71b46c from memory into f11
fmadd.s f31, f17, f16, f11, dyn # perform operation
fmadd.s f31, f17, f16, f11, rdn # perform operation
fmadd.s f31, f17, f16, f11, rmm # perform operation
fmadd.s f31, f17, f16, f11, rne # perform operation
fmadd.s f31, f17, f16, f11, rtz # perform operation
fmadd.s f31, f17, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f17, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f17, f16, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x54a12561 # load x3 with value 0x54a12561
sw x3, 0(x2) # store 0x54a12561 in memory
flw f18, 0(x2) # load 0x54a12561 from memory into f18
fmadd.s f5, f3, f11, f18, dyn # perform operation
fmadd.s f5, f3, f11, f18, rdn # perform operation
fmadd.s f5, f3, f11, f18, rmm # perform operation
fmadd.s f5, f3, f11, f18, rne # perform operation
fmadd.s f5, f3, f11, f18, rtz # perform operation
fmadd.s f5, f3, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f11, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
la x2, scratch
li x3, 0xce1eabdd # load x3 with value 0xce1eabdd
sw x3, 0(x2) # store 0xce1eabdd in memory
flw f12, 0(x2) # load 0xce1eabdd from memory into f12
fmadd.s f6, f27, f29, f12, dyn # perform operation
fmadd.s f6, f27, f29, f12, rdn # perform operation
fmadd.s f6, f27, f29, f12, rmm # perform operation
fmadd.s f6, f27, f29, f12, rne # perform operation
fmadd.s f6, f27, f29, f12, rtz # perform operation
fmadd.s f6, f27, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f27, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f27, f29, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0xbbd0d6ad # load x3 with value 0xbbd0d6ad
sw x3, 0(x2) # store 0xbbd0d6ad in memory
flw f22, 0(x2) # load 0xbbd0d6ad from memory into f22
fmadd.s f13, f8, f12, f22, dyn # perform operation
fmadd.s f13, f8, f12, f22, rdn # perform operation
fmadd.s f13, f8, f12, f22, rmm # perform operation
fmadd.s f13, f8, f12, f22, rne # perform operation
fmadd.s f13, f8, f12, f22, rtz # perform operation
fmadd.s f13, f8, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f12, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xec39a6d0 # load x3 with value 0xec39a6d0
sw x3, 0(x2) # store 0xec39a6d0 in memory
flw f19, 0(x2) # load 0xec39a6d0 from memory into f19
fmadd.s f29, f23, f8, f19, dyn # perform operation
fmadd.s f29, f23, f8, f19, rdn # perform operation
fmadd.s f29, f23, f8, f19, rmm # perform operation
fmadd.s f29, f23, f8, f19, rne # perform operation
fmadd.s f29, f23, f8, f19, rtz # perform operation
fmadd.s f29, f23, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f8, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xd3a44312 # load x3 with value 0xd3a44312
sw x3, 0(x2) # store 0xd3a44312 in memory
flw f10, 0(x2) # load 0xd3a44312 from memory into f10
fmadd.s f7, f28, f12, f10, dyn # perform operation
fmadd.s f7, f28, f12, f10, rdn # perform operation
fmadd.s f7, f28, f12, f10, rmm # perform operation
fmadd.s f7, f28, f12, f10, rne # perform operation
fmadd.s f7, f28, f12, f10, rtz # perform operation
fmadd.s f7, f28, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f28, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f28, f12, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0x9afdb3af # load x3 with value 0x9afdb3af
sw x3, 0(x2) # store 0x9afdb3af in memory
flw f13, 0(x2) # load 0x9afdb3af from memory into f13
fmadd.s f16, f29, f27, f13, dyn # perform operation
fmadd.s f16, f29, f27, f13, rdn # perform operation
fmadd.s f16, f29, f27, f13, rmm # perform operation
fmadd.s f16, f29, f27, f13, rne # perform operation
fmadd.s f16, f29, f27, f13, rtz # perform operation
fmadd.s f16, f29, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f29, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f29, f27, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0xad099912 # load x3 with value 0xad099912
sw x3, 0(x2) # store 0xad099912 in memory
flw f9, 0(x2) # load 0xad099912 from memory into f9
fmadd.s f23, f28, f27, f9, dyn # perform operation
fmadd.s f23, f28, f27, f9, rdn # perform operation
fmadd.s f23, f28, f27, f9, rmm # perform operation
fmadd.s f23, f28, f27, f9, rne # perform operation
fmadd.s f23, f28, f27, f9, rtz # perform operation
fmadd.s f23, f28, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f28, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f28, f27, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x1aa42ba7 # load x3 with value 0x1aa42ba7
sw x3, 0(x2) # store 0x1aa42ba7 in memory
flw f8, 0(x2) # load 0x1aa42ba7 from memory into f8
fmadd.s f23, f19, f21, f8, dyn # perform operation
fmadd.s f23, f19, f21, f8, rdn # perform operation
fmadd.s f23, f19, f21, f8, rmm # perform operation
fmadd.s f23, f19, f21, f8, rne # perform operation
fmadd.s f23, f19, f21, f8, rtz # perform operation
fmadd.s f23, f19, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0xb61fe4e6 # load x3 with value 0xb61fe4e6
sw x3, 0(x2) # store 0xb61fe4e6 in memory
flw f11, 0(x2) # load 0xb61fe4e6 from memory into f11
fmadd.s f27, f7, f28, f11, dyn # perform operation
fmadd.s f27, f7, f28, f11, rdn # perform operation
fmadd.s f27, f7, f28, f11, rmm # perform operation
fmadd.s f27, f7, f28, f11, rne # perform operation
fmadd.s f27, f7, f28, f11, rtz # perform operation
fmadd.s f27, f7, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0xed075daa # load x3 with value 0xed075daa
sw x3, 0(x2) # store 0xed075daa in memory
flw f14, 0(x2) # load 0xed075daa from memory into f14
fmadd.s f19, f30, f22, f14, dyn # perform operation
fmadd.s f19, f30, f22, f14, rdn # perform operation
fmadd.s f19, f30, f22, f14, rmm # perform operation
fmadd.s f19, f30, f22, f14, rne # perform operation
fmadd.s f19, f30, f22, f14, rtz # perform operation
fmadd.s f19, f30, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f22, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
la x2, scratch
li x3, 0x654d5a99 # load x3 with value 0x654d5a99
sw x3, 0(x2) # store 0x654d5a99 in memory
flw f1, 0(x2) # load 0x654d5a99 from memory into f1
fmadd.s f2, f3, f17, f1, dyn # perform operation
fmadd.s f2, f3, f17, f1, rdn # perform operation
fmadd.s f2, f3, f17, f1, rmm # perform operation
fmadd.s f2, f3, f17, f1, rne # perform operation
fmadd.s f2, f3, f17, f1, rtz # perform operation
fmadd.s f2, f3, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f17, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x3d37049e # load x3 with value 0x3d37049e
sw x3, 0(x2) # store 0x3d37049e in memory
flw f29, 0(x2) # load 0x3d37049e from memory into f29
fmadd.s f8, f23, f27, f29, dyn # perform operation
fmadd.s f8, f23, f27, f29, rdn # perform operation
fmadd.s f8, f23, f27, f29, rmm # perform operation
fmadd.s f8, f23, f27, f29, rne # perform operation
fmadd.s f8, f23, f27, f29, rtz # perform operation
fmadd.s f8, f23, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f27, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x345410fb # load x3 with value 0x345410fb
sw x3, 0(x2) # store 0x345410fb in memory
flw f1, 0(x2) # load 0x345410fb from memory into f1
fmadd.s f8, f20, f28, f1, dyn # perform operation
fmadd.s f8, f20, f28, f1, rdn # perform operation
fmadd.s f8, f20, f28, f1, rmm # perform operation
fmadd.s f8, f20, f28, f1, rne # perform operation
fmadd.s f8, f20, f28, f1, rtz # perform operation
fmadd.s f8, f20, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xf7d164af # load x3 with value 0xf7d164af
sw x3, 0(x2) # store 0xf7d164af in memory
flw f5, 0(x2) # load 0xf7d164af from memory into f5
fmadd.s f8, f25, f3, f5, dyn # perform operation
fmadd.s f8, f25, f3, f5, rdn # perform operation
fmadd.s f8, f25, f3, f5, rmm # perform operation
fmadd.s f8, f25, f3, f5, rne # perform operation
fmadd.s f8, f25, f3, f5, rtz # perform operation
fmadd.s f8, f25, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f25, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f25, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x0ceed764 # load x3 with value 0x0ceed764
sw x3, 0(x2) # store 0x0ceed764 in memory
flw f26, 0(x2) # load 0x0ceed764 from memory into f26
fmadd.s f29, f5, f10, f26, dyn # perform operation
fmadd.s f29, f5, f10, f26, rdn # perform operation
fmadd.s f29, f5, f10, f26, rmm # perform operation
fmadd.s f29, f5, f10, f26, rne # perform operation
fmadd.s f29, f5, f10, f26, rtz # perform operation
fmadd.s f29, f5, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f10, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x94d35ace # load x3 with value 0x94d35ace
sw x3, 0(x2) # store 0x94d35ace in memory
flw f13, 0(x2) # load 0x94d35ace from memory into f13
fmadd.s f28, f21, f6, f13, dyn # perform operation
fmadd.s f28, f21, f6, f13, rdn # perform operation
fmadd.s f28, f21, f6, f13, rmm # perform operation
fmadd.s f28, f21, f6, f13, rne # perform operation
fmadd.s f28, f21, f6, f13, rtz # perform operation
fmadd.s f28, f21, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f21, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f21, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x38bb5a39 # load x3 with value 0x38bb5a39
sw x3, 0(x2) # store 0x38bb5a39 in memory
flw f30, 0(x2) # load 0x38bb5a39 from memory into f30
fmadd.s f26, f27, f2, f30, dyn # perform operation
fmadd.s f26, f27, f2, f30, rdn # perform operation
fmadd.s f26, f27, f2, f30, rmm # perform operation
fmadd.s f26, f27, f2, f30, rne # perform operation
fmadd.s f26, f27, f2, f30, rtz # perform operation
fmadd.s f26, f27, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f2, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xfe28dec0 # load x3 with value 0xfe28dec0
sw x3, 0(x2) # store 0xfe28dec0 in memory
flw f26, 0(x2) # load 0xfe28dec0 from memory into f26
fmadd.s f29, f21, f5, f26, dyn # perform operation
fmadd.s f29, f21, f5, f26, rdn # perform operation
fmadd.s f29, f21, f5, f26, rmm # perform operation
fmadd.s f29, f21, f5, f26, rne # perform operation
fmadd.s f29, f21, f5, f26, rtz # perform operation
fmadd.s f29, f21, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f21, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f21, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f21, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f21, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f21, f5, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x7348d018 # load x3 with value 0x7348d018
sw x3, 0(x2) # store 0x7348d018 in memory
flw f1, 0(x2) # load 0x7348d018 from memory into f1
fmadd.s f15, f18, f28, f1, dyn # perform operation
fmadd.s f15, f18, f28, f1, rdn # perform operation
fmadd.s f15, f18, f28, f1, rmm # perform operation
fmadd.s f15, f18, f28, f1, rne # perform operation
fmadd.s f15, f18, f28, f1, rtz # perform operation
fmadd.s f15, f18, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x1ef15ba6 # load x3 with value 0x1ef15ba6
sw x3, 0(x2) # store 0x1ef15ba6 in memory
flw f31, 0(x2) # load 0x1ef15ba6 from memory into f31
fmadd.s f2, f9, f13, f31, dyn # perform operation
fmadd.s f2, f9, f13, f31, rdn # perform operation
fmadd.s f2, f9, f13, f31, rmm # perform operation
fmadd.s f2, f9, f13, f31, rne # perform operation
fmadd.s f2, f9, f13, f31, rtz # perform operation
fmadd.s f2, f9, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f9, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f9, f13, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
la x2, scratch
li x3, 0xb9c84bb3 # load x3 with value 0xb9c84bb3
sw x3, 0(x2) # store 0xb9c84bb3 in memory
flw f20, 0(x2) # load 0xb9c84bb3 from memory into f20
fmadd.s f17, f14, f30, f20, dyn # perform operation
fmadd.s f17, f14, f30, f20, rdn # perform operation
fmadd.s f17, f14, f30, f20, rmm # perform operation
fmadd.s f17, f14, f30, f20, rne # perform operation
fmadd.s f17, f14, f30, f20, rtz # perform operation
fmadd.s f17, f14, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xe3ad42fc # load x3 with value 0xe3ad42fc
sw x3, 0(x2) # store 0xe3ad42fc in memory
flw f22, 0(x2) # load 0xe3ad42fc from memory into f22
fmadd.s f25, f1, f18, f22, dyn # perform operation
fmadd.s f25, f1, f18, f22, rdn # perform operation
fmadd.s f25, f1, f18, f22, rmm # perform operation
fmadd.s f25, f1, f18, f22, rne # perform operation
fmadd.s f25, f1, f18, f22, rtz # perform operation
fmadd.s f25, f1, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f18, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0xfb4fa5ce # load x3 with value 0xfb4fa5ce
sw x3, 0(x2) # store 0xfb4fa5ce in memory
flw f1, 0(x2) # load 0xfb4fa5ce from memory into f1
fmadd.s f3, f15, f10, f1, dyn # perform operation
fmadd.s f3, f15, f10, f1, rdn # perform operation
fmadd.s f3, f15, f10, f1, rmm # perform operation
fmadd.s f3, f15, f10, f1, rne # perform operation
fmadd.s f3, f15, f10, f1, rtz # perform operation
fmadd.s f3, f15, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x151aa0b0 # load x3 with value 0x151aa0b0
sw x3, 0(x2) # store 0x151aa0b0 in memory
flw f25, 0(x2) # load 0x151aa0b0 from memory into f25
fmadd.s f21, f31, f7, f25, dyn # perform operation
fmadd.s f21, f31, f7, f25, rdn # perform operation
fmadd.s f21, f31, f7, f25, rmm # perform operation
fmadd.s f21, f31, f7, f25, rne # perform operation
fmadd.s f21, f31, f7, f25, rtz # perform operation
fmadd.s f21, f31, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x6ac38200 # load x3 with value 0x6ac38200
sw x3, 0(x2) # store 0x6ac38200 in memory
flw f30, 0(x2) # load 0x6ac38200 from memory into f30
fmadd.s f28, f17, f14, f30, dyn # perform operation
fmadd.s f28, f17, f14, f30, rdn # perform operation
fmadd.s f28, f17, f14, f30, rmm # perform operation
fmadd.s f28, f17, f14, f30, rne # perform operation
fmadd.s f28, f17, f14, f30, rtz # perform operation
fmadd.s f28, f17, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xa0ddb598 # load x3 with value 0xa0ddb598
sw x3, 0(x2) # store 0xa0ddb598 in memory
flw f2, 0(x2) # load 0xa0ddb598 from memory into f2
fmadd.s f20, f21, f28, f2, dyn # perform operation
fmadd.s f20, f21, f28, f2, rdn # perform operation
fmadd.s f20, f21, f28, f2, rmm # perform operation
fmadd.s f20, f21, f28, f2, rne # perform operation
fmadd.s f20, f21, f28, f2, rtz # perform operation
fmadd.s f20, f21, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f28, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x3c92a914 # load x3 with value 0x3c92a914
sw x3, 0(x2) # store 0x3c92a914 in memory
flw f10, 0(x2) # load 0x3c92a914 from memory into f10
fmadd.s f7, f31, f25, f10, dyn # perform operation
fmadd.s f7, f31, f25, f10, rdn # perform operation
fmadd.s f7, f31, f25, f10, rmm # perform operation
fmadd.s f7, f31, f25, f10, rne # perform operation
fmadd.s f7, f31, f25, f10, rtz # perform operation
fmadd.s f7, f31, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f31, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f31, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x2bbad821 # load x3 with value 0x2bbad821
sw x3, 0(x2) # store 0x2bbad821 in memory
flw f25, 0(x2) # load 0x2bbad821 from memory into f25
fmadd.s f27, f22, f8, f25, dyn # perform operation
fmadd.s f27, f22, f8, f25, rdn # perform operation
fmadd.s f27, f22, f8, f25, rmm # perform operation
fmadd.s f27, f22, f8, f25, rne # perform operation
fmadd.s f27, f22, f8, f25, rtz # perform operation
fmadd.s f27, f22, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f8, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xae576314 # load x3 with value 0xae576314
sw x3, 0(x2) # store 0xae576314 in memory
flw f10, 0(x2) # load 0xae576314 from memory into f10
fmadd.s f19, f16, f25, f10, dyn # perform operation
fmadd.s f19, f16, f25, f10, rdn # perform operation
fmadd.s f19, f16, f25, f10, rmm # perform operation
fmadd.s f19, f16, f25, f10, rne # perform operation
fmadd.s f19, f16, f25, f10, rtz # perform operation
fmadd.s f19, f16, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xc60e8f07 # load x3 with value 0xc60e8f07
sw x3, 0(x2) # store 0xc60e8f07 in memory
flw f11, 0(x2) # load 0xc60e8f07 from memory into f11
fmadd.s f26, f5, f12, f11, dyn # perform operation
fmadd.s f26, f5, f12, f11, rdn # perform operation
fmadd.s f26, f5, f12, f11, rmm # perform operation
fmadd.s f26, f5, f12, f11, rne # perform operation
fmadd.s f26, f5, f12, f11, rtz # perform operation
fmadd.s f26, f5, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f12, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0xda36c4ec # load x3 with value 0xda36c4ec
sw x3, 0(x2) # store 0xda36c4ec in memory
flw f21, 0(x2) # load 0xda36c4ec from memory into f21
fmadd.s f15, f2, f16, f21, dyn # perform operation
fmadd.s f15, f2, f16, f21, rdn # perform operation
fmadd.s f15, f2, f16, f21, rmm # perform operation
fmadd.s f15, f2, f16, f21, rne # perform operation
fmadd.s f15, f2, f16, f21, rtz # perform operation
fmadd.s f15, f2, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x29134b99 # load x3 with value 0x29134b99
sw x3, 0(x2) # store 0x29134b99 in memory
flw f28, 0(x2) # load 0x29134b99 from memory into f28
fmadd.s f2, f18, f25, f28, dyn # perform operation
fmadd.s f2, f18, f25, f28, rdn # perform operation
fmadd.s f2, f18, f25, f28, rmm # perform operation
fmadd.s f2, f18, f25, f28, rne # perform operation
fmadd.s f2, f18, f25, f28, rtz # perform operation
fmadd.s f2, f18, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f18, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f18, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f18, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f18, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f18, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x36168a88 # load x3 with value 0x36168a88
sw x3, 0(x2) # store 0x36168a88 in memory
flw f23, 0(x2) # load 0x36168a88 from memory into f23
fmadd.s f9, f30, f11, f23, dyn # perform operation
fmadd.s f9, f30, f11, f23, rdn # perform operation
fmadd.s f9, f30, f11, f23, rmm # perform operation
fmadd.s f9, f30, f11, f23, rne # perform operation
fmadd.s f9, f30, f11, f23, rtz # perform operation
fmadd.s f9, f30, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x35a5b77a # load x3 with value 0x35a5b77a
sw x3, 0(x2) # store 0x35a5b77a in memory
flw f22, 0(x2) # load 0x35a5b77a from memory into f22
fmadd.s f9, f27, f19, f22, dyn # perform operation
fmadd.s f9, f27, f19, f22, rdn # perform operation
fmadd.s f9, f27, f19, f22, rmm # perform operation
fmadd.s f9, f27, f19, f22, rne # perform operation
fmadd.s f9, f27, f19, f22, rtz # perform operation
fmadd.s f9, f27, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
la x2, scratch
li x3, 0x5986c6b4 # load x3 with value 0x5986c6b4
sw x3, 0(x2) # store 0x5986c6b4 in memory
flw f12, 0(x2) # load 0x5986c6b4 from memory into f12
fmadd.s f17, f28, f10, f12, dyn # perform operation
fmadd.s f17, f28, f10, f12, rdn # perform operation
fmadd.s f17, f28, f10, f12, rmm # perform operation
fmadd.s f17, f28, f10, f12, rne # perform operation
fmadd.s f17, f28, f10, f12, rtz # perform operation
fmadd.s f17, f28, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f10, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x33a8fd94 # load x3 with value 0x33a8fd94
sw x3, 0(x2) # store 0x33a8fd94 in memory
flw f13, 0(x2) # load 0x33a8fd94 from memory into f13
fmadd.s f7, f17, f25, f13, dyn # perform operation
fmadd.s f7, f17, f25, f13, rdn # perform operation
fmadd.s f7, f17, f25, f13, rmm # perform operation
fmadd.s f7, f17, f25, f13, rne # perform operation
fmadd.s f7, f17, f25, f13, rtz # perform operation
fmadd.s f7, f17, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0xbac991d7 # load x3 with value 0xbac991d7
sw x3, 0(x2) # store 0xbac991d7 in memory
flw f9, 0(x2) # load 0xbac991d7 from memory into f9
fmadd.s f11, f22, f8, f9, dyn # perform operation
fmadd.s f11, f22, f8, f9, rdn # perform operation
fmadd.s f11, f22, f8, f9, rmm # perform operation
fmadd.s f11, f22, f8, f9, rne # perform operation
fmadd.s f11, f22, f8, f9, rtz # perform operation
fmadd.s f11, f22, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f22, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f22, f8, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
la x2, scratch
li x3, 0xbbf2b7ef # load x3 with value 0xbbf2b7ef
sw x3, 0(x2) # store 0xbbf2b7ef in memory
flw f29, 0(x2) # load 0xbbf2b7ef from memory into f29
fmadd.s f6, f17, f1, f29, dyn # perform operation
fmadd.s f6, f17, f1, f29, rdn # perform operation
fmadd.s f6, f17, f1, f29, rmm # perform operation
fmadd.s f6, f17, f1, f29, rne # perform operation
fmadd.s f6, f17, f1, f29, rtz # perform operation
fmadd.s f6, f17, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f17, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f17, f1, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x882699e6 # load x3 with value 0x882699e6
sw x3, 0(x2) # store 0x882699e6 in memory
flw f31, 0(x2) # load 0x882699e6 from memory into f31
fmadd.s f20, f23, f26, f31, dyn # perform operation
fmadd.s f20, f23, f26, f31, rdn # perform operation
fmadd.s f20, f23, f26, f31, rmm # perform operation
fmadd.s f20, f23, f26, f31, rne # perform operation
fmadd.s f20, f23, f26, f31, rtz # perform operation
fmadd.s f20, f23, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xde248872 # load x3 with value 0xde248872
sw x3, 0(x2) # store 0xde248872 in memory
flw f28, 0(x2) # load 0xde248872 from memory into f28
fmadd.s f31, f2, f25, f28, dyn # perform operation
fmadd.s f31, f2, f25, f28, rdn # perform operation
fmadd.s f31, f2, f25, f28, rmm # perform operation
fmadd.s f31, f2, f25, f28, rne # perform operation
fmadd.s f31, f2, f25, f28, rtz # perform operation
fmadd.s f31, f2, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f25, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
la x2, scratch
li x3, 0x6464e355 # load x3 with value 0x6464e355
sw x3, 0(x2) # store 0x6464e355 in memory
flw f20, 0(x2) # load 0x6464e355 from memory into f20
fmadd.s f19, f2, f30, f20, dyn # perform operation
fmadd.s f19, f2, f30, f20, rdn # perform operation
fmadd.s f19, f2, f30, f20, rmm # perform operation
fmadd.s f19, f2, f30, f20, rne # perform operation
fmadd.s f19, f2, f30, f20, rtz # perform operation
fmadd.s f19, f2, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f2, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f2, f30, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x2f4eb024 # load x3 with value 0x2f4eb024
sw x3, 0(x2) # store 0x2f4eb024 in memory
flw f29, 0(x2) # load 0x2f4eb024 from memory into f29
fmadd.s f2, f20, f17, f29, dyn # perform operation
fmadd.s f2, f20, f17, f29, rdn # perform operation
fmadd.s f2, f20, f17, f29, rmm # perform operation
fmadd.s f2, f20, f17, f29, rne # perform operation
fmadd.s f2, f20, f17, f29, rtz # perform operation
fmadd.s f2, f20, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xed835b14 # load x3 with value 0xed835b14
sw x3, 0(x2) # store 0xed835b14 in memory
flw f5, 0(x2) # load 0xed835b14 from memory into f5
fmadd.s f8, f26, f16, f5, dyn # perform operation
fmadd.s f8, f26, f16, f5, rdn # perform operation
fmadd.s f8, f26, f16, f5, rmm # perform operation
fmadd.s f8, f26, f16, f5, rne # perform operation
fmadd.s f8, f26, f16, f5, rtz # perform operation
fmadd.s f8, f26, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f16, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
la x2, scratch
li x3, 0x198be433 # load x3 with value 0x198be433
sw x3, 0(x2) # store 0x198be433 in memory
flw f10, 0(x2) # load 0x198be433 from memory into f10
fmadd.s f8, f7, f3, f10, dyn # perform operation
fmadd.s f8, f7, f3, f10, rdn # perform operation
fmadd.s f8, f7, f3, f10, rmm # perform operation
fmadd.s f8, f7, f3, f10, rne # perform operation
fmadd.s f8, f7, f3, f10, rtz # perform operation
fmadd.s f8, f7, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x776421e7 # load x3 with value 0x776421e7
sw x3, 0(x2) # store 0x776421e7 in memory
flw f30, 0(x2) # load 0x776421e7 from memory into f30
fmadd.s f25, f3, f13, f30, dyn # perform operation
fmadd.s f25, f3, f13, f30, rdn # perform operation
fmadd.s f25, f3, f13, f30, rmm # perform operation
fmadd.s f25, f3, f13, f30, rne # perform operation
fmadd.s f25, f3, f13, f30, rtz # perform operation
fmadd.s f25, f3, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f13, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x27628b84 # load x3 with value 0x27628b84
sw x3, 0(x2) # store 0x27628b84 in memory
flw f3, 0(x2) # load 0x27628b84 from memory into f3
fmadd.s f11, f30, f2, f3, dyn # perform operation
fmadd.s f11, f30, f2, f3, rdn # perform operation
fmadd.s f11, f30, f2, f3, rmm # perform operation
fmadd.s f11, f30, f2, f3, rne # perform operation
fmadd.s f11, f30, f2, f3, rtz # perform operation
fmadd.s f11, f30, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f2, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x66e42e0c # load x3 with value 0x66e42e0c
sw x3, 0(x2) # store 0x66e42e0c in memory
flw f7, 0(x2) # load 0x66e42e0c from memory into f7
fmadd.s f19, f30, f31, f7, dyn # perform operation
fmadd.s f19, f30, f31, f7, rdn # perform operation
fmadd.s f19, f30, f31, f7, rmm # perform operation
fmadd.s f19, f30, f31, f7, rne # perform operation
fmadd.s f19, f30, f31, f7, rtz # perform operation
fmadd.s f19, f30, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f31, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0xe8be0df0 # load x3 with value 0xe8be0df0
sw x3, 0(x2) # store 0xe8be0df0 in memory
flw f8, 0(x2) # load 0xe8be0df0 from memory into f8
fmadd.s f28, f29, f30, f8, dyn # perform operation
fmadd.s f28, f29, f30, f8, rdn # perform operation
fmadd.s f28, f29, f30, f8, rmm # perform operation
fmadd.s f28, f29, f30, f8, rne # perform operation
fmadd.s f28, f29, f30, f8, rtz # perform operation
fmadd.s f28, f29, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xfb5521a9 # load x3 with value 0xfb5521a9
sw x3, 0(x2) # store 0xfb5521a9 in memory
flw f28, 0(x2) # load 0xfb5521a9 from memory into f28
fmadd.s f18, f5, f29, f28, dyn # perform operation
fmadd.s f18, f5, f29, f28, rdn # perform operation
fmadd.s f18, f5, f29, f28, rmm # perform operation
fmadd.s f18, f5, f29, f28, rne # perform operation
fmadd.s f18, f5, f29, f28, rtz # perform operation
fmadd.s f18, f5, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f5, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f5, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xec507c43 # load x3 with value 0xec507c43
sw x3, 0(x2) # store 0xec507c43 in memory
flw f5, 0(x2) # load 0xec507c43 from memory into f5
fmadd.s f19, f24, f8, f5, dyn # perform operation
fmadd.s f19, f24, f8, f5, rdn # perform operation
fmadd.s f19, f24, f8, f5, rmm # perform operation
fmadd.s f19, f24, f8, f5, rne # perform operation
fmadd.s f19, f24, f8, f5, rtz # perform operation
fmadd.s f19, f24, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x047e1ea2 # load x3 with value 0x047e1ea2
sw x3, 0(x2) # store 0x047e1ea2 in memory
flw f18, 0(x2) # load 0x047e1ea2 from memory into f18
fmadd.s f19, f10, f15, f18, dyn # perform operation
fmadd.s f19, f10, f15, f18, rdn # perform operation
fmadd.s f19, f10, f15, f18, rmm # perform operation
fmadd.s f19, f10, f15, f18, rne # perform operation
fmadd.s f19, f10, f15, f18, rtz # perform operation
fmadd.s f19, f10, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f15, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x4adb43d7 # load x3 with value 0x4adb43d7
sw x3, 0(x2) # store 0x4adb43d7 in memory
flw f8, 0(x2) # load 0x4adb43d7 from memory into f8
fmadd.s f16, f11, f23, f8, dyn # perform operation
fmadd.s f16, f11, f23, f8, rdn # perform operation
fmadd.s f16, f11, f23, f8, rmm # perform operation
fmadd.s f16, f11, f23, f8, rne # perform operation
fmadd.s f16, f11, f23, f8, rtz # perform operation
fmadd.s f16, f11, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xf1f09037 # load x3 with value 0xf1f09037
sw x3, 0(x2) # store 0xf1f09037 in memory
flw f22, 0(x2) # load 0xf1f09037 from memory into f22
fmadd.s f11, f15, f7, f22, dyn # perform operation
fmadd.s f11, f15, f7, f22, rdn # perform operation
fmadd.s f11, f15, f7, f22, rmm # perform operation
fmadd.s f11, f15, f7, f22, rne # perform operation
fmadd.s f11, f15, f7, f22, rtz # perform operation
fmadd.s f11, f15, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f7, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x3c1f5fc2 # load x3 with value 0x3c1f5fc2
sw x3, 0(x2) # store 0x3c1f5fc2 in memory
flw f13, 0(x2) # load 0x3c1f5fc2 from memory into f13
fmadd.s f9, f7, f28, f13, dyn # perform operation
fmadd.s f9, f7, f28, f13, rdn # perform operation
fmadd.s f9, f7, f28, f13, rmm # perform operation
fmadd.s f9, f7, f28, f13, rne # perform operation
fmadd.s f9, f7, f28, f13, rtz # perform operation
fmadd.s f9, f7, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f28, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0xa90b11ec # load x3 with value 0xa90b11ec
sw x3, 0(x2) # store 0xa90b11ec in memory
flw f5, 0(x2) # load 0xa90b11ec from memory into f5
fmadd.s f11, f8, f12, f5, dyn # perform operation
fmadd.s f11, f8, f12, f5, rdn # perform operation
fmadd.s f11, f8, f12, f5, rmm # perform operation
fmadd.s f11, f8, f12, f5, rne # perform operation
fmadd.s f11, f8, f12, f5, rtz # perform operation
fmadd.s f11, f8, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xd687e7ec # load x3 with value 0xd687e7ec
sw x3, 0(x2) # store 0xd687e7ec in memory
flw f22, 0(x2) # load 0xd687e7ec from memory into f22
fmadd.s f29, f19, f27, f22, dyn # perform operation
fmadd.s f29, f19, f27, f22, rdn # perform operation
fmadd.s f29, f19, f27, f22, rmm # perform operation
fmadd.s f29, f19, f27, f22, rne # perform operation
fmadd.s f29, f19, f27, f22, rtz # perform operation
fmadd.s f29, f19, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f19, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f19, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x087d6681 # load x3 with value 0x087d6681
sw x3, 0(x2) # store 0x087d6681 in memory
flw f18, 0(x2) # load 0x087d6681 from memory into f18
fmadd.s f13, f25, f12, f18, dyn # perform operation
fmadd.s f13, f25, f12, f18, rdn # perform operation
fmadd.s f13, f25, f12, f18, rmm # perform operation
fmadd.s f13, f25, f12, f18, rne # perform operation
fmadd.s f13, f25, f12, f18, rtz # perform operation
fmadd.s f13, f25, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f25, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f25, f12, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xcd086b03 # load x3 with value 0xcd086b03
sw x3, 0(x2) # store 0xcd086b03 in memory
flw f29, 0(x2) # load 0xcd086b03 from memory into f29
fmadd.s f13, f3, f10, f29, dyn # perform operation
fmadd.s f13, f3, f10, f29, rdn # perform operation
fmadd.s f13, f3, f10, f29, rmm # perform operation
fmadd.s f13, f3, f10, f29, rne # perform operation
fmadd.s f13, f3, f10, f29, rtz # perform operation
fmadd.s f13, f3, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f3, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f3, f10, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0x0ddccb2f # load x3 with value 0x0ddccb2f
sw x3, 0(x2) # store 0x0ddccb2f in memory
flw f10, 0(x2) # load 0x0ddccb2f from memory into f10
fmadd.s f23, f14, f25, f10, dyn # perform operation
fmadd.s f23, f14, f25, f10, rdn # perform operation
fmadd.s f23, f14, f25, f10, rmm # perform operation
fmadd.s f23, f14, f25, f10, rne # perform operation
fmadd.s f23, f14, f25, f10, rtz # perform operation
fmadd.s f23, f14, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x74f22a1a # load x3 with value 0x74f22a1a
sw x3, 0(x2) # store 0x74f22a1a in memory
flw f28, 0(x2) # load 0x74f22a1a from memory into f28
fmadd.s f7, f16, f23, f28, dyn # perform operation
fmadd.s f7, f16, f23, f28, rdn # perform operation
fmadd.s f7, f16, f23, f28, rmm # perform operation
fmadd.s f7, f16, f23, f28, rne # perform operation
fmadd.s f7, f16, f23, f28, rtz # perform operation
fmadd.s f7, f16, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f16, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f16, f23, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x0b2cd047 # load x3 with value 0x0b2cd047
sw x3, 0(x2) # store 0x0b2cd047 in memory
flw f30, 0(x2) # load 0x0b2cd047 from memory into f30
fmadd.s f24, f11, f8, f30, dyn # perform operation
fmadd.s f24, f11, f8, f30, rdn # perform operation
fmadd.s f24, f11, f8, f30, rmm # perform operation
fmadd.s f24, f11, f8, f30, rne # perform operation
fmadd.s f24, f11, f8, f30, rtz # perform operation
fmadd.s f24, f11, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xbe306a81 # load x3 with value 0xbe306a81
sw x3, 0(x2) # store 0xbe306a81 in memory
flw f31, 0(x2) # load 0xbe306a81 from memory into f31
fmadd.s f15, f28, f1, f31, dyn # perform operation
fmadd.s f15, f28, f1, f31, rdn # perform operation
fmadd.s f15, f28, f1, f31, rmm # perform operation
fmadd.s f15, f28, f1, f31, rne # perform operation
fmadd.s f15, f28, f1, f31, rtz # perform operation
fmadd.s f15, f28, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f1, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x0275ae33 # load x3 with value 0x0275ae33
sw x3, 0(x2) # store 0x0275ae33 in memory
flw f13, 0(x2) # load 0x0275ae33 from memory into f13
fmadd.s f3, f30, f6, f13, dyn # perform operation
fmadd.s f3, f30, f6, f13, rdn # perform operation
fmadd.s f3, f30, f6, f13, rmm # perform operation
fmadd.s f3, f30, f6, f13, rne # perform operation
fmadd.s f3, f30, f6, f13, rtz # perform operation
fmadd.s f3, f30, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f30, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f30, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f30, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f30, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f30, f6, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
la x2, scratch
li x3, 0x8e0f5b0a # load x3 with value 0x8e0f5b0a
sw x3, 0(x2) # store 0x8e0f5b0a in memory
flw f14, 0(x2) # load 0x8e0f5b0a from memory into f14
fmadd.s f19, f15, f18, f14, dyn # perform operation
fmadd.s f19, f15, f18, f14, rdn # perform operation
fmadd.s f19, f15, f18, f14, rmm # perform operation
fmadd.s f19, f15, f18, f14, rne # perform operation
fmadd.s f19, f15, f18, f14, rtz # perform operation
fmadd.s f19, f15, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f15, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x35a715aa # load x3 with value 0x35a715aa
sw x3, 0(x2) # store 0x35a715aa in memory
flw f6, 0(x2) # load 0x35a715aa from memory into f6
fmadd.s f23, f24, f15, f6, dyn # perform operation
fmadd.s f23, f24, f15, f6, rdn # perform operation
fmadd.s f23, f24, f15, f6, rmm # perform operation
fmadd.s f23, f24, f15, f6, rne # perform operation
fmadd.s f23, f24, f15, f6, rtz # perform operation
fmadd.s f23, f24, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0x70788e7a # load x3 with value 0x70788e7a
sw x3, 0(x2) # store 0x70788e7a in memory
flw f26, 0(x2) # load 0x70788e7a from memory into f26
fmadd.s f31, f29, f2, f26, dyn # perform operation
fmadd.s f31, f29, f2, f26, rdn # perform operation
fmadd.s f31, f29, f2, f26, rmm # perform operation
fmadd.s f31, f29, f2, f26, rne # perform operation
fmadd.s f31, f29, f2, f26, rtz # perform operation
fmadd.s f31, f29, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x9e2f16f6 # load x3 with value 0x9e2f16f6
sw x3, 0(x2) # store 0x9e2f16f6 in memory
flw f28, 0(x2) # load 0x9e2f16f6 from memory into f28
fmadd.s f1, f31, f14, f28, dyn # perform operation
fmadd.s f1, f31, f14, f28, rdn # perform operation
fmadd.s f1, f31, f14, f28, rmm # perform operation
fmadd.s f1, f31, f14, f28, rne # perform operation
fmadd.s f1, f31, f14, f28, rtz # perform operation
fmadd.s f1, f31, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f14, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xb84f6272 # load x3 with value 0xb84f6272
sw x3, 0(x2) # store 0xb84f6272 in memory
flw f14, 0(x2) # load 0xb84f6272 from memory into f14
fmadd.s f21, f20, f5, f14, dyn # perform operation
fmadd.s f21, f20, f5, f14, rdn # perform operation
fmadd.s f21, f20, f5, f14, rmm # perform operation
fmadd.s f21, f20, f5, f14, rne # perform operation
fmadd.s f21, f20, f5, f14, rtz # perform operation
fmadd.s f21, f20, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f20, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f20, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x3590e334 # load x3 with value 0x3590e334
sw x3, 0(x2) # store 0x3590e334 in memory
flw f10, 0(x2) # load 0x3590e334 from memory into f10
fmadd.s f8, f22, f25, f10, dyn # perform operation
fmadd.s f8, f22, f25, f10, rdn # perform operation
fmadd.s f8, f22, f25, f10, rmm # perform operation
fmadd.s f8, f22, f25, f10, rne # perform operation
fmadd.s f8, f22, f25, f10, rtz # perform operation
fmadd.s f8, f22, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f25, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
la x2, scratch
li x3, 0xe76e3701 # load x3 with value 0xe76e3701
sw x3, 0(x2) # store 0xe76e3701 in memory
flw f30, 0(x2) # load 0xe76e3701 from memory into f30
fmadd.s f7, f14, f6, f30, dyn # perform operation
fmadd.s f7, f14, f6, f30, rdn # perform operation
fmadd.s f7, f14, f6, f30, rmm # perform operation
fmadd.s f7, f14, f6, f30, rne # perform operation
fmadd.s f7, f14, f6, f30, rtz # perform operation
fmadd.s f7, f14, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f14, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f14, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0xb188bbf4 # load x3 with value 0xb188bbf4
sw x3, 0(x2) # store 0xb188bbf4 in memory
flw f26, 0(x2) # load 0xb188bbf4 from memory into f26
fmadd.s f12, f7, f28, f26, dyn # perform operation
fmadd.s f12, f7, f28, f26, rdn # perform operation
fmadd.s f12, f7, f28, f26, rmm # perform operation
fmadd.s f12, f7, f28, f26, rne # perform operation
fmadd.s f12, f7, f28, f26, rtz # perform operation
fmadd.s f12, f7, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f7, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f7, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f7, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f7, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f7, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x7d552e6a # load x3 with value 0x7d552e6a
sw x3, 0(x2) # store 0x7d552e6a in memory
flw f30, 0(x2) # load 0x7d552e6a from memory into f30
fmadd.s f5, f10, f21, f30, dyn # perform operation
fmadd.s f5, f10, f21, f30, rdn # perform operation
fmadd.s f5, f10, f21, f30, rmm # perform operation
fmadd.s f5, f10, f21, f30, rne # perform operation
fmadd.s f5, f10, f21, f30, rtz # perform operation
fmadd.s f5, f10, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0xa20b7037 # load x3 with value 0xa20b7037
sw x3, 0(x2) # store 0xa20b7037 in memory
flw f24, 0(x2) # load 0xa20b7037 from memory into f24
fmadd.s f6, f27, f12, f24, dyn # perform operation
fmadd.s f6, f27, f12, f24, rdn # perform operation
fmadd.s f6, f27, f12, f24, rmm # perform operation
fmadd.s f6, f27, f12, f24, rne # perform operation
fmadd.s f6, f27, f12, f24, rtz # perform operation
fmadd.s f6, f27, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f27, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f27, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0x017012bb # load x3 with value 0x017012bb
sw x3, 0(x2) # store 0x017012bb in memory
flw f2, 0(x2) # load 0x017012bb from memory into f2
fmadd.s f16, f28, f27, f2, dyn # perform operation
fmadd.s f16, f28, f27, f2, rdn # perform operation
fmadd.s f16, f28, f27, f2, rmm # perform operation
fmadd.s f16, f28, f27, f2, rne # perform operation
fmadd.s f16, f28, f27, f2, rtz # perform operation
fmadd.s f16, f28, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f27, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0x8b2213ad # load x3 with value 0x8b2213ad
sw x3, 0(x2) # store 0x8b2213ad in memory
flw f10, 0(x2) # load 0x8b2213ad from memory into f10
fmadd.s f26, f16, f6, f10, dyn # perform operation
fmadd.s f26, f16, f6, f10, rdn # perform operation
fmadd.s f26, f16, f6, f10, rmm # perform operation
fmadd.s f26, f16, f6, f10, rne # perform operation
fmadd.s f26, f16, f6, f10, rtz # perform operation
fmadd.s f26, f16, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f16, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f16, f6, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x4e81b1f4 # load x3 with value 0x4e81b1f4
sw x3, 0(x2) # store 0x4e81b1f4 in memory
flw f15, 0(x2) # load 0x4e81b1f4 from memory into f15
fmadd.s f9, f18, f5, f15, dyn # perform operation
fmadd.s f9, f18, f5, f15, rdn # perform operation
fmadd.s f9, f18, f5, f15, rmm # perform operation
fmadd.s f9, f18, f5, f15, rne # perform operation
fmadd.s f9, f18, f5, f15, rtz # perform operation
fmadd.s f9, f18, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f18, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f18, f5, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x2e5f8396 # load x3 with value 0x2e5f8396
sw x3, 0(x2) # store 0x2e5f8396 in memory
flw f2, 0(x2) # load 0x2e5f8396 from memory into f2
fmadd.s f17, f24, f22, f2, dyn # perform operation
fmadd.s f17, f24, f22, f2, rdn # perform operation
fmadd.s f17, f24, f22, f2, rmm # perform operation
fmadd.s f17, f24, f22, f2, rne # perform operation
fmadd.s f17, f24, f22, f2, rtz # perform operation
fmadd.s f17, f24, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f22, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x11c9e936 # load x3 with value 0x11c9e936
sw x3, 0(x2) # store 0x11c9e936 in memory
flw f27, 0(x2) # load 0x11c9e936 from memory into f27
fmadd.s f28, f17, f24, f27, dyn # perform operation
fmadd.s f28, f17, f24, f27, rdn # perform operation
fmadd.s f28, f17, f24, f27, rmm # perform operation
fmadd.s f28, f17, f24, f27, rne # perform operation
fmadd.s f28, f17, f24, f27, rtz # perform operation
fmadd.s f28, f17, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f24, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xc0b1963c # load x3 with value 0xc0b1963c
sw x3, 0(x2) # store 0xc0b1963c in memory
flw f25, 0(x2) # load 0xc0b1963c from memory into f25
fmadd.s f19, f10, f23, f25, dyn # perform operation
fmadd.s f19, f10, f23, f25, rdn # perform operation
fmadd.s f19, f10, f23, f25, rmm # perform operation
fmadd.s f19, f10, f23, f25, rne # perform operation
fmadd.s f19, f10, f23, f25, rtz # perform operation
fmadd.s f19, f10, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x717e36e9 # load x3 with value 0x717e36e9
sw x3, 0(x2) # store 0x717e36e9 in memory
flw f24, 0(x2) # load 0x717e36e9 from memory into f24
fmadd.s f26, f8, f16, f24, dyn # perform operation
fmadd.s f26, f8, f16, f24, rdn # perform operation
fmadd.s f26, f8, f16, f24, rmm # perform operation
fmadd.s f26, f8, f16, f24, rne # perform operation
fmadd.s f26, f8, f16, f24, rtz # perform operation
fmadd.s f26, f8, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f8, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f8, f16, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xdb4aa15b # load x3 with value 0xdb4aa15b
sw x3, 0(x2) # store 0xdb4aa15b in memory
flw f5, 0(x2) # load 0xdb4aa15b from memory into f5
fmadd.s f17, f26, f6, f5, dyn # perform operation
fmadd.s f17, f26, f6, f5, rdn # perform operation
fmadd.s f17, f26, f6, f5, rmm # perform operation
fmadd.s f17, f26, f6, f5, rne # perform operation
fmadd.s f17, f26, f6, f5, rtz # perform operation
fmadd.s f17, f26, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f6, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xe008ec0b # load x3 with value 0xe008ec0b
sw x3, 0(x2) # store 0xe008ec0b in memory
flw f14, 0(x2) # load 0xe008ec0b from memory into f14
fmadd.s f20, f5, f24, f14, dyn # perform operation
fmadd.s f20, f5, f24, f14, rdn # perform operation
fmadd.s f20, f5, f24, f14, rmm # perform operation
fmadd.s f20, f5, f24, f14, rne # perform operation
fmadd.s f20, f5, f24, f14, rtz # perform operation
fmadd.s f20, f5, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f5, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f5, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f5, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f5, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f5, f24, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xb75e3211 # load x3 with value 0xb75e3211
sw x3, 0(x2) # store 0xb75e3211 in memory
flw f10, 0(x2) # load 0xb75e3211 from memory into f10
fmadd.s f27, f1, f29, f10, dyn # perform operation
fmadd.s f27, f1, f29, f10, rdn # perform operation
fmadd.s f27, f1, f29, f10, rmm # perform operation
fmadd.s f27, f1, f29, f10, rne # perform operation
fmadd.s f27, f1, f29, f10, rtz # perform operation
fmadd.s f27, f1, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f29, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xe8cfc71b # load x3 with value 0xe8cfc71b
sw x3, 0(x2) # store 0xe8cfc71b in memory
flw f29, 0(x2) # load 0xe8cfc71b from memory into f29
fmadd.s f25, f24, f21, f29, dyn # perform operation
fmadd.s f25, f24, f21, f29, rdn # perform operation
fmadd.s f25, f24, f21, f29, rmm # perform operation
fmadd.s f25, f24, f21, f29, rne # perform operation
fmadd.s f25, f24, f21, f29, rtz # perform operation
fmadd.s f25, f24, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f24, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f24, f21, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x8da6f504 # load x3 with value 0x8da6f504
sw x3, 0(x2) # store 0x8da6f504 in memory
flw f12, 0(x2) # load 0x8da6f504 from memory into f12
fmadd.s f7, f1, f3, f12, dyn # perform operation
fmadd.s f7, f1, f3, f12, rdn # perform operation
fmadd.s f7, f1, f3, f12, rmm # perform operation
fmadd.s f7, f1, f3, f12, rne # perform operation
fmadd.s f7, f1, f3, f12, rtz # perform operation
fmadd.s f7, f1, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x409f26b3 # load x3 with value 0x409f26b3
sw x3, 0(x2) # store 0x409f26b3 in memory
flw f19, 0(x2) # load 0x409f26b3 from memory into f19
fmadd.s f8, f24, f9, f19, dyn # perform operation
fmadd.s f8, f24, f9, f19, rdn # perform operation
fmadd.s f8, f24, f9, f19, rmm # perform operation
fmadd.s f8, f24, f9, f19, rne # perform operation
fmadd.s f8, f24, f9, f19, rtz # perform operation
fmadd.s f8, f24, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0x614af95a # load x3 with value 0x614af95a
sw x3, 0(x2) # store 0x614af95a in memory
flw f5, 0(x2) # load 0x614af95a from memory into f5
fmadd.s f13, f8, f26, f5, dyn # perform operation
fmadd.s f13, f8, f26, f5, rdn # perform operation
fmadd.s f13, f8, f26, f5, rmm # perform operation
fmadd.s f13, f8, f26, f5, rne # perform operation
fmadd.s f13, f8, f26, f5, rtz # perform operation
fmadd.s f13, f8, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f26, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0xd1cc3cdc # load x3 with value 0xd1cc3cdc
sw x3, 0(x2) # store 0xd1cc3cdc in memory
flw f27, 0(x2) # load 0xd1cc3cdc from memory into f27
fmadd.s f9, f22, f18, f27, dyn # perform operation
fmadd.s f9, f22, f18, f27, rdn # perform operation
fmadd.s f9, f22, f18, f27, rmm # perform operation
fmadd.s f9, f22, f18, f27, rne # perform operation
fmadd.s f9, f22, f18, f27, rtz # perform operation
fmadd.s f9, f22, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f22, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f22, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x5d60cdf1 # load x3 with value 0x5d60cdf1
sw x3, 0(x2) # store 0x5d60cdf1 in memory
flw f10, 0(x2) # load 0x5d60cdf1 from memory into f10
fmadd.s f9, f13, f23, f10, dyn # perform operation
fmadd.s f9, f13, f23, f10, rdn # perform operation
fmadd.s f9, f13, f23, f10, rmm # perform operation
fmadd.s f9, f13, f23, f10, rne # perform operation
fmadd.s f9, f13, f23, f10, rtz # perform operation
fmadd.s f9, f13, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xf2c081f5 # load x3 with value 0xf2c081f5
sw x3, 0(x2) # store 0xf2c081f5 in memory
flw f7, 0(x2) # load 0xf2c081f5 from memory into f7
fmadd.s f31, f27, f26, f7, dyn # perform operation
fmadd.s f31, f27, f26, f7, rdn # perform operation
fmadd.s f31, f27, f26, f7, rmm # perform operation
fmadd.s f31, f27, f26, f7, rne # perform operation
fmadd.s f31, f27, f26, f7, rtz # perform operation
fmadd.s f31, f27, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f27, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f27, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xf7bda745 # load x3 with value 0xf7bda745
sw x3, 0(x2) # store 0xf7bda745 in memory
flw f7, 0(x2) # load 0xf7bda745 from memory into f7
fmadd.s f8, f28, f2, f7, dyn # perform operation
fmadd.s f8, f28, f2, f7, rdn # perform operation
fmadd.s f8, f28, f2, f7, rmm # perform operation
fmadd.s f8, f28, f2, f7, rne # perform operation
fmadd.s f8, f28, f2, f7, rtz # perform operation
fmadd.s f8, f28, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f28, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f28, f2, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xc0a9c020 # load x3 with value 0xc0a9c020
sw x3, 0(x2) # store 0xc0a9c020 in memory
flw f12, 0(x2) # load 0xc0a9c020 from memory into f12
fmadd.s f11, f30, f15, f12, dyn # perform operation
fmadd.s f11, f30, f15, f12, rdn # perform operation
fmadd.s f11, f30, f15, f12, rmm # perform operation
fmadd.s f11, f30, f15, f12, rne # perform operation
fmadd.s f11, f30, f15, f12, rtz # perform operation
fmadd.s f11, f30, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x61fe2e7a # load x3 with value 0x61fe2e7a
sw x3, 0(x2) # store 0x61fe2e7a in memory
flw f26, 0(x2) # load 0x61fe2e7a from memory into f26
fmadd.s f31, f1, f22, f26, dyn # perform operation
fmadd.s f31, f1, f22, f26, rdn # perform operation
fmadd.s f31, f1, f22, f26, rmm # perform operation
fmadd.s f31, f1, f22, f26, rne # perform operation
fmadd.s f31, f1, f22, f26, rtz # perform operation
fmadd.s f31, f1, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x90ab7e13 # load x3 with value 0x90ab7e13
sw x3, 0(x2) # store 0x90ab7e13 in memory
flw f10, 0(x2) # load 0x90ab7e13 from memory into f10
fmadd.s f26, f13, f30, f10, dyn # perform operation
fmadd.s f26, f13, f30, f10, rdn # perform operation
fmadd.s f26, f13, f30, f10, rmm # perform operation
fmadd.s f26, f13, f30, f10, rne # perform operation
fmadd.s f26, f13, f30, f10, rtz # perform operation
fmadd.s f26, f13, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x45dc9735 # load x3 with value 0x45dc9735
sw x3, 0(x2) # store 0x45dc9735 in memory
flw f15, 0(x2) # load 0x45dc9735 from memory into f15
fmadd.s f11, f21, f29, f15, dyn # perform operation
fmadd.s f11, f21, f29, f15, rdn # perform operation
fmadd.s f11, f21, f29, f15, rmm # perform operation
fmadd.s f11, f21, f29, f15, rne # perform operation
fmadd.s f11, f21, f29, f15, rtz # perform operation
fmadd.s f11, f21, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f21, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f21, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f21, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f21, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f21, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xd210dfca # load x3 with value 0xd210dfca
sw x3, 0(x2) # store 0xd210dfca in memory
flw f20, 0(x2) # load 0xd210dfca from memory into f20
fmadd.s f26, f19, f6, f20, dyn # perform operation
fmadd.s f26, f19, f6, f20, rdn # perform operation
fmadd.s f26, f19, f6, f20, rmm # perform operation
fmadd.s f26, f19, f6, f20, rne # perform operation
fmadd.s f26, f19, f6, f20, rtz # perform operation
fmadd.s f26, f19, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f19, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f19, f6, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x2658eaaa # load x3 with value 0x2658eaaa
sw x3, 0(x2) # store 0x2658eaaa in memory
flw f18, 0(x2) # load 0x2658eaaa from memory into f18
fmadd.s f27, f8, f13, f18, dyn # perform operation
fmadd.s f27, f8, f13, f18, rdn # perform operation
fmadd.s f27, f8, f13, f18, rmm # perform operation
fmadd.s f27, f8, f13, f18, rne # perform operation
fmadd.s f27, f8, f13, f18, rtz # perform operation
fmadd.s f27, f8, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f8, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f8, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f8, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f8, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f8, f13, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x4f5f8e02 # load x3 with value 0x4f5f8e02
sw x3, 0(x2) # store 0x4f5f8e02 in memory
flw f22, 0(x2) # load 0x4f5f8e02 from memory into f22
fmadd.s f23, f20, f19, f22, dyn # perform operation
fmadd.s f23, f20, f19, f22, rdn # perform operation
fmadd.s f23, f20, f19, f22, rmm # perform operation
fmadd.s f23, f20, f19, f22, rne # perform operation
fmadd.s f23, f20, f19, f22, rtz # perform operation
fmadd.s f23, f20, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f19, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0xfecea4a5 # load x3 with value 0xfecea4a5
sw x3, 0(x2) # store 0xfecea4a5 in memory
flw f5, 0(x2) # load 0xfecea4a5 from memory into f5
fmadd.s f26, f25, f30, f5, dyn # perform operation
fmadd.s f26, f25, f30, f5, rdn # perform operation
fmadd.s f26, f25, f30, f5, rmm # perform operation
fmadd.s f26, f25, f30, f5, rne # perform operation
fmadd.s f26, f25, f30, f5, rtz # perform operation
fmadd.s f26, f25, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x11d67adf # load x3 with value 0x11d67adf
sw x3, 0(x2) # store 0x11d67adf in memory
flw f27, 0(x2) # load 0x11d67adf from memory into f27
fmadd.s f21, f13, f16, f27, dyn # perform operation
fmadd.s f21, f13, f16, f27, rdn # perform operation
fmadd.s f21, f13, f16, f27, rmm # perform operation
fmadd.s f21, f13, f16, f27, rne # perform operation
fmadd.s f21, f13, f16, f27, rtz # perform operation
fmadd.s f21, f13, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x423f7118 # load x3 with value 0x423f7118
sw x3, 0(x2) # store 0x423f7118 in memory
flw f6, 0(x2) # load 0x423f7118 from memory into f6
fmadd.s f25, f10, f26, f6, dyn # perform operation
fmadd.s f25, f10, f26, f6, rdn # perform operation
fmadd.s f25, f10, f26, f6, rmm # perform operation
fmadd.s f25, f10, f26, f6, rne # perform operation
fmadd.s f25, f10, f26, f6, rtz # perform operation
fmadd.s f25, f10, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xbdf4455f # load x3 with value 0xbdf4455f
sw x3, 0(x2) # store 0xbdf4455f in memory
flw f3, 0(x2) # load 0xbdf4455f from memory into f3
fmadd.s f18, f7, f13, f3, dyn # perform operation
fmadd.s f18, f7, f13, f3, rdn # perform operation
fmadd.s f18, f7, f13, f3, rmm # perform operation
fmadd.s f18, f7, f13, f3, rne # perform operation
fmadd.s f18, f7, f13, f3, rtz # perform operation
fmadd.s f18, f7, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x861ab955 # load x3 with value 0x861ab955
sw x3, 0(x2) # store 0x861ab955 in memory
flw f18, 0(x2) # load 0x861ab955 from memory into f18
fmadd.s f13, f5, f3, f18, dyn # perform operation
fmadd.s f13, f5, f3, f18, rdn # perform operation
fmadd.s f13, f5, f3, f18, rmm # perform operation
fmadd.s f13, f5, f3, f18, rne # perform operation
fmadd.s f13, f5, f3, f18, rtz # perform operation
fmadd.s f13, f5, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f3, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x153595df # load x3 with value 0x153595df
sw x3, 0(x2) # store 0x153595df in memory
flw f2, 0(x2) # load 0x153595df from memory into f2
fmadd.s f10, f28, f12, f2, dyn # perform operation
fmadd.s f10, f28, f12, f2, rdn # perform operation
fmadd.s f10, f28, f12, f2, rmm # perform operation
fmadd.s f10, f28, f12, f2, rne # perform operation
fmadd.s f10, f28, f12, f2, rtz # perform operation
fmadd.s f10, f28, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x6cc43111 # load x3 with value 0x6cc43111
sw x3, 0(x2) # store 0x6cc43111 in memory
flw f11, 0(x2) # load 0x6cc43111 from memory into f11
fmadd.s f14, f7, f21, f11, dyn # perform operation
fmadd.s f14, f7, f21, f11, rdn # perform operation
fmadd.s f14, f7, f21, f11, rmm # perform operation
fmadd.s f14, f7, f21, f11, rne # perform operation
fmadd.s f14, f7, f21, f11, rtz # perform operation
fmadd.s f14, f7, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f21, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
la x2, scratch
li x3, 0xb86a2067 # load x3 with value 0xb86a2067
sw x3, 0(x2) # store 0xb86a2067 in memory
flw f31, 0(x2) # load 0xb86a2067 from memory into f31
fmadd.s f11, f22, f6, f31, dyn # perform operation
fmadd.s f11, f22, f6, f31, rdn # perform operation
fmadd.s f11, f22, f6, f31, rmm # perform operation
fmadd.s f11, f22, f6, f31, rne # perform operation
fmadd.s f11, f22, f6, f31, rtz # perform operation
fmadd.s f11, f22, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f22, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f22, f6, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x3059a450 # load x3 with value 0x3059a450
sw x3, 0(x2) # store 0x3059a450 in memory
flw f2, 0(x2) # load 0x3059a450 from memory into f2
fmadd.s f28, f3, f23, f2, dyn # perform operation
fmadd.s f28, f3, f23, f2, rdn # perform operation
fmadd.s f28, f3, f23, f2, rmm # perform operation
fmadd.s f28, f3, f23, f2, rne # perform operation
fmadd.s f28, f3, f23, f2, rtz # perform operation
fmadd.s f28, f3, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x2daf83b9 # load x3 with value 0x2daf83b9
sw x3, 0(x2) # store 0x2daf83b9 in memory
flw f19, 0(x2) # load 0x2daf83b9 from memory into f19
fmadd.s f6, f14, f9, f19, dyn # perform operation
fmadd.s f6, f14, f9, f19, rdn # perform operation
fmadd.s f6, f14, f9, f19, rmm # perform operation
fmadd.s f6, f14, f9, f19, rne # perform operation
fmadd.s f6, f14, f9, f19, rtz # perform operation
fmadd.s f6, f14, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f14, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f14, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x20103008 # load x3 with value 0x20103008
sw x3, 0(x2) # store 0x20103008 in memory
flw f21, 0(x2) # load 0x20103008 from memory into f21
fmadd.s f26, f13, f14, f21, dyn # perform operation
fmadd.s f26, f13, f14, f21, rdn # perform operation
fmadd.s f26, f13, f14, f21, rmm # perform operation
fmadd.s f26, f13, f14, f21, rne # perform operation
fmadd.s f26, f13, f14, f21, rtz # perform operation
fmadd.s f26, f13, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f14, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0xfd259cae # load x3 with value 0xfd259cae
sw x3, 0(x2) # store 0xfd259cae in memory
flw f5, 0(x2) # load 0xfd259cae from memory into f5
fmadd.s f7, f20, f8, f5, dyn # perform operation
fmadd.s f7, f20, f8, f5, rdn # perform operation
fmadd.s f7, f20, f8, f5, rmm # perform operation
fmadd.s f7, f20, f8, f5, rne # perform operation
fmadd.s f7, f20, f8, f5, rtz # perform operation
fmadd.s f7, f20, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xb2d12bd8 # load x3 with value 0xb2d12bd8
sw x3, 0(x2) # store 0xb2d12bd8 in memory
flw f13, 0(x2) # load 0xb2d12bd8 from memory into f13
fmadd.s f3, f20, f2, f13, dyn # perform operation
fmadd.s f3, f20, f2, f13, rdn # perform operation
fmadd.s f3, f20, f2, f13, rmm # perform operation
fmadd.s f3, f20, f2, f13, rne # perform operation
fmadd.s f3, f20, f2, f13, rtz # perform operation
fmadd.s f3, f20, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f2, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
la x2, scratch
li x3, 0xd312f934 # load x3 with value 0xd312f934
sw x3, 0(x2) # store 0xd312f934 in memory
flw f23, 0(x2) # load 0xd312f934 from memory into f23
fmadd.s f3, f10, f1, f23, dyn # perform operation
fmadd.s f3, f10, f1, f23, rdn # perform operation
fmadd.s f3, f10, f1, f23, rmm # perform operation
fmadd.s f3, f10, f1, f23, rne # perform operation
fmadd.s f3, f10, f1, f23, rtz # perform operation
fmadd.s f3, f10, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f1, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x644fdf2a # load x3 with value 0x644fdf2a
sw x3, 0(x2) # store 0x644fdf2a in memory
flw f2, 0(x2) # load 0x644fdf2a from memory into f2
fmadd.s f29, f31, f21, f2, dyn # perform operation
fmadd.s f29, f31, f21, f2, rdn # perform operation
fmadd.s f29, f31, f21, f2, rmm # perform operation
fmadd.s f29, f31, f21, f2, rne # perform operation
fmadd.s f29, f31, f21, f2, rtz # perform operation
fmadd.s f29, f31, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x5211e3b0 # load x3 with value 0x5211e3b0
sw x3, 0(x2) # store 0x5211e3b0 in memory
flw f27, 0(x2) # load 0x5211e3b0 from memory into f27
fmadd.s f7, f11, f16, f27, dyn # perform operation
fmadd.s f7, f11, f16, f27, rdn # perform operation
fmadd.s f7, f11, f16, f27, rmm # perform operation
fmadd.s f7, f11, f16, f27, rne # perform operation
fmadd.s f7, f11, f16, f27, rtz # perform operation
fmadd.s f7, f11, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f16, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x710a6ecd # load x3 with value 0x710a6ecd
sw x3, 0(x2) # store 0x710a6ecd in memory
flw f16, 0(x2) # load 0x710a6ecd from memory into f16
fmadd.s f9, f26, f1, f16, dyn # perform operation
fmadd.s f9, f26, f1, f16, rdn # perform operation
fmadd.s f9, f26, f1, f16, rmm # perform operation
fmadd.s f9, f26, f1, f16, rne # perform operation
fmadd.s f9, f26, f1, f16, rtz # perform operation
fmadd.s f9, f26, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f1, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xa61eaf9a # load x3 with value 0xa61eaf9a
sw x3, 0(x2) # store 0xa61eaf9a in memory
flw f15, 0(x2) # load 0xa61eaf9a from memory into f15
fmadd.s f18, f28, f11, f15, dyn # perform operation
fmadd.s f18, f28, f11, f15, rdn # perform operation
fmadd.s f18, f28, f11, f15, rmm # perform operation
fmadd.s f18, f28, f11, f15, rne # perform operation
fmadd.s f18, f28, f11, f15, rtz # perform operation
fmadd.s f18, f28, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x1954e557 # load x3 with value 0x1954e557
sw x3, 0(x2) # store 0x1954e557 in memory
flw f7, 0(x2) # load 0x1954e557 from memory into f7
fmadd.s f6, f13, f26, f7, dyn # perform operation
fmadd.s f6, f13, f26, f7, rdn # perform operation
fmadd.s f6, f13, f26, f7, rmm # perform operation
fmadd.s f6, f13, f26, f7, rne # perform operation
fmadd.s f6, f13, f26, f7, rtz # perform operation
fmadd.s f6, f13, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f26, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xeb179701 # load x3 with value 0xeb179701
sw x3, 0(x2) # store 0xeb179701 in memory
flw f29, 0(x2) # load 0xeb179701 from memory into f29
fmadd.s f17, f28, f6, f29, dyn # perform operation
fmadd.s f17, f28, f6, f29, rdn # perform operation
fmadd.s f17, f28, f6, f29, rmm # perform operation
fmadd.s f17, f28, f6, f29, rne # perform operation
fmadd.s f17, f28, f6, f29, rtz # perform operation
fmadd.s f17, f28, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f6, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f18, 0(x2) # load 0x00000000 from memory into f18
la x2, scratch
li x3, 0x03c87757 # load x3 with value 0x03c87757
sw x3, 0(x2) # store 0x03c87757 in memory
flw f2, 0(x2) # load 0x03c87757 from memory into f2
fmadd.s f30, f19, f18, f2, dyn # perform operation
fmadd.s f30, f19, f18, f2, rdn # perform operation
fmadd.s f30, f19, f18, f2, rmm # perform operation
fmadd.s f30, f19, f18, f2, rne # perform operation
fmadd.s f30, f19, f18, f2, rtz # perform operation
fmadd.s f30, f19, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
la x2, scratch
li x3, 0xf8ba83d8 # load x3 with value 0xf8ba83d8
sw x3, 0(x2) # store 0xf8ba83d8 in memory
flw f12, 0(x2) # load 0xf8ba83d8 from memory into f12
fmadd.s f26, f7, f6, f12, dyn # perform operation
fmadd.s f26, f7, f6, f12, rdn # perform operation
fmadd.s f26, f7, f6, f12, rmm # perform operation
fmadd.s f26, f7, f6, f12, rne # perform operation
fmadd.s f26, f7, f6, f12, rtz # perform operation
fmadd.s f26, f7, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f7, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
la x2, scratch
li x3, 0xf19c1ab8 # load x3 with value 0xf19c1ab8
sw x3, 0(x2) # store 0xf19c1ab8 in memory
flw f18, 0(x2) # load 0xf19c1ab8 from memory into f18
fmadd.s f7, f23, f6, f18, dyn # perform operation
fmadd.s f7, f23, f6, f18, rdn # perform operation
fmadd.s f7, f23, f6, f18, rmm # perform operation
fmadd.s f7, f23, f6, f18, rne # perform operation
fmadd.s f7, f23, f6, f18, rtz # perform operation
fmadd.s f7, f23, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
la x2, scratch
li x3, 0xb644775b # load x3 with value 0xb644775b
sw x3, 0(x2) # store 0xb644775b in memory
flw f2, 0(x2) # load 0xb644775b from memory into f2
fmadd.s f24, f23, f31, f2, dyn # perform operation
fmadd.s f24, f23, f31, f2, rdn # perform operation
fmadd.s f24, f23, f31, f2, rmm # perform operation
fmadd.s f24, f23, f31, f2, rne # perform operation
fmadd.s f24, f23, f31, f2, rtz # perform operation
fmadd.s f24, f23, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f31, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x4034fb17 # load x3 with value 0x4034fb17
sw x3, 0(x2) # store 0x4034fb17 in memory
flw f28, 0(x2) # load 0x4034fb17 from memory into f28
fmadd.s f22, f31, f3, f28, dyn # perform operation
fmadd.s f22, f31, f3, f28, rdn # perform operation
fmadd.s f22, f31, f3, f28, rmm # perform operation
fmadd.s f22, f31, f3, f28, rne # perform operation
fmadd.s f22, f31, f3, f28, rtz # perform operation
fmadd.s f22, f31, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f31, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f31, f3, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x92266c83 # load x3 with value 0x92266c83
sw x3, 0(x2) # store 0x92266c83 in memory
flw f11, 0(x2) # load 0x92266c83 from memory into f11
fmadd.s f16, f12, f10, f11, dyn # perform operation
fmadd.s f16, f12, f10, f11, rdn # perform operation
fmadd.s f16, f12, f10, f11, rmm # perform operation
fmadd.s f16, f12, f10, f11, rne # perform operation
fmadd.s f16, f12, f10, f11, rtz # perform operation
fmadd.s f16, f12, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f10, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x47f53ec6 # load x3 with value 0x47f53ec6
sw x3, 0(x2) # store 0x47f53ec6 in memory
flw f31, 0(x2) # load 0x47f53ec6 from memory into f31
fmadd.s f3, f22, f20, f31, dyn # perform operation
fmadd.s f3, f22, f20, f31, rdn # perform operation
fmadd.s f3, f22, f20, f31, rmm # perform operation
fmadd.s f3, f22, f20, f31, rne # perform operation
fmadd.s f3, f22, f20, f31, rtz # perform operation
fmadd.s f3, f22, f20, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f22, f20, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f22, f20, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xc3210d13 # load x3 with value 0xc3210d13
sw x3, 0(x2) # store 0xc3210d13 in memory
flw f27, 0(x2) # load 0xc3210d13 from memory into f27
fmadd.s f24, f10, f30, f27, dyn # perform operation
fmadd.s f24, f10, f30, f27, rdn # perform operation
fmadd.s f24, f10, f30, f27, rmm # perform operation
fmadd.s f24, f10, f30, f27, rne # perform operation
fmadd.s f24, f10, f30, f27, rtz # perform operation
fmadd.s f24, f10, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x1de31a62 # load x3 with value 0x1de31a62
sw x3, 0(x2) # store 0x1de31a62 in memory
flw f6, 0(x2) # load 0x1de31a62 from memory into f6
fmadd.s f21, f31, f12, f6, dyn # perform operation
fmadd.s f21, f31, f12, f6, rdn # perform operation
fmadd.s f21, f31, f12, f6, rmm # perform operation
fmadd.s f21, f31, f12, f6, rne # perform operation
fmadd.s f21, f31, f12, f6, rtz # perform operation
fmadd.s f21, f31, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f12, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
la x2, scratch
li x3, 0x60f3d291 # load x3 with value 0x60f3d291
sw x3, 0(x2) # store 0x60f3d291 in memory
flw f9, 0(x2) # load 0x60f3d291 from memory into f9
fmadd.s f8, f6, f28, f9, dyn # perform operation
fmadd.s f8, f6, f28, f9, rdn # perform operation
fmadd.s f8, f6, f28, f9, rmm # perform operation
fmadd.s f8, f6, f28, f9, rne # perform operation
fmadd.s f8, f6, f28, f9, rtz # perform operation
fmadd.s f8, f6, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f6, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f6, f28, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x3ad952e4 # load x3 with value 0x3ad952e4
sw x3, 0(x2) # store 0x3ad952e4 in memory
flw f30, 0(x2) # load 0x3ad952e4 from memory into f30
fmadd.s f29, f9, f12, f30, dyn # perform operation
fmadd.s f29, f9, f12, f30, rdn # perform operation
fmadd.s f29, f9, f12, f30, rmm # perform operation
fmadd.s f29, f9, f12, f30, rne # perform operation
fmadd.s f29, f9, f12, f30, rtz # perform operation
fmadd.s f29, f9, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x6306eda7 # load x3 with value 0x6306eda7
sw x3, 0(x2) # store 0x6306eda7 in memory
flw f12, 0(x2) # load 0x6306eda7 from memory into f12
fmadd.s f9, f30, f18, f12, dyn # perform operation
fmadd.s f9, f30, f18, f12, rdn # perform operation
fmadd.s f9, f30, f18, f12, rmm # perform operation
fmadd.s f9, f30, f18, f12, rne # perform operation
fmadd.s f9, f30, f18, f12, rtz # perform operation
fmadd.s f9, f30, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f18, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xfa85a996 # load x3 with value 0xfa85a996
sw x3, 0(x2) # store 0xfa85a996 in memory
flw f20, 0(x2) # load 0xfa85a996 from memory into f20
fmadd.s f29, f24, f18, f20, dyn # perform operation
fmadd.s f29, f24, f18, f20, rdn # perform operation
fmadd.s f29, f24, f18, f20, rmm # perform operation
fmadd.s f29, f24, f18, f20, rne # perform operation
fmadd.s f29, f24, f18, f20, rtz # perform operation
fmadd.s f29, f24, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f24, f18, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0x2b51f645 # load x3 with value 0x2b51f645
sw x3, 0(x2) # store 0x2b51f645 in memory
flw f18, 0(x2) # load 0x2b51f645 from memory into f18
fmadd.s f8, f31, f22, f18, dyn # perform operation
fmadd.s f8, f31, f22, f18, rdn # perform operation
fmadd.s f8, f31, f22, f18, rmm # perform operation
fmadd.s f8, f31, f22, f18, rne # perform operation
fmadd.s f8, f31, f22, f18, rtz # perform operation
fmadd.s f8, f31, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f22, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xc54fdc07 # load x3 with value 0xc54fdc07
sw x3, 0(x2) # store 0xc54fdc07 in memory
flw f26, 0(x2) # load 0xc54fdc07 from memory into f26
fmadd.s f9, f10, f20, f26, dyn # perform operation
fmadd.s f9, f10, f20, f26, rdn # perform operation
fmadd.s f9, f10, f20, f26, rmm # perform operation
fmadd.s f9, f10, f20, f26, rne # perform operation
fmadd.s f9, f10, f20, f26, rtz # perform operation
fmadd.s f9, f10, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f10, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f10, f20, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x0ccbc310 # load x3 with value 0x0ccbc310
sw x3, 0(x2) # store 0x0ccbc310 in memory
flw f1, 0(x2) # load 0x0ccbc310 from memory into f1
fmadd.s f2, f12, f22, f1, dyn # perform operation
fmadd.s f2, f12, f22, f1, rdn # perform operation
fmadd.s f2, f12, f22, f1, rmm # perform operation
fmadd.s f2, f12, f22, f1, rne # perform operation
fmadd.s f2, f12, f22, f1, rtz # perform operation
fmadd.s f2, f12, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f12, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f12, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f12, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f12, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f12, f22, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0xe50ec0d9 # load x3 with value 0xe50ec0d9
sw x3, 0(x2) # store 0xe50ec0d9 in memory
flw f24, 0(x2) # load 0xe50ec0d9 from memory into f24
fmadd.s f10, f26, f30, f24, dyn # perform operation
fmadd.s f10, f26, f30, f24, rdn # perform operation
fmadd.s f10, f26, f30, f24, rmm # perform operation
fmadd.s f10, f26, f30, f24, rne # perform operation
fmadd.s f10, f26, f30, f24, rtz # perform operation
fmadd.s f10, f26, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f26, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f26, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f26, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f26, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f26, f30, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0xee79b28c # load x3 with value 0xee79b28c
sw x3, 0(x2) # store 0xee79b28c in memory
flw f6, 0(x2) # load 0xee79b28c from memory into f6
fmadd.s f16, f21, f7, f6, dyn # perform operation
fmadd.s f16, f21, f7, f6, rdn # perform operation
fmadd.s f16, f21, f7, f6, rmm # perform operation
fmadd.s f16, f21, f7, f6, rne # perform operation
fmadd.s f16, f21, f7, f6, rtz # perform operation
fmadd.s f16, f21, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
la x2, scratch
li x3, 0x99964b76 # load x3 with value 0x99964b76
sw x3, 0(x2) # store 0x99964b76 in memory
flw f19, 0(x2) # load 0x99964b76 from memory into f19
fmadd.s f29, f22, f12, f19, dyn # perform operation
fmadd.s f29, f22, f12, f19, rdn # perform operation
fmadd.s f29, f22, f12, f19, rmm # perform operation
fmadd.s f29, f22, f12, f19, rne # perform operation
fmadd.s f29, f22, f12, f19, rtz # perform operation
fmadd.s f29, f22, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f22, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f22, f12, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x0e86f1dd # load x3 with value 0x0e86f1dd
sw x3, 0(x2) # store 0x0e86f1dd in memory
flw f28, 0(x2) # load 0x0e86f1dd from memory into f28
fmadd.s f18, f11, f12, f28, dyn # perform operation
fmadd.s f18, f11, f12, f28, rdn # perform operation
fmadd.s f18, f11, f12, f28, rmm # perform operation
fmadd.s f18, f11, f12, f28, rne # perform operation
fmadd.s f18, f11, f12, f28, rtz # perform operation
fmadd.s f18, f11, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f12, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0x148e5639 # load x3 with value 0x148e5639
sw x3, 0(x2) # store 0x148e5639 in memory
flw f28, 0(x2) # load 0x148e5639 from memory into f28
fmadd.s f6, f3, f2, f28, dyn # perform operation
fmadd.s f6, f3, f2, f28, rdn # perform operation
fmadd.s f6, f3, f2, f28, rmm # perform operation
fmadd.s f6, f3, f2, f28, rne # perform operation
fmadd.s f6, f3, f2, f28, rtz # perform operation
fmadd.s f6, f3, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f2, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x76112c48 # load x3 with value 0x76112c48
sw x3, 0(x2) # store 0x76112c48 in memory
flw f1, 0(x2) # load 0x76112c48 from memory into f1
fmadd.s f23, f14, f12, f1, dyn # perform operation
fmadd.s f23, f14, f12, f1, rdn # perform operation
fmadd.s f23, f14, f12, f1, rmm # perform operation
fmadd.s f23, f14, f12, f1, rne # perform operation
fmadd.s f23, f14, f12, f1, rtz # perform operation
fmadd.s f23, f14, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f14, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f14, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x68a04431 # load x3 with value 0x68a04431
sw x3, 0(x2) # store 0x68a04431 in memory
flw f1, 0(x2) # load 0x68a04431 from memory into f1
fmadd.s f5, f16, f24, f1, dyn # perform operation
fmadd.s f5, f16, f24, f1, rdn # perform operation
fmadd.s f5, f16, f24, f1, rmm # perform operation
fmadd.s f5, f16, f24, f1, rne # perform operation
fmadd.s f5, f16, f24, f1, rtz # perform operation
fmadd.s f5, f16, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f16, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f16, f24, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x6c9410ef # load x3 with value 0x6c9410ef
sw x3, 0(x2) # store 0x6c9410ef in memory
flw f16, 0(x2) # load 0x6c9410ef from memory into f16
fmadd.s f8, f13, f31, f16, dyn # perform operation
fmadd.s f8, f13, f31, f16, rdn # perform operation
fmadd.s f8, f13, f31, f16, rmm # perform operation
fmadd.s f8, f13, f31, f16, rne # perform operation
fmadd.s f8, f13, f31, f16, rtz # perform operation
fmadd.s f8, f13, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f31, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xa8f73357 # load x3 with value 0xa8f73357
sw x3, 0(x2) # store 0xa8f73357 in memory
flw f22, 0(x2) # load 0xa8f73357 from memory into f22
fmadd.s f17, f23, f21, f22, dyn # perform operation
fmadd.s f17, f23, f21, f22, rdn # perform operation
fmadd.s f17, f23, f21, f22, rmm # perform operation
fmadd.s f17, f23, f21, f22, rne # perform operation
fmadd.s f17, f23, f21, f22, rtz # perform operation
fmadd.s f17, f23, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xc2fd5787 # load x3 with value 0xc2fd5787
sw x3, 0(x2) # store 0xc2fd5787 in memory
flw f11, 0(x2) # load 0xc2fd5787 from memory into f11
fmadd.s f30, f1, f13, f11, dyn # perform operation
fmadd.s f30, f1, f13, f11, rdn # perform operation
fmadd.s f30, f1, f13, f11, rmm # perform operation
fmadd.s f30, f1, f13, f11, rne # perform operation
fmadd.s f30, f1, f13, f11, rtz # perform operation
fmadd.s f30, f1, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f1, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f1, f13, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x8407316f # load x3 with value 0x8407316f
sw x3, 0(x2) # store 0x8407316f in memory
flw f30, 0(x2) # load 0x8407316f from memory into f30
fmadd.s f31, f28, f5, f30, dyn # perform operation
fmadd.s f31, f28, f5, f30, rdn # perform operation
fmadd.s f31, f28, f5, f30, rmm # perform operation
fmadd.s f31, f28, f5, f30, rne # perform operation
fmadd.s f31, f28, f5, f30, rtz # perform operation
fmadd.s f31, f28, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f5, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0x561649b7 # load x3 with value 0x561649b7
sw x3, 0(x2) # store 0x561649b7 in memory
flw f26, 0(x2) # load 0x561649b7 from memory into f26
fmadd.s f8, f28, f1, f26, dyn # perform operation
fmadd.s f8, f28, f1, f26, rdn # perform operation
fmadd.s f8, f28, f1, f26, rmm # perform operation
fmadd.s f8, f28, f1, f26, rne # perform operation
fmadd.s f8, f28, f1, f26, rtz # perform operation
fmadd.s f8, f28, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f28, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f28, f1, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0xb437fb59 # load x3 with value 0xb437fb59
sw x3, 0(x2) # store 0xb437fb59 in memory
flw f13, 0(x2) # load 0xb437fb59 from memory into f13
fmadd.s f23, f22, f17, f13, dyn # perform operation
fmadd.s f23, f22, f17, f13, rdn # perform operation
fmadd.s f23, f22, f17, f13, rmm # perform operation
fmadd.s f23, f22, f17, f13, rne # perform operation
fmadd.s f23, f22, f17, f13, rtz # perform operation
fmadd.s f23, f22, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
la x2, scratch
li x3, 0x4ff97806 # load x3 with value 0x4ff97806
sw x3, 0(x2) # store 0x4ff97806 in memory
flw f29, 0(x2) # load 0x4ff97806 from memory into f29
fmadd.s f3, f31, f20, f29, dyn # perform operation
fmadd.s f3, f31, f20, f29, rdn # perform operation
fmadd.s f3, f31, f20, f29, rmm # perform operation
fmadd.s f3, f31, f20, f29, rne # perform operation
fmadd.s f3, f31, f20, f29, rtz # perform operation
fmadd.s f3, f31, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x240d9a79 # load x3 with value 0x240d9a79
sw x3, 0(x2) # store 0x240d9a79 in memory
flw f25, 0(x2) # load 0x240d9a79 from memory into f25
fmadd.s f6, f19, f16, f25, dyn # perform operation
fmadd.s f6, f19, f16, f25, rdn # perform operation
fmadd.s f6, f19, f16, f25, rmm # perform operation
fmadd.s f6, f19, f16, f25, rne # perform operation
fmadd.s f6, f19, f16, f25, rtz # perform operation
fmadd.s f6, f19, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f16, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
la x2, scratch
li x3, 0xefdd1802 # load x3 with value 0xefdd1802
sw x3, 0(x2) # store 0xefdd1802 in memory
flw f26, 0(x2) # load 0xefdd1802 from memory into f26
fmadd.s f17, f14, f19, f26, dyn # perform operation
fmadd.s f17, f14, f19, f26, rdn # perform operation
fmadd.s f17, f14, f19, f26, rmm # perform operation
fmadd.s f17, f14, f19, f26, rne # perform operation
fmadd.s f17, f14, f19, f26, rtz # perform operation
fmadd.s f17, f14, f19, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f19, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f19, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0x5b46e8de # load x3 with value 0x5b46e8de
sw x3, 0(x2) # store 0x5b46e8de in memory
flw f19, 0(x2) # load 0x5b46e8de from memory into f19
fmadd.s f18, f29, f9, f19, dyn # perform operation
fmadd.s f18, f29, f9, f19, rdn # perform operation
fmadd.s f18, f29, f9, f19, rmm # perform operation
fmadd.s f18, f29, f9, f19, rne # perform operation
fmadd.s f18, f29, f9, f19, rtz # perform operation
fmadd.s f18, f29, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f9, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x70d6466e # load x3 with value 0x70d6466e
sw x3, 0(x2) # store 0x70d6466e in memory
flw f24, 0(x2) # load 0x70d6466e from memory into f24
fmadd.s f31, f5, f20, f24, dyn # perform operation
fmadd.s f31, f5, f20, f24, rdn # perform operation
fmadd.s f31, f5, f20, f24, rmm # perform operation
fmadd.s f31, f5, f20, f24, rne # perform operation
fmadd.s f31, f5, f20, f24, rtz # perform operation
fmadd.s f31, f5, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x80a51ae4 # load x3 with value 0x80a51ae4
sw x3, 0(x2) # store 0x80a51ae4 in memory
flw f14, 0(x2) # load 0x80a51ae4 from memory into f14
fmadd.s f28, f27, f20, f14, dyn # perform operation
fmadd.s f28, f27, f20, f14, rdn # perform operation
fmadd.s f28, f27, f20, f14, rmm # perform operation
fmadd.s f28, f27, f20, f14, rne # perform operation
fmadd.s f28, f27, f20, f14, rtz # perform operation
fmadd.s f28, f27, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f20, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0xff865170 # load x3 with value 0xff865170
sw x3, 0(x2) # store 0xff865170 in memory
flw f23, 0(x2) # load 0xff865170 from memory into f23
fmadd.s f13, f2, f30, f23, dyn # perform operation
fmadd.s f13, f2, f30, f23, rdn # perform operation
fmadd.s f13, f2, f30, f23, rmm # perform operation
fmadd.s f13, f2, f30, f23, rne # perform operation
fmadd.s f13, f2, f30, f23, rtz # perform operation
fmadd.s f13, f2, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f30, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
la x2, scratch
li x3, 0xf558d739 # load x3 with value 0xf558d739
sw x3, 0(x2) # store 0xf558d739 in memory
flw f27, 0(x2) # load 0xf558d739 from memory into f27
fmadd.s f19, f7, f20, f27, dyn # perform operation
fmadd.s f19, f7, f20, f27, rdn # perform operation
fmadd.s f19, f7, f20, f27, rmm # perform operation
fmadd.s f19, f7, f20, f27, rne # perform operation
fmadd.s f19, f7, f20, f27, rtz # perform operation
fmadd.s f19, f7, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x6ef4604f # load x3 with value 0x6ef4604f
sw x3, 0(x2) # store 0x6ef4604f in memory
flw f2, 0(x2) # load 0x6ef4604f from memory into f2
fmadd.s f24, f26, f13, f2, dyn # perform operation
fmadd.s f24, f26, f13, f2, rdn # perform operation
fmadd.s f24, f26, f13, f2, rmm # perform operation
fmadd.s f24, f26, f13, f2, rne # perform operation
fmadd.s f24, f26, f13, f2, rtz # perform operation
fmadd.s f24, f26, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f13, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x70e13fb8 # load x3 with value 0x70e13fb8
sw x3, 0(x2) # store 0x70e13fb8 in memory
flw f19, 0(x2) # load 0x70e13fb8 from memory into f19
fmadd.s f30, f16, f28, f19, dyn # perform operation
fmadd.s f30, f16, f28, f19, rdn # perform operation
fmadd.s f30, f16, f28, f19, rmm # perform operation
fmadd.s f30, f16, f28, f19, rne # perform operation
fmadd.s f30, f16, f28, f19, rtz # perform operation
fmadd.s f30, f16, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f16, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f16, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xd6be04cd # load x3 with value 0xd6be04cd
sw x3, 0(x2) # store 0xd6be04cd in memory
flw f28, 0(x2) # load 0xd6be04cd from memory into f28
fmadd.s f25, f31, f19, f28, dyn # perform operation
fmadd.s f25, f31, f19, f28, rdn # perform operation
fmadd.s f25, f31, f19, f28, rmm # perform operation
fmadd.s f25, f31, f19, f28, rne # perform operation
fmadd.s f25, f31, f19, f28, rtz # perform operation
fmadd.s f25, f31, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f19, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x613da762 # load x3 with value 0x613da762
sw x3, 0(x2) # store 0x613da762 in memory
flw f17, 0(x2) # load 0x613da762 from memory into f17
fmadd.s f11, f31, f1, f17, dyn # perform operation
fmadd.s f11, f31, f1, f17, rdn # perform operation
fmadd.s f11, f31, f1, f17, rmm # perform operation
fmadd.s f11, f31, f1, f17, rne # perform operation
fmadd.s f11, f31, f1, f17, rtz # perform operation
fmadd.s f11, f31, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f1, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
la x2, scratch
li x3, 0x3081cf10 # load x3 with value 0x3081cf10
sw x3, 0(x2) # store 0x3081cf10 in memory
flw f5, 0(x2) # load 0x3081cf10 from memory into f5
fmadd.s f24, f11, f3, f5, dyn # perform operation
fmadd.s f24, f11, f3, f5, rdn # perform operation
fmadd.s f24, f11, f3, f5, rmm # perform operation
fmadd.s f24, f11, f3, f5, rne # perform operation
fmadd.s f24, f11, f3, f5, rtz # perform operation
fmadd.s f24, f11, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x7fc903c0 # load x3 with value 0x7fc903c0
sw x3, 0(x2) # store 0x7fc903c0 in memory
flw f8, 0(x2) # load 0x7fc903c0 from memory into f8
fmadd.s f11, f21, f14, f8, dyn # perform operation
fmadd.s f11, f21, f14, f8, rdn # perform operation
fmadd.s f11, f21, f14, f8, rmm # perform operation
fmadd.s f11, f21, f14, f8, rne # perform operation
fmadd.s f11, f21, f14, f8, rtz # perform operation
fmadd.s f11, f21, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f21, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x9d6fbe80 # load x3 with value 0x9d6fbe80
sw x3, 0(x2) # store 0x9d6fbe80 in memory
flw f27, 0(x2) # load 0x9d6fbe80 from memory into f27
fmadd.s f14, f26, f30, f27, dyn # perform operation
fmadd.s f14, f26, f30, f27, rdn # perform operation
fmadd.s f14, f26, f30, f27, rmm # perform operation
fmadd.s f14, f26, f30, f27, rne # perform operation
fmadd.s f14, f26, f30, f27, rtz # perform operation
fmadd.s f14, f26, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f26, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f26, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f26, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f26, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f26, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
la x2, scratch
li x3, 0xe6549a35 # load x3 with value 0xe6549a35
sw x3, 0(x2) # store 0xe6549a35 in memory
flw f8, 0(x2) # load 0xe6549a35 from memory into f8
fmadd.s f25, f20, f14, f8, dyn # perform operation
fmadd.s f25, f20, f14, f8, rdn # perform operation
fmadd.s f25, f20, f14, f8, rmm # perform operation
fmadd.s f25, f20, f14, f8, rne # perform operation
fmadd.s f25, f20, f14, f8, rtz # perform operation
fmadd.s f25, f20, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xe9a1c7be # load x3 with value 0xe9a1c7be
sw x3, 0(x2) # store 0xe9a1c7be in memory
flw f1, 0(x2) # load 0xe9a1c7be from memory into f1
fmadd.s f24, f18, f29, f1, dyn # perform operation
fmadd.s f24, f18, f29, f1, rdn # perform operation
fmadd.s f24, f18, f29, f1, rmm # perform operation
fmadd.s f24, f18, f29, f1, rne # perform operation
fmadd.s f24, f18, f29, f1, rtz # perform operation
fmadd.s f24, f18, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f29, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x3efb4733 # load x3 with value 0x3efb4733
sw x3, 0(x2) # store 0x3efb4733 in memory
flw f8, 0(x2) # load 0x3efb4733 from memory into f8
fmadd.s f26, f23, f24, f8, dyn # perform operation
fmadd.s f26, f23, f24, f8, rdn # perform operation
fmadd.s f26, f23, f24, f8, rmm # perform operation
fmadd.s f26, f23, f24, f8, rne # perform operation
fmadd.s f26, f23, f24, f8, rtz # perform operation
fmadd.s f26, f23, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0xc4ecce31 # load x3 with value 0xc4ecce31
sw x3, 0(x2) # store 0xc4ecce31 in memory
flw f13, 0(x2) # load 0xc4ecce31 from memory into f13
fmadd.s f22, f18, f17, f13, dyn # perform operation
fmadd.s f22, f18, f17, f13, rdn # perform operation
fmadd.s f22, f18, f17, f13, rmm # perform operation
fmadd.s f22, f18, f17, f13, rne # perform operation
fmadd.s f22, f18, f17, f13, rtz # perform operation
fmadd.s f22, f18, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f17, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xab0fd9af # load x3 with value 0xab0fd9af
sw x3, 0(x2) # store 0xab0fd9af in memory
flw f7, 0(x2) # load 0xab0fd9af from memory into f7
fmadd.s f10, f16, f29, f7, dyn # perform operation
fmadd.s f10, f16, f29, f7, rdn # perform operation
fmadd.s f10, f16, f29, f7, rmm # perform operation
fmadd.s f10, f16, f29, f7, rne # perform operation
fmadd.s f10, f16, f29, f7, rtz # perform operation
fmadd.s f10, f16, f29, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f29, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f29, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xb35e276f # load x3 with value 0xb35e276f
sw x3, 0(x2) # store 0xb35e276f in memory
flw f25, 0(x2) # load 0xb35e276f from memory into f25
fmadd.s f20, f31, f23, f25, dyn # perform operation
fmadd.s f20, f31, f23, f25, rdn # perform operation
fmadd.s f20, f31, f23, f25, rmm # perform operation
fmadd.s f20, f31, f23, f25, rne # perform operation
fmadd.s f20, f31, f23, f25, rtz # perform operation
fmadd.s f20, f31, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f31, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f31, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f31, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f31, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f31, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xcc18f81a # load x3 with value 0xcc18f81a
sw x3, 0(x2) # store 0xcc18f81a in memory
flw f23, 0(x2) # load 0xcc18f81a from memory into f23
fmadd.s f22, f3, f25, f23, dyn # perform operation
fmadd.s f22, f3, f25, f23, rdn # perform operation
fmadd.s f22, f3, f25, f23, rmm # perform operation
fmadd.s f22, f3, f25, f23, rne # perform operation
fmadd.s f22, f3, f25, f23, rtz # perform operation
fmadd.s f22, f3, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f3, f25, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x6deef080 # load x3 with value 0x6deef080
sw x3, 0(x2) # store 0x6deef080 in memory
flw f15, 0(x2) # load 0x6deef080 from memory into f15
fmadd.s f14, f17, f23, f15, dyn # perform operation
fmadd.s f14, f17, f23, f15, rdn # perform operation
fmadd.s f14, f17, f23, f15, rmm # perform operation
fmadd.s f14, f17, f23, f15, rne # perform operation
fmadd.s f14, f17, f23, f15, rtz # perform operation
fmadd.s f14, f17, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f23, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x22ede324 # load x3 with value 0x22ede324
sw x3, 0(x2) # store 0x22ede324 in memory
flw f9, 0(x2) # load 0x22ede324 from memory into f9
fmadd.s f22, f24, f14, f9, dyn # perform operation
fmadd.s f22, f24, f14, f9, rdn # perform operation
fmadd.s f22, f24, f14, f9, rmm # perform operation
fmadd.s f22, f24, f14, f9, rne # perform operation
fmadd.s f22, f24, f14, f9, rtz # perform operation
fmadd.s f22, f24, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f14, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0xdf9153fe # load x3 with value 0xdf9153fe
sw x3, 0(x2) # store 0xdf9153fe in memory
flw f8, 0(x2) # load 0xdf9153fe from memory into f8
fmadd.s f12, f20, f31, f8, dyn # perform operation
fmadd.s f12, f20, f31, f8, rdn # perform operation
fmadd.s f12, f20, f31, f8, rmm # perform operation
fmadd.s f12, f20, f31, f8, rne # perform operation
fmadd.s f12, f20, f31, f8, rtz # perform operation
fmadd.s f12, f20, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f31, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x0705c183 # load x3 with value 0x0705c183
sw x3, 0(x2) # store 0x0705c183 in memory
flw f29, 0(x2) # load 0x0705c183 from memory into f29
fmadd.s f27, f17, f8, f29, dyn # perform operation
fmadd.s f27, f17, f8, f29, rdn # perform operation
fmadd.s f27, f17, f8, f29, rmm # perform operation
fmadd.s f27, f17, f8, f29, rne # perform operation
fmadd.s f27, f17, f8, f29, rtz # perform operation
fmadd.s f27, f17, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x36f6b4d3 # load x3 with value 0x36f6b4d3
sw x3, 0(x2) # store 0x36f6b4d3 in memory
flw f6, 0(x2) # load 0x36f6b4d3 from memory into f6
fmadd.s f1, f29, f18, f6, dyn # perform operation
fmadd.s f1, f29, f18, f6, rdn # perform operation
fmadd.s f1, f29, f18, f6, rmm # perform operation
fmadd.s f1, f29, f18, f6, rne # perform operation
fmadd.s f1, f29, f18, f6, rtz # perform operation
fmadd.s f1, f29, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f29, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f29, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f29, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f29, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f29, f18, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x13f5a0e4 # load x3 with value 0x13f5a0e4
sw x3, 0(x2) # store 0x13f5a0e4 in memory
flw f2, 0(x2) # load 0x13f5a0e4 from memory into f2
fmadd.s f31, f15, f21, f2, dyn # perform operation
fmadd.s f31, f15, f21, f2, rdn # perform operation
fmadd.s f31, f15, f21, f2, rmm # perform operation
fmadd.s f31, f15, f21, f2, rne # perform operation
fmadd.s f31, f15, f21, f2, rtz # perform operation
fmadd.s f31, f15, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f15, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f15, f21, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xd20c253c # load x3 with value 0xd20c253c
sw x3, 0(x2) # store 0xd20c253c in memory
flw f6, 0(x2) # load 0xd20c253c from memory into f6
fmadd.s f3, f15, f10, f6, dyn # perform operation
fmadd.s f3, f15, f10, f6, rdn # perform operation
fmadd.s f3, f15, f10, f6, rmm # perform operation
fmadd.s f3, f15, f10, f6, rne # perform operation
fmadd.s f3, f15, f10, f6, rtz # perform operation
fmadd.s f3, f15, f10, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f10, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f10, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f10, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f10, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f10, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x9b0fcbc7 # load x3 with value 0x9b0fcbc7
sw x3, 0(x2) # store 0x9b0fcbc7 in memory
flw f13, 0(x2) # load 0x9b0fcbc7 from memory into f13
fmadd.s f12, f7, f25, f13, dyn # perform operation
fmadd.s f12, f7, f25, f13, rdn # perform operation
fmadd.s f12, f7, f25, f13, rmm # perform operation
fmadd.s f12, f7, f25, f13, rne # perform operation
fmadd.s f12, f7, f25, f13, rtz # perform operation
fmadd.s f12, f7, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f7, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f7, f25, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x49198f88 # load x3 with value 0x49198f88
sw x3, 0(x2) # store 0x49198f88 in memory
flw f22, 0(x2) # load 0x49198f88 from memory into f22
fmadd.s f26, f20, f24, f22, dyn # perform operation
fmadd.s f26, f20, f24, f22, rdn # perform operation
fmadd.s f26, f20, f24, f22, rmm # perform operation
fmadd.s f26, f20, f24, f22, rne # perform operation
fmadd.s f26, f20, f24, f22, rtz # perform operation
fmadd.s f26, f20, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0x72c89ed0 # load x3 with value 0x72c89ed0
sw x3, 0(x2) # store 0x72c89ed0 in memory
flw f22, 0(x2) # load 0x72c89ed0 from memory into f22
fmadd.s f23, f20, f30, f22, dyn # perform operation
fmadd.s f23, f20, f30, f22, rdn # perform operation
fmadd.s f23, f20, f30, f22, rmm # perform operation
fmadd.s f23, f20, f30, f22, rne # perform operation
fmadd.s f23, f20, f30, f22, rtz # perform operation
fmadd.s f23, f20, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f30, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xa8000ff2 # load x3 with value 0xa8000ff2
sw x3, 0(x2) # store 0xa8000ff2 in memory
flw f16, 0(x2) # load 0xa8000ff2 from memory into f16
fmadd.s f25, f5, f3, f16, dyn # perform operation
fmadd.s f25, f5, f3, f16, rdn # perform operation
fmadd.s f25, f5, f3, f16, rmm # perform operation
fmadd.s f25, f5, f3, f16, rne # perform operation
fmadd.s f25, f5, f3, f16, rtz # perform operation
fmadd.s f25, f5, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f3, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0xdf25124d # load x3 with value 0xdf25124d
sw x3, 0(x2) # store 0xdf25124d in memory
flw f11, 0(x2) # load 0xdf25124d from memory into f11
fmadd.s f16, f8, f28, f11, dyn # perform operation
fmadd.s f16, f8, f28, f11, rdn # perform operation
fmadd.s f16, f8, f28, f11, rmm # perform operation
fmadd.s f16, f8, f28, f11, rne # perform operation
fmadd.s f16, f8, f28, f11, rtz # perform operation
fmadd.s f16, f8, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f8, f28, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x92d7c9dc # load x3 with value 0x92d7c9dc
sw x3, 0(x2) # store 0x92d7c9dc in memory
flw f15, 0(x2) # load 0x92d7c9dc from memory into f15
fmadd.s f28, f23, f16, f15, dyn # perform operation
fmadd.s f28, f23, f16, f15, rdn # perform operation
fmadd.s f28, f23, f16, f15, rmm # perform operation
fmadd.s f28, f23, f16, f15, rne # perform operation
fmadd.s f28, f23, f16, f15, rtz # perform operation
fmadd.s f28, f23, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f16, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x515f6159 # load x3 with value 0x515f6159
sw x3, 0(x2) # store 0x515f6159 in memory
flw f12, 0(x2) # load 0x515f6159 from memory into f12
fmadd.s f15, f27, f28, f12, dyn # perform operation
fmadd.s f15, f27, f28, f12, rdn # perform operation
fmadd.s f15, f27, f28, f12, rmm # perform operation
fmadd.s f15, f27, f28, f12, rne # perform operation
fmadd.s f15, f27, f28, f12, rtz # perform operation
fmadd.s f15, f27, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f28, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0x7a069973 # load x3 with value 0x7a069973
sw x3, 0(x2) # store 0x7a069973 in memory
flw f8, 0(x2) # load 0x7a069973 from memory into f8
fmadd.s f23, f1, f14, f8, dyn # perform operation
fmadd.s f23, f1, f14, f8, rdn # perform operation
fmadd.s f23, f1, f14, f8, rmm # perform operation
fmadd.s f23, f1, f14, f8, rne # perform operation
fmadd.s f23, f1, f14, f8, rtz # perform operation
fmadd.s f23, f1, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xae55136c # load x3 with value 0xae55136c
sw x3, 0(x2) # store 0xae55136c in memory
flw f17, 0(x2) # load 0xae55136c from memory into f17
fmadd.s f23, f31, f11, f17, dyn # perform operation
fmadd.s f23, f31, f11, f17, rdn # perform operation
fmadd.s f23, f31, f11, f17, rmm # perform operation
fmadd.s f23, f31, f11, f17, rne # perform operation
fmadd.s f23, f31, f11, f17, rtz # perform operation
fmadd.s f23, f31, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f11, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
la x2, scratch
li x3, 0x3a9eb52f # load x3 with value 0x3a9eb52f
sw x3, 0(x2) # store 0x3a9eb52f in memory
flw f6, 0(x2) # load 0x3a9eb52f from memory into f6
fmadd.s f1, f8, f30, f6, dyn # perform operation
fmadd.s f1, f8, f30, f6, rdn # perform operation
fmadd.s f1, f8, f30, f6, rmm # perform operation
fmadd.s f1, f8, f30, f6, rne # perform operation
fmadd.s f1, f8, f30, f6, rtz # perform operation
fmadd.s f1, f8, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f8, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f8, f30, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0x3f0ca492 # load x3 with value 0x3f0ca492
sw x3, 0(x2) # store 0x3f0ca492 in memory
flw f21, 0(x2) # load 0x3f0ca492 from memory into f21
fmadd.s f2, f29, f22, f21, dyn # perform operation
fmadd.s f2, f29, f22, f21, rdn # perform operation
fmadd.s f2, f29, f22, f21, rmm # perform operation
fmadd.s f2, f29, f22, f21, rne # perform operation
fmadd.s f2, f29, f22, f21, rtz # perform operation
fmadd.s f2, f29, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f22, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x4a6a46f9 # load x3 with value 0x4a6a46f9
sw x3, 0(x2) # store 0x4a6a46f9 in memory
flw f26, 0(x2) # load 0x4a6a46f9 from memory into f26
fmadd.s f30, f20, f25, f26, dyn # perform operation
fmadd.s f30, f20, f25, f26, rdn # perform operation
fmadd.s f30, f20, f25, f26, rmm # perform operation
fmadd.s f30, f20, f25, f26, rne # perform operation
fmadd.s f30, f20, f25, f26, rtz # perform operation
fmadd.s f30, f20, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f25, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xaf40c2e6 # load x3 with value 0xaf40c2e6
sw x3, 0(x2) # store 0xaf40c2e6 in memory
flw f5, 0(x2) # load 0xaf40c2e6 from memory into f5
fmadd.s f28, f10, f23, f5, dyn # perform operation
fmadd.s f28, f10, f23, f5, rdn # perform operation
fmadd.s f28, f10, f23, f5, rmm # perform operation
fmadd.s f28, f10, f23, f5, rne # perform operation
fmadd.s f28, f10, f23, f5, rtz # perform operation
fmadd.s f28, f10, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f10, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f10, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x69979778 # load x3 with value 0x69979778
sw x3, 0(x2) # store 0x69979778 in memory
flw f26, 0(x2) # load 0x69979778 from memory into f26
fmadd.s f3, f14, f28, f26, dyn # perform operation
fmadd.s f3, f14, f28, f26, rdn # perform operation
fmadd.s f3, f14, f28, f26, rmm # perform operation
fmadd.s f3, f14, f28, f26, rne # perform operation
fmadd.s f3, f14, f28, f26, rtz # perform operation
fmadd.s f3, f14, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f14, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f14, f28, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x5976e643 # load x3 with value 0x5976e643
sw x3, 0(x2) # store 0x5976e643 in memory
flw f1, 0(x2) # load 0x5976e643 from memory into f1
fmadd.s f10, f12, f2, f1, dyn # perform operation
fmadd.s f10, f12, f2, f1, rdn # perform operation
fmadd.s f10, f12, f2, f1, rmm # perform operation
fmadd.s f10, f12, f2, f1, rne # perform operation
fmadd.s f10, f12, f2, f1, rtz # perform operation
fmadd.s f10, f12, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f2, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xe859ea61 # load x3 with value 0xe859ea61
sw x3, 0(x2) # store 0xe859ea61 in memory
flw f17, 0(x2) # load 0xe859ea61 from memory into f17
fmadd.s f12, f5, f29, f17, dyn # perform operation
fmadd.s f12, f5, f29, f17, rdn # perform operation
fmadd.s f12, f5, f29, f17, rmm # perform operation
fmadd.s f12, f5, f29, f17, rne # perform operation
fmadd.s f12, f5, f29, f17, rtz # perform operation
fmadd.s f12, f5, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0x09a3b248 # load x3 with value 0x09a3b248
sw x3, 0(x2) # store 0x09a3b248 in memory
flw f17, 0(x2) # load 0x09a3b248 from memory into f17
fmadd.s f6, f13, f5, f17, dyn # perform operation
fmadd.s f6, f13, f5, f17, rdn # perform operation
fmadd.s f6, f13, f5, f17, rmm # perform operation
fmadd.s f6, f13, f5, f17, rne # perform operation
fmadd.s f6, f13, f5, f17, rtz # perform operation
fmadd.s f6, f13, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f5, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0xf1729db2 # load x3 with value 0xf1729db2
sw x3, 0(x2) # store 0xf1729db2 in memory
flw f19, 0(x2) # load 0xf1729db2 from memory into f19
fmadd.s f3, f27, f28, f19, dyn # perform operation
fmadd.s f3, f27, f28, f19, rdn # perform operation
fmadd.s f3, f27, f28, f19, rmm # perform operation
fmadd.s f3, f27, f28, f19, rne # perform operation
fmadd.s f3, f27, f28, f19, rtz # perform operation
fmadd.s f3, f27, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f27, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f27, f28, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xa5541217 # load x3 with value 0xa5541217
sw x3, 0(x2) # store 0xa5541217 in memory
flw f25, 0(x2) # load 0xa5541217 from memory into f25
fmadd.s f8, f2, f28, f25, dyn # perform operation
fmadd.s f8, f2, f28, f25, rdn # perform operation
fmadd.s f8, f2, f28, f25, rmm # perform operation
fmadd.s f8, f2, f28, f25, rne # perform operation
fmadd.s f8, f2, f28, f25, rtz # perform operation
fmadd.s f8, f2, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x3335b7a7 # load x3 with value 0x3335b7a7
sw x3, 0(x2) # store 0x3335b7a7 in memory
flw f24, 0(x2) # load 0x3335b7a7 from memory into f24
fmadd.s f28, f7, f20, f24, dyn # perform operation
fmadd.s f28, f7, f20, f24, rdn # perform operation
fmadd.s f28, f7, f20, f24, rmm # perform operation
fmadd.s f28, f7, f20, f24, rne # perform operation
fmadd.s f28, f7, f20, f24, rtz # perform operation
fmadd.s f28, f7, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0xc3bbcfe5 # load x3 with value 0xc3bbcfe5
sw x3, 0(x2) # store 0xc3bbcfe5 in memory
flw f30, 0(x2) # load 0xc3bbcfe5 from memory into f30
fmadd.s f12, f16, f21, f30, dyn # perform operation
fmadd.s f12, f16, f21, f30, rdn # perform operation
fmadd.s f12, f16, f21, f30, rmm # perform operation
fmadd.s f12, f16, f21, f30, rne # perform operation
fmadd.s f12, f16, f21, f30, rtz # perform operation
fmadd.s f12, f16, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f16, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f16, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x8a148cfd # load x3 with value 0x8a148cfd
sw x3, 0(x2) # store 0x8a148cfd in memory
flw f9, 0(x2) # load 0x8a148cfd from memory into f9
fmadd.s f7, f2, f1, f9, dyn # perform operation
fmadd.s f7, f2, f1, f9, rdn # perform operation
fmadd.s f7, f2, f1, f9, rmm # perform operation
fmadd.s f7, f2, f1, f9, rne # perform operation
fmadd.s f7, f2, f1, f9, rtz # perform operation
fmadd.s f7, f2, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f1, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x815e7e4d # load x3 with value 0x815e7e4d
sw x3, 0(x2) # store 0x815e7e4d in memory
flw f28, 0(x2) # load 0x815e7e4d from memory into f28
fmadd.s f16, f19, f29, f28, dyn # perform operation
fmadd.s f16, f19, f29, f28, rdn # perform operation
fmadd.s f16, f19, f29, f28, rmm # perform operation
fmadd.s f16, f19, f29, f28, rne # perform operation
fmadd.s f16, f19, f29, f28, rtz # perform operation
fmadd.s f16, f19, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f19, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f19, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f19, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f19, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f19, f29, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x1729447d # load x3 with value 0x1729447d
sw x3, 0(x2) # store 0x1729447d in memory
flw f16, 0(x2) # load 0x1729447d from memory into f16
fmadd.s f23, f10, f11, f16, dyn # perform operation
fmadd.s f23, f10, f11, f16, rdn # perform operation
fmadd.s f23, f10, f11, f16, rmm # perform operation
fmadd.s f23, f10, f11, f16, rne # perform operation
fmadd.s f23, f10, f11, f16, rtz # perform operation
fmadd.s f23, f10, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f11, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0xc31a6304 # load x3 with value 0xc31a6304
sw x3, 0(x2) # store 0xc31a6304 in memory
flw f7, 0(x2) # load 0xc31a6304 from memory into f7
fmadd.s f10, f26, f24, f7, dyn # perform operation
fmadd.s f10, f26, f24, f7, rdn # perform operation
fmadd.s f10, f26, f24, f7, rmm # perform operation
fmadd.s f10, f26, f24, f7, rne # perform operation
fmadd.s f10, f26, f24, f7, rtz # perform operation
fmadd.s f10, f26, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f26, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f26, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0xcfc406f7 # load x3 with value 0xcfc406f7
sw x3, 0(x2) # store 0xcfc406f7 in memory
flw f3, 0(x2) # load 0xcfc406f7 from memory into f3
fmadd.s f18, f15, f14, f3, dyn # perform operation
fmadd.s f18, f15, f14, f3, rdn # perform operation
fmadd.s f18, f15, f14, f3, rmm # perform operation
fmadd.s f18, f15, f14, f3, rne # perform operation
fmadd.s f18, f15, f14, f3, rtz # perform operation
fmadd.s f18, f15, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f14, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x97206e0c # load x3 with value 0x97206e0c
sw x3, 0(x2) # store 0x97206e0c in memory
flw f26, 0(x2) # load 0x97206e0c from memory into f26
fmadd.s f25, f13, f9, f26, dyn # perform operation
fmadd.s f25, f13, f9, f26, rdn # perform operation
fmadd.s f25, f13, f9, f26, rmm # perform operation
fmadd.s f25, f13, f9, f26, rne # perform operation
fmadd.s f25, f13, f9, f26, rtz # perform operation
fmadd.s f25, f13, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f9, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
la x2, scratch
li x3, 0xd2b18240 # load x3 with value 0xd2b18240
sw x3, 0(x2) # store 0xd2b18240 in memory
flw f6, 0(x2) # load 0xd2b18240 from memory into f6
fmadd.s f31, f2, f15, f6, dyn # perform operation
fmadd.s f31, f2, f15, f6, rdn # perform operation
fmadd.s f31, f2, f15, f6, rmm # perform operation
fmadd.s f31, f2, f15, f6, rne # perform operation
fmadd.s f31, f2, f15, f6, rtz # perform operation
fmadd.s f31, f2, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f15, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
la x2, scratch
li x3, 0x677d71aa # load x3 with value 0x677d71aa
sw x3, 0(x2) # store 0x677d71aa in memory
flw f6, 0(x2) # load 0x677d71aa from memory into f6
fmadd.s f11, f17, f7, f6, dyn # perform operation
fmadd.s f11, f17, f7, f6, rdn # perform operation
fmadd.s f11, f17, f7, f6, rmm # perform operation
fmadd.s f11, f17, f7, f6, rne # perform operation
fmadd.s f11, f17, f7, f6, rtz # perform operation
fmadd.s f11, f17, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f17, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f17, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f17, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f17, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f17, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
la x2, scratch
li x3, 0x26cae676 # load x3 with value 0x26cae676
sw x3, 0(x2) # store 0x26cae676 in memory
flw f22, 0(x2) # load 0x26cae676 from memory into f22
fmadd.s f18, f6, f27, f22, dyn # perform operation
fmadd.s f18, f6, f27, f22, rdn # perform operation
fmadd.s f18, f6, f27, f22, rmm # perform operation
fmadd.s f18, f6, f27, f22, rne # perform operation
fmadd.s f18, f6, f27, f22, rtz # perform operation
fmadd.s f18, f6, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x5dee410b # load x3 with value 0x5dee410b
sw x3, 0(x2) # store 0x5dee410b in memory
flw f3, 0(x2) # load 0x5dee410b from memory into f3
fmadd.s f8, f14, f19, f3, dyn # perform operation
fmadd.s f8, f14, f19, f3, rdn # perform operation
fmadd.s f8, f14, f19, f3, rmm # perform operation
fmadd.s f8, f14, f19, f3, rne # perform operation
fmadd.s f8, f14, f19, f3, rtz # perform operation
fmadd.s f8, f14, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
la x2, scratch
li x3, 0xd8f0c647 # load x3 with value 0xd8f0c647
sw x3, 0(x2) # store 0xd8f0c647 in memory
flw f15, 0(x2) # load 0xd8f0c647 from memory into f15
fmadd.s f13, f19, f22, f15, dyn # perform operation
fmadd.s f13, f19, f22, f15, rdn # perform operation
fmadd.s f13, f19, f22, f15, rmm # perform operation
fmadd.s f13, f19, f22, f15, rne # perform operation
fmadd.s f13, f19, f22, f15, rtz # perform operation
fmadd.s f13, f19, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f22, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
la x2, scratch
li x3, 0x1175af2a # load x3 with value 0x1175af2a
sw x3, 0(x2) # store 0x1175af2a in memory
flw f19, 0(x2) # load 0x1175af2a from memory into f19
fmadd.s f11, f24, f16, f19, dyn # perform operation
fmadd.s f11, f24, f16, f19, rdn # perform operation
fmadd.s f11, f24, f16, f19, rmm # perform operation
fmadd.s f11, f24, f16, f19, rne # perform operation
fmadd.s f11, f24, f16, f19, rtz # perform operation
fmadd.s f11, f24, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f16, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x4b1c511b # load x3 with value 0x4b1c511b
sw x3, 0(x2) # store 0x4b1c511b in memory
flw f14, 0(x2) # load 0x4b1c511b from memory into f14
fmadd.s f5, f3, f16, f14, dyn # perform operation
fmadd.s f5, f3, f16, f14, rdn # perform operation
fmadd.s f5, f3, f16, f14, rmm # perform operation
fmadd.s f5, f3, f16, f14, rne # perform operation
fmadd.s f5, f3, f16, f14, rtz # perform operation
fmadd.s f5, f3, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f16, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xac2b71b1 # load x3 with value 0xac2b71b1
sw x3, 0(x2) # store 0xac2b71b1 in memory
flw f14, 0(x2) # load 0xac2b71b1 from memory into f14
fmadd.s f8, f13, f18, f14, dyn # perform operation
fmadd.s f8, f13, f18, f14, rdn # perform operation
fmadd.s f8, f13, f18, f14, rmm # perform operation
fmadd.s f8, f13, f18, f14, rne # perform operation
fmadd.s f8, f13, f18, f14, rtz # perform operation
fmadd.s f8, f13, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xac29eaaf # load x3 with value 0xac29eaaf
sw x3, 0(x2) # store 0xac29eaaf in memory
flw f29, 0(x2) # load 0xac29eaaf from memory into f29
fmadd.s f3, f24, f8, f29, dyn # perform operation
fmadd.s f3, f24, f8, f29, rdn # perform operation
fmadd.s f3, f24, f8, f29, rmm # perform operation
fmadd.s f3, f24, f8, f29, rne # perform operation
fmadd.s f3, f24, f8, f29, rtz # perform operation
fmadd.s f3, f24, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f24, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f24, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x339df18d # load x3 with value 0x339df18d
sw x3, 0(x2) # store 0x339df18d in memory
flw f24, 0(x2) # load 0x339df18d from memory into f24
fmadd.s f13, f27, f5, f24, dyn # perform operation
fmadd.s f13, f27, f5, f24, rdn # perform operation
fmadd.s f13, f27, f5, f24, rmm # perform operation
fmadd.s f13, f27, f5, f24, rne # perform operation
fmadd.s f13, f27, f5, f24, rtz # perform operation
fmadd.s f13, f27, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xd22b2bf2 # load x3 with value 0xd22b2bf2
sw x3, 0(x2) # store 0xd22b2bf2 in memory
flw f9, 0(x2) # load 0xd22b2bf2 from memory into f9
fmadd.s f29, f6, f23, f9, dyn # perform operation
fmadd.s f29, f6, f23, f9, rdn # perform operation
fmadd.s f29, f6, f23, f9, rmm # perform operation
fmadd.s f29, f6, f23, f9, rne # perform operation
fmadd.s f29, f6, f23, f9, rtz # perform operation
fmadd.s f29, f6, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f23, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xf4c5bc7e # load x3 with value 0xf4c5bc7e
sw x3, 0(x2) # store 0xf4c5bc7e in memory
flw f3, 0(x2) # load 0xf4c5bc7e from memory into f3
fmadd.s f7, f29, f6, f3, dyn # perform operation
fmadd.s f7, f29, f6, f3, rdn # perform operation
fmadd.s f7, f29, f6, f3, rmm # perform operation
fmadd.s f7, f29, f6, f3, rne # perform operation
fmadd.s f7, f29, f6, f3, rtz # perform operation
fmadd.s f7, f29, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f29, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f29, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f29, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f29, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f29, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xb5817fa5 # load x3 with value 0xb5817fa5
sw x3, 0(x2) # store 0xb5817fa5 in memory
flw f19, 0(x2) # load 0xb5817fa5 from memory into f19
fmadd.s f3, f31, f25, f19, dyn # perform operation
fmadd.s f3, f31, f25, f19, rdn # perform operation
fmadd.s f3, f31, f25, f19, rmm # perform operation
fmadd.s f3, f31, f25, f19, rne # perform operation
fmadd.s f3, f31, f25, f19, rtz # perform operation
fmadd.s f3, f31, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xfd1c93a8 # load x3 with value 0xfd1c93a8
sw x3, 0(x2) # store 0xfd1c93a8 in memory
flw f3, 0(x2) # load 0xfd1c93a8 from memory into f3
fmadd.s f21, f27, f15, f3, dyn # perform operation
fmadd.s f21, f27, f15, f3, rdn # perform operation
fmadd.s f21, f27, f15, f3, rmm # perform operation
fmadd.s f21, f27, f15, f3, rne # perform operation
fmadd.s f21, f27, f15, f3, rtz # perform operation
fmadd.s f21, f27, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xaf465fb7 # load x3 with value 0xaf465fb7
sw x3, 0(x2) # store 0xaf465fb7 in memory
flw f3, 0(x2) # load 0xaf465fb7 from memory into f3
fmadd.s f17, f23, f30, f3, dyn # perform operation
fmadd.s f17, f23, f30, f3, rdn # perform operation
fmadd.s f17, f23, f30, f3, rmm # perform operation
fmadd.s f17, f23, f30, f3, rne # perform operation
fmadd.s f17, f23, f30, f3, rtz # perform operation
fmadd.s f17, f23, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f30, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0xbb9d4e54 # load x3 with value 0xbb9d4e54
sw x3, 0(x2) # store 0xbb9d4e54 in memory
flw f2, 0(x2) # load 0xbb9d4e54 from memory into f2
fmadd.s f7, f9, f8, f2, dyn # perform operation
fmadd.s f7, f9, f8, f2, rdn # perform operation
fmadd.s f7, f9, f8, f2, rmm # perform operation
fmadd.s f7, f9, f8, f2, rne # perform operation
fmadd.s f7, f9, f8, f2, rtz # perform operation
fmadd.s f7, f9, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f8, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x32eb2642 # load x3 with value 0x32eb2642
sw x3, 0(x2) # store 0x32eb2642 in memory
flw f29, 0(x2) # load 0x32eb2642 from memory into f29
fmadd.s f22, f14, f17, f29, dyn # perform operation
fmadd.s f22, f14, f17, f29, rdn # perform operation
fmadd.s f22, f14, f17, f29, rmm # perform operation
fmadd.s f22, f14, f17, f29, rne # perform operation
fmadd.s f22, f14, f17, f29, rtz # perform operation
fmadd.s f22, f14, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f14, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f14, f17, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x940f9115 # load x3 with value 0x940f9115
sw x3, 0(x2) # store 0x940f9115 in memory
flw f21, 0(x2) # load 0x940f9115 from memory into f21
fmadd.s f25, f16, f13, f21, dyn # perform operation
fmadd.s f25, f16, f13, f21, rdn # perform operation
fmadd.s f25, f16, f13, f21, rmm # perform operation
fmadd.s f25, f16, f13, f21, rne # perform operation
fmadd.s f25, f16, f13, f21, rtz # perform operation
fmadd.s f25, f16, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f16, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f16, f13, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xf18054fc # load x3 with value 0xf18054fc
sw x3, 0(x2) # store 0xf18054fc in memory
flw f21, 0(x2) # load 0xf18054fc from memory into f21
fmadd.s f12, f19, f7, f21, dyn # perform operation
fmadd.s f12, f19, f7, f21, rdn # perform operation
fmadd.s f12, f19, f7, f21, rmm # perform operation
fmadd.s f12, f19, f7, f21, rne # perform operation
fmadd.s f12, f19, f7, f21, rtz # perform operation
fmadd.s f12, f19, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f7, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x0ecfaeb5 # load x3 with value 0x0ecfaeb5
sw x3, 0(x2) # store 0x0ecfaeb5 in memory
flw f8, 0(x2) # load 0x0ecfaeb5 from memory into f8
fmadd.s f23, f26, f19, f8, dyn # perform operation
fmadd.s f23, f26, f19, f8, rdn # perform operation
fmadd.s f23, f26, f19, f8, rmm # perform operation
fmadd.s f23, f26, f19, f8, rne # perform operation
fmadd.s f23, f26, f19, f8, rtz # perform operation
fmadd.s f23, f26, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f19, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
la x2, scratch
li x3, 0xd12eff56 # load x3 with value 0xd12eff56
sw x3, 0(x2) # store 0xd12eff56 in memory
flw f30, 0(x2) # load 0xd12eff56 from memory into f30
fmadd.s f1, f31, f27, f30, dyn # perform operation
fmadd.s f1, f31, f27, f30, rdn # perform operation
fmadd.s f1, f31, f27, f30, rmm # perform operation
fmadd.s f1, f31, f27, f30, rne # perform operation
fmadd.s f1, f31, f27, f30, rtz # perform operation
fmadd.s f1, f31, f27, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f27, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f27, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x4985739a # load x3 with value 0x4985739a
sw x3, 0(x2) # store 0x4985739a in memory
flw f11, 0(x2) # load 0x4985739a from memory into f11
fmadd.s f23, f31, f20, f11, dyn # perform operation
fmadd.s f23, f31, f20, f11, rdn # perform operation
fmadd.s f23, f31, f20, f11, rmm # perform operation
fmadd.s f23, f31, f20, f11, rne # perform operation
fmadd.s f23, f31, f20, f11, rtz # perform operation
fmadd.s f23, f31, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f20, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0xda6d17a4 # load x3 with value 0xda6d17a4
sw x3, 0(x2) # store 0xda6d17a4 in memory
flw f9, 0(x2) # load 0xda6d17a4 from memory into f9
fmadd.s f12, f22, f6, f9, dyn # perform operation
fmadd.s f12, f22, f6, f9, rdn # perform operation
fmadd.s f12, f22, f6, f9, rmm # perform operation
fmadd.s f12, f22, f6, f9, rne # perform operation
fmadd.s f12, f22, f6, f9, rtz # perform operation
fmadd.s f12, f22, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0xb6158847 # load x3 with value 0xb6158847
sw x3, 0(x2) # store 0xb6158847 in memory
flw f11, 0(x2) # load 0xb6158847 from memory into f11
fmadd.s f22, f17, f5, f11, dyn # perform operation
fmadd.s f22, f17, f5, f11, rdn # perform operation
fmadd.s f22, f17, f5, f11, rmm # perform operation
fmadd.s f22, f17, f5, f11, rne # perform operation
fmadd.s f22, f17, f5, f11, rtz # perform operation
fmadd.s f22, f17, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0x3b18f5dd # load x3 with value 0x3b18f5dd
sw x3, 0(x2) # store 0x3b18f5dd in memory
flw f31, 0(x2) # load 0x3b18f5dd from memory into f31
fmadd.s f24, f8, f11, f31, dyn # perform operation
fmadd.s f24, f8, f11, f31, rdn # perform operation
fmadd.s f24, f8, f11, f31, rmm # perform operation
fmadd.s f24, f8, f11, f31, rne # perform operation
fmadd.s f24, f8, f11, f31, rtz # perform operation
fmadd.s f24, f8, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x137e2eb1 # load x3 with value 0x137e2eb1
sw x3, 0(x2) # store 0x137e2eb1 in memory
flw f22, 0(x2) # load 0x137e2eb1 from memory into f22
fmadd.s f21, f23, f27, f22, dyn # perform operation
fmadd.s f21, f23, f27, f22, rdn # perform operation
fmadd.s f21, f23, f27, f22, rmm # perform operation
fmadd.s f21, f23, f27, f22, rne # perform operation
fmadd.s f21, f23, f27, f22, rtz # perform operation
fmadd.s f21, f23, f27, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f23, f27, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f23, f27, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0x9798a1fc # load x3 with value 0x9798a1fc
sw x3, 0(x2) # store 0x9798a1fc in memory
flw f30, 0(x2) # load 0x9798a1fc from memory into f30
fmadd.s f1, f20, f6, f30, dyn # perform operation
fmadd.s f1, f20, f6, f30, rdn # perform operation
fmadd.s f1, f20, f6, f30, rmm # perform operation
fmadd.s f1, f20, f6, f30, rne # perform operation
fmadd.s f1, f20, f6, f30, rtz # perform operation
fmadd.s f1, f20, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f6, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x808e9838 # load x3 with value 0x808e9838
sw x3, 0(x2) # store 0x808e9838 in memory
flw f3, 0(x2) # load 0x808e9838 from memory into f3
fmadd.s f17, f7, f20, f3, dyn # perform operation
fmadd.s f17, f7, f20, f3, rdn # perform operation
fmadd.s f17, f7, f20, f3, rmm # perform operation
fmadd.s f17, f7, f20, f3, rne # perform operation
fmadd.s f17, f7, f20, f3, rtz # perform operation
fmadd.s f17, f7, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f20, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xf37f4e31 # load x3 with value 0xf37f4e31
sw x3, 0(x2) # store 0xf37f4e31 in memory
flw f26, 0(x2) # load 0xf37f4e31 from memory into f26
fmadd.s f25, f5, f8, f26, dyn # perform operation
fmadd.s f25, f5, f8, f26, rdn # perform operation
fmadd.s f25, f5, f8, f26, rmm # perform operation
fmadd.s f25, f5, f8, f26, rne # perform operation
fmadd.s f25, f5, f8, f26, rtz # perform operation
fmadd.s f25, f5, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f8, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xe825fd72 # load x3 with value 0xe825fd72
sw x3, 0(x2) # store 0xe825fd72 in memory
flw f29, 0(x2) # load 0xe825fd72 from memory into f29
fmadd.s f26, f3, f24, f29, dyn # perform operation
fmadd.s f26, f3, f24, f29, rdn # perform operation
fmadd.s f26, f3, f24, f29, rmm # perform operation
fmadd.s f26, f3, f24, f29, rne # perform operation
fmadd.s f26, f3, f24, f29, rtz # perform operation
fmadd.s f26, f3, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f24, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
la x2, scratch
li x3, 0x8a85d21f # load x3 with value 0x8a85d21f
sw x3, 0(x2) # store 0x8a85d21f in memory
flw f5, 0(x2) # load 0x8a85d21f from memory into f5
fmadd.s f17, f2, f8, f5, dyn # perform operation
fmadd.s f17, f2, f8, f5, rdn # perform operation
fmadd.s f17, f2, f8, f5, rmm # perform operation
fmadd.s f17, f2, f8, f5, rne # perform operation
fmadd.s f17, f2, f8, f5, rtz # perform operation
fmadd.s f17, f2, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x390ec5fb # load x3 with value 0x390ec5fb
sw x3, 0(x2) # store 0x390ec5fb in memory
flw f28, 0(x2) # load 0x390ec5fb from memory into f28
fmadd.s f21, f10, f22, f28, dyn # perform operation
fmadd.s f21, f10, f22, f28, rdn # perform operation
fmadd.s f21, f10, f22, f28, rmm # perform operation
fmadd.s f21, f10, f22, f28, rne # perform operation
fmadd.s f21, f10, f22, f28, rtz # perform operation
fmadd.s f21, f10, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f10, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f10, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f10, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f10, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f10, f22, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xc2795bdc # load x3 with value 0xc2795bdc
sw x3, 0(x2) # store 0xc2795bdc in memory
flw f19, 0(x2) # load 0xc2795bdc from memory into f19
fmadd.s f15, f26, f6, f19, dyn # perform operation
fmadd.s f15, f26, f6, f19, rdn # perform operation
fmadd.s f15, f26, f6, f19, rmm # perform operation
fmadd.s f15, f26, f6, f19, rne # perform operation
fmadd.s f15, f26, f6, f19, rtz # perform operation
fmadd.s f15, f26, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x489adc26 # load x3 with value 0x489adc26
sw x3, 0(x2) # store 0x489adc26 in memory
flw f7, 0(x2) # load 0x489adc26 from memory into f7
fmadd.s f19, f23, f28, f7, dyn # perform operation
fmadd.s f19, f23, f28, f7, rdn # perform operation
fmadd.s f19, f23, f28, f7, rmm # perform operation
fmadd.s f19, f23, f28, f7, rne # perform operation
fmadd.s f19, f23, f28, f7, rtz # perform operation
fmadd.s f19, f23, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f23, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f23, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x2cd34880 # load x3 with value 0x2cd34880
sw x3, 0(x2) # store 0x2cd34880 in memory
flw f1, 0(x2) # load 0x2cd34880 from memory into f1
fmadd.s f17, f29, f20, f1, dyn # perform operation
fmadd.s f17, f29, f20, f1, rdn # perform operation
fmadd.s f17, f29, f20, f1, rmm # perform operation
fmadd.s f17, f29, f20, f1, rne # perform operation
fmadd.s f17, f29, f20, f1, rtz # perform operation
fmadd.s f17, f29, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f20, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
la x2, scratch
li x3, 0xbaea6255 # load x3 with value 0xbaea6255
sw x3, 0(x2) # store 0xbaea6255 in memory
flw f29, 0(x2) # load 0xbaea6255 from memory into f29
fmadd.s f31, f22, f26, f29, dyn # perform operation
fmadd.s f31, f22, f26, f29, rdn # perform operation
fmadd.s f31, f22, f26, f29, rmm # perform operation
fmadd.s f31, f22, f26, f29, rne # perform operation
fmadd.s f31, f22, f26, f29, rtz # perform operation
fmadd.s f31, f22, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f22, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f22, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
la x2, scratch
li x3, 0x663a57bb # load x3 with value 0x663a57bb
sw x3, 0(x2) # store 0x663a57bb in memory
flw f22, 0(x2) # load 0x663a57bb from memory into f22
fmadd.s f29, f3, f10, f22, dyn # perform operation
fmadd.s f29, f3, f10, f22, rdn # perform operation
fmadd.s f29, f3, f10, f22, rmm # perform operation
fmadd.s f29, f3, f10, f22, rne # perform operation
fmadd.s f29, f3, f10, f22, rtz # perform operation
fmadd.s f29, f3, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f10, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x6e0efcfd # load x3 with value 0x6e0efcfd
sw x3, 0(x2) # store 0x6e0efcfd in memory
flw f10, 0(x2) # load 0x6e0efcfd from memory into f10
fmadd.s f5, f24, f14, f10, dyn # perform operation
fmadd.s f5, f24, f14, f10, rdn # perform operation
fmadd.s f5, f24, f14, f10, rmm # perform operation
fmadd.s f5, f24, f14, f10, rne # perform operation
fmadd.s f5, f24, f14, f10, rtz # perform operation
fmadd.s f5, f24, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f14, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0x39bb0231 # load x3 with value 0x39bb0231
sw x3, 0(x2) # store 0x39bb0231 in memory
flw f8, 0(x2) # load 0x39bb0231 from memory into f8
fmadd.s f20, f23, f24, f8, dyn # perform operation
fmadd.s f20, f23, f24, f8, rdn # perform operation
fmadd.s f20, f23, f24, f8, rmm # perform operation
fmadd.s f20, f23, f24, f8, rne # perform operation
fmadd.s f20, f23, f24, f8, rtz # perform operation
fmadd.s f20, f23, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f24, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
la x2, scratch
li x3, 0x2b61f16d # load x3 with value 0x2b61f16d
sw x3, 0(x2) # store 0x2b61f16d in memory
flw f20, 0(x2) # load 0x2b61f16d from memory into f20
fmadd.s f28, f24, f29, f20, dyn # perform operation
fmadd.s f28, f24, f29, f20, rdn # perform operation
fmadd.s f28, f24, f29, f20, rmm # perform operation
fmadd.s f28, f24, f29, f20, rne # perform operation
fmadd.s f28, f24, f29, f20, rtz # perform operation
fmadd.s f28, f24, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f29, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x0ec4e0a8 # load x3 with value 0x0ec4e0a8
sw x3, 0(x2) # store 0x0ec4e0a8 in memory
flw f30, 0(x2) # load 0x0ec4e0a8 from memory into f30
fmadd.s f15, f7, f1, f30, dyn # perform operation
fmadd.s f15, f7, f1, f30, rdn # perform operation
fmadd.s f15, f7, f1, f30, rmm # perform operation
fmadd.s f15, f7, f1, f30, rne # perform operation
fmadd.s f15, f7, f1, f30, rtz # perform operation
fmadd.s f15, f7, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f7, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x692f46ad # load x3 with value 0x692f46ad
sw x3, 0(x2) # store 0x692f46ad in memory
flw f6, 0(x2) # load 0x692f46ad from memory into f6
fmadd.s f3, f12, f7, f6, dyn # perform operation
fmadd.s f3, f12, f7, f6, rdn # perform operation
fmadd.s f3, f12, f7, f6, rmm # perform operation
fmadd.s f3, f12, f7, f6, rne # perform operation
fmadd.s f3, f12, f7, f6, rtz # perform operation
fmadd.s f3, f12, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f7, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x3b6238aa # load x3 with value 0x3b6238aa
sw x3, 0(x2) # store 0x3b6238aa in memory
flw f12, 0(x2) # load 0x3b6238aa from memory into f12
fmadd.s f28, f1, f21, f12, dyn # perform operation
fmadd.s f28, f1, f21, f12, rdn # perform operation
fmadd.s f28, f1, f21, f12, rmm # perform operation
fmadd.s f28, f1, f21, f12, rne # perform operation
fmadd.s f28, f1, f21, f12, rtz # perform operation
fmadd.s f28, f1, f21, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f21, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f21, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x004cd59f # load x3 with value 0x004cd59f
sw x3, 0(x2) # store 0x004cd59f in memory
flw f7, 0(x2) # load 0x004cd59f from memory into f7
fmadd.s f6, f19, f13, f7, dyn # perform operation
fmadd.s f6, f19, f13, f7, rdn # perform operation
fmadd.s f6, f19, f13, f7, rmm # perform operation
fmadd.s f6, f19, f13, f7, rne # perform operation
fmadd.s f6, f19, f13, f7, rtz # perform operation
fmadd.s f6, f19, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f13, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x0398ca9e # load x3 with value 0x0398ca9e
sw x3, 0(x2) # store 0x0398ca9e in memory
flw f17, 0(x2) # load 0x0398ca9e from memory into f17
fmadd.s f18, f8, f3, f17, dyn # perform operation
fmadd.s f18, f8, f3, f17, rdn # perform operation
fmadd.s f18, f8, f3, f17, rmm # perform operation
fmadd.s f18, f8, f3, f17, rne # perform operation
fmadd.s f18, f8, f3, f17, rtz # perform operation
fmadd.s f18, f8, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xd6b67907 # load x3 with value 0xd6b67907
sw x3, 0(x2) # store 0xd6b67907 in memory
flw f17, 0(x2) # load 0xd6b67907 from memory into f17
fmadd.s f29, f31, f18, f17, dyn # perform operation
fmadd.s f29, f31, f18, f17, rdn # perform operation
fmadd.s f29, f31, f18, f17, rmm # perform operation
fmadd.s f29, f31, f18, f17, rne # perform operation
fmadd.s f29, f31, f18, f17, rtz # perform operation
fmadd.s f29, f31, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f18, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0xac52a7b8 # load x3 with value 0xac52a7b8
sw x3, 0(x2) # store 0xac52a7b8 in memory
flw f25, 0(x2) # load 0xac52a7b8 from memory into f25
fmadd.s f12, f13, f7, f25, dyn # perform operation
fmadd.s f12, f13, f7, f25, rdn # perform operation
fmadd.s f12, f13, f7, f25, rmm # perform operation
fmadd.s f12, f13, f7, f25, rne # perform operation
fmadd.s f12, f13, f7, f25, rtz # perform operation
fmadd.s f12, f13, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f13, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f13, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xfcda42b1 # load x3 with value 0xfcda42b1
sw x3, 0(x2) # store 0xfcda42b1 in memory
flw f5, 0(x2) # load 0xfcda42b1 from memory into f5
fmadd.s f9, f30, f28, f5, dyn # perform operation
fmadd.s f9, f30, f28, f5, rdn # perform operation
fmadd.s f9, f30, f28, f5, rmm # perform operation
fmadd.s f9, f30, f28, f5, rne # perform operation
fmadd.s f9, f30, f28, f5, rtz # perform operation
fmadd.s f9, f30, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f28, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x1a669a23 # load x3 with value 0x1a669a23
sw x3, 0(x2) # store 0x1a669a23 in memory
flw f5, 0(x2) # load 0x1a669a23 from memory into f5
fmadd.s f28, f13, f12, f5, dyn # perform operation
fmadd.s f28, f13, f12, f5, rdn # perform operation
fmadd.s f28, f13, f12, f5, rmm # perform operation
fmadd.s f28, f13, f12, f5, rne # perform operation
fmadd.s f28, f13, f12, f5, rtz # perform operation
fmadd.s f28, f13, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f12, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xa6d275ce # load x3 with value 0xa6d275ce
sw x3, 0(x2) # store 0xa6d275ce in memory
flw f3, 0(x2) # load 0xa6d275ce from memory into f3
fmadd.s f31, f29, f22, f3, dyn # perform operation
fmadd.s f31, f29, f22, f3, rdn # perform operation
fmadd.s f31, f29, f22, f3, rmm # perform operation
fmadd.s f31, f29, f22, f3, rne # perform operation
fmadd.s f31, f29, f22, f3, rtz # perform operation
fmadd.s f31, f29, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x778bfb2e # load x3 with value 0x778bfb2e
sw x3, 0(x2) # store 0x778bfb2e in memory
flw f20, 0(x2) # load 0x778bfb2e from memory into f20
fmadd.s f30, f2, f23, f20, dyn # perform operation
fmadd.s f30, f2, f23, f20, rdn # perform operation
fmadd.s f30, f2, f23, f20, rmm # perform operation
fmadd.s f30, f2, f23, f20, rne # perform operation
fmadd.s f30, f2, f23, f20, rtz # perform operation
fmadd.s f30, f2, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f23, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0xfffaee2c # load x3 with value 0xfffaee2c
sw x3, 0(x2) # store 0xfffaee2c in memory
flw f17, 0(x2) # load 0xfffaee2c from memory into f17
fmadd.s f11, f28, f9, f17, dyn # perform operation
fmadd.s f11, f28, f9, f17, rdn # perform operation
fmadd.s f11, f28, f9, f17, rmm # perform operation
fmadd.s f11, f28, f9, f17, rne # perform operation
fmadd.s f11, f28, f9, f17, rtz # perform operation
fmadd.s f11, f28, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f9, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0x191f2895 # load x3 with value 0x191f2895
sw x3, 0(x2) # store 0x191f2895 in memory
flw f5, 0(x2) # load 0x191f2895 from memory into f5
fmadd.s f27, f26, f8, f5, dyn # perform operation
fmadd.s f27, f26, f8, f5, rdn # perform operation
fmadd.s f27, f26, f8, f5, rmm # perform operation
fmadd.s f27, f26, f8, f5, rne # perform operation
fmadd.s f27, f26, f8, f5, rtz # perform operation
fmadd.s f27, f26, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f8, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
la x2, scratch
li x3, 0xf8909fc6 # load x3 with value 0xf8909fc6
sw x3, 0(x2) # store 0xf8909fc6 in memory
flw f11, 0(x2) # load 0xf8909fc6 from memory into f11
fmadd.s f16, f12, f7, f11, dyn # perform operation
fmadd.s f16, f12, f7, f11, rdn # perform operation
fmadd.s f16, f12, f7, f11, rmm # perform operation
fmadd.s f16, f12, f7, f11, rne # perform operation
fmadd.s f16, f12, f7, f11, rtz # perform operation
fmadd.s f16, f12, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f7, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xf66fbe9f # load x3 with value 0xf66fbe9f
sw x3, 0(x2) # store 0xf66fbe9f in memory
flw f5, 0(x2) # load 0xf66fbe9f from memory into f5
fmadd.s f1, f16, f11, f5, dyn # perform operation
fmadd.s f1, f16, f11, f5, rdn # perform operation
fmadd.s f1, f16, f11, f5, rmm # perform operation
fmadd.s f1, f16, f11, f5, rne # perform operation
fmadd.s f1, f16, f11, f5, rtz # perform operation
fmadd.s f1, f16, f11, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f11, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f11, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f11, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f11, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f11, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xe12eed54 # load x3 with value 0xe12eed54
sw x3, 0(x2) # store 0xe12eed54 in memory
flw f15, 0(x2) # load 0xe12eed54 from memory into f15
fmadd.s f28, f8, f20, f15, dyn # perform operation
fmadd.s f28, f8, f20, f15, rdn # perform operation
fmadd.s f28, f8, f20, f15, rmm # perform operation
fmadd.s f28, f8, f20, f15, rne # perform operation
fmadd.s f28, f8, f20, f15, rtz # perform operation
fmadd.s f28, f8, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f20, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xa1049bc4 # load x3 with value 0xa1049bc4
sw x3, 0(x2) # store 0xa1049bc4 in memory
flw f10, 0(x2) # load 0xa1049bc4 from memory into f10
fmadd.s f13, f21, f23, f10, dyn # perform operation
fmadd.s f13, f21, f23, f10, rdn # perform operation
fmadd.s f13, f21, f23, f10, rmm # perform operation
fmadd.s f13, f21, f23, f10, rne # perform operation
fmadd.s f13, f21, f23, f10, rtz # perform operation
fmadd.s f13, f21, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x277f3202 # load x3 with value 0x277f3202
sw x3, 0(x2) # store 0x277f3202 in memory
flw f16, 0(x2) # load 0x277f3202 from memory into f16
fmadd.s f19, f9, f25, f16, dyn # perform operation
fmadd.s f19, f9, f25, f16, rdn # perform operation
fmadd.s f19, f9, f25, f16, rmm # perform operation
fmadd.s f19, f9, f25, f16, rne # perform operation
fmadd.s f19, f9, f25, f16, rtz # perform operation
fmadd.s f19, f9, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f25, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
la x2, scratch
li x3, 0xb382db5b # load x3 with value 0xb382db5b
sw x3, 0(x2) # store 0xb382db5b in memory
flw f3, 0(x2) # load 0xb382db5b from memory into f3
fmadd.s f16, f12, f15, f3, dyn # perform operation
fmadd.s f16, f12, f15, f3, rdn # perform operation
fmadd.s f16, f12, f15, f3, rmm # perform operation
fmadd.s f16, f12, f15, f3, rne # perform operation
fmadd.s f16, f12, f15, f3, rtz # perform operation
fmadd.s f16, f12, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f15, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x321ab813 # load x3 with value 0x321ab813
sw x3, 0(x2) # store 0x321ab813 in memory
flw f6, 0(x2) # load 0x321ab813 from memory into f6
fmadd.s f27, f30, f14, f6, dyn # perform operation
fmadd.s f27, f30, f14, f6, rdn # perform operation
fmadd.s f27, f30, f14, f6, rmm # perform operation
fmadd.s f27, f30, f14, f6, rne # perform operation
fmadd.s f27, f30, f14, f6, rtz # perform operation
fmadd.s f27, f30, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f14, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xabd96741 # load x3 with value 0xabd96741
sw x3, 0(x2) # store 0xabd96741 in memory
flw f26, 0(x2) # load 0xabd96741 from memory into f26
fmadd.s f21, f7, f11, f26, dyn # perform operation
fmadd.s f21, f7, f11, f26, rdn # perform operation
fmadd.s f21, f7, f11, f26, rmm # perform operation
fmadd.s f21, f7, f11, f26, rne # perform operation
fmadd.s f21, f7, f11, f26, rtz # perform operation
fmadd.s f21, f7, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f11, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x755e8d3e # load x3 with value 0x755e8d3e
sw x3, 0(x2) # store 0x755e8d3e in memory
flw f7, 0(x2) # load 0x755e8d3e from memory into f7
fmadd.s f16, f15, f28, f7, dyn # perform operation
fmadd.s f16, f15, f28, f7, rdn # perform operation
fmadd.s f16, f15, f28, f7, rmm # perform operation
fmadd.s f16, f15, f28, f7, rne # perform operation
fmadd.s f16, f15, f28, f7, rtz # perform operation
fmadd.s f16, f15, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f15, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f15, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0xc923dbad # load x3 with value 0xc923dbad
sw x3, 0(x2) # store 0xc923dbad in memory
flw f18, 0(x2) # load 0xc923dbad from memory into f18
fmadd.s f10, f9, f16, f18, dyn # perform operation
fmadd.s f10, f9, f16, f18, rdn # perform operation
fmadd.s f10, f9, f16, f18, rmm # perform operation
fmadd.s f10, f9, f16, f18, rne # perform operation
fmadd.s f10, f9, f16, f18, rtz # perform operation
fmadd.s f10, f9, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f16, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0xc8da4919 # load x3 with value 0xc8da4919
sw x3, 0(x2) # store 0xc8da4919 in memory
flw f29, 0(x2) # load 0xc8da4919 from memory into f29
fmadd.s f18, f19, f23, f29, dyn # perform operation
fmadd.s f18, f19, f23, f29, rdn # perform operation
fmadd.s f18, f19, f23, f29, rmm # perform operation
fmadd.s f18, f19, f23, f29, rne # perform operation
fmadd.s f18, f19, f23, f29, rtz # perform operation
fmadd.s f18, f19, f23, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f23, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f23, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
la x2, scratch
li x3, 0xe9e52384 # load x3 with value 0xe9e52384
sw x3, 0(x2) # store 0xe9e52384 in memory
flw f11, 0(x2) # load 0xe9e52384 from memory into f11
fmadd.s f21, f29, f30, f11, dyn # perform operation
fmadd.s f21, f29, f30, f11, rdn # perform operation
fmadd.s f21, f29, f30, f11, rmm # perform operation
fmadd.s f21, f29, f30, f11, rne # perform operation
fmadd.s f21, f29, f30, f11, rtz # perform operation
fmadd.s f21, f29, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x5a3c9c39 # load x3 with value 0x5a3c9c39
sw x3, 0(x2) # store 0x5a3c9c39 in memory
flw f1, 0(x2) # load 0x5a3c9c39 from memory into f1
fmadd.s f21, f17, f12, f1, dyn # perform operation
fmadd.s f21, f17, f12, f1, rdn # perform operation
fmadd.s f21, f17, f12, f1, rmm # perform operation
fmadd.s f21, f17, f12, f1, rne # perform operation
fmadd.s f21, f17, f12, f1, rtz # perform operation
fmadd.s f21, f17, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f17, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f17, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f17, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f17, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f17, f12, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x349f83fb # load x3 with value 0x349f83fb
sw x3, 0(x2) # store 0x349f83fb in memory
flw f14, 0(x2) # load 0x349f83fb from memory into f14
fmadd.s f23, f27, f18, f14, dyn # perform operation
fmadd.s f23, f27, f18, f14, rdn # perform operation
fmadd.s f23, f27, f18, f14, rmm # perform operation
fmadd.s f23, f27, f18, f14, rne # perform operation
fmadd.s f23, f27, f18, f14, rtz # perform operation
fmadd.s f23, f27, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f27, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f27, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xfa99e2e1 # load x3 with value 0xfa99e2e1
sw x3, 0(x2) # store 0xfa99e2e1 in memory
flw f23, 0(x2) # load 0xfa99e2e1 from memory into f23
fmadd.s f16, f8, f22, f23, dyn # perform operation
fmadd.s f16, f8, f22, f23, rdn # perform operation
fmadd.s f16, f8, f22, f23, rmm # perform operation
fmadd.s f16, f8, f22, f23, rne # perform operation
fmadd.s f16, f8, f22, f23, rtz # perform operation
fmadd.s f16, f8, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f8, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f8, f22, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xab9e36e4 # load x3 with value 0xab9e36e4
sw x3, 0(x2) # store 0xab9e36e4 in memory
flw f19, 0(x2) # load 0xab9e36e4 from memory into f19
fmadd.s f23, f18, f20, f19, dyn # perform operation
fmadd.s f23, f18, f20, f19, rdn # perform operation
fmadd.s f23, f18, f20, f19, rmm # perform operation
fmadd.s f23, f18, f20, f19, rne # perform operation
fmadd.s f23, f18, f20, f19, rtz # perform operation
fmadd.s f23, f18, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0xef09fc98 # load x3 with value 0xef09fc98
sw x3, 0(x2) # store 0xef09fc98 in memory
flw f7, 0(x2) # load 0xef09fc98 from memory into f7
fmadd.s f17, f28, f6, f7, dyn # perform operation
fmadd.s f17, f28, f6, f7, rdn # perform operation
fmadd.s f17, f28, f6, f7, rmm # perform operation
fmadd.s f17, f28, f6, f7, rne # perform operation
fmadd.s f17, f28, f6, f7, rtz # perform operation
fmadd.s f17, f28, f6, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f6, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f6, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x07808a03 # load x3 with value 0x07808a03
sw x3, 0(x2) # store 0x07808a03 in memory
flw f6, 0(x2) # load 0x07808a03 from memory into f6
fmadd.s f1, f10, f26, f6, dyn # perform operation
fmadd.s f1, f10, f26, f6, rdn # perform operation
fmadd.s f1, f10, f26, f6, rmm # perform operation
fmadd.s f1, f10, f26, f6, rne # perform operation
fmadd.s f1, f10, f26, f6, rtz # perform operation
fmadd.s f1, f10, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f26, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x4acc7903 # load x3 with value 0x4acc7903
sw x3, 0(x2) # store 0x4acc7903 in memory
flw f7, 0(x2) # load 0x4acc7903 from memory into f7
fmadd.s f23, f1, f12, f7, dyn # perform operation
fmadd.s f23, f1, f12, f7, rdn # perform operation
fmadd.s f23, f1, f12, f7, rmm # perform operation
fmadd.s f23, f1, f12, f7, rne # perform operation
fmadd.s f23, f1, f12, f7, rtz # perform operation
fmadd.s f23, f1, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f12, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xddfe6554 # load x3 with value 0xddfe6554
sw x3, 0(x2) # store 0xddfe6554 in memory
flw f5, 0(x2) # load 0xddfe6554 from memory into f5
fmadd.s f6, f18, f25, f5, dyn # perform operation
fmadd.s f6, f18, f25, f5, rdn # perform operation
fmadd.s f6, f18, f25, f5, rmm # perform operation
fmadd.s f6, f18, f25, f5, rne # perform operation
fmadd.s f6, f18, f25, f5, rtz # perform operation
fmadd.s f6, f18, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f25, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x2001b994 # load x3 with value 0x2001b994
sw x3, 0(x2) # store 0x2001b994 in memory
flw f8, 0(x2) # load 0x2001b994 from memory into f8
fmadd.s f5, f31, f15, f8, dyn # perform operation
fmadd.s f5, f31, f15, f8, rdn # perform operation
fmadd.s f5, f31, f15, f8, rmm # perform operation
fmadd.s f5, f31, f15, f8, rne # perform operation
fmadd.s f5, f31, f15, f8, rtz # perform operation
fmadd.s f5, f31, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f31, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f31, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0x91b79d09 # load x3 with value 0x91b79d09
sw x3, 0(x2) # store 0x91b79d09 in memory
flw f9, 0(x2) # load 0x91b79d09 from memory into f9
fmadd.s f16, f31, f3, f9, dyn # perform operation
fmadd.s f16, f31, f3, f9, rdn # perform operation
fmadd.s f16, f31, f3, f9, rmm # perform operation
fmadd.s f16, f31, f3, f9, rne # perform operation
fmadd.s f16, f31, f3, f9, rtz # perform operation
fmadd.s f16, f31, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f3, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
la x2, scratch
li x3, 0x0d30c6cb # load x3 with value 0x0d30c6cb
sw x3, 0(x2) # store 0x0d30c6cb in memory
flw f8, 0(x2) # load 0x0d30c6cb from memory into f8
fmadd.s f12, f16, f15, f8, dyn # perform operation
fmadd.s f12, f16, f15, f8, rdn # perform operation
fmadd.s f12, f16, f15, f8, rmm # perform operation
fmadd.s f12, f16, f15, f8, rne # perform operation
fmadd.s f12, f16, f15, f8, rtz # perform operation
fmadd.s f12, f16, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f16, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f16, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f16, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f16, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f16, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x28d0a0ba # load x3 with value 0x28d0a0ba
sw x3, 0(x2) # store 0x28d0a0ba in memory
flw f22, 0(x2) # load 0x28d0a0ba from memory into f22
fmadd.s f2, f12, f20, f22, dyn # perform operation
fmadd.s f2, f12, f20, f22, rdn # perform operation
fmadd.s f2, f12, f20, f22, rmm # perform operation
fmadd.s f2, f12, f20, f22, rne # perform operation
fmadd.s f2, f12, f20, f22, rtz # perform operation
fmadd.s f2, f12, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f12, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f12, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x9f789e34 # load x3 with value 0x9f789e34
sw x3, 0(x2) # store 0x9f789e34 in memory
flw f3, 0(x2) # load 0x9f789e34 from memory into f3
fmadd.s f28, f12, f22, f3, dyn # perform operation
fmadd.s f28, f12, f22, f3, rdn # perform operation
fmadd.s f28, f12, f22, f3, rmm # perform operation
fmadd.s f28, f12, f22, f3, rne # perform operation
fmadd.s f28, f12, f22, f3, rtz # perform operation
fmadd.s f28, f12, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f22, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0xbdca2c71 # load x3 with value 0xbdca2c71
sw x3, 0(x2) # store 0xbdca2c71 in memory
flw f25, 0(x2) # load 0xbdca2c71 from memory into f25
fmadd.s f10, f30, f5, f25, dyn # perform operation
fmadd.s f10, f30, f5, f25, rdn # perform operation
fmadd.s f10, f30, f5, f25, rmm # perform operation
fmadd.s f10, f30, f5, f25, rne # perform operation
fmadd.s f10, f30, f5, f25, rtz # perform operation
fmadd.s f10, f30, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x211d290c # load x3 with value 0x211d290c
sw x3, 0(x2) # store 0x211d290c in memory
flw f10, 0(x2) # load 0x211d290c from memory into f10
fmadd.s f18, f28, f9, f10, dyn # perform operation
fmadd.s f18, f28, f9, f10, rdn # perform operation
fmadd.s f18, f28, f9, f10, rmm # perform operation
fmadd.s f18, f28, f9, f10, rne # perform operation
fmadd.s f18, f28, f9, f10, rtz # perform operation
fmadd.s f18, f28, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f9, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x9b2008d9 # load x3 with value 0x9b2008d9
sw x3, 0(x2) # store 0x9b2008d9 in memory
flw f2, 0(x2) # load 0x9b2008d9 from memory into f2
fmadd.s f14, f21, f1, f2, dyn # perform operation
fmadd.s f14, f21, f1, f2, rdn # perform operation
fmadd.s f14, f21, f1, f2, rmm # perform operation
fmadd.s f14, f21, f1, f2, rne # perform operation
fmadd.s f14, f21, f1, f2, rtz # perform operation
fmadd.s f14, f21, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f21, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f21, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x8aced5c4 # load x3 with value 0x8aced5c4
sw x3, 0(x2) # store 0x8aced5c4 in memory
flw f3, 0(x2) # load 0x8aced5c4 from memory into f3
fmadd.s f7, f29, f21, f3, dyn # perform operation
fmadd.s f7, f29, f21, f3, rdn # perform operation
fmadd.s f7, f29, f21, f3, rmm # perform operation
fmadd.s f7, f29, f21, f3, rne # perform operation
fmadd.s f7, f29, f21, f3, rtz # perform operation
fmadd.s f7, f29, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f29, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f29, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f29, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f29, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f29, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xd46b1a2c # load x3 with value 0xd46b1a2c
sw x3, 0(x2) # store 0xd46b1a2c in memory
flw f27, 0(x2) # load 0xd46b1a2c from memory into f27
fmadd.s f6, f19, f5, f27, dyn # perform operation
fmadd.s f6, f19, f5, f27, rdn # perform operation
fmadd.s f6, f19, f5, f27, rmm # perform operation
fmadd.s f6, f19, f5, f27, rne # perform operation
fmadd.s f6, f19, f5, f27, rtz # perform operation
fmadd.s f6, f19, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f5, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0xb47ffecb # load x3 with value 0xb47ffecb
sw x3, 0(x2) # store 0xb47ffecb in memory
flw f24, 0(x2) # load 0xb47ffecb from memory into f24
fmadd.s f23, f19, f21, f24, dyn # perform operation
fmadd.s f23, f19, f21, f24, rdn # perform operation
fmadd.s f23, f19, f21, f24, rmm # perform operation
fmadd.s f23, f19, f21, f24, rne # perform operation
fmadd.s f23, f19, f21, f24, rtz # perform operation
fmadd.s f23, f19, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f19, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f19, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f19, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f19, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f19, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x0ad40ac4 # load x3 with value 0x0ad40ac4
sw x3, 0(x2) # store 0x0ad40ac4 in memory
flw f29, 0(x2) # load 0x0ad40ac4 from memory into f29
fmadd.s f13, f12, f8, f29, dyn # perform operation
fmadd.s f13, f12, f8, f29, rdn # perform operation
fmadd.s f13, f12, f8, f29, rmm # perform operation
fmadd.s f13, f12, f8, f29, rne # perform operation
fmadd.s f13, f12, f8, f29, rtz # perform operation
fmadd.s f13, f12, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f12, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f12, f8, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x959e77fd # load x3 with value 0x959e77fd
sw x3, 0(x2) # store 0x959e77fd in memory
flw f21, 0(x2) # load 0x959e77fd from memory into f21
fmadd.s f29, f15, f24, f21, dyn # perform operation
fmadd.s f29, f15, f24, f21, rdn # perform operation
fmadd.s f29, f15, f24, f21, rmm # perform operation
fmadd.s f29, f15, f24, f21, rne # perform operation
fmadd.s f29, f15, f24, f21, rtz # perform operation
fmadd.s f29, f15, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f15, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f15, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x7a425b66 # load x3 with value 0x7a425b66
sw x3, 0(x2) # store 0x7a425b66 in memory
flw f24, 0(x2) # load 0x7a425b66 from memory into f24
fmadd.s f5, f29, f26, f24, dyn # perform operation
fmadd.s f5, f29, f26, f24, rdn # perform operation
fmadd.s f5, f29, f26, f24, rmm # perform operation
fmadd.s f5, f29, f26, f24, rne # perform operation
fmadd.s f5, f29, f26, f24, rtz # perform operation
fmadd.s f5, f29, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f26, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
la x2, scratch
li x3, 0x5a783380 # load x3 with value 0x5a783380
sw x3, 0(x2) # store 0x5a783380 in memory
flw f26, 0(x2) # load 0x5a783380 from memory into f26
fmadd.s f10, f17, f22, f26, dyn # perform operation
fmadd.s f10, f17, f22, f26, rdn # perform operation
fmadd.s f10, f17, f22, f26, rmm # perform operation
fmadd.s f10, f17, f22, f26, rne # perform operation
fmadd.s f10, f17, f22, f26, rtz # perform operation
fmadd.s f10, f17, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f22, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
la x2, scratch
li x3, 0x40041b39 # load x3 with value 0x40041b39
sw x3, 0(x2) # store 0x40041b39 in memory
flw f24, 0(x2) # load 0x40041b39 from memory into f24
fmadd.s f18, f20, f12, f24, dyn # perform operation
fmadd.s f18, f20, f12, f24, rdn # perform operation
fmadd.s f18, f20, f12, f24, rmm # perform operation
fmadd.s f18, f20, f12, f24, rne # perform operation
fmadd.s f18, f20, f12, f24, rtz # perform operation
fmadd.s f18, f20, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f12, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0xd4b0da69 # load x3 with value 0xd4b0da69
sw x3, 0(x2) # store 0xd4b0da69 in memory
flw f2, 0(x2) # load 0xd4b0da69 from memory into f2
fmadd.s f17, f16, f9, f2, dyn # perform operation
fmadd.s f17, f16, f9, f2, rdn # perform operation
fmadd.s f17, f16, f9, f2, rmm # perform operation
fmadd.s f17, f16, f9, f2, rne # perform operation
fmadd.s f17, f16, f9, f2, rtz # perform operation
fmadd.s f17, f16, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f9, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xf85a4e72 # load x3 with value 0xf85a4e72
sw x3, 0(x2) # store 0xf85a4e72 in memory
flw f16, 0(x2) # load 0xf85a4e72 from memory into f16
fmadd.s f25, f1, f9, f16, dyn # perform operation
fmadd.s f25, f1, f9, f16, rdn # perform operation
fmadd.s f25, f1, f9, f16, rmm # perform operation
fmadd.s f25, f1, f9, f16, rne # perform operation
fmadd.s f25, f1, f9, f16, rtz # perform operation
fmadd.s f25, f1, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f9, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x11d59be9 # load x3 with value 0x11d59be9
sw x3, 0(x2) # store 0x11d59be9 in memory
flw f28, 0(x2) # load 0x11d59be9 from memory into f28
fmadd.s f29, f2, f10, f28, dyn # perform operation
fmadd.s f29, f2, f10, f28, rdn # perform operation
fmadd.s f29, f2, f10, f28, rmm # perform operation
fmadd.s f29, f2, f10, f28, rne # perform operation
fmadd.s f29, f2, f10, f28, rtz # perform operation
fmadd.s f29, f2, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f10, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x02805e27 # load x3 with value 0x02805e27
sw x3, 0(x2) # store 0x02805e27 in memory
flw f9, 0(x2) # load 0x02805e27 from memory into f9
fmadd.s f30, f8, f16, f9, dyn # perform operation
fmadd.s f30, f8, f16, f9, rdn # perform operation
fmadd.s f30, f8, f16, f9, rmm # perform operation
fmadd.s f30, f8, f16, f9, rne # perform operation
fmadd.s f30, f8, f16, f9, rtz # perform operation
fmadd.s f30, f8, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0xc0a6f6df # load x3 with value 0xc0a6f6df
sw x3, 0(x2) # store 0xc0a6f6df in memory
flw f30, 0(x2) # load 0xc0a6f6df from memory into f30
fmadd.s f19, f16, f14, f30, dyn # perform operation
fmadd.s f19, f16, f14, f30, rdn # perform operation
fmadd.s f19, f16, f14, f30, rmm # perform operation
fmadd.s f19, f16, f14, f30, rne # perform operation
fmadd.s f19, f16, f14, f30, rtz # perform operation
fmadd.s f19, f16, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f14, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
la x2, scratch
li x3, 0x36f9a693 # load x3 with value 0x36f9a693
sw x3, 0(x2) # store 0x36f9a693 in memory
flw f31, 0(x2) # load 0x36f9a693 from memory into f31
fmadd.s f13, f12, f26, f31, dyn # perform operation
fmadd.s f13, f12, f26, f31, rdn # perform operation
fmadd.s f13, f12, f26, f31, rmm # perform operation
fmadd.s f13, f12, f26, f31, rne # perform operation
fmadd.s f13, f12, f26, f31, rtz # perform operation
fmadd.s f13, f12, f26, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f12, f26, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f12, f26, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f12, f26, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f12, f26, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f12, f26, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xe14d22c5 # load x3 with value 0xe14d22c5
sw x3, 0(x2) # store 0xe14d22c5 in memory
flw f23, 0(x2) # load 0xe14d22c5 from memory into f23
fmadd.s f27, f2, f9, f23, dyn # perform operation
fmadd.s f27, f2, f9, f23, rdn # perform operation
fmadd.s f27, f2, f9, f23, rmm # perform operation
fmadd.s f27, f2, f9, f23, rne # perform operation
fmadd.s f27, f2, f9, f23, rtz # perform operation
fmadd.s f27, f2, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x3eea8185 # load x3 with value 0x3eea8185
sw x3, 0(x2) # store 0x3eea8185 in memory
flw f14, 0(x2) # load 0x3eea8185 from memory into f14
fmadd.s f15, f10, f30, f14, dyn # perform operation
fmadd.s f15, f10, f30, f14, rdn # perform operation
fmadd.s f15, f10, f30, f14, rmm # perform operation
fmadd.s f15, f10, f30, f14, rne # perform operation
fmadd.s f15, f10, f30, f14, rtz # perform operation
fmadd.s f15, f10, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f30, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
la x2, scratch
li x3, 0xf21be920 # load x3 with value 0xf21be920
sw x3, 0(x2) # store 0xf21be920 in memory
flw f2, 0(x2) # load 0xf21be920 from memory into f2
fmadd.s f30, f7, f25, f2, dyn # perform operation
fmadd.s f30, f7, f25, f2, rdn # perform operation
fmadd.s f30, f7, f25, f2, rmm # perform operation
fmadd.s f30, f7, f25, f2, rne # perform operation
fmadd.s f30, f7, f25, f2, rtz # perform operation
fmadd.s f30, f7, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f7, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f7, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x9971fad8 # load x3 with value 0x9971fad8
sw x3, 0(x2) # store 0x9971fad8 in memory
flw f26, 0(x2) # load 0x9971fad8 from memory into f26
fmadd.s f12, f30, f31, f26, dyn # perform operation
fmadd.s f12, f30, f31, f26, rdn # perform operation
fmadd.s f12, f30, f31, f26, rmm # perform operation
fmadd.s f12, f30, f31, f26, rne # perform operation
fmadd.s f12, f30, f31, f26, rtz # perform operation
fmadd.s f12, f30, f31, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f31, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f31, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f31, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f31, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f31, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0xb657b7c3 # load x3 with value 0xb657b7c3
sw x3, 0(x2) # store 0xb657b7c3 in memory
flw f17, 0(x2) # load 0xb657b7c3 from memory into f17
fmadd.s f8, f15, f2, f17, dyn # perform operation
fmadd.s f8, f15, f2, f17, rdn # perform operation
fmadd.s f8, f15, f2, f17, rmm # perform operation
fmadd.s f8, f15, f2, f17, rne # perform operation
fmadd.s f8, f15, f2, f17, rtz # perform operation
fmadd.s f8, f15, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f15, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f15, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0x592d493c # load x3 with value 0x592d493c
sw x3, 0(x2) # store 0x592d493c in memory
flw f31, 0(x2) # load 0x592d493c from memory into f31
fmadd.s f27, f7, f17, f31, dyn # perform operation
fmadd.s f27, f7, f17, f31, rdn # perform operation
fmadd.s f27, f7, f17, f31, rmm # perform operation
fmadd.s f27, f7, f17, f31, rne # perform operation
fmadd.s f27, f7, f17, f31, rtz # perform operation
fmadd.s f27, f7, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f7, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f7, f17, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x8b4fcf8d # load x3 with value 0x8b4fcf8d
sw x3, 0(x2) # store 0x8b4fcf8d in memory
flw f19, 0(x2) # load 0x8b4fcf8d from memory into f19
fmadd.s f5, f2, f27, f19, dyn # perform operation
fmadd.s f5, f2, f27, f19, rdn # perform operation
fmadd.s f5, f2, f27, f19, rmm # perform operation
fmadd.s f5, f2, f27, f19, rne # perform operation
fmadd.s f5, f2, f27, f19, rtz # perform operation
fmadd.s f5, f2, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f2, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f2, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0xb96c30dc # load x3 with value 0xb96c30dc
sw x3, 0(x2) # store 0xb96c30dc in memory
flw f14, 0(x2) # load 0xb96c30dc from memory into f14
fmadd.s f23, f17, f12, f14, dyn # perform operation
fmadd.s f23, f17, f12, f14, rdn # perform operation
fmadd.s f23, f17, f12, f14, rmm # perform operation
fmadd.s f23, f17, f12, f14, rne # perform operation
fmadd.s f23, f17, f12, f14, rtz # perform operation
fmadd.s f23, f17, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0xbeff2116 # load x3 with value 0xbeff2116
sw x3, 0(x2) # store 0xbeff2116 in memory
flw f30, 0(x2) # load 0xbeff2116 from memory into f30
fmadd.s f11, f21, f10, f30, dyn # perform operation
fmadd.s f11, f21, f10, f30, rdn # perform operation
fmadd.s f11, f21, f10, f30, rmm # perform operation
fmadd.s f11, f21, f10, f30, rne # perform operation
fmadd.s f11, f21, f10, f30, rtz # perform operation
fmadd.s f11, f21, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f21, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f21, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f21, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f21, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f21, f10, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0x4235cb88 # load x3 with value 0x4235cb88
sw x3, 0(x2) # store 0x4235cb88 in memory
flw f24, 0(x2) # load 0x4235cb88 from memory into f24
fmadd.s f15, f23, f19, f24, dyn # perform operation
fmadd.s f15, f23, f19, f24, rdn # perform operation
fmadd.s f15, f23, f19, f24, rmm # perform operation
fmadd.s f15, f23, f19, f24, rne # perform operation
fmadd.s f15, f23, f19, f24, rtz # perform operation
fmadd.s f15, f23, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f19, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0xddbcf5cc # load x3 with value 0xddbcf5cc
sw x3, 0(x2) # store 0xddbcf5cc in memory
flw f28, 0(x2) # load 0xddbcf5cc from memory into f28
fmadd.s f26, f25, f6, f28, dyn # perform operation
fmadd.s f26, f25, f6, f28, rdn # perform operation
fmadd.s f26, f25, f6, f28, rmm # perform operation
fmadd.s f26, f25, f6, f28, rne # perform operation
fmadd.s f26, f25, f6, f28, rtz # perform operation
fmadd.s f26, f25, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f6, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0xafef917f # load x3 with value 0xafef917f
sw x3, 0(x2) # store 0xafef917f in memory
flw f12, 0(x2) # load 0xafef917f from memory into f12
fmadd.s f25, f2, f3, f12, dyn # perform operation
fmadd.s f25, f2, f3, f12, rdn # perform operation
fmadd.s f25, f2, f3, f12, rmm # perform operation
fmadd.s f25, f2, f3, f12, rne # perform operation
fmadd.s f25, f2, f3, f12, rtz # perform operation
fmadd.s f25, f2, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
la x2, scratch
li x3, 0x99db41e4 # load x3 with value 0x99db41e4
sw x3, 0(x2) # store 0x99db41e4 in memory
flw f2, 0(x2) # load 0x99db41e4 from memory into f2
fmadd.s f9, f28, f5, f2, dyn # perform operation
fmadd.s f9, f28, f5, f2, rdn # perform operation
fmadd.s f9, f28, f5, f2, rmm # perform operation
fmadd.s f9, f28, f5, f2, rne # perform operation
fmadd.s f9, f28, f5, f2, rtz # perform operation
fmadd.s f9, f28, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f5, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xccd15d4e # load x3 with value 0xccd15d4e
sw x3, 0(x2) # store 0xccd15d4e in memory
flw f24, 0(x2) # load 0xccd15d4e from memory into f24
fmadd.s f14, f6, f17, f24, dyn # perform operation
fmadd.s f14, f6, f17, f24, rdn # perform operation
fmadd.s f14, f6, f17, f24, rmm # perform operation
fmadd.s f14, f6, f17, f24, rne # perform operation
fmadd.s f14, f6, f17, f24, rtz # perform operation
fmadd.s f14, f6, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x261e0f51 # load x3 with value 0x261e0f51
sw x3, 0(x2) # store 0x261e0f51 in memory
flw f5, 0(x2) # load 0x261e0f51 from memory into f5
fmadd.s f3, f24, f23, f5, dyn # perform operation
fmadd.s f3, f24, f23, f5, rdn # perform operation
fmadd.s f3, f24, f23, f5, rmm # perform operation
fmadd.s f3, f24, f23, f5, rne # perform operation
fmadd.s f3, f24, f23, f5, rtz # perform operation
fmadd.s f3, f24, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f24, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f24, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f24, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f24, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f24, f23, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xdea5ea88 # load x3 with value 0xdea5ea88
sw x3, 0(x2) # store 0xdea5ea88 in memory
flw f27, 0(x2) # load 0xdea5ea88 from memory into f27
fmadd.s f1, f13, f18, f27, dyn # perform operation
fmadd.s f1, f13, f18, f27, rdn # perform operation
fmadd.s f1, f13, f18, f27, rmm # perform operation
fmadd.s f1, f13, f18, f27, rne # perform operation
fmadd.s f1, f13, f18, f27, rtz # perform operation
fmadd.s f1, f13, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f13, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f13, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0xba12d894 # load x3 with value 0xba12d894
sw x3, 0(x2) # store 0xba12d894 in memory
flw f23, 0(x2) # load 0xba12d894 from memory into f23
fmadd.s f14, f19, f16, f23, dyn # perform operation
fmadd.s f14, f19, f16, f23, rdn # perform operation
fmadd.s f14, f19, f16, f23, rmm # perform operation
fmadd.s f14, f19, f16, f23, rne # perform operation
fmadd.s f14, f19, f16, f23, rtz # perform operation
fmadd.s f14, f19, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f19, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f19, f16, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
la x2, scratch
li x3, 0x95bb9e4d # load x3 with value 0x95bb9e4d
sw x3, 0(x2) # store 0x95bb9e4d in memory
flw f24, 0(x2) # load 0x95bb9e4d from memory into f24
fmadd.s f15, f26, f5, f24, dyn # perform operation
fmadd.s f15, f26, f5, f24, rdn # perform operation
fmadd.s f15, f26, f5, f24, rmm # perform operation
fmadd.s f15, f26, f5, f24, rne # perform operation
fmadd.s f15, f26, f5, f24, rtz # perform operation
fmadd.s f15, f26, f5, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f5, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f5, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
la x2, scratch
li x3, 0x8baac57d # load x3 with value 0x8baac57d
sw x3, 0(x2) # store 0x8baac57d in memory
flw f13, 0(x2) # load 0x8baac57d from memory into f13
fmadd.s f25, f14, f9, f13, dyn # perform operation
fmadd.s f25, f14, f9, f13, rdn # perform operation
fmadd.s f25, f14, f9, f13, rmm # perform operation
fmadd.s f25, f14, f9, f13, rne # perform operation
fmadd.s f25, f14, f9, f13, rtz # perform operation
fmadd.s f25, f14, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f9, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0x75d410b2 # load x3 with value 0x75d410b2
sw x3, 0(x2) # store 0x75d410b2 in memory
flw f19, 0(x2) # load 0x75d410b2 from memory into f19
fmadd.s f25, f20, f18, f19, dyn # perform operation
fmadd.s f25, f20, f18, f19, rdn # perform operation
fmadd.s f25, f20, f18, f19, rmm # perform operation
fmadd.s f25, f20, f18, f19, rne # perform operation
fmadd.s f25, f20, f18, f19, rtz # perform operation
fmadd.s f25, f20, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f18, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xc28bb770 # load x3 with value 0xc28bb770
sw x3, 0(x2) # store 0xc28bb770 in memory
flw f14, 0(x2) # load 0xc28bb770 from memory into f14
fmadd.s f17, f10, f5, f14, dyn # perform operation
fmadd.s f17, f10, f5, f14, rdn # perform operation
fmadd.s f17, f10, f5, f14, rmm # perform operation
fmadd.s f17, f10, f5, f14, rne # perform operation
fmadd.s f17, f10, f5, f14, rtz # perform operation
fmadd.s f17, f10, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f5, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0xa411d783 # load x3 with value 0xa411d783
sw x3, 0(x2) # store 0xa411d783 in memory
flw f19, 0(x2) # load 0xa411d783 from memory into f19
fmadd.s f26, f25, f17, f19, dyn # perform operation
fmadd.s f26, f25, f17, f19, rdn # perform operation
fmadd.s f26, f25, f17, f19, rmm # perform operation
fmadd.s f26, f25, f17, f19, rne # perform operation
fmadd.s f26, f25, f17, f19, rtz # perform operation
fmadd.s f26, f25, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x5acb1a98 # load x3 with value 0x5acb1a98
sw x3, 0(x2) # store 0x5acb1a98 in memory
flw f23, 0(x2) # load 0x5acb1a98 from memory into f23
fmadd.s f6, f15, f13, f23, dyn # perform operation
fmadd.s f6, f15, f13, f23, rdn # perform operation
fmadd.s f6, f15, f13, f23, rmm # perform operation
fmadd.s f6, f15, f13, f23, rne # perform operation
fmadd.s f6, f15, f13, f23, rtz # perform operation
fmadd.s f6, f15, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f13, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
la x2, scratch
li x3, 0x00c08ffa # load x3 with value 0x00c08ffa
sw x3, 0(x2) # store 0x00c08ffa in memory
flw f7, 0(x2) # load 0x00c08ffa from memory into f7
fmadd.s f16, f21, f1, f7, dyn # perform operation
fmadd.s f16, f21, f1, f7, rdn # perform operation
fmadd.s f16, f21, f1, f7, rmm # perform operation
fmadd.s f16, f21, f1, f7, rne # perform operation
fmadd.s f16, f21, f1, f7, rtz # perform operation
fmadd.s f16, f21, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0x4d38cc19 # load x3 with value 0x4d38cc19
sw x3, 0(x2) # store 0x4d38cc19 in memory
flw f12, 0(x2) # load 0x4d38cc19 from memory into f12
fmadd.s f23, f17, f1, f12, dyn # perform operation
fmadd.s f23, f17, f1, f12, rdn # perform operation
fmadd.s f23, f17, f1, f12, rmm # perform operation
fmadd.s f23, f17, f1, f12, rne # perform operation
fmadd.s f23, f17, f1, f12, rtz # perform operation
fmadd.s f23, f17, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f1, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xb06a3bff # load x3 with value 0xb06a3bff
sw x3, 0(x2) # store 0xb06a3bff in memory
flw f12, 0(x2) # load 0xb06a3bff from memory into f12
fmadd.s f16, f23, f31, f12, dyn # perform operation
fmadd.s f16, f23, f31, f12, rdn # perform operation
fmadd.s f16, f23, f31, f12, rmm # perform operation
fmadd.s f16, f23, f31, f12, rne # perform operation
fmadd.s f16, f23, f31, f12, rtz # perform operation
fmadd.s f16, f23, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f31, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xfaf299c5 # load x3 with value 0xfaf299c5
sw x3, 0(x2) # store 0xfaf299c5 in memory
flw f5, 0(x2) # load 0xfaf299c5 from memory into f5
fmadd.s f8, f24, f13, f5, dyn # perform operation
fmadd.s f8, f24, f13, f5, rdn # perform operation
fmadd.s f8, f24, f13, f5, rmm # perform operation
fmadd.s f8, f24, f13, f5, rne # perform operation
fmadd.s f8, f24, f13, f5, rtz # perform operation
fmadd.s f8, f24, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f13, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0x76878870 # load x3 with value 0x76878870
sw x3, 0(x2) # store 0x76878870 in memory
flw f19, 0(x2) # load 0x76878870 from memory into f19
fmadd.s f17, f26, f23, f19, dyn # perform operation
fmadd.s f17, f26, f23, f19, rdn # perform operation
fmadd.s f17, f26, f23, f19, rmm # perform operation
fmadd.s f17, f26, f23, f19, rne # perform operation
fmadd.s f17, f26, f23, f19, rtz # perform operation
fmadd.s f17, f26, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f23, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x177ddc84 # load x3 with value 0x177ddc84
sw x3, 0(x2) # store 0x177ddc84 in memory
flw f16, 0(x2) # load 0x177ddc84 from memory into f16
fmadd.s f6, f27, f14, f16, dyn # perform operation
fmadd.s f6, f27, f14, f16, rdn # perform operation
fmadd.s f6, f27, f14, f16, rmm # perform operation
fmadd.s f6, f27, f14, f16, rne # perform operation
fmadd.s f6, f27, f14, f16, rtz # perform operation
fmadd.s f6, f27, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f27, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f27, f14, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x1bfce54d # load x3 with value 0x1bfce54d
sw x3, 0(x2) # store 0x1bfce54d in memory
flw f26, 0(x2) # load 0x1bfce54d from memory into f26
fmadd.s f17, f10, f2, f26, dyn # perform operation
fmadd.s f17, f10, f2, f26, rdn # perform operation
fmadd.s f17, f10, f2, f26, rmm # perform operation
fmadd.s f17, f10, f2, f26, rne # perform operation
fmadd.s f17, f10, f2, f26, rtz # perform operation
fmadd.s f17, f10, f2, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f2, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f2, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
la x2, scratch
li x3, 0xe8995e5f # load x3 with value 0xe8995e5f
sw x3, 0(x2) # store 0xe8995e5f in memory
flw f8, 0(x2) # load 0xe8995e5f from memory into f8
fmadd.s f31, f22, f5, f8, dyn # perform operation
fmadd.s f31, f22, f5, f8, rdn # perform operation
fmadd.s f31, f22, f5, f8, rmm # perform operation
fmadd.s f31, f22, f5, f8, rne # perform operation
fmadd.s f31, f22, f5, f8, rtz # perform operation
fmadd.s f31, f22, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f22, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f22, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f22, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f22, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f22, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
la x2, scratch
li x3, 0xb9cf1923 # load x3 with value 0xb9cf1923
sw x3, 0(x2) # store 0xb9cf1923 in memory
flw f25, 0(x2) # load 0xb9cf1923 from memory into f25
fmadd.s f9, f20, f30, f25, dyn # perform operation
fmadd.s f9, f20, f30, f25, rdn # perform operation
fmadd.s f9, f20, f30, f25, rmm # perform operation
fmadd.s f9, f20, f30, f25, rne # perform operation
fmadd.s f9, f20, f30, f25, rtz # perform operation
fmadd.s f9, f20, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f30, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
la x2, scratch
li x3, 0x575bf425 # load x3 with value 0x575bf425
sw x3, 0(x2) # store 0x575bf425 in memory
flw f14, 0(x2) # load 0x575bf425 from memory into f14
fmadd.s f18, f30, f10, f14, dyn # perform operation
fmadd.s f18, f30, f10, f14, rdn # perform operation
fmadd.s f18, f30, f10, f14, rmm # perform operation
fmadd.s f18, f30, f10, f14, rne # perform operation
fmadd.s f18, f30, f10, f14, rtz # perform operation
fmadd.s f18, f30, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f10, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x9950e798 # load x3 with value 0x9950e798
sw x3, 0(x2) # store 0x9950e798 in memory
flw f25, 0(x2) # load 0x9950e798 from memory into f25
fmadd.s f7, f13, f28, f25, dyn # perform operation
fmadd.s f7, f13, f28, f25, rdn # perform operation
fmadd.s f7, f13, f28, f25, rmm # perform operation
fmadd.s f7, f13, f28, f25, rne # perform operation
fmadd.s f7, f13, f28, f25, rtz # perform operation
fmadd.s f7, f13, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f28, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x4d711e95 # load x3 with value 0x4d711e95
sw x3, 0(x2) # store 0x4d711e95 in memory
flw f20, 0(x2) # load 0x4d711e95 from memory into f20
fmadd.s f3, f2, f27, f20, dyn # perform operation
fmadd.s f3, f2, f27, f20, rdn # perform operation
fmadd.s f3, f2, f27, f20, rmm # perform operation
fmadd.s f3, f2, f27, f20, rne # perform operation
fmadd.s f3, f2, f27, f20, rtz # perform operation
fmadd.s f3, f2, f27, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f27, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f27, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x23c1f982 # load x3 with value 0x23c1f982
sw x3, 0(x2) # store 0x23c1f982 in memory
flw f19, 0(x2) # load 0x23c1f982 from memory into f19
fmadd.s f22, f8, f27, f19, dyn # perform operation
fmadd.s f22, f8, f27, f19, rdn # perform operation
fmadd.s f22, f8, f27, f19, rmm # perform operation
fmadd.s f22, f8, f27, f19, rne # perform operation
fmadd.s f22, f8, f27, f19, rtz # perform operation
fmadd.s f22, f8, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f27, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0xb46ffbf7 # load x3 with value 0xb46ffbf7
sw x3, 0(x2) # store 0xb46ffbf7 in memory
flw f26, 0(x2) # load 0xb46ffbf7 from memory into f26
fmadd.s f19, f8, f30, f26, dyn # perform operation
fmadd.s f19, f8, f30, f26, rdn # perform operation
fmadd.s f19, f8, f30, f26, rmm # perform operation
fmadd.s f19, f8, f30, f26, rne # perform operation
fmadd.s f19, f8, f30, f26, rtz # perform operation
fmadd.s f19, f8, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x8e6163e9 # load x3 with value 0x8e6163e9
sw x3, 0(x2) # store 0x8e6163e9 in memory
flw f1, 0(x2) # load 0x8e6163e9 from memory into f1
fmadd.s f24, f9, f14, f1, dyn # perform operation
fmadd.s f24, f9, f14, f1, rdn # perform operation
fmadd.s f24, f9, f14, f1, rmm # perform operation
fmadd.s f24, f9, f14, f1, rne # perform operation
fmadd.s f24, f9, f14, f1, rtz # perform operation
fmadd.s f24, f9, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f14, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
la x2, scratch
li x3, 0x23f3beab # load x3 with value 0x23f3beab
sw x3, 0(x2) # store 0x23f3beab in memory
flw f10, 0(x2) # load 0x23f3beab from memory into f10
fmadd.s f13, f5, f30, f10, dyn # perform operation
fmadd.s f13, f5, f30, f10, rdn # perform operation
fmadd.s f13, f5, f30, f10, rmm # perform operation
fmadd.s f13, f5, f30, f10, rne # perform operation
fmadd.s f13, f5, f30, f10, rtz # perform operation
fmadd.s f13, f5, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f5, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f5, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f5, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f5, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f5, f30, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x87d367b6 # load x3 with value 0x87d367b6
sw x3, 0(x2) # store 0x87d367b6 in memory
flw f16, 0(x2) # load 0x87d367b6 from memory into f16
fmadd.s f31, f21, f26, f16, dyn # perform operation
fmadd.s f31, f21, f26, f16, rdn # perform operation
fmadd.s f31, f21, f26, f16, rmm # perform operation
fmadd.s f31, f21, f26, f16, rne # perform operation
fmadd.s f31, f21, f26, f16, rtz # perform operation
fmadd.s f31, f21, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f26, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x55186693 # load x3 with value 0x55186693
sw x3, 0(x2) # store 0x55186693 in memory
flw f12, 0(x2) # load 0x55186693 from memory into f12
fmadd.s f13, f27, f22, f12, dyn # perform operation
fmadd.s f13, f27, f22, f12, rdn # perform operation
fmadd.s f13, f27, f22, f12, rmm # perform operation
fmadd.s f13, f27, f22, f12, rne # perform operation
fmadd.s f13, f27, f22, f12, rtz # perform operation
fmadd.s f13, f27, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f22, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x34870e46 # load x3 with value 0x34870e46
sw x3, 0(x2) # store 0x34870e46 in memory
flw f21, 0(x2) # load 0x34870e46 from memory into f21
fmadd.s f1, f27, f9, f21, dyn # perform operation
fmadd.s f1, f27, f9, f21, rdn # perform operation
fmadd.s f1, f27, f9, f21, rmm # perform operation
fmadd.s f1, f27, f9, f21, rne # perform operation
fmadd.s f1, f27, f9, f21, rtz # perform operation
fmadd.s f1, f27, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f9, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x7566d8c5 # load x3 with value 0x7566d8c5
sw x3, 0(x2) # store 0x7566d8c5 in memory
flw f29, 0(x2) # load 0x7566d8c5 from memory into f29
fmadd.s f5, f25, f14, f29, dyn # perform operation
fmadd.s f5, f25, f14, f29, rdn # perform operation
fmadd.s f5, f25, f14, f29, rmm # perform operation
fmadd.s f5, f25, f14, f29, rne # perform operation
fmadd.s f5, f25, f14, f29, rtz # perform operation
fmadd.s f5, f25, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xbfda004c # load x3 with value 0xbfda004c
sw x3, 0(x2) # store 0xbfda004c in memory
flw f17, 0(x2) # load 0xbfda004c from memory into f17
fmadd.s f11, f1, f13, f17, dyn # perform operation
fmadd.s f11, f1, f13, f17, rdn # perform operation
fmadd.s f11, f1, f13, f17, rmm # perform operation
fmadd.s f11, f1, f13, f17, rne # perform operation
fmadd.s f11, f1, f13, f17, rtz # perform operation
fmadd.s f11, f1, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f13, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0x41d5f014 # load x3 with value 0x41d5f014
sw x3, 0(x2) # store 0x41d5f014 in memory
flw f7, 0(x2) # load 0x41d5f014 from memory into f7
fmadd.s f13, f21, f20, f7, dyn # perform operation
fmadd.s f13, f21, f20, f7, rdn # perform operation
fmadd.s f13, f21, f20, f7, rmm # perform operation
fmadd.s f13, f21, f20, f7, rne # perform operation
fmadd.s f13, f21, f20, f7, rtz # perform operation
fmadd.s f13, f21, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f20, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0xb513d084 # load x3 with value 0xb513d084
sw x3, 0(x2) # store 0xb513d084 in memory
flw f26, 0(x2) # load 0xb513d084 from memory into f26
fmadd.s f6, f1, f14, f26, dyn # perform operation
fmadd.s f6, f1, f14, f26, rdn # perform operation
fmadd.s f6, f1, f14, f26, rmm # perform operation
fmadd.s f6, f1, f14, f26, rne # perform operation
fmadd.s f6, f1, f14, f26, rtz # perform operation
fmadd.s f6, f1, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f14, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
la x2, scratch
li x3, 0xc384884b # load x3 with value 0xc384884b
sw x3, 0(x2) # store 0xc384884b in memory
flw f22, 0(x2) # load 0xc384884b from memory into f22
fmadd.s f28, f19, f2, f22, dyn # perform operation
fmadd.s f28, f19, f2, f22, rdn # perform operation
fmadd.s f28, f19, f2, f22, rmm # perform operation
fmadd.s f28, f19, f2, f22, rne # perform operation
fmadd.s f28, f19, f2, f22, rtz # perform operation
fmadd.s f28, f19, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x62e0ab93 # load x3 with value 0x62e0ab93
sw x3, 0(x2) # store 0x62e0ab93 in memory
flw f31, 0(x2) # load 0x62e0ab93 from memory into f31
fmadd.s f24, f20, f25, f31, dyn # perform operation
fmadd.s f24, f20, f25, f31, rdn # perform operation
fmadd.s f24, f20, f25, f31, rmm # perform operation
fmadd.s f24, f20, f25, f31, rne # perform operation
fmadd.s f24, f20, f25, f31, rtz # perform operation
fmadd.s f24, f20, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f25, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
la x2, scratch
li x3, 0x71403d9c # load x3 with value 0x71403d9c
sw x3, 0(x2) # store 0x71403d9c in memory
flw f1, 0(x2) # load 0x71403d9c from memory into f1
fmadd.s f30, f28, f10, f1, dyn # perform operation
fmadd.s f30, f28, f10, f1, rdn # perform operation
fmadd.s f30, f28, f10, f1, rmm # perform operation
fmadd.s f30, f28, f10, f1, rne # perform operation
fmadd.s f30, f28, f10, f1, rtz # perform operation
fmadd.s f30, f28, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f10, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
la x2, scratch
li x3, 0xdbea14bb # load x3 with value 0xdbea14bb
sw x3, 0(x2) # store 0xdbea14bb in memory
flw f10, 0(x2) # load 0xdbea14bb from memory into f10
fmadd.s f13, f24, f23, f10, dyn # perform operation
fmadd.s f13, f24, f23, f10, rdn # perform operation
fmadd.s f13, f24, f23, f10, rmm # perform operation
fmadd.s f13, f24, f23, f10, rne # perform operation
fmadd.s f13, f24, f23, f10, rtz # perform operation
fmadd.s f13, f24, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f24, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f24, f23, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
la x2, scratch
li x3, 0x0989e724 # load x3 with value 0x0989e724
sw x3, 0(x2) # store 0x0989e724 in memory
flw f14, 0(x2) # load 0x0989e724 from memory into f14
fmadd.s f15, f1, f12, f14, dyn # perform operation
fmadd.s f15, f1, f12, f14, rdn # perform operation
fmadd.s f15, f1, f12, f14, rmm # perform operation
fmadd.s f15, f1, f12, f14, rne # perform operation
fmadd.s f15, f1, f12, f14, rtz # perform operation
fmadd.s f15, f1, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f12, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x8d3b8ff3 # load x3 with value 0x8d3b8ff3
sw x3, 0(x2) # store 0x8d3b8ff3 in memory
flw f17, 0(x2) # load 0x8d3b8ff3 from memory into f17
fmadd.s f8, f21, f16, f17, dyn # perform operation
fmadd.s f8, f21, f16, f17, rdn # perform operation
fmadd.s f8, f21, f16, f17, rmm # perform operation
fmadd.s f8, f21, f16, f17, rne # perform operation
fmadd.s f8, f21, f16, f17, rtz # perform operation
fmadd.s f8, f21, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f16, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
la x2, scratch
li x3, 0x5cab95f4 # load x3 with value 0x5cab95f4
sw x3, 0(x2) # store 0x5cab95f4 in memory
flw f31, 0(x2) # load 0x5cab95f4 from memory into f31
fmadd.s f21, f1, f30, f31, dyn # perform operation
fmadd.s f21, f1, f30, f31, rdn # perform operation
fmadd.s f21, f1, f30, f31, rmm # perform operation
fmadd.s f21, f1, f30, f31, rne # perform operation
fmadd.s f21, f1, f30, f31, rtz # perform operation
fmadd.s f21, f1, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f30, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0xa5610e0c # load x3 with value 0xa5610e0c
sw x3, 0(x2) # store 0xa5610e0c in memory
flw f22, 0(x2) # load 0xa5610e0c from memory into f22
fmadd.s f30, f13, f1, f22, dyn # perform operation
fmadd.s f30, f13, f1, f22, rdn # perform operation
fmadd.s f30, f13, f1, f22, rmm # perform operation
fmadd.s f30, f13, f1, f22, rne # perform operation
fmadd.s f30, f13, f1, f22, rtz # perform operation
fmadd.s f30, f13, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xd72bf850 # load x3 with value 0xd72bf850
sw x3, 0(x2) # store 0xd72bf850 in memory
flw f26, 0(x2) # load 0xd72bf850 from memory into f26
fmadd.s f13, f30, f15, f26, dyn # perform operation
fmadd.s f13, f30, f15, f26, rdn # perform operation
fmadd.s f13, f30, f15, f26, rmm # perform operation
fmadd.s f13, f30, f15, f26, rne # perform operation
fmadd.s f13, f30, f15, f26, rtz # perform operation
fmadd.s f13, f30, f15, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f30, f15, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f30, f15, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f30, f15, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f30, f15, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f30, f15, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x9185deb5 # load x3 with value 0x9185deb5
sw x3, 0(x2) # store 0x9185deb5 in memory
flw f13, 0(x2) # load 0x9185deb5 from memory into f13
fmadd.s f24, f6, f18, f13, dyn # perform operation
fmadd.s f24, f6, f18, f13, rdn # perform operation
fmadd.s f24, f6, f18, f13, rmm # perform operation
fmadd.s f24, f6, f18, f13, rne # perform operation
fmadd.s f24, f6, f18, f13, rtz # perform operation
fmadd.s f24, f6, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f18, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x04e87c7b # load x3 with value 0x04e87c7b
sw x3, 0(x2) # store 0x04e87c7b in memory
flw f26, 0(x2) # load 0x04e87c7b from memory into f26
fmadd.s f23, f13, f27, f26, dyn # perform operation
fmadd.s f23, f13, f27, f26, rdn # perform operation
fmadd.s f23, f13, f27, f26, rmm # perform operation
fmadd.s f23, f13, f27, f26, rne # perform operation
fmadd.s f23, f13, f27, f26, rtz # perform operation
fmadd.s f23, f13, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0xb60f1f92 # load x3 with value 0xb60f1f92
sw x3, 0(x2) # store 0xb60f1f92 in memory
flw f7, 0(x2) # load 0xb60f1f92 from memory into f7
fmadd.s f18, f1, f25, f7, dyn # perform operation
fmadd.s f18, f1, f25, f7, rdn # perform operation
fmadd.s f18, f1, f25, f7, rmm # perform operation
fmadd.s f18, f1, f25, f7, rne # perform operation
fmadd.s f18, f1, f25, f7, rtz # perform operation
fmadd.s f18, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f25, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f29, 0(x2) # load 0xff800000 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0x12df6ed7 # load x3 with value 0x12df6ed7
sw x3, 0(x2) # store 0x12df6ed7 in memory
flw f10, 0(x2) # load 0x12df6ed7 from memory into f10
fmadd.s f3, f29, f17, f10, dyn # perform operation
fmadd.s f3, f29, f17, f10, rdn # perform operation
fmadd.s f3, f29, f17, f10, rmm # perform operation
fmadd.s f3, f29, f17, f10, rne # perform operation
fmadd.s f3, f29, f17, f10, rtz # perform operation
fmadd.s f3, f29, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f29, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f29, f17, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x3ac8a64f # load x3 with value 0x3ac8a64f
sw x3, 0(x2) # store 0x3ac8a64f in memory
flw f13, 0(x2) # load 0x3ac8a64f from memory into f13
fmadd.s f9, f8, f15, f13, dyn # perform operation
fmadd.s f9, f8, f15, f13, rdn # perform operation
fmadd.s f9, f8, f15, f13, rmm # perform operation
fmadd.s f9, f8, f15, f13, rne # perform operation
fmadd.s f9, f8, f15, f13, rtz # perform operation
fmadd.s f9, f8, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x9c9317f1 # load x3 with value 0x9c9317f1
sw x3, 0(x2) # store 0x9c9317f1 in memory
flw f30, 0(x2) # load 0x9c9317f1 from memory into f30
fmadd.s f8, f26, f24, f30, dyn # perform operation
fmadd.s f8, f26, f24, f30, rdn # perform operation
fmadd.s f8, f26, f24, f30, rmm # perform operation
fmadd.s f8, f26, f24, f30, rne # perform operation
fmadd.s f8, f26, f24, f30, rtz # perform operation
fmadd.s f8, f26, f24, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f24, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f24, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0xc46758da # load x3 with value 0xc46758da
sw x3, 0(x2) # store 0xc46758da in memory
flw f23, 0(x2) # load 0xc46758da from memory into f23
fmadd.s f1, f30, f9, f23, dyn # perform operation
fmadd.s f1, f30, f9, f23, rdn # perform operation
fmadd.s f1, f30, f9, f23, rmm # perform operation
fmadd.s f1, f30, f9, f23, rne # perform operation
fmadd.s f1, f30, f9, f23, rtz # perform operation
fmadd.s f1, f30, f9, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f30, f9, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f30, f9, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f30, f9, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f30, f9, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f30, f9, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0xcb027c28 # load x3 with value 0xcb027c28
sw x3, 0(x2) # store 0xcb027c28 in memory
flw f25, 0(x2) # load 0xcb027c28 from memory into f25
fmadd.s f29, f11, f17, f25, dyn # perform operation
fmadd.s f29, f11, f17, f25, rdn # perform operation
fmadd.s f29, f11, f17, f25, rmm # perform operation
fmadd.s f29, f11, f17, f25, rne # perform operation
fmadd.s f29, f11, f17, f25, rtz # perform operation
fmadd.s f29, f11, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f17, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0xba915630 # load x3 with value 0xba915630
sw x3, 0(x2) # store 0xba915630 in memory
flw f9, 0(x2) # load 0xba915630 from memory into f9
fmadd.s f19, f30, f20, f9, dyn # perform operation
fmadd.s f19, f30, f20, f9, rdn # perform operation
fmadd.s f19, f30, f20, f9, rmm # perform operation
fmadd.s f19, f30, f20, f9, rne # perform operation
fmadd.s f19, f30, f20, f9, rtz # perform operation
fmadd.s f19, f30, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f20, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0xfdb5879d # load x3 with value 0xfdb5879d
sw x3, 0(x2) # store 0xfdb5879d in memory
flw f6, 0(x2) # load 0xfdb5879d from memory into f6
fmadd.s f24, f1, f29, f6, dyn # perform operation
fmadd.s f24, f1, f29, f6, rdn # perform operation
fmadd.s f24, f1, f29, f6, rmm # perform operation
fmadd.s f24, f1, f29, f6, rne # perform operation
fmadd.s f24, f1, f29, f6, rtz # perform operation
fmadd.s f24, f1, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f29, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xbd1fd9ed # load x3 with value 0xbd1fd9ed
sw x3, 0(x2) # store 0xbd1fd9ed in memory
flw f27, 0(x2) # load 0xbd1fd9ed from memory into f27
fmadd.s f15, f7, f20, f27, dyn # perform operation
fmadd.s f15, f7, f20, f27, rdn # perform operation
fmadd.s f15, f7, f20, f27, rmm # perform operation
fmadd.s f15, f7, f20, f27, rne # perform operation
fmadd.s f15, f7, f20, f27, rtz # perform operation
fmadd.s f15, f7, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f7, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f7, f20, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xc33b4ad3 # load x3 with value 0xc33b4ad3
sw x3, 0(x2) # store 0xc33b4ad3 in memory
flw f6, 0(x2) # load 0xc33b4ad3 from memory into f6
fmadd.s f12, f24, f3, f6, dyn # perform operation
fmadd.s f12, f24, f3, f6, rdn # perform operation
fmadd.s f12, f24, f3, f6, rmm # perform operation
fmadd.s f12, f24, f3, f6, rne # perform operation
fmadd.s f12, f24, f3, f6, rtz # perform operation
fmadd.s f12, f24, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f24, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f24, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f24, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f24, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f24, f3, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x2e928a83 # load x3 with value 0x2e928a83
sw x3, 0(x2) # store 0x2e928a83 in memory
flw f28, 0(x2) # load 0x2e928a83 from memory into f28
fmadd.s f31, f24, f9, f28, dyn # perform operation
fmadd.s f31, f24, f9, f28, rdn # perform operation
fmadd.s f31, f24, f9, f28, rmm # perform operation
fmadd.s f31, f24, f9, f28, rne # perform operation
fmadd.s f31, f24, f9, f28, rtz # perform operation
fmadd.s f31, f24, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f9, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x7756f4b2 # load x3 with value 0x7756f4b2
sw x3, 0(x2) # store 0x7756f4b2 in memory
flw f3, 0(x2) # load 0x7756f4b2 from memory into f3
fmadd.s f13, f12, f19, f3, dyn # perform operation
fmadd.s f13, f12, f19, f3, rdn # perform operation
fmadd.s f13, f12, f19, f3, rmm # perform operation
fmadd.s f13, f12, f19, f3, rne # perform operation
fmadd.s f13, f12, f19, f3, rtz # perform operation
fmadd.s f13, f12, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f12, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f12, f19, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xa4b35c5a # load x3 with value 0xa4b35c5a
sw x3, 0(x2) # store 0xa4b35c5a in memory
flw f27, 0(x2) # load 0xa4b35c5a from memory into f27
fmadd.s f17, f21, f29, f27, dyn # perform operation
fmadd.s f17, f21, f29, f27, rdn # perform operation
fmadd.s f17, f21, f29, f27, rmm # perform operation
fmadd.s f17, f21, f29, f27, rne # perform operation
fmadd.s f17, f21, f29, f27, rtz # perform operation
fmadd.s f17, f21, f29, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f29, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f29, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xe3976591 # load x3 with value 0xe3976591
sw x3, 0(x2) # store 0xe3976591 in memory
flw f15, 0(x2) # load 0xe3976591 from memory into f15
fmadd.s f18, f17, f25, f15, dyn # perform operation
fmadd.s f18, f17, f25, f15, rdn # perform operation
fmadd.s f18, f17, f25, f15, rmm # perform operation
fmadd.s f18, f17, f25, f15, rne # perform operation
fmadd.s f18, f17, f25, f15, rtz # perform operation
fmadd.s f18, f17, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f25, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0xca6a3cce # load x3 with value 0xca6a3cce
sw x3, 0(x2) # store 0xca6a3cce in memory
flw f31, 0(x2) # load 0xca6a3cce from memory into f31
fmadd.s f25, f15, f9, f31, dyn # perform operation
fmadd.s f25, f15, f9, f31, rdn # perform operation
fmadd.s f25, f15, f9, f31, rmm # perform operation
fmadd.s f25, f15, f9, f31, rne # perform operation
fmadd.s f25, f15, f9, f31, rtz # perform operation
fmadd.s f25, f15, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f23, 0(x2) # load 0x7fc00000 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xebd25df2 # load x3 with value 0xebd25df2
sw x3, 0(x2) # store 0xebd25df2 in memory
flw f11, 0(x2) # load 0xebd25df2 from memory into f11
fmadd.s f20, f23, f30, f11, dyn # perform operation
fmadd.s f20, f23, f30, f11, rdn # perform operation
fmadd.s f20, f23, f30, f11, rmm # perform operation
fmadd.s f20, f23, f30, f11, rne # perform operation
fmadd.s f20, f23, f30, f11, rtz # perform operation
fmadd.s f20, f23, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f30, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
la x2, scratch
li x3, 0xa8c43055 # load x3 with value 0xa8c43055
sw x3, 0(x2) # store 0xa8c43055 in memory
flw f26, 0(x2) # load 0xa8c43055 from memory into f26
fmadd.s f23, f16, f27, f26, dyn # perform operation
fmadd.s f23, f16, f27, f26, rdn # perform operation
fmadd.s f23, f16, f27, f26, rmm # perform operation
fmadd.s f23, f16, f27, f26, rne # perform operation
fmadd.s f23, f16, f27, f26, rtz # perform operation
fmadd.s f23, f16, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f27, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x4bee3767 # load x3 with value 0x4bee3767
sw x3, 0(x2) # store 0x4bee3767 in memory
flw f19, 0(x2) # load 0x4bee3767 from memory into f19
fmadd.s f25, f29, f22, f19, dyn # perform operation
fmadd.s f25, f29, f22, f19, rdn # perform operation
fmadd.s f25, f29, f22, f19, rmm # perform operation
fmadd.s f25, f29, f22, f19, rne # perform operation
fmadd.s f25, f29, f22, f19, rtz # perform operation
fmadd.s f25, f29, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f29, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f29, f22, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
la x2, scratch
li x3, 0xb9636988 # load x3 with value 0xb9636988
sw x3, 0(x2) # store 0xb9636988 in memory
flw f17, 0(x2) # load 0xb9636988 from memory into f17
fmadd.s f27, f28, f3, f17, dyn # perform operation
fmadd.s f27, f28, f3, f17, rdn # perform operation
fmadd.s f27, f28, f3, f17, rmm # perform operation
fmadd.s f27, f28, f3, f17, rne # perform operation
fmadd.s f27, f28, f3, f17, rtz # perform operation
fmadd.s f27, f28, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f3, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xdc8816c1 # load x3 with value 0xdc8816c1
sw x3, 0(x2) # store 0xdc8816c1 in memory
flw f29, 0(x2) # load 0xdc8816c1 from memory into f29
fmadd.s f1, f28, f13, f29, dyn # perform operation
fmadd.s f1, f28, f13, f29, rdn # perform operation
fmadd.s f1, f28, f13, f29, rmm # perform operation
fmadd.s f1, f28, f13, f29, rne # perform operation
fmadd.s f1, f28, f13, f29, rtz # perform operation
fmadd.s f1, f28, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f13, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
la x2, scratch
li x3, 0x3ce1e95f # load x3 with value 0x3ce1e95f
sw x3, 0(x2) # store 0x3ce1e95f in memory
flw f29, 0(x2) # load 0x3ce1e95f from memory into f29
fmadd.s f30, f6, f18, f29, dyn # perform operation
fmadd.s f30, f6, f18, f29, rdn # perform operation
fmadd.s f30, f6, f18, f29, rmm # perform operation
fmadd.s f30, f6, f18, f29, rne # perform operation
fmadd.s f30, f6, f18, f29, rtz # perform operation
fmadd.s f30, f6, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f6, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f6, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x4ab769c1 # load x3 with value 0x4ab769c1
sw x3, 0(x2) # store 0x4ab769c1 in memory
flw f31, 0(x2) # load 0x4ab769c1 from memory into f31
fmadd.s f3, f19, f11, f31, dyn # perform operation
fmadd.s f3, f19, f11, f31, rdn # perform operation
fmadd.s f3, f19, f11, f31, rmm # perform operation
fmadd.s f3, f19, f11, f31, rne # perform operation
fmadd.s f3, f19, f11, f31, rtz # perform operation
fmadd.s f3, f19, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xa13bc892 # load x3 with value 0xa13bc892
sw x3, 0(x2) # store 0xa13bc892 in memory
flw f30, 0(x2) # load 0xa13bc892 from memory into f30
fmadd.s f25, f18, f9, f30, dyn # perform operation
fmadd.s f25, f18, f9, f30, rdn # perform operation
fmadd.s f25, f18, f9, f30, rmm # perform operation
fmadd.s f25, f18, f9, f30, rne # perform operation
fmadd.s f25, f18, f9, f30, rtz # perform operation
fmadd.s f25, f18, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f18, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f18, f9, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0xcea49888 # load x3 with value 0xcea49888
sw x3, 0(x2) # store 0xcea49888 in memory
flw f29, 0(x2) # load 0xcea49888 from memory into f29
fmadd.s f31, f5, f25, f29, dyn # perform operation
fmadd.s f31, f5, f25, f29, rdn # perform operation
fmadd.s f31, f5, f25, f29, rmm # perform operation
fmadd.s f31, f5, f25, f29, rne # perform operation
fmadd.s f31, f5, f25, f29, rtz # perform operation
fmadd.s f31, f5, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f25, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x2d26dc32 # load x3 with value 0x2d26dc32
sw x3, 0(x2) # store 0x2d26dc32 in memory
flw f3, 0(x2) # load 0x2d26dc32 from memory into f3
fmadd.s f1, f31, f6, f3, dyn # perform operation
fmadd.s f1, f31, f6, f3, rdn # perform operation
fmadd.s f1, f31, f6, f3, rmm # perform operation
fmadd.s f1, f31, f6, f3, rne # perform operation
fmadd.s f1, f31, f6, f3, rtz # perform operation
fmadd.s f1, f31, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f6, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
la x2, scratch
li x3, 0xe8429b22 # load x3 with value 0xe8429b22
sw x3, 0(x2) # store 0xe8429b22 in memory
flw f8, 0(x2) # load 0xe8429b22 from memory into f8
fmadd.s f3, f30, f16, f8, dyn # perform operation
fmadd.s f3, f30, f16, f8, rdn # perform operation
fmadd.s f3, f30, f16, f8, rmm # perform operation
fmadd.s f3, f30, f16, f8, rne # perform operation
fmadd.s f3, f30, f16, f8, rtz # perform operation
fmadd.s f3, f30, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f30, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f30, f16, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x2c33e4a3 # load x3 with value 0x2c33e4a3
sw x3, 0(x2) # store 0x2c33e4a3 in memory
flw f16, 0(x2) # load 0x2c33e4a3 from memory into f16
fmadd.s f13, f3, f15, f16, dyn # perform operation
fmadd.s f13, f3, f15, f16, rdn # perform operation
fmadd.s f13, f3, f15, f16, rmm # perform operation
fmadd.s f13, f3, f15, f16, rne # perform operation
fmadd.s f13, f3, f15, f16, rtz # perform operation
fmadd.s f13, f3, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f3, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f3, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f3, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f3, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f3, f15, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
la x2, scratch
li x3, 0x61c87a00 # load x3 with value 0x61c87a00
sw x3, 0(x2) # store 0x61c87a00 in memory
flw f29, 0(x2) # load 0x61c87a00 from memory into f29
fmadd.s f25, f9, f14, f29, dyn # perform operation
fmadd.s f25, f9, f14, f29, rdn # perform operation
fmadd.s f25, f9, f14, f29, rmm # perform operation
fmadd.s f25, f9, f14, f29, rne # perform operation
fmadd.s f25, f9, f14, f29, rtz # perform operation
fmadd.s f25, f9, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f9, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f9, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f9, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f9, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f9, f14, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
la x2, scratch
li x3, 0x7e019f21 # load x3 with value 0x7e019f21
sw x3, 0(x2) # store 0x7e019f21 in memory
flw f17, 0(x2) # load 0x7e019f21 from memory into f17
fmadd.s f19, f7, f24, f17, dyn # perform operation
fmadd.s f19, f7, f24, f17, rdn # perform operation
fmadd.s f19, f7, f24, f17, rmm # perform operation
fmadd.s f19, f7, f24, f17, rne # perform operation
fmadd.s f19, f7, f24, f17, rtz # perform operation
fmadd.s f19, f7, f24, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f24, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f24, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0x89c26553 # load x3 with value 0x89c26553
sw x3, 0(x2) # store 0x89c26553 in memory
flw f27, 0(x2) # load 0x89c26553 from memory into f27
fmadd.s f12, f1, f26, f27, dyn # perform operation
fmadd.s f12, f1, f26, f27, rdn # perform operation
fmadd.s f12, f1, f26, f27, rmm # perform operation
fmadd.s f12, f1, f26, f27, rne # perform operation
fmadd.s f12, f1, f26, f27, rtz # perform operation
fmadd.s f12, f1, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f1, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f1, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x6dda6511 # load x3 with value 0x6dda6511
sw x3, 0(x2) # store 0x6dda6511 in memory
flw f10, 0(x2) # load 0x6dda6511 from memory into f10
fmadd.s f5, f21, f1, f10, dyn # perform operation
fmadd.s f5, f21, f1, f10, rdn # perform operation
fmadd.s f5, f21, f1, f10, rmm # perform operation
fmadd.s f5, f21, f1, f10, rne # perform operation
fmadd.s f5, f21, f1, f10, rtz # perform operation
fmadd.s f5, f21, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f21, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f21, f1, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x33848c07 # load x3 with value 0x33848c07
sw x3, 0(x2) # store 0x33848c07 in memory
flw f13, 0(x2) # load 0x33848c07 from memory into f13
fmadd.s f5, f7, f31, f13, dyn # perform operation
fmadd.s f5, f7, f31, f13, rdn # perform operation
fmadd.s f5, f7, f31, f13, rmm # perform operation
fmadd.s f5, f7, f31, f13, rne # perform operation
fmadd.s f5, f7, f31, f13, rtz # perform operation
fmadd.s f5, f7, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f31, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0xbd601c7b # load x3 with value 0xbd601c7b
sw x3, 0(x2) # store 0xbd601c7b in memory
flw f30, 0(x2) # load 0xbd601c7b from memory into f30
fmadd.s f1, f9, f3, f30, dyn # perform operation
fmadd.s f1, f9, f3, f30, rdn # perform operation
fmadd.s f1, f9, f3, f30, rmm # perform operation
fmadd.s f1, f9, f3, f30, rne # perform operation
fmadd.s f1, f9, f3, f30, rtz # perform operation
fmadd.s f1, f9, f3, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f3, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f3, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xbd0c4dfd # load x3 with value 0xbd0c4dfd
sw x3, 0(x2) # store 0xbd0c4dfd in memory
flw f8, 0(x2) # load 0xbd0c4dfd from memory into f8
fmadd.s f24, f6, f14, f8, dyn # perform operation
fmadd.s f24, f6, f14, f8, rdn # perform operation
fmadd.s f24, f6, f14, f8, rmm # perform operation
fmadd.s f24, f6, f14, f8, rne # perform operation
fmadd.s f24, f6, f14, f8, rtz # perform operation
fmadd.s f24, f6, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f14, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x7b5bff06 # load x3 with value 0x7b5bff06
sw x3, 0(x2) # store 0x7b5bff06 in memory
flw f29, 0(x2) # load 0x7b5bff06 from memory into f29
fmadd.s f25, f17, f26, f29, dyn # perform operation
fmadd.s f25, f17, f26, f29, rdn # perform operation
fmadd.s f25, f17, f26, f29, rmm # perform operation
fmadd.s f25, f17, f26, f29, rne # perform operation
fmadd.s f25, f17, f26, f29, rtz # perform operation
fmadd.s f25, f17, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f17, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f17, f26, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x479b51c4 # load x3 with value 0x479b51c4
sw x3, 0(x2) # store 0x479b51c4 in memory
flw f20, 0(x2) # load 0x479b51c4 from memory into f20
fmadd.s f27, f30, f10, f20, dyn # perform operation
fmadd.s f27, f30, f10, f20, rdn # perform operation
fmadd.s f27, f30, f10, f20, rmm # perform operation
fmadd.s f27, f30, f10, f20, rne # perform operation
fmadd.s f27, f30, f10, f20, rtz # perform operation
fmadd.s f27, f30, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f10, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xe6d47994 # load x3 with value 0xe6d47994
sw x3, 0(x2) # store 0xe6d47994 in memory
flw f11, 0(x2) # load 0xe6d47994 from memory into f11
fmadd.s f21, f27, f25, f11, dyn # perform operation
fmadd.s f21, f27, f25, f11, rdn # perform operation
fmadd.s f21, f27, f25, f11, rmm # perform operation
fmadd.s f21, f27, f25, f11, rne # perform operation
fmadd.s f21, f27, f25, f11, rtz # perform operation
fmadd.s f21, f27, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f25, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
la x2, scratch
li x3, 0x7d0b2b61 # load x3 with value 0x7d0b2b61
sw x3, 0(x2) # store 0x7d0b2b61 in memory
flw f14, 0(x2) # load 0x7d0b2b61 from memory into f14
fmadd.s f27, f21, f18, f14, dyn # perform operation
fmadd.s f27, f21, f18, f14, rdn # perform operation
fmadd.s f27, f21, f18, f14, rmm # perform operation
fmadd.s f27, f21, f18, f14, rne # perform operation
fmadd.s f27, f21, f18, f14, rtz # perform operation
fmadd.s f27, f21, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f21, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f21, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x7a1d1cc8 # load x3 with value 0x7a1d1cc8
sw x3, 0(x2) # store 0x7a1d1cc8 in memory
flw f10, 0(x2) # load 0x7a1d1cc8 from memory into f10
fmadd.s f5, f6, f22, f10, dyn # perform operation
fmadd.s f5, f6, f22, f10, rdn # perform operation
fmadd.s f5, f6, f22, f10, rmm # perform operation
fmadd.s f5, f6, f22, f10, rne # perform operation
fmadd.s f5, f6, f22, f10, rtz # perform operation
fmadd.s f5, f6, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f6, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f6, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x5c65df9a # load x3 with value 0x5c65df9a
sw x3, 0(x2) # store 0x5c65df9a in memory
flw f23, 0(x2) # load 0x5c65df9a from memory into f23
fmadd.s f31, f24, f12, f23, dyn # perform operation
fmadd.s f31, f24, f12, f23, rdn # perform operation
fmadd.s f31, f24, f12, f23, rmm # perform operation
fmadd.s f31, f24, f12, f23, rne # perform operation
fmadd.s f31, f24, f12, f23, rtz # perform operation
fmadd.s f31, f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f12, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x821b1a12 # load x3 with value 0x821b1a12
sw x3, 0(x2) # store 0x821b1a12 in memory
flw f7, 0(x2) # load 0x821b1a12 from memory into f7
fmadd.s f15, f22, f28, f7, dyn # perform operation
fmadd.s f15, f22, f28, f7, rdn # perform operation
fmadd.s f15, f22, f28, f7, rmm # perform operation
fmadd.s f15, f22, f28, f7, rne # perform operation
fmadd.s f15, f22, f28, f7, rtz # perform operation
fmadd.s f15, f22, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f28, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
la x2, scratch
li x3, 0x13d9290e # load x3 with value 0x13d9290e
sw x3, 0(x2) # store 0x13d9290e in memory
flw f22, 0(x2) # load 0x13d9290e from memory into f22
fmadd.s f6, f8, f24, f22, dyn # perform operation
fmadd.s f6, f8, f24, f22, rdn # perform operation
fmadd.s f6, f8, f24, f22, rmm # perform operation
fmadd.s f6, f8, f24, f22, rne # perform operation
fmadd.s f6, f8, f24, f22, rtz # perform operation
fmadd.s f6, f8, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f24, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x981208f2 # load x3 with value 0x981208f2
sw x3, 0(x2) # store 0x981208f2 in memory
flw f29, 0(x2) # load 0x981208f2 from memory into f29
fmadd.s f11, f3, f5, f29, dyn # perform operation
fmadd.s f11, f3, f5, f29, rdn # perform operation
fmadd.s f11, f3, f5, f29, rmm # perform operation
fmadd.s f11, f3, f5, f29, rne # perform operation
fmadd.s f11, f3, f5, f29, rtz # perform operation
fmadd.s f11, f3, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f3, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f3, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f3, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f3, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f3, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
la x2, scratch
li x3, 0x27425124 # load x3 with value 0x27425124
sw x3, 0(x2) # store 0x27425124 in memory
flw f31, 0(x2) # load 0x27425124 from memory into f31
fmadd.s f30, f3, f9, f31, dyn # perform operation
fmadd.s f30, f3, f9, f31, rdn # perform operation
fmadd.s f30, f3, f9, f31, rmm # perform operation
fmadd.s f30, f3, f9, f31, rne # perform operation
fmadd.s f30, f3, f9, f31, rtz # perform operation
fmadd.s f30, f3, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xeddb3e33 # load x3 with value 0xeddb3e33
sw x3, 0(x2) # store 0xeddb3e33 in memory
flw f15, 0(x2) # load 0xeddb3e33 from memory into f15
fmadd.s f12, f6, f13, f15, dyn # perform operation
fmadd.s f12, f6, f13, f15, rdn # perform operation
fmadd.s f12, f6, f13, f15, rmm # perform operation
fmadd.s f12, f6, f13, f15, rne # perform operation
fmadd.s f12, f6, f13, f15, rtz # perform operation
fmadd.s f12, f6, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f13, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0xcb115611 # load x3 with value 0xcb115611
sw x3, 0(x2) # store 0xcb115611 in memory
flw f19, 0(x2) # load 0xcb115611 from memory into f19
fmadd.s f17, f12, f30, f19, dyn # perform operation
fmadd.s f17, f12, f30, f19, rdn # perform operation
fmadd.s f17, f12, f30, f19, rmm # perform operation
fmadd.s f17, f12, f30, f19, rne # perform operation
fmadd.s f17, f12, f30, f19, rtz # perform operation
fmadd.s f17, f12, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f30, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x5d9760ae # load x3 with value 0x5d9760ae
sw x3, 0(x2) # store 0x5d9760ae in memory
flw f14, 0(x2) # load 0x5d9760ae from memory into f14
fmadd.s f2, f3, f26, f14, dyn # perform operation
fmadd.s f2, f3, f26, f14, rdn # perform operation
fmadd.s f2, f3, f26, f14, rmm # perform operation
fmadd.s f2, f3, f26, f14, rne # perform operation
fmadd.s f2, f3, f26, f14, rtz # perform operation
fmadd.s f2, f3, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f26, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0xd642fd40 # load x3 with value 0xd642fd40
sw x3, 0(x2) # store 0xd642fd40 in memory
flw f18, 0(x2) # load 0xd642fd40 from memory into f18
fmadd.s f14, f13, f6, f18, dyn # perform operation
fmadd.s f14, f13, f6, f18, rdn # perform operation
fmadd.s f14, f13, f6, f18, rmm # perform operation
fmadd.s f14, f13, f6, f18, rne # perform operation
fmadd.s f14, f13, f6, f18, rtz # perform operation
fmadd.s f14, f13, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f6, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
la x2, scratch
li x3, 0xce72afb4 # load x3 with value 0xce72afb4
sw x3, 0(x2) # store 0xce72afb4 in memory
flw f27, 0(x2) # load 0xce72afb4 from memory into f27
fmadd.s f17, f9, f2, f27, dyn # perform operation
fmadd.s f17, f9, f2, f27, rdn # perform operation
fmadd.s f17, f9, f2, f27, rmm # perform operation
fmadd.s f17, f9, f2, f27, rne # perform operation
fmadd.s f17, f9, f2, f27, rtz # perform operation
fmadd.s f17, f9, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f2, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0x67b4e5f5 # load x3 with value 0x67b4e5f5
sw x3, 0(x2) # store 0x67b4e5f5 in memory
flw f25, 0(x2) # load 0x67b4e5f5 from memory into f25
fmadd.s f11, f10, f3, f25, dyn # perform operation
fmadd.s f11, f10, f3, f25, rdn # perform operation
fmadd.s f11, f10, f3, f25, rmm # perform operation
fmadd.s f11, f10, f3, f25, rne # perform operation
fmadd.s f11, f10, f3, f25, rtz # perform operation
fmadd.s f11, f10, f3, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f3, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f3, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x797bd9a8 # load x3 with value 0x797bd9a8
sw x3, 0(x2) # store 0x797bd9a8 in memory
flw f27, 0(x2) # load 0x797bd9a8 from memory into f27
fmadd.s f21, f2, f22, f27, dyn # perform operation
fmadd.s f21, f2, f22, f27, rdn # perform operation
fmadd.s f21, f2, f22, f27, rmm # perform operation
fmadd.s f21, f2, f22, f27, rne # perform operation
fmadd.s f21, f2, f22, f27, rtz # perform operation
fmadd.s f21, f2, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f22, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x5f4b30e8 # load x3 with value 0x5f4b30e8
sw x3, 0(x2) # store 0x5f4b30e8 in memory
flw f24, 0(x2) # load 0x5f4b30e8 from memory into f24
fmadd.s f9, f20, f14, f24, dyn # perform operation
fmadd.s f9, f20, f14, f24, rdn # perform operation
fmadd.s f9, f20, f14, f24, rmm # perform operation
fmadd.s f9, f20, f14, f24, rne # perform operation
fmadd.s f9, f20, f14, f24, rtz # perform operation
fmadd.s f9, f20, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f14, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x4b10f190 # load x3 with value 0x4b10f190
sw x3, 0(x2) # store 0x4b10f190 in memory
flw f26, 0(x2) # load 0x4b10f190 from memory into f26
fmadd.s f7, f2, f21, f26, dyn # perform operation
fmadd.s f7, f2, f21, f26, rdn # perform operation
fmadd.s f7, f2, f21, f26, rmm # perform operation
fmadd.s f7, f2, f21, f26, rne # perform operation
fmadd.s f7, f2, f21, f26, rtz # perform operation
fmadd.s f7, f2, f21, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f21, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f21, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0xfe12e2d2 # load x3 with value 0xfe12e2d2
sw x3, 0(x2) # store 0xfe12e2d2 in memory
flw f5, 0(x2) # load 0xfe12e2d2 from memory into f5
fmadd.s f8, f3, f2, f5, dyn # perform operation
fmadd.s f8, f3, f2, f5, rdn # perform operation
fmadd.s f8, f3, f2, f5, rmm # perform operation
fmadd.s f8, f3, f2, f5, rne # perform operation
fmadd.s f8, f3, f2, f5, rtz # perform operation
fmadd.s f8, f3, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f3, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f3, f2, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
la x2, scratch
li x3, 0xe5913083 # load x3 with value 0xe5913083
sw x3, 0(x2) # store 0xe5913083 in memory
flw f20, 0(x2) # load 0xe5913083 from memory into f20
fmadd.s f7, f10, f17, f20, dyn # perform operation
fmadd.s f7, f10, f17, f20, rdn # perform operation
fmadd.s f7, f10, f17, f20, rmm # perform operation
fmadd.s f7, f10, f17, f20, rne # perform operation
fmadd.s f7, f10, f17, f20, rtz # perform operation
fmadd.s f7, f10, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f17, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x6e885cf1 # load x3 with value 0x6e885cf1
sw x3, 0(x2) # store 0x6e885cf1 in memory
flw f5, 0(x2) # load 0x6e885cf1 from memory into f5
fmadd.s f1, f6, f7, f5, dyn # perform operation
fmadd.s f1, f6, f7, f5, rdn # perform operation
fmadd.s f1, f6, f7, f5, rmm # perform operation
fmadd.s f1, f6, f7, f5, rne # perform operation
fmadd.s f1, f6, f7, f5, rtz # perform operation
fmadd.s f1, f6, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f6, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f6, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f6, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f6, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f6, f7, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0xcee36da3 # load x3 with value 0xcee36da3
sw x3, 0(x2) # store 0xcee36da3 in memory
flw f22, 0(x2) # load 0xcee36da3 from memory into f22
fmadd.s f15, f11, f20, f22, dyn # perform operation
fmadd.s f15, f11, f20, f22, rdn # perform operation
fmadd.s f15, f11, f20, f22, rmm # perform operation
fmadd.s f15, f11, f20, f22, rne # perform operation
fmadd.s f15, f11, f20, f22, rtz # perform operation
fmadd.s f15, f11, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
la x2, scratch
li x3, 0xae65b868 # load x3 with value 0xae65b868
sw x3, 0(x2) # store 0xae65b868 in memory
flw f2, 0(x2) # load 0xae65b868 from memory into f2
fmadd.s f23, f15, f18, f2, dyn # perform operation
fmadd.s f23, f15, f18, f2, rdn # perform operation
fmadd.s f23, f15, f18, f2, rmm # perform operation
fmadd.s f23, f15, f18, f2, rne # perform operation
fmadd.s f23, f15, f18, f2, rtz # perform operation
fmadd.s f23, f15, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f15, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f15, f18, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xad22a7cb # load x3 with value 0xad22a7cb
sw x3, 0(x2) # store 0xad22a7cb in memory
flw f27, 0(x2) # load 0xad22a7cb from memory into f27
fmadd.s f8, f2, f18, f27, dyn # perform operation
fmadd.s f8, f2, f18, f27, rdn # perform operation
fmadd.s f8, f2, f18, f27, rmm # perform operation
fmadd.s f8, f2, f18, f27, rne # perform operation
fmadd.s f8, f2, f18, f27, rtz # perform operation
fmadd.s f8, f2, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xdf61e11f # load x3 with value 0xdf61e11f
sw x3, 0(x2) # store 0xdf61e11f in memory
flw f10, 0(x2) # load 0xdf61e11f from memory into f10
fmadd.s f14, f12, f19, f10, dyn # perform operation
fmadd.s f14, f12, f19, f10, rdn # perform operation
fmadd.s f14, f12, f19, f10, rmm # perform operation
fmadd.s f14, f12, f19, f10, rne # perform operation
fmadd.s f14, f12, f19, f10, rtz # perform operation
fmadd.s f14, f12, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f19, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x555b6652 # load x3 with value 0x555b6652
sw x3, 0(x2) # store 0x555b6652 in memory
flw f22, 0(x2) # load 0x555b6652 from memory into f22
fmadd.s f8, f13, f2, f22, dyn # perform operation
fmadd.s f8, f13, f2, f22, rdn # perform operation
fmadd.s f8, f13, f2, f22, rmm # perform operation
fmadd.s f8, f13, f2, f22, rne # perform operation
fmadd.s f8, f13, f2, f22, rtz # perform operation
fmadd.s f8, f13, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f2, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x0f3a9542 # load x3 with value 0x0f3a9542
sw x3, 0(x2) # store 0x0f3a9542 in memory
flw f31, 0(x2) # load 0x0f3a9542 from memory into f31
fmadd.s f14, f24, f11, f31, dyn # perform operation
fmadd.s f14, f24, f11, f31, rdn # perform operation
fmadd.s f14, f24, f11, f31, rmm # perform operation
fmadd.s f14, f24, f11, f31, rne # perform operation
fmadd.s f14, f24, f11, f31, rtz # perform operation
fmadd.s f14, f24, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
la x2, scratch
li x3, 0xe63fc6ae # load x3 with value 0xe63fc6ae
sw x3, 0(x2) # store 0xe63fc6ae in memory
flw f25, 0(x2) # load 0xe63fc6ae from memory into f25
fmadd.s f31, f23, f13, f25, dyn # perform operation
fmadd.s f31, f23, f13, f25, rdn # perform operation
fmadd.s f31, f23, f13, f25, rmm # perform operation
fmadd.s f31, f23, f13, f25, rne # perform operation
fmadd.s f31, f23, f13, f25, rtz # perform operation
fmadd.s f31, f23, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f13, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0x9a4835e0 # load x3 with value 0x9a4835e0
sw x3, 0(x2) # store 0x9a4835e0 in memory
flw f31, 0(x2) # load 0x9a4835e0 from memory into f31
fmadd.s f10, f24, f8, f31, dyn # perform operation
fmadd.s f10, f24, f8, f31, rdn # perform operation
fmadd.s f10, f24, f8, f31, rmm # perform operation
fmadd.s f10, f24, f8, f31, rne # perform operation
fmadd.s f10, f24, f8, f31, rtz # perform operation
fmadd.s f10, f24, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f8, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
la x2, scratch
li x3, 0xb3e153e1 # load x3 with value 0xb3e153e1
sw x3, 0(x2) # store 0xb3e153e1 in memory
flw f27, 0(x2) # load 0xb3e153e1 from memory into f27
fmadd.s f18, f12, f25, f27, dyn # perform operation
fmadd.s f18, f12, f25, f27, rdn # perform operation
fmadd.s f18, f12, f25, f27, rmm # perform operation
fmadd.s f18, f12, f25, f27, rne # perform operation
fmadd.s f18, f12, f25, f27, rtz # perform operation
fmadd.s f18, f12, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xb0f04392 # load x3 with value 0xb0f04392
sw x3, 0(x2) # store 0xb0f04392 in memory
flw f30, 0(x2) # load 0xb0f04392 from memory into f30
fmadd.s f8, f19, f12, f30, dyn # perform operation
fmadd.s f8, f19, f12, f30, rdn # perform operation
fmadd.s f8, f19, f12, f30, rmm # perform operation
fmadd.s f8, f19, f12, f30, rne # perform operation
fmadd.s f8, f19, f12, f30, rtz # perform operation
fmadd.s f8, f19, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f12, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x4c56b2fa # load x3 with value 0x4c56b2fa
sw x3, 0(x2) # store 0x4c56b2fa in memory
flw f16, 0(x2) # load 0x4c56b2fa from memory into f16
fmadd.s f25, f7, f5, f16, dyn # perform operation
fmadd.s f25, f7, f5, f16, rdn # perform operation
fmadd.s f25, f7, f5, f16, rmm # perform operation
fmadd.s f25, f7, f5, f16, rne # perform operation
fmadd.s f25, f7, f5, f16, rtz # perform operation
fmadd.s f25, f7, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f5, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0xc73c5b43 # load x3 with value 0xc73c5b43
sw x3, 0(x2) # store 0xc73c5b43 in memory
flw f23, 0(x2) # load 0xc73c5b43 from memory into f23
fmadd.s f2, f21, f14, f23, dyn # perform operation
fmadd.s f2, f21, f14, f23, rdn # perform operation
fmadd.s f2, f21, f14, f23, rmm # perform operation
fmadd.s f2, f21, f14, f23, rne # perform operation
fmadd.s f2, f21, f14, f23, rtz # perform operation
fmadd.s f2, f21, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f14, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x4c9557b8 # load x3 with value 0x4c9557b8
sw x3, 0(x2) # store 0x4c9557b8 in memory
flw f11, 0(x2) # load 0x4c9557b8 from memory into f11
fmadd.s f29, f14, f23, f11, dyn # perform operation
fmadd.s f29, f14, f23, f11, rdn # perform operation
fmadd.s f29, f14, f23, f11, rmm # perform operation
fmadd.s f29, f14, f23, f11, rne # perform operation
fmadd.s f29, f14, f23, f11, rtz # perform operation
fmadd.s f29, f14, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f23, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x22bc8938 # load x3 with value 0x22bc8938
sw x3, 0(x2) # store 0x22bc8938 in memory
flw f19, 0(x2) # load 0x22bc8938 from memory into f19
fmadd.s f14, f20, f17, f19, dyn # perform operation
fmadd.s f14, f20, f17, f19, rdn # perform operation
fmadd.s f14, f20, f17, f19, rmm # perform operation
fmadd.s f14, f20, f17, f19, rne # perform operation
fmadd.s f14, f20, f17, f19, rtz # perform operation
fmadd.s f14, f20, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f20, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f20, f17, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x1b7abb8c # load x3 with value 0x1b7abb8c
sw x3, 0(x2) # store 0x1b7abb8c in memory
flw f15, 0(x2) # load 0x1b7abb8c from memory into f15
fmadd.s f24, f23, f26, f15, dyn # perform operation
fmadd.s f24, f23, f26, f15, rdn # perform operation
fmadd.s f24, f23, f26, f15, rmm # perform operation
fmadd.s f24, f23, f26, f15, rne # perform operation
fmadd.s f24, f23, f26, f15, rtz # perform operation
fmadd.s f24, f23, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f26, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x10c582ff # load x3 with value 0x10c582ff
sw x3, 0(x2) # store 0x10c582ff in memory
flw f22, 0(x2) # load 0x10c582ff from memory into f22
fmadd.s f8, f20, f14, f22, dyn # perform operation
fmadd.s f8, f20, f14, f22, rdn # perform operation
fmadd.s f8, f20, f14, f22, rmm # perform operation
fmadd.s f8, f20, f14, f22, rne # perform operation
fmadd.s f8, f20, f14, f22, rtz # perform operation
fmadd.s f8, f20, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0x0c266042 # load x3 with value 0x0c266042
sw x3, 0(x2) # store 0x0c266042 in memory
flw f23, 0(x2) # load 0x0c266042 from memory into f23
fmadd.s f18, f31, f11, f23, dyn # perform operation
fmadd.s f18, f31, f11, f23, rdn # perform operation
fmadd.s f18, f31, f11, f23, rmm # perform operation
fmadd.s f18, f31, f11, f23, rne # perform operation
fmadd.s f18, f31, f11, f23, rtz # perform operation
fmadd.s f18, f31, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f31, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f31, f11, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x4cb49cac # load x3 with value 0x4cb49cac
sw x3, 0(x2) # store 0x4cb49cac in memory
flw f2, 0(x2) # load 0x4cb49cac from memory into f2
fmadd.s f17, f5, f24, f2, dyn # perform operation
fmadd.s f17, f5, f24, f2, rdn # perform operation
fmadd.s f17, f5, f24, f2, rmm # perform operation
fmadd.s f17, f5, f24, f2, rne # perform operation
fmadd.s f17, f5, f24, f2, rtz # perform operation
fmadd.s f17, f5, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f24, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0xc6617848 # load x3 with value 0xc6617848
sw x3, 0(x2) # store 0xc6617848 in memory
flw f30, 0(x2) # load 0xc6617848 from memory into f30
fmadd.s f14, f11, f29, f30, dyn # perform operation
fmadd.s f14, f11, f29, f30, rdn # perform operation
fmadd.s f14, f11, f29, f30, rmm # perform operation
fmadd.s f14, f11, f29, f30, rne # perform operation
fmadd.s f14, f11, f29, f30, rtz # perform operation
fmadd.s f14, f11, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f29, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
la x2, scratch
li x3, 0x351a3b69 # load x3 with value 0x351a3b69
sw x3, 0(x2) # store 0x351a3b69 in memory
flw f31, 0(x2) # load 0x351a3b69 from memory into f31
fmadd.s f2, f25, f21, f31, dyn # perform operation
fmadd.s f2, f25, f21, f31, rdn # perform operation
fmadd.s f2, f25, f21, f31, rmm # perform operation
fmadd.s f2, f25, f21, f31, rne # perform operation
fmadd.s f2, f25, f21, f31, rtz # perform operation
fmadd.s f2, f25, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f25, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f25, f21, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
la x2, scratch
li x3, 0xfe3aa994 # load x3 with value 0xfe3aa994
sw x3, 0(x2) # store 0xfe3aa994 in memory
flw f10, 0(x2) # load 0xfe3aa994 from memory into f10
fmadd.s f9, f22, f24, f10, dyn # perform operation
fmadd.s f9, f22, f24, f10, rdn # perform operation
fmadd.s f9, f22, f24, f10, rmm # perform operation
fmadd.s f9, f22, f24, f10, rne # perform operation
fmadd.s f9, f22, f24, f10, rtz # perform operation
fmadd.s f9, f22, f24, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f22, f24, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f22, f24, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
la x2, scratch
li x3, 0xbde877f5 # load x3 with value 0xbde877f5
sw x3, 0(x2) # store 0xbde877f5 in memory
flw f9, 0(x2) # load 0xbde877f5 from memory into f9
fmadd.s f17, f24, f18, f9, dyn # perform operation
fmadd.s f17, f24, f18, f9, rdn # perform operation
fmadd.s f17, f24, f18, f9, rmm # perform operation
fmadd.s f17, f24, f18, f9, rne # perform operation
fmadd.s f17, f24, f18, f9, rtz # perform operation
fmadd.s f17, f24, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f24, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f24, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f24, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f24, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f24, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xecf6f60a # load x3 with value 0xecf6f60a
sw x3, 0(x2) # store 0xecf6f60a in memory
flw f5, 0(x2) # load 0xecf6f60a from memory into f5
fmadd.s f8, f22, f15, f5, dyn # perform operation
fmadd.s f8, f22, f15, f5, rdn # perform operation
fmadd.s f8, f22, f15, f5, rmm # perform operation
fmadd.s f8, f22, f15, f5, rne # perform operation
fmadd.s f8, f22, f15, f5, rtz # perform operation
fmadd.s f8, f22, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f15, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x1f54961b # load x3 with value 0x1f54961b
sw x3, 0(x2) # store 0x1f54961b in memory
flw f28, 0(x2) # load 0x1f54961b from memory into f28
fmadd.s f24, f12, f5, f28, dyn # perform operation
fmadd.s f24, f12, f5, f28, rdn # perform operation
fmadd.s f24, f12, f5, f28, rmm # perform operation
fmadd.s f24, f12, f5, f28, rne # perform operation
fmadd.s f24, f12, f5, f28, rtz # perform operation
fmadd.s f24, f12, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f5, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0x59a07687 # load x3 with value 0x59a07687
sw x3, 0(x2) # store 0x59a07687 in memory
flw f13, 0(x2) # load 0x59a07687 from memory into f13
fmadd.s f6, f23, f8, f13, dyn # perform operation
fmadd.s f6, f23, f8, f13, rdn # perform operation
fmadd.s f6, f23, f8, f13, rmm # perform operation
fmadd.s f6, f23, f8, f13, rne # perform operation
fmadd.s f6, f23, f8, f13, rtz # perform operation
fmadd.s f6, f23, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f23, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f23, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x7300d7fd # load x3 with value 0x7300d7fd
sw x3, 0(x2) # store 0x7300d7fd in memory
flw f25, 0(x2) # load 0x7300d7fd from memory into f25
fmadd.s f2, f9, f21, f25, dyn # perform operation
fmadd.s f2, f9, f21, f25, rdn # perform operation
fmadd.s f2, f9, f21, f25, rmm # perform operation
fmadd.s f2, f9, f21, f25, rne # perform operation
fmadd.s f2, f9, f21, f25, rtz # perform operation
fmadd.s f2, f9, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f9, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f9, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f9, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f9, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f9, f21, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0xeffd6805 # load x3 with value 0xeffd6805
sw x3, 0(x2) # store 0xeffd6805 in memory
flw f30, 0(x2) # load 0xeffd6805 from memory into f30
fmadd.s f8, f5, f21, f30, dyn # perform operation
fmadd.s f8, f5, f21, f30, rdn # perform operation
fmadd.s f8, f5, f21, f30, rmm # perform operation
fmadd.s f8, f5, f21, f30, rne # perform operation
fmadd.s f8, f5, f21, f30, rtz # perform operation
fmadd.s f8, f5, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f21, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x77628f55 # load x3 with value 0x77628f55
sw x3, 0(x2) # store 0x77628f55 in memory
flw f28, 0(x2) # load 0x77628f55 from memory into f28
fmadd.s f8, f2, f1, f28, dyn # perform operation
fmadd.s f8, f2, f1, f28, rdn # perform operation
fmadd.s f8, f2, f1, f28, rmm # perform operation
fmadd.s f8, f2, f1, f28, rne # perform operation
fmadd.s f8, f2, f1, f28, rtz # perform operation
fmadd.s f8, f2, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0xb721540e # load x3 with value 0xb721540e
sw x3, 0(x2) # store 0xb721540e in memory
flw f17, 0(x2) # load 0xb721540e from memory into f17
fmadd.s f20, f26, f28, f17, dyn # perform operation
fmadd.s f20, f26, f28, f17, rdn # perform operation
fmadd.s f20, f26, f28, f17, rmm # perform operation
fmadd.s f20, f26, f28, f17, rne # perform operation
fmadd.s f20, f26, f28, f17, rtz # perform operation
fmadd.s f20, f26, f28, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f28, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f28, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f28, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f28, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f28, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x0adaed0c # load x3 with value 0x0adaed0c
sw x3, 0(x2) # store 0x0adaed0c in memory
flw f31, 0(x2) # load 0x0adaed0c from memory into f31
fmadd.s f5, f23, f11, f31, dyn # perform operation
fmadd.s f5, f23, f11, f31, rdn # perform operation
fmadd.s f5, f23, f11, f31, rmm # perform operation
fmadd.s f5, f23, f11, f31, rne # perform operation
fmadd.s f5, f23, f11, f31, rtz # perform operation
fmadd.s f5, f23, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f11, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x899a857f # load x3 with value 0x899a857f
sw x3, 0(x2) # store 0x899a857f in memory
flw f16, 0(x2) # load 0x899a857f from memory into f16
fmadd.s f7, f31, f18, f16, dyn # perform operation
fmadd.s f7, f31, f18, f16, rdn # perform operation
fmadd.s f7, f31, f18, f16, rmm # perform operation
fmadd.s f7, f31, f18, f16, rne # perform operation
fmadd.s f7, f31, f18, f16, rtz # perform operation
fmadd.s f7, f31, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f31, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f31, f18, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x884e17b9 # load x3 with value 0x884e17b9
sw x3, 0(x2) # store 0x884e17b9 in memory
flw f30, 0(x2) # load 0x884e17b9 from memory into f30
fmadd.s f10, f5, f1, f30, dyn # perform operation
fmadd.s f10, f5, f1, f30, rdn # perform operation
fmadd.s f10, f5, f1, f30, rmm # perform operation
fmadd.s f10, f5, f1, f30, rne # perform operation
fmadd.s f10, f5, f1, f30, rtz # perform operation
fmadd.s f10, f5, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f5, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f5, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x1742eefb # load x3 with value 0x1742eefb
sw x3, 0(x2) # store 0x1742eefb in memory
flw f26, 0(x2) # load 0x1742eefb from memory into f26
fmadd.s f16, f21, f12, f26, dyn # perform operation
fmadd.s f16, f21, f12, f26, rdn # perform operation
fmadd.s f16, f21, f12, f26, rmm # perform operation
fmadd.s f16, f21, f12, f26, rne # perform operation
fmadd.s f16, f21, f12, f26, rtz # perform operation
fmadd.s f16, f21, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f12, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0xed0f674e # load x3 with value 0xed0f674e
sw x3, 0(x2) # store 0xed0f674e in memory
flw f20, 0(x2) # load 0xed0f674e from memory into f20
fmadd.s f27, f9, f25, f20, dyn # perform operation
fmadd.s f27, f9, f25, f20, rdn # perform operation
fmadd.s f27, f9, f25, f20, rmm # perform operation
fmadd.s f27, f9, f25, f20, rne # perform operation
fmadd.s f27, f9, f25, f20, rtz # perform operation
fmadd.s f27, f9, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f25, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
la x2, scratch
li x3, 0xb1880df8 # load x3 with value 0xb1880df8
sw x3, 0(x2) # store 0xb1880df8 in memory
flw f8, 0(x2) # load 0xb1880df8 from memory into f8
fmadd.s f21, f27, f5, f8, dyn # perform operation
fmadd.s f21, f27, f5, f8, rdn # perform operation
fmadd.s f21, f27, f5, f8, rmm # perform operation
fmadd.s f21, f27, f5, f8, rne # perform operation
fmadd.s f21, f27, f5, f8, rtz # perform operation
fmadd.s f21, f27, f5, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f5, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f5, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f5, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f5, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f5, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x000fb5f1 # load x3 with value 0x000fb5f1
sw x3, 0(x2) # store 0x000fb5f1 in memory
flw f9, 0(x2) # load 0x000fb5f1 from memory into f9
fmadd.s f26, f3, f17, f9, dyn # perform operation
fmadd.s f26, f3, f17, f9, rdn # perform operation
fmadd.s f26, f3, f17, f9, rmm # perform operation
fmadd.s f26, f3, f17, f9, rne # perform operation
fmadd.s f26, f3, f17, f9, rtz # perform operation
fmadd.s f26, f3, f17, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f17, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f17, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f13, 0(x2) # load 0x7fffffff from memory into f13
la x2, scratch
li x3, 0x9258dbc2 # load x3 with value 0x9258dbc2
sw x3, 0(x2) # store 0x9258dbc2 in memory
flw f27, 0(x2) # load 0x9258dbc2 from memory into f27
fmadd.s f14, f1, f13, f27, dyn # perform operation
fmadd.s f14, f1, f13, f27, rdn # perform operation
fmadd.s f14, f1, f13, f27, rmm # perform operation
fmadd.s f14, f1, f13, f27, rne # perform operation
fmadd.s f14, f1, f13, f27, rtz # perform operation
fmadd.s f14, f1, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f13, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0xafcfde48 # load x3 with value 0xafcfde48
sw x3, 0(x2) # store 0xafcfde48 in memory
flw f19, 0(x2) # load 0xafcfde48 from memory into f19
fmadd.s f15, f12, f20, f19, dyn # perform operation
fmadd.s f15, f12, f20, f19, rdn # perform operation
fmadd.s f15, f12, f20, f19, rmm # perform operation
fmadd.s f15, f12, f20, f19, rne # perform operation
fmadd.s f15, f12, f20, f19, rtz # perform operation
fmadd.s f15, f12, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x460d2416 # load x3 with value 0x460d2416
sw x3, 0(x2) # store 0x460d2416 in memory
flw f7, 0(x2) # load 0x460d2416 from memory into f7
fmadd.s f29, f12, f18, f7, dyn # perform operation
fmadd.s f29, f12, f18, f7, rdn # perform operation
fmadd.s f29, f12, f18, f7, rmm # perform operation
fmadd.s f29, f12, f18, f7, rne # perform operation
fmadd.s f29, f12, f18, f7, rtz # perform operation
fmadd.s f29, f12, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f18, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x250b4b5b # load x3 with value 0x250b4b5b
sw x3, 0(x2) # store 0x250b4b5b in memory
flw f3, 0(x2) # load 0x250b4b5b from memory into f3
fmadd.s f31, f8, f21, f3, dyn # perform operation
fmadd.s f31, f8, f21, f3, rdn # perform operation
fmadd.s f31, f8, f21, f3, rmm # perform operation
fmadd.s f31, f8, f21, f3, rne # perform operation
fmadd.s f31, f8, f21, f3, rtz # perform operation
fmadd.s f31, f8, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f8, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f8, f21, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xd8a9f14e # load x3 with value 0xd8a9f14e
sw x3, 0(x2) # store 0xd8a9f14e in memory
flw f18, 0(x2) # load 0xd8a9f14e from memory into f18
fmadd.s f11, f1, f29, f18, dyn # perform operation
fmadd.s f11, f1, f29, f18, rdn # perform operation
fmadd.s f11, f1, f29, f18, rmm # perform operation
fmadd.s f11, f1, f29, f18, rne # perform operation
fmadd.s f11, f1, f29, f18, rtz # perform operation
fmadd.s f11, f1, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f29, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
la x2, scratch
li x3, 0xb3f41457 # load x3 with value 0xb3f41457
sw x3, 0(x2) # store 0xb3f41457 in memory
flw f14, 0(x2) # load 0xb3f41457 from memory into f14
fmadd.s f29, f6, f25, f14, dyn # perform operation
fmadd.s f29, f6, f25, f14, rdn # perform operation
fmadd.s f29, f6, f25, f14, rmm # perform operation
fmadd.s f29, f6, f25, f14, rne # perform operation
fmadd.s f29, f6, f25, f14, rtz # perform operation
fmadd.s f29, f6, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f25, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffffffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x007aa672 # load x3 with value 0x007aa672
sw x3, 0(x2) # store 0x007aa672 in memory
flw f10, 0(x2) # load 0x007aa672 from memory into f10
fmadd.s f6, f19, f22, f10, dyn # perform operation
fmadd.s f6, f19, f22, f10, rdn # perform operation
fmadd.s f6, f19, f22, f10, rmm # perform operation
fmadd.s f6, f19, f22, f10, rne # perform operation
fmadd.s f6, f19, f22, f10, rtz # perform operation
fmadd.s f6, f19, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f22, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
la x2, scratch
li x3, 0x46378894 # load x3 with value 0x46378894
sw x3, 0(x2) # store 0x46378894 in memory
flw f1, 0(x2) # load 0x46378894 from memory into f1
fmadd.s f31, f3, f28, f1, dyn # perform operation
fmadd.s f31, f3, f28, f1, rdn # perform operation
fmadd.s f31, f3, f28, f1, rmm # perform operation
fmadd.s f31, f3, f28, f1, rne # perform operation
fmadd.s f31, f3, f28, f1, rtz # perform operation
fmadd.s f31, f3, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
la x2, scratch
li x3, 0xa234e031 # load x3 with value 0xa234e031
sw x3, 0(x2) # store 0xa234e031 in memory
flw f7, 0(x2) # load 0xa234e031 from memory into f7
fmadd.s f30, f5, f24, f7, dyn # perform operation
fmadd.s f30, f5, f24, f7, rdn # perform operation
fmadd.s f30, f5, f24, f7, rmm # perform operation
fmadd.s f30, f5, f24, f7, rne # perform operation
fmadd.s f30, f5, f24, f7, rtz # perform operation
fmadd.s f30, f5, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f24, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
la x2, scratch
li x3, 0xab7eb388 # load x3 with value 0xab7eb388
sw x3, 0(x2) # store 0xab7eb388 in memory
flw f14, 0(x2) # load 0xab7eb388 from memory into f14
fmadd.s f17, f25, f18, f14, dyn # perform operation
fmadd.s f17, f25, f18, f14, rdn # perform operation
fmadd.s f17, f25, f18, f14, rmm # perform operation
fmadd.s f17, f25, f18, f14, rne # perform operation
fmadd.s f17, f25, f18, f14, rtz # perform operation
fmadd.s f17, f25, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f18, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
la x2, scratch
li x3, 0x6f687963 # load x3 with value 0x6f687963
sw x3, 0(x2) # store 0x6f687963 in memory
flw f21, 0(x2) # load 0x6f687963 from memory into f21
fmadd.s f17, f23, f24, f21, dyn # perform operation
fmadd.s f17, f23, f24, f21, rdn # perform operation
fmadd.s f17, f23, f24, f21, rmm # perform operation
fmadd.s f17, f23, f24, f21, rne # perform operation
fmadd.s f17, f23, f24, f21, rtz # perform operation
fmadd.s f17, f23, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f24, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
la x2, scratch
li x3, 0x29c7cf7a # load x3 with value 0x29c7cf7a
sw x3, 0(x2) # store 0x29c7cf7a in memory
flw f23, 0(x2) # load 0x29c7cf7a from memory into f23
fmadd.s f28, f18, f20, f23, dyn # perform operation
fmadd.s f28, f18, f20, f23, rdn # perform operation
fmadd.s f28, f18, f20, f23, rmm # perform operation
fmadd.s f28, f18, f20, f23, rne # perform operation
fmadd.s f28, f18, f20, f23, rtz # perform operation
fmadd.s f28, f18, f20, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f18, f20, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f18, f20, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f18, f20, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f18, f20, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f18, f20, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x9a23d081 # load x3 with value 0x9a23d081
sw x3, 0(x2) # store 0x9a23d081 in memory
flw f15, 0(x2) # load 0x9a23d081 from memory into f15
fmadd.s f19, f12, f21, f15, dyn # perform operation
fmadd.s f19, f12, f21, f15, rdn # perform operation
fmadd.s f19, f12, f21, f15, rmm # perform operation
fmadd.s f19, f12, f21, f15, rne # perform operation
fmadd.s f19, f12, f21, f15, rtz # perform operation
fmadd.s f19, f12, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f12, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f12, f21, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x48dfd903 # load x3 with value 0x48dfd903
sw x3, 0(x2) # store 0x48dfd903 in memory
flw f7, 0(x2) # load 0x48dfd903 from memory into f7
fmadd.s f11, f14, f8, f7, dyn # perform operation
fmadd.s f11, f14, f8, f7, rdn # perform operation
fmadd.s f11, f14, f8, f7, rmm # perform operation
fmadd.s f11, f14, f8, f7, rne # perform operation
fmadd.s f11, f14, f8, f7, rtz # perform operation
fmadd.s f11, f14, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f8, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
la x2, scratch
li x3, 0x3154dec4 # load x3 with value 0x3154dec4
sw x3, 0(x2) # store 0x3154dec4 in memory
flw f27, 0(x2) # load 0x3154dec4 from memory into f27
fmadd.s f26, f20, f18, f27, dyn # perform operation
fmadd.s f26, f20, f18, f27, rdn # perform operation
fmadd.s f26, f20, f18, f27, rmm # perform operation
fmadd.s f26, f20, f18, f27, rne # perform operation
fmadd.s f26, f20, f18, f27, rtz # perform operation
fmadd.s f26, f20, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f18, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x05f4cdda # load x3 with value 0x05f4cdda
sw x3, 0(x2) # store 0x05f4cdda in memory
flw f1, 0(x2) # load 0x05f4cdda from memory into f1
fmadd.s f27, f18, f28, f1, dyn # perform operation
fmadd.s f27, f18, f28, f1, rdn # perform operation
fmadd.s f27, f18, f28, f1, rmm # perform operation
fmadd.s f27, f18, f28, f1, rne # perform operation
fmadd.s f27, f18, f28, f1, rtz # perform operation
fmadd.s f27, f18, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f28, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x85310f12 # load x3 with value 0x85310f12
sw x3, 0(x2) # store 0x85310f12 in memory
flw f30, 0(x2) # load 0x85310f12 from memory into f30
fmadd.s f25, f6, f1, f30, dyn # perform operation
fmadd.s f25, f6, f1, f30, rdn # perform operation
fmadd.s f25, f6, f1, f30, rmm # perform operation
fmadd.s f25, f6, f1, f30, rne # perform operation
fmadd.s f25, f6, f1, f30, rtz # perform operation
fmadd.s f25, f6, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x3f480ce9 # load x3 with value 0x3f480ce9
sw x3, 0(x2) # store 0x3f480ce9 in memory
flw f1, 0(x2) # load 0x3f480ce9 from memory into f1
fmadd.s f16, f21, f9, f1, dyn # perform operation
fmadd.s f16, f21, f9, f1, rdn # perform operation
fmadd.s f16, f21, f9, f1, rmm # perform operation
fmadd.s f16, f21, f9, f1, rne # perform operation
fmadd.s f16, f21, f9, f1, rtz # perform operation
fmadd.s f16, f21, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f9, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
la x2, scratch
li x3, 0x9468dba5 # load x3 with value 0x9468dba5
sw x3, 0(x2) # store 0x9468dba5 in memory
flw f27, 0(x2) # load 0x9468dba5 from memory into f27
fmadd.s f10, f26, f7, f27, dyn # perform operation
fmadd.s f10, f26, f7, f27, rdn # perform operation
fmadd.s f10, f26, f7, f27, rmm # perform operation
fmadd.s f10, f26, f7, f27, rne # perform operation
fmadd.s f10, f26, f7, f27, rtz # perform operation
fmadd.s f10, f26, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f26, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f26, f7, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
la x2, scratch
li x3, 0xe43433b3 # load x3 with value 0xe43433b3
sw x3, 0(x2) # store 0xe43433b3 in memory
flw f2, 0(x2) # load 0xe43433b3 from memory into f2
fmadd.s f10, f27, f12, f2, dyn # perform operation
fmadd.s f10, f27, f12, f2, rdn # perform operation
fmadd.s f10, f27, f12, f2, rmm # perform operation
fmadd.s f10, f27, f12, f2, rne # perform operation
fmadd.s f10, f27, f12, f2, rtz # perform operation
fmadd.s f10, f27, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f27, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f27, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f27, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f27, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f27, f12, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xf136aefa # load x3 with value 0xf136aefa
sw x3, 0(x2) # store 0xf136aefa in memory
flw f24, 0(x2) # load 0xf136aefa from memory into f24
fmadd.s f21, f31, f18, f24, dyn # perform operation
fmadd.s f21, f31, f18, f24, rdn # perform operation
fmadd.s f21, f31, f18, f24, rmm # perform operation
fmadd.s f21, f31, f18, f24, rne # perform operation
fmadd.s f21, f31, f18, f24, rtz # perform operation
fmadd.s f21, f31, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x0c57aa35 # load x3 with value 0x0c57aa35
sw x3, 0(x2) # store 0x0c57aa35 in memory
flw f13, 0(x2) # load 0x0c57aa35 from memory into f13
fmadd.s f12, f15, f23, f13, dyn # perform operation
fmadd.s f12, f15, f23, f13, rdn # perform operation
fmadd.s f12, f15, f23, f13, rmm # perform operation
fmadd.s f12, f15, f23, f13, rne # perform operation
fmadd.s f12, f15, f23, f13, rtz # perform operation
fmadd.s f12, f15, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f23, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0x9b31feb3 # load x3 with value 0x9b31feb3
sw x3, 0(x2) # store 0x9b31feb3 in memory
flw f22, 0(x2) # load 0x9b31feb3 from memory into f22
fmadd.s f17, f23, f1, f22, dyn # perform operation
fmadd.s f17, f23, f1, f22, rdn # perform operation
fmadd.s f17, f23, f1, f22, rmm # perform operation
fmadd.s f17, f23, f1, f22, rne # perform operation
fmadd.s f17, f23, f1, f22, rtz # perform operation
fmadd.s f17, f23, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
la x2, scratch
li x3, 0x96dc4553 # load x3 with value 0x96dc4553
sw x3, 0(x2) # store 0x96dc4553 in memory
flw f13, 0(x2) # load 0x96dc4553 from memory into f13
fmadd.s f3, f2, f29, f13, dyn # perform operation
fmadd.s f3, f2, f29, f13, rdn # perform operation
fmadd.s f3, f2, f29, f13, rmm # perform operation
fmadd.s f3, f2, f29, f13, rne # perform operation
fmadd.s f3, f2, f29, f13, rtz # perform operation
fmadd.s f3, f2, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f29, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
la x2, scratch
li x3, 0xb61afd67 # load x3 with value 0xb61afd67
sw x3, 0(x2) # store 0xb61afd67 in memory
flw f5, 0(x2) # load 0xb61afd67 from memory into f5
fmadd.s f25, f26, f14, f5, dyn # perform operation
fmadd.s f25, f26, f14, f5, rdn # perform operation
fmadd.s f25, f26, f14, f5, rmm # perform operation
fmadd.s f25, f26, f14, f5, rne # perform operation
fmadd.s f25, f26, f14, f5, rtz # perform operation
fmadd.s f25, f26, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f26, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f26, f14, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
la x2, scratch
li x3, 0xc0999a62 # load x3 with value 0xc0999a62
sw x3, 0(x2) # store 0xc0999a62 in memory
flw f17, 0(x2) # load 0xc0999a62 from memory into f17
fmadd.s f6, f22, f15, f17, dyn # perform operation
fmadd.s f6, f22, f15, f17, rdn # perform operation
fmadd.s f6, f22, f15, f17, rmm # perform operation
fmadd.s f6, f22, f15, f17, rne # perform operation
fmadd.s f6, f22, f15, f17, rtz # perform operation
fmadd.s f6, f22, f15, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f22, f15, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f22, f15, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x36d6154e # load x3 with value 0x36d6154e
sw x3, 0(x2) # store 0x36d6154e in memory
flw f30, 0(x2) # load 0x36d6154e from memory into f30
fmadd.s f22, f26, f1, f30, dyn # perform operation
fmadd.s f22, f26, f1, f30, rdn # perform operation
fmadd.s f22, f26, f1, f30, rmm # perform operation
fmadd.s f22, f26, f1, f30, rne # perform operation
fmadd.s f22, f26, f1, f30, rtz # perform operation
fmadd.s f22, f26, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f1, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x9b7f2d6c # load x3 with value 0x9b7f2d6c
sw x3, 0(x2) # store 0x9b7f2d6c in memory
flw f24, 0(x2) # load 0x9b7f2d6c from memory into f24
fmadd.s f2, f28, f1, f24, dyn # perform operation
fmadd.s f2, f28, f1, f24, rdn # perform operation
fmadd.s f2, f28, f1, f24, rmm # perform operation
fmadd.s f2, f28, f1, f24, rne # perform operation
fmadd.s f2, f28, f1, f24, rtz # perform operation
fmadd.s f2, f28, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f1, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0xcbb83855 # load x3 with value 0xcbb83855
sw x3, 0(x2) # store 0xcbb83855 in memory
flw f24, 0(x2) # load 0xcbb83855 from memory into f24
fmadd.s f29, f2, f21, f24, dyn # perform operation
fmadd.s f29, f2, f21, f24, rdn # perform operation
fmadd.s f29, f2, f21, f24, rmm # perform operation
fmadd.s f29, f2, f21, f24, rne # perform operation
fmadd.s f29, f2, f21, f24, rtz # perform operation
fmadd.s f29, f2, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f21, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x01c75a35 # load x3 with value 0x01c75a35
sw x3, 0(x2) # store 0x01c75a35 in memory
flw f7, 0(x2) # load 0x01c75a35 from memory into f7
fmadd.s f10, f18, f1, f7, dyn # perform operation
fmadd.s f10, f18, f1, f7, rdn # perform operation
fmadd.s f10, f18, f1, f7, rmm # perform operation
fmadd.s f10, f18, f1, f7, rne # perform operation
fmadd.s f10, f18, f1, f7, rtz # perform operation
fmadd.s f10, f18, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f1, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x235abad0 # load x3 with value 0x235abad0
sw x3, 0(x2) # store 0x235abad0 in memory
flw f22, 0(x2) # load 0x235abad0 from memory into f22
fmadd.s f19, f7, f21, f22, dyn # perform operation
fmadd.s f19, f7, f21, f22, rdn # perform operation
fmadd.s f19, f7, f21, f22, rmm # perform operation
fmadd.s f19, f7, f21, f22, rne # perform operation
fmadd.s f19, f7, f21, f22, rtz # perform operation
fmadd.s f19, f7, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xdb316157 # load x3 with value 0xdb316157
sw x3, 0(x2) # store 0xdb316157 in memory
flw f13, 0(x2) # load 0xdb316157 from memory into f13
fmadd.s f19, f16, f26, f13, dyn # perform operation
fmadd.s f19, f16, f26, f13, rdn # perform operation
fmadd.s f19, f16, f26, f13, rmm # perform operation
fmadd.s f19, f16, f26, f13, rne # perform operation
fmadd.s f19, f16, f26, f13, rtz # perform operation
fmadd.s f19, f16, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f26, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
la x2, scratch
li x3, 0x51482967 # load x3 with value 0x51482967
sw x3, 0(x2) # store 0x51482967 in memory
flw f25, 0(x2) # load 0x51482967 from memory into f25
fmadd.s f11, f23, f1, f25, dyn # perform operation
fmadd.s f11, f23, f1, f25, rdn # perform operation
fmadd.s f11, f23, f1, f25, rmm # perform operation
fmadd.s f11, f23, f1, f25, rne # perform operation
fmadd.s f11, f23, f1, f25, rtz # perform operation
fmadd.s f11, f23, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f1, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x4a69157a # load x3 with value 0x4a69157a
sw x3, 0(x2) # store 0x4a69157a in memory
flw f18, 0(x2) # load 0x4a69157a from memory into f18
fmadd.s f12, f23, f2, f18, dyn # perform operation
fmadd.s f12, f23, f2, f18, rdn # perform operation
fmadd.s f12, f23, f2, f18, rmm # perform operation
fmadd.s f12, f23, f2, f18, rne # perform operation
fmadd.s f12, f23, f2, f18, rtz # perform operation
fmadd.s f12, f23, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f2, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x451077ec # load x3 with value 0x451077ec
sw x3, 0(x2) # store 0x451077ec in memory
flw f5, 0(x2) # load 0x451077ec from memory into f5
fmadd.s f24, f17, f30, f5, dyn # perform operation
fmadd.s f24, f17, f30, f5, rdn # perform operation
fmadd.s f24, f17, f30, f5, rmm # perform operation
fmadd.s f24, f17, f30, f5, rne # perform operation
fmadd.s f24, f17, f30, f5, rtz # perform operation
fmadd.s f24, f17, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f30, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
la x2, scratch
li x3, 0x010fbbcd # load x3 with value 0x010fbbcd
sw x3, 0(x2) # store 0x010fbbcd in memory
flw f5, 0(x2) # load 0x010fbbcd from memory into f5
fmadd.s f26, f15, f3, f5, dyn # perform operation
fmadd.s f26, f15, f3, f5, rdn # perform operation
fmadd.s f26, f15, f3, f5, rmm # perform operation
fmadd.s f26, f15, f3, f5, rne # perform operation
fmadd.s f26, f15, f3, f5, rtz # perform operation
fmadd.s f26, f15, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f3, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
la x2, scratch
li x3, 0xbcafffab # load x3 with value 0xbcafffab
sw x3, 0(x2) # store 0xbcafffab in memory
flw f14, 0(x2) # load 0xbcafffab from memory into f14
fmadd.s f28, f21, f7, f14, dyn # perform operation
fmadd.s f28, f21, f7, f14, rdn # perform operation
fmadd.s f28, f21, f7, f14, rmm # perform operation
fmadd.s f28, f21, f7, f14, rne # perform operation
fmadd.s f28, f21, f7, f14, rtz # perform operation
fmadd.s f28, f21, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f21, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f21, f7, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x5a710675 # load x3 with value 0x5a710675
sw x3, 0(x2) # store 0x5a710675 in memory
flw f15, 0(x2) # load 0x5a710675 from memory into f15
fmadd.s f27, f12, f8, f15, dyn # perform operation
fmadd.s f27, f12, f8, f15, rdn # perform operation
fmadd.s f27, f12, f8, f15, rmm # perform operation
fmadd.s f27, f12, f8, f15, rne # perform operation
fmadd.s f27, f12, f8, f15, rtz # perform operation
fmadd.s f27, f12, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f8, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
la x2, scratch
li x3, 0x380f04e3 # load x3 with value 0x380f04e3
sw x3, 0(x2) # store 0x380f04e3 in memory
flw f19, 0(x2) # load 0x380f04e3 from memory into f19
fmadd.s f3, f1, f25, f19, dyn # perform operation
fmadd.s f3, f1, f25, f19, rdn # perform operation
fmadd.s f3, f1, f25, f19, rmm # perform operation
fmadd.s f3, f1, f25, f19, rne # perform operation
fmadd.s f3, f1, f25, f19, rtz # perform operation
fmadd.s f3, f1, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f25, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0xefc64932 # load x3 with value 0xefc64932
sw x3, 0(x2) # store 0xefc64932 in memory
flw f31, 0(x2) # load 0xefc64932 from memory into f31
fmadd.s f21, f28, f27, f31, dyn # perform operation
fmadd.s f21, f28, f27, f31, rdn # perform operation
fmadd.s f21, f28, f27, f31, rmm # perform operation
fmadd.s f21, f28, f27, f31, rne # perform operation
fmadd.s f21, f28, f27, f31, rtz # perform operation
fmadd.s f21, f28, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f28, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f28, f27, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
la x2, scratch
li x3, 0xf5a03516 # load x3 with value 0xf5a03516
sw x3, 0(x2) # store 0xf5a03516 in memory
flw f3, 0(x2) # load 0xf5a03516 from memory into f3
fmadd.s f22, f21, f25, f3, dyn # perform operation
fmadd.s f22, f21, f25, f3, rdn # perform operation
fmadd.s f22, f21, f25, f3, rmm # perform operation
fmadd.s f22, f21, f25, f3, rne # perform operation
fmadd.s f22, f21, f25, f3, rtz # perform operation
fmadd.s f22, f21, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f25, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
la x2, scratch
li x3, 0x32853e24 # load x3 with value 0x32853e24
sw x3, 0(x2) # store 0x32853e24 in memory
flw f21, 0(x2) # load 0x32853e24 from memory into f21
fmadd.s f22, f7, f31, f21, dyn # perform operation
fmadd.s f22, f7, f31, f21, rdn # perform operation
fmadd.s f22, f7, f31, f21, rmm # perform operation
fmadd.s f22, f7, f31, f21, rne # perform operation
fmadd.s f22, f7, f31, f21, rtz # perform operation
fmadd.s f22, f7, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
la x2, scratch
li x3, 0x5f7a40a5 # load x3 with value 0x5f7a40a5
sw x3, 0(x2) # store 0x5f7a40a5 in memory
flw f7, 0(x2) # load 0x5f7a40a5 from memory into f7
fmadd.s f10, f13, f30, f7, dyn # perform operation
fmadd.s f10, f13, f30, f7, rdn # perform operation
fmadd.s f10, f13, f30, f7, rmm # perform operation
fmadd.s f10, f13, f30, f7, rne # perform operation
fmadd.s f10, f13, f30, f7, rtz # perform operation
fmadd.s f10, f13, f30, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f30, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f30, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
la x2, scratch
li x3, 0xf8ec9806 # load x3 with value 0xf8ec9806
sw x3, 0(x2) # store 0xf8ec9806 in memory
flw f1, 0(x2) # load 0xf8ec9806 from memory into f1
fmadd.s f21, f24, f15, f1, dyn # perform operation
fmadd.s f21, f24, f15, f1, rdn # perform operation
fmadd.s f21, f24, f15, f1, rmm # perform operation
fmadd.s f21, f24, f15, f1, rne # perform operation
fmadd.s f21, f24, f15, f1, rtz # perform operation
fmadd.s f21, f24, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f24, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f24, f15, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x658df081 # load x3 with value 0x658df081
sw x3, 0(x2) # store 0x658df081 in memory
flw f27, 0(x2) # load 0x658df081 from memory into f27
fmadd.s f3, f31, f19, f27, dyn # perform operation
fmadd.s f3, f31, f19, f27, rdn # perform operation
fmadd.s f3, f31, f19, f27, rmm # perform operation
fmadd.s f3, f31, f19, f27, rne # perform operation
fmadd.s f3, f31, f19, f27, rtz # perform operation
fmadd.s f3, f31, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f19, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
la x2, scratch
li x3, 0x500e8a6f # load x3 with value 0x500e8a6f
sw x3, 0(x2) # store 0x500e8a6f in memory
flw f6, 0(x2) # load 0x500e8a6f from memory into f6
fmadd.s f5, f18, f19, f6, dyn # perform operation
fmadd.s f5, f18, f19, f6, rdn # perform operation
fmadd.s f5, f18, f19, f6, rmm # perform operation
fmadd.s f5, f18, f19, f6, rne # perform operation
fmadd.s f5, f18, f19, f6, rtz # perform operation
fmadd.s f5, f18, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f19, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xdda7d11f # load x3 with value 0xdda7d11f
sw x3, 0(x2) # store 0xdda7d11f in memory
flw f23, 0(x2) # load 0xdda7d11f from memory into f23
fmadd.s f7, f13, f27, f23, dyn # perform operation
fmadd.s f7, f13, f27, f23, rdn # perform operation
fmadd.s f7, f13, f27, f23, rmm # perform operation
fmadd.s f7, f13, f27, f23, rne # perform operation
fmadd.s f7, f13, f27, f23, rtz # perform operation
fmadd.s f7, f13, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f27, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x7fc7cab3 # load x3 with value 0x7fc7cab3
sw x3, 0(x2) # store 0x7fc7cab3 in memory
flw f12, 0(x2) # load 0x7fc7cab3 from memory into f12
fmadd.s f2, f22, f3, f12, dyn # perform operation
fmadd.s f2, f22, f3, f12, rdn # perform operation
fmadd.s f2, f22, f3, f12, rmm # perform operation
fmadd.s f2, f22, f3, f12, rne # perform operation
fmadd.s f2, f22, f3, f12, rtz # perform operation
fmadd.s f2, f22, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f3, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x5984cbaf # load x3 with value 0x5984cbaf
sw x3, 0(x2) # store 0x5984cbaf in memory
flw f19, 0(x2) # load 0x5984cbaf from memory into f19
fmadd.s f20, f29, f6, f19, dyn # perform operation
fmadd.s f20, f29, f6, f19, rdn # perform operation
fmadd.s f20, f29, f6, f19, rmm # perform operation
fmadd.s f20, f29, f6, f19, rne # perform operation
fmadd.s f20, f29, f6, f19, rtz # perform operation
fmadd.s f20, f29, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f6, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
la x2, scratch
li x3, 0xdb377a4b # load x3 with value 0xdb377a4b
sw x3, 0(x2) # store 0xdb377a4b in memory
flw f14, 0(x2) # load 0xdb377a4b from memory into f14
fmadd.s f3, f31, f17, f14, dyn # perform operation
fmadd.s f3, f31, f17, f14, rdn # perform operation
fmadd.s f3, f31, f17, f14, rmm # perform operation
fmadd.s f3, f31, f17, f14, rne # perform operation
fmadd.s f3, f31, f17, f14, rtz # perform operation
fmadd.s f3, f31, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
la x2, scratch
li x3, 0x012a9f18 # load x3 with value 0x012a9f18
sw x3, 0(x2) # store 0x012a9f18 in memory
flw f30, 0(x2) # load 0x012a9f18 from memory into f30
fmadd.s f14, f3, f17, f30, dyn # perform operation
fmadd.s f14, f3, f17, f30, rdn # perform operation
fmadd.s f14, f3, f17, f30, rmm # perform operation
fmadd.s f14, f3, f17, f30, rne # perform operation
fmadd.s f14, f3, f17, f30, rtz # perform operation
fmadd.s f14, f3, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f17, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x1bb09ede # load x3 with value 0x1bb09ede
sw x3, 0(x2) # store 0x1bb09ede in memory
flw f20, 0(x2) # load 0x1bb09ede from memory into f20
fmadd.s f3, f21, f16, f20, dyn # perform operation
fmadd.s f3, f21, f16, f20, rdn # perform operation
fmadd.s f3, f21, f16, f20, rmm # perform operation
fmadd.s f3, f21, f16, f20, rne # perform operation
fmadd.s f3, f21, f16, f20, rtz # perform operation
fmadd.s f3, f21, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f16, f20 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
la x2, scratch
li x3, 0xa84b4178 # load x3 with value 0xa84b4178
sw x3, 0(x2) # store 0xa84b4178 in memory
flw f8, 0(x2) # load 0xa84b4178 from memory into f8
fmadd.s f30, f18, f21, f8, dyn # perform operation
fmadd.s f30, f18, f21, f8, rdn # perform operation
fmadd.s f30, f18, f21, f8, rmm # perform operation
fmadd.s f30, f18, f21, f8, rne # perform operation
fmadd.s f30, f18, f21, f8, rtz # perform operation
fmadd.s f30, f18, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f21, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x665b46a1 # load x3 with value 0x665b46a1
sw x3, 0(x2) # store 0x665b46a1 in memory
flw f15, 0(x2) # load 0x665b46a1 from memory into f15
fmadd.s f12, f18, f11, f15, dyn # perform operation
fmadd.s f12, f18, f11, f15, rdn # perform operation
fmadd.s f12, f18, f11, f15, rmm # perform operation
fmadd.s f12, f18, f11, f15, rne # perform operation
fmadd.s f12, f18, f11, f15, rtz # perform operation
fmadd.s f12, f18, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f11, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
la x2, scratch
li x3, 0x99cdf012 # load x3 with value 0x99cdf012
sw x3, 0(x2) # store 0x99cdf012 in memory
flw f29, 0(x2) # load 0x99cdf012 from memory into f29
fmadd.s f3, f11, f20, f29, dyn # perform operation
fmadd.s f3, f11, f20, f29, rdn # perform operation
fmadd.s f3, f11, f20, f29, rmm # perform operation
fmadd.s f3, f11, f20, f29, rne # perform operation
fmadd.s f3, f11, f20, f29, rtz # perform operation
fmadd.s f3, f11, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f11, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f11, f20, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x5f1052e3 # load x3 with value 0x5f1052e3
sw x3, 0(x2) # store 0x5f1052e3 in memory
flw f13, 0(x2) # load 0x5f1052e3 from memory into f13
fmadd.s f3, f10, f16, f13, dyn # perform operation
fmadd.s f3, f10, f16, f13, rdn # perform operation
fmadd.s f3, f10, f16, f13, rmm # perform operation
fmadd.s f3, f10, f16, f13, rne # perform operation
fmadd.s f3, f10, f16, f13, rtz # perform operation
fmadd.s f3, f10, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f16, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x3b76aa0e # load x3 with value 0x3b76aa0e
sw x3, 0(x2) # store 0x3b76aa0e in memory
flw f7, 0(x2) # load 0x3b76aa0e from memory into f7
fmadd.s f16, f14, f21, f7, dyn # perform operation
fmadd.s f16, f14, f21, f7, rdn # perform operation
fmadd.s f16, f14, f21, f7, rmm # perform operation
fmadd.s f16, f14, f21, f7, rne # perform operation
fmadd.s f16, f14, f21, f7, rtz # perform operation
fmadd.s f16, f14, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f21, f7 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
la x2, scratch
li x3, 0x55329aee # load x3 with value 0x55329aee
sw x3, 0(x2) # store 0x55329aee in memory
flw f25, 0(x2) # load 0x55329aee from memory into f25
fmadd.s f27, f2, f7, f25, dyn # perform operation
fmadd.s f27, f2, f7, f25, rdn # perform operation
fmadd.s f27, f2, f7, f25, rmm # perform operation
fmadd.s f27, f2, f7, f25, rne # perform operation
fmadd.s f27, f2, f7, f25, rtz # perform operation
fmadd.s f27, f2, f7, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f7, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f7, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
la x2, scratch
li x3, 0x55132e88 # load x3 with value 0x55132e88
sw x3, 0(x2) # store 0x55132e88 in memory
flw f24, 0(x2) # load 0x55132e88 from memory into f24
fmadd.s f12, f19, f31, f24, dyn # perform operation
fmadd.s f12, f19, f31, f24, rdn # perform operation
fmadd.s f12, f19, f31, f24, rmm # perform operation
fmadd.s f12, f19, f31, f24, rne # perform operation
fmadd.s f12, f19, f31, f24, rtz # perform operation
fmadd.s f12, f19, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f31, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
la x2, scratch
li x3, 0x02a08d09 # load x3 with value 0x02a08d09
sw x3, 0(x2) # store 0x02a08d09 in memory
flw f27, 0(x2) # load 0x02a08d09 from memory into f27
fmadd.s f31, f3, f1, f27, dyn # perform operation
fmadd.s f31, f3, f1, f27, rdn # perform operation
fmadd.s f31, f3, f1, f27, rmm # perform operation
fmadd.s f31, f3, f1, f27, rne # perform operation
fmadd.s f31, f3, f1, f27, rtz # perform operation
fmadd.s f31, f3, f1, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f1, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f1, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f1, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f1, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f1, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x1907f2ce # load x3 with value 0x1907f2ce
sw x3, 0(x2) # store 0x1907f2ce in memory
flw f9, 0(x2) # load 0x1907f2ce from memory into f9
fmadd.s f21, f8, f7, f9, dyn # perform operation
fmadd.s f21, f8, f7, f9, rdn # perform operation
fmadd.s f21, f8, f7, f9, rmm # perform operation
fmadd.s f21, f8, f7, f9, rne # perform operation
fmadd.s f21, f8, f7, f9, rtz # perform operation
fmadd.s f21, f8, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f7, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0xa8fcff31 # load x3 with value 0xa8fcff31
sw x3, 0(x2) # store 0xa8fcff31 in memory
flw f22, 0(x2) # load 0xa8fcff31 from memory into f22
fmadd.s f2, f3, f21, f22, dyn # perform operation
fmadd.s f2, f3, f21, f22, rdn # perform operation
fmadd.s f2, f3, f21, f22, rmm # perform operation
fmadd.s f2, f3, f21, f22, rne # perform operation
fmadd.s f2, f3, f21, f22, rtz # perform operation
fmadd.s f2, f3, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f21, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0x4b6c3b41 # load x3 with value 0x4b6c3b41
sw x3, 0(x2) # store 0x4b6c3b41 in memory
flw f8, 0(x2) # load 0x4b6c3b41 from memory into f8
fmadd.s f17, f11, f15, f8, dyn # perform operation
fmadd.s f17, f11, f15, f8, rdn # perform operation
fmadd.s f17, f11, f15, f8, rmm # perform operation
fmadd.s f17, f11, f15, f8, rne # perform operation
fmadd.s f17, f11, f15, f8, rtz # perform operation
fmadd.s f17, f11, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f11, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f11, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f11, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f11, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f11, f15, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x6927c910 # load x3 with value 0x6927c910
sw x3, 0(x2) # store 0x6927c910 in memory
flw f23, 0(x2) # load 0x6927c910 from memory into f23
fmadd.s f2, f18, f7, f23, dyn # perform operation
fmadd.s f2, f18, f7, f23, rdn # perform operation
fmadd.s f2, f18, f7, f23, rmm # perform operation
fmadd.s f2, f18, f7, f23, rne # perform operation
fmadd.s f2, f18, f7, f23, rtz # perform operation
fmadd.s f2, f18, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f18, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f18, f7, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x523ce585 # load x3 with value 0x523ce585
sw x3, 0(x2) # store 0x523ce585 in memory
flw f10, 0(x2) # load 0x523ce585 from memory into f10
fmadd.s f24, f15, f3, f10, dyn # perform operation
fmadd.s f24, f15, f3, f10, rdn # perform operation
fmadd.s f24, f15, f3, f10, rmm # perform operation
fmadd.s f24, f15, f3, f10, rne # perform operation
fmadd.s f24, f15, f3, f10, rtz # perform operation
fmadd.s f24, f15, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f3, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
la x2, scratch
li x3, 0x9367a807 # load x3 with value 0x9367a807
sw x3, 0(x2) # store 0x9367a807 in memory
flw f17, 0(x2) # load 0x9367a807 from memory into f17
fmadd.s f8, f16, f30, f17, dyn # perform operation
fmadd.s f8, f16, f30, f17, rdn # perform operation
fmadd.s f8, f16, f30, f17, rmm # perform operation
fmadd.s f8, f16, f30, f17, rne # perform operation
fmadd.s f8, f16, f30, f17, rtz # perform operation
fmadd.s f8, f16, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f30, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x26b729d4 # load x3 with value 0x26b729d4
sw x3, 0(x2) # store 0x26b729d4 in memory
flw f29, 0(x2) # load 0x26b729d4 from memory into f29
fmadd.s f1, f16, f5, f29, dyn # perform operation
fmadd.s f1, f16, f5, f29, rdn # perform operation
fmadd.s f1, f16, f5, f29, rmm # perform operation
fmadd.s f1, f16, f5, f29, rne # perform operation
fmadd.s f1, f16, f5, f29, rtz # perform operation
fmadd.s f1, f16, f5, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f5, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f5, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
la x2, scratch
li x3, 0x217b4af9 # load x3 with value 0x217b4af9
sw x3, 0(x2) # store 0x217b4af9 in memory
flw f27, 0(x2) # load 0x217b4af9 from memory into f27
fmadd.s f6, f16, f8, f27, dyn # perform operation
fmadd.s f6, f16, f8, f27, rdn # perform operation
fmadd.s f6, f16, f8, f27, rmm # perform operation
fmadd.s f6, f16, f8, f27, rne # perform operation
fmadd.s f6, f16, f8, f27, rtz # perform operation
fmadd.s f6, f16, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f8, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xee760011 # load x3 with value 0xee760011
sw x3, 0(x2) # store 0xee760011 in memory
flw f18, 0(x2) # load 0xee760011 from memory into f18
fmadd.s f6, f15, f9, f18, dyn # perform operation
fmadd.s f6, f15, f9, f18, rdn # perform operation
fmadd.s f6, f15, f9, f18, rmm # perform operation
fmadd.s f6, f15, f9, f18, rne # perform operation
fmadd.s f6, f15, f9, f18, rtz # perform operation
fmadd.s f6, f15, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f9, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xc52e1f12 # load x3 with value 0xc52e1f12
sw x3, 0(x2) # store 0xc52e1f12 in memory
flw f12, 0(x2) # load 0xc52e1f12 from memory into f12
fmadd.s f18, f16, f15, f12, dyn # perform operation
fmadd.s f18, f16, f15, f12, rdn # perform operation
fmadd.s f18, f16, f15, f12, rmm # perform operation
fmadd.s f18, f16, f15, f12, rne # perform operation
fmadd.s f18, f16, f15, f12, rtz # perform operation
fmadd.s f18, f16, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f15, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f11, 0(x2) # load 0xffbfffff from memory into f11
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
la x2, scratch
li x3, 0xa650c23d # load x3 with value 0xa650c23d
sw x3, 0(x2) # store 0xa650c23d in memory
flw f27, 0(x2) # load 0xa650c23d from memory into f27
fmadd.s f24, f11, f14, f27, dyn # perform operation
fmadd.s f24, f11, f14, f27, rdn # perform operation
fmadd.s f24, f11, f14, f27, rmm # perform operation
fmadd.s f24, f11, f14, f27, rne # perform operation
fmadd.s f24, f11, f14, f27, rtz # perform operation
fmadd.s f24, f11, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f14, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0x8f341a6c # load x3 with value 0x8f341a6c
sw x3, 0(x2) # store 0x8f341a6c in memory
flw f9, 0(x2) # load 0x8f341a6c from memory into f9
fmadd.s f6, f2, f19, f9, dyn # perform operation
fmadd.s f6, f2, f19, f9, rdn # perform operation
fmadd.s f6, f2, f19, f9, rmm # perform operation
fmadd.s f6, f2, f19, f9, rne # perform operation
fmadd.s f6, f2, f19, f9, rtz # perform operation
fmadd.s f6, f2, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f2, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f2, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f2, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f2, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f2, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0xc8a455ab # load x3 with value 0xc8a455ab
sw x3, 0(x2) # store 0xc8a455ab in memory
flw f10, 0(x2) # load 0xc8a455ab from memory into f10
fmadd.s f17, f14, f11, f10, dyn # perform operation
fmadd.s f17, f14, f11, f10, rdn # perform operation
fmadd.s f17, f14, f11, f10, rmm # perform operation
fmadd.s f17, f14, f11, f10, rne # perform operation
fmadd.s f17, f14, f11, f10, rtz # perform operation
fmadd.s f17, f14, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f14, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f14, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f14, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f14, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f14, f11, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
la x2, scratch
li x3, 0x3dd71463 # load x3 with value 0x3dd71463
sw x3, 0(x2) # store 0x3dd71463 in memory
flw f5, 0(x2) # load 0x3dd71463 from memory into f5
fmadd.s f13, f18, f24, f5, dyn # perform operation
fmadd.s f13, f18, f24, f5, rdn # perform operation
fmadd.s f13, f18, f24, f5, rmm # perform operation
fmadd.s f13, f18, f24, f5, rne # perform operation
fmadd.s f13, f18, f24, f5, rtz # perform operation
fmadd.s f13, f18, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f24, f5 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x958ce4db # load x3 with value 0x958ce4db
sw x3, 0(x2) # store 0x958ce4db in memory
flw f17, 0(x2) # load 0x958ce4db from memory into f17
fmadd.s f1, f9, f29, f17, dyn # perform operation
fmadd.s f1, f9, f29, f17, rdn # perform operation
fmadd.s f1, f9, f29, f17, rmm # perform operation
fmadd.s f1, f9, f29, f17, rne # perform operation
fmadd.s f1, f9, f29, f17, rtz # perform operation
fmadd.s f1, f9, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xef1ab76a # load x3 with value 0xef1ab76a
sw x3, 0(x2) # store 0xef1ab76a in memory
flw f26, 0(x2) # load 0xef1ab76a from memory into f26
fmadd.s f12, f22, f30, f26, dyn # perform operation
fmadd.s f12, f22, f30, f26, rdn # perform operation
fmadd.s f12, f22, f30, f26, rmm # perform operation
fmadd.s f12, f22, f30, f26, rne # perform operation
fmadd.s f12, f22, f30, f26, rtz # perform operation
fmadd.s f12, f22, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f30, f26 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x91467964 # load x3 with value 0x91467964
sw x3, 0(x2) # store 0x91467964 in memory
flw f16, 0(x2) # load 0x91467964 from memory into f16
fmadd.s f25, f31, f21, f16, dyn # perform operation
fmadd.s f25, f31, f21, f16, rdn # perform operation
fmadd.s f25, f31, f21, f16, rmm # perform operation
fmadd.s f25, f31, f21, f16, rne # perform operation
fmadd.s f25, f31, f21, f16, rtz # perform operation
fmadd.s f25, f31, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0xc0bf1ebf # load x3 with value 0xc0bf1ebf
sw x3, 0(x2) # store 0xc0bf1ebf in memory
flw f27, 0(x2) # load 0xc0bf1ebf from memory into f27
fmadd.s f25, f29, f23, f27, dyn # perform operation
fmadd.s f25, f29, f23, f27, rdn # perform operation
fmadd.s f25, f29, f23, f27, rmm # perform operation
fmadd.s f25, f29, f23, f27, rne # perform operation
fmadd.s f25, f29, f23, f27, rtz # perform operation
fmadd.s f25, f29, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f29, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f29, f23, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0x64eb37f0 # load x3 with value 0x64eb37f0
sw x3, 0(x2) # store 0x64eb37f0 in memory
flw f9, 0(x2) # load 0x64eb37f0 from memory into f9
fmadd.s f11, f7, f2, f9, dyn # perform operation
fmadd.s f11, f7, f2, f9, rdn # perform operation
fmadd.s f11, f7, f2, f9, rmm # perform operation
fmadd.s f11, f7, f2, f9, rne # perform operation
fmadd.s f11, f7, f2, f9, rtz # perform operation
fmadd.s f11, f7, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f2, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
la x2, scratch
li x3, 0xd6d35d87 # load x3 with value 0xd6d35d87
sw x3, 0(x2) # store 0xd6d35d87 in memory
flw f24, 0(x2) # load 0xd6d35d87 from memory into f24
fmadd.s f31, f29, f20, f24, dyn # perform operation
fmadd.s f31, f29, f20, f24, rdn # perform operation
fmadd.s f31, f29, f20, f24, rmm # perform operation
fmadd.s f31, f29, f20, f24, rne # perform operation
fmadd.s f31, f29, f20, f24, rtz # perform operation
fmadd.s f31, f29, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f20, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
la x2, scratch
li x3, 0x25243221 # load x3 with value 0x25243221
sw x3, 0(x2) # store 0x25243221 in memory
flw f8, 0(x2) # load 0x25243221 from memory into f8
fmadd.s f11, f16, f30, f8, dyn # perform operation
fmadd.s f11, f16, f30, f8, rdn # perform operation
fmadd.s f11, f16, f30, f8, rmm # perform operation
fmadd.s f11, f16, f30, f8, rne # perform operation
fmadd.s f11, f16, f30, f8, rtz # perform operation
fmadd.s f11, f16, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f30, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
la x2, scratch
li x3, 0xfe2949e1 # load x3 with value 0xfe2949e1
sw x3, 0(x2) # store 0xfe2949e1 in memory
flw f9, 0(x2) # load 0xfe2949e1 from memory into f9
fmadd.s f14, f26, f19, f9, dyn # perform operation
fmadd.s f14, f26, f19, f9, rdn # perform operation
fmadd.s f14, f26, f19, f9, rmm # perform operation
fmadd.s f14, f26, f19, f9, rne # perform operation
fmadd.s f14, f26, f19, f9, rtz # perform operation
fmadd.s f14, f26, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f26, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f26, f19, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f10, 0(x2) # load 0xffbfffff from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
la x2, scratch
li x3, 0x66f86d39 # load x3 with value 0x66f86d39
sw x3, 0(x2) # store 0x66f86d39 in memory
flw f14, 0(x2) # load 0x66f86d39 from memory into f14
fmadd.s f3, f10, f17, f14, dyn # perform operation
fmadd.s f3, f10, f17, f14, rdn # perform operation
fmadd.s f3, f10, f17, f14, rmm # perform operation
fmadd.s f3, f10, f17, f14, rne # perform operation
fmadd.s f3, f10, f17, f14, rtz # perform operation
fmadd.s f3, f10, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f17, f14 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
la x2, scratch
li x3, 0xeb476421 # load x3 with value 0xeb476421
sw x3, 0(x2) # store 0xeb476421 in memory
flw f13, 0(x2) # load 0xeb476421 from memory into f13
fmadd.s f17, f28, f8, f13, dyn # perform operation
fmadd.s f17, f28, f8, f13, rdn # perform operation
fmadd.s f17, f28, f8, f13, rmm # perform operation
fmadd.s f17, f28, f8, f13, rne # perform operation
fmadd.s f17, f28, f8, f13, rtz # perform operation
fmadd.s f17, f28, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f8, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x06301c8a # load x3 with value 0x06301c8a
sw x3, 0(x2) # store 0x06301c8a in memory
flw f29, 0(x2) # load 0x06301c8a from memory into f29
fmadd.s f25, f24, f18, f29, dyn # perform operation
fmadd.s f25, f24, f18, f29, rdn # perform operation
fmadd.s f25, f24, f18, f29, rmm # perform operation
fmadd.s f25, f24, f18, f29, rne # perform operation
fmadd.s f25, f24, f18, f29, rtz # perform operation
fmadd.s f25, f24, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f24, f18, f29 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
la x2, scratch
li x3, 0xa17029f2 # load x3 with value 0xa17029f2
sw x3, 0(x2) # store 0xa17029f2 in memory
flw f17, 0(x2) # load 0xa17029f2 from memory into f17
fmadd.s f7, f21, f29, f17, dyn # perform operation
fmadd.s f7, f21, f29, f17, rdn # perform operation
fmadd.s f7, f21, f29, f17, rmm # perform operation
fmadd.s f7, f21, f29, f17, rne # perform operation
fmadd.s f7, f21, f29, f17, rtz # perform operation
fmadd.s f7, f21, f29, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f29, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f29, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f29, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f29, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f29, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
la x2, scratch
li x3, 0x5170f237 # load x3 with value 0x5170f237
sw x3, 0(x2) # store 0x5170f237 in memory
flw f16, 0(x2) # load 0x5170f237 from memory into f16
fmadd.s f15, f29, f21, f16, dyn # perform operation
fmadd.s f15, f29, f21, f16, rdn # perform operation
fmadd.s f15, f29, f21, f16, rmm # perform operation
fmadd.s f15, f29, f21, f16, rne # perform operation
fmadd.s f15, f29, f21, f16, rtz # perform operation
fmadd.s f15, f29, f21, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f29, f21, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f29, f21, f16 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
la x2, scratch
li x3, 0x9a562281 # load x3 with value 0x9a562281
sw x3, 0(x2) # store 0x9a562281 in memory
flw f19, 0(x2) # load 0x9a562281 from memory into f19
fmadd.s f30, f21, f14, f19, dyn # perform operation
fmadd.s f30, f21, f14, f19, rdn # perform operation
fmadd.s f30, f21, f14, f19, rmm # perform operation
fmadd.s f30, f21, f14, f19, rne # perform operation
fmadd.s f30, f21, f14, f19, rtz # perform operation
fmadd.s f30, f21, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f14, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0xd32f8c6e # load x3 with value 0xd32f8c6e
sw x3, 0(x2) # store 0xd32f8c6e in memory
flw f10, 0(x2) # load 0xd32f8c6e from memory into f10
fmadd.s f28, f14, f20, f10, dyn # perform operation
fmadd.s f28, f14, f20, f10, rdn # perform operation
fmadd.s f28, f14, f20, f10, rmm # perform operation
fmadd.s f28, f14, f20, f10, rne # perform operation
fmadd.s f28, f14, f20, f10, rtz # perform operation
fmadd.s f28, f14, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f20, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xd8c90d53 # load x3 with value 0xd8c90d53
sw x3, 0(x2) # store 0xd8c90d53 in memory
flw f22, 0(x2) # load 0xd8c90d53 from memory into f22
fmadd.s f23, f13, f14, f22, dyn # perform operation
fmadd.s f23, f13, f14, f22, rdn # perform operation
fmadd.s f23, f13, f14, f22, rmm # perform operation
fmadd.s f23, f13, f14, f22, rne # perform operation
fmadd.s f23, f13, f14, f22, rtz # perform operation
fmadd.s f23, f13, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f14, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xffbfffff fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x100ec683 # load x3 with value 0x100ec683
sw x3, 0(x2) # store 0x100ec683 in memory
flw f3, 0(x2) # load 0x100ec683 from memory into f3
fmadd.s f21, f29, f18, f3, dyn # perform operation
fmadd.s f21, f29, f18, f3, rdn # perform operation
fmadd.s f21, f29, f18, f3, rmm # perform operation
fmadd.s f21, f29, f18, f3, rne # perform operation
fmadd.s f21, f29, f18, f3, rtz # perform operation
fmadd.s f21, f29, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f18, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0x8c2f0d94 # load x3 with value 0x8c2f0d94
sw x3, 0(x2) # store 0x8c2f0d94 in memory
flw f27, 0(x2) # load 0x8c2f0d94 from memory into f27
fmadd.s f2, f20, f30, f27, dyn # perform operation
fmadd.s f2, f20, f30, f27, rdn # perform operation
fmadd.s f2, f20, f30, f27, rmm # perform operation
fmadd.s f2, f20, f30, f27, rne # perform operation
fmadd.s f2, f20, f30, f27, rtz # perform operation
fmadd.s f2, f20, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
la x2, scratch
li x3, 0x0dce83db # load x3 with value 0x0dce83db
sw x3, 0(x2) # store 0x0dce83db in memory
flw f22, 0(x2) # load 0x0dce83db from memory into f22
fmadd.s f3, f6, f1, f22, dyn # perform operation
fmadd.s f3, f6, f1, f22, rdn # perform operation
fmadd.s f3, f6, f1, f22, rmm # perform operation
fmadd.s f3, f6, f1, f22, rne # perform operation
fmadd.s f3, f6, f1, f22, rtz # perform operation
fmadd.s f3, f6, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f1, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x7c260f68 # load x3 with value 0x7c260f68
sw x3, 0(x2) # store 0x7c260f68 in memory
flw f25, 0(x2) # load 0x7c260f68 from memory into f25
fmadd.s f11, f23, f31, f25, dyn # perform operation
fmadd.s f11, f23, f31, f25, rdn # perform operation
fmadd.s f11, f23, f31, f25, rmm # perform operation
fmadd.s f11, f23, f31, f25, rne # perform operation
fmadd.s f11, f23, f31, f25, rtz # perform operation
fmadd.s f11, f23, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f31, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xb663372d # load x3 with value 0xb663372d
sw x3, 0(x2) # store 0xb663372d in memory
flw f3, 0(x2) # load 0xb663372d from memory into f3
fmadd.s f11, f16, f10, f3, dyn # perform operation
fmadd.s f11, f16, f10, f3, rdn # perform operation
fmadd.s f11, f16, f10, f3, rmm # perform operation
fmadd.s f11, f16, f10, f3, rne # perform operation
fmadd.s f11, f16, f10, f3, rtz # perform operation
fmadd.s f11, f16, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
la x2, scratch
li x3, 0x7ef8dcb0 # load x3 with value 0x7ef8dcb0
sw x3, 0(x2) # store 0x7ef8dcb0 in memory
flw f23, 0(x2) # load 0x7ef8dcb0 from memory into f23
fmadd.s f24, f2, f15, f23, dyn # perform operation
fmadd.s f24, f2, f15, f23, rdn # perform operation
fmadd.s f24, f2, f15, f23, rmm # perform operation
fmadd.s f24, f2, f15, f23, rne # perform operation
fmadd.s f24, f2, f15, f23, rtz # perform operation
fmadd.s f24, f2, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f15, f23 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x5ab49372 # load x3 with value 0x5ab49372
sw x3, 0(x2) # store 0x5ab49372 in memory
flw f3, 0(x2) # load 0x5ab49372 from memory into f3
fmadd.s f13, f18, f26, f3, dyn # perform operation
fmadd.s f13, f18, f26, f3, rdn # perform operation
fmadd.s f13, f18, f26, f3, rmm # perform operation
fmadd.s f13, f18, f26, f3, rne # perform operation
fmadd.s f13, f18, f26, f3, rtz # perform operation
fmadd.s f13, f18, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f26, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x6cbfc893 # load x3 with value 0x6cbfc893
sw x3, 0(x2) # store 0x6cbfc893 in memory
flw f22, 0(x2) # load 0x6cbfc893 from memory into f22
fmadd.s f3, f6, f20, f22, dyn # perform operation
fmadd.s f3, f6, f20, f22, rdn # perform operation
fmadd.s f3, f6, f20, f22, rmm # perform operation
fmadd.s f3, f6, f20, f22, rne # perform operation
fmadd.s f3, f6, f20, f22, rtz # perform operation
fmadd.s f3, f6, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f20, f22 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xd81e1725 # load x3 with value 0xd81e1725
sw x3, 0(x2) # store 0xd81e1725 in memory
flw f27, 0(x2) # load 0xd81e1725 from memory into f27
fmadd.s f30, f2, f26, f27, dyn # perform operation
fmadd.s f30, f2, f26, f27, rdn # perform operation
fmadd.s f30, f2, f26, f27, rmm # perform operation
fmadd.s f30, f2, f26, f27, rne # perform operation
fmadd.s f30, f2, f26, f27, rtz # perform operation
fmadd.s f30, f2, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f26, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x03758511 # load x3 with value 0x03758511
sw x3, 0(x2) # store 0x03758511 in memory
flw f25, 0(x2) # load 0x03758511 from memory into f25
fmadd.s f20, f19, f18, f25, dyn # perform operation
fmadd.s f20, f19, f18, f25, rdn # perform operation
fmadd.s f20, f19, f18, f25, rmm # perform operation
fmadd.s f20, f19, f18, f25, rne # perform operation
fmadd.s f20, f19, f18, f25, rtz # perform operation
fmadd.s f20, f19, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f19, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f19, f18, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
la x2, scratch
li x3, 0x9c33ec52 # load x3 with value 0x9c33ec52
sw x3, 0(x2) # store 0x9c33ec52 in memory
flw f25, 0(x2) # load 0x9c33ec52 from memory into f25
fmadd.s f13, f23, f5, f25, dyn # perform operation
fmadd.s f13, f23, f5, f25, rdn # perform operation
fmadd.s f13, f23, f5, f25, rmm # perform operation
fmadd.s f13, f23, f5, f25, rne # perform operation
fmadd.s f13, f23, f5, f25, rtz # perform operation
fmadd.s f13, f23, f5, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f23, f5, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f23, f5, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f23, f5, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f23, f5, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f23, f5, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
la x2, scratch
li x3, 0x61422d0e # load x3 with value 0x61422d0e
sw x3, 0(x2) # store 0x61422d0e in memory
flw f8, 0(x2) # load 0x61422d0e from memory into f8
fmadd.s f13, f9, f23, f8, dyn # perform operation
fmadd.s f13, f9, f23, f8, rdn # perform operation
fmadd.s f13, f9, f23, f8, rmm # perform operation
fmadd.s f13, f9, f23, f8, rne # perform operation
fmadd.s f13, f9, f23, f8, rtz # perform operation
fmadd.s f13, f9, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f23, f8 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x90d2d6bd # load x3 with value 0x90d2d6bd
sw x3, 0(x2) # store 0x90d2d6bd in memory
flw f18, 0(x2) # load 0x90d2d6bd from memory into f18
fmadd.s f20, f9, f31, f18, dyn # perform operation
fmadd.s f20, f9, f31, f18, rdn # perform operation
fmadd.s f20, f9, f31, f18, rmm # perform operation
fmadd.s f20, f9, f31, f18, rne # perform operation
fmadd.s f20, f9, f31, f18, rtz # perform operation
fmadd.s f20, f9, f31, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f31, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f31, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
la x2, scratch
li x3, 0x90abaacd # load x3 with value 0x90abaacd
sw x3, 0(x2) # store 0x90abaacd in memory
flw f21, 0(x2) # load 0x90abaacd from memory into f21
fmadd.s f7, f27, f16, f21, dyn # perform operation
fmadd.s f7, f27, f16, f21, rdn # perform operation
fmadd.s f7, f27, f16, f21, rmm # perform operation
fmadd.s f7, f27, f16, f21, rne # perform operation
fmadd.s f7, f27, f16, f21, rtz # perform operation
fmadd.s f7, f27, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f16, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0x55c1e0f3 # load x3 with value 0x55c1e0f3
sw x3, 0(x2) # store 0x55c1e0f3 in memory
flw f9, 0(x2) # load 0x55c1e0f3 from memory into f9
fmadd.s f14, f18, f11, f9, dyn # perform operation
fmadd.s f14, f18, f11, f9, rdn # perform operation
fmadd.s f14, f18, f11, f9, rmm # perform operation
fmadd.s f14, f18, f11, f9, rne # perform operation
fmadd.s f14, f18, f11, f9, rtz # perform operation
fmadd.s f14, f18, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f11, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
la x2, scratch
li x3, 0xb052d96b # load x3 with value 0xb052d96b
sw x3, 0(x2) # store 0xb052d96b in memory
flw f9, 0(x2) # load 0xb052d96b from memory into f9
fmadd.s f10, f13, f16, f9, dyn # perform operation
fmadd.s f10, f13, f16, f9, rdn # perform operation
fmadd.s f10, f13, f16, f9, rmm # perform operation
fmadd.s f10, f13, f16, f9, rne # perform operation
fmadd.s f10, f13, f16, f9, rtz # perform operation
fmadd.s f10, f13, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f16, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x174a42c4 # load x3 with value 0x174a42c4
sw x3, 0(x2) # store 0x174a42c4 in memory
flw f1, 0(x2) # load 0x174a42c4 from memory into f1
fmadd.s f29, f16, f18, f1, dyn # perform operation
fmadd.s f29, f16, f18, f1, rdn # perform operation
fmadd.s f29, f16, f18, f1, rmm # perform operation
fmadd.s f29, f16, f18, f1, rne # perform operation
fmadd.s f29, f16, f18, f1, rtz # perform operation
fmadd.s f29, f16, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f16, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f16, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f16, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f16, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f16, f18, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0x815578a8 # load x3 with value 0x815578a8
sw x3, 0(x2) # store 0x815578a8 in memory
flw f2, 0(x2) # load 0x815578a8 from memory into f2
fmadd.s f29, f12, f23, f2, dyn # perform operation
fmadd.s f29, f12, f23, f2, rdn # perform operation
fmadd.s f29, f12, f23, f2, rmm # perform operation
fmadd.s f29, f12, f23, f2, rne # perform operation
fmadd.s f29, f12, f23, f2, rtz # perform operation
fmadd.s f29, f12, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f23, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x2dc1baea # load x3 with value 0x2dc1baea
sw x3, 0(x2) # store 0x2dc1baea in memory
flw f21, 0(x2) # load 0x2dc1baea from memory into f21
fmadd.s f1, f23, f11, f21, dyn # perform operation
fmadd.s f1, f23, f11, f21, rdn # perform operation
fmadd.s f1, f23, f11, f21, rmm # perform operation
fmadd.s f1, f23, f11, f21, rne # perform operation
fmadd.s f1, f23, f11, f21, rtz # perform operation
fmadd.s f1, f23, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f23, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f23, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x4eab623c # load x3 with value 0x4eab623c
sw x3, 0(x2) # store 0x4eab623c in memory
flw f24, 0(x2) # load 0x4eab623c from memory into f24
fmadd.s f29, f12, f17, f24, dyn # perform operation
fmadd.s f29, f12, f17, f24, rdn # perform operation
fmadd.s f29, f12, f17, f24, rmm # perform operation
fmadd.s f29, f12, f17, f24, rne # perform operation
fmadd.s f29, f12, f17, f24, rtz # perform operation
fmadd.s f29, f12, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f12, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f12, f17, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0x834eafe8 # load x3 with value 0x834eafe8
sw x3, 0(x2) # store 0x834eafe8 in memory
flw f18, 0(x2) # load 0x834eafe8 from memory into f18
fmadd.s f17, f13, f19, f18, dyn # perform operation
fmadd.s f17, f13, f19, f18, rdn # perform operation
fmadd.s f17, f13, f19, f18, rmm # perform operation
fmadd.s f17, f13, f19, f18, rne # perform operation
fmadd.s f17, f13, f19, f18, rtz # perform operation
fmadd.s f17, f13, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f19, f18 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0xaeb094f0 # load x3 with value 0xaeb094f0
sw x3, 0(x2) # store 0xaeb094f0 in memory
flw f27, 0(x2) # load 0xaeb094f0 from memory into f27
fmadd.s f10, f16, f25, f27, dyn # perform operation
fmadd.s f10, f16, f25, f27, rdn # perform operation
fmadd.s f10, f16, f25, f27, rmm # perform operation
fmadd.s f10, f16, f25, f27, rne # perform operation
fmadd.s f10, f16, f25, f27, rtz # perform operation
fmadd.s f10, f16, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f25, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x904d2bef # load x3 with value 0x904d2bef
sw x3, 0(x2) # store 0x904d2bef in memory
flw f27, 0(x2) # load 0x904d2bef from memory into f27
fmadd.s f10, f16, f30, f27, dyn # perform operation
fmadd.s f10, f16, f30, f27, rdn # perform operation
fmadd.s f10, f16, f30, f27, rmm # perform operation
fmadd.s f10, f16, f30, f27, rne # perform operation
fmadd.s f10, f16, f30, f27, rtz # perform operation
fmadd.s f10, f16, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f30, f27 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0xbd0c6462 # load x3 with value 0xbd0c6462
sw x3, 0(x2) # store 0xbd0c6462 in memory
flw f11, 0(x2) # load 0xbd0c6462 from memory into f11
fmadd.s f27, f2, f5, f11, dyn # perform operation
fmadd.s f27, f2, f5, f11, rdn # perform operation
fmadd.s f27, f2, f5, f11, rmm # perform operation
fmadd.s f27, f2, f5, f11, rne # perform operation
fmadd.s f27, f2, f5, f11, rtz # perform operation
fmadd.s f27, f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f5, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
la x2, scratch
li x3, 0xd8a87b98 # load x3 with value 0xd8a87b98
sw x3, 0(x2) # store 0xd8a87b98 in memory
flw f30, 0(x2) # load 0xd8a87b98 from memory into f30
fmadd.s f17, f6, f8, f30, dyn # perform operation
fmadd.s f17, f6, f8, f30, rdn # perform operation
fmadd.s f17, f6, f8, f30, rmm # perform operation
fmadd.s f17, f6, f8, f30, rne # perform operation
fmadd.s f17, f6, f8, f30, rtz # perform operation
fmadd.s f17, f6, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f8, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x1e166434 # load x3 with value 0x1e166434
sw x3, 0(x2) # store 0x1e166434 in memory
flw f6, 0(x2) # load 0x1e166434 from memory into f6
fmadd.s f12, f21, f23, f6, dyn # perform operation
fmadd.s f12, f21, f23, f6, rdn # perform operation
fmadd.s f12, f21, f23, f6, rmm # perform operation
fmadd.s f12, f21, f23, f6, rne # perform operation
fmadd.s f12, f21, f23, f6, rtz # perform operation
fmadd.s f12, f21, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f23, f6 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x0893ec21 # load x3 with value 0x0893ec21
sw x3, 0(x2) # store 0x0893ec21 in memory
flw f25, 0(x2) # load 0x0893ec21 from memory into f25
fmadd.s f6, f16, f23, f25, dyn # perform operation
fmadd.s f6, f16, f23, f25, rdn # perform operation
fmadd.s f6, f16, f23, f25, rmm # perform operation
fmadd.s f6, f16, f23, f25, rne # perform operation
fmadd.s f6, f16, f23, f25, rtz # perform operation
fmadd.s f6, f16, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f23, f25 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x89f9e220 # load x3 with value 0x89f9e220
sw x3, 0(x2) # store 0x89f9e220 in memory
flw f28, 0(x2) # load 0x89f9e220 from memory into f28
fmadd.s f19, f9, f1, f28, dyn # perform operation
fmadd.s f19, f9, f1, f28, rdn # perform operation
fmadd.s f19, f9, f1, f28, rmm # perform operation
fmadd.s f19, f9, f1, f28, rne # perform operation
fmadd.s f19, f9, f1, f28, rtz # perform operation
fmadd.s f19, f9, f1, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f1, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f1, f28 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x948a1f60 # load x3 with value 0x948a1f60
sw x3, 0(x2) # store 0x948a1f60 in memory
flw f31, 0(x2) # load 0x948a1f60 from memory into f31
fmadd.s f28, f12, f9, f31, dyn # perform operation
fmadd.s f28, f12, f9, f31, rdn # perform operation
fmadd.s f28, f12, f9, f31, rmm # perform operation
fmadd.s f28, f12, f9, f31, rne # perform operation
fmadd.s f28, f12, f9, f31, rtz # perform operation
fmadd.s f28, f12, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f9, f31 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
la x2, scratch
li x3, 0x6b74438f # load x3 with value 0x6b74438f
sw x3, 0(x2) # store 0x6b74438f in memory
flw f12, 0(x2) # load 0x6b74438f from memory into f12
fmadd.s f13, f7, f6, f12, dyn # perform operation
fmadd.s f13, f7, f6, f12, rdn # perform operation
fmadd.s f13, f7, f6, f12, rmm # perform operation
fmadd.s f13, f7, f6, f12, rne # perform operation
fmadd.s f13, f7, f6, f12, rtz # perform operation
fmadd.s f13, f7, f6, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f6, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f6, f12 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x80eab996 # load x3 with value 0x80eab996
sw x3, 0(x2) # store 0x80eab996 in memory
flw f10, 0(x2) # load 0x80eab996 from memory into f10
fmadd.s f26, f14, f28, f10, dyn # perform operation
fmadd.s f26, f14, f28, f10, rdn # perform operation
fmadd.s f26, f14, f28, f10, rmm # perform operation
fmadd.s f26, f14, f28, f10, rne # perform operation
fmadd.s f26, f14, f28, f10, rtz # perform operation
fmadd.s f26, f14, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f14, f28, f10 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x1f341da9 # load x3 with value 0x1f341da9
sw x3, 0(x2) # store 0x1f341da9 in memory
flw f13, 0(x2) # load 0x1f341da9 from memory into f13
fmadd.s f12, f31, f15, f13, dyn # perform operation
fmadd.s f12, f31, f15, f13, rdn # perform operation
fmadd.s f12, f31, f15, f13, rmm # perform operation
fmadd.s f12, f31, f15, f13, rne # perform operation
fmadd.s f12, f31, f15, f13, rtz # perform operation
fmadd.s f12, f31, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f15, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
la x2, scratch
li x3, 0x8e019e7a # load x3 with value 0x8e019e7a
sw x3, 0(x2) # store 0x8e019e7a in memory
flw f11, 0(x2) # load 0x8e019e7a from memory into f11
fmadd.s f13, f10, f9, f11, dyn # perform operation
fmadd.s f13, f10, f9, f11, rdn # perform operation
fmadd.s f13, f10, f9, f11, rmm # perform operation
fmadd.s f13, f10, f9, f11, rne # perform operation
fmadd.s f13, f10, f9, f11, rtz # perform operation
fmadd.s f13, f10, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f9, f11 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xa0958230 # load x3 with value 0xa0958230
sw x3, 0(x2) # store 0xa0958230 in memory
flw f2, 0(x2) # load 0xa0958230 from memory into f2
fmadd.s f26, f3, f1, f2, dyn # perform operation
fmadd.s f26, f3, f1, f2, rdn # perform operation
fmadd.s f26, f3, f1, f2, rmm # perform operation
fmadd.s f26, f3, f1, f2, rne # perform operation
fmadd.s f26, f3, f1, f2, rtz # perform operation
fmadd.s f26, f3, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f1, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
la x2, scratch
li x3, 0xd1c4cdb1 # load x3 with value 0xd1c4cdb1
sw x3, 0(x2) # store 0xd1c4cdb1 in memory
flw f9, 0(x2) # load 0xd1c4cdb1 from memory into f9
fmadd.s f16, f11, f6, f9, dyn # perform operation
fmadd.s f16, f11, f6, f9, rdn # perform operation
fmadd.s f16, f11, f6, f9, rmm # perform operation
fmadd.s f16, f11, f6, f9, rne # perform operation
fmadd.s f16, f11, f6, f9, rtz # perform operation
fmadd.s f16, f11, f6, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f6, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f6, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x8b9ca0af # load x3 with value 0x8b9ca0af
sw x3, 0(x2) # store 0x8b9ca0af in memory
flw f17, 0(x2) # load 0x8b9ca0af from memory into f17
fmadd.s f3, f10, f2, f17, dyn # perform operation
fmadd.s f3, f10, f2, f17, rdn # perform operation
fmadd.s f3, f10, f2, f17, rmm # perform operation
fmadd.s f3, f10, f2, f17, rne # perform operation
fmadd.s f3, f10, f2, f17, rtz # perform operation
fmadd.s f3, f10, f2, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f2, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f2, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
la x2, scratch
li x3, 0xb82a2bc0 # load x3 with value 0xb82a2bc0
sw x3, 0(x2) # store 0xb82a2bc0 in memory
flw f3, 0(x2) # load 0xb82a2bc0 from memory into f3
fmadd.s f16, f20, f29, f3, dyn # perform operation
fmadd.s f16, f20, f29, f3, rdn # perform operation
fmadd.s f16, f20, f29, f3, rmm # perform operation
fmadd.s f16, f20, f29, f3, rne # perform operation
fmadd.s f16, f20, f29, f3, rtz # perform operation
fmadd.s f16, f20, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f29, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
la x2, scratch
li x3, 0xa5ba6e99 # load x3 with value 0xa5ba6e99
sw x3, 0(x2) # store 0xa5ba6e99 in memory
flw f3, 0(x2) # load 0xa5ba6e99 from memory into f3
fmadd.s f9, f11, f1, f3, dyn # perform operation
fmadd.s f9, f11, f1, f3, rdn # perform operation
fmadd.s f9, f11, f1, f3, rmm # perform operation
fmadd.s f9, f11, f1, f3, rne # perform operation
fmadd.s f9, f11, f1, f3, rtz # perform operation
fmadd.s f9, f11, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
la x2, scratch
li x3, 0xc1f4d3dd # load x3 with value 0xc1f4d3dd
sw x3, 0(x2) # store 0xc1f4d3dd in memory
flw f9, 0(x2) # load 0xc1f4d3dd from memory into f9
fmadd.s f7, f8, f18, f9, dyn # perform operation
fmadd.s f7, f8, f18, f9, rdn # perform operation
fmadd.s f7, f8, f18, f9, rmm # perform operation
fmadd.s f7, f8, f18, f9, rne # perform operation
fmadd.s f7, f8, f18, f9, rtz # perform operation
fmadd.s f7, f8, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f18, f9 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
la x2, scratch
li x3, 0x1ee24988 # load x3 with value 0x1ee24988
sw x3, 0(x2) # store 0x1ee24988 in memory
flw f2, 0(x2) # load 0x1ee24988 from memory into f2
fmadd.s f20, f10, f25, f2, dyn # perform operation
fmadd.s f20, f10, f25, f2, rdn # perform operation
fmadd.s f20, f10, f25, f2, rmm # perform operation
fmadd.s f20, f10, f25, f2, rne # perform operation
fmadd.s f20, f10, f25, f2, rtz # perform operation
fmadd.s f20, f10, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f10, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f10, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f10, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f10, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f10, f25, f2 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0x90822a27 # load x3 with value 0x90822a27
sw x3, 0(x2) # store 0x90822a27 in memory
flw f21, 0(x2) # load 0x90822a27 from memory into f21
fmadd.s f22, f29, f31, f21, dyn # perform operation
fmadd.s f22, f29, f31, f21, rdn # perform operation
fmadd.s f22, f29, f31, f21, rmm # perform operation
fmadd.s f22, f29, f31, f21, rne # perform operation
fmadd.s f22, f29, f31, f21, rtz # perform operation
fmadd.s f22, f29, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f31, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x18faf131 # load x3 with value 0x18faf131
sw x3, 0(x2) # store 0x18faf131 in memory
flw f24, 0(x2) # load 0x18faf131 from memory into f24
fmadd.s f13, f11, f18, f24, dyn # perform operation
fmadd.s f13, f11, f18, f24, rdn # perform operation
fmadd.s f13, f11, f18, f24, rmm # perform operation
fmadd.s f13, f11, f18, f24, rne # perform operation
fmadd.s f13, f11, f18, f24, rtz # perform operation
fmadd.s f13, f11, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f18, f24 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xca1b44f1 # load x3 with value 0xca1b44f1
sw x3, 0(x2) # store 0xca1b44f1 in memory
flw f21, 0(x2) # load 0xca1b44f1 from memory into f21
fmadd.s f20, f26, f11, f21, dyn # perform operation
fmadd.s f20, f26, f11, f21, rdn # perform operation
fmadd.s f20, f26, f11, f21, rmm # perform operation
fmadd.s f20, f26, f11, f21, rne # perform operation
fmadd.s f20, f26, f11, f21, rtz # perform operation
fmadd.s f20, f26, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f11, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x6ca49ece # load x3 with value 0x6ca49ece
sw x3, 0(x2) # store 0x6ca49ece in memory
flw f30, 0(x2) # load 0x6ca49ece from memory into f30
fmadd.s f24, f2, f7, f30, dyn # perform operation
fmadd.s f24, f2, f7, f30, rdn # perform operation
fmadd.s f24, f2, f7, f30, rmm # perform operation
fmadd.s f24, f2, f7, f30, rne # perform operation
fmadd.s f24, f2, f7, f30, rtz # perform operation
fmadd.s f24, f2, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f7, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x94691341 # load x3 with value 0x94691341
sw x3, 0(x2) # store 0x94691341 in memory
flw f21, 0(x2) # load 0x94691341 from memory into f21
fmadd.s f2, f26, f18, f21, dyn # perform operation
fmadd.s f2, f26, f18, f21, rdn # perform operation
fmadd.s f2, f26, f18, f21, rmm # perform operation
fmadd.s f2, f26, f18, f21, rne # perform operation
fmadd.s f2, f26, f18, f21, rtz # perform operation
fmadd.s f2, f26, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f26, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f26, f18, f21 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
la x2, scratch
li x3, 0x94028d11 # load x3 with value 0x94028d11
sw x3, 0(x2) # store 0x94028d11 in memory
flw f1, 0(x2) # load 0x94028d11 from memory into f1
fmadd.s f30, f11, f6, f1, dyn # perform operation
fmadd.s f30, f11, f6, f1, rdn # perform operation
fmadd.s f30, f11, f6, f1, rmm # perform operation
fmadd.s f30, f11, f6, f1, rne # perform operation
fmadd.s f30, f11, f6, f1, rtz # perform operation
fmadd.s f30, f11, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f6, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x2ac14b96 # load x3 with value 0x2ac14b96
sw x3, 0(x2) # store 0x2ac14b96 in memory
flw f19, 0(x2) # load 0x2ac14b96 from memory into f19
fmadd.s f31, f21, f20, f19, dyn # perform operation
fmadd.s f31, f21, f20, f19, rdn # perform operation
fmadd.s f31, f21, f20, f19, rmm # perform operation
fmadd.s f31, f21, f20, f19, rne # perform operation
fmadd.s f31, f21, f20, f19, rtz # perform operation
fmadd.s f31, f21, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f21, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f21, f20, f19 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xbf52d2aa # load x3 with value 0xbf52d2aa
sw x3, 0(x2) # store 0xbf52d2aa in memory
flw f1, 0(x2) # load 0xbf52d2aa from memory into f1
fmadd.s f25, f8, f26, f1, dyn # perform operation
fmadd.s f25, f8, f26, f1, rdn # perform operation
fmadd.s f25, f8, f26, f1, rmm # perform operation
fmadd.s f25, f8, f26, f1, rne # perform operation
fmadd.s f25, f8, f26, f1, rtz # perform operation
fmadd.s f25, f8, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f8, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f8, f26, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x879b8b30 # load x3 with value 0x879b8b30
sw x3, 0(x2) # store 0x879b8b30 in memory
flw f1, 0(x2) # load 0x879b8b30 from memory into f1
fmadd.s f23, f10, f31, f1, dyn # perform operation
fmadd.s f23, f10, f31, f1, rdn # perform operation
fmadd.s f23, f10, f31, f1, rmm # perform operation
fmadd.s f23, f10, f31, f1, rne # perform operation
fmadd.s f23, f10, f31, f1, rtz # perform operation
fmadd.s f23, f10, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f31, f1 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x5fadbdd1 # load x3 with value 0x5fadbdd1
sw x3, 0(x2) # store 0x5fadbdd1 in memory
flw f13, 0(x2) # load 0x5fadbdd1 from memory into f13
fmadd.s f16, f7, f12, f13, dyn # perform operation
fmadd.s f16, f7, f12, f13, rdn # perform operation
fmadd.s f16, f7, f12, f13, rmm # perform operation
fmadd.s f16, f7, f12, f13, rne # perform operation
fmadd.s f16, f7, f12, f13, rtz # perform operation
fmadd.s f16, f7, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f12, f13 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x0d11101e # load x3 with value 0x0d11101e
sw x3, 0(x2) # store 0x0d11101e in memory
flw f17, 0(x2) # load 0x0d11101e from memory into f17
fmadd.s f1, f2, f20, f17, dyn # perform operation
fmadd.s f1, f2, f20, f17, rdn # perform operation
fmadd.s f1, f2, f20, f17, rmm # perform operation
fmadd.s f1, f2, f20, f17, rne # perform operation
fmadd.s f1, f2, f20, f17, rtz # perform operation
fmadd.s f1, f2, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f20, f17 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffffffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x8317b74a # load x3 with value 0x8317b74a
sw x3, 0(x2) # store 0x8317b74a in memory
flw f3, 0(x2) # load 0x8317b74a from memory into f3
fmadd.s f24, f18, f10, f3, dyn # perform operation
fmadd.s f24, f18, f10, f3, rdn # perform operation
fmadd.s f24, f18, f10, f3, rmm # perform operation
fmadd.s f24, f18, f10, f3, rne # perform operation
fmadd.s f24, f18, f10, f3, rtz # perform operation
fmadd.s f24, f18, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f18, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f18, f10, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x43efddb8 # load x3 with value 0x43efddb8
sw x3, 0(x2) # store 0x43efddb8 in memory
flw f3, 0(x2) # load 0x43efddb8 from memory into f3
fmadd.s f29, f5, f1, f3, dyn # perform operation
fmadd.s f29, f5, f1, f3, rdn # perform operation
fmadd.s f29, f5, f1, f3, rmm # perform operation
fmadd.s f29, f5, f1, f3, rne # perform operation
fmadd.s f29, f5, f1, f3, rtz # perform operation
fmadd.s f29, f5, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f1, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x8eb69420 # load x3 with value 0x8eb69420
sw x3, 0(x2) # store 0x8eb69420 in memory
flw f30, 0(x2) # load 0x8eb69420 from memory into f30
fmadd.s f12, f28, f11, f30, dyn # perform operation
fmadd.s f12, f28, f11, f30, rdn # perform operation
fmadd.s f12, f28, f11, f30, rmm # perform operation
fmadd.s f12, f28, f11, f30, rne # perform operation
fmadd.s f12, f28, f11, f30, rtz # perform operation
fmadd.s f12, f28, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f11, f30 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xffbfffff)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0xcced9685 # load x3 with value 0xcced9685
sw x3, 0(x2) # store 0xcced9685 in memory
flw f15, 0(x2) # load 0xcced9685 from memory into f15
fmadd.s f9, f26, f29, f15, dyn # perform operation
fmadd.s f9, f26, f29, f15, rdn # perform operation
fmadd.s f9, f26, f29, f15, rmm # perform operation
fmadd.s f9, f26, f29, f15, rne # perform operation
fmadd.s f9, f26, f29, f15, rtz # perform operation
fmadd.s f9, f26, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f29, f15 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0x9d08c071 # load x3 with value 0x9d08c071
sw x3, 0(x2) # store 0x9d08c071 in memory
flw f3, 0(x2) # load 0x9d08c071 from memory into f3
fmadd.s f24, f2, f13, f3, dyn # perform operation
fmadd.s f24, f2, f13, f3, rdn # perform operation
fmadd.s f24, f2, f13, f3, rmm # perform operation
fmadd.s f24, f2, f13, f3, rne # perform operation
fmadd.s f24, f2, f13, f3, rtz # perform operation
fmadd.s f24, f2, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f13, f3 # perform operation


# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
fsflagsi 0b00000 # clear all fflags
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0xaa2de957 # load x3 with value 0xaa2de957
sw x3, 0(x2) # store 0xaa2de957 in memory
flw f26, 0(x2) # load 0xaa2de957 from memory into f26
fmadd.s f5, f13, f18, f26, dyn # perform operation
fmadd.s f5, f13, f18, f26, rdn # perform operation
fmadd.s f5, f13, f18, f26, rmm # perform operation
fmadd.s f5, f13, f18, f26, rne # perform operation
fmadd.s f5, f13, f18, f26, rtz # perform operation
fmadd.s f5, f13, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f18, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xbe399167 # load x3 with value 0xbe399167
sw x3, 0(x2) # store 0xbe399167 in memory
flw f19, 0(x2) # load 0xbe399167 from memory into f19
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f24, f22, f19, f2, dyn # perform operation
fmadd.s f24, f22, f19, f2, rdn # perform operation
fmadd.s f24, f22, f19, f2, rmm # perform operation
fmadd.s f24, f22, f19, f2, rne # perform operation
fmadd.s f24, f22, f19, f2, rtz # perform operation
fmadd.s f24, f22, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
la x2, scratch
li x3, 0xb25252b9 # load x3 with value 0xb25252b9
sw x3, 0(x2) # store 0xb25252b9 in memory
flw f22, 0(x2) # load 0xb25252b9 from memory into f22
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmadd.s f11, f1, f22, f27, dyn # perform operation
fmadd.s f11, f1, f22, f27, rdn # perform operation
fmadd.s f11, f1, f22, f27, rmm # perform operation
fmadd.s f11, f1, f22, f27, rne # perform operation
fmadd.s f11, f1, f22, f27, rtz # perform operation
fmadd.s f11, f1, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f22, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xca3b2ff5 # load x3 with value 0xca3b2ff5
sw x3, 0(x2) # store 0xca3b2ff5 in memory
flw f7, 0(x2) # load 0xca3b2ff5 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
fmadd.s f11, f22, f7, f6, dyn # perform operation
fmadd.s f11, f22, f7, f6, rdn # perform operation
fmadd.s f11, f22, f7, f6, rmm # perform operation
fmadd.s f11, f22, f7, f6, rne # perform operation
fmadd.s f11, f22, f7, f6, rtz # perform operation
fmadd.s f11, f22, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f22, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f22, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0xf2205d15 # load x3 with value 0xf2205d15
sw x3, 0(x2) # store 0xf2205d15 in memory
flw f8, 0(x2) # load 0xf2205d15 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fmadd.s f28, f26, f8, f2, dyn # perform operation
fmadd.s f28, f26, f8, f2, rdn # perform operation
fmadd.s f28, f26, f8, f2, rmm # perform operation
fmadd.s f28, f26, f8, f2, rne # perform operation
fmadd.s f28, f26, f8, f2, rtz # perform operation
fmadd.s f28, f26, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f26, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f26, f8, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0xc45f8d3b # load x3 with value 0xc45f8d3b
sw x3, 0(x2) # store 0xc45f8d3b in memory
flw f23, 0(x2) # load 0xc45f8d3b from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fmadd.s f2, f22, f23, f6, dyn # perform operation
fmadd.s f2, f22, f23, f6, rdn # perform operation
fmadd.s f2, f22, f23, f6, rmm # perform operation
fmadd.s f2, f22, f23, f6, rne # perform operation
fmadd.s f2, f22, f23, f6, rtz # perform operation
fmadd.s f2, f22, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xf053e801 # load x3 with value 0xf053e801
sw x3, 0(x2) # store 0xf053e801 in memory
flw f28, 0(x2) # load 0xf053e801 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
fmadd.s f29, f7, f28, f18, dyn # perform operation
fmadd.s f29, f7, f28, f18, rdn # perform operation
fmadd.s f29, f7, f28, f18, rmm # perform operation
fmadd.s f29, f7, f28, f18, rne # perform operation
fmadd.s f29, f7, f28, f18, rtz # perform operation
fmadd.s f29, f7, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x6eb19d4b # load x3 with value 0x6eb19d4b
sw x3, 0(x2) # store 0x6eb19d4b in memory
flw f31, 0(x2) # load 0x6eb19d4b from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmadd.s f11, f5, f31, f1, dyn # perform operation
fmadd.s f11, f5, f31, f1, rdn # perform operation
fmadd.s f11, f5, f31, f1, rmm # perform operation
fmadd.s f11, f5, f31, f1, rne # perform operation
fmadd.s f11, f5, f31, f1, rtz # perform operation
fmadd.s f11, f5, f31, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f5, f31, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f5, f31, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f5, f31, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f5, f31, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f5, f31, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0x5873c685 # load x3 with value 0x5873c685
sw x3, 0(x2) # store 0x5873c685 in memory
flw f15, 0(x2) # load 0x5873c685 from memory into f15
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f13, f2, f15, f20, dyn # perform operation
fmadd.s f13, f2, f15, f20, rdn # perform operation
fmadd.s f13, f2, f15, f20, rmm # perform operation
fmadd.s f13, f2, f15, f20, rne # perform operation
fmadd.s f13, f2, f15, f20, rtz # perform operation
fmadd.s f13, f2, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xd4a2431a # load x3 with value 0xd4a2431a
sw x3, 0(x2) # store 0xd4a2431a in memory
flw f2, 0(x2) # load 0xd4a2431a from memory into f2
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f15, f20, f2, f7, dyn # perform operation
fmadd.s f15, f20, f2, f7, rdn # perform operation
fmadd.s f15, f20, f2, f7, rmm # perform operation
fmadd.s f15, f20, f2, f7, rne # perform operation
fmadd.s f15, f20, f2, f7, rtz # perform operation
fmadd.s f15, f20, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xda6018d0 # load x3 with value 0xda6018d0
sw x3, 0(x2) # store 0xda6018d0 in memory
flw f1, 0(x2) # load 0xda6018d0 from memory into f1
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmadd.s f29, f7, f1, f30, dyn # perform operation
fmadd.s f29, f7, f1, f30, rdn # perform operation
fmadd.s f29, f7, f1, f30, rmm # perform operation
fmadd.s f29, f7, f1, f30, rne # perform operation
fmadd.s f29, f7, f1, f30, rtz # perform operation
fmadd.s f29, f7, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
la x2, scratch
li x3, 0x3526a24b # load x3 with value 0x3526a24b
sw x3, 0(x2) # store 0x3526a24b in memory
flw f21, 0(x2) # load 0x3526a24b from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmadd.s f28, f14, f21, f19, dyn # perform operation
fmadd.s f28, f14, f21, f19, rdn # perform operation
fmadd.s f28, f14, f21, f19, rmm # perform operation
fmadd.s f28, f14, f21, f19, rne # perform operation
fmadd.s f28, f14, f21, f19, rtz # perform operation
fmadd.s f28, f14, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f21, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x4e55d8d4 # load x3 with value 0x4e55d8d4
sw x3, 0(x2) # store 0x4e55d8d4 in memory
flw f9, 0(x2) # load 0x4e55d8d4 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmadd.s f22, f7, f9, f8, dyn # perform operation
fmadd.s f22, f7, f9, f8, rdn # perform operation
fmadd.s f22, f7, f9, f8, rmm # perform operation
fmadd.s f22, f7, f9, f8, rne # perform operation
fmadd.s f22, f7, f9, f8, rtz # perform operation
fmadd.s f22, f7, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f9, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
la x2, scratch
li x3, 0xaa30fef2 # load x3 with value 0xaa30fef2
sw x3, 0(x2) # store 0xaa30fef2 in memory
flw f5, 0(x2) # load 0xaa30fef2 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmadd.s f30, f2, f5, f19, dyn # perform operation
fmadd.s f30, f2, f5, f19, rdn # perform operation
fmadd.s f30, f2, f5, f19, rmm # perform operation
fmadd.s f30, f2, f5, f19, rne # perform operation
fmadd.s f30, f2, f5, f19, rtz # perform operation
fmadd.s f30, f2, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f5, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
la x2, scratch
li x3, 0x5b429e6f # load x3 with value 0x5b429e6f
sw x3, 0(x2) # store 0x5b429e6f in memory
flw f2, 0(x2) # load 0x5b429e6f from memory into f2
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
fmadd.s f26, f16, f2, f1, dyn # perform operation
fmadd.s f26, f16, f2, f1, rdn # perform operation
fmadd.s f26, f16, f2, f1, rmm # perform operation
fmadd.s f26, f16, f2, f1, rne # perform operation
fmadd.s f26, f16, f2, f1, rtz # perform operation
fmadd.s f26, f16, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f16, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f16, f2, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
la x2, scratch
li x3, 0x74ce2312 # load x3 with value 0x74ce2312
sw x3, 0(x2) # store 0x74ce2312 in memory
flw f18, 0(x2) # load 0x74ce2312 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fmadd.s f26, f5, f18, f11, dyn # perform operation
fmadd.s f26, f5, f18, f11, rdn # perform operation
fmadd.s f26, f5, f18, f11, rmm # perform operation
fmadd.s f26, f5, f18, f11, rne # perform operation
fmadd.s f26, f5, f18, f11, rtz # perform operation
fmadd.s f26, f5, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f18, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
la x2, scratch
li x3, 0x2dd9c55b # load x3 with value 0x2dd9c55b
sw x3, 0(x2) # store 0x2dd9c55b in memory
flw f11, 0(x2) # load 0x2dd9c55b from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmadd.s f1, f21, f11, f18, dyn # perform operation
fmadd.s f1, f21, f11, f18, rdn # perform operation
fmadd.s f1, f21, f11, f18, rmm # perform operation
fmadd.s f1, f21, f11, f18, rne # perform operation
fmadd.s f1, f21, f11, f18, rtz # perform operation
fmadd.s f1, f21, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
la x2, scratch
li x3, 0x07c04d8b # load x3 with value 0x07c04d8b
sw x3, 0(x2) # store 0x07c04d8b in memory
flw f19, 0(x2) # load 0x07c04d8b from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fmadd.s f13, f27, f19, f15, dyn # perform operation
fmadd.s f13, f27, f19, f15, rdn # perform operation
fmadd.s f13, f27, f19, f15, rmm # perform operation
fmadd.s f13, f27, f19, f15, rne # perform operation
fmadd.s f13, f27, f19, f15, rtz # perform operation
fmadd.s f13, f27, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f19, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0xff747526 # load x3 with value 0xff747526
sw x3, 0(x2) # store 0xff747526 in memory
flw f5, 0(x2) # load 0xff747526 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmadd.s f18, f7, f5, f28, dyn # perform operation
fmadd.s f18, f7, f5, f28, rdn # perform operation
fmadd.s f18, f7, f5, f28, rmm # perform operation
fmadd.s f18, f7, f5, f28, rne # perform operation
fmadd.s f18, f7, f5, f28, rtz # perform operation
fmadd.s f18, f7, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f5, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
la x2, scratch
li x3, 0xdb6fd8aa # load x3 with value 0xdb6fd8aa
sw x3, 0(x2) # store 0xdb6fd8aa in memory
flw f17, 0(x2) # load 0xdb6fd8aa from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
fmadd.s f2, f30, f17, f31, dyn # perform operation
fmadd.s f2, f30, f17, f31, rdn # perform operation
fmadd.s f2, f30, f17, f31, rmm # perform operation
fmadd.s f2, f30, f17, f31, rne # perform operation
fmadd.s f2, f30, f17, f31, rtz # perform operation
fmadd.s f2, f30, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
la x2, scratch
li x3, 0x7be750a3 # load x3 with value 0x7be750a3
sw x3, 0(x2) # store 0x7be750a3 in memory
flw f14, 0(x2) # load 0x7be750a3 from memory into f14
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f5, f8, f14, f10, dyn # perform operation
fmadd.s f5, f8, f14, f10, rdn # perform operation
fmadd.s f5, f8, f14, f10, rmm # perform operation
fmadd.s f5, f8, f14, f10, rne # perform operation
fmadd.s f5, f8, f14, f10, rtz # perform operation
fmadd.s f5, f8, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f14, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
la x2, scratch
li x3, 0xfffa532c # load x3 with value 0xfffa532c
sw x3, 0(x2) # store 0xfffa532c in memory
flw f3, 0(x2) # load 0xfffa532c from memory into f3
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmadd.s f21, f29, f3, f11, dyn # perform operation
fmadd.s f21, f29, f3, f11, rdn # perform operation
fmadd.s f21, f29, f3, f11, rmm # perform operation
fmadd.s f21, f29, f3, f11, rne # perform operation
fmadd.s f21, f29, f3, f11, rtz # perform operation
fmadd.s f21, f29, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
la x2, scratch
li x3, 0x2461ec0b # load x3 with value 0x2461ec0b
sw x3, 0(x2) # store 0x2461ec0b in memory
flw f3, 0(x2) # load 0x2461ec0b from memory into f3
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
fmadd.s f8, f17, f3, f26, dyn # perform operation
fmadd.s f8, f17, f3, f26, rdn # perform operation
fmadd.s f8, f17, f3, f26, rmm # perform operation
fmadd.s f8, f17, f3, f26, rne # perform operation
fmadd.s f8, f17, f3, f26, rtz # perform operation
fmadd.s f8, f17, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f17, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f17, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xa99db8f8 # load x3 with value 0xa99db8f8
sw x3, 0(x2) # store 0xa99db8f8 in memory
flw f28, 0(x2) # load 0xa99db8f8 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
fmadd.s f31, f20, f28, f15, dyn # perform operation
fmadd.s f31, f20, f28, f15, rdn # perform operation
fmadd.s f31, f20, f28, f15, rmm # perform operation
fmadd.s f31, f20, f28, f15, rne # perform operation
fmadd.s f31, f20, f28, f15, rtz # perform operation
fmadd.s f31, f20, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
la x2, scratch
li x3, 0xb9f53aaa # load x3 with value 0xb9f53aaa
sw x3, 0(x2) # store 0xb9f53aaa in memory
flw f30, 0(x2) # load 0xb9f53aaa from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fmadd.s f6, f31, f30, f25, dyn # perform operation
fmadd.s f6, f31, f30, f25, rdn # perform operation
fmadd.s f6, f31, f30, f25, rmm # perform operation
fmadd.s f6, f31, f30, f25, rne # perform operation
fmadd.s f6, f31, f30, f25, rtz # perform operation
fmadd.s f6, f31, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f31, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
la x2, scratch
li x3, 0x837603a5 # load x3 with value 0x837603a5
sw x3, 0(x2) # store 0x837603a5 in memory
flw f3, 0(x2) # load 0x837603a5 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmadd.s f19, f22, f3, f23, dyn # perform operation
fmadd.s f19, f22, f3, f23, rdn # perform operation
fmadd.s f19, f22, f3, f23, rmm # perform operation
fmadd.s f19, f22, f3, f23, rne # perform operation
fmadd.s f19, f22, f3, f23, rtz # perform operation
fmadd.s f19, f22, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
la x2, scratch
li x3, 0x13b33cef # load x3 with value 0x13b33cef
sw x3, 0(x2) # store 0x13b33cef in memory
flw f11, 0(x2) # load 0x13b33cef from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f28, 0(x2) # load 0xffbfffff from memory into f28
fmadd.s f6, f7, f11, f28, dyn # perform operation
fmadd.s f6, f7, f11, f28, rdn # perform operation
fmadd.s f6, f7, f11, f28, rmm # perform operation
fmadd.s f6, f7, f11, f28, rne # perform operation
fmadd.s f6, f7, f11, f28, rtz # perform operation
fmadd.s f6, f7, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f11, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
la x2, scratch
li x3, 0x28eb58e1 # load x3 with value 0x28eb58e1
sw x3, 0(x2) # store 0x28eb58e1 in memory
flw f23, 0(x2) # load 0x28eb58e1 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f24, f26, f23, f6, dyn # perform operation
fmadd.s f24, f26, f23, f6, rdn # perform operation
fmadd.s f24, f26, f23, f6, rmm # perform operation
fmadd.s f24, f26, f23, f6, rne # perform operation
fmadd.s f24, f26, f23, f6, rtz # perform operation
fmadd.s f24, f26, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
la x2, scratch
li x3, 0xa5e4cbf4 # load x3 with value 0xa5e4cbf4
sw x3, 0(x2) # store 0xa5e4cbf4 in memory
flw f27, 0(x2) # load 0xa5e4cbf4 from memory into f27
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmadd.s f12, f20, f27, f5, dyn # perform operation
fmadd.s f12, f20, f27, f5, rdn # perform operation
fmadd.s f12, f20, f27, f5, rmm # perform operation
fmadd.s f12, f20, f27, f5, rne # perform operation
fmadd.s f12, f20, f27, f5, rtz # perform operation
fmadd.s f12, f20, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x8675d034 # load x3 with value 0x8675d034
sw x3, 0(x2) # store 0x8675d034 in memory
flw f23, 0(x2) # load 0x8675d034 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f2, f31, f23, f16, dyn # perform operation
fmadd.s f2, f31, f23, f16, rdn # perform operation
fmadd.s f2, f31, f23, f16, rmm # perform operation
fmadd.s f2, f31, f23, f16, rne # perform operation
fmadd.s f2, f31, f23, f16, rtz # perform operation
fmadd.s f2, f31, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f23, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
la x2, scratch
li x3, 0x16bbad41 # load x3 with value 0x16bbad41
sw x3, 0(x2) # store 0x16bbad41 in memory
flw f25, 0(x2) # load 0x16bbad41 from memory into f25
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
fmadd.s f10, f22, f25, f6, dyn # perform operation
fmadd.s f10, f22, f25, f6, rdn # perform operation
fmadd.s f10, f22, f25, f6, rmm # perform operation
fmadd.s f10, f22, f25, f6, rne # perform operation
fmadd.s f10, f22, f25, f6, rtz # perform operation
fmadd.s f10, f22, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f25, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x03e2fc86 # load x3 with value 0x03e2fc86
sw x3, 0(x2) # store 0x03e2fc86 in memory
flw f28, 0(x2) # load 0x03e2fc86 from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmadd.s f20, f21, f28, f19, dyn # perform operation
fmadd.s f20, f21, f28, f19, rdn # perform operation
fmadd.s f20, f21, f28, f19, rmm # perform operation
fmadd.s f20, f21, f28, f19, rne # perform operation
fmadd.s f20, f21, f28, f19, rtz # perform operation
fmadd.s f20, f21, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0x7e6e6aba # load x3 with value 0x7e6e6aba
sw x3, 0(x2) # store 0x7e6e6aba in memory
flw f14, 0(x2) # load 0x7e6e6aba from memory into f14
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmadd.s f22, f30, f14, f25, dyn # perform operation
fmadd.s f22, f30, f14, f25, rdn # perform operation
fmadd.s f22, f30, f14, f25, rmm # perform operation
fmadd.s f22, f30, f14, f25, rne # perform operation
fmadd.s f22, f30, f14, f25, rtz # perform operation
fmadd.s f22, f30, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
la x2, scratch
li x3, 0xef4fe2fa # load x3 with value 0xef4fe2fa
sw x3, 0(x2) # store 0xef4fe2fa in memory
flw f12, 0(x2) # load 0xef4fe2fa from memory into f12
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f2, f30, f12, f20, dyn # perform operation
fmadd.s f2, f30, f12, f20, rdn # perform operation
fmadd.s f2, f30, f12, f20, rmm # perform operation
fmadd.s f2, f30, f12, f20, rne # perform operation
fmadd.s f2, f30, f12, f20, rtz # perform operation
fmadd.s f2, f30, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0xa9fe52cf # load x3 with value 0xa9fe52cf
sw x3, 0(x2) # store 0xa9fe52cf in memory
flw f28, 0(x2) # load 0xa9fe52cf from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmadd.s f10, f8, f28, f11, dyn # perform operation
fmadd.s f10, f8, f28, f11, rdn # perform operation
fmadd.s f10, f8, f28, f11, rmm # perform operation
fmadd.s f10, f8, f28, f11, rne # perform operation
fmadd.s f10, f8, f28, f11, rtz # perform operation
fmadd.s f10, f8, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f8, f28, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
la x2, scratch
li x3, 0xad7f0544 # load x3 with value 0xad7f0544
sw x3, 0(x2) # store 0xad7f0544 in memory
flw f27, 0(x2) # load 0xad7f0544 from memory into f27
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fmadd.s f28, f11, f27, f7, dyn # perform operation
fmadd.s f28, f11, f27, f7, rdn # perform operation
fmadd.s f28, f11, f27, f7, rmm # perform operation
fmadd.s f28, f11, f27, f7, rne # perform operation
fmadd.s f28, f11, f27, f7, rtz # perform operation
fmadd.s f28, f11, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f11, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f11, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x42ca78bb # load x3 with value 0x42ca78bb
sw x3, 0(x2) # store 0x42ca78bb in memory
flw f24, 0(x2) # load 0x42ca78bb from memory into f24
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmadd.s f12, f23, f24, f15, dyn # perform operation
fmadd.s f12, f23, f24, f15, rdn # perform operation
fmadd.s f12, f23, f24, f15, rmm # perform operation
fmadd.s f12, f23, f24, f15, rne # perform operation
fmadd.s f12, f23, f24, f15, rtz # perform operation
fmadd.s f12, f23, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f24, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
la x2, scratch
li x3, 0x454e625f # load x3 with value 0x454e625f
sw x3, 0(x2) # store 0x454e625f in memory
flw f23, 0(x2) # load 0x454e625f from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
fmadd.s f21, f8, f23, f18, dyn # perform operation
fmadd.s f21, f8, f23, f18, rdn # perform operation
fmadd.s f21, f8, f23, f18, rmm # perform operation
fmadd.s f21, f8, f23, f18, rne # perform operation
fmadd.s f21, f8, f23, f18, rtz # perform operation
fmadd.s f21, f8, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f23, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0x651a9ddf # load x3 with value 0x651a9ddf
sw x3, 0(x2) # store 0x651a9ddf in memory
flw f21, 0(x2) # load 0x651a9ddf from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmadd.s f26, f28, f21, f30, dyn # perform operation
fmadd.s f26, f28, f21, f30, rdn # perform operation
fmadd.s f26, f28, f21, f30, rmm # perform operation
fmadd.s f26, f28, f21, f30, rne # perform operation
fmadd.s f26, f28, f21, f30, rtz # perform operation
fmadd.s f26, f28, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f28, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f28, f21, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
la x2, scratch
li x3, 0xefc4f870 # load x3 with value 0xefc4f870
sw x3, 0(x2) # store 0xefc4f870 in memory
flw f29, 0(x2) # load 0xefc4f870 from memory into f29
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmadd.s f27, f2, f29, f15, dyn # perform operation
fmadd.s f27, f2, f29, f15, rdn # perform operation
fmadd.s f27, f2, f29, f15, rmm # perform operation
fmadd.s f27, f2, f29, f15, rne # perform operation
fmadd.s f27, f2, f29, f15, rtz # perform operation
fmadd.s f27, f2, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x6262acea # load x3 with value 0x6262acea
sw x3, 0(x2) # store 0x6262acea in memory
flw f28, 0(x2) # load 0x6262acea from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmadd.s f21, f14, f28, f10, dyn # perform operation
fmadd.s f21, f14, f28, f10, rdn # perform operation
fmadd.s f21, f14, f28, f10, rmm # perform operation
fmadd.s f21, f14, f28, f10, rne # perform operation
fmadd.s f21, f14, f28, f10, rtz # perform operation
fmadd.s f21, f14, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f28, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0xa88a0a80 # load x3 with value 0xa88a0a80
sw x3, 0(x2) # store 0xa88a0a80 in memory
flw f15, 0(x2) # load 0xa88a0a80 from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmadd.s f27, f23, f15, f11, dyn # perform operation
fmadd.s f27, f23, f15, f11, rdn # perform operation
fmadd.s f27, f23, f15, f11, rmm # perform operation
fmadd.s f27, f23, f15, f11, rne # perform operation
fmadd.s f27, f23, f15, f11, rtz # perform operation
fmadd.s f27, f23, f15, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f23, f15, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f23, f15, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x0b18dc36 # load x3 with value 0x0b18dc36
sw x3, 0(x2) # store 0x0b18dc36 in memory
flw f19, 0(x2) # load 0x0b18dc36 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmadd.s f22, f3, f19, f9, dyn # perform operation
fmadd.s f22, f3, f19, f9, rdn # perform operation
fmadd.s f22, f3, f19, f9, rmm # perform operation
fmadd.s f22, f3, f19, f9, rne # perform operation
fmadd.s f22, f3, f19, f9, rtz # perform operation
fmadd.s f22, f3, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f3, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f3, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
la x2, scratch
li x3, 0x7324ca8d # load x3 with value 0x7324ca8d
sw x3, 0(x2) # store 0x7324ca8d in memory
flw f25, 0(x2) # load 0x7324ca8d from memory into f25
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f19, f31, f25, f13, dyn # perform operation
fmadd.s f19, f31, f25, f13, rdn # perform operation
fmadd.s f19, f31, f25, f13, rmm # perform operation
fmadd.s f19, f31, f25, f13, rne # perform operation
fmadd.s f19, f31, f25, f13, rtz # perform operation
fmadd.s f19, f31, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f31, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f31, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f31, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f31, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f31, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x8de0442d # load x3 with value 0x8de0442d
sw x3, 0(x2) # store 0x8de0442d in memory
flw f22, 0(x2) # load 0x8de0442d from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f12, f21, f22, f31, dyn # perform operation
fmadd.s f12, f21, f22, f31, rdn # perform operation
fmadd.s f12, f21, f22, f31, rmm # perform operation
fmadd.s f12, f21, f22, f31, rne # perform operation
fmadd.s f12, f21, f22, f31, rtz # perform operation
fmadd.s f12, f21, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0xbdd114fc # load x3 with value 0xbdd114fc
sw x3, 0(x2) # store 0xbdd114fc in memory
flw f20, 0(x2) # load 0xbdd114fc from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmadd.s f23, f13, f20, f2, dyn # perform operation
fmadd.s f23, f13, f20, f2, rdn # perform operation
fmadd.s f23, f13, f20, f2, rmm # perform operation
fmadd.s f23, f13, f20, f2, rne # perform operation
fmadd.s f23, f13, f20, f2, rtz # perform operation
fmadd.s f23, f13, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f20, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
la x2, scratch
li x3, 0x91e8b7b0 # load x3 with value 0x91e8b7b0
sw x3, 0(x2) # store 0x91e8b7b0 in memory
flw f25, 0(x2) # load 0x91e8b7b0 from memory into f25
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
fmadd.s f12, f23, f25, f15, dyn # perform operation
fmadd.s f12, f23, f25, f15, rdn # perform operation
fmadd.s f12, f23, f25, f15, rmm # perform operation
fmadd.s f12, f23, f25, f15, rne # perform operation
fmadd.s f12, f23, f25, f15, rtz # perform operation
fmadd.s f12, f23, f25, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f25, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f25, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f25, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f25, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f25, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
la x2, scratch
li x3, 0x8f26c4d4 # load x3 with value 0x8f26c4d4
sw x3, 0(x2) # store 0x8f26c4d4 in memory
flw f19, 0(x2) # load 0x8f26c4d4 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmadd.s f9, f26, f19, f17, dyn # perform operation
fmadd.s f9, f26, f19, f17, rdn # perform operation
fmadd.s f9, f26, f19, f17, rmm # perform operation
fmadd.s f9, f26, f19, f17, rne # perform operation
fmadd.s f9, f26, f19, f17, rtz # perform operation
fmadd.s f9, f26, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f26, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f26, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f26, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f26, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f26, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
la x2, scratch
li x3, 0x40de39da # load x3 with value 0x40de39da
sw x3, 0(x2) # store 0x40de39da in memory
flw f16, 0(x2) # load 0x40de39da from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
fmadd.s f30, f12, f16, f31, dyn # perform operation
fmadd.s f30, f12, f16, f31, rdn # perform operation
fmadd.s f30, f12, f16, f31, rmm # perform operation
fmadd.s f30, f12, f16, f31, rne # perform operation
fmadd.s f30, f12, f16, f31, rtz # perform operation
fmadd.s f30, f12, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f16, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
la x2, scratch
li x3, 0x9c69260e # load x3 with value 0x9c69260e
sw x3, 0(x2) # store 0x9c69260e in memory
flw f9, 0(x2) # load 0x9c69260e from memory into f9
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmadd.s f19, f3, f9, f12, dyn # perform operation
fmadd.s f19, f3, f9, f12, rdn # perform operation
fmadd.s f19, f3, f9, f12, rmm # perform operation
fmadd.s f19, f3, f9, f12, rne # perform operation
fmadd.s f19, f3, f9, f12, rtz # perform operation
fmadd.s f19, f3, f9, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f9, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f9, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0x1a85120a # load x3 with value 0x1a85120a
sw x3, 0(x2) # store 0x1a85120a in memory
flw f31, 0(x2) # load 0x1a85120a from memory into f31
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmadd.s f6, f21, f31, f29, dyn # perform operation
fmadd.s f6, f21, f31, f29, rdn # perform operation
fmadd.s f6, f21, f31, f29, rmm # perform operation
fmadd.s f6, f21, f31, f29, rne # perform operation
fmadd.s f6, f21, f31, f29, rtz # perform operation
fmadd.s f6, f21, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f31, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
la x2, scratch
li x3, 0xefb9ab19 # load x3 with value 0xefb9ab19
sw x3, 0(x2) # store 0xefb9ab19 in memory
flw f25, 0(x2) # load 0xefb9ab19 from memory into f25
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fmadd.s f18, f21, f25, f8, dyn # perform operation
fmadd.s f18, f21, f25, f8, rdn # perform operation
fmadd.s f18, f21, f25, f8, rmm # perform operation
fmadd.s f18, f21, f25, f8, rne # perform operation
fmadd.s f18, f21, f25, f8, rtz # perform operation
fmadd.s f18, f21, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f25, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
la x2, scratch
li x3, 0x9ee2a4db # load x3 with value 0x9ee2a4db
sw x3, 0(x2) # store 0x9ee2a4db in memory
flw f1, 0(x2) # load 0x9ee2a4db from memory into f1
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f15, f25, f1, f10, dyn # perform operation
fmadd.s f15, f25, f1, f10, rdn # perform operation
fmadd.s f15, f25, f1, f10, rmm # perform operation
fmadd.s f15, f25, f1, f10, rne # perform operation
fmadd.s f15, f25, f1, f10, rtz # perform operation
fmadd.s f15, f25, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
la x2, scratch
li x3, 0x3b92d9d0 # load x3 with value 0x3b92d9d0
sw x3, 0(x2) # store 0x3b92d9d0 in memory
flw f20, 0(x2) # load 0x3b92d9d0 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmadd.s f15, f13, f20, f3, dyn # perform operation
fmadd.s f15, f13, f20, f3, rdn # perform operation
fmadd.s f15, f13, f20, f3, rmm # perform operation
fmadd.s f15, f13, f20, f3, rne # perform operation
fmadd.s f15, f13, f20, f3, rtz # perform operation
fmadd.s f15, f13, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f13, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f13, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
la x2, scratch
li x3, 0xae00a9b4 # load x3 with value 0xae00a9b4
sw x3, 0(x2) # store 0xae00a9b4 in memory
flw f22, 0(x2) # load 0xae00a9b4 from memory into f22
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f1, 0(x2) # load 0xffbfffff from memory into f1
fmadd.s f3, f10, f22, f1, dyn # perform operation
fmadd.s f3, f10, f22, f1, rdn # perform operation
fmadd.s f3, f10, f22, f1, rmm # perform operation
fmadd.s f3, f10, f22, f1, rne # perform operation
fmadd.s f3, f10, f22, f1, rtz # perform operation
fmadd.s f3, f10, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
la x2, scratch
li x3, 0xc3701b81 # load x3 with value 0xc3701b81
sw x3, 0(x2) # store 0xc3701b81 in memory
flw f20, 0(x2) # load 0xc3701b81 from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmadd.s f27, f28, f20, f25, dyn # perform operation
fmadd.s f27, f28, f20, f25, rdn # perform operation
fmadd.s f27, f28, f20, f25, rmm # perform operation
fmadd.s f27, f28, f20, f25, rne # perform operation
fmadd.s f27, f28, f20, f25, rtz # perform operation
fmadd.s f27, f28, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
la x2, scratch
li x3, 0x2b263ab5 # load x3 with value 0x2b263ab5
sw x3, 0(x2) # store 0x2b263ab5 in memory
flw f18, 0(x2) # load 0x2b263ab5 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f15, f14, f18, f17, dyn # perform operation
fmadd.s f15, f14, f18, f17, rdn # perform operation
fmadd.s f15, f14, f18, f17, rmm # perform operation
fmadd.s f15, f14, f18, f17, rne # perform operation
fmadd.s f15, f14, f18, f17, rtz # perform operation
fmadd.s f15, f14, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
la x2, scratch
li x3, 0x2dc2a491 # load x3 with value 0x2dc2a491
sw x3, 0(x2) # store 0x2dc2a491 in memory
flw f23, 0(x2) # load 0x2dc2a491 from memory into f23
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmadd.s f1, f15, f23, f24, dyn # perform operation
fmadd.s f1, f15, f23, f24, rdn # perform operation
fmadd.s f1, f15, f23, f24, rmm # perform operation
fmadd.s f1, f15, f23, f24, rne # perform operation
fmadd.s f1, f15, f23, f24, rtz # perform operation
fmadd.s f1, f15, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f12, 0(x2) # load 0x3f800000 from memory into f12
la x2, scratch
li x3, 0xfd41365f # load x3 with value 0xfd41365f
sw x3, 0(x2) # store 0xfd41365f in memory
flw f19, 0(x2) # load 0xfd41365f from memory into f19
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmadd.s f14, f12, f19, f20, dyn # perform operation
fmadd.s f14, f12, f19, f20, rdn # perform operation
fmadd.s f14, f12, f19, f20, rmm # perform operation
fmadd.s f14, f12, f19, f20, rne # perform operation
fmadd.s f14, f12, f19, f20, rtz # perform operation
fmadd.s f14, f12, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
la x2, scratch
li x3, 0xd1b8f099 # load x3 with value 0xd1b8f099
sw x3, 0(x2) # store 0xd1b8f099 in memory
flw f8, 0(x2) # load 0xd1b8f099 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f20, f29, f8, f18, dyn # perform operation
fmadd.s f20, f29, f8, f18, rdn # perform operation
fmadd.s f20, f29, f8, f18, rmm # perform operation
fmadd.s f20, f29, f8, f18, rne # perform operation
fmadd.s f20, f29, f8, f18, rtz # perform operation
fmadd.s f20, f29, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x61711793 # load x3 with value 0x61711793
sw x3, 0(x2) # store 0x61711793 in memory
flw f7, 0(x2) # load 0x61711793 from memory into f7
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f28, f10, f7, f27, dyn # perform operation
fmadd.s f28, f10, f7, f27, rdn # perform operation
fmadd.s f28, f10, f7, f27, rmm # perform operation
fmadd.s f28, f10, f7, f27, rne # perform operation
fmadd.s f28, f10, f7, f27, rtz # perform operation
fmadd.s f28, f10, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f10, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f10, f7, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
la x2, scratch
li x3, 0x0800a043 # load x3 with value 0x0800a043
sw x3, 0(x2) # store 0x0800a043 in memory
flw f2, 0(x2) # load 0x0800a043 from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f13, f16, f2, f12, dyn # perform operation
fmadd.s f13, f16, f2, f12, rdn # perform operation
fmadd.s f13, f16, f2, f12, rmm # perform operation
fmadd.s f13, f16, f2, f12, rne # perform operation
fmadd.s f13, f16, f2, f12, rtz # perform operation
fmadd.s f13, f16, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f14, 0(x2) # load 0x3f800000 from memory into f14
la x2, scratch
li x3, 0x898d2025 # load x3 with value 0x898d2025
sw x3, 0(x2) # store 0x898d2025 in memory
flw f25, 0(x2) # load 0x898d2025 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fmadd.s f6, f14, f25, f3, dyn # perform operation
fmadd.s f6, f14, f25, f3, rdn # perform operation
fmadd.s f6, f14, f25, f3, rmm # perform operation
fmadd.s f6, f14, f25, f3, rne # perform operation
fmadd.s f6, f14, f25, f3, rtz # perform operation
fmadd.s f6, f14, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f14, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0x14a6904c # load x3 with value 0x14a6904c
sw x3, 0(x2) # store 0x14a6904c in memory
flw f24, 0(x2) # load 0x14a6904c from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f13, f19, f24, f9, dyn # perform operation
fmadd.s f13, f19, f24, f9, rdn # perform operation
fmadd.s f13, f19, f24, f9, rmm # perform operation
fmadd.s f13, f19, f24, f9, rne # perform operation
fmadd.s f13, f19, f24, f9, rtz # perform operation
fmadd.s f13, f19, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
la x2, scratch
li x3, 0x778d6835 # load x3 with value 0x778d6835
sw x3, 0(x2) # store 0x778d6835 in memory
flw f29, 0(x2) # load 0x778d6835 from memory into f29
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f19, f13, f29, f20, dyn # perform operation
fmadd.s f19, f13, f29, f20, rdn # perform operation
fmadd.s f19, f13, f29, f20, rmm # perform operation
fmadd.s f19, f13, f29, f20, rne # perform operation
fmadd.s f19, f13, f29, f20, rtz # perform operation
fmadd.s f19, f13, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f13, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f13, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f13, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f13, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f13, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
la x2, scratch
li x3, 0x902e6f3c # load x3 with value 0x902e6f3c
sw x3, 0(x2) # store 0x902e6f3c in memory
flw f11, 0(x2) # load 0x902e6f3c from memory into f11
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
fmadd.s f2, f28, f11, f21, dyn # perform operation
fmadd.s f2, f28, f11, f21, rdn # perform operation
fmadd.s f2, f28, f11, f21, rmm # perform operation
fmadd.s f2, f28, f11, f21, rne # perform operation
fmadd.s f2, f28, f11, f21, rtz # perform operation
fmadd.s f2, f28, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x995a806c # load x3 with value 0x995a806c
sw x3, 0(x2) # store 0x995a806c in memory
flw f21, 0(x2) # load 0x995a806c from memory into f21
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f30, f10, f21, f22, dyn # perform operation
fmadd.s f30, f10, f21, f22, rdn # perform operation
fmadd.s f30, f10, f21, f22, rmm # perform operation
fmadd.s f30, f10, f21, f22, rne # perform operation
fmadd.s f30, f10, f21, f22, rtz # perform operation
fmadd.s f30, f10, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f10, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f10, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
la x2, scratch
li x3, 0xb9d4f203 # load x3 with value 0xb9d4f203
sw x3, 0(x2) # store 0xb9d4f203 in memory
flw f3, 0(x2) # load 0xb9d4f203 from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f28, f1, f3, f27, dyn # perform operation
fmadd.s f28, f1, f3, f27, rdn # perform operation
fmadd.s f28, f1, f3, f27, rmm # perform operation
fmadd.s f28, f1, f3, f27, rne # perform operation
fmadd.s f28, f1, f3, f27, rtz # perform operation
fmadd.s f28, f1, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
la x2, scratch
li x3, 0xfec230a2 # load x3 with value 0xfec230a2
sw x3, 0(x2) # store 0xfec230a2 in memory
flw f15, 0(x2) # load 0xfec230a2 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
fmadd.s f8, f19, f15, f2, dyn # perform operation
fmadd.s f8, f19, f15, f2, rdn # perform operation
fmadd.s f8, f19, f15, f2, rmm # perform operation
fmadd.s f8, f19, f15, f2, rne # perform operation
fmadd.s f8, f19, f15, f2, rtz # perform operation
fmadd.s f8, f19, f15, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f15, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f15, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x79401fcb # load x3 with value 0x79401fcb
sw x3, 0(x2) # store 0x79401fcb in memory
flw f20, 0(x2) # load 0x79401fcb from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmadd.s f27, f5, f20, f7, dyn # perform operation
fmadd.s f27, f5, f20, f7, rdn # perform operation
fmadd.s f27, f5, f20, f7, rmm # perform operation
fmadd.s f27, f5, f20, f7, rne # perform operation
fmadd.s f27, f5, f20, f7, rtz # perform operation
fmadd.s f27, f5, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f5, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f5, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
la x2, scratch
li x3, 0x082b3103 # load x3 with value 0x082b3103
sw x3, 0(x2) # store 0x082b3103 in memory
flw f3, 0(x2) # load 0x082b3103 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmadd.s f23, f22, f3, f10, dyn # perform operation
fmadd.s f23, f22, f3, f10, rdn # perform operation
fmadd.s f23, f22, f3, f10, rmm # perform operation
fmadd.s f23, f22, f3, f10, rne # perform operation
fmadd.s f23, f22, f3, f10, rtz # perform operation
fmadd.s f23, f22, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f3, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0x765f701c # load x3 with value 0x765f701c
sw x3, 0(x2) # store 0x765f701c in memory
flw f19, 0(x2) # load 0x765f701c from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
fmadd.s f2, f24, f19, f23, dyn # perform operation
fmadd.s f2, f24, f19, f23, rdn # perform operation
fmadd.s f2, f24, f19, f23, rmm # perform operation
fmadd.s f2, f24, f19, f23, rne # perform operation
fmadd.s f2, f24, f19, f23, rtz # perform operation
fmadd.s f2, f24, f19, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f24, f19, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f24, f19, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
la x2, scratch
li x3, 0xbd650b63 # load x3 with value 0xbd650b63
sw x3, 0(x2) # store 0xbd650b63 in memory
flw f2, 0(x2) # load 0xbd650b63 from memory into f2
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmadd.s f6, f11, f2, f9, dyn # perform operation
fmadd.s f6, f11, f2, f9, rdn # perform operation
fmadd.s f6, f11, f2, f9, rmm # perform operation
fmadd.s f6, f11, f2, f9, rne # perform operation
fmadd.s f6, f11, f2, f9, rtz # perform operation
fmadd.s f6, f11, f2, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f11, f2, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f11, f2, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0x2befdb75 # load x3 with value 0x2befdb75
sw x3, 0(x2) # store 0x2befdb75 in memory
flw f1, 0(x2) # load 0x2befdb75 from memory into f1
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmadd.s f23, f17, f1, f13, dyn # perform operation
fmadd.s f23, f17, f1, f13, rdn # perform operation
fmadd.s f23, f17, f1, f13, rmm # perform operation
fmadd.s f23, f17, f1, f13, rne # perform operation
fmadd.s f23, f17, f1, f13, rtz # perform operation
fmadd.s f23, f17, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f1, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
la x2, scratch
li x3, 0xd5aa8c6d # load x3 with value 0xd5aa8c6d
sw x3, 0(x2) # store 0xd5aa8c6d in memory
flw f10, 0(x2) # load 0xd5aa8c6d from memory into f10
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmadd.s f5, f24, f10, f26, dyn # perform operation
fmadd.s f5, f24, f10, f26, rdn # perform operation
fmadd.s f5, f24, f10, f26, rmm # perform operation
fmadd.s f5, f24, f10, f26, rne # perform operation
fmadd.s f5, f24, f10, f26, rtz # perform operation
fmadd.s f5, f24, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f24, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f24, f10, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x367682c7 # load x3 with value 0x367682c7
sw x3, 0(x2) # store 0x367682c7 in memory
flw f26, 0(x2) # load 0x367682c7 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
fmadd.s f8, f5, f26, f7, dyn # perform operation
fmadd.s f8, f5, f26, f7, rdn # perform operation
fmadd.s f8, f5, f26, f7, rmm # perform operation
fmadd.s f8, f5, f26, f7, rne # perform operation
fmadd.s f8, f5, f26, f7, rtz # perform operation
fmadd.s f8, f5, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
la x2, scratch
li x3, 0x6ca04e6a # load x3 with value 0x6ca04e6a
sw x3, 0(x2) # store 0x6ca04e6a in memory
flw f21, 0(x2) # load 0x6ca04e6a from memory into f21
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f3, f25, f21, f24, dyn # perform operation
fmadd.s f3, f25, f21, f24, rdn # perform operation
fmadd.s f3, f25, f21, f24, rmm # perform operation
fmadd.s f3, f25, f21, f24, rne # perform operation
fmadd.s f3, f25, f21, f24, rtz # perform operation
fmadd.s f3, f25, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f25, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f25, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f25, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f25, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f25, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
la x2, scratch
li x3, 0x7efd6233 # load x3 with value 0x7efd6233
sw x3, 0(x2) # store 0x7efd6233 in memory
flw f29, 0(x2) # load 0x7efd6233 from memory into f29
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmadd.s f21, f31, f29, f30, dyn # perform operation
fmadd.s f21, f31, f29, f30, rdn # perform operation
fmadd.s f21, f31, f29, f30, rmm # perform operation
fmadd.s f21, f31, f29, f30, rne # perform operation
fmadd.s f21, f31, f29, f30, rtz # perform operation
fmadd.s f21, f31, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f31, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f31, f29, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
la x2, scratch
li x3, 0x57b59a19 # load x3 with value 0x57b59a19
sw x3, 0(x2) # store 0x57b59a19 in memory
flw f8, 0(x2) # load 0x57b59a19 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f22, f5, f8, f18, dyn # perform operation
fmadd.s f22, f5, f8, f18, rdn # perform operation
fmadd.s f22, f5, f8, f18, rmm # perform operation
fmadd.s f22, f5, f8, f18, rne # perform operation
fmadd.s f22, f5, f8, f18, rtz # perform operation
fmadd.s f22, f5, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
la x2, scratch
li x3, 0x2a6496f4 # load x3 with value 0x2a6496f4
sw x3, 0(x2) # store 0x2a6496f4 in memory
flw f30, 0(x2) # load 0x2a6496f4 from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmadd.s f2, f8, f30, f10, dyn # perform operation
fmadd.s f2, f8, f30, f10, rdn # perform operation
fmadd.s f2, f8, f30, f10, rmm # perform operation
fmadd.s f2, f8, f30, f10, rne # perform operation
fmadd.s f2, f8, f30, f10, rtz # perform operation
fmadd.s f2, f8, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x4f224f0a # load x3 with value 0x4f224f0a
sw x3, 0(x2) # store 0x4f224f0a in memory
flw f30, 0(x2) # load 0x4f224f0a from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmadd.s f31, f10, f30, f8, dyn # perform operation
fmadd.s f31, f10, f30, f8, rdn # perform operation
fmadd.s f31, f10, f30, f8, rmm # perform operation
fmadd.s f31, f10, f30, f8, rne # perform operation
fmadd.s f31, f10, f30, f8, rtz # perform operation
fmadd.s f31, f10, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
la x2, scratch
li x3, 0x9cb73eea # load x3 with value 0x9cb73eea
sw x3, 0(x2) # store 0x9cb73eea in memory
flw f1, 0(x2) # load 0x9cb73eea from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmadd.s f23, f10, f1, f12, dyn # perform operation
fmadd.s f23, f10, f1, f12, rdn # perform operation
fmadd.s f23, f10, f1, f12, rmm # perform operation
fmadd.s f23, f10, f1, f12, rne # perform operation
fmadd.s f23, f10, f1, f12, rtz # perform operation
fmadd.s f23, f10, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xaa0f635c # load x3 with value 0xaa0f635c
sw x3, 0(x2) # store 0xaa0f635c in memory
flw f3, 0(x2) # load 0xaa0f635c from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fmadd.s f28, f17, f3, f7, dyn # perform operation
fmadd.s f28, f17, f3, f7, rdn # perform operation
fmadd.s f28, f17, f3, f7, rmm # perform operation
fmadd.s f28, f17, f3, f7, rne # perform operation
fmadd.s f28, f17, f3, f7, rtz # perform operation
fmadd.s f28, f17, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f3, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
la x2, scratch
li x3, 0xe5e81b22 # load x3 with value 0xe5e81b22
sw x3, 0(x2) # store 0xe5e81b22 in memory
flw f11, 0(x2) # load 0xe5e81b22 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fmadd.s f30, f17, f11, f12, dyn # perform operation
fmadd.s f30, f17, f11, f12, rdn # perform operation
fmadd.s f30, f17, f11, f12, rmm # perform operation
fmadd.s f30, f17, f11, f12, rne # perform operation
fmadd.s f30, f17, f11, f12, rtz # perform operation
fmadd.s f30, f17, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
la x2, scratch
li x3, 0x9d8a5e2a # load x3 with value 0x9d8a5e2a
sw x3, 0(x2) # store 0x9d8a5e2a in memory
flw f5, 0(x2) # load 0x9d8a5e2a from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmadd.s f27, f20, f5, f11, dyn # perform operation
fmadd.s f27, f20, f5, f11, rdn # perform operation
fmadd.s f27, f20, f5, f11, rmm # perform operation
fmadd.s f27, f20, f5, f11, rne # perform operation
fmadd.s f27, f20, f5, f11, rtz # perform operation
fmadd.s f27, f20, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x18289391 # load x3 with value 0x18289391
sw x3, 0(x2) # store 0x18289391 in memory
flw f11, 0(x2) # load 0x18289391 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmadd.s f27, f14, f11, f9, dyn # perform operation
fmadd.s f27, f14, f11, f9, rdn # perform operation
fmadd.s f27, f14, f11, f9, rmm # perform operation
fmadd.s f27, f14, f11, f9, rne # perform operation
fmadd.s f27, f14, f11, f9, rtz # perform operation
fmadd.s f27, f14, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x37655731 # load x3 with value 0x37655731
sw x3, 0(x2) # store 0x37655731 in memory
flw f26, 0(x2) # load 0x37655731 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f27, f17, f26, f7, dyn # perform operation
fmadd.s f27, f17, f26, f7, rdn # perform operation
fmadd.s f27, f17, f26, f7, rmm # perform operation
fmadd.s f27, f17, f26, f7, rne # perform operation
fmadd.s f27, f17, f26, f7, rtz # perform operation
fmadd.s f27, f17, f26, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f26, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f26, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x94a67364 # load x3 with value 0x94a67364
sw x3, 0(x2) # store 0x94a67364 in memory
flw f13, 0(x2) # load 0x94a67364 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f12, f30, f13, f20, dyn # perform operation
fmadd.s f12, f30, f13, f20, rdn # perform operation
fmadd.s f12, f30, f13, f20, rmm # perform operation
fmadd.s f12, f30, f13, f20, rne # perform operation
fmadd.s f12, f30, f13, f20, rtz # perform operation
fmadd.s f12, f30, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f30, f13, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x4edf0b34 # load x3 with value 0x4edf0b34
sw x3, 0(x2) # store 0x4edf0b34 in memory
flw f26, 0(x2) # load 0x4edf0b34 from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmadd.s f20, f5, f26, f18, dyn # perform operation
fmadd.s f20, f5, f26, f18, rdn # perform operation
fmadd.s f20, f5, f26, f18, rmm # perform operation
fmadd.s f20, f5, f26, f18, rne # perform operation
fmadd.s f20, f5, f26, f18, rtz # perform operation
fmadd.s f20, f5, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f5, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f5, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f11, 0(x2) # load 0xbf800000 from memory into f11
la x2, scratch
li x3, 0x99e54225 # load x3 with value 0x99e54225
sw x3, 0(x2) # store 0x99e54225 in memory
flw f30, 0(x2) # load 0x99e54225 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
fmadd.s f20, f11, f30, f28, dyn # perform operation
fmadd.s f20, f11, f30, f28, rdn # perform operation
fmadd.s f20, f11, f30, f28, rmm # perform operation
fmadd.s f20, f11, f30, f28, rne # perform operation
fmadd.s f20, f11, f30, f28, rtz # perform operation
fmadd.s f20, f11, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0xaa35a0a4 # load x3 with value 0xaa35a0a4
sw x3, 0(x2) # store 0xaa35a0a4 in memory
flw f28, 0(x2) # load 0xaa35a0a4 from memory into f28
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmadd.s f1, f13, f28, f30, dyn # perform operation
fmadd.s f1, f13, f28, f30, rdn # perform operation
fmadd.s f1, f13, f28, f30, rmm # perform operation
fmadd.s f1, f13, f28, f30, rne # perform operation
fmadd.s f1, f13, f28, f30, rtz # perform operation
fmadd.s f1, f13, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f13, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f13, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f13, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f13, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f13, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
la x2, scratch
li x3, 0x59aba424 # load x3 with value 0x59aba424
sw x3, 0(x2) # store 0x59aba424 in memory
flw f6, 0(x2) # load 0x59aba424 from memory into f6
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f14, f5, f6, f23, dyn # perform operation
fmadd.s f14, f5, f6, f23, rdn # perform operation
fmadd.s f14, f5, f6, f23, rmm # perform operation
fmadd.s f14, f5, f6, f23, rne # perform operation
fmadd.s f14, f5, f6, f23, rtz # perform operation
fmadd.s f14, f5, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0xf4e1b811 # load x3 with value 0xf4e1b811
sw x3, 0(x2) # store 0xf4e1b811 in memory
flw f5, 0(x2) # load 0xf4e1b811 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmadd.s f6, f14, f5, f13, dyn # perform operation
fmadd.s f6, f14, f5, f13, rdn # perform operation
fmadd.s f6, f14, f5, f13, rmm # perform operation
fmadd.s f6, f14, f5, f13, rne # perform operation
fmadd.s f6, f14, f5, f13, rtz # perform operation
fmadd.s f6, f14, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f14, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f14, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
la x2, scratch
li x3, 0x0c4a5410 # load x3 with value 0x0c4a5410
sw x3, 0(x2) # store 0x0c4a5410 in memory
flw f25, 0(x2) # load 0x0c4a5410 from memory into f25
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmadd.s f6, f12, f25, f29, dyn # perform operation
fmadd.s f6, f12, f25, f29, rdn # perform operation
fmadd.s f6, f12, f25, f29, rmm # perform operation
fmadd.s f6, f12, f25, f29, rne # perform operation
fmadd.s f6, f12, f25, f29, rtz # perform operation
fmadd.s f6, f12, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
la x2, scratch
li x3, 0x105525c2 # load x3 with value 0x105525c2
sw x3, 0(x2) # store 0x105525c2 in memory
flw f28, 0(x2) # load 0x105525c2 from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fmadd.s f18, f22, f28, f27, dyn # perform operation
fmadd.s f18, f22, f28, f27, rdn # perform operation
fmadd.s f18, f22, f28, f27, rmm # perform operation
fmadd.s f18, f22, f28, f27, rne # perform operation
fmadd.s f18, f22, f28, f27, rtz # perform operation
fmadd.s f18, f22, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f22, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f22, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f22, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f22, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f22, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
la x2, scratch
li x3, 0x40d16ca5 # load x3 with value 0x40d16ca5
sw x3, 0(x2) # store 0x40d16ca5 in memory
flw f18, 0(x2) # load 0x40d16ca5 from memory into f18
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f30, f28, f18, f14, dyn # perform operation
fmadd.s f30, f28, f18, f14, rdn # perform operation
fmadd.s f30, f28, f18, f14, rmm # perform operation
fmadd.s f30, f28, f18, f14, rne # perform operation
fmadd.s f30, f28, f18, f14, rtz # perform operation
fmadd.s f30, f28, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
la x2, scratch
li x3, 0x283cc860 # load x3 with value 0x283cc860
sw x3, 0(x2) # store 0x283cc860 in memory
flw f9, 0(x2) # load 0x283cc860 from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
fmadd.s f30, f14, f9, f6, dyn # perform operation
fmadd.s f30, f14, f9, f6, rdn # perform operation
fmadd.s f30, f14, f9, f6, rmm # perform operation
fmadd.s f30, f14, f9, f6, rne # perform operation
fmadd.s f30, f14, f9, f6, rtz # perform operation
fmadd.s f30, f14, f9, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f14, f9, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f14, f9, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x35cf4052 # load x3 with value 0x35cf4052
sw x3, 0(x2) # store 0x35cf4052 in memory
flw f22, 0(x2) # load 0x35cf4052 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
fmadd.s f19, f17, f22, f16, dyn # perform operation
fmadd.s f19, f17, f22, f16, rdn # perform operation
fmadd.s f19, f17, f22, f16, rmm # perform operation
fmadd.s f19, f17, f22, f16, rne # perform operation
fmadd.s f19, f17, f22, f16, rtz # perform operation
fmadd.s f19, f17, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f22, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x6c7cf4bd # load x3 with value 0x6c7cf4bd
sw x3, 0(x2) # store 0x6c7cf4bd in memory
flw f28, 0(x2) # load 0x6c7cf4bd from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmadd.s f13, f10, f28, f3, dyn # perform operation
fmadd.s f13, f10, f28, f3, rdn # perform operation
fmadd.s f13, f10, f28, f3, rmm # perform operation
fmadd.s f13, f10, f28, f3, rne # perform operation
fmadd.s f13, f10, f28, f3, rtz # perform operation
fmadd.s f13, f10, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f28, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x405d0967 # load x3 with value 0x405d0967
sw x3, 0(x2) # store 0x405d0967 in memory
flw f3, 0(x2) # load 0x405d0967 from memory into f3
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
fmadd.s f9, f17, f3, f27, dyn # perform operation
fmadd.s f9, f17, f3, f27, rdn # perform operation
fmadd.s f9, f17, f3, f27, rmm # perform operation
fmadd.s f9, f17, f3, f27, rne # perform operation
fmadd.s f9, f17, f3, f27, rtz # perform operation
fmadd.s f9, f17, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f17, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f17, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
la x2, scratch
li x3, 0x74e1bfc0 # load x3 with value 0x74e1bfc0
sw x3, 0(x2) # store 0x74e1bfc0 in memory
flw f26, 0(x2) # load 0x74e1bfc0 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f2, f30, f26, f27, dyn # perform operation
fmadd.s f2, f30, f26, f27, rdn # perform operation
fmadd.s f2, f30, f26, f27, rmm # perform operation
fmadd.s f2, f30, f26, f27, rne # perform operation
fmadd.s f2, f30, f26, f27, rtz # perform operation
fmadd.s f2, f30, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
la x2, scratch
li x3, 0x4243ca9e # load x3 with value 0x4243ca9e
sw x3, 0(x2) # store 0x4243ca9e in memory
flw f19, 0(x2) # load 0x4243ca9e from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmadd.s f30, f26, f19, f12, dyn # perform operation
fmadd.s f30, f26, f19, f12, rdn # perform operation
fmadd.s f30, f26, f19, f12, rmm # perform operation
fmadd.s f30, f26, f19, f12, rne # perform operation
fmadd.s f30, f26, f19, f12, rtz # perform operation
fmadd.s f30, f26, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0x88ba8b58 # load x3 with value 0x88ba8b58
sw x3, 0(x2) # store 0x88ba8b58 in memory
flw f11, 0(x2) # load 0x88ba8b58 from memory into f11
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fmadd.s f29, f10, f11, f3, dyn # perform operation
fmadd.s f29, f10, f11, f3, rdn # perform operation
fmadd.s f29, f10, f11, f3, rmm # perform operation
fmadd.s f29, f10, f11, f3, rne # perform operation
fmadd.s f29, f10, f11, f3, rtz # perform operation
fmadd.s f29, f10, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
la x2, scratch
li x3, 0xe0d03f6e # load x3 with value 0xe0d03f6e
sw x3, 0(x2) # store 0xe0d03f6e in memory
flw f17, 0(x2) # load 0xe0d03f6e from memory into f17
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f15, f13, f17, f28, dyn # perform operation
fmadd.s f15, f13, f17, f28, rdn # perform operation
fmadd.s f15, f13, f17, f28, rmm # perform operation
fmadd.s f15, f13, f17, f28, rne # perform operation
fmadd.s f15, f13, f17, f28, rtz # perform operation
fmadd.s f15, f13, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f13, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f13, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xeabfceab # load x3 with value 0xeabfceab
sw x3, 0(x2) # store 0xeabfceab in memory
flw f19, 0(x2) # load 0xeabfceab from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmadd.s f9, f2, f19, f21, dyn # perform operation
fmadd.s f9, f2, f19, f21, rdn # perform operation
fmadd.s f9, f2, f19, f21, rmm # perform operation
fmadd.s f9, f2, f19, f21, rne # perform operation
fmadd.s f9, f2, f19, f21, rtz # perform operation
fmadd.s f9, f2, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f19, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
la x2, scratch
li x3, 0xdd59afe5 # load x3 with value 0xdd59afe5
sw x3, 0(x2) # store 0xdd59afe5 in memory
flw f26, 0(x2) # load 0xdd59afe5 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmadd.s f25, f10, f26, f18, dyn # perform operation
fmadd.s f25, f10, f26, f18, rdn # perform operation
fmadd.s f25, f10, f26, f18, rmm # perform operation
fmadd.s f25, f10, f26, f18, rne # perform operation
fmadd.s f25, f10, f26, f18, rtz # perform operation
fmadd.s f25, f10, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f26, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
la x2, scratch
li x3, 0x96f12ef1 # load x3 with value 0x96f12ef1
sw x3, 0(x2) # store 0x96f12ef1 in memory
flw f8, 0(x2) # load 0x96f12ef1 from memory into f8
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f21, f23, f8, f12, dyn # perform operation
fmadd.s f21, f23, f8, f12, rdn # perform operation
fmadd.s f21, f23, f8, f12, rmm # perform operation
fmadd.s f21, f23, f8, f12, rne # perform operation
fmadd.s f21, f23, f8, f12, rtz # perform operation
fmadd.s f21, f23, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f23, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f23, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
la x2, scratch
li x3, 0x3edc90ca # load x3 with value 0x3edc90ca
sw x3, 0(x2) # store 0x3edc90ca in memory
flw f13, 0(x2) # load 0x3edc90ca from memory into f13
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
fmadd.s f9, f29, f13, f21, dyn # perform operation
fmadd.s f9, f29, f13, f21, rdn # perform operation
fmadd.s f9, f29, f13, f21, rmm # perform operation
fmadd.s f9, f29, f13, f21, rne # perform operation
fmadd.s f9, f29, f13, f21, rtz # perform operation
fmadd.s f9, f29, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
la x2, scratch
li x3, 0xeb2618f1 # load x3 with value 0xeb2618f1
sw x3, 0(x2) # store 0xeb2618f1 in memory
flw f12, 0(x2) # load 0xeb2618f1 from memory into f12
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fmadd.s f21, f6, f12, f13, dyn # perform operation
fmadd.s f21, f6, f12, f13, rdn # perform operation
fmadd.s f21, f6, f12, f13, rmm # perform operation
fmadd.s f21, f6, f12, f13, rne # perform operation
fmadd.s f21, f6, f12, f13, rtz # perform operation
fmadd.s f21, f6, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f6, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f6, f12, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
la x2, scratch
li x3, 0xbda6a52e # load x3 with value 0xbda6a52e
sw x3, 0(x2) # store 0xbda6a52e in memory
flw f3, 0(x2) # load 0xbda6a52e from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmadd.s f2, f18, f3, f12, dyn # perform operation
fmadd.s f2, f18, f3, f12, rdn # perform operation
fmadd.s f2, f18, f3, f12, rmm # perform operation
fmadd.s f2, f18, f3, f12, rne # perform operation
fmadd.s f2, f18, f3, f12, rtz # perform operation
fmadd.s f2, f18, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f18, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f18, f3, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
la x2, scratch
li x3, 0xca612d4f # load x3 with value 0xca612d4f
sw x3, 0(x2) # store 0xca612d4f in memory
flw f28, 0(x2) # load 0xca612d4f from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmadd.s f20, f2, f28, f9, dyn # perform operation
fmadd.s f20, f2, f28, f9, rdn # perform operation
fmadd.s f20, f2, f28, f9, rmm # perform operation
fmadd.s f20, f2, f28, f9, rne # perform operation
fmadd.s f20, f2, f28, f9, rtz # perform operation
fmadd.s f20, f2, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f2, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f2, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f2, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f2, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f2, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
la x2, scratch
li x3, 0x3cc2040b # load x3 with value 0x3cc2040b
sw x3, 0(x2) # store 0x3cc2040b in memory
flw f13, 0(x2) # load 0x3cc2040b from memory into f13
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmadd.s f21, f7, f13, f5, dyn # perform operation
fmadd.s f21, f7, f13, f5, rdn # perform operation
fmadd.s f21, f7, f13, f5, rmm # perform operation
fmadd.s f21, f7, f13, f5, rne # perform operation
fmadd.s f21, f7, f13, f5, rtz # perform operation
fmadd.s f21, f7, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f13, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
la x2, scratch
li x3, 0x723ecc2c # load x3 with value 0x723ecc2c
sw x3, 0(x2) # store 0x723ecc2c in memory
flw f5, 0(x2) # load 0x723ecc2c from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f15, f17, f5, f13, dyn # perform operation
fmadd.s f15, f17, f5, f13, rdn # perform operation
fmadd.s f15, f17, f5, f13, rmm # perform operation
fmadd.s f15, f17, f5, f13, rne # perform operation
fmadd.s f15, f17, f5, f13, rtz # perform operation
fmadd.s f15, f17, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
la x2, scratch
li x3, 0xbf0e601b # load x3 with value 0xbf0e601b
sw x3, 0(x2) # store 0xbf0e601b in memory
flw f3, 0(x2) # load 0xbf0e601b from memory into f3
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmadd.s f31, f9, f3, f5, dyn # perform operation
fmadd.s f31, f9, f3, f5, rdn # perform operation
fmadd.s f31, f9, f3, f5, rmm # perform operation
fmadd.s f31, f9, f3, f5, rne # perform operation
fmadd.s f31, f9, f3, f5, rtz # perform operation
fmadd.s f31, f9, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f3, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x9b1b815e # load x3 with value 0x9b1b815e
sw x3, 0(x2) # store 0x9b1b815e in memory
flw f28, 0(x2) # load 0x9b1b815e from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f17, f19, f28, f7, dyn # perform operation
fmadd.s f17, f19, f28, f7, rdn # perform operation
fmadd.s f17, f19, f28, f7, rmm # perform operation
fmadd.s f17, f19, f28, f7, rne # perform operation
fmadd.s f17, f19, f28, f7, rtz # perform operation
fmadd.s f17, f19, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f19, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f19, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f19, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f19, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f19, f28, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
la x2, scratch
li x3, 0xa468b41d # load x3 with value 0xa468b41d
sw x3, 0(x2) # store 0xa468b41d in memory
flw f6, 0(x2) # load 0xa468b41d from memory into f6
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
fmadd.s f20, f13, f6, f24, dyn # perform operation
fmadd.s f20, f13, f6, f24, rdn # perform operation
fmadd.s f20, f13, f6, f24, rmm # perform operation
fmadd.s f20, f13, f6, f24, rne # perform operation
fmadd.s f20, f13, f6, f24, rtz # perform operation
fmadd.s f20, f13, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f13, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f13, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x0f14cc09 # load x3 with value 0x0f14cc09
sw x3, 0(x2) # store 0x0f14cc09 in memory
flw f1, 0(x2) # load 0x0f14cc09 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fmadd.s f15, f11, f1, f21, dyn # perform operation
fmadd.s f15, f11, f1, f21, rdn # perform operation
fmadd.s f15, f11, f1, f21, rmm # perform operation
fmadd.s f15, f11, f1, f21, rne # perform operation
fmadd.s f15, f11, f1, f21, rtz # perform operation
fmadd.s f15, f11, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x6c67e0ee # load x3 with value 0x6c67e0ee
sw x3, 0(x2) # store 0x6c67e0ee in memory
flw f18, 0(x2) # load 0x6c67e0ee from memory into f18
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmadd.s f15, f19, f18, f30, dyn # perform operation
fmadd.s f15, f19, f18, f30, rdn # perform operation
fmadd.s f15, f19, f18, f30, rmm # perform operation
fmadd.s f15, f19, f18, f30, rne # perform operation
fmadd.s f15, f19, f18, f30, rtz # perform operation
fmadd.s f15, f19, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
la x2, scratch
li x3, 0x68aab230 # load x3 with value 0x68aab230
sw x3, 0(x2) # store 0x68aab230 in memory
flw f12, 0(x2) # load 0x68aab230 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmadd.s f1, f29, f12, f5, dyn # perform operation
fmadd.s f1, f29, f12, f5, rdn # perform operation
fmadd.s f1, f29, f12, f5, rmm # perform operation
fmadd.s f1, f29, f12, f5, rne # perform operation
fmadd.s f1, f29, f12, f5, rtz # perform operation
fmadd.s f1, f29, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f29, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f29, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f29, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f29, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f29, f12, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
la x2, scratch
li x3, 0x91fd12bf # load x3 with value 0x91fd12bf
sw x3, 0(x2) # store 0x91fd12bf in memory
flw f13, 0(x2) # load 0x91fd12bf from memory into f13
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmadd.s f7, f3, f13, f10, dyn # perform operation
fmadd.s f7, f3, f13, f10, rdn # perform operation
fmadd.s f7, f3, f13, f10, rmm # perform operation
fmadd.s f7, f3, f13, f10, rne # perform operation
fmadd.s f7, f3, f13, f10, rtz # perform operation
fmadd.s f7, f3, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x2b8fdd27 # load x3 with value 0x2b8fdd27
sw x3, 0(x2) # store 0x2b8fdd27 in memory
flw f7, 0(x2) # load 0x2b8fdd27 from memory into f7
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f3, f6, f7, f14, dyn # perform operation
fmadd.s f3, f6, f7, f14, rdn # perform operation
fmadd.s f3, f6, f7, f14, rmm # perform operation
fmadd.s f3, f6, f7, f14, rne # perform operation
fmadd.s f3, f6, f7, f14, rtz # perform operation
fmadd.s f3, f6, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f7, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
la x2, scratch
li x3, 0x89af3b4e # load x3 with value 0x89af3b4e
sw x3, 0(x2) # store 0x89af3b4e in memory
flw f6, 0(x2) # load 0x89af3b4e from memory into f6
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
fmadd.s f21, f2, f6, f14, dyn # perform operation
fmadd.s f21, f2, f6, f14, rdn # perform operation
fmadd.s f21, f2, f6, f14, rmm # perform operation
fmadd.s f21, f2, f6, f14, rne # perform operation
fmadd.s f21, f2, f6, f14, rtz # perform operation
fmadd.s f21, f2, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f6, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0xced30e9a # load x3 with value 0xced30e9a
sw x3, 0(x2) # store 0xced30e9a in memory
flw f2, 0(x2) # load 0xced30e9a from memory into f2
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f8, f26, f2, f29, dyn # perform operation
fmadd.s f8, f26, f2, f29, rdn # perform operation
fmadd.s f8, f26, f2, f29, rmm # perform operation
fmadd.s f8, f26, f2, f29, rne # perform operation
fmadd.s f8, f26, f2, f29, rtz # perform operation
fmadd.s f8, f26, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
la x2, scratch
li x3, 0x5f8d04c5 # load x3 with value 0x5f8d04c5
sw x3, 0(x2) # store 0x5f8d04c5 in memory
flw f1, 0(x2) # load 0x5f8d04c5 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fmadd.s f28, f31, f1, f18, dyn # perform operation
fmadd.s f28, f31, f1, f18, rdn # perform operation
fmadd.s f28, f31, f1, f18, rmm # perform operation
fmadd.s f28, f31, f1, f18, rne # perform operation
fmadd.s f28, f31, f1, f18, rtz # perform operation
fmadd.s f28, f31, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0x3337d51e # load x3 with value 0x3337d51e
sw x3, 0(x2) # store 0x3337d51e in memory
flw f9, 0(x2) # load 0x3337d51e from memory into f9
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmadd.s f2, f19, f9, f10, dyn # perform operation
fmadd.s f2, f19, f9, f10, rdn # perform operation
fmadd.s f2, f19, f9, f10, rmm # perform operation
fmadd.s f2, f19, f9, f10, rne # perform operation
fmadd.s f2, f19, f9, f10, rtz # perform operation
fmadd.s f2, f19, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f19, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f19, f9, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
la x2, scratch
li x3, 0xb1b5d327 # load x3 with value 0xb1b5d327
sw x3, 0(x2) # store 0xb1b5d327 in memory
flw f14, 0(x2) # load 0xb1b5d327 from memory into f14
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f2, f1, f14, f20, dyn # perform operation
fmadd.s f2, f1, f14, f20, rdn # perform operation
fmadd.s f2, f1, f14, f20, rmm # perform operation
fmadd.s f2, f1, f14, f20, rne # perform operation
fmadd.s f2, f1, f14, f20, rtz # perform operation
fmadd.s f2, f1, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f14, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
la x2, scratch
li x3, 0xa84eeb4f # load x3 with value 0xa84eeb4f
sw x3, 0(x2) # store 0xa84eeb4f in memory
flw f28, 0(x2) # load 0xa84eeb4f from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmadd.s f31, f19, f28, f9, dyn # perform operation
fmadd.s f31, f19, f28, f9, rdn # perform operation
fmadd.s f31, f19, f28, f9, rmm # perform operation
fmadd.s f31, f19, f28, f9, rne # perform operation
fmadd.s f31, f19, f28, f9, rtz # perform operation
fmadd.s f31, f19, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xaa76f9f5 # load x3 with value 0xaa76f9f5
sw x3, 0(x2) # store 0xaa76f9f5 in memory
flw f9, 0(x2) # load 0xaa76f9f5 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
fmadd.s f25, f5, f9, f14, dyn # perform operation
fmadd.s f25, f5, f9, f14, rdn # perform operation
fmadd.s f25, f5, f9, f14, rmm # perform operation
fmadd.s f25, f5, f9, f14, rne # perform operation
fmadd.s f25, f5, f9, f14, rtz # perform operation
fmadd.s f25, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0xfc9eef8c # load x3 with value 0xfc9eef8c
sw x3, 0(x2) # store 0xfc9eef8c in memory
flw f24, 0(x2) # load 0xfc9eef8c from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fmadd.s f22, f14, f24, f20, dyn # perform operation
fmadd.s f22, f14, f24, f20, rdn # perform operation
fmadd.s f22, f14, f24, f20, rmm # perform operation
fmadd.s f22, f14, f24, f20, rne # perform operation
fmadd.s f22, f14, f24, f20, rtz # perform operation
fmadd.s f22, f14, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f14, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f14, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
la x2, scratch
li x3, 0x5a07da3b # load x3 with value 0x5a07da3b
sw x3, 0(x2) # store 0x5a07da3b in memory
flw f19, 0(x2) # load 0x5a07da3b from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fmadd.s f9, f6, f19, f24, dyn # perform operation
fmadd.s f9, f6, f19, f24, rdn # perform operation
fmadd.s f9, f6, f19, f24, rmm # perform operation
fmadd.s f9, f6, f19, f24, rne # perform operation
fmadd.s f9, f6, f19, f24, rtz # perform operation
fmadd.s f9, f6, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x9b8dac3f # load x3 with value 0x9b8dac3f
sw x3, 0(x2) # store 0x9b8dac3f in memory
flw f20, 0(x2) # load 0x9b8dac3f from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmadd.s f9, f28, f20, f8, dyn # perform operation
fmadd.s f9, f28, f20, f8, rdn # perform operation
fmadd.s f9, f28, f20, f8, rmm # perform operation
fmadd.s f9, f28, f20, f8, rne # perform operation
fmadd.s f9, f28, f20, f8, rtz # perform operation
fmadd.s f9, f28, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
la x2, scratch
li x3, 0x046c9c0c # load x3 with value 0x046c9c0c
sw x3, 0(x2) # store 0x046c9c0c in memory
flw f11, 0(x2) # load 0x046c9c0c from memory into f11
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f16, f18, f11, f3, dyn # perform operation
fmadd.s f16, f18, f11, f3, rdn # perform operation
fmadd.s f16, f18, f11, f3, rmm # perform operation
fmadd.s f16, f18, f11, f3, rne # perform operation
fmadd.s f16, f18, f11, f3, rtz # perform operation
fmadd.s f16, f18, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
la x2, scratch
li x3, 0x9e8119d2 # load x3 with value 0x9e8119d2
sw x3, 0(x2) # store 0x9e8119d2 in memory
flw f30, 0(x2) # load 0x9e8119d2 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmadd.s f29, f14, f30, f28, dyn # perform operation
fmadd.s f29, f14, f30, f28, rdn # perform operation
fmadd.s f29, f14, f30, f28, rmm # perform operation
fmadd.s f29, f14, f30, f28, rne # perform operation
fmadd.s f29, f14, f30, f28, rtz # perform operation
fmadd.s f29, f14, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f30, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
la x2, scratch
li x3, 0x11034be3 # load x3 with value 0x11034be3
sw x3, 0(x2) # store 0x11034be3 in memory
flw f16, 0(x2) # load 0x11034be3 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
fmadd.s f30, f27, f16, f12, dyn # perform operation
fmadd.s f30, f27, f16, f12, rdn # perform operation
fmadd.s f30, f27, f16, f12, rmm # perform operation
fmadd.s f30, f27, f16, f12, rne # perform operation
fmadd.s f30, f27, f16, f12, rtz # perform operation
fmadd.s f30, f27, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f16, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
la x2, scratch
li x3, 0x2f9a6204 # load x3 with value 0x2f9a6204
sw x3, 0(x2) # store 0x2f9a6204 in memory
flw f19, 0(x2) # load 0x2f9a6204 from memory into f19
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
fmadd.s f14, f28, f19, f1, dyn # perform operation
fmadd.s f14, f28, f19, f1, rdn # perform operation
fmadd.s f14, f28, f19, f1, rmm # perform operation
fmadd.s f14, f28, f19, f1, rne # perform operation
fmadd.s f14, f28, f19, f1, rtz # perform operation
fmadd.s f14, f28, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
la x2, scratch
li x3, 0x7daec1bc # load x3 with value 0x7daec1bc
sw x3, 0(x2) # store 0x7daec1bc in memory
flw f14, 0(x2) # load 0x7daec1bc from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
fmadd.s f9, f11, f14, f3, dyn # perform operation
fmadd.s f9, f11, f14, f3, rdn # perform operation
fmadd.s f9, f11, f14, f3, rmm # perform operation
fmadd.s f9, f11, f14, f3, rne # perform operation
fmadd.s f9, f11, f14, f3, rtz # perform operation
fmadd.s f9, f11, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
la x2, scratch
li x3, 0x2abe1a7c # load x3 with value 0x2abe1a7c
sw x3, 0(x2) # store 0x2abe1a7c in memory
flw f13, 0(x2) # load 0x2abe1a7c from memory into f13
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
fmadd.s f28, f26, f13, f8, dyn # perform operation
fmadd.s f28, f26, f13, f8, rdn # perform operation
fmadd.s f28, f26, f13, f8, rmm # perform operation
fmadd.s f28, f26, f13, f8, rne # perform operation
fmadd.s f28, f26, f13, f8, rtz # perform operation
fmadd.s f28, f26, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f26, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f26, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
la x2, scratch
li x3, 0x2ef981ac # load x3 with value 0x2ef981ac
sw x3, 0(x2) # store 0x2ef981ac in memory
flw f6, 0(x2) # load 0x2ef981ac from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
fmadd.s f9, f24, f6, f23, dyn # perform operation
fmadd.s f9, f24, f6, f23, rdn # perform operation
fmadd.s f9, f24, f6, f23, rmm # perform operation
fmadd.s f9, f24, f6, f23, rne # perform operation
fmadd.s f9, f24, f6, f23, rtz # perform operation
fmadd.s f9, f24, f6, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f6, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f6, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
la x2, scratch
li x3, 0x346afd4c # load x3 with value 0x346afd4c
sw x3, 0(x2) # store 0x346afd4c in memory
flw f13, 0(x2) # load 0x346afd4c from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f27, 0(x2) # load 0xffbfffff from memory into f27
fmadd.s f11, f23, f13, f27, dyn # perform operation
fmadd.s f11, f23, f13, f27, rdn # perform operation
fmadd.s f11, f23, f13, f27, rmm # perform operation
fmadd.s f11, f23, f13, f27, rne # perform operation
fmadd.s f11, f23, f13, f27, rtz # perform operation
fmadd.s f11, f23, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
la x2, scratch
li x3, 0xf947b346 # load x3 with value 0xf947b346
sw x3, 0(x2) # store 0xf947b346 in memory
flw f3, 0(x2) # load 0xf947b346 from memory into f3
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f14, f30, f3, f21, dyn # perform operation
fmadd.s f14, f30, f3, f21, rdn # perform operation
fmadd.s f14, f30, f3, f21, rmm # perform operation
fmadd.s f14, f30, f3, f21, rne # perform operation
fmadd.s f14, f30, f3, f21, rtz # perform operation
fmadd.s f14, f30, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f30, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f30, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
la x2, scratch
li x3, 0xc960c399 # load x3 with value 0xc960c399
sw x3, 0(x2) # store 0xc960c399 in memory
flw f1, 0(x2) # load 0xc960c399 from memory into f1
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmadd.s f26, f5, f1, f29, dyn # perform operation
fmadd.s f26, f5, f1, f29, rdn # perform operation
fmadd.s f26, f5, f1, f29, rmm # perform operation
fmadd.s f26, f5, f1, f29, rne # perform operation
fmadd.s f26, f5, f1, f29, rtz # perform operation
fmadd.s f26, f5, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f1, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x65210986 # load x3 with value 0x65210986
sw x3, 0(x2) # store 0x65210986 in memory
flw f6, 0(x2) # load 0x65210986 from memory into f6
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
fmadd.s f8, f13, f6, f26, dyn # perform operation
fmadd.s f8, f13, f6, f26, rdn # perform operation
fmadd.s f8, f13, f6, f26, rmm # perform operation
fmadd.s f8, f13, f6, f26, rne # perform operation
fmadd.s f8, f13, f6, f26, rtz # perform operation
fmadd.s f8, f13, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f6, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x3f5f7589 # load x3 with value 0x3f5f7589
sw x3, 0(x2) # store 0x3f5f7589 in memory
flw f7, 0(x2) # load 0x3f5f7589 from memory into f7
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f18, f19, f7, f23, dyn # perform operation
fmadd.s f18, f19, f7, f23, rdn # perform operation
fmadd.s f18, f19, f7, f23, rmm # perform operation
fmadd.s f18, f19, f7, f23, rne # perform operation
fmadd.s f18, f19, f7, f23, rtz # perform operation
fmadd.s f18, f19, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f7, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7166e44f # load x3 with value 0x7166e44f
sw x3, 0(x2) # store 0x7166e44f in memory
flw f28, 0(x2) # load 0x7166e44f from memory into f28
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmadd.s f18, f9, f28, f19, dyn # perform operation
fmadd.s f18, f9, f28, f19, rdn # perform operation
fmadd.s f18, f9, f28, f19, rmm # perform operation
fmadd.s f18, f9, f28, f19, rne # perform operation
fmadd.s f18, f9, f28, f19, rtz # perform operation
fmadd.s f18, f9, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f9, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f9, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f9, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f9, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f9, f28, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xa95e0589 # load x3 with value 0xa95e0589
sw x3, 0(x2) # store 0xa95e0589 in memory
flw f21, 0(x2) # load 0xa95e0589 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
fmadd.s f30, f11, f21, f2, dyn # perform operation
fmadd.s f30, f11, f21, f2, rdn # perform operation
fmadd.s f30, f11, f21, f2, rmm # perform operation
fmadd.s f30, f11, f21, f2, rne # perform operation
fmadd.s f30, f11, f21, f2, rtz # perform operation
fmadd.s f30, f11, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x3e717a67 # load x3 with value 0x3e717a67
sw x3, 0(x2) # store 0x3e717a67 in memory
flw f11, 0(x2) # load 0x3e717a67 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f25, f19, f11, f15, dyn # perform operation
fmadd.s f25, f19, f11, f15, rdn # perform operation
fmadd.s f25, f19, f11, f15, rmm # perform operation
fmadd.s f25, f19, f11, f15, rne # perform operation
fmadd.s f25, f19, f11, f15, rtz # perform operation
fmadd.s f25, f19, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f19, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f19, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
la x2, scratch
li x3, 0x4ee82a72 # load x3 with value 0x4ee82a72
sw x3, 0(x2) # store 0x4ee82a72 in memory
flw f1, 0(x2) # load 0x4ee82a72 from memory into f1
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f24, f20, f1, f21, dyn # perform operation
fmadd.s f24, f20, f1, f21, rdn # perform operation
fmadd.s f24, f20, f1, f21, rmm # perform operation
fmadd.s f24, f20, f1, f21, rne # perform operation
fmadd.s f24, f20, f1, f21, rtz # perform operation
fmadd.s f24, f20, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
la x2, scratch
li x3, 0x9f33bc60 # load x3 with value 0x9f33bc60
sw x3, 0(x2) # store 0x9f33bc60 in memory
flw f23, 0(x2) # load 0x9f33bc60 from memory into f23
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmadd.s f9, f13, f23, f2, dyn # perform operation
fmadd.s f9, f13, f23, f2, rdn # perform operation
fmadd.s f9, f13, f23, f2, rmm # perform operation
fmadd.s f9, f13, f23, f2, rne # perform operation
fmadd.s f9, f13, f23, f2, rtz # perform operation
fmadd.s f9, f13, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
la x2, scratch
li x3, 0xf8192a1f # load x3 with value 0xf8192a1f
sw x3, 0(x2) # store 0xf8192a1f in memory
flw f23, 0(x2) # load 0xf8192a1f from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
fmadd.s f14, f15, f23, f20, dyn # perform operation
fmadd.s f14, f15, f23, f20, rdn # perform operation
fmadd.s f14, f15, f23, f20, rmm # perform operation
fmadd.s f14, f15, f23, f20, rne # perform operation
fmadd.s f14, f15, f23, f20, rtz # perform operation
fmadd.s f14, f15, f23, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f15, f23, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f15, f23, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x6557585e # load x3 with value 0x6557585e
sw x3, 0(x2) # store 0x6557585e in memory
flw f30, 0(x2) # load 0x6557585e from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmadd.s f18, f31, f30, f25, dyn # perform operation
fmadd.s f18, f31, f30, f25, rdn # perform operation
fmadd.s f18, f31, f30, f25, rmm # perform operation
fmadd.s f18, f31, f30, f25, rne # perform operation
fmadd.s f18, f31, f30, f25, rtz # perform operation
fmadd.s f18, f31, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f31, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f31, f30, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
la x2, scratch
li x3, 0x4ae450c3 # load x3 with value 0x4ae450c3
sw x3, 0(x2) # store 0x4ae450c3 in memory
flw f13, 0(x2) # load 0x4ae450c3 from memory into f13
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f28, f10, f13, f24, dyn # perform operation
fmadd.s f28, f10, f13, f24, rdn # perform operation
fmadd.s f28, f10, f13, f24, rmm # perform operation
fmadd.s f28, f10, f13, f24, rne # perform operation
fmadd.s f28, f10, f13, f24, rtz # perform operation
fmadd.s f28, f10, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f10, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f10, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f10, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f10, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f10, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
la x2, scratch
li x3, 0xf13431c4 # load x3 with value 0xf13431c4
sw x3, 0(x2) # store 0xf13431c4 in memory
flw f15, 0(x2) # load 0xf13431c4 from memory into f15
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmadd.s f5, f11, f15, f24, dyn # perform operation
fmadd.s f5, f11, f15, f24, rdn # perform operation
fmadd.s f5, f11, f15, f24, rmm # perform operation
fmadd.s f5, f11, f15, f24, rne # perform operation
fmadd.s f5, f11, f15, f24, rtz # perform operation
fmadd.s f5, f11, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f11, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f11, f15, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0xb9c4fbfd # load x3 with value 0xb9c4fbfd
sw x3, 0(x2) # store 0xb9c4fbfd in memory
flw f2, 0(x2) # load 0xb9c4fbfd from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f20, f9, f2, f30, dyn # perform operation
fmadd.s f20, f9, f2, f30, rdn # perform operation
fmadd.s f20, f9, f2, f30, rmm # perform operation
fmadd.s f20, f9, f2, f30, rne # perform operation
fmadd.s f20, f9, f2, f30, rtz # perform operation
fmadd.s f20, f9, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f2, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xefea95c2 # load x3 with value 0xefea95c2
sw x3, 0(x2) # store 0xefea95c2 in memory
flw f5, 0(x2) # load 0xefea95c2 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
fmadd.s f11, f8, f5, f7, dyn # perform operation
fmadd.s f11, f8, f5, f7, rdn # perform operation
fmadd.s f11, f8, f5, f7, rmm # perform operation
fmadd.s f11, f8, f5, f7, rne # perform operation
fmadd.s f11, f8, f5, f7, rtz # perform operation
fmadd.s f11, f8, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
la x2, scratch
li x3, 0x81cf2f37 # load x3 with value 0x81cf2f37
sw x3, 0(x2) # store 0x81cf2f37 in memory
flw f29, 0(x2) # load 0x81cf2f37 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
fmadd.s f7, f30, f29, f26, dyn # perform operation
fmadd.s f7, f30, f29, f26, rdn # perform operation
fmadd.s f7, f30, f29, f26, rmm # perform operation
fmadd.s f7, f30, f29, f26, rne # perform operation
fmadd.s f7, f30, f29, f26, rtz # perform operation
fmadd.s f7, f30, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f29, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x1117d863 # load x3 with value 0x1117d863
sw x3, 0(x2) # store 0x1117d863 in memory
flw f12, 0(x2) # load 0x1117d863 from memory into f12
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmadd.s f5, f9, f12, f17, dyn # perform operation
fmadd.s f5, f9, f12, f17, rdn # perform operation
fmadd.s f5, f9, f12, f17, rmm # perform operation
fmadd.s f5, f9, f12, f17, rne # perform operation
fmadd.s f5, f9, f12, f17, rtz # perform operation
fmadd.s f5, f9, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
la x2, scratch
li x3, 0x0af763e9 # load x3 with value 0x0af763e9
sw x3, 0(x2) # store 0x0af763e9 in memory
flw f13, 0(x2) # load 0x0af763e9 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f7, f19, f13, f1, dyn # perform operation
fmadd.s f7, f19, f13, f1, rdn # perform operation
fmadd.s f7, f19, f13, f1, rmm # perform operation
fmadd.s f7, f19, f13, f1, rne # perform operation
fmadd.s f7, f19, f13, f1, rtz # perform operation
fmadd.s f7, f19, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f13, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0xb99fadfa # load x3 with value 0xb99fadfa
sw x3, 0(x2) # store 0xb99fadfa in memory
flw f24, 0(x2) # load 0xb99fadfa from memory into f24
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmadd.s f9, f31, f24, f21, dyn # perform operation
fmadd.s f9, f31, f24, f21, rdn # perform operation
fmadd.s f9, f31, f24, f21, rmm # perform operation
fmadd.s f9, f31, f24, f21, rne # perform operation
fmadd.s f9, f31, f24, f21, rtz # perform operation
fmadd.s f9, f31, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f24, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
la x2, scratch
li x3, 0x9e6037d6 # load x3 with value 0x9e6037d6
sw x3, 0(x2) # store 0x9e6037d6 in memory
flw f19, 0(x2) # load 0x9e6037d6 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmadd.s f25, f17, f19, f12, dyn # perform operation
fmadd.s f25, f17, f19, f12, rdn # perform operation
fmadd.s f25, f17, f19, f12, rmm # perform operation
fmadd.s f25, f17, f19, f12, rne # perform operation
fmadd.s f25, f17, f19, f12, rtz # perform operation
fmadd.s f25, f17, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f17, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f17, f19, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
la x2, scratch
li x3, 0x06fce05b # load x3 with value 0x06fce05b
sw x3, 0(x2) # store 0x06fce05b in memory
flw f6, 0(x2) # load 0x06fce05b from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f13, f14, f6, f8, dyn # perform operation
fmadd.s f13, f14, f6, f8, rdn # perform operation
fmadd.s f13, f14, f6, f8, rmm # perform operation
fmadd.s f13, f14, f6, f8, rne # perform operation
fmadd.s f13, f14, f6, f8, rtz # perform operation
fmadd.s f13, f14, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
la x2, scratch
li x3, 0x1f76cf6c # load x3 with value 0x1f76cf6c
sw x3, 0(x2) # store 0x1f76cf6c in memory
flw f16, 0(x2) # load 0x1f76cf6c from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f19, f21, f16, f24, dyn # perform operation
fmadd.s f19, f21, f16, f24, rdn # perform operation
fmadd.s f19, f21, f16, f24, rmm # perform operation
fmadd.s f19, f21, f16, f24, rne # perform operation
fmadd.s f19, f21, f16, f24, rtz # perform operation
fmadd.s f19, f21, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f21, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f21, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
la x2, scratch
li x3, 0x01f0ae48 # load x3 with value 0x01f0ae48
sw x3, 0(x2) # store 0x01f0ae48 in memory
flw f1, 0(x2) # load 0x01f0ae48 from memory into f1
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f25, f27, f1, f5, dyn # perform operation
fmadd.s f25, f27, f1, f5, rdn # perform operation
fmadd.s f25, f27, f1, f5, rmm # perform operation
fmadd.s f25, f27, f1, f5, rne # perform operation
fmadd.s f25, f27, f1, f5, rtz # perform operation
fmadd.s f25, f27, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f1, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0x06e73a3b # load x3 with value 0x06e73a3b
sw x3, 0(x2) # store 0x06e73a3b in memory
flw f10, 0(x2) # load 0x06e73a3b from memory into f10
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmadd.s f19, f3, f10, f24, dyn # perform operation
fmadd.s f19, f3, f10, f24, rdn # perform operation
fmadd.s f19, f3, f10, f24, rmm # perform operation
fmadd.s f19, f3, f10, f24, rne # perform operation
fmadd.s f19, f3, f10, f24, rtz # perform operation
fmadd.s f19, f3, f10, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f10, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f10, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
la x2, scratch
li x3, 0x7fe49b3b # load x3 with value 0x7fe49b3b
sw x3, 0(x2) # store 0x7fe49b3b in memory
flw f20, 0(x2) # load 0x7fe49b3b from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
fmadd.s f2, f9, f20, f26, dyn # perform operation
fmadd.s f2, f9, f20, f26, rdn # perform operation
fmadd.s f2, f9, f20, f26, rmm # perform operation
fmadd.s f2, f9, f20, f26, rne # perform operation
fmadd.s f2, f9, f20, f26, rtz # perform operation
fmadd.s f2, f9, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f9, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f9, f20, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
la x2, scratch
li x3, 0x641d0bd6 # load x3 with value 0x641d0bd6
sw x3, 0(x2) # store 0x641d0bd6 in memory
flw f27, 0(x2) # load 0x641d0bd6 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmadd.s f9, f31, f27, f2, dyn # perform operation
fmadd.s f9, f31, f27, f2, rdn # perform operation
fmadd.s f9, f31, f27, f2, rmm # perform operation
fmadd.s f9, f31, f27, f2, rne # perform operation
fmadd.s f9, f31, f27, f2, rtz # perform operation
fmadd.s f9, f31, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f27, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
la x2, scratch
li x3, 0x5088f000 # load x3 with value 0x5088f000
sw x3, 0(x2) # store 0x5088f000 in memory
flw f2, 0(x2) # load 0x5088f000 from memory into f2
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmadd.s f24, f26, f2, f3, dyn # perform operation
fmadd.s f24, f26, f2, f3, rdn # perform operation
fmadd.s f24, f26, f2, f3, rmm # perform operation
fmadd.s f24, f26, f2, f3, rne # perform operation
fmadd.s f24, f26, f2, f3, rtz # perform operation
fmadd.s f24, f26, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
la x2, scratch
li x3, 0xdd86dec7 # load x3 with value 0xdd86dec7
sw x3, 0(x2) # store 0xdd86dec7 in memory
flw f23, 0(x2) # load 0xdd86dec7 from memory into f23
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmadd.s f11, f8, f23, f9, dyn # perform operation
fmadd.s f11, f8, f23, f9, rdn # perform operation
fmadd.s f11, f8, f23, f9, rmm # perform operation
fmadd.s f11, f8, f23, f9, rne # perform operation
fmadd.s f11, f8, f23, f9, rtz # perform operation
fmadd.s f11, f8, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
la x2, scratch
li x3, 0xc862afca # load x3 with value 0xc862afca
sw x3, 0(x2) # store 0xc862afca in memory
flw f23, 0(x2) # load 0xc862afca from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f14, f3, f23, f9, dyn # perform operation
fmadd.s f14, f3, f23, f9, rdn # perform operation
fmadd.s f14, f3, f23, f9, rmm # perform operation
fmadd.s f14, f3, f23, f9, rne # perform operation
fmadd.s f14, f3, f23, f9, rtz # perform operation
fmadd.s f14, f3, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f23, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
la x2, scratch
li x3, 0xbac67273 # load x3 with value 0xbac67273
sw x3, 0(x2) # store 0xbac67273 in memory
flw f21, 0(x2) # load 0xbac67273 from memory into f21
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f24, f5, f21, f13, dyn # perform operation
fmadd.s f24, f5, f21, f13, rdn # perform operation
fmadd.s f24, f5, f21, f13, rmm # perform operation
fmadd.s f24, f5, f21, f13, rne # perform operation
fmadd.s f24, f5, f21, f13, rtz # perform operation
fmadd.s f24, f5, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f5, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f5, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f29, 0(x2) # load 0x40000000 from memory into f29
la x2, scratch
li x3, 0x814949ee # load x3 with value 0x814949ee
sw x3, 0(x2) # store 0x814949ee in memory
flw f11, 0(x2) # load 0x814949ee from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmadd.s f21, f29, f11, f12, dyn # perform operation
fmadd.s f21, f29, f11, f12, rdn # perform operation
fmadd.s f21, f29, f11, f12, rmm # perform operation
fmadd.s f21, f29, f11, f12, rne # perform operation
fmadd.s f21, f29, f11, f12, rtz # perform operation
fmadd.s f21, f29, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
la x2, scratch
li x3, 0x2d9eaae4 # load x3 with value 0x2d9eaae4
sw x3, 0(x2) # store 0x2d9eaae4 in memory
flw f9, 0(x2) # load 0x2d9eaae4 from memory into f9
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f21, f20, f9, f1, dyn # perform operation
fmadd.s f21, f20, f9, f1, rdn # perform operation
fmadd.s f21, f20, f9, f1, rmm # perform operation
fmadd.s f21, f20, f9, f1, rne # perform operation
fmadd.s f21, f20, f9, f1, rtz # perform operation
fmadd.s f21, f20, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f20, f9, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
la x2, scratch
li x3, 0x8a994c5f # load x3 with value 0x8a994c5f
sw x3, 0(x2) # store 0x8a994c5f in memory
flw f7, 0(x2) # load 0x8a994c5f from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f1, f27, f7, f20, dyn # perform operation
fmadd.s f1, f27, f7, f20, rdn # perform operation
fmadd.s f1, f27, f7, f20, rmm # perform operation
fmadd.s f1, f27, f7, f20, rne # perform operation
fmadd.s f1, f27, f7, f20, rtz # perform operation
fmadd.s f1, f27, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f27, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f27, f7, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
la x2, scratch
li x3, 0x382c3b0a # load x3 with value 0x382c3b0a
sw x3, 0(x2) # store 0x382c3b0a in memory
flw f19, 0(x2) # load 0x382c3b0a from memory into f19
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f25, f13, f19, f8, dyn # perform operation
fmadd.s f25, f13, f19, f8, rdn # perform operation
fmadd.s f25, f13, f19, f8, rmm # perform operation
fmadd.s f25, f13, f19, f8, rne # perform operation
fmadd.s f25, f13, f19, f8, rtz # perform operation
fmadd.s f25, f13, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f19, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0x129d3d5e # load x3 with value 0x129d3d5e
sw x3, 0(x2) # store 0x129d3d5e in memory
flw f29, 0(x2) # load 0x129d3d5e from memory into f29
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f22, f11, f29, f20, dyn # perform operation
fmadd.s f22, f11, f29, f20, rdn # perform operation
fmadd.s f22, f11, f29, f20, rmm # perform operation
fmadd.s f22, f11, f29, f20, rne # perform operation
fmadd.s f22, f11, f29, f20, rtz # perform operation
fmadd.s f22, f11, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f11, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f11, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f11, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f11, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f11, f29, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xd72de8b6 # load x3 with value 0xd72de8b6
sw x3, 0(x2) # store 0xd72de8b6 in memory
flw f6, 0(x2) # load 0xd72de8b6 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
fmadd.s f12, f26, f6, f29, dyn # perform operation
fmadd.s f12, f26, f6, f29, rdn # perform operation
fmadd.s f12, f26, f6, f29, rmm # perform operation
fmadd.s f12, f26, f6, f29, rne # perform operation
fmadd.s f12, f26, f6, f29, rtz # perform operation
fmadd.s f12, f26, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f6, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
la x2, scratch
li x3, 0xb8f57ff1 # load x3 with value 0xb8f57ff1
sw x3, 0(x2) # store 0xb8f57ff1 in memory
flw f24, 0(x2) # load 0xb8f57ff1 from memory into f24
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f10, f11, f24, f9, dyn # perform operation
fmadd.s f10, f11, f24, f9, rdn # perform operation
fmadd.s f10, f11, f24, f9, rmm # perform operation
fmadd.s f10, f11, f24, f9, rne # perform operation
fmadd.s f10, f11, f24, f9, rtz # perform operation
fmadd.s f10, f11, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f24, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x3357fa34 # load x3 with value 0x3357fa34
sw x3, 0(x2) # store 0x3357fa34 in memory
flw f23, 0(x2) # load 0x3357fa34 from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmadd.s f19, f28, f23, f25, dyn # perform operation
fmadd.s f19, f28, f23, f25, rdn # perform operation
fmadd.s f19, f28, f23, f25, rmm # perform operation
fmadd.s f19, f28, f23, f25, rne # perform operation
fmadd.s f19, f28, f23, f25, rtz # perform operation
fmadd.s f19, f28, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x37585100 # load x3 with value 0x37585100
sw x3, 0(x2) # store 0x37585100 in memory
flw f23, 0(x2) # load 0x37585100 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmadd.s f26, f5, f23, f1, dyn # perform operation
fmadd.s f26, f5, f23, f1, rdn # perform operation
fmadd.s f26, f5, f23, f1, rmm # perform operation
fmadd.s f26, f5, f23, f1, rne # perform operation
fmadd.s f26, f5, f23, f1, rtz # perform operation
fmadd.s f26, f5, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xd65895eb # load x3 with value 0xd65895eb
sw x3, 0(x2) # store 0xd65895eb in memory
flw f18, 0(x2) # load 0xd65895eb from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmadd.s f1, f14, f18, f17, dyn # perform operation
fmadd.s f1, f14, f18, f17, rdn # perform operation
fmadd.s f1, f14, f18, f17, rmm # perform operation
fmadd.s f1, f14, f18, f17, rne # perform operation
fmadd.s f1, f14, f18, f17, rtz # perform operation
fmadd.s f1, f14, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f14, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f14, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
la x2, scratch
li x3, 0xdb6a4439 # load x3 with value 0xdb6a4439
sw x3, 0(x2) # store 0xdb6a4439 in memory
flw f1, 0(x2) # load 0xdb6a4439 from memory into f1
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f11, f14, f1, f30, dyn # perform operation
fmadd.s f11, f14, f1, f30, rdn # perform operation
fmadd.s f11, f14, f1, f30, rmm # perform operation
fmadd.s f11, f14, f1, f30, rne # perform operation
fmadd.s f11, f14, f1, f30, rtz # perform operation
fmadd.s f11, f14, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f14, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f14, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
la x2, scratch
li x3, 0x253d9a36 # load x3 with value 0x253d9a36
sw x3, 0(x2) # store 0x253d9a36 in memory
flw f5, 0(x2) # load 0x253d9a36 from memory into f5
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmadd.s f2, f28, f5, f26, dyn # perform operation
fmadd.s f2, f28, f5, f26, rdn # perform operation
fmadd.s f2, f28, f5, f26, rmm # perform operation
fmadd.s f2, f28, f5, f26, rne # perform operation
fmadd.s f2, f28, f5, f26, rtz # perform operation
fmadd.s f2, f28, f5, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f5, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f5, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f5, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f5, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f5, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
la x2, scratch
li x3, 0x71a5817e # load x3 with value 0x71a5817e
sw x3, 0(x2) # store 0x71a5817e in memory
flw f26, 0(x2) # load 0x71a5817e from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmadd.s f24, f8, f26, f19, dyn # perform operation
fmadd.s f24, f8, f26, f19, rdn # perform operation
fmadd.s f24, f8, f26, f19, rmm # perform operation
fmadd.s f24, f8, f26, f19, rne # perform operation
fmadd.s f24, f8, f26, f19, rtz # perform operation
fmadd.s f24, f8, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
la x2, scratch
li x3, 0xf90df663 # load x3 with value 0xf90df663
sw x3, 0(x2) # store 0xf90df663 in memory
flw f26, 0(x2) # load 0xf90df663 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmadd.s f16, f3, f26, f20, dyn # perform operation
fmadd.s f16, f3, f26, f20, rdn # perform operation
fmadd.s f16, f3, f26, f20, rmm # perform operation
fmadd.s f16, f3, f26, f20, rne # perform operation
fmadd.s f16, f3, f26, f20, rtz # perform operation
fmadd.s f16, f3, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0xa31ff731 # load x3 with value 0xa31ff731
sw x3, 0(x2) # store 0xa31ff731 in memory
flw f24, 0(x2) # load 0xa31ff731 from memory into f24
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f18, f26, f24, f12, dyn # perform operation
fmadd.s f18, f26, f24, f12, rdn # perform operation
fmadd.s f18, f26, f24, f12, rmm # perform operation
fmadd.s f18, f26, f24, f12, rne # perform operation
fmadd.s f18, f26, f24, f12, rtz # perform operation
fmadd.s f18, f26, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f26, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f26, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0xea05e3ce # load x3 with value 0xea05e3ce
sw x3, 0(x2) # store 0xea05e3ce in memory
flw f11, 0(x2) # load 0xea05e3ce from memory into f11
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
fmadd.s f22, f7, f11, f29, dyn # perform operation
fmadd.s f22, f7, f11, f29, rdn # perform operation
fmadd.s f22, f7, f11, f29, rmm # perform operation
fmadd.s f22, f7, f11, f29, rne # perform operation
fmadd.s f22, f7, f11, f29, rtz # perform operation
fmadd.s f22, f7, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0xbdde912a # load x3 with value 0xbdde912a
sw x3, 0(x2) # store 0xbdde912a in memory
flw f6, 0(x2) # load 0xbdde912a from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
fmadd.s f23, f5, f6, f17, dyn # perform operation
fmadd.s f23, f5, f6, f17, rdn # perform operation
fmadd.s f23, f5, f6, f17, rmm # perform operation
fmadd.s f23, f5, f6, f17, rne # perform operation
fmadd.s f23, f5, f6, f17, rtz # perform operation
fmadd.s f23, f5, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f6, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
la x2, scratch
li x3, 0x22a86c0c # load x3 with value 0x22a86c0c
sw x3, 0(x2) # store 0x22a86c0c in memory
flw f14, 0(x2) # load 0x22a86c0c from memory into f14
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f24, f9, f14, f1, dyn # perform operation
fmadd.s f24, f9, f14, f1, rdn # perform operation
fmadd.s f24, f9, f14, f1, rmm # perform operation
fmadd.s f24, f9, f14, f1, rne # perform operation
fmadd.s f24, f9, f14, f1, rtz # perform operation
fmadd.s f24, f9, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
la x2, scratch
li x3, 0x573ce708 # load x3 with value 0x573ce708
sw x3, 0(x2) # store 0x573ce708 in memory
flw f31, 0(x2) # load 0x573ce708 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
fmadd.s f5, f25, f31, f22, dyn # perform operation
fmadd.s f5, f25, f31, f22, rdn # perform operation
fmadd.s f5, f25, f31, f22, rmm # perform operation
fmadd.s f5, f25, f31, f22, rne # perform operation
fmadd.s f5, f25, f31, f22, rtz # perform operation
fmadd.s f5, f25, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f25, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f25, f31, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
la x2, scratch
li x3, 0x6bf99664 # load x3 with value 0x6bf99664
sw x3, 0(x2) # store 0x6bf99664 in memory
flw f20, 0(x2) # load 0x6bf99664 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f13, f21, f20, f24, dyn # perform operation
fmadd.s f13, f21, f20, f24, rdn # perform operation
fmadd.s f13, f21, f20, f24, rmm # perform operation
fmadd.s f13, f21, f20, f24, rne # perform operation
fmadd.s f13, f21, f20, f24, rtz # perform operation
fmadd.s f13, f21, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f20, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
la x2, scratch
li x3, 0x9f8ba46a # load x3 with value 0x9f8ba46a
sw x3, 0(x2) # store 0x9f8ba46a in memory
flw f25, 0(x2) # load 0x9f8ba46a from memory into f25
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
fmadd.s f21, f5, f25, f26, dyn # perform operation
fmadd.s f21, f5, f25, f26, rdn # perform operation
fmadd.s f21, f5, f25, f26, rmm # perform operation
fmadd.s f21, f5, f25, f26, rne # perform operation
fmadd.s f21, f5, f25, f26, rtz # perform operation
fmadd.s f21, f5, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
la x2, scratch
li x3, 0x470177b7 # load x3 with value 0x470177b7
sw x3, 0(x2) # store 0x470177b7 in memory
flw f28, 0(x2) # load 0x470177b7 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmadd.s f22, f2, f28, f21, dyn # perform operation
fmadd.s f22, f2, f28, f21, rdn # perform operation
fmadd.s f22, f2, f28, f21, rmm # perform operation
fmadd.s f22, f2, f28, f21, rne # perform operation
fmadd.s f22, f2, f28, f21, rtz # perform operation
fmadd.s f22, f2, f28, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f28, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f28, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
la x2, scratch
li x3, 0x1edb44b5 # load x3 with value 0x1edb44b5
sw x3, 0(x2) # store 0x1edb44b5 in memory
flw f28, 0(x2) # load 0x1edb44b5 from memory into f28
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f29, 0(x2) # load 0xffffffff from memory into f29
fmadd.s f31, f6, f28, f29, dyn # perform operation
fmadd.s f31, f6, f28, f29, rdn # perform operation
fmadd.s f31, f6, f28, f29, rmm # perform operation
fmadd.s f31, f6, f28, f29, rne # perform operation
fmadd.s f31, f6, f28, f29, rtz # perform operation
fmadd.s f31, f6, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0x10dbab59 # load x3 with value 0x10dbab59
sw x3, 0(x2) # store 0x10dbab59 in memory
flw f10, 0(x2) # load 0x10dbab59 from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fmadd.s f7, f15, f10, f1, dyn # perform operation
fmadd.s f7, f15, f10, f1, rdn # perform operation
fmadd.s f7, f15, f10, f1, rmm # perform operation
fmadd.s f7, f15, f10, f1, rne # perform operation
fmadd.s f7, f15, f10, f1, rtz # perform operation
fmadd.s f7, f15, f10, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f10, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f10, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
la x2, scratch
li x3, 0x5b2f6c50 # load x3 with value 0x5b2f6c50
sw x3, 0(x2) # store 0x5b2f6c50 in memory
flw f23, 0(x2) # load 0x5b2f6c50 from memory into f23
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmadd.s f11, f7, f23, f30, dyn # perform operation
fmadd.s f11, f7, f23, f30, rdn # perform operation
fmadd.s f11, f7, f23, f30, rmm # perform operation
fmadd.s f11, f7, f23, f30, rne # perform operation
fmadd.s f11, f7, f23, f30, rtz # perform operation
fmadd.s f11, f7, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f23, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
la x2, scratch
li x3, 0x6827dd47 # load x3 with value 0x6827dd47
sw x3, 0(x2) # store 0x6827dd47 in memory
flw f30, 0(x2) # load 0x6827dd47 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fmadd.s f22, f26, f30, f13, dyn # perform operation
fmadd.s f22, f26, f30, f13, rdn # perform operation
fmadd.s f22, f26, f30, f13, rmm # perform operation
fmadd.s f22, f26, f30, f13, rne # perform operation
fmadd.s f22, f26, f30, f13, rtz # perform operation
fmadd.s f22, f26, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f30, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
la x2, scratch
li x3, 0xfc6e13f6 # load x3 with value 0xfc6e13f6
sw x3, 0(x2) # store 0xfc6e13f6 in memory
flw f28, 0(x2) # load 0xfc6e13f6 from memory into f28
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmadd.s f11, f15, f28, f30, dyn # perform operation
fmadd.s f11, f15, f28, f30, rdn # perform operation
fmadd.s f11, f15, f28, f30, rmm # perform operation
fmadd.s f11, f15, f28, f30, rne # perform operation
fmadd.s f11, f15, f28, f30, rtz # perform operation
fmadd.s f11, f15, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f15, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f15, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f15, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f15, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f15, f28, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
la x2, scratch
li x3, 0xda7c0e83 # load x3 with value 0xda7c0e83
sw x3, 0(x2) # store 0xda7c0e83 in memory
flw f6, 0(x2) # load 0xda7c0e83 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
fmadd.s f13, f10, f6, f24, dyn # perform operation
fmadd.s f13, f10, f6, f24, rdn # perform operation
fmadd.s f13, f10, f6, f24, rmm # perform operation
fmadd.s f13, f10, f6, f24, rne # perform operation
fmadd.s f13, f10, f6, f24, rtz # perform operation
fmadd.s f13, f10, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f6, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
la x2, scratch
li x3, 0x5e638c28 # load x3 with value 0x5e638c28
sw x3, 0(x2) # store 0x5e638c28 in memory
flw f10, 0(x2) # load 0x5e638c28 from memory into f10
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmadd.s f12, f8, f10, f11, dyn # perform operation
fmadd.s f12, f8, f10, f11, rdn # perform operation
fmadd.s f12, f8, f10, f11, rmm # perform operation
fmadd.s f12, f8, f10, f11, rne # perform operation
fmadd.s f12, f8, f10, f11, rtz # perform operation
fmadd.s f12, f8, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
la x2, scratch
li x3, 0x2a6fdeff # load x3 with value 0x2a6fdeff
sw x3, 0(x2) # store 0x2a6fdeff in memory
flw f16, 0(x2) # load 0x2a6fdeff from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmadd.s f24, f20, f16, f15, dyn # perform operation
fmadd.s f24, f20, f16, f15, rdn # perform operation
fmadd.s f24, f20, f16, f15, rmm # perform operation
fmadd.s f24, f20, f16, f15, rne # perform operation
fmadd.s f24, f20, f16, f15, rtz # perform operation
fmadd.s f24, f20, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x20510add # load x3 with value 0x20510add
sw x3, 0(x2) # store 0x20510add in memory
flw f1, 0(x2) # load 0x20510add from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f2, f3, f1, f23, dyn # perform operation
fmadd.s f2, f3, f1, f23, rdn # perform operation
fmadd.s f2, f3, f1, f23, rmm # perform operation
fmadd.s f2, f3, f1, f23, rne # perform operation
fmadd.s f2, f3, f1, f23, rtz # perform operation
fmadd.s f2, f3, f1, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f1, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f1, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f1, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f1, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f1, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x11b29f40 # load x3 with value 0x11b29f40
sw x3, 0(x2) # store 0x11b29f40 in memory
flw f20, 0(x2) # load 0x11b29f40 from memory into f20
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
fmadd.s f5, f17, f20, f14, dyn # perform operation
fmadd.s f5, f17, f20, f14, rdn # perform operation
fmadd.s f5, f17, f20, f14, rmm # perform operation
fmadd.s f5, f17, f20, f14, rne # perform operation
fmadd.s f5, f17, f20, f14, rtz # perform operation
fmadd.s f5, f17, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f20, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
la x2, scratch
li x3, 0x9f4ed38f # load x3 with value 0x9f4ed38f
sw x3, 0(x2) # store 0x9f4ed38f in memory
flw f8, 0(x2) # load 0x9f4ed38f from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f29, f13, f8, f12, dyn # perform operation
fmadd.s f29, f13, f8, f12, rdn # perform operation
fmadd.s f29, f13, f8, f12, rmm # perform operation
fmadd.s f29, f13, f8, f12, rne # perform operation
fmadd.s f29, f13, f8, f12, rtz # perform operation
fmadd.s f29, f13, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f13, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0x1dea16e7 # load x3 with value 0x1dea16e7
sw x3, 0(x2) # store 0x1dea16e7 in memory
flw f14, 0(x2) # load 0x1dea16e7 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmadd.s f3, f31, f14, f28, dyn # perform operation
fmadd.s f3, f31, f14, f28, rdn # perform operation
fmadd.s f3, f31, f14, f28, rmm # perform operation
fmadd.s f3, f31, f14, f28, rne # perform operation
fmadd.s f3, f31, f14, f28, rtz # perform operation
fmadd.s f3, f31, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0xef00d7fa # load x3 with value 0xef00d7fa
sw x3, 0(x2) # store 0xef00d7fa in memory
flw f26, 0(x2) # load 0xef00d7fa from memory into f26
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmadd.s f22, f15, f26, f2, dyn # perform operation
fmadd.s f22, f15, f26, f2, rdn # perform operation
fmadd.s f22, f15, f26, f2, rmm # perform operation
fmadd.s f22, f15, f26, f2, rne # perform operation
fmadd.s f22, f15, f26, f2, rtz # perform operation
fmadd.s f22, f15, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f26, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
la x2, scratch
li x3, 0x75cc05e0 # load x3 with value 0x75cc05e0
sw x3, 0(x2) # store 0x75cc05e0 in memory
flw f21, 0(x2) # load 0x75cc05e0 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmadd.s f29, f17, f21, f2, dyn # perform operation
fmadd.s f29, f17, f21, f2, rdn # perform operation
fmadd.s f29, f17, f21, f2, rmm # perform operation
fmadd.s f29, f17, f21, f2, rne # perform operation
fmadd.s f29, f17, f21, f2, rtz # perform operation
fmadd.s f29, f17, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f21, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0xab53ce1e # load x3 with value 0xab53ce1e
sw x3, 0(x2) # store 0xab53ce1e in memory
flw f13, 0(x2) # load 0xab53ce1e from memory into f13
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmadd.s f19, f22, f13, f24, dyn # perform operation
fmadd.s f19, f22, f13, f24, rdn # perform operation
fmadd.s f19, f22, f13, f24, rmm # perform operation
fmadd.s f19, f22, f13, f24, rne # perform operation
fmadd.s f19, f22, f13, f24, rtz # perform operation
fmadd.s f19, f22, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f13, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
la x2, scratch
li x3, 0x798f8efe # load x3 with value 0x798f8efe
sw x3, 0(x2) # store 0x798f8efe in memory
flw f3, 0(x2) # load 0x798f8efe from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
fmadd.s f11, f7, f3, f21, dyn # perform operation
fmadd.s f11, f7, f3, f21, rdn # perform operation
fmadd.s f11, f7, f3, f21, rmm # perform operation
fmadd.s f11, f7, f3, f21, rne # perform operation
fmadd.s f11, f7, f3, f21, rtz # perform operation
fmadd.s f11, f7, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0x10d9f59a # load x3 with value 0x10d9f59a
sw x3, 0(x2) # store 0x10d9f59a in memory
flw f6, 0(x2) # load 0x10d9f59a from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f14, f26, f6, f31, dyn # perform operation
fmadd.s f14, f26, f6, f31, rdn # perform operation
fmadd.s f14, f26, f6, f31, rmm # perform operation
fmadd.s f14, f26, f6, f31, rne # perform operation
fmadd.s f14, f26, f6, f31, rtz # perform operation
fmadd.s f14, f26, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f26, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f26, f6, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0xc3df3e2e # load x3 with value 0xc3df3e2e
sw x3, 0(x2) # store 0xc3df3e2e in memory
flw f31, 0(x2) # load 0xc3df3e2e from memory into f31
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmadd.s f26, f19, f31, f28, dyn # perform operation
fmadd.s f26, f19, f31, f28, rdn # perform operation
fmadd.s f26, f19, f31, f28, rmm # perform operation
fmadd.s f26, f19, f31, f28, rne # perform operation
fmadd.s f26, f19, f31, f28, rtz # perform operation
fmadd.s f26, f19, f31, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f19, f31, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f19, f31, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
la x2, scratch
li x3, 0x7ce7e7ff # load x3 with value 0x7ce7e7ff
sw x3, 0(x2) # store 0x7ce7e7ff in memory
flw f2, 0(x2) # load 0x7ce7e7ff from memory into f2
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmadd.s f18, f16, f2, f28, dyn # perform operation
fmadd.s f18, f16, f2, f28, rdn # perform operation
fmadd.s f18, f16, f2, f28, rmm # perform operation
fmadd.s f18, f16, f2, f28, rne # perform operation
fmadd.s f18, f16, f2, f28, rtz # perform operation
fmadd.s f18, f16, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xb41e5c1c # load x3 with value 0xb41e5c1c
sw x3, 0(x2) # store 0xb41e5c1c in memory
flw f18, 0(x2) # load 0xb41e5c1c from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fmadd.s f12, f3, f18, f17, dyn # perform operation
fmadd.s f12, f3, f18, f17, rdn # perform operation
fmadd.s f12, f3, f18, f17, rmm # perform operation
fmadd.s f12, f3, f18, f17, rne # perform operation
fmadd.s f12, f3, f18, f17, rtz # perform operation
fmadd.s f12, f3, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
la x2, scratch
li x3, 0xf8815b64 # load x3 with value 0xf8815b64
sw x3, 0(x2) # store 0xf8815b64 in memory
flw f18, 0(x2) # load 0xf8815b64 from memory into f18
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f12, f26, f18, f8, dyn # perform operation
fmadd.s f12, f26, f18, f8, rdn # perform operation
fmadd.s f12, f26, f18, f8, rmm # perform operation
fmadd.s f12, f26, f18, f8, rne # perform operation
fmadd.s f12, f26, f18, f8, rtz # perform operation
fmadd.s f12, f26, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x23699936 # load x3 with value 0x23699936
sw x3, 0(x2) # store 0x23699936 in memory
flw f1, 0(x2) # load 0x23699936 from memory into f1
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmadd.s f24, f11, f1, f18, dyn # perform operation
fmadd.s f24, f11, f1, f18, rdn # perform operation
fmadd.s f24, f11, f1, f18, rmm # perform operation
fmadd.s f24, f11, f1, f18, rne # perform operation
fmadd.s f24, f11, f1, f18, rtz # perform operation
fmadd.s f24, f11, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x62d0b847 # load x3 with value 0x62d0b847
sw x3, 0(x2) # store 0x62d0b847 in memory
flw f30, 0(x2) # load 0x62d0b847 from memory into f30
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmadd.s f22, f11, f30, f23, dyn # perform operation
fmadd.s f22, f11, f30, f23, rdn # perform operation
fmadd.s f22, f11, f30, f23, rmm # perform operation
fmadd.s f22, f11, f30, f23, rne # perform operation
fmadd.s f22, f11, f30, f23, rtz # perform operation
fmadd.s f22, f11, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f11, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f11, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
la x2, scratch
li x3, 0x20750674 # load x3 with value 0x20750674
sw x3, 0(x2) # store 0x20750674 in memory
flw f5, 0(x2) # load 0x20750674 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
fmadd.s f19, f22, f5, f6, dyn # perform operation
fmadd.s f19, f22, f5, f6, rdn # perform operation
fmadd.s f19, f22, f5, f6, rmm # perform operation
fmadd.s f19, f22, f5, f6, rne # perform operation
fmadd.s f19, f22, f5, f6, rtz # perform operation
fmadd.s f19, f22, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
la x2, scratch
li x3, 0xbf014ec4 # load x3 with value 0xbf014ec4
sw x3, 0(x2) # store 0xbf014ec4 in memory
flw f2, 0(x2) # load 0xbf014ec4 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmadd.s f29, f31, f2, f24, dyn # perform operation
fmadd.s f29, f31, f2, f24, rdn # perform operation
fmadd.s f29, f31, f2, f24, rmm # perform operation
fmadd.s f29, f31, f2, f24, rne # perform operation
fmadd.s f29, f31, f2, f24, rtz # perform operation
fmadd.s f29, f31, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
la x2, scratch
li x3, 0x9232462e # load x3 with value 0x9232462e
sw x3, 0(x2) # store 0x9232462e in memory
flw f12, 0(x2) # load 0x9232462e from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
fmadd.s f30, f19, f12, f9, dyn # perform operation
fmadd.s f30, f19, f12, f9, rdn # perform operation
fmadd.s f30, f19, f12, f9, rmm # perform operation
fmadd.s f30, f19, f12, f9, rne # perform operation
fmadd.s f30, f19, f12, f9, rtz # perform operation
fmadd.s f30, f19, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0xc775c743 # load x3 with value 0xc775c743
sw x3, 0(x2) # store 0xc775c743 in memory
flw f8, 0(x2) # load 0xc775c743 from memory into f8
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmadd.s f30, f3, f8, f25, dyn # perform operation
fmadd.s f30, f3, f8, f25, rdn # perform operation
fmadd.s f30, f3, f8, f25, rmm # perform operation
fmadd.s f30, f3, f8, f25, rne # perform operation
fmadd.s f30, f3, f8, f25, rtz # perform operation
fmadd.s f30, f3, f8, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f8, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f8, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
la x2, scratch
li x3, 0x42f0949d # load x3 with value 0x42f0949d
sw x3, 0(x2) # store 0x42f0949d in memory
flw f30, 0(x2) # load 0x42f0949d from memory into f30
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmadd.s f20, f11, f30, f8, dyn # perform operation
fmadd.s f20, f11, f30, f8, rdn # perform operation
fmadd.s f20, f11, f30, f8, rmm # perform operation
fmadd.s f20, f11, f30, f8, rne # perform operation
fmadd.s f20, f11, f30, f8, rtz # perform operation
fmadd.s f20, f11, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
la x2, scratch
li x3, 0x60599604 # load x3 with value 0x60599604
sw x3, 0(x2) # store 0x60599604 in memory
flw f15, 0(x2) # load 0x60599604 from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f18, 0(x2) # load 0xffffffff from memory into f18
fmadd.s f26, f23, f15, f18, dyn # perform operation
fmadd.s f26, f23, f15, f18, rdn # perform operation
fmadd.s f26, f23, f15, f18, rmm # perform operation
fmadd.s f26, f23, f15, f18, rne # perform operation
fmadd.s f26, f23, f15, f18, rtz # perform operation
fmadd.s f26, f23, f15, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f15, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f15, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
la x2, scratch
li x3, 0x6391b2fb # load x3 with value 0x6391b2fb
sw x3, 0(x2) # store 0x6391b2fb in memory
flw f8, 0(x2) # load 0x6391b2fb from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
fmadd.s f14, f2, f8, f22, dyn # perform operation
fmadd.s f14, f2, f8, f22, rdn # perform operation
fmadd.s f14, f2, f8, f22, rmm # perform operation
fmadd.s f14, f2, f8, f22, rne # perform operation
fmadd.s f14, f2, f8, f22, rtz # perform operation
fmadd.s f14, f2, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f8, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
la x2, scratch
li x3, 0x1716fc57 # load x3 with value 0x1716fc57
sw x3, 0(x2) # store 0x1716fc57 in memory
flw f9, 0(x2) # load 0x1716fc57 from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmadd.s f18, f3, f9, f19, dyn # perform operation
fmadd.s f18, f3, f9, f19, rdn # perform operation
fmadd.s f18, f3, f9, f19, rmm # perform operation
fmadd.s f18, f3, f9, f19, rne # perform operation
fmadd.s f18, f3, f9, f19, rtz # perform operation
fmadd.s f18, f3, f9, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f3, f9, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f3, f9, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
la x2, scratch
li x3, 0x0c9f009f # load x3 with value 0x0c9f009f
sw x3, 0(x2) # store 0x0c9f009f in memory
flw f18, 0(x2) # load 0x0c9f009f from memory into f18
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
fmadd.s f20, f15, f18, f14, dyn # perform operation
fmadd.s f20, f15, f18, f14, rdn # perform operation
fmadd.s f20, f15, f18, f14, rmm # perform operation
fmadd.s f20, f15, f18, f14, rne # perform operation
fmadd.s f20, f15, f18, f14, rtz # perform operation
fmadd.s f20, f15, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f15, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f15, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
la x2, scratch
li x3, 0x2520affb # load x3 with value 0x2520affb
sw x3, 0(x2) # store 0x2520affb in memory
flw f19, 0(x2) # load 0x2520affb from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f15, f27, f19, f9, dyn # perform operation
fmadd.s f15, f27, f19, f9, rdn # perform operation
fmadd.s f15, f27, f19, f9, rmm # perform operation
fmadd.s f15, f27, f19, f9, rne # perform operation
fmadd.s f15, f27, f19, f9, rtz # perform operation
fmadd.s f15, f27, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
la x2, scratch
li x3, 0xeb15db3c # load x3 with value 0xeb15db3c
sw x3, 0(x2) # store 0xeb15db3c in memory
flw f6, 0(x2) # load 0xeb15db3c from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
fmadd.s f28, f9, f6, f25, dyn # perform operation
fmadd.s f28, f9, f6, f25, rdn # perform operation
fmadd.s f28, f9, f6, f25, rmm # perform operation
fmadd.s f28, f9, f6, f25, rne # perform operation
fmadd.s f28, f9, f6, f25, rtz # perform operation
fmadd.s f28, f9, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x4dd3a3d2 # load x3 with value 0x4dd3a3d2
sw x3, 0(x2) # store 0x4dd3a3d2 in memory
flw f2, 0(x2) # load 0x4dd3a3d2 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f21, f18, f2, f28, dyn # perform operation
fmadd.s f21, f18, f2, f28, rdn # perform operation
fmadd.s f21, f18, f2, f28, rmm # perform operation
fmadd.s f21, f18, f2, f28, rne # perform operation
fmadd.s f21, f18, f2, f28, rtz # perform operation
fmadd.s f21, f18, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f18, f2, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x1ef6a836 # load x3 with value 0x1ef6a836
sw x3, 0(x2) # store 0x1ef6a836 in memory
flw f11, 0(x2) # load 0x1ef6a836 from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmadd.s f26, f23, f11, f15, dyn # perform operation
fmadd.s f26, f23, f11, f15, rdn # perform operation
fmadd.s f26, f23, f11, f15, rmm # perform operation
fmadd.s f26, f23, f11, f15, rne # perform operation
fmadd.s f26, f23, f11, f15, rtz # perform operation
fmadd.s f26, f23, f11, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f11, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f11, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0x28b7e6fb # load x3 with value 0x28b7e6fb
sw x3, 0(x2) # store 0x28b7e6fb in memory
flw f1, 0(x2) # load 0x28b7e6fb from memory into f1
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f29, f3, f1, f18, dyn # perform operation
fmadd.s f29, f3, f1, f18, rdn # perform operation
fmadd.s f29, f3, f1, f18, rmm # perform operation
fmadd.s f29, f3, f1, f18, rne # perform operation
fmadd.s f29, f3, f1, f18, rtz # perform operation
fmadd.s f29, f3, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f1, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
la x2, scratch
li x3, 0x23e5fdba # load x3 with value 0x23e5fdba
sw x3, 0(x2) # store 0x23e5fdba in memory
flw f3, 0(x2) # load 0x23e5fdba from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f7, f5, f3, f27, dyn # perform operation
fmadd.s f7, f5, f3, f27, rdn # perform operation
fmadd.s f7, f5, f3, f27, rmm # perform operation
fmadd.s f7, f5, f3, f27, rne # perform operation
fmadd.s f7, f5, f3, f27, rtz # perform operation
fmadd.s f7, f5, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f3, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x153948c0 # load x3 with value 0x153948c0
sw x3, 0(x2) # store 0x153948c0 in memory
flw f31, 0(x2) # load 0x153948c0 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
fmadd.s f3, f2, f31, f6, dyn # perform operation
fmadd.s f3, f2, f31, f6, rdn # perform operation
fmadd.s f3, f2, f31, f6, rmm # perform operation
fmadd.s f3, f2, f31, f6, rne # perform operation
fmadd.s f3, f2, f31, f6, rtz # perform operation
fmadd.s f3, f2, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f31, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
la x2, scratch
li x3, 0x57eb31a7 # load x3 with value 0x57eb31a7
sw x3, 0(x2) # store 0x57eb31a7 in memory
flw f19, 0(x2) # load 0x57eb31a7 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f25, f7, f19, f22, dyn # perform operation
fmadd.s f25, f7, f19, f22, rdn # perform operation
fmadd.s f25, f7, f19, f22, rmm # perform operation
fmadd.s f25, f7, f19, f22, rne # perform operation
fmadd.s f25, f7, f19, f22, rtz # perform operation
fmadd.s f25, f7, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
la x2, scratch
li x3, 0x511610b6 # load x3 with value 0x511610b6
sw x3, 0(x2) # store 0x511610b6 in memory
flw f3, 0(x2) # load 0x511610b6 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmadd.s f29, f31, f3, f14, dyn # perform operation
fmadd.s f29, f31, f3, f14, rdn # perform operation
fmadd.s f29, f31, f3, f14, rmm # perform operation
fmadd.s f29, f31, f3, f14, rne # perform operation
fmadd.s f29, f31, f3, f14, rtz # perform operation
fmadd.s f29, f31, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
la x2, scratch
li x3, 0x315af1c6 # load x3 with value 0x315af1c6
sw x3, 0(x2) # store 0x315af1c6 in memory
flw f6, 0(x2) # load 0x315af1c6 from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmadd.s f15, f14, f6, f3, dyn # perform operation
fmadd.s f15, f14, f6, f3, rdn # perform operation
fmadd.s f15, f14, f6, f3, rmm # perform operation
fmadd.s f15, f14, f6, f3, rne # perform operation
fmadd.s f15, f14, f6, f3, rtz # perform operation
fmadd.s f15, f14, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
la x2, scratch
li x3, 0xebd9cb86 # load x3 with value 0xebd9cb86
sw x3, 0(x2) # store 0xebd9cb86 in memory
flw f12, 0(x2) # load 0xebd9cb86 from memory into f12
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fmadd.s f1, f19, f12, f15, dyn # perform operation
fmadd.s f1, f19, f12, f15, rdn # perform operation
fmadd.s f1, f19, f12, f15, rmm # perform operation
fmadd.s f1, f19, f12, f15, rne # perform operation
fmadd.s f1, f19, f12, f15, rtz # perform operation
fmadd.s f1, f19, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f19, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f19, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f19, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f19, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f19, f12, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0x2422d482 # load x3 with value 0x2422d482
sw x3, 0(x2) # store 0x2422d482 in memory
flw f22, 0(x2) # load 0x2422d482 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f11, f18, f22, f1, dyn # perform operation
fmadd.s f11, f18, f22, f1, rdn # perform operation
fmadd.s f11, f18, f22, f1, rmm # perform operation
fmadd.s f11, f18, f22, f1, rne # perform operation
fmadd.s f11, f18, f22, f1, rtz # perform operation
fmadd.s f11, f18, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f18, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f18, f22, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
la x2, scratch
li x3, 0xe3211105 # load x3 with value 0xe3211105
sw x3, 0(x2) # store 0xe3211105 in memory
flw f2, 0(x2) # load 0xe3211105 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmadd.s f30, f21, f2, f12, dyn # perform operation
fmadd.s f30, f21, f2, f12, rdn # perform operation
fmadd.s f30, f21, f2, f12, rmm # perform operation
fmadd.s f30, f21, f2, f12, rne # perform operation
fmadd.s f30, f21, f2, f12, rtz # perform operation
fmadd.s f30, f21, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
la x2, scratch
li x3, 0x86f0dd90 # load x3 with value 0x86f0dd90
sw x3, 0(x2) # store 0x86f0dd90 in memory
flw f15, 0(x2) # load 0x86f0dd90 from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmadd.s f22, f8, f15, f28, dyn # perform operation
fmadd.s f22, f8, f15, f28, rdn # perform operation
fmadd.s f22, f8, f15, f28, rmm # perform operation
fmadd.s f22, f8, f15, f28, rne # perform operation
fmadd.s f22, f8, f15, f28, rtz # perform operation
fmadd.s f22, f8, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
la x2, scratch
li x3, 0x852354e9 # load x3 with value 0x852354e9
sw x3, 0(x2) # store 0x852354e9 in memory
flw f19, 0(x2) # load 0x852354e9 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmadd.s f6, f23, f19, f14, dyn # perform operation
fmadd.s f6, f23, f19, f14, rdn # perform operation
fmadd.s f6, f23, f19, f14, rmm # perform operation
fmadd.s f6, f23, f19, f14, rne # perform operation
fmadd.s f6, f23, f19, f14, rtz # perform operation
fmadd.s f6, f23, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f23, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f23, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f23, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f23, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f23, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0xf88ec1ea # load x3 with value 0xf88ec1ea
sw x3, 0(x2) # store 0xf88ec1ea in memory
flw f19, 0(x2) # load 0xf88ec1ea from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmadd.s f1, f9, f19, f10, dyn # perform operation
fmadd.s f1, f9, f19, f10, rdn # perform operation
fmadd.s f1, f9, f19, f10, rmm # perform operation
fmadd.s f1, f9, f19, f10, rne # perform operation
fmadd.s f1, f9, f19, f10, rtz # perform operation
fmadd.s f1, f9, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
la x2, scratch
li x3, 0xa9e26782 # load x3 with value 0xa9e26782
sw x3, 0(x2) # store 0xa9e26782 in memory
flw f1, 0(x2) # load 0xa9e26782 from memory into f1
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
fmadd.s f17, f18, f1, f20, dyn # perform operation
fmadd.s f17, f18, f1, f20, rdn # perform operation
fmadd.s f17, f18, f1, f20, rmm # perform operation
fmadd.s f17, f18, f1, f20, rne # perform operation
fmadd.s f17, f18, f1, f20, rtz # perform operation
fmadd.s f17, f18, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f1, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
la x2, scratch
li x3, 0x120dacc4 # load x3 with value 0x120dacc4
sw x3, 0(x2) # store 0x120dacc4 in memory
flw f26, 0(x2) # load 0x120dacc4 from memory into f26
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
fmadd.s f22, f25, f26, f20, dyn # perform operation
fmadd.s f22, f25, f26, f20, rdn # perform operation
fmadd.s f22, f25, f26, f20, rmm # perform operation
fmadd.s f22, f25, f26, f20, rne # perform operation
fmadd.s f22, f25, f26, f20, rtz # perform operation
fmadd.s f22, f25, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f25, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f25, f26, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0xcba0eac4 # load x3 with value 0xcba0eac4
sw x3, 0(x2) # store 0xcba0eac4 in memory
flw f11, 0(x2) # load 0xcba0eac4 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmadd.s f7, f2, f11, f10, dyn # perform operation
fmadd.s f7, f2, f11, f10, rdn # perform operation
fmadd.s f7, f2, f11, f10, rmm # perform operation
fmadd.s f7, f2, f11, f10, rne # perform operation
fmadd.s f7, f2, f11, f10, rtz # perform operation
fmadd.s f7, f2, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
la x2, scratch
li x3, 0x825a5a8b # load x3 with value 0x825a5a8b
sw x3, 0(x2) # store 0x825a5a8b in memory
flw f23, 0(x2) # load 0x825a5a8b from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
fmadd.s f22, f10, f23, f28, dyn # perform operation
fmadd.s f22, f10, f23, f28, rdn # perform operation
fmadd.s f22, f10, f23, f28, rmm # perform operation
fmadd.s f22, f10, f23, f28, rne # perform operation
fmadd.s f22, f10, f23, f28, rtz # perform operation
fmadd.s f22, f10, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xd31edb1b # load x3 with value 0xd31edb1b
sw x3, 0(x2) # store 0xd31edb1b in memory
flw f27, 0(x2) # load 0xd31edb1b from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f10, f3, f27, f8, dyn # perform operation
fmadd.s f10, f3, f27, f8, rdn # perform operation
fmadd.s f10, f3, f27, f8, rmm # perform operation
fmadd.s f10, f3, f27, f8, rne # perform operation
fmadd.s f10, f3, f27, f8, rtz # perform operation
fmadd.s f10, f3, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f3, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f3, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f3, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f3, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f3, f27, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
la x2, scratch
li x3, 0xe368f998 # load x3 with value 0xe368f998
sw x3, 0(x2) # store 0xe368f998 in memory
flw f29, 0(x2) # load 0xe368f998 from memory into f29
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmadd.s f1, f3, f29, f19, dyn # perform operation
fmadd.s f1, f3, f29, f19, rdn # perform operation
fmadd.s f1, f3, f29, f19, rmm # perform operation
fmadd.s f1, f3, f29, f19, rne # perform operation
fmadd.s f1, f3, f29, f19, rtz # perform operation
fmadd.s f1, f3, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f29, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
la x2, scratch
li x3, 0xbd0f2ca5 # load x3 with value 0xbd0f2ca5
sw x3, 0(x2) # store 0xbd0f2ca5 in memory
flw f10, 0(x2) # load 0xbd0f2ca5 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fmadd.s f7, f16, f10, f3, dyn # perform operation
fmadd.s f7, f16, f10, f3, rdn # perform operation
fmadd.s f7, f16, f10, f3, rmm # perform operation
fmadd.s f7, f16, f10, f3, rne # perform operation
fmadd.s f7, f16, f10, f3, rtz # perform operation
fmadd.s f7, f16, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f16, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f16, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
la x2, scratch
li x3, 0xa1b0f207 # load x3 with value 0xa1b0f207
sw x3, 0(x2) # store 0xa1b0f207 in memory
flw f17, 0(x2) # load 0xa1b0f207 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmadd.s f23, f11, f17, f30, dyn # perform operation
fmadd.s f23, f11, f17, f30, rdn # perform operation
fmadd.s f23, f11, f17, f30, rmm # perform operation
fmadd.s f23, f11, f17, f30, rne # perform operation
fmadd.s f23, f11, f17, f30, rtz # perform operation
fmadd.s f23, f11, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f17, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
la x2, scratch
li x3, 0x44991997 # load x3 with value 0x44991997
sw x3, 0(x2) # store 0x44991997 in memory
flw f29, 0(x2) # load 0x44991997 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f2, 0(x2) # load 0xffffffff from memory into f2
fmadd.s f18, f12, f29, f2, dyn # perform operation
fmadd.s f18, f12, f29, f2, rdn # perform operation
fmadd.s f18, f12, f29, f2, rmm # perform operation
fmadd.s f18, f12, f29, f2, rne # perform operation
fmadd.s f18, f12, f29, f2, rtz # perform operation
fmadd.s f18, f12, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f29, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
la x2, scratch
li x3, 0x1861d51c # load x3 with value 0x1861d51c
sw x3, 0(x2) # store 0x1861d51c in memory
flw f20, 0(x2) # load 0x1861d51c from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmadd.s f7, f2, f20, f9, dyn # perform operation
fmadd.s f7, f2, f20, f9, rdn # perform operation
fmadd.s f7, f2, f20, f9, rmm # perform operation
fmadd.s f7, f2, f20, f9, rne # perform operation
fmadd.s f7, f2, f20, f9, rtz # perform operation
fmadd.s f7, f2, f20, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f20, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f20, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
la x2, scratch
li x3, 0x6a5129b3 # load x3 with value 0x6a5129b3
sw x3, 0(x2) # store 0x6a5129b3 in memory
flw f5, 0(x2) # load 0x6a5129b3 from memory into f5
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmadd.s f2, f22, f5, f9, dyn # perform operation
fmadd.s f2, f22, f5, f9, rdn # perform operation
fmadd.s f2, f22, f5, f9, rmm # perform operation
fmadd.s f2, f22, f5, f9, rne # perform operation
fmadd.s f2, f22, f5, f9, rtz # perform operation
fmadd.s f2, f22, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
la x2, scratch
li x3, 0x56b268ba # load x3 with value 0x56b268ba
sw x3, 0(x2) # store 0x56b268ba in memory
flw f13, 0(x2) # load 0x56b268ba from memory into f13
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fmadd.s f15, f17, f13, f6, dyn # perform operation
fmadd.s f15, f17, f13, f6, rdn # perform operation
fmadd.s f15, f17, f13, f6, rmm # perform operation
fmadd.s f15, f17, f13, f6, rne # perform operation
fmadd.s f15, f17, f13, f6, rtz # perform operation
fmadd.s f15, f17, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f13, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
la x2, scratch
li x3, 0x228863ed # load x3 with value 0x228863ed
sw x3, 0(x2) # store 0x228863ed in memory
flw f26, 0(x2) # load 0x228863ed from memory into f26
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fmadd.s f8, f28, f26, f12, dyn # perform operation
fmadd.s f8, f28, f26, f12, rdn # perform operation
fmadd.s f8, f28, f26, f12, rmm # perform operation
fmadd.s f8, f28, f26, f12, rne # perform operation
fmadd.s f8, f28, f26, f12, rtz # perform operation
fmadd.s f8, f28, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f28, f26, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
la x2, scratch
li x3, 0x07c91079 # load x3 with value 0x07c91079
sw x3, 0(x2) # store 0x07c91079 in memory
flw f24, 0(x2) # load 0x07c91079 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f28, f9, f24, f13, dyn # perform operation
fmadd.s f28, f9, f24, f13, rdn # perform operation
fmadd.s f28, f9, f24, f13, rmm # perform operation
fmadd.s f28, f9, f24, f13, rne # perform operation
fmadd.s f28, f9, f24, f13, rtz # perform operation
fmadd.s f28, f9, f24, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f24, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f24, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f24, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f24, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f24, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xe33e7aec # load x3 with value 0xe33e7aec
sw x3, 0(x2) # store 0xe33e7aec in memory
flw f11, 0(x2) # load 0xe33e7aec from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fmadd.s f20, f7, f11, f29, dyn # perform operation
fmadd.s f20, f7, f11, f29, rdn # perform operation
fmadd.s f20, f7, f11, f29, rmm # perform operation
fmadd.s f20, f7, f11, f29, rne # perform operation
fmadd.s f20, f7, f11, f29, rtz # perform operation
fmadd.s f20, f7, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f7, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f7, f11, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x09c708d6 # load x3 with value 0x09c708d6
sw x3, 0(x2) # store 0x09c708d6 in memory
flw f24, 0(x2) # load 0x09c708d6 from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmadd.s f20, f13, f24, f12, dyn # perform operation
fmadd.s f20, f13, f24, f12, rdn # perform operation
fmadd.s f20, f13, f24, f12, rmm # perform operation
fmadd.s f20, f13, f24, f12, rne # perform operation
fmadd.s f20, f13, f24, f12, rtz # perform operation
fmadd.s f20, f13, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f13, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f13, f24, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
la x2, scratch
li x3, 0x7174a9d2 # load x3 with value 0x7174a9d2
sw x3, 0(x2) # store 0x7174a9d2 in memory
flw f7, 0(x2) # load 0x7174a9d2 from memory into f7
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmadd.s f1, f23, f7, f22, dyn # perform operation
fmadd.s f1, f23, f7, f22, rdn # perform operation
fmadd.s f1, f23, f7, f22, rmm # perform operation
fmadd.s f1, f23, f7, f22, rne # perform operation
fmadd.s f1, f23, f7, f22, rtz # perform operation
fmadd.s f1, f23, f7, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f23, f7, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f23, f7, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
la x2, scratch
li x3, 0xcf6475db # load x3 with value 0xcf6475db
sw x3, 0(x2) # store 0xcf6475db in memory
flw f30, 0(x2) # load 0xcf6475db from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmadd.s f19, f17, f30, f24, dyn # perform operation
fmadd.s f19, f17, f30, f24, rdn # perform operation
fmadd.s f19, f17, f30, f24, rmm # perform operation
fmadd.s f19, f17, f30, f24, rne # perform operation
fmadd.s f19, f17, f30, f24, rtz # perform operation
fmadd.s f19, f17, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f30, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
la x2, scratch
li x3, 0x43d5020f # load x3 with value 0x43d5020f
sw x3, 0(x2) # store 0x43d5020f in memory
flw f27, 0(x2) # load 0x43d5020f from memory into f27
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f14, f12, f27, f16, dyn # perform operation
fmadd.s f14, f12, f27, f16, rdn # perform operation
fmadd.s f14, f12, f27, f16, rmm # perform operation
fmadd.s f14, f12, f27, f16, rne # perform operation
fmadd.s f14, f12, f27, f16, rtz # perform operation
fmadd.s f14, f12, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0xce7aa1d7 # load x3 with value 0xce7aa1d7
sw x3, 0(x2) # store 0xce7aa1d7 in memory
flw f17, 0(x2) # load 0xce7aa1d7 from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmadd.s f31, f19, f17, f28, dyn # perform operation
fmadd.s f31, f19, f17, f28, rdn # perform operation
fmadd.s f31, f19, f17, f28, rmm # perform operation
fmadd.s f31, f19, f17, f28, rne # perform operation
fmadd.s f31, f19, f17, f28, rtz # perform operation
fmadd.s f31, f19, f17, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f17, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f17, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0x05e08791 # load x3 with value 0x05e08791
sw x3, 0(x2) # store 0x05e08791 in memory
flw f8, 0(x2) # load 0x05e08791 from memory into f8
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
fmadd.s f18, f9, f8, f14, dyn # perform operation
fmadd.s f18, f9, f8, f14, rdn # perform operation
fmadd.s f18, f9, f8, f14, rmm # perform operation
fmadd.s f18, f9, f8, f14, rne # perform operation
fmadd.s f18, f9, f8, f14, rtz # perform operation
fmadd.s f18, f9, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f9, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f9, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
la x2, scratch
li x3, 0x19da65b3 # load x3 with value 0x19da65b3
sw x3, 0(x2) # store 0x19da65b3 in memory
flw f1, 0(x2) # load 0x19da65b3 from memory into f1
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmadd.s f19, f11, f1, f9, dyn # perform operation
fmadd.s f19, f11, f1, f9, rdn # perform operation
fmadd.s f19, f11, f1, f9, rmm # perform operation
fmadd.s f19, f11, f1, f9, rne # perform operation
fmadd.s f19, f11, f1, f9, rtz # perform operation
fmadd.s f19, f11, f1, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f1, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f1, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
la x2, scratch
li x3, 0xb46993a6 # load x3 with value 0xb46993a6
sw x3, 0(x2) # store 0xb46993a6 in memory
flw f10, 0(x2) # load 0xb46993a6 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fmadd.s f18, f9, f10, f30, dyn # perform operation
fmadd.s f18, f9, f10, f30, rdn # perform operation
fmadd.s f18, f9, f10, f30, rmm # perform operation
fmadd.s f18, f9, f10, f30, rne # perform operation
fmadd.s f18, f9, f10, f30, rtz # perform operation
fmadd.s f18, f9, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f9, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f9, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f9, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f9, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f9, f10, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x43144dcd # load x3 with value 0x43144dcd
sw x3, 0(x2) # store 0x43144dcd in memory
flw f15, 0(x2) # load 0x43144dcd from memory into f15
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fmadd.s f28, f20, f15, f8, dyn # perform operation
fmadd.s f28, f20, f15, f8, rdn # perform operation
fmadd.s f28, f20, f15, f8, rmm # perform operation
fmadd.s f28, f20, f15, f8, rne # perform operation
fmadd.s f28, f20, f15, f8, rtz # perform operation
fmadd.s f28, f20, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f20, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f20, f15, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xb5541317 # load x3 with value 0xb5541317
sw x3, 0(x2) # store 0xb5541317 in memory
flw f20, 0(x2) # load 0xb5541317 from memory into f20
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
fmadd.s f14, f31, f20, f15, dyn # perform operation
fmadd.s f14, f31, f20, f15, rdn # perform operation
fmadd.s f14, f31, f20, f15, rmm # perform operation
fmadd.s f14, f31, f20, f15, rne # perform operation
fmadd.s f14, f31, f20, f15, rtz # perform operation
fmadd.s f14, f31, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f31, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f31, f20, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
la x2, scratch
li x3, 0x4e3fe746 # load x3 with value 0x4e3fe746
sw x3, 0(x2) # store 0x4e3fe746 in memory
flw f25, 0(x2) # load 0x4e3fe746 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmadd.s f13, f6, f25, f24, dyn # perform operation
fmadd.s f13, f6, f25, f24, rdn # perform operation
fmadd.s f13, f6, f25, f24, rmm # perform operation
fmadd.s f13, f6, f25, f24, rne # perform operation
fmadd.s f13, f6, f25, f24, rtz # perform operation
fmadd.s f13, f6, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0x1bc96197 # load x3 with value 0x1bc96197
sw x3, 0(x2) # store 0x1bc96197 in memory
flw f28, 0(x2) # load 0x1bc96197 from memory into f28
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
fmadd.s f1, f16, f28, f18, dyn # perform operation
fmadd.s f1, f16, f28, f18, rdn # perform operation
fmadd.s f1, f16, f28, f18, rmm # perform operation
fmadd.s f1, f16, f28, f18, rne # perform operation
fmadd.s f1, f16, f28, f18, rtz # perform operation
fmadd.s f1, f16, f28, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f16, f28, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f16, f28, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f16, f28, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f16, f28, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f16, f28, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
la x2, scratch
li x3, 0xac2ea6c3 # load x3 with value 0xac2ea6c3
sw x3, 0(x2) # store 0xac2ea6c3 in memory
flw f5, 0(x2) # load 0xac2ea6c3 from memory into f5
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmadd.s f2, f31, f5, f6, dyn # perform operation
fmadd.s f2, f31, f5, f6, rdn # perform operation
fmadd.s f2, f31, f5, f6, rmm # perform operation
fmadd.s f2, f31, f5, f6, rne # perform operation
fmadd.s f2, f31, f5, f6, rtz # perform operation
fmadd.s f2, f31, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f5, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
la x2, scratch
li x3, 0xf685b5ed # load x3 with value 0xf685b5ed
sw x3, 0(x2) # store 0xf685b5ed in memory
flw f20, 0(x2) # load 0xf685b5ed from memory into f20
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
fmadd.s f10, f25, f20, f19, dyn # perform operation
fmadd.s f10, f25, f20, f19, rdn # perform operation
fmadd.s f10, f25, f20, f19, rmm # perform operation
fmadd.s f10, f25, f20, f19, rne # perform operation
fmadd.s f10, f25, f20, f19, rtz # perform operation
fmadd.s f10, f25, f20, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f20, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f20, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f20, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f20, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f20, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x6d44bc96 # load x3 with value 0x6d44bc96
sw x3, 0(x2) # store 0x6d44bc96 in memory
flw f7, 0(x2) # load 0x6d44bc96 from memory into f7
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f2, f1, f7, f31, dyn # perform operation
fmadd.s f2, f1, f7, f31, rdn # perform operation
fmadd.s f2, f1, f7, f31, rmm # perform operation
fmadd.s f2, f1, f7, f31, rne # perform operation
fmadd.s f2, f1, f7, f31, rtz # perform operation
fmadd.s f2, f1, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f7, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
la x2, scratch
li x3, 0x62af84a8 # load x3 with value 0x62af84a8
sw x3, 0(x2) # store 0x62af84a8 in memory
flw f22, 0(x2) # load 0x62af84a8 from memory into f22
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
fmadd.s f8, f1, f22, f29, dyn # perform operation
fmadd.s f8, f1, f22, f29, rdn # perform operation
fmadd.s f8, f1, f22, f29, rmm # perform operation
fmadd.s f8, f1, f22, f29, rne # perform operation
fmadd.s f8, f1, f22, f29, rtz # perform operation
fmadd.s f8, f1, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f1, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f1, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
la x2, scratch
li x3, 0x16f30824 # load x3 with value 0x16f30824
sw x3, 0(x2) # store 0x16f30824 in memory
flw f28, 0(x2) # load 0x16f30824 from memory into f28
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmadd.s f11, f21, f28, f22, dyn # perform operation
fmadd.s f11, f21, f28, f22, rdn # perform operation
fmadd.s f11, f21, f28, f22, rmm # perform operation
fmadd.s f11, f21, f28, f22, rne # perform operation
fmadd.s f11, f21, f28, f22, rtz # perform operation
fmadd.s f11, f21, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f21, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f21, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f21, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f21, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f21, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
la x2, scratch
li x3, 0x7613b944 # load x3 with value 0x7613b944
sw x3, 0(x2) # store 0x7613b944 in memory
flw f9, 0(x2) # load 0x7613b944 from memory into f9
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fmadd.s f26, f13, f9, f16, dyn # perform operation
fmadd.s f26, f13, f9, f16, rdn # perform operation
fmadd.s f26, f13, f9, f16, rmm # perform operation
fmadd.s f26, f13, f9, f16, rne # perform operation
fmadd.s f26, f13, f9, f16, rtz # perform operation
fmadd.s f26, f13, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f9, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
la x2, scratch
li x3, 0x4649e31d # load x3 with value 0x4649e31d
sw x3, 0(x2) # store 0x4649e31d in memory
flw f13, 0(x2) # load 0x4649e31d from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f3, f19, f13, f10, dyn # perform operation
fmadd.s f3, f19, f13, f10, rdn # perform operation
fmadd.s f3, f19, f13, f10, rmm # perform operation
fmadd.s f3, f19, f13, f10, rne # perform operation
fmadd.s f3, f19, f13, f10, rtz # perform operation
fmadd.s f3, f19, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
la x2, scratch
li x3, 0xb9d08eb9 # load x3 with value 0xb9d08eb9
sw x3, 0(x2) # store 0xb9d08eb9 in memory
flw f27, 0(x2) # load 0xb9d08eb9 from memory into f27
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f31, f2, f27, f5, dyn # perform operation
fmadd.s f31, f2, f27, f5, rdn # perform operation
fmadd.s f31, f2, f27, f5, rmm # perform operation
fmadd.s f31, f2, f27, f5, rne # perform operation
fmadd.s f31, f2, f27, f5, rtz # perform operation
fmadd.s f31, f2, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f2, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
la x2, scratch
li x3, 0xa1b041d2 # load x3 with value 0xa1b041d2
sw x3, 0(x2) # store 0xa1b041d2 in memory
flw f17, 0(x2) # load 0xa1b041d2 from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
fmadd.s f28, f8, f17, f16, dyn # perform operation
fmadd.s f28, f8, f17, f16, rdn # perform operation
fmadd.s f28, f8, f17, f16, rmm # perform operation
fmadd.s f28, f8, f17, f16, rne # perform operation
fmadd.s f28, f8, f17, f16, rtz # perform operation
fmadd.s f28, f8, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f17, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
la x2, scratch
li x3, 0x4b559893 # load x3 with value 0x4b559893
sw x3, 0(x2) # store 0x4b559893 in memory
flw f5, 0(x2) # load 0x4b559893 from memory into f5
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
fmadd.s f17, f20, f5, f11, dyn # perform operation
fmadd.s f17, f20, f5, f11, rdn # perform operation
fmadd.s f17, f20, f5, f11, rmm # perform operation
fmadd.s f17, f20, f5, f11, rne # perform operation
fmadd.s f17, f20, f5, f11, rtz # perform operation
fmadd.s f17, f20, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f5, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
la x2, scratch
li x3, 0xf0123571 # load x3 with value 0xf0123571
sw x3, 0(x2) # store 0xf0123571 in memory
flw f25, 0(x2) # load 0xf0123571 from memory into f25
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmadd.s f16, f14, f25, f3, dyn # perform operation
fmadd.s f16, f14, f25, f3, rdn # perform operation
fmadd.s f16, f14, f25, f3, rmm # perform operation
fmadd.s f16, f14, f25, f3, rne # perform operation
fmadd.s f16, f14, f25, f3, rtz # perform operation
fmadd.s f16, f14, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f25, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
la x2, scratch
li x3, 0x1fcfaaf1 # load x3 with value 0x1fcfaaf1
sw x3, 0(x2) # store 0x1fcfaaf1 in memory
flw f28, 0(x2) # load 0x1fcfaaf1 from memory into f28
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f29, f27, f28, f1, dyn # perform operation
fmadd.s f29, f27, f28, f1, rdn # perform operation
fmadd.s f29, f27, f28, f1, rmm # perform operation
fmadd.s f29, f27, f28, f1, rne # perform operation
fmadd.s f29, f27, f28, f1, rtz # perform operation
fmadd.s f29, f27, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f28, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
la x2, scratch
li x3, 0xe88f9083 # load x3 with value 0xe88f9083
sw x3, 0(x2) # store 0xe88f9083 in memory
flw f6, 0(x2) # load 0xe88f9083 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
fmadd.s f13, f16, f6, f21, dyn # perform operation
fmadd.s f13, f16, f6, f21, rdn # perform operation
fmadd.s f13, f16, f6, f21, rmm # perform operation
fmadd.s f13, f16, f6, f21, rne # perform operation
fmadd.s f13, f16, f6, f21, rtz # perform operation
fmadd.s f13, f16, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f6, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
la x2, scratch
li x3, 0xdda69ed9 # load x3 with value 0xdda69ed9
sw x3, 0(x2) # store 0xdda69ed9 in memory
flw f23, 0(x2) # load 0xdda69ed9 from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f9, f7, f23, f31, dyn # perform operation
fmadd.s f9, f7, f23, f31, rdn # perform operation
fmadd.s f9, f7, f23, f31, rmm # perform operation
fmadd.s f9, f7, f23, f31, rne # perform operation
fmadd.s f9, f7, f23, f31, rtz # perform operation
fmadd.s f9, f7, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f23, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
la x2, scratch
li x3, 0xf5b55510 # load x3 with value 0xf5b55510
sw x3, 0(x2) # store 0xf5b55510 in memory
flw f16, 0(x2) # load 0xf5b55510 from memory into f16
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f24, f26, f16, f20, dyn # perform operation
fmadd.s f24, f26, f16, f20, rdn # perform operation
fmadd.s f24, f26, f16, f20, rmm # perform operation
fmadd.s f24, f26, f16, f20, rne # perform operation
fmadd.s f24, f26, f16, f20, rtz # perform operation
fmadd.s f24, f26, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xbd215142 # load x3 with value 0xbd215142
sw x3, 0(x2) # store 0xbd215142 in memory
flw f2, 0(x2) # load 0xbd215142 from memory into f2
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
fmadd.s f23, f29, f2, f5, dyn # perform operation
fmadd.s f23, f29, f2, f5, rdn # perform operation
fmadd.s f23, f29, f2, f5, rmm # perform operation
fmadd.s f23, f29, f2, f5, rne # perform operation
fmadd.s f23, f29, f2, f5, rtz # perform operation
fmadd.s f23, f29, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f2, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0xdd62a5ca # load x3 with value 0xdd62a5ca
sw x3, 0(x2) # store 0xdd62a5ca in memory
flw f20, 0(x2) # load 0xdd62a5ca from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f7, f21, f20, f1, dyn # perform operation
fmadd.s f7, f21, f20, f1, rdn # perform operation
fmadd.s f7, f21, f20, f1, rmm # perform operation
fmadd.s f7, f21, f20, f1, rne # perform operation
fmadd.s f7, f21, f20, f1, rtz # perform operation
fmadd.s f7, f21, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
la x2, scratch
li x3, 0xa033a918 # load x3 with value 0xa033a918
sw x3, 0(x2) # store 0xa033a918 in memory
flw f27, 0(x2) # load 0xa033a918 from memory into f27
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
fmadd.s f3, f29, f27, f25, dyn # perform operation
fmadd.s f3, f29, f27, f25, rdn # perform operation
fmadd.s f3, f29, f27, f25, rmm # perform operation
fmadd.s f3, f29, f27, f25, rne # perform operation
fmadd.s f3, f29, f27, f25, rtz # perform operation
fmadd.s f3, f29, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f29, f27, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
la x2, scratch
li x3, 0x4a811ae8 # load x3 with value 0x4a811ae8
sw x3, 0(x2) # store 0x4a811ae8 in memory
flw f30, 0(x2) # load 0x4a811ae8 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f17, f2, f30, f8, dyn # perform operation
fmadd.s f17, f2, f30, f8, rdn # perform operation
fmadd.s f17, f2, f30, f8, rmm # perform operation
fmadd.s f17, f2, f30, f8, rne # perform operation
fmadd.s f17, f2, f30, f8, rtz # perform operation
fmadd.s f17, f2, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f30, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
la x2, scratch
li x3, 0xca4ed45c # load x3 with value 0xca4ed45c
sw x3, 0(x2) # store 0xca4ed45c in memory
flw f2, 0(x2) # load 0xca4ed45c from memory into f2
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f25, f13, f2, f15, dyn # perform operation
fmadd.s f25, f13, f2, f15, rdn # perform operation
fmadd.s f25, f13, f2, f15, rmm # perform operation
fmadd.s f25, f13, f2, f15, rne # perform operation
fmadd.s f25, f13, f2, f15, rtz # perform operation
fmadd.s f25, f13, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0xefc49a63 # load x3 with value 0xefc49a63
sw x3, 0(x2) # store 0xefc49a63 in memory
flw f14, 0(x2) # load 0xefc49a63 from memory into f14
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmadd.s f10, f7, f14, f2, dyn # perform operation
fmadd.s f10, f7, f14, f2, rdn # perform operation
fmadd.s f10, f7, f14, f2, rmm # perform operation
fmadd.s f10, f7, f14, f2, rne # perform operation
fmadd.s f10, f7, f14, f2, rtz # perform operation
fmadd.s f10, f7, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
la x2, scratch
li x3, 0x6a6db88a # load x3 with value 0x6a6db88a
sw x3, 0(x2) # store 0x6a6db88a in memory
flw f14, 0(x2) # load 0x6a6db88a from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmadd.s f30, f12, f14, f22, dyn # perform operation
fmadd.s f30, f12, f14, f22, rdn # perform operation
fmadd.s f30, f12, f14, f22, rmm # perform operation
fmadd.s f30, f12, f14, f22, rne # perform operation
fmadd.s f30, f12, f14, f22, rtz # perform operation
fmadd.s f30, f12, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0x3c674cea # load x3 with value 0x3c674cea
sw x3, 0(x2) # store 0x3c674cea in memory
flw f21, 0(x2) # load 0x3c674cea from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmadd.s f24, f30, f21, f23, dyn # perform operation
fmadd.s f24, f30, f21, f23, rdn # perform operation
fmadd.s f24, f30, f21, f23, rmm # perform operation
fmadd.s f24, f30, f21, f23, rne # perform operation
fmadd.s f24, f30, f21, f23, rtz # perform operation
fmadd.s f24, f30, f21, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f21, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f21, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x719fed68 # load x3 with value 0x719fed68
sw x3, 0(x2) # store 0x719fed68 in memory
flw f31, 0(x2) # load 0x719fed68 from memory into f31
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fmadd.s f10, f28, f31, f5, dyn # perform operation
fmadd.s f10, f28, f31, f5, rdn # perform operation
fmadd.s f10, f28, f31, f5, rmm # perform operation
fmadd.s f10, f28, f31, f5, rne # perform operation
fmadd.s f10, f28, f31, f5, rtz # perform operation
fmadd.s f10, f28, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f31, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0xac349085 # load x3 with value 0xac349085
sw x3, 0(x2) # store 0xac349085 in memory
flw f10, 0(x2) # load 0xac349085 from memory into f10
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f25, f15, f10, f29, dyn # perform operation
fmadd.s f25, f15, f10, f29, rdn # perform operation
fmadd.s f25, f15, f10, f29, rmm # perform operation
fmadd.s f25, f15, f10, f29, rne # perform operation
fmadd.s f25, f15, f10, f29, rtz # perform operation
fmadd.s f25, f15, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f10, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
la x2, scratch
li x3, 0x051be406 # load x3 with value 0x051be406
sw x3, 0(x2) # store 0x051be406 in memory
flw f8, 0(x2) # load 0x051be406 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f14, f7, f8, f30, dyn # perform operation
fmadd.s f14, f7, f8, f30, rdn # perform operation
fmadd.s f14, f7, f8, f30, rmm # perform operation
fmadd.s f14, f7, f8, f30, rne # perform operation
fmadd.s f14, f7, f8, f30, rtz # perform operation
fmadd.s f14, f7, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0x2710fb82 # load x3 with value 0x2710fb82
sw x3, 0(x2) # store 0x2710fb82 in memory
flw f1, 0(x2) # load 0x2710fb82 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f10, f20, f1, f30, dyn # perform operation
fmadd.s f10, f20, f1, f30, rdn # perform operation
fmadd.s f10, f20, f1, f30, rmm # perform operation
fmadd.s f10, f20, f1, f30, rne # perform operation
fmadd.s f10, f20, f1, f30, rtz # perform operation
fmadd.s f10, f20, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f1, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
la x2, scratch
li x3, 0x922e177a # load x3 with value 0x922e177a
sw x3, 0(x2) # store 0x922e177a in memory
flw f20, 0(x2) # load 0x922e177a from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f7, f3, f20, f25, dyn # perform operation
fmadd.s f7, f3, f20, f25, rdn # perform operation
fmadd.s f7, f3, f20, f25, rmm # perform operation
fmadd.s f7, f3, f20, f25, rne # perform operation
fmadd.s f7, f3, f20, f25, rtz # perform operation
fmadd.s f7, f3, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
la x2, scratch
li x3, 0x1ef21a40 # load x3 with value 0x1ef21a40
sw x3, 0(x2) # store 0x1ef21a40 in memory
flw f7, 0(x2) # load 0x1ef21a40 from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmadd.s f24, f15, f7, f13, dyn # perform operation
fmadd.s f24, f15, f7, f13, rdn # perform operation
fmadd.s f24, f15, f7, f13, rmm # perform operation
fmadd.s f24, f15, f7, f13, rne # perform operation
fmadd.s f24, f15, f7, f13, rtz # perform operation
fmadd.s f24, f15, f7, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f7, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f7, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
la x2, scratch
li x3, 0x8a5aad40 # load x3 with value 0x8a5aad40
sw x3, 0(x2) # store 0x8a5aad40 in memory
flw f11, 0(x2) # load 0x8a5aad40 from memory into f11
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
fmadd.s f6, f21, f11, f31, dyn # perform operation
fmadd.s f6, f21, f11, f31, rdn # perform operation
fmadd.s f6, f21, f11, f31, rmm # perform operation
fmadd.s f6, f21, f11, f31, rne # perform operation
fmadd.s f6, f21, f11, f31, rtz # perform operation
fmadd.s f6, f21, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
la x2, scratch
li x3, 0x7afbcbb4 # load x3 with value 0x7afbcbb4
sw x3, 0(x2) # store 0x7afbcbb4 in memory
flw f19, 0(x2) # load 0x7afbcbb4 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f14, f8, f19, f31, dyn # perform operation
fmadd.s f14, f8, f19, f31, rdn # perform operation
fmadd.s f14, f8, f19, f31, rmm # perform operation
fmadd.s f14, f8, f19, f31, rne # perform operation
fmadd.s f14, f8, f19, f31, rtz # perform operation
fmadd.s f14, f8, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f19, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x031dbcc5 # load x3 with value 0x031dbcc5
sw x3, 0(x2) # store 0x031dbcc5 in memory
flw f11, 0(x2) # load 0x031dbcc5 from memory into f11
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmadd.s f16, f5, f11, f18, dyn # perform operation
fmadd.s f16, f5, f11, f18, rdn # perform operation
fmadd.s f16, f5, f11, f18, rmm # perform operation
fmadd.s f16, f5, f11, f18, rne # perform operation
fmadd.s f16, f5, f11, f18, rtz # perform operation
fmadd.s f16, f5, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
la x2, scratch
li x3, 0x1f8d2f36 # load x3 with value 0x1f8d2f36
sw x3, 0(x2) # store 0x1f8d2f36 in memory
flw f19, 0(x2) # load 0x1f8d2f36 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
fmadd.s f1, f28, f19, f18, dyn # perform operation
fmadd.s f1, f28, f19, f18, rdn # perform operation
fmadd.s f1, f28, f19, f18, rmm # perform operation
fmadd.s f1, f28, f19, f18, rne # perform operation
fmadd.s f1, f28, f19, f18, rtz # perform operation
fmadd.s f1, f28, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
la x2, scratch
li x3, 0x79670bd9 # load x3 with value 0x79670bd9
sw x3, 0(x2) # store 0x79670bd9 in memory
flw f12, 0(x2) # load 0x79670bd9 from memory into f12
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f25, f5, f12, f8, dyn # perform operation
fmadd.s f25, f5, f12, f8, rdn # perform operation
fmadd.s f25, f5, f12, f8, rmm # perform operation
fmadd.s f25, f5, f12, f8, rne # perform operation
fmadd.s f25, f5, f12, f8, rtz # perform operation
fmadd.s f25, f5, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
la x2, scratch
li x3, 0x5e13ec84 # load x3 with value 0x5e13ec84
sw x3, 0(x2) # store 0x5e13ec84 in memory
flw f27, 0(x2) # load 0x5e13ec84 from memory into f27
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmadd.s f10, f14, f27, f3, dyn # perform operation
fmadd.s f10, f14, f27, f3, rdn # perform operation
fmadd.s f10, f14, f27, f3, rmm # perform operation
fmadd.s f10, f14, f27, f3, rne # perform operation
fmadd.s f10, f14, f27, f3, rtz # perform operation
fmadd.s f10, f14, f27, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f14, f27, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f14, f27, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
la x2, scratch
li x3, 0xbee76ef5 # load x3 with value 0xbee76ef5
sw x3, 0(x2) # store 0xbee76ef5 in memory
flw f26, 0(x2) # load 0xbee76ef5 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmadd.s f8, f11, f26, f30, dyn # perform operation
fmadd.s f8, f11, f26, f30, rdn # perform operation
fmadd.s f8, f11, f26, f30, rmm # perform operation
fmadd.s f8, f11, f26, f30, rne # perform operation
fmadd.s f8, f11, f26, f30, rtz # perform operation
fmadd.s f8, f11, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f26, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
la x2, scratch
li x3, 0xc5fe8439 # load x3 with value 0xc5fe8439
sw x3, 0(x2) # store 0xc5fe8439 in memory
flw f27, 0(x2) # load 0xc5fe8439 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f23, f20, f27, f18, dyn # perform operation
fmadd.s f23, f20, f27, f18, rdn # perform operation
fmadd.s f23, f20, f27, f18, rmm # perform operation
fmadd.s f23, f20, f27, f18, rne # perform operation
fmadd.s f23, f20, f27, f18, rtz # perform operation
fmadd.s f23, f20, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f27, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0xc1b51a32 # load x3 with value 0xc1b51a32
sw x3, 0(x2) # store 0xc1b51a32 in memory
flw f29, 0(x2) # load 0xc1b51a32 from memory into f29
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fmadd.s f30, f9, f29, f8, dyn # perform operation
fmadd.s f30, f9, f29, f8, rdn # perform operation
fmadd.s f30, f9, f29, f8, rmm # perform operation
fmadd.s f30, f9, f29, f8, rne # perform operation
fmadd.s f30, f9, f29, f8, rtz # perform operation
fmadd.s f30, f9, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f9, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f9, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
la x2, scratch
li x3, 0x2be5d6fa # load x3 with value 0x2be5d6fa
sw x3, 0(x2) # store 0x2be5d6fa in memory
flw f10, 0(x2) # load 0x2be5d6fa from memory into f10
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
fmadd.s f28, f9, f10, f5, dyn # perform operation
fmadd.s f28, f9, f10, f5, rdn # perform operation
fmadd.s f28, f9, f10, f5, rmm # perform operation
fmadd.s f28, f9, f10, f5, rne # perform operation
fmadd.s f28, f9, f10, f5, rtz # perform operation
fmadd.s f28, f9, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f10, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x7832b4e8 # load x3 with value 0x7832b4e8
sw x3, 0(x2) # store 0x7832b4e8 in memory
flw f20, 0(x2) # load 0x7832b4e8 from memory into f20
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
fmadd.s f29, f17, f20, f7, dyn # perform operation
fmadd.s f29, f17, f20, f7, rdn # perform operation
fmadd.s f29, f17, f20, f7, rmm # perform operation
fmadd.s f29, f17, f20, f7, rne # perform operation
fmadd.s f29, f17, f20, f7, rtz # perform operation
fmadd.s f29, f17, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
la x2, scratch
li x3, 0xd5c0fab0 # load x3 with value 0xd5c0fab0
sw x3, 0(x2) # store 0xd5c0fab0 in memory
flw f29, 0(x2) # load 0xd5c0fab0 from memory into f29
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
fmadd.s f7, f30, f29, f8, dyn # perform operation
fmadd.s f7, f30, f29, f8, rdn # perform operation
fmadd.s f7, f30, f29, f8, rmm # perform operation
fmadd.s f7, f30, f29, f8, rne # perform operation
fmadd.s f7, f30, f29, f8, rtz # perform operation
fmadd.s f7, f30, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f29, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0xd9018ba4 # load x3 with value 0xd9018ba4
sw x3, 0(x2) # store 0xd9018ba4 in memory
flw f21, 0(x2) # load 0xd9018ba4 from memory into f21
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmadd.s f13, f17, f21, f5, dyn # perform operation
fmadd.s f13, f17, f21, f5, rdn # perform operation
fmadd.s f13, f17, f21, f5, rmm # perform operation
fmadd.s f13, f17, f21, f5, rne # perform operation
fmadd.s f13, f17, f21, f5, rtz # perform operation
fmadd.s f13, f17, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f17, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f17, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
la x2, scratch
li x3, 0x63105c5f # load x3 with value 0x63105c5f
sw x3, 0(x2) # store 0x63105c5f in memory
flw f13, 0(x2) # load 0x63105c5f from memory into f13
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f31, f17, f13, f15, dyn # perform operation
fmadd.s f31, f17, f13, f15, rdn # perform operation
fmadd.s f31, f17, f13, f15, rmm # perform operation
fmadd.s f31, f17, f13, f15, rne # perform operation
fmadd.s f31, f17, f13, f15, rtz # perform operation
fmadd.s f31, f17, f13, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f17, f13, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f17, f13, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0xccaa3dc1 # load x3 with value 0xccaa3dc1
sw x3, 0(x2) # store 0xccaa3dc1 in memory
flw f24, 0(x2) # load 0xccaa3dc1 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmadd.s f15, f1, f24, f7, dyn # perform operation
fmadd.s f15, f1, f24, f7, rdn # perform operation
fmadd.s f15, f1, f24, f7, rmm # perform operation
fmadd.s f15, f1, f24, f7, rne # perform operation
fmadd.s f15, f1, f24, f7, rtz # perform operation
fmadd.s f15, f1, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f24, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xff986a51 # load x3 with value 0xff986a51
sw x3, 0(x2) # store 0xff986a51 in memory
flw f13, 0(x2) # load 0xff986a51 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmadd.s f5, f31, f13, f2, dyn # perform operation
fmadd.s f5, f31, f13, f2, rdn # perform operation
fmadd.s f5, f31, f13, f2, rmm # perform operation
fmadd.s f5, f31, f13, f2, rne # perform operation
fmadd.s f5, f31, f13, f2, rtz # perform operation
fmadd.s f5, f31, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f31, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f31, f13, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xf3df4220 # load x3 with value 0xf3df4220
sw x3, 0(x2) # store 0xf3df4220 in memory
flw f25, 0(x2) # load 0xf3df4220 from memory into f25
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmadd.s f27, f14, f25, f28, dyn # perform operation
fmadd.s f27, f14, f25, f28, rdn # perform operation
fmadd.s f27, f14, f25, f28, rmm # perform operation
fmadd.s f27, f14, f25, f28, rne # perform operation
fmadd.s f27, f14, f25, f28, rtz # perform operation
fmadd.s f27, f14, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f25, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
la x2, scratch
li x3, 0x5a79e587 # load x3 with value 0x5a79e587
sw x3, 0(x2) # store 0x5a79e587 in memory
flw f23, 0(x2) # load 0x5a79e587 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f24, f20, f23, f27, dyn # perform operation
fmadd.s f24, f20, f23, f27, rdn # perform operation
fmadd.s f24, f20, f23, f27, rmm # perform operation
fmadd.s f24, f20, f23, f27, rne # perform operation
fmadd.s f24, f20, f23, f27, rtz # perform operation
fmadd.s f24, f20, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0xc21652da # load x3 with value 0xc21652da
sw x3, 0(x2) # store 0xc21652da in memory
flw f16, 0(x2) # load 0xc21652da from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f27, f11, f16, f3, dyn # perform operation
fmadd.s f27, f11, f16, f3, rdn # perform operation
fmadd.s f27, f11, f16, f3, rmm # perform operation
fmadd.s f27, f11, f16, f3, rne # perform operation
fmadd.s f27, f11, f16, f3, rtz # perform operation
fmadd.s f27, f11, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x5f7da7a2 # load x3 with value 0x5f7da7a2
sw x3, 0(x2) # store 0x5f7da7a2 in memory
flw f7, 0(x2) # load 0x5f7da7a2 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmadd.s f22, f21, f7, f5, dyn # perform operation
fmadd.s f22, f21, f7, f5, rdn # perform operation
fmadd.s f22, f21, f7, f5, rmm # perform operation
fmadd.s f22, f21, f7, f5, rne # perform operation
fmadd.s f22, f21, f7, f5, rtz # perform operation
fmadd.s f22, f21, f7, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f7, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f7, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
la x2, scratch
li x3, 0x6502b1b0 # load x3 with value 0x6502b1b0
sw x3, 0(x2) # store 0x6502b1b0 in memory
flw f18, 0(x2) # load 0x6502b1b0 from memory into f18
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fmadd.s f27, f11, f18, f7, dyn # perform operation
fmadd.s f27, f11, f18, f7, rdn # perform operation
fmadd.s f27, f11, f18, f7, rmm # perform operation
fmadd.s f27, f11, f18, f7, rne # perform operation
fmadd.s f27, f11, f18, f7, rtz # perform operation
fmadd.s f27, f11, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
la x2, scratch
li x3, 0xddd364a1 # load x3 with value 0xddd364a1
sw x3, 0(x2) # store 0xddd364a1 in memory
flw f5, 0(x2) # load 0xddd364a1 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmadd.s f11, f19, f5, f23, dyn # perform operation
fmadd.s f11, f19, f5, f23, rdn # perform operation
fmadd.s f11, f19, f5, f23, rmm # perform operation
fmadd.s f11, f19, f5, f23, rne # perform operation
fmadd.s f11, f19, f5, f23, rtz # perform operation
fmadd.s f11, f19, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f5, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0x600e7a17 # load x3 with value 0x600e7a17
sw x3, 0(x2) # store 0x600e7a17 in memory
flw f29, 0(x2) # load 0x600e7a17 from memory into f29
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmadd.s f21, f9, f29, f11, dyn # perform operation
fmadd.s f21, f9, f29, f11, rdn # perform operation
fmadd.s f21, f9, f29, f11, rmm # perform operation
fmadd.s f21, f9, f29, f11, rne # perform operation
fmadd.s f21, f9, f29, f11, rtz # perform operation
fmadd.s f21, f9, f29, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f9, f29, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f9, f29, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
la x2, scratch
li x3, 0xd2d2f984 # load x3 with value 0xd2d2f984
sw x3, 0(x2) # store 0xd2d2f984 in memory
flw f20, 0(x2) # load 0xd2d2f984 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f10, f24, f20, f18, dyn # perform operation
fmadd.s f10, f24, f20, f18, rdn # perform operation
fmadd.s f10, f24, f20, f18, rmm # perform operation
fmadd.s f10, f24, f20, f18, rne # perform operation
fmadd.s f10, f24, f20, f18, rtz # perform operation
fmadd.s f10, f24, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f20, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
la x2, scratch
li x3, 0xbb8b6c48 # load x3 with value 0xbb8b6c48
sw x3, 0(x2) # store 0xbb8b6c48 in memory
flw f8, 0(x2) # load 0xbb8b6c48 from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f30, f13, f8, f14, dyn # perform operation
fmadd.s f30, f13, f8, f14, rdn # perform operation
fmadd.s f30, f13, f8, f14, rmm # perform operation
fmadd.s f30, f13, f8, f14, rne # perform operation
fmadd.s f30, f13, f8, f14, rtz # perform operation
fmadd.s f30, f13, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
la x2, scratch
li x3, 0x0ed3dbb9 # load x3 with value 0x0ed3dbb9
sw x3, 0(x2) # store 0x0ed3dbb9 in memory
flw f10, 0(x2) # load 0x0ed3dbb9 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmadd.s f18, f1, f10, f15, dyn # perform operation
fmadd.s f18, f1, f10, f15, rdn # perform operation
fmadd.s f18, f1, f10, f15, rmm # perform operation
fmadd.s f18, f1, f10, f15, rne # perform operation
fmadd.s f18, f1, f10, f15, rtz # perform operation
fmadd.s f18, f1, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f10, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
la x2, scratch
li x3, 0xe54039a6 # load x3 with value 0xe54039a6
sw x3, 0(x2) # store 0xe54039a6 in memory
flw f25, 0(x2) # load 0xe54039a6 from memory into f25
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f27, f31, f25, f22, dyn # perform operation
fmadd.s f27, f31, f25, f22, rdn # perform operation
fmadd.s f27, f31, f25, f22, rmm # perform operation
fmadd.s f27, f31, f25, f22, rne # perform operation
fmadd.s f27, f31, f25, f22, rtz # perform operation
fmadd.s f27, f31, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f31, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f31, f25, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
la x2, scratch
li x3, 0x4840b8d3 # load x3 with value 0x4840b8d3
sw x3, 0(x2) # store 0x4840b8d3 in memory
flw f3, 0(x2) # load 0x4840b8d3 from memory into f3
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmadd.s f10, f21, f3, f18, dyn # perform operation
fmadd.s f10, f21, f3, f18, rdn # perform operation
fmadd.s f10, f21, f3, f18, rmm # perform operation
fmadd.s f10, f21, f3, f18, rne # perform operation
fmadd.s f10, f21, f3, f18, rtz # perform operation
fmadd.s f10, f21, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
la x2, scratch
li x3, 0xb3811ab3 # load x3 with value 0xb3811ab3
sw x3, 0(x2) # store 0xb3811ab3 in memory
flw f23, 0(x2) # load 0xb3811ab3 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmadd.s f15, f10, f23, f22, dyn # perform operation
fmadd.s f15, f10, f23, f22, rdn # perform operation
fmadd.s f15, f10, f23, f22, rmm # perform operation
fmadd.s f15, f10, f23, f22, rne # perform operation
fmadd.s f15, f10, f23, f22, rtz # perform operation
fmadd.s f15, f10, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f10, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f10, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f10, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f10, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f10, f23, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0xfecb84ee # load x3 with value 0xfecb84ee
sw x3, 0(x2) # store 0xfecb84ee in memory
flw f6, 0(x2) # load 0xfecb84ee from memory into f6
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
fmadd.s f5, f18, f6, f3, dyn # perform operation
fmadd.s f5, f18, f6, f3, rdn # perform operation
fmadd.s f5, f18, f6, f3, rmm # perform operation
fmadd.s f5, f18, f6, f3, rne # perform operation
fmadd.s f5, f18, f6, f3, rtz # perform operation
fmadd.s f5, f18, f6, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f18, f6, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f18, f6, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f18, f6, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f18, f6, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f18, f6, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
la x2, scratch
li x3, 0x5044f41e # load x3 with value 0x5044f41e
sw x3, 0(x2) # store 0x5044f41e in memory
flw f20, 0(x2) # load 0x5044f41e from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f26, f8, f20, f25, dyn # perform operation
fmadd.s f26, f8, f20, f25, rdn # perform operation
fmadd.s f26, f8, f20, f25, rmm # perform operation
fmadd.s f26, f8, f20, f25, rne # perform operation
fmadd.s f26, f8, f20, f25, rtz # perform operation
fmadd.s f26, f8, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f8, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f8, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0xcf793548 # load x3 with value 0xcf793548
sw x3, 0(x2) # store 0xcf793548 in memory
flw f27, 0(x2) # load 0xcf793548 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmadd.s f22, f2, f27, f5, dyn # perform operation
fmadd.s f22, f2, f27, f5, rdn # perform operation
fmadd.s f22, f2, f27, f5, rmm # perform operation
fmadd.s f22, f2, f27, f5, rne # perform operation
fmadd.s f22, f2, f27, f5, rtz # perform operation
fmadd.s f22, f2, f27, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f27, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f27, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
la x2, scratch
li x3, 0xb1fb0832 # load x3 with value 0xb1fb0832
sw x3, 0(x2) # store 0xb1fb0832 in memory
flw f24, 0(x2) # load 0xb1fb0832 from memory into f24
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
fmadd.s f16, f9, f24, f27, dyn # perform operation
fmadd.s f16, f9, f24, f27, rdn # perform operation
fmadd.s f16, f9, f24, f27, rmm # perform operation
fmadd.s f16, f9, f24, f27, rne # perform operation
fmadd.s f16, f9, f24, f27, rtz # perform operation
fmadd.s f16, f9, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
la x2, scratch
li x3, 0x3197c4d2 # load x3 with value 0x3197c4d2
sw x3, 0(x2) # store 0x3197c4d2 in memory
flw f8, 0(x2) # load 0x3197c4d2 from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmadd.s f22, f29, f8, f7, dyn # perform operation
fmadd.s f22, f29, f8, f7, rdn # perform operation
fmadd.s f22, f29, f8, f7, rmm # perform operation
fmadd.s f22, f29, f8, f7, rne # perform operation
fmadd.s f22, f29, f8, f7, rtz # perform operation
fmadd.s f22, f29, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f8, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
la x2, scratch
li x3, 0xb11cb531 # load x3 with value 0xb11cb531
sw x3, 0(x2) # store 0xb11cb531 in memory
flw f19, 0(x2) # load 0xb11cb531 from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
fmadd.s f29, f16, f19, f17, dyn # perform operation
fmadd.s f29, f16, f19, f17, rdn # perform operation
fmadd.s f29, f16, f19, f17, rmm # perform operation
fmadd.s f29, f16, f19, f17, rne # perform operation
fmadd.s f29, f16, f19, f17, rtz # perform operation
fmadd.s f29, f16, f19, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f16, f19, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f16, f19, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
la x2, scratch
li x3, 0x086c3990 # load x3 with value 0x086c3990
sw x3, 0(x2) # store 0x086c3990 in memory
flw f26, 0(x2) # load 0x086c3990 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmadd.s f30, f18, f26, f11, dyn # perform operation
fmadd.s f30, f18, f26, f11, rdn # perform operation
fmadd.s f30, f18, f26, f11, rmm # perform operation
fmadd.s f30, f18, f26, f11, rne # perform operation
fmadd.s f30, f18, f26, f11, rtz # perform operation
fmadd.s f30, f18, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
la x2, scratch
li x3, 0x214b4a84 # load x3 with value 0x214b4a84
sw x3, 0(x2) # store 0x214b4a84 in memory
flw f27, 0(x2) # load 0x214b4a84 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmadd.s f29, f2, f27, f10, dyn # perform operation
fmadd.s f29, f2, f27, f10, rdn # perform operation
fmadd.s f29, f2, f27, f10, rmm # perform operation
fmadd.s f29, f2, f27, f10, rne # perform operation
fmadd.s f29, f2, f27, f10, rtz # perform operation
fmadd.s f29, f2, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f27, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
la x2, scratch
li x3, 0xf42c72ac # load x3 with value 0xf42c72ac
sw x3, 0(x2) # store 0xf42c72ac in memory
flw f6, 0(x2) # load 0xf42c72ac from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
fmadd.s f28, f27, f6, f18, dyn # perform operation
fmadd.s f28, f27, f6, f18, rdn # perform operation
fmadd.s f28, f27, f6, f18, rmm # perform operation
fmadd.s f28, f27, f6, f18, rne # perform operation
fmadd.s f28, f27, f6, f18, rtz # perform operation
fmadd.s f28, f27, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
la x2, scratch
li x3, 0xb66bf5ca # load x3 with value 0xb66bf5ca
sw x3, 0(x2) # store 0xb66bf5ca in memory
flw f9, 0(x2) # load 0xb66bf5ca from memory into f9
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f30, f23, f9, f18, dyn # perform operation
fmadd.s f30, f23, f9, f18, rdn # perform operation
fmadd.s f30, f23, f9, f18, rmm # perform operation
fmadd.s f30, f23, f9, f18, rne # perform operation
fmadd.s f30, f23, f9, f18, rtz # perform operation
fmadd.s f30, f23, f9, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f23, f9, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f23, f9, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
la x2, scratch
li x3, 0x780482ee # load x3 with value 0x780482ee
sw x3, 0(x2) # store 0x780482ee in memory
flw f14, 0(x2) # load 0x780482ee from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmadd.s f17, f15, f14, f23, dyn # perform operation
fmadd.s f17, f15, f14, f23, rdn # perform operation
fmadd.s f17, f15, f14, f23, rmm # perform operation
fmadd.s f17, f15, f14, f23, rne # perform operation
fmadd.s f17, f15, f14, f23, rtz # perform operation
fmadd.s f17, f15, f14, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f14, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f14, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
la x2, scratch
li x3, 0xad9a79ae # load x3 with value 0xad9a79ae
sw x3, 0(x2) # store 0xad9a79ae in memory
flw f15, 0(x2) # load 0xad9a79ae from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmadd.s f17, f5, f15, f3, dyn # perform operation
fmadd.s f17, f5, f15, f3, rdn # perform operation
fmadd.s f17, f5, f15, f3, rmm # perform operation
fmadd.s f17, f5, f15, f3, rne # perform operation
fmadd.s f17, f5, f15, f3, rtz # perform operation
fmadd.s f17, f5, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f15, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f14, 0(x2) # load 0xff7fffff from memory into f14
la x2, scratch
li x3, 0xfd485820 # load x3 with value 0xfd485820
sw x3, 0(x2) # store 0xfd485820 in memory
flw f10, 0(x2) # load 0xfd485820 from memory into f10
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f26, f14, f10, f20, dyn # perform operation
fmadd.s f26, f14, f10, f20, rdn # perform operation
fmadd.s f26, f14, f10, f20, rmm # perform operation
fmadd.s f26, f14, f10, f20, rne # perform operation
fmadd.s f26, f14, f10, f20, rtz # perform operation
fmadd.s f26, f14, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f14, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f14, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f14, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f14, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f14, f10, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0xa5f79ecc # load x3 with value 0xa5f79ecc
sw x3, 0(x2) # store 0xa5f79ecc in memory
flw f29, 0(x2) # load 0xa5f79ecc from memory into f29
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
fmadd.s f6, f3, f29, f1, dyn # perform operation
fmadd.s f6, f3, f29, f1, rdn # perform operation
fmadd.s f6, f3, f29, f1, rmm # perform operation
fmadd.s f6, f3, f29, f1, rne # perform operation
fmadd.s f6, f3, f29, f1, rtz # perform operation
fmadd.s f6, f3, f29, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f29, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f29, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
la x2, scratch
li x3, 0x63cf7591 # load x3 with value 0x63cf7591
sw x3, 0(x2) # store 0x63cf7591 in memory
flw f31, 0(x2) # load 0x63cf7591 from memory into f31
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmadd.s f10, f1, f31, f24, dyn # perform operation
fmadd.s f10, f1, f31, f24, rdn # perform operation
fmadd.s f10, f1, f31, f24, rmm # perform operation
fmadd.s f10, f1, f31, f24, rne # perform operation
fmadd.s f10, f1, f31, f24, rtz # perform operation
fmadd.s f10, f1, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f1, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f1, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f1, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f1, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f1, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0xd3013266 # load x3 with value 0xd3013266
sw x3, 0(x2) # store 0xd3013266 in memory
flw f19, 0(x2) # load 0xd3013266 from memory into f19
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
fmadd.s f22, f26, f19, f10, dyn # perform operation
fmadd.s f22, f26, f19, f10, rdn # perform operation
fmadd.s f22, f26, f19, f10, rmm # perform operation
fmadd.s f22, f26, f19, f10, rne # perform operation
fmadd.s f22, f26, f19, f10, rtz # perform operation
fmadd.s f22, f26, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f19, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x51ee4db2 # load x3 with value 0x51ee4db2
sw x3, 0(x2) # store 0x51ee4db2 in memory
flw f21, 0(x2) # load 0x51ee4db2 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmadd.s f9, f27, f21, f22, dyn # perform operation
fmadd.s f9, f27, f21, f22, rdn # perform operation
fmadd.s f9, f27, f21, f22, rmm # perform operation
fmadd.s f9, f27, f21, f22, rne # perform operation
fmadd.s f9, f27, f21, f22, rtz # perform operation
fmadd.s f9, f27, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
la x2, scratch
li x3, 0x944587f2 # load x3 with value 0x944587f2
sw x3, 0(x2) # store 0x944587f2 in memory
flw f16, 0(x2) # load 0x944587f2 from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmadd.s f25, f31, f16, f26, dyn # perform operation
fmadd.s f25, f31, f16, f26, rdn # perform operation
fmadd.s f25, f31, f16, f26, rmm # perform operation
fmadd.s f25, f31, f16, f26, rne # perform operation
fmadd.s f25, f31, f16, f26, rtz # perform operation
fmadd.s f25, f31, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x04383ef7 # load x3 with value 0x04383ef7
sw x3, 0(x2) # store 0x04383ef7 in memory
flw f31, 0(x2) # load 0x04383ef7 from memory into f31
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
fmadd.s f29, f27, f31, f17, dyn # perform operation
fmadd.s f29, f27, f31, f17, rdn # perform operation
fmadd.s f29, f27, f31, f17, rmm # perform operation
fmadd.s f29, f27, f31, f17, rne # perform operation
fmadd.s f29, f27, f31, f17, rtz # perform operation
fmadd.s f29, f27, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f31, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
la x2, scratch
li x3, 0x7a26277c # load x3 with value 0x7a26277c
sw x3, 0(x2) # store 0x7a26277c in memory
flw f14, 0(x2) # load 0x7a26277c from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmadd.s f8, f13, f14, f28, dyn # perform operation
fmadd.s f8, f13, f14, f28, rdn # perform operation
fmadd.s f8, f13, f14, f28, rmm # perform operation
fmadd.s f8, f13, f14, f28, rne # perform operation
fmadd.s f8, f13, f14, f28, rtz # perform operation
fmadd.s f8, f13, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f14, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
la x2, scratch
li x3, 0xfb340dde # load x3 with value 0xfb340dde
sw x3, 0(x2) # store 0xfb340dde in memory
flw f6, 0(x2) # load 0xfb340dde from memory into f6
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
fmadd.s f21, f5, f6, f2, dyn # perform operation
fmadd.s f21, f5, f6, f2, rdn # perform operation
fmadd.s f21, f5, f6, f2, rmm # perform operation
fmadd.s f21, f5, f6, f2, rne # perform operation
fmadd.s f21, f5, f6, f2, rtz # perform operation
fmadd.s f21, f5, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f6, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
la x2, scratch
li x3, 0x1ab2b298 # load x3 with value 0x1ab2b298
sw x3, 0(x2) # store 0x1ab2b298 in memory
flw f1, 0(x2) # load 0x1ab2b298 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
fmadd.s f12, f25, f1, f11, dyn # perform operation
fmadd.s f12, f25, f1, f11, rdn # perform operation
fmadd.s f12, f25, f1, f11, rmm # perform operation
fmadd.s f12, f25, f1, f11, rne # perform operation
fmadd.s f12, f25, f1, f11, rtz # perform operation
fmadd.s f12, f25, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f1, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xd9faa07f # load x3 with value 0xd9faa07f
sw x3, 0(x2) # store 0xd9faa07f in memory
flw f25, 0(x2) # load 0xd9faa07f from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
fmadd.s f11, f10, f25, f16, dyn # perform operation
fmadd.s f11, f10, f25, f16, rdn # perform operation
fmadd.s f11, f10, f25, f16, rmm # perform operation
fmadd.s f11, f10, f25, f16, rne # perform operation
fmadd.s f11, f10, f25, f16, rtz # perform operation
fmadd.s f11, f10, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
la x2, scratch
li x3, 0x85c058c2 # load x3 with value 0x85c058c2
sw x3, 0(x2) # store 0x85c058c2 in memory
flw f21, 0(x2) # load 0x85c058c2 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fmadd.s f24, f15, f21, f18, dyn # perform operation
fmadd.s f24, f15, f21, f18, rdn # perform operation
fmadd.s f24, f15, f21, f18, rmm # perform operation
fmadd.s f24, f15, f21, f18, rne # perform operation
fmadd.s f24, f15, f21, f18, rtz # perform operation
fmadd.s f24, f15, f21, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f21, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f21, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
la x2, scratch
li x3, 0x7b97ab20 # load x3 with value 0x7b97ab20
sw x3, 0(x2) # store 0x7b97ab20 in memory
flw f16, 0(x2) # load 0x7b97ab20 from memory into f16
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmadd.s f22, f2, f16, f24, dyn # perform operation
fmadd.s f22, f2, f16, f24, rdn # perform operation
fmadd.s f22, f2, f16, f24, rmm # perform operation
fmadd.s f22, f2, f16, f24, rne # perform operation
fmadd.s f22, f2, f16, f24, rtz # perform operation
fmadd.s f22, f2, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
la x2, scratch
li x3, 0x9519596d # load x3 with value 0x9519596d
sw x3, 0(x2) # store 0x9519596d in memory
flw f15, 0(x2) # load 0x9519596d from memory into f15
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmadd.s f8, f7, f15, f5, dyn # perform operation
fmadd.s f8, f7, f15, f5, rdn # perform operation
fmadd.s f8, f7, f15, f5, rmm # perform operation
fmadd.s f8, f7, f15, f5, rne # perform operation
fmadd.s f8, f7, f15, f5, rtz # perform operation
fmadd.s f8, f7, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f15, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x4f3a1bac # load x3 with value 0x4f3a1bac
sw x3, 0(x2) # store 0x4f3a1bac in memory
flw f28, 0(x2) # load 0x4f3a1bac from memory into f28
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f27, f18, f28, f14, dyn # perform operation
fmadd.s f27, f18, f28, f14, rdn # perform operation
fmadd.s f27, f18, f28, f14, rmm # perform operation
fmadd.s f27, f18, f28, f14, rne # perform operation
fmadd.s f27, f18, f28, f14, rtz # perform operation
fmadd.s f27, f18, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
la x2, scratch
li x3, 0x82b5a12d # load x3 with value 0x82b5a12d
sw x3, 0(x2) # store 0x82b5a12d in memory
flw f22, 0(x2) # load 0x82b5a12d from memory into f22
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fmadd.s f24, f27, f22, f11, dyn # perform operation
fmadd.s f24, f27, f22, f11, rdn # perform operation
fmadd.s f24, f27, f22, f11, rmm # perform operation
fmadd.s f24, f27, f22, f11, rne # perform operation
fmadd.s f24, f27, f22, f11, rtz # perform operation
fmadd.s f24, f27, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f22, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0x6c6bb7a7 # load x3 with value 0x6c6bb7a7
sw x3, 0(x2) # store 0x6c6bb7a7 in memory
flw f15, 0(x2) # load 0x6c6bb7a7 from memory into f15
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmadd.s f14, f10, f15, f7, dyn # perform operation
fmadd.s f14, f10, f15, f7, rdn # perform operation
fmadd.s f14, f10, f15, f7, rmm # perform operation
fmadd.s f14, f10, f15, f7, rne # perform operation
fmadd.s f14, f10, f15, f7, rtz # perform operation
fmadd.s f14, f10, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f15, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0x2f116497 # load x3 with value 0x2f116497
sw x3, 0(x2) # store 0x2f116497 in memory
flw f12, 0(x2) # load 0x2f116497 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
fmadd.s f9, f30, f12, f14, dyn # perform operation
fmadd.s f9, f30, f12, f14, rdn # perform operation
fmadd.s f9, f30, f12, f14, rmm # perform operation
fmadd.s f9, f30, f12, f14, rne # perform operation
fmadd.s f9, f30, f12, f14, rtz # perform operation
fmadd.s f9, f30, f12, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f12, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f12, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
la x2, scratch
li x3, 0x81b8e53b # load x3 with value 0x81b8e53b
sw x3, 0(x2) # store 0x81b8e53b in memory
flw f23, 0(x2) # load 0x81b8e53b from memory into f23
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f6, f28, f23, f14, dyn # perform operation
fmadd.s f6, f28, f23, f14, rdn # perform operation
fmadd.s f6, f28, f23, f14, rmm # perform operation
fmadd.s f6, f28, f23, f14, rne # perform operation
fmadd.s f6, f28, f23, f14, rtz # perform operation
fmadd.s f6, f28, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xb972ec7d # load x3 with value 0xb972ec7d
sw x3, 0(x2) # store 0xb972ec7d in memory
flw f1, 0(x2) # load 0xb972ec7d from memory into f1
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fmadd.s f22, f6, f1, f14, dyn # perform operation
fmadd.s f22, f6, f1, f14, rdn # perform operation
fmadd.s f22, f6, f1, f14, rmm # perform operation
fmadd.s f22, f6, f1, f14, rne # perform operation
fmadd.s f22, f6, f1, f14, rtz # perform operation
fmadd.s f22, f6, f1, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f1, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f1, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
la x2, scratch
li x3, 0xde34a1a6 # load x3 with value 0xde34a1a6
sw x3, 0(x2) # store 0xde34a1a6 in memory
flw f30, 0(x2) # load 0xde34a1a6 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmadd.s f3, f10, f30, f15, dyn # perform operation
fmadd.s f3, f10, f30, f15, rdn # perform operation
fmadd.s f3, f10, f30, f15, rmm # perform operation
fmadd.s f3, f10, f30, f15, rne # perform operation
fmadd.s f3, f10, f30, f15, rtz # perform operation
fmadd.s f3, f10, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
la x2, scratch
li x3, 0xc8b7c334 # load x3 with value 0xc8b7c334
sw x3, 0(x2) # store 0xc8b7c334 in memory
flw f18, 0(x2) # load 0xc8b7c334 from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f15, f30, f18, f8, dyn # perform operation
fmadd.s f15, f30, f18, f8, rdn # perform operation
fmadd.s f15, f30, f18, f8, rmm # perform operation
fmadd.s f15, f30, f18, f8, rne # perform operation
fmadd.s f15, f30, f18, f8, rtz # perform operation
fmadd.s f15, f30, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f18, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
la x2, scratch
li x3, 0x91ced70c # load x3 with value 0x91ced70c
sw x3, 0(x2) # store 0x91ced70c in memory
flw f17, 0(x2) # load 0x91ced70c from memory into f17
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f13, f18, f17, f15, dyn # perform operation
fmadd.s f13, f18, f17, f15, rdn # perform operation
fmadd.s f13, f18, f17, f15, rmm # perform operation
fmadd.s f13, f18, f17, f15, rne # perform operation
fmadd.s f13, f18, f17, f15, rtz # perform operation
fmadd.s f13, f18, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f18, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f18, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f18, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f18, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f18, f17, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
la x2, scratch
li x3, 0xd6855823 # load x3 with value 0xd6855823
sw x3, 0(x2) # store 0xd6855823 in memory
flw f20, 0(x2) # load 0xd6855823 from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f7, 0(x2) # load 0xffffffff from memory into f7
fmadd.s f2, f6, f20, f7, dyn # perform operation
fmadd.s f2, f6, f20, f7, rdn # perform operation
fmadd.s f2, f6, f20, f7, rmm # perform operation
fmadd.s f2, f6, f20, f7, rne # perform operation
fmadd.s f2, f6, f20, f7, rtz # perform operation
fmadd.s f2, f6, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f6, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f6, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f6, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f6, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f6, f20, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f9, 0(x2) # load 0x007fffff from memory into f9
la x2, scratch
li x3, 0xbd47d5f9 # load x3 with value 0xbd47d5f9
sw x3, 0(x2) # store 0xbd47d5f9 in memory
flw f19, 0(x2) # load 0xbd47d5f9 from memory into f19
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmadd.s f7, f9, f19, f27, dyn # perform operation
fmadd.s f7, f9, f19, f27, rdn # perform operation
fmadd.s f7, f9, f19, f27, rmm # perform operation
fmadd.s f7, f9, f19, f27, rne # perform operation
fmadd.s f7, f9, f19, f27, rtz # perform operation
fmadd.s f7, f9, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f19, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
la x2, scratch
li x3, 0x41b36e65 # load x3 with value 0x41b36e65
sw x3, 0(x2) # store 0x41b36e65 in memory
flw f30, 0(x2) # load 0x41b36e65 from memory into f30
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmadd.s f5, f26, f30, f19, dyn # perform operation
fmadd.s f5, f26, f30, f19, rdn # perform operation
fmadd.s f5, f26, f30, f19, rmm # perform operation
fmadd.s f5, f26, f30, f19, rne # perform operation
fmadd.s f5, f26, f30, f19, rtz # perform operation
fmadd.s f5, f26, f30, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f30, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f30, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
la x2, scratch
li x3, 0xa7313cc3 # load x3 with value 0xa7313cc3
sw x3, 0(x2) # store 0xa7313cc3 in memory
flw f3, 0(x2) # load 0xa7313cc3 from memory into f3
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
fmadd.s f2, f22, f3, f23, dyn # perform operation
fmadd.s f2, f22, f3, f23, rdn # perform operation
fmadd.s f2, f22, f3, f23, rmm # perform operation
fmadd.s f2, f22, f3, f23, rne # perform operation
fmadd.s f2, f22, f3, f23, rtz # perform operation
fmadd.s f2, f22, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f3, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
la x2, scratch
li x3, 0x1cddf02a # load x3 with value 0x1cddf02a
sw x3, 0(x2) # store 0x1cddf02a in memory
flw f20, 0(x2) # load 0x1cddf02a from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
fmadd.s f21, f3, f20, f13, dyn # perform operation
fmadd.s f21, f3, f20, f13, rdn # perform operation
fmadd.s f21, f3, f20, f13, rmm # perform operation
fmadd.s f21, f3, f20, f13, rne # perform operation
fmadd.s f21, f3, f20, f13, rtz # perform operation
fmadd.s f21, f3, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
la x2, scratch
li x3, 0xedf76a4a # load x3 with value 0xedf76a4a
sw x3, 0(x2) # store 0xedf76a4a in memory
flw f11, 0(x2) # load 0xedf76a4a from memory into f11
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmadd.s f28, f24, f11, f3, dyn # perform operation
fmadd.s f28, f24, f11, f3, rdn # perform operation
fmadd.s f28, f24, f11, f3, rmm # perform operation
fmadd.s f28, f24, f11, f3, rne # perform operation
fmadd.s f28, f24, f11, f3, rtz # perform operation
fmadd.s f28, f24, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
la x2, scratch
li x3, 0xfb189039 # load x3 with value 0xfb189039
sw x3, 0(x2) # store 0xfb189039 in memory
flw f11, 0(x2) # load 0xfb189039 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f1, f15, f11, f16, dyn # perform operation
fmadd.s f1, f15, f11, f16, rdn # perform operation
fmadd.s f1, f15, f11, f16, rmm # perform operation
fmadd.s f1, f15, f11, f16, rne # perform operation
fmadd.s f1, f15, f11, f16, rtz # perform operation
fmadd.s f1, f15, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f11, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
la x2, scratch
li x3, 0xf43cfdde # load x3 with value 0xf43cfdde
sw x3, 0(x2) # store 0xf43cfdde in memory
flw f11, 0(x2) # load 0xf43cfdde from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmadd.s f2, f14, f11, f21, dyn # perform operation
fmadd.s f2, f14, f11, f21, rdn # perform operation
fmadd.s f2, f14, f11, f21, rmm # perform operation
fmadd.s f2, f14, f11, f21, rne # perform operation
fmadd.s f2, f14, f11, f21, rtz # perform operation
fmadd.s f2, f14, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f11, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xa4bfc45c # load x3 with value 0xa4bfc45c
sw x3, 0(x2) # store 0xa4bfc45c in memory
flw f13, 0(x2) # load 0xa4bfc45c from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmadd.s f16, f23, f13, f9, dyn # perform operation
fmadd.s f16, f23, f13, f9, rdn # perform operation
fmadd.s f16, f23, f13, f9, rmm # perform operation
fmadd.s f16, f23, f13, f9, rne # perform operation
fmadd.s f16, f23, f13, f9, rtz # perform operation
fmadd.s f16, f23, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
la x2, scratch
li x3, 0x800f6e91 # load x3 with value 0x800f6e91
sw x3, 0(x2) # store 0x800f6e91 in memory
flw f23, 0(x2) # load 0x800f6e91 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmadd.s f27, f28, f23, f24, dyn # perform operation
fmadd.s f27, f28, f23, f24, rdn # perform operation
fmadd.s f27, f28, f23, f24, rmm # perform operation
fmadd.s f27, f28, f23, f24, rne # perform operation
fmadd.s f27, f28, f23, f24, rtz # perform operation
fmadd.s f27, f28, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x6d21cbf2 # load x3 with value 0x6d21cbf2
sw x3, 0(x2) # store 0x6d21cbf2 in memory
flw f9, 0(x2) # load 0x6d21cbf2 from memory into f9
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fmadd.s f12, f17, f9, f25, dyn # perform operation
fmadd.s f12, f17, f9, f25, rdn # perform operation
fmadd.s f12, f17, f9, f25, rmm # perform operation
fmadd.s f12, f17, f9, f25, rne # perform operation
fmadd.s f12, f17, f9, f25, rtz # perform operation
fmadd.s f12, f17, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
la x2, scratch
li x3, 0x7a176912 # load x3 with value 0x7a176912
sw x3, 0(x2) # store 0x7a176912 in memory
flw f18, 0(x2) # load 0x7a176912 from memory into f18
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmadd.s f31, f6, f18, f30, dyn # perform operation
fmadd.s f31, f6, f18, f30, rdn # perform operation
fmadd.s f31, f6, f18, f30, rmm # perform operation
fmadd.s f31, f6, f18, f30, rne # perform operation
fmadd.s f31, f6, f18, f30, rtz # perform operation
fmadd.s f31, f6, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f18, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
la x2, scratch
li x3, 0xd2c9d553 # load x3 with value 0xd2c9d553
sw x3, 0(x2) # store 0xd2c9d553 in memory
flw f9, 0(x2) # load 0xd2c9d553 from memory into f9
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmadd.s f25, f12, f9, f27, dyn # perform operation
fmadd.s f25, f12, f9, f27, rdn # perform operation
fmadd.s f25, f12, f9, f27, rmm # perform operation
fmadd.s f25, f12, f9, f27, rne # perform operation
fmadd.s f25, f12, f9, f27, rtz # perform operation
fmadd.s f25, f12, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f12, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f12, f9, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0xebb04e30 # load x3 with value 0xebb04e30
sw x3, 0(x2) # store 0xebb04e30 in memory
flw f20, 0(x2) # load 0xebb04e30 from memory into f20
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
fmadd.s f3, f1, f20, f8, dyn # perform operation
fmadd.s f3, f1, f20, f8, rdn # perform operation
fmadd.s f3, f1, f20, f8, rmm # perform operation
fmadd.s f3, f1, f20, f8, rne # perform operation
fmadd.s f3, f1, f20, f8, rtz # perform operation
fmadd.s f3, f1, f20, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f20, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f20, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0xf14da2b4 # load x3 with value 0xf14da2b4
sw x3, 0(x2) # store 0xf14da2b4 in memory
flw f10, 0(x2) # load 0xf14da2b4 from memory into f10
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fmadd.s f23, f18, f10, f8, dyn # perform operation
fmadd.s f23, f18, f10, f8, rdn # perform operation
fmadd.s f23, f18, f10, f8, rmm # perform operation
fmadd.s f23, f18, f10, f8, rne # perform operation
fmadd.s f23, f18, f10, f8, rtz # perform operation
fmadd.s f23, f18, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0x12d4b75c # load x3 with value 0x12d4b75c
sw x3, 0(x2) # store 0x12d4b75c in memory
flw f18, 0(x2) # load 0x12d4b75c from memory into f18
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f5, f31, f18, f22, dyn # perform operation
fmadd.s f5, f31, f18, f22, rdn # perform operation
fmadd.s f5, f31, f18, f22, rmm # perform operation
fmadd.s f5, f31, f18, f22, rne # perform operation
fmadd.s f5, f31, f18, f22, rtz # perform operation
fmadd.s f5, f31, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f31, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f31, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
la x2, scratch
li x3, 0x0e069ea1 # load x3 with value 0x0e069ea1
sw x3, 0(x2) # store 0x0e069ea1 in memory
flw f2, 0(x2) # load 0x0e069ea1 from memory into f2
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
fmadd.s f14, f1, f2, f7, dyn # perform operation
fmadd.s f14, f1, f2, f7, rdn # perform operation
fmadd.s f14, f1, f2, f7, rmm # perform operation
fmadd.s f14, f1, f2, f7, rne # perform operation
fmadd.s f14, f1, f2, f7, rtz # perform operation
fmadd.s f14, f1, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f2, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
la x2, scratch
li x3, 0x8660b567 # load x3 with value 0x8660b567
sw x3, 0(x2) # store 0x8660b567 in memory
flw f17, 0(x2) # load 0x8660b567 from memory into f17
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
fmadd.s f20, f21, f17, f26, dyn # perform operation
fmadd.s f20, f21, f17, f26, rdn # perform operation
fmadd.s f20, f21, f17, f26, rmm # perform operation
fmadd.s f20, f21, f17, f26, rne # perform operation
fmadd.s f20, f21, f17, f26, rtz # perform operation
fmadd.s f20, f21, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f17, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
la x2, scratch
li x3, 0x9e321a90 # load x3 with value 0x9e321a90
sw x3, 0(x2) # store 0x9e321a90 in memory
flw f27, 0(x2) # load 0x9e321a90 from memory into f27
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmadd.s f2, f8, f27, f21, dyn # perform operation
fmadd.s f2, f8, f27, f21, rdn # perform operation
fmadd.s f2, f8, f27, f21, rmm # perform operation
fmadd.s f2, f8, f27, f21, rne # perform operation
fmadd.s f2, f8, f27, f21, rtz # perform operation
fmadd.s f2, f8, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
la x2, scratch
li x3, 0x100005ef # load x3 with value 0x100005ef
sw x3, 0(x2) # store 0x100005ef in memory
flw f10, 0(x2) # load 0x100005ef from memory into f10
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f21, f2, f10, f14, dyn # perform operation
fmadd.s f21, f2, f10, f14, rdn # perform operation
fmadd.s f21, f2, f10, f14, rmm # perform operation
fmadd.s f21, f2, f10, f14, rne # perform operation
fmadd.s f21, f2, f10, f14, rtz # perform operation
fmadd.s f21, f2, f10, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f10, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f10, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
la x2, scratch
li x3, 0x24ca57e3 # load x3 with value 0x24ca57e3
sw x3, 0(x2) # store 0x24ca57e3 in memory
flw f30, 0(x2) # load 0x24ca57e3 from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f10, f17, f30, f16, dyn # perform operation
fmadd.s f10, f17, f30, f16, rdn # perform operation
fmadd.s f10, f17, f30, f16, rmm # perform operation
fmadd.s f10, f17, f30, f16, rne # perform operation
fmadd.s f10, f17, f30, f16, rtz # perform operation
fmadd.s f10, f17, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f30, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x929645e4 # load x3 with value 0x929645e4
sw x3, 0(x2) # store 0x929645e4 in memory
flw f23, 0(x2) # load 0x929645e4 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmadd.s f26, f20, f23, f5, dyn # perform operation
fmadd.s f26, f20, f23, f5, rdn # perform operation
fmadd.s f26, f20, f23, f5, rmm # perform operation
fmadd.s f26, f20, f23, f5, rne # perform operation
fmadd.s f26, f20, f23, f5, rtz # perform operation
fmadd.s f26, f20, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f19, 0(x2) # load 0x807fffff from memory into f19
la x2, scratch
li x3, 0xba698ff9 # load x3 with value 0xba698ff9
sw x3, 0(x2) # store 0xba698ff9 in memory
flw f18, 0(x2) # load 0xba698ff9 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmadd.s f28, f19, f18, f7, dyn # perform operation
fmadd.s f28, f19, f18, f7, rdn # perform operation
fmadd.s f28, f19, f18, f7, rmm # perform operation
fmadd.s f28, f19, f18, f7, rne # perform operation
fmadd.s f28, f19, f18, f7, rtz # perform operation
fmadd.s f28, f19, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
la x2, scratch
li x3, 0x82eb94e3 # load x3 with value 0x82eb94e3
sw x3, 0(x2) # store 0x82eb94e3 in memory
flw f27, 0(x2) # load 0x82eb94e3 from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
fmadd.s f19, f30, f27, f26, dyn # perform operation
fmadd.s f19, f30, f27, f26, rdn # perform operation
fmadd.s f19, f30, f27, f26, rmm # perform operation
fmadd.s f19, f30, f27, f26, rne # perform operation
fmadd.s f19, f30, f27, f26, rtz # perform operation
fmadd.s f19, f30, f27, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f27, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f27, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
la x2, scratch
li x3, 0x9b7840f1 # load x3 with value 0x9b7840f1
sw x3, 0(x2) # store 0x9b7840f1 in memory
flw f26, 0(x2) # load 0x9b7840f1 from memory into f26
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmadd.s f29, f18, f26, f5, dyn # perform operation
fmadd.s f29, f18, f26, f5, rdn # perform operation
fmadd.s f29, f18, f26, f5, rmm # perform operation
fmadd.s f29, f18, f26, f5, rne # perform operation
fmadd.s f29, f18, f26, f5, rtz # perform operation
fmadd.s f29, f18, f26, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f26, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f26, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
la x2, scratch
li x3, 0xc6328e3d # load x3 with value 0xc6328e3d
sw x3, 0(x2) # store 0xc6328e3d in memory
flw f13, 0(x2) # load 0xc6328e3d from memory into f13
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f24, f22, f13, f10, dyn # perform operation
fmadd.s f24, f22, f13, f10, rdn # perform operation
fmadd.s f24, f22, f13, f10, rmm # perform operation
fmadd.s f24, f22, f13, f10, rne # perform operation
fmadd.s f24, f22, f13, f10, rtz # perform operation
fmadd.s f24, f22, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f13, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
la x2, scratch
li x3, 0xe43dbf1c # load x3 with value 0xe43dbf1c
sw x3, 0(x2) # store 0xe43dbf1c in memory
flw f14, 0(x2) # load 0xe43dbf1c from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
fmadd.s f6, f31, f14, f3, dyn # perform operation
fmadd.s f6, f31, f14, f3, rdn # perform operation
fmadd.s f6, f31, f14, f3, rmm # perform operation
fmadd.s f6, f31, f14, f3, rne # perform operation
fmadd.s f6, f31, f14, f3, rtz # perform operation
fmadd.s f6, f31, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f31, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f31, f14, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
la x2, scratch
li x3, 0x99f88ff3 # load x3 with value 0x99f88ff3
sw x3, 0(x2) # store 0x99f88ff3 in memory
flw f26, 0(x2) # load 0x99f88ff3 from memory into f26
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fmadd.s f2, f5, f26, f22, dyn # perform operation
fmadd.s f2, f5, f26, f22, rdn # perform operation
fmadd.s f2, f5, f26, f22, rmm # perform operation
fmadd.s f2, f5, f26, f22, rne # perform operation
fmadd.s f2, f5, f26, f22, rtz # perform operation
fmadd.s f2, f5, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f26, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
la x2, scratch
li x3, 0xeff96af1 # load x3 with value 0xeff96af1
sw x3, 0(x2) # store 0xeff96af1 in memory
flw f27, 0(x2) # load 0xeff96af1 from memory into f27
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
fmadd.s f24, f7, f27, f16, dyn # perform operation
fmadd.s f24, f7, f27, f16, rdn # perform operation
fmadd.s f24, f7, f27, f16, rmm # perform operation
fmadd.s f24, f7, f27, f16, rne # perform operation
fmadd.s f24, f7, f27, f16, rtz # perform operation
fmadd.s f24, f7, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
la x2, scratch
li x3, 0x468a0a71 # load x3 with value 0x468a0a71
sw x3, 0(x2) # store 0x468a0a71 in memory
flw f22, 0(x2) # load 0x468a0a71 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fmadd.s f10, f25, f22, f28, dyn # perform operation
fmadd.s f10, f25, f22, f28, rdn # perform operation
fmadd.s f10, f25, f22, f28, rmm # perform operation
fmadd.s f10, f25, f22, f28, rne # perform operation
fmadd.s f10, f25, f22, f28, rtz # perform operation
fmadd.s f10, f25, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f22, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
la x2, scratch
li x3, 0x52fa870a # load x3 with value 0x52fa870a
sw x3, 0(x2) # store 0x52fa870a in memory
flw f12, 0(x2) # load 0x52fa870a from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f18, f16, f12, f1, dyn # perform operation
fmadd.s f18, f16, f12, f1, rdn # perform operation
fmadd.s f18, f16, f12, f1, rmm # perform operation
fmadd.s f18, f16, f12, f1, rne # perform operation
fmadd.s f18, f16, f12, f1, rtz # perform operation
fmadd.s f18, f16, f12, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f12, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f12, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
la x2, scratch
li x3, 0xb68186e6 # load x3 with value 0xb68186e6
sw x3, 0(x2) # store 0xb68186e6 in memory
flw f8, 0(x2) # load 0xb68186e6 from memory into f8
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
fmadd.s f7, f11, f8, f18, dyn # perform operation
fmadd.s f7, f11, f8, f18, rdn # perform operation
fmadd.s f7, f11, f8, f18, rmm # perform operation
fmadd.s f7, f11, f8, f18, rne # perform operation
fmadd.s f7, f11, f8, f18, rtz # perform operation
fmadd.s f7, f11, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f8, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
la x2, scratch
li x3, 0x1eb7557d # load x3 with value 0x1eb7557d
sw x3, 0(x2) # store 0x1eb7557d in memory
flw f18, 0(x2) # load 0x1eb7557d from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmadd.s f19, f20, f18, f3, dyn # perform operation
fmadd.s f19, f20, f18, f3, rdn # perform operation
fmadd.s f19, f20, f18, f3, rmm # perform operation
fmadd.s f19, f20, f18, f3, rne # perform operation
fmadd.s f19, f20, f18, f3, rtz # perform operation
fmadd.s f19, f20, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
la x2, scratch
li x3, 0xcfbc79df # load x3 with value 0xcfbc79df
sw x3, 0(x2) # store 0xcfbc79df in memory
flw f3, 0(x2) # load 0xcfbc79df from memory into f3
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
fmadd.s f25, f23, f3, f14, dyn # perform operation
fmadd.s f25, f23, f3, f14, rdn # perform operation
fmadd.s f25, f23, f3, f14, rmm # perform operation
fmadd.s f25, f23, f3, f14, rne # perform operation
fmadd.s f25, f23, f3, f14, rtz # perform operation
fmadd.s f25, f23, f3, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f3, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f3, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0x8e8701e4 # load x3 with value 0x8e8701e4
sw x3, 0(x2) # store 0x8e8701e4 in memory
flw f7, 0(x2) # load 0x8e8701e4 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
fmadd.s f30, f2, f7, f29, dyn # perform operation
fmadd.s f30, f2, f7, f29, rdn # perform operation
fmadd.s f30, f2, f7, f29, rmm # perform operation
fmadd.s f30, f2, f7, f29, rne # perform operation
fmadd.s f30, f2, f7, f29, rtz # perform operation
fmadd.s f30, f2, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
la x2, scratch
li x3, 0xe659d7a2 # load x3 with value 0xe659d7a2
sw x3, 0(x2) # store 0xe659d7a2 in memory
flw f26, 0(x2) # load 0xe659d7a2 from memory into f26
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmadd.s f17, f1, f26, f8, dyn # perform operation
fmadd.s f17, f1, f26, f8, rdn # perform operation
fmadd.s f17, f1, f26, f8, rmm # perform operation
fmadd.s f17, f1, f26, f8, rne # perform operation
fmadd.s f17, f1, f26, f8, rtz # perform operation
fmadd.s f17, f1, f26, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f26, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f26, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
la x2, scratch
li x3, 0x878ecd20 # load x3 with value 0x878ecd20
sw x3, 0(x2) # store 0x878ecd20 in memory
flw f13, 0(x2) # load 0x878ecd20 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmadd.s f23, f11, f13, f27, dyn # perform operation
fmadd.s f23, f11, f13, f27, rdn # perform operation
fmadd.s f23, f11, f13, f27, rmm # perform operation
fmadd.s f23, f11, f13, f27, rne # perform operation
fmadd.s f23, f11, f13, f27, rtz # perform operation
fmadd.s f23, f11, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f13, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x01040143 # load x3 with value 0x01040143
sw x3, 0(x2) # store 0x01040143 in memory
flw f11, 0(x2) # load 0x01040143 from memory into f11
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f15, f28, f11, f10, dyn # perform operation
fmadd.s f15, f28, f11, f10, rdn # perform operation
fmadd.s f15, f28, f11, f10, rmm # perform operation
fmadd.s f15, f28, f11, f10, rne # perform operation
fmadd.s f15, f28, f11, f10, rtz # perform operation
fmadd.s f15, f28, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x6499ee89 # load x3 with value 0x6499ee89
sw x3, 0(x2) # store 0x6499ee89 in memory
flw f17, 0(x2) # load 0x6499ee89 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fmadd.s f1, f21, f17, f7, dyn # perform operation
fmadd.s f1, f21, f17, f7, rdn # perform operation
fmadd.s f1, f21, f17, f7, rmm # perform operation
fmadd.s f1, f21, f17, f7, rne # perform operation
fmadd.s f1, f21, f17, f7, rtz # perform operation
fmadd.s f1, f21, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
la x2, scratch
li x3, 0x22178245 # load x3 with value 0x22178245
sw x3, 0(x2) # store 0x22178245 in memory
flw f2, 0(x2) # load 0x22178245 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmadd.s f23, f6, f2, f24, dyn # perform operation
fmadd.s f23, f6, f2, f24, rdn # perform operation
fmadd.s f23, f6, f2, f24, rmm # perform operation
fmadd.s f23, f6, f2, f24, rne # perform operation
fmadd.s f23, f6, f2, f24, rtz # perform operation
fmadd.s f23, f6, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x92637667 # load x3 with value 0x92637667
sw x3, 0(x2) # store 0x92637667 in memory
flw f3, 0(x2) # load 0x92637667 from memory into f3
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmadd.s f13, f24, f3, f19, dyn # perform operation
fmadd.s f13, f24, f3, f19, rdn # perform operation
fmadd.s f13, f24, f3, f19, rmm # perform operation
fmadd.s f13, f24, f3, f19, rne # perform operation
fmadd.s f13, f24, f3, f19, rtz # perform operation
fmadd.s f13, f24, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f24, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f24, f3, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0xff827ba8 # load x3 with value 0xff827ba8
sw x3, 0(x2) # store 0xff827ba8 in memory
flw f22, 0(x2) # load 0xff827ba8 from memory into f22
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmadd.s f7, f21, f22, f31, dyn # perform operation
fmadd.s f7, f21, f22, f31, rdn # perform operation
fmadd.s f7, f21, f22, f31, rmm # perform operation
fmadd.s f7, f21, f22, f31, rne # perform operation
fmadd.s f7, f21, f22, f31, rtz # perform operation
fmadd.s f7, f21, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f22, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
la x2, scratch
li x3, 0xc5f85c3d # load x3 with value 0xc5f85c3d
sw x3, 0(x2) # store 0xc5f85c3d in memory
flw f26, 0(x2) # load 0xc5f85c3d from memory into f26
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmadd.s f10, f12, f26, f25, dyn # perform operation
fmadd.s f10, f12, f26, f25, rdn # perform operation
fmadd.s f10, f12, f26, f25, rmm # perform operation
fmadd.s f10, f12, f26, f25, rne # perform operation
fmadd.s f10, f12, f26, f25, rtz # perform operation
fmadd.s f10, f12, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
la x2, scratch
li x3, 0x08073837 # load x3 with value 0x08073837
sw x3, 0(x2) # store 0x08073837 in memory
flw f17, 0(x2) # load 0x08073837 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f24, f27, f17, f1, dyn # perform operation
fmadd.s f24, f27, f17, f1, rdn # perform operation
fmadd.s f24, f27, f17, f1, rmm # perform operation
fmadd.s f24, f27, f17, f1, rne # perform operation
fmadd.s f24, f27, f17, f1, rtz # perform operation
fmadd.s f24, f27, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f17, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0xab0ac17b # load x3 with value 0xab0ac17b
sw x3, 0(x2) # store 0xab0ac17b in memory
flw f8, 0(x2) # load 0xab0ac17b from memory into f8
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmadd.s f1, f15, f8, f12, dyn # perform operation
fmadd.s f1, f15, f8, f12, rdn # perform operation
fmadd.s f1, f15, f8, f12, rmm # perform operation
fmadd.s f1, f15, f8, f12, rne # perform operation
fmadd.s f1, f15, f8, f12, rtz # perform operation
fmadd.s f1, f15, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f15, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f15, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f15, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f15, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f15, f8, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
la x2, scratch
li x3, 0x8d3221c0 # load x3 with value 0x8d3221c0
sw x3, 0(x2) # store 0x8d3221c0 in memory
flw f11, 0(x2) # load 0x8d3221c0 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmadd.s f30, f28, f11, f12, dyn # perform operation
fmadd.s f30, f28, f11, f12, rdn # perform operation
fmadd.s f30, f28, f11, f12, rmm # perform operation
fmadd.s f30, f28, f11, f12, rne # perform operation
fmadd.s f30, f28, f11, f12, rtz # perform operation
fmadd.s f30, f28, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
la x2, scratch
li x3, 0x9e93ac96 # load x3 with value 0x9e93ac96
sw x3, 0(x2) # store 0x9e93ac96 in memory
flw f26, 0(x2) # load 0x9e93ac96 from memory into f26
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmadd.s f9, f15, f26, f19, dyn # perform operation
fmadd.s f9, f15, f26, f19, rdn # perform operation
fmadd.s f9, f15, f26, f19, rmm # perform operation
fmadd.s f9, f15, f26, f19, rne # perform operation
fmadd.s f9, f15, f26, f19, rtz # perform operation
fmadd.s f9, f15, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
la x2, scratch
li x3, 0x48545e3a # load x3 with value 0x48545e3a
sw x3, 0(x2) # store 0x48545e3a in memory
flw f7, 0(x2) # load 0x48545e3a from memory into f7
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmadd.s f17, f22, f7, f29, dyn # perform operation
fmadd.s f17, f22, f7, f29, rdn # perform operation
fmadd.s f17, f22, f7, f29, rmm # perform operation
fmadd.s f17, f22, f7, f29, rne # perform operation
fmadd.s f17, f22, f7, f29, rtz # perform operation
fmadd.s f17, f22, f7, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f22, f7, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f22, f7, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f22, f7, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f22, f7, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f22, f7, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
la x2, scratch
li x3, 0xbb46983e # load x3 with value 0xbb46983e
sw x3, 0(x2) # store 0xbb46983e in memory
flw f30, 0(x2) # load 0xbb46983e from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
fmadd.s f7, f2, f30, f16, dyn # perform operation
fmadd.s f7, f2, f30, f16, rdn # perform operation
fmadd.s f7, f2, f30, f16, rmm # perform operation
fmadd.s f7, f2, f30, f16, rne # perform operation
fmadd.s f7, f2, f30, f16, rtz # perform operation
fmadd.s f7, f2, f30, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f30, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f30, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f30, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f30, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f30, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0x08870d8c # load x3 with value 0x08870d8c
sw x3, 0(x2) # store 0x08870d8c in memory
flw f16, 0(x2) # load 0x08870d8c from memory into f16
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmadd.s f18, f29, f16, f19, dyn # perform operation
fmadd.s f18, f29, f16, f19, rdn # perform operation
fmadd.s f18, f29, f16, f19, rmm # perform operation
fmadd.s f18, f29, f16, f19, rne # perform operation
fmadd.s f18, f29, f16, f19, rtz # perform operation
fmadd.s f18, f29, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xf6b067ae # load x3 with value 0xf6b067ae
sw x3, 0(x2) # store 0xf6b067ae in memory
flw f6, 0(x2) # load 0xf6b067ae from memory into f6
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fmadd.s f13, f9, f6, f28, dyn # perform operation
fmadd.s f13, f9, f6, f28, rdn # perform operation
fmadd.s f13, f9, f6, f28, rmm # perform operation
fmadd.s f13, f9, f6, f28, rne # perform operation
fmadd.s f13, f9, f6, f28, rtz # perform operation
fmadd.s f13, f9, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f6, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f23, 0(x2) # load 0x00400000 from memory into f23
la x2, scratch
li x3, 0x2979cf4e # load x3 with value 0x2979cf4e
sw x3, 0(x2) # store 0x2979cf4e in memory
flw f21, 0(x2) # load 0x2979cf4e from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f18, f23, f21, f14, dyn # perform operation
fmadd.s f18, f23, f21, f14, rdn # perform operation
fmadd.s f18, f23, f21, f14, rmm # perform operation
fmadd.s f18, f23, f21, f14, rne # perform operation
fmadd.s f18, f23, f21, f14, rtz # perform operation
fmadd.s f18, f23, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0x12bbdea2 # load x3 with value 0x12bbdea2
sw x3, 0(x2) # store 0x12bbdea2 in memory
flw f31, 0(x2) # load 0x12bbdea2 from memory into f31
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f17, f7, f31, f3, dyn # perform operation
fmadd.s f17, f7, f31, f3, rdn # perform operation
fmadd.s f17, f7, f31, f3, rmm # perform operation
fmadd.s f17, f7, f31, f3, rne # perform operation
fmadd.s f17, f7, f31, f3, rtz # perform operation
fmadd.s f17, f7, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
la x2, scratch
li x3, 0x929c4870 # load x3 with value 0x929c4870
sw x3, 0(x2) # store 0x929c4870 in memory
flw f20, 0(x2) # load 0x929c4870 from memory into f20
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
fmadd.s f28, f24, f20, f3, dyn # perform operation
fmadd.s f28, f24, f20, f3, rdn # perform operation
fmadd.s f28, f24, f20, f3, rmm # perform operation
fmadd.s f28, f24, f20, f3, rne # perform operation
fmadd.s f28, f24, f20, f3, rtz # perform operation
fmadd.s f28, f24, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f20, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
la x2, scratch
li x3, 0x09e5ab72 # load x3 with value 0x09e5ab72
sw x3, 0(x2) # store 0x09e5ab72 in memory
flw f26, 0(x2) # load 0x09e5ab72 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmadd.s f5, f10, f26, f11, dyn # perform operation
fmadd.s f5, f10, f26, f11, rdn # perform operation
fmadd.s f5, f10, f26, f11, rmm # perform operation
fmadd.s f5, f10, f26, f11, rne # perform operation
fmadd.s f5, f10, f26, f11, rtz # perform operation
fmadd.s f5, f10, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f26, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
la x2, scratch
li x3, 0xe5e4d130 # load x3 with value 0xe5e4d130
sw x3, 0(x2) # store 0xe5e4d130 in memory
flw f1, 0(x2) # load 0xe5e4d130 from memory into f1
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmadd.s f20, f29, f1, f21, dyn # perform operation
fmadd.s f20, f29, f1, f21, rdn # perform operation
fmadd.s f20, f29, f1, f21, rmm # perform operation
fmadd.s f20, f29, f1, f21, rne # perform operation
fmadd.s f20, f29, f1, f21, rtz # perform operation
fmadd.s f20, f29, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
la x2, scratch
li x3, 0xd9859c39 # load x3 with value 0xd9859c39
sw x3, 0(x2) # store 0xd9859c39 in memory
flw f16, 0(x2) # load 0xd9859c39 from memory into f16
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fmadd.s f24, f7, f16, f30, dyn # perform operation
fmadd.s f24, f7, f16, f30, rdn # perform operation
fmadd.s f24, f7, f16, f30, rmm # perform operation
fmadd.s f24, f7, f16, f30, rne # perform operation
fmadd.s f24, f7, f16, f30, rtz # perform operation
fmadd.s f24, f7, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f7, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f7, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
la x2, scratch
li x3, 0xc3a5e95c # load x3 with value 0xc3a5e95c
sw x3, 0(x2) # store 0xc3a5e95c in memory
flw f17, 0(x2) # load 0xc3a5e95c from memory into f17
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmadd.s f20, f26, f17, f3, dyn # perform operation
fmadd.s f20, f26, f17, f3, rdn # perform operation
fmadd.s f20, f26, f17, f3, rmm # perform operation
fmadd.s f20, f26, f17, f3, rne # perform operation
fmadd.s f20, f26, f17, f3, rtz # perform operation
fmadd.s f20, f26, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f17, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
la x2, scratch
li x3, 0xb06bd6de # load x3 with value 0xb06bd6de
sw x3, 0(x2) # store 0xb06bd6de in memory
flw f24, 0(x2) # load 0xb06bd6de from memory into f24
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
fmadd.s f23, f9, f24, f8, dyn # perform operation
fmadd.s f23, f9, f24, f8, rdn # perform operation
fmadd.s f23, f9, f24, f8, rmm # perform operation
fmadd.s f23, f9, f24, f8, rne # perform operation
fmadd.s f23, f9, f24, f8, rtz # perform operation
fmadd.s f23, f9, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f9, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f9, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
la x2, scratch
li x3, 0x5fa66d89 # load x3 with value 0x5fa66d89
sw x3, 0(x2) # store 0x5fa66d89 in memory
flw f2, 0(x2) # load 0x5fa66d89 from memory into f2
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f15, 0(x2) # load 0xffbfffff from memory into f15
fmadd.s f22, f21, f2, f15, dyn # perform operation
fmadd.s f22, f21, f2, f15, rdn # perform operation
fmadd.s f22, f21, f2, f15, rmm # perform operation
fmadd.s f22, f21, f2, f15, rne # perform operation
fmadd.s f22, f21, f2, f15, rtz # perform operation
fmadd.s f22, f21, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
la x2, scratch
li x3, 0xd27ae970 # load x3 with value 0xd27ae970
sw x3, 0(x2) # store 0xd27ae970 in memory
flw f2, 0(x2) # load 0xd27ae970 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
fmadd.s f5, f20, f2, f12, dyn # perform operation
fmadd.s f5, f20, f2, f12, rdn # perform operation
fmadd.s f5, f20, f2, f12, rmm # perform operation
fmadd.s f5, f20, f2, f12, rne # perform operation
fmadd.s f5, f20, f2, f12, rtz # perform operation
fmadd.s f5, f20, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f2, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
la x2, scratch
li x3, 0x01b280af # load x3 with value 0x01b280af
sw x3, 0(x2) # store 0x01b280af in memory
flw f22, 0(x2) # load 0x01b280af from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmadd.s f1, f3, f22, f23, dyn # perform operation
fmadd.s f1, f3, f22, f23, rdn # perform operation
fmadd.s f1, f3, f22, f23, rmm # perform operation
fmadd.s f1, f3, f22, f23, rne # perform operation
fmadd.s f1, f3, f22, f23, rtz # perform operation
fmadd.s f1, f3, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
la x2, scratch
li x3, 0x3bad4968 # load x3 with value 0x3bad4968
sw x3, 0(x2) # store 0x3bad4968 in memory
flw f22, 0(x2) # load 0x3bad4968 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fmadd.s f5, f9, f22, f8, dyn # perform operation
fmadd.s f5, f9, f22, f8, rdn # perform operation
fmadd.s f5, f9, f22, f8, rmm # perform operation
fmadd.s f5, f9, f22, f8, rne # perform operation
fmadd.s f5, f9, f22, f8, rtz # perform operation
fmadd.s f5, f9, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
la x2, scratch
li x3, 0xb2a88500 # load x3 with value 0xb2a88500
sw x3, 0(x2) # store 0xb2a88500 in memory
flw f28, 0(x2) # load 0xb2a88500 from memory into f28
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f27, f1, f28, f31, dyn # perform operation
fmadd.s f27, f1, f28, f31, rdn # perform operation
fmadd.s f27, f1, f28, f31, rmm # perform operation
fmadd.s f27, f1, f28, f31, rne # perform operation
fmadd.s f27, f1, f28, f31, rtz # perform operation
fmadd.s f27, f1, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f28, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
la x2, scratch
li x3, 0xa48e11ef # load x3 with value 0xa48e11ef
sw x3, 0(x2) # store 0xa48e11ef in memory
flw f23, 0(x2) # load 0xa48e11ef from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
fmadd.s f24, f20, f23, f28, dyn # perform operation
fmadd.s f24, f20, f23, f28, rdn # perform operation
fmadd.s f24, f20, f23, f28, rmm # perform operation
fmadd.s f24, f20, f23, f28, rne # perform operation
fmadd.s f24, f20, f23, f28, rtz # perform operation
fmadd.s f24, f20, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0x17b11346 # load x3 with value 0x17b11346
sw x3, 0(x2) # store 0x17b11346 in memory
flw f9, 0(x2) # load 0x17b11346 from memory into f9
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmadd.s f22, f27, f9, f20, dyn # perform operation
fmadd.s f22, f27, f9, f20, rdn # perform operation
fmadd.s f22, f27, f9, f20, rmm # perform operation
fmadd.s f22, f27, f9, f20, rne # perform operation
fmadd.s f22, f27, f9, f20, rtz # perform operation
fmadd.s f22, f27, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f27, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f27, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
la x2, scratch
li x3, 0x6633154d # load x3 with value 0x6633154d
sw x3, 0(x2) # store 0x6633154d in memory
flw f8, 0(x2) # load 0x6633154d from memory into f8
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
fmadd.s f26, f15, f8, f10, dyn # perform operation
fmadd.s f26, f15, f8, f10, rdn # perform operation
fmadd.s f26, f15, f8, f10, rmm # perform operation
fmadd.s f26, f15, f8, f10, rne # perform operation
fmadd.s f26, f15, f8, f10, rtz # perform operation
fmadd.s f26, f15, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
la x2, scratch
li x3, 0x53e1020e # load x3 with value 0x53e1020e
sw x3, 0(x2) # store 0x53e1020e in memory
flw f17, 0(x2) # load 0x53e1020e from memory into f17
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmadd.s f20, f26, f17, f24, dyn # perform operation
fmadd.s f20, f26, f17, f24, rdn # perform operation
fmadd.s f20, f26, f17, f24, rmm # perform operation
fmadd.s f20, f26, f17, f24, rne # perform operation
fmadd.s f20, f26, f17, f24, rtz # perform operation
fmadd.s f20, f26, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f17, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
la x2, scratch
li x3, 0x6020f09c # load x3 with value 0x6020f09c
sw x3, 0(x2) # store 0x6020f09c in memory
flw f31, 0(x2) # load 0x6020f09c from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
fmadd.s f18, f29, f31, f10, dyn # perform operation
fmadd.s f18, f29, f31, f10, rdn # perform operation
fmadd.s f18, f29, f31, f10, rmm # perform operation
fmadd.s f18, f29, f31, f10, rne # perform operation
fmadd.s f18, f29, f31, f10, rtz # perform operation
fmadd.s f18, f29, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f29, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f29, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
la x2, scratch
li x3, 0x5b7c9d38 # load x3 with value 0x5b7c9d38
sw x3, 0(x2) # store 0x5b7c9d38 in memory
flw f21, 0(x2) # load 0x5b7c9d38 from memory into f21
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f8, f25, f21, f14, dyn # perform operation
fmadd.s f8, f25, f21, f14, rdn # perform operation
fmadd.s f8, f25, f21, f14, rmm # perform operation
fmadd.s f8, f25, f21, f14, rne # perform operation
fmadd.s f8, f25, f21, f14, rtz # perform operation
fmadd.s f8, f25, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f25, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
la x2, scratch
li x3, 0x4c647bfe # load x3 with value 0x4c647bfe
sw x3, 0(x2) # store 0x4c647bfe in memory
flw f28, 0(x2) # load 0x4c647bfe from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
fmadd.s f11, f7, f28, f8, dyn # perform operation
fmadd.s f11, f7, f28, f8, rdn # perform operation
fmadd.s f11, f7, f28, f8, rmm # perform operation
fmadd.s f11, f7, f28, f8, rne # perform operation
fmadd.s f11, f7, f28, f8, rtz # perform operation
fmadd.s f11, f7, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f7, f28, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
la x2, scratch
li x3, 0x34d863ee # load x3 with value 0x34d863ee
sw x3, 0(x2) # store 0x34d863ee in memory
flw f23, 0(x2) # load 0x34d863ee from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
fmadd.s f7, f21, f23, f15, dyn # perform operation
fmadd.s f7, f21, f23, f15, rdn # perform operation
fmadd.s f7, f21, f23, f15, rmm # perform operation
fmadd.s f7, f21, f23, f15, rne # perform operation
fmadd.s f7, f21, f23, f15, rtz # perform operation
fmadd.s f7, f21, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xb4c1e7a7 # load x3 with value 0xb4c1e7a7
sw x3, 0(x2) # store 0xb4c1e7a7 in memory
flw f22, 0(x2) # load 0xb4c1e7a7 from memory into f22
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f30, f27, f22, f3, dyn # perform operation
fmadd.s f30, f27, f22, f3, rdn # perform operation
fmadd.s f30, f27, f22, f3, rmm # perform operation
fmadd.s f30, f27, f22, f3, rne # perform operation
fmadd.s f30, f27, f22, f3, rtz # perform operation
fmadd.s f30, f27, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0x712f0704 # load x3 with value 0x712f0704
sw x3, 0(x2) # store 0x712f0704 in memory
flw f28, 0(x2) # load 0x712f0704 from memory into f28
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fmadd.s f7, f18, f28, f9, dyn # perform operation
fmadd.s f7, f18, f28, f9, rdn # perform operation
fmadd.s f7, f18, f28, f9, rmm # perform operation
fmadd.s f7, f18, f28, f9, rne # perform operation
fmadd.s f7, f18, f28, f9, rtz # perform operation
fmadd.s f7, f18, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f28, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
la x2, scratch
li x3, 0xb44262c2 # load x3 with value 0xb44262c2
sw x3, 0(x2) # store 0xb44262c2 in memory
flw f22, 0(x2) # load 0xb44262c2 from memory into f22
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
fmadd.s f28, f18, f22, f29, dyn # perform operation
fmadd.s f28, f18, f22, f29, rdn # perform operation
fmadd.s f28, f18, f22, f29, rmm # perform operation
fmadd.s f28, f18, f22, f29, rne # perform operation
fmadd.s f28, f18, f22, f29, rtz # perform operation
fmadd.s f28, f18, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f18, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f18, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f18, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f18, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f18, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0x970e8090 # load x3 with value 0x970e8090
sw x3, 0(x2) # store 0x970e8090 in memory
flw f29, 0(x2) # load 0x970e8090 from memory into f29
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fmadd.s f22, f19, f29, f15, dyn # perform operation
fmadd.s f22, f19, f29, f15, rdn # perform operation
fmadd.s f22, f19, f29, f15, rmm # perform operation
fmadd.s f22, f19, f29, f15, rne # perform operation
fmadd.s f22, f19, f29, f15, rtz # perform operation
fmadd.s f22, f19, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xd75dc6ff # load x3 with value 0xd75dc6ff
sw x3, 0(x2) # store 0xd75dc6ff in memory
flw f9, 0(x2) # load 0xd75dc6ff from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmadd.s f11, f31, f9, f25, dyn # perform operation
fmadd.s f11, f31, f9, f25, rdn # perform operation
fmadd.s f11, f31, f9, f25, rmm # perform operation
fmadd.s f11, f31, f9, f25, rne # perform operation
fmadd.s f11, f31, f9, f25, rtz # perform operation
fmadd.s f11, f31, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f9, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
la x2, scratch
li x3, 0xe3566a86 # load x3 with value 0xe3566a86
sw x3, 0(x2) # store 0xe3566a86 in memory
flw f27, 0(x2) # load 0xe3566a86 from memory into f27
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
fmadd.s f24, f2, f27, f17, dyn # perform operation
fmadd.s f24, f2, f27, f17, rdn # perform operation
fmadd.s f24, f2, f27, f17, rmm # perform operation
fmadd.s f24, f2, f27, f17, rne # perform operation
fmadd.s f24, f2, f27, f17, rtz # perform operation
fmadd.s f24, f2, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f27, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
la x2, scratch
li x3, 0xd734dd30 # load x3 with value 0xd734dd30
sw x3, 0(x2) # store 0xd734dd30 in memory
flw f10, 0(x2) # load 0xd734dd30 from memory into f10
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
fmadd.s f13, f27, f10, f21, dyn # perform operation
fmadd.s f13, f27, f10, f21, rdn # perform operation
fmadd.s f13, f27, f10, f21, rmm # perform operation
fmadd.s f13, f27, f10, f21, rne # perform operation
fmadd.s f13, f27, f10, f21, rtz # perform operation
fmadd.s f13, f27, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0x3cb27c0e # load x3 with value 0x3cb27c0e
sw x3, 0(x2) # store 0x3cb27c0e in memory
flw f6, 0(x2) # load 0x3cb27c0e from memory into f6
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmadd.s f5, f11, f6, f13, dyn # perform operation
fmadd.s f5, f11, f6, f13, rdn # perform operation
fmadd.s f5, f11, f6, f13, rmm # perform operation
fmadd.s f5, f11, f6, f13, rne # perform operation
fmadd.s f5, f11, f6, f13, rtz # perform operation
fmadd.s f5, f11, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f11, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f11, f6, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
la x2, scratch
li x3, 0x4019d055 # load x3 with value 0x4019d055
sw x3, 0(x2) # store 0x4019d055 in memory
flw f27, 0(x2) # load 0x4019d055 from memory into f27
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmadd.s f2, f23, f27, f11, dyn # perform operation
fmadd.s f2, f23, f27, f11, rdn # perform operation
fmadd.s f2, f23, f27, f11, rmm # perform operation
fmadd.s f2, f23, f27, f11, rne # perform operation
fmadd.s f2, f23, f27, f11, rtz # perform operation
fmadd.s f2, f23, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f27, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
la x2, scratch
li x3, 0x3d37ab8f # load x3 with value 0x3d37ab8f
sw x3, 0(x2) # store 0x3d37ab8f in memory
flw f22, 0(x2) # load 0x3d37ab8f from memory into f22
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f12, f16, f22, f25, dyn # perform operation
fmadd.s f12, f16, f22, f25, rdn # perform operation
fmadd.s f12, f16, f22, f25, rmm # perform operation
fmadd.s f12, f16, f22, f25, rne # perform operation
fmadd.s f12, f16, f22, f25, rtz # perform operation
fmadd.s f12, f16, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f16, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f16, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f16, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f16, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f16, f22, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
la x2, scratch
li x3, 0xcb458ea0 # load x3 with value 0xcb458ea0
sw x3, 0(x2) # store 0xcb458ea0 in memory
flw f21, 0(x2) # load 0xcb458ea0 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f14, f8, f21, f9, dyn # perform operation
fmadd.s f14, f8, f21, f9, rdn # perform operation
fmadd.s f14, f8, f21, f9, rmm # perform operation
fmadd.s f14, f8, f21, f9, rne # perform operation
fmadd.s f14, f8, f21, f9, rtz # perform operation
fmadd.s f14, f8, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f8, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f8, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f8, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f8, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f8, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
la x2, scratch
li x3, 0xc8be00f5 # load x3 with value 0xc8be00f5
sw x3, 0(x2) # store 0xc8be00f5 in memory
flw f23, 0(x2) # load 0xc8be00f5 from memory into f23
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
fmadd.s f16, f11, f23, f24, dyn # perform operation
fmadd.s f16, f11, f23, f24, rdn # perform operation
fmadd.s f16, f11, f23, f24, rmm # perform operation
fmadd.s f16, f11, f23, f24, rne # perform operation
fmadd.s f16, f11, f23, f24, rtz # perform operation
fmadd.s f16, f11, f23, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f23, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f23, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
la x2, scratch
li x3, 0x42217cd0 # load x3 with value 0x42217cd0
sw x3, 0(x2) # store 0x42217cd0 in memory
flw f1, 0(x2) # load 0x42217cd0 from memory into f1
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
fmadd.s f24, f10, f1, f6, dyn # perform operation
fmadd.s f24, f10, f1, f6, rdn # perform operation
fmadd.s f24, f10, f1, f6, rmm # perform operation
fmadd.s f24, f10, f1, f6, rne # perform operation
fmadd.s f24, f10, f1, f6, rtz # perform operation
fmadd.s f24, f10, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f1, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0xb342f2ed # load x3 with value 0xb342f2ed
sw x3, 0(x2) # store 0xb342f2ed in memory
flw f22, 0(x2) # load 0xb342f2ed from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f26, f31, f22, f10, dyn # perform operation
fmadd.s f26, f31, f22, f10, rdn # perform operation
fmadd.s f26, f31, f22, f10, rmm # perform operation
fmadd.s f26, f31, f22, f10, rne # perform operation
fmadd.s f26, f31, f22, f10, rtz # perform operation
fmadd.s f26, f31, f22, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f31, f22, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f31, f22, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
la x2, scratch
li x3, 0xfddcaa94 # load x3 with value 0xfddcaa94
sw x3, 0(x2) # store 0xfddcaa94 in memory
flw f26, 0(x2) # load 0xfddcaa94 from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmadd.s f23, f24, f26, f10, dyn # perform operation
fmadd.s f23, f24, f26, f10, rdn # perform operation
fmadd.s f23, f24, f26, f10, rmm # perform operation
fmadd.s f23, f24, f26, f10, rne # perform operation
fmadd.s f23, f24, f26, f10, rtz # perform operation
fmadd.s f23, f24, f26, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f26, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f26, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
la x2, scratch
li x3, 0xd0256c59 # load x3 with value 0xd0256c59
sw x3, 0(x2) # store 0xd0256c59 in memory
flw f16, 0(x2) # load 0xd0256c59 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
fmadd.s f8, f19, f16, f9, dyn # perform operation
fmadd.s f8, f19, f16, f9, rdn # perform operation
fmadd.s f8, f19, f16, f9, rmm # perform operation
fmadd.s f8, f19, f16, f9, rne # perform operation
fmadd.s f8, f19, f16, f9, rtz # perform operation
fmadd.s f8, f19, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f19, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f19, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f19, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f19, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f19, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
la x2, scratch
li x3, 0x5fc0cd7e # load x3 with value 0x5fc0cd7e
sw x3, 0(x2) # store 0x5fc0cd7e in memory
flw f23, 0(x2) # load 0x5fc0cd7e from memory into f23
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f29, f31, f23, f6, dyn # perform operation
fmadd.s f29, f31, f23, f6, rdn # perform operation
fmadd.s f29, f31, f23, f6, rmm # perform operation
fmadd.s f29, f31, f23, f6, rne # perform operation
fmadd.s f29, f31, f23, f6, rtz # perform operation
fmadd.s f29, f31, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f3, 0(x2) # load 0x80400000 from memory into f3
la x2, scratch
li x3, 0x4c05c3be # load x3 with value 0x4c05c3be
sw x3, 0(x2) # store 0x4c05c3be in memory
flw f19, 0(x2) # load 0x4c05c3be from memory into f19
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
fmadd.s f20, f3, f19, f1, dyn # perform operation
fmadd.s f20, f3, f19, f1, rdn # perform operation
fmadd.s f20, f3, f19, f1, rmm # perform operation
fmadd.s f20, f3, f19, f1, rne # perform operation
fmadd.s f20, f3, f19, f1, rtz # perform operation
fmadd.s f20, f3, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x17e0f1b5 # load x3 with value 0x17e0f1b5
sw x3, 0(x2) # store 0x17e0f1b5 in memory
flw f26, 0(x2) # load 0x17e0f1b5 from memory into f26
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f17, f12, f26, f28, dyn # perform operation
fmadd.s f17, f12, f26, f28, rdn # perform operation
fmadd.s f17, f12, f26, f28, rmm # perform operation
fmadd.s f17, f12, f26, f28, rne # perform operation
fmadd.s f17, f12, f26, f28, rtz # perform operation
fmadd.s f17, f12, f26, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f12, f26, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f12, f26, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xb0dd520c # load x3 with value 0xb0dd520c
sw x3, 0(x2) # store 0xb0dd520c in memory
flw f20, 0(x2) # load 0xb0dd520c from memory into f20
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f21, 0(x2) # load 0x80000000 from memory into f21
fmadd.s f13, f9, f20, f21, dyn # perform operation
fmadd.s f13, f9, f20, f21, rdn # perform operation
fmadd.s f13, f9, f20, f21, rmm # perform operation
fmadd.s f13, f9, f20, f21, rne # perform operation
fmadd.s f13, f9, f20, f21, rtz # perform operation
fmadd.s f13, f9, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f20, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0x8709ca31 # load x3 with value 0x8709ca31
sw x3, 0(x2) # store 0x8709ca31 in memory
flw f13, 0(x2) # load 0x8709ca31 from memory into f13
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f10, f25, f13, f18, dyn # perform operation
fmadd.s f10, f25, f13, f18, rdn # perform operation
fmadd.s f10, f25, f13, f18, rmm # perform operation
fmadd.s f10, f25, f13, f18, rne # perform operation
fmadd.s f10, f25, f13, f18, rtz # perform operation
fmadd.s f10, f25, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f13, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
la x2, scratch
li x3, 0x24d09465 # load x3 with value 0x24d09465
sw x3, 0(x2) # store 0x24d09465 in memory
flw f3, 0(x2) # load 0x24d09465 from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmadd.s f21, f2, f3, f9, dyn # perform operation
fmadd.s f21, f2, f3, f9, rdn # perform operation
fmadd.s f21, f2, f3, f9, rmm # perform operation
fmadd.s f21, f2, f3, f9, rne # perform operation
fmadd.s f21, f2, f3, f9, rtz # perform operation
fmadd.s f21, f2, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f3, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0xd9a6d669 # load x3 with value 0xd9a6d669
sw x3, 0(x2) # store 0xd9a6d669 in memory
flw f31, 0(x2) # load 0xd9a6d669 from memory into f31
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f23, f9, f31, f8, dyn # perform operation
fmadd.s f23, f9, f31, f8, rdn # perform operation
fmadd.s f23, f9, f31, f8, rmm # perform operation
fmadd.s f23, f9, f31, f8, rne # perform operation
fmadd.s f23, f9, f31, f8, rtz # perform operation
fmadd.s f23, f9, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f9, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f9, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f9, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f9, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f9, f31, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x6feee833 # load x3 with value 0x6feee833
sw x3, 0(x2) # store 0x6feee833 in memory
flw f2, 0(x2) # load 0x6feee833 from memory into f2
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fmadd.s f10, f31, f2, f14, dyn # perform operation
fmadd.s f10, f31, f2, f14, rdn # perform operation
fmadd.s f10, f31, f2, f14, rmm # perform operation
fmadd.s f10, f31, f2, f14, rne # perform operation
fmadd.s f10, f31, f2, f14, rtz # perform operation
fmadd.s f10, f31, f2, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f31, f2, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f31, f2, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
la x2, scratch
li x3, 0x4513326f # load x3 with value 0x4513326f
sw x3, 0(x2) # store 0x4513326f in memory
flw f2, 0(x2) # load 0x4513326f from memory into f2
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fmadd.s f9, f5, f2, f15, dyn # perform operation
fmadd.s f9, f5, f2, f15, rdn # perform operation
fmadd.s f9, f5, f2, f15, rmm # perform operation
fmadd.s f9, f5, f2, f15, rne # perform operation
fmadd.s f9, f5, f2, f15, rtz # perform operation
fmadd.s f9, f5, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f2, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
la x2, scratch
li x3, 0xe437bfb7 # load x3 with value 0xe437bfb7
sw x3, 0(x2) # store 0xe437bfb7 in memory
flw f2, 0(x2) # load 0xe437bfb7 from memory into f2
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f13, f25, f2, f18, dyn # perform operation
fmadd.s f13, f25, f2, f18, rdn # perform operation
fmadd.s f13, f25, f2, f18, rmm # perform operation
fmadd.s f13, f25, f2, f18, rne # perform operation
fmadd.s f13, f25, f2, f18, rtz # perform operation
fmadd.s f13, f25, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f25, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f25, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
la x2, scratch
li x3, 0xbcc38790 # load x3 with value 0xbcc38790
sw x3, 0(x2) # store 0xbcc38790 in memory
flw f1, 0(x2) # load 0xbcc38790 from memory into f1
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmadd.s f30, f3, f1, f29, dyn # perform operation
fmadd.s f30, f3, f1, f29, rdn # perform operation
fmadd.s f30, f3, f1, f29, rmm # perform operation
fmadd.s f30, f3, f1, f29, rne # perform operation
fmadd.s f30, f3, f1, f29, rtz # perform operation
fmadd.s f30, f3, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f1, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
la x2, scratch
li x3, 0x15242410 # load x3 with value 0x15242410
sw x3, 0(x2) # store 0x15242410 in memory
flw f20, 0(x2) # load 0x15242410 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmadd.s f6, f16, f20, f28, dyn # perform operation
fmadd.s f6, f16, f20, f28, rdn # perform operation
fmadd.s f6, f16, f20, f28, rmm # perform operation
fmadd.s f6, f16, f20, f28, rne # perform operation
fmadd.s f6, f16, f20, f28, rtz # perform operation
fmadd.s f6, f16, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f20, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0x260d7848 # load x3 with value 0x260d7848
sw x3, 0(x2) # store 0x260d7848 in memory
flw f5, 0(x2) # load 0x260d7848 from memory into f5
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f7, f21, f5, f3, dyn # perform operation
fmadd.s f7, f21, f5, f3, rdn # perform operation
fmadd.s f7, f21, f5, f3, rmm # perform operation
fmadd.s f7, f21, f5, f3, rne # perform operation
fmadd.s f7, f21, f5, f3, rtz # perform operation
fmadd.s f7, f21, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
la x2, scratch
li x3, 0x0c89af1c # load x3 with value 0x0c89af1c
sw x3, 0(x2) # store 0x0c89af1c in memory
flw f10, 0(x2) # load 0x0c89af1c from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f6, f28, f10, f21, dyn # perform operation
fmadd.s f6, f28, f10, f21, rdn # perform operation
fmadd.s f6, f28, f10, f21, rmm # perform operation
fmadd.s f6, f28, f10, f21, rne # perform operation
fmadd.s f6, f28, f10, f21, rtz # perform operation
fmadd.s f6, f28, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f10, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
la x2, scratch
li x3, 0x6e5d8c7d # load x3 with value 0x6e5d8c7d
sw x3, 0(x2) # store 0x6e5d8c7d in memory
flw f29, 0(x2) # load 0x6e5d8c7d from memory into f29
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f3, f24, f29, f22, dyn # perform operation
fmadd.s f3, f24, f29, f22, rdn # perform operation
fmadd.s f3, f24, f29, f22, rmm # perform operation
fmadd.s f3, f24, f29, f22, rne # perform operation
fmadd.s f3, f24, f29, f22, rtz # perform operation
fmadd.s f3, f24, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f24, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f24, f29, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
la x2, scratch
li x3, 0x45fdc9fa # load x3 with value 0x45fdc9fa
sw x3, 0(x2) # store 0x45fdc9fa in memory
flw f14, 0(x2) # load 0x45fdc9fa from memory into f14
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmadd.s f7, f27, f14, f6, dyn # perform operation
fmadd.s f7, f27, f14, f6, rdn # perform operation
fmadd.s f7, f27, f14, f6, rmm # perform operation
fmadd.s f7, f27, f14, f6, rne # perform operation
fmadd.s f7, f27, f14, f6, rtz # perform operation
fmadd.s f7, f27, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f14, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
la x2, scratch
li x3, 0x754cbb23 # load x3 with value 0x754cbb23
sw x3, 0(x2) # store 0x754cbb23 in memory
flw f29, 0(x2) # load 0x754cbb23 from memory into f29
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f7, f18, f29, f5, dyn # perform operation
fmadd.s f7, f18, f29, f5, rdn # perform operation
fmadd.s f7, f18, f29, f5, rmm # perform operation
fmadd.s f7, f18, f29, f5, rne # perform operation
fmadd.s f7, f18, f29, f5, rtz # perform operation
fmadd.s f7, f18, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f29, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
la x2, scratch
li x3, 0x74ef66f1 # load x3 with value 0x74ef66f1
sw x3, 0(x2) # store 0x74ef66f1 in memory
flw f24, 0(x2) # load 0x74ef66f1 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fmadd.s f18, f11, f24, f6, dyn # perform operation
fmadd.s f18, f11, f24, f6, rdn # perform operation
fmadd.s f18, f11, f24, f6, rmm # perform operation
fmadd.s f18, f11, f24, f6, rne # perform operation
fmadd.s f18, f11, f24, f6, rtz # perform operation
fmadd.s f18, f11, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
la x2, scratch
li x3, 0x8bdcf857 # load x3 with value 0x8bdcf857
sw x3, 0(x2) # store 0x8bdcf857 in memory
flw f16, 0(x2) # load 0x8bdcf857 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f10, f9, f16, f1, dyn # perform operation
fmadd.s f10, f9, f16, f1, rdn # perform operation
fmadd.s f10, f9, f16, f1, rmm # perform operation
fmadd.s f10, f9, f16, f1, rne # perform operation
fmadd.s f10, f9, f16, f1, rtz # perform operation
fmadd.s f10, f9, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f16, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xcf38be52 # load x3 with value 0xcf38be52
sw x3, 0(x2) # store 0xcf38be52 in memory
flw f9, 0(x2) # load 0xcf38be52 from memory into f9
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
fmadd.s f22, f19, f9, f13, dyn # perform operation
fmadd.s f22, f19, f9, f13, rdn # perform operation
fmadd.s f22, f19, f9, f13, rmm # perform operation
fmadd.s f22, f19, f9, f13, rne # perform operation
fmadd.s f22, f19, f9, f13, rtz # perform operation
fmadd.s f22, f19, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0xa65a0554 # load x3 with value 0xa65a0554
sw x3, 0(x2) # store 0xa65a0554 in memory
flw f28, 0(x2) # load 0xa65a0554 from memory into f28
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
fmadd.s f5, f1, f28, f14, dyn # perform operation
fmadd.s f5, f1, f28, f14, rdn # perform operation
fmadd.s f5, f1, f28, f14, rmm # perform operation
fmadd.s f5, f1, f28, f14, rne # perform operation
fmadd.s f5, f1, f28, f14, rtz # perform operation
fmadd.s f5, f1, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f1, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f1, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f1, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f1, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f1, f28, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
la x2, scratch
li x3, 0xe6b12ad3 # load x3 with value 0xe6b12ad3
sw x3, 0(x2) # store 0xe6b12ad3 in memory
flw f30, 0(x2) # load 0xe6b12ad3 from memory into f30
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
fmadd.s f31, f19, f30, f21, dyn # perform operation
fmadd.s f31, f19, f30, f21, rdn # perform operation
fmadd.s f31, f19, f30, f21, rmm # perform operation
fmadd.s f31, f19, f30, f21, rne # perform operation
fmadd.s f31, f19, f30, f21, rtz # perform operation
fmadd.s f31, f19, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f30, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
la x2, scratch
li x3, 0xd0e0c6c7 # load x3 with value 0xd0e0c6c7
sw x3, 0(x2) # store 0xd0e0c6c7 in memory
flw f23, 0(x2) # load 0xd0e0c6c7 from memory into f23
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f2, f26, f23, f14, dyn # perform operation
fmadd.s f2, f26, f23, f14, rdn # perform operation
fmadd.s f2, f26, f23, f14, rmm # perform operation
fmadd.s f2, f26, f23, f14, rne # perform operation
fmadd.s f2, f26, f23, f14, rtz # perform operation
fmadd.s f2, f26, f23, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f26, f23, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f26, f23, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
la x2, scratch
li x3, 0xacede8e1 # load x3 with value 0xacede8e1
sw x3, 0(x2) # store 0xacede8e1 in memory
flw f21, 0(x2) # load 0xacede8e1 from memory into f21
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmadd.s f14, f23, f21, f8, dyn # perform operation
fmadd.s f14, f23, f21, f8, rdn # perform operation
fmadd.s f14, f23, f21, f8, rmm # perform operation
fmadd.s f14, f23, f21, f8, rne # perform operation
fmadd.s f14, f23, f21, f8, rtz # perform operation
fmadd.s f14, f23, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f23, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f23, f21, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
la x2, scratch
li x3, 0x411dacad # load x3 with value 0x411dacad
sw x3, 0(x2) # store 0x411dacad in memory
flw f20, 0(x2) # load 0x411dacad from memory into f20
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f30, 0(x2) # load 0xffffffff from memory into f30
fmadd.s f2, f31, f20, f30, dyn # perform operation
fmadd.s f2, f31, f20, f30, rdn # perform operation
fmadd.s f2, f31, f20, f30, rmm # perform operation
fmadd.s f2, f31, f20, f30, rne # perform operation
fmadd.s f2, f31, f20, f30, rtz # perform operation
fmadd.s f2, f31, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f20, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
la x2, scratch
li x3, 0x3f0916f8 # load x3 with value 0x3f0916f8
sw x3, 0(x2) # store 0x3f0916f8 in memory
flw f30, 0(x2) # load 0x3f0916f8 from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f7, f13, f30, f23, dyn # perform operation
fmadd.s f7, f13, f30, f23, rdn # perform operation
fmadd.s f7, f13, f30, f23, rmm # perform operation
fmadd.s f7, f13, f30, f23, rne # perform operation
fmadd.s f7, f13, f30, f23, rtz # perform operation
fmadd.s f7, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f13, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
la x2, scratch
li x3, 0x2857ba9e # load x3 with value 0x2857ba9e
sw x3, 0(x2) # store 0x2857ba9e in memory
flw f1, 0(x2) # load 0x2857ba9e from memory into f1
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
fmadd.s f28, f17, f1, f22, dyn # perform operation
fmadd.s f28, f17, f1, f22, rdn # perform operation
fmadd.s f28, f17, f1, f22, rmm # perform operation
fmadd.s f28, f17, f1, f22, rne # perform operation
fmadd.s f28, f17, f1, f22, rtz # perform operation
fmadd.s f28, f17, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f17, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f17, f1, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
la x2, scratch
li x3, 0x32a2fe1a # load x3 with value 0x32a2fe1a
sw x3, 0(x2) # store 0x32a2fe1a in memory
flw f25, 0(x2) # load 0x32a2fe1a from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
fmadd.s f19, f12, f25, f13, dyn # perform operation
fmadd.s f19, f12, f25, f13, rdn # perform operation
fmadd.s f19, f12, f25, f13, rmm # perform operation
fmadd.s f19, f12, f25, f13, rne # perform operation
fmadd.s f19, f12, f25, f13, rtz # perform operation
fmadd.s f19, f12, f25, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f12, f25, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f12, f25, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
la x2, scratch
li x3, 0x0912d127 # load x3 with value 0x0912d127
sw x3, 0(x2) # store 0x0912d127 in memory
flw f19, 0(x2) # load 0x0912d127 from memory into f19
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f18, f1, f19, f9, dyn # perform operation
fmadd.s f18, f1, f19, f9, rdn # perform operation
fmadd.s f18, f1, f19, f9, rmm # perform operation
fmadd.s f18, f1, f19, f9, rne # perform operation
fmadd.s f18, f1, f19, f9, rtz # perform operation
fmadd.s f18, f1, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f1, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f1, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
la x2, scratch
li x3, 0xee85ea8b # load x3 with value 0xee85ea8b
sw x3, 0(x2) # store 0xee85ea8b in memory
flw f6, 0(x2) # load 0xee85ea8b from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f16, f21, f6, f30, dyn # perform operation
fmadd.s f16, f21, f6, f30, rdn # perform operation
fmadd.s f16, f21, f6, f30, rmm # perform operation
fmadd.s f16, f21, f6, f30, rne # perform operation
fmadd.s f16, f21, f6, f30, rtz # perform operation
fmadd.s f16, f21, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0x3167bba1 # load x3 with value 0x3167bba1
sw x3, 0(x2) # store 0x3167bba1 in memory
flw f22, 0(x2) # load 0x3167bba1 from memory into f22
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
fmadd.s f28, f19, f22, f15, dyn # perform operation
fmadd.s f28, f19, f22, f15, rdn # perform operation
fmadd.s f28, f19, f22, f15, rmm # perform operation
fmadd.s f28, f19, f22, f15, rne # perform operation
fmadd.s f28, f19, f22, f15, rtz # perform operation
fmadd.s f28, f19, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f22, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x9c976bc9 # load x3 with value 0x9c976bc9
sw x3, 0(x2) # store 0x9c976bc9 in memory
flw f13, 0(x2) # load 0x9c976bc9 from memory into f13
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
fmadd.s f10, f28, f13, f17, dyn # perform operation
fmadd.s f10, f28, f13, f17, rdn # perform operation
fmadd.s f10, f28, f13, f17, rmm # perform operation
fmadd.s f10, f28, f13, f17, rne # perform operation
fmadd.s f10, f28, f13, f17, rtz # perform operation
fmadd.s f10, f28, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xf96dd929 # load x3 with value 0xf96dd929
sw x3, 0(x2) # store 0xf96dd929 in memory
flw f21, 0(x2) # load 0xf96dd929 from memory into f21
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f1, f18, f21, f5, dyn # perform operation
fmadd.s f1, f18, f21, f5, rdn # perform operation
fmadd.s f1, f18, f21, f5, rmm # perform operation
fmadd.s f1, f18, f21, f5, rne # perform operation
fmadd.s f1, f18, f21, f5, rtz # perform operation
fmadd.s f1, f18, f21, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f21, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f21, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
la x2, scratch
li x3, 0xf0d2ea62 # load x3 with value 0xf0d2ea62
sw x3, 0(x2) # store 0xf0d2ea62 in memory
flw f8, 0(x2) # load 0xf0d2ea62 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmadd.s f25, f23, f8, f30, dyn # perform operation
fmadd.s f25, f23, f8, f30, rdn # perform operation
fmadd.s f25, f23, f8, f30, rmm # perform operation
fmadd.s f25, f23, f8, f30, rne # perform operation
fmadd.s f25, f23, f8, f30, rtz # perform operation
fmadd.s f25, f23, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
la x2, scratch
li x3, 0xd70e1422 # load x3 with value 0xd70e1422
sw x3, 0(x2) # store 0xd70e1422 in memory
flw f19, 0(x2) # load 0xd70e1422 from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
fmadd.s f3, f31, f19, f30, dyn # perform operation
fmadd.s f3, f31, f19, f30, rdn # perform operation
fmadd.s f3, f31, f19, f30, rmm # perform operation
fmadd.s f3, f31, f19, f30, rne # perform operation
fmadd.s f3, f31, f19, f30, rtz # perform operation
fmadd.s f3, f31, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f19, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
la x2, scratch
li x3, 0xec9e1716 # load x3 with value 0xec9e1716
sw x3, 0(x2) # store 0xec9e1716 in memory
flw f13, 0(x2) # load 0xec9e1716 from memory into f13
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
fmadd.s f16, f18, f13, f12, dyn # perform operation
fmadd.s f16, f18, f13, f12, rdn # perform operation
fmadd.s f16, f18, f13, f12, rmm # perform operation
fmadd.s f16, f18, f13, f12, rne # perform operation
fmadd.s f16, f18, f13, f12, rtz # perform operation
fmadd.s f16, f18, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f13, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x7fd46a21 # load x3 with value 0x7fd46a21
sw x3, 0(x2) # store 0x7fd46a21 in memory
flw f7, 0(x2) # load 0x7fd46a21 from memory into f7
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmadd.s f28, f9, f7, f19, dyn # perform operation
fmadd.s f28, f9, f7, f19, rdn # perform operation
fmadd.s f28, f9, f7, f19, rmm # perform operation
fmadd.s f28, f9, f7, f19, rne # perform operation
fmadd.s f28, f9, f7, f19, rtz # perform operation
fmadd.s f28, f9, f7, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f7, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f7, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0xea47de88 # load x3 with value 0xea47de88
sw x3, 0(x2) # store 0xea47de88 in memory
flw f12, 0(x2) # load 0xea47de88 from memory into f12
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
fmadd.s f17, f11, f12, f10, dyn # perform operation
fmadd.s f17, f11, f12, f10, rdn # perform operation
fmadd.s f17, f11, f12, f10, rmm # perform operation
fmadd.s f17, f11, f12, f10, rne # perform operation
fmadd.s f17, f11, f12, f10, rtz # perform operation
fmadd.s f17, f11, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f11, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f11, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f11, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f11, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f11, f12, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0x2e24db63 # load x3 with value 0x2e24db63
sw x3, 0(x2) # store 0x2e24db63 in memory
flw f7, 0(x2) # load 0x2e24db63 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmadd.s f5, f20, f7, f1, dyn # perform operation
fmadd.s f5, f20, f7, f1, rdn # perform operation
fmadd.s f5, f20, f7, f1, rmm # perform operation
fmadd.s f5, f20, f7, f1, rne # perform operation
fmadd.s f5, f20, f7, f1, rtz # perform operation
fmadd.s f5, f20, f7, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f7, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f7, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f2, 0(x2) # load 0x80000001 from memory into f2
la x2, scratch
li x3, 0x2f6b4971 # load x3 with value 0x2f6b4971
sw x3, 0(x2) # store 0x2f6b4971 in memory
flw f22, 0(x2) # load 0x2f6b4971 from memory into f22
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f18, f2, f22, f24, dyn # perform operation
fmadd.s f18, f2, f22, f24, rdn # perform operation
fmadd.s f18, f2, f22, f24, rmm # perform operation
fmadd.s f18, f2, f22, f24, rne # perform operation
fmadd.s f18, f2, f22, f24, rtz # perform operation
fmadd.s f18, f2, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f22, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0xed1d5dba # load x3 with value 0xed1d5dba
sw x3, 0(x2) # store 0xed1d5dba in memory
flw f10, 0(x2) # load 0xed1d5dba from memory into f10
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmadd.s f17, f8, f10, f12, dyn # perform operation
fmadd.s f17, f8, f10, f12, rdn # perform operation
fmadd.s f17, f8, f10, f12, rmm # perform operation
fmadd.s f17, f8, f10, f12, rne # perform operation
fmadd.s f17, f8, f10, f12, rtz # perform operation
fmadd.s f17, f8, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x73903c3f # load x3 with value 0x73903c3f
sw x3, 0(x2) # store 0x73903c3f in memory
flw f2, 0(x2) # load 0x73903c3f from memory into f2
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f14, f3, f2, f21, dyn # perform operation
fmadd.s f14, f3, f2, f21, rdn # perform operation
fmadd.s f14, f3, f2, f21, rmm # perform operation
fmadd.s f14, f3, f2, f21, rne # perform operation
fmadd.s f14, f3, f2, f21, rtz # perform operation
fmadd.s f14, f3, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f2, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f11, 0(x2) # load 0x80000001 from memory into f11
la x2, scratch
li x3, 0x49d56687 # load x3 with value 0x49d56687
sw x3, 0(x2) # store 0x49d56687 in memory
flw f31, 0(x2) # load 0x49d56687 from memory into f31
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f24, f11, f31, f20, dyn # perform operation
fmadd.s f24, f11, f31, f20, rdn # perform operation
fmadd.s f24, f11, f31, f20, rmm # perform operation
fmadd.s f24, f11, f31, f20, rne # perform operation
fmadd.s f24, f11, f31, f20, rtz # perform operation
fmadd.s f24, f11, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f31, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
la x2, scratch
li x3, 0xf728b862 # load x3 with value 0xf728b862
sw x3, 0(x2) # store 0xf728b862 in memory
flw f13, 0(x2) # load 0xf728b862 from memory into f13
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
fmadd.s f5, f22, f13, f17, dyn # perform operation
fmadd.s f5, f22, f13, f17, rdn # perform operation
fmadd.s f5, f22, f13, f17, rmm # perform operation
fmadd.s f5, f22, f13, f17, rne # perform operation
fmadd.s f5, f22, f13, f17, rtz # perform operation
fmadd.s f5, f22, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f22, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f22, f13, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
la x2, scratch
li x3, 0xc6c9e6ce # load x3 with value 0xc6c9e6ce
sw x3, 0(x2) # store 0xc6c9e6ce in memory
flw f21, 0(x2) # load 0xc6c9e6ce from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
fmadd.s f31, f19, f21, f11, dyn # perform operation
fmadd.s f31, f19, f21, f11, rdn # perform operation
fmadd.s f31, f19, f21, f11, rmm # perform operation
fmadd.s f31, f19, f21, f11, rne # perform operation
fmadd.s f31, f19, f21, f11, rtz # perform operation
fmadd.s f31, f19, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f21, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
la x2, scratch
li x3, 0xcb5d2b82 # load x3 with value 0xcb5d2b82
sw x3, 0(x2) # store 0xcb5d2b82 in memory
flw f25, 0(x2) # load 0xcb5d2b82 from memory into f25
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f5, f8, f25, f2, dyn # perform operation
fmadd.s f5, f8, f25, f2, rdn # perform operation
fmadd.s f5, f8, f25, f2, rmm # perform operation
fmadd.s f5, f8, f25, f2, rne # perform operation
fmadd.s f5, f8, f25, f2, rtz # perform operation
fmadd.s f5, f8, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f25, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
la x2, scratch
li x3, 0x6e6e3026 # load x3 with value 0x6e6e3026
sw x3, 0(x2) # store 0x6e6e3026 in memory
flw f13, 0(x2) # load 0x6e6e3026 from memory into f13
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmadd.s f29, f25, f13, f23, dyn # perform operation
fmadd.s f29, f25, f13, f23, rdn # perform operation
fmadd.s f29, f25, f13, f23, rmm # perform operation
fmadd.s f29, f25, f13, f23, rne # perform operation
fmadd.s f29, f25, f13, f23, rtz # perform operation
fmadd.s f29, f25, f13, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f25, f13, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f25, f13, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f25, f13, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f25, f13, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f25, f13, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
la x2, scratch
li x3, 0x8176ed2c # load x3 with value 0x8176ed2c
sw x3, 0(x2) # store 0x8176ed2c in memory
flw f29, 0(x2) # load 0x8176ed2c from memory into f29
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f26, f6, f29, f21, dyn # perform operation
fmadd.s f26, f6, f29, f21, rdn # perform operation
fmadd.s f26, f6, f29, f21, rmm # perform operation
fmadd.s f26, f6, f29, f21, rne # perform operation
fmadd.s f26, f6, f29, f21, rtz # perform operation
fmadd.s f26, f6, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f29, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
la x2, scratch
li x3, 0x91be8436 # load x3 with value 0x91be8436
sw x3, 0(x2) # store 0x91be8436 in memory
flw f19, 0(x2) # load 0x91be8436 from memory into f19
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmadd.s f20, f16, f19, f13, dyn # perform operation
fmadd.s f20, f16, f19, f13, rdn # perform operation
fmadd.s f20, f16, f19, f13, rmm # perform operation
fmadd.s f20, f16, f19, f13, rne # perform operation
fmadd.s f20, f16, f19, f13, rtz # perform operation
fmadd.s f20, f16, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f16, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f16, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
la x2, scratch
li x3, 0x82f4d0cd # load x3 with value 0x82f4d0cd
sw x3, 0(x2) # store 0x82f4d0cd in memory
flw f8, 0(x2) # load 0x82f4d0cd from memory into f8
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f23, f1, f8, f26, dyn # perform operation
fmadd.s f23, f1, f8, f26, rdn # perform operation
fmadd.s f23, f1, f8, f26, rmm # perform operation
fmadd.s f23, f1, f8, f26, rne # perform operation
fmadd.s f23, f1, f8, f26, rtz # perform operation
fmadd.s f23, f1, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f8, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
la x2, scratch
li x3, 0x0ee2c4b2 # load x3 with value 0x0ee2c4b2
sw x3, 0(x2) # store 0x0ee2c4b2 in memory
flw f26, 0(x2) # load 0x0ee2c4b2 from memory into f26
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f23, f12, f26, f13, dyn # perform operation
fmadd.s f23, f12, f26, f13, rdn # perform operation
fmadd.s f23, f12, f26, f13, rmm # perform operation
fmadd.s f23, f12, f26, f13, rne # perform operation
fmadd.s f23, f12, f26, f13, rtz # perform operation
fmadd.s f23, f12, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
la x2, scratch
li x3, 0xffe3c940 # load x3 with value 0xffe3c940
sw x3, 0(x2) # store 0xffe3c940 in memory
flw f27, 0(x2) # load 0xffe3c940 from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
fmadd.s f15, f20, f27, f21, dyn # perform operation
fmadd.s f15, f20, f27, f21, rdn # perform operation
fmadd.s f15, f20, f27, f21, rmm # perform operation
fmadd.s f15, f20, f27, f21, rne # perform operation
fmadd.s f15, f20, f27, f21, rtz # perform operation
fmadd.s f15, f20, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f27, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
la x2, scratch
li x3, 0xe8f8a779 # load x3 with value 0xe8f8a779
sw x3, 0(x2) # store 0xe8f8a779 in memory
flw f2, 0(x2) # load 0xe8f8a779 from memory into f2
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f19, 0(x2) # load 0xffffffff from memory into f19
fmadd.s f16, f5, f2, f19, dyn # perform operation
fmadd.s f16, f5, f2, f19, rdn # perform operation
fmadd.s f16, f5, f2, f19, rmm # perform operation
fmadd.s f16, f5, f2, f19, rne # perform operation
fmadd.s f16, f5, f2, f19, rtz # perform operation
fmadd.s f16, f5, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f5, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f5, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
la x2, scratch
li x3, 0x897a860e # load x3 with value 0x897a860e
sw x3, 0(x2) # store 0x897a860e in memory
flw f6, 0(x2) # load 0x897a860e from memory into f6
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmadd.s f9, f3, f6, f27, dyn # perform operation
fmadd.s f9, f3, f6, f27, rdn # perform operation
fmadd.s f9, f3, f6, f27, rmm # perform operation
fmadd.s f9, f3, f6, f27, rne # perform operation
fmadd.s f9, f3, f6, f27, rtz # perform operation
fmadd.s f9, f3, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f6, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
la x2, scratch
li x3, 0x1dd5e447 # load x3 with value 0x1dd5e447
sw x3, 0(x2) # store 0x1dd5e447 in memory
flw f6, 0(x2) # load 0x1dd5e447 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f30, f9, f6, f18, dyn # perform operation
fmadd.s f30, f9, f6, f18, rdn # perform operation
fmadd.s f30, f9, f6, f18, rmm # perform operation
fmadd.s f30, f9, f6, f18, rne # perform operation
fmadd.s f30, f9, f6, f18, rtz # perform operation
fmadd.s f30, f9, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f9, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f9, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f9, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f9, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f9, f6, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
la x2, scratch
li x3, 0xdab49ba0 # load x3 with value 0xdab49ba0
sw x3, 0(x2) # store 0xdab49ba0 in memory
flw f30, 0(x2) # load 0xdab49ba0 from memory into f30
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fmadd.s f3, f10, f30, f6, dyn # perform operation
fmadd.s f3, f10, f30, f6, rdn # perform operation
fmadd.s f3, f10, f30, f6, rmm # perform operation
fmadd.s f3, f10, f30, f6, rne # perform operation
fmadd.s f3, f10, f30, f6, rtz # perform operation
fmadd.s f3, f10, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f30, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
la x2, scratch
li x3, 0x618c2d8d # load x3 with value 0x618c2d8d
sw x3, 0(x2) # store 0x618c2d8d in memory
flw f1, 0(x2) # load 0x618c2d8d from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f12, f15, f1, f21, dyn # perform operation
fmadd.s f12, f15, f1, f21, rdn # perform operation
fmadd.s f12, f15, f1, f21, rmm # perform operation
fmadd.s f12, f15, f1, f21, rne # perform operation
fmadd.s f12, f15, f1, f21, rtz # perform operation
fmadd.s f12, f15, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f1, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
la x2, scratch
li x3, 0x327f9ab1 # load x3 with value 0x327f9ab1
sw x3, 0(x2) # store 0x327f9ab1 in memory
flw f20, 0(x2) # load 0x327f9ab1 from memory into f20
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f31, f28, f20, f13, dyn # perform operation
fmadd.s f31, f28, f20, f13, rdn # perform operation
fmadd.s f31, f28, f20, f13, rmm # perform operation
fmadd.s f31, f28, f20, f13, rne # perform operation
fmadd.s f31, f28, f20, f13, rtz # perform operation
fmadd.s f31, f28, f20, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f20, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f20, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xcbbd9b89 # load x3 with value 0xcbbd9b89
sw x3, 0(x2) # store 0xcbbd9b89 in memory
flw f7, 0(x2) # load 0xcbbd9b89 from memory into f7
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
fmadd.s f12, f13, f7, f24, dyn # perform operation
fmadd.s f12, f13, f7, f24, rdn # perform operation
fmadd.s f12, f13, f7, f24, rmm # perform operation
fmadd.s f12, f13, f7, f24, rne # perform operation
fmadd.s f12, f13, f7, f24, rtz # perform operation
fmadd.s f12, f13, f7, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f13, f7, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f13, f7, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xe8b4eec0 # load x3 with value 0xe8b4eec0
sw x3, 0(x2) # store 0xe8b4eec0 in memory
flw f1, 0(x2) # load 0xe8b4eec0 from memory into f1
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f6, f18, f1, f31, dyn # perform operation
fmadd.s f6, f18, f1, f31, rdn # perform operation
fmadd.s f6, f18, f1, f31, rmm # perform operation
fmadd.s f6, f18, f1, f31, rne # perform operation
fmadd.s f6, f18, f1, f31, rtz # perform operation
fmadd.s f6, f18, f1, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f1, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f1, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
la x2, scratch
li x3, 0x99df2b6b # load x3 with value 0x99df2b6b
sw x3, 0(x2) # store 0x99df2b6b in memory
flw f23, 0(x2) # load 0x99df2b6b from memory into f23
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f31, f3, f23, f5, dyn # perform operation
fmadd.s f31, f3, f23, f5, rdn # perform operation
fmadd.s f31, f3, f23, f5, rmm # perform operation
fmadd.s f31, f3, f23, f5, rne # perform operation
fmadd.s f31, f3, f23, f5, rtz # perform operation
fmadd.s f31, f3, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x2ad52ffd # load x3 with value 0x2ad52ffd
sw x3, 0(x2) # store 0x2ad52ffd in memory
flw f3, 0(x2) # load 0x2ad52ffd from memory into f3
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f8, 0(x2) # load 0xbf800000 from memory into f8
fmadd.s f16, f30, f3, f8, dyn # perform operation
fmadd.s f16, f30, f3, f8, rdn # perform operation
fmadd.s f16, f30, f3, f8, rmm # perform operation
fmadd.s f16, f30, f3, f8, rne # perform operation
fmadd.s f16, f30, f3, f8, rtz # perform operation
fmadd.s f16, f30, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f3, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0xfa3dc11d # load x3 with value 0xfa3dc11d
sw x3, 0(x2) # store 0xfa3dc11d in memory
flw f16, 0(x2) # load 0xfa3dc11d from memory into f16
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fmadd.s f6, f7, f16, f24, dyn # perform operation
fmadd.s f6, f7, f16, f24, rdn # perform operation
fmadd.s f6, f7, f16, f24, rmm # perform operation
fmadd.s f6, f7, f16, f24, rne # perform operation
fmadd.s f6, f7, f16, f24, rtz # perform operation
fmadd.s f6, f7, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f16, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0xcdc40db3 # load x3 with value 0xcdc40db3
sw x3, 0(x2) # store 0xcdc40db3 in memory
flw f12, 0(x2) # load 0xcdc40db3 from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
fmadd.s f24, f8, f12, f30, dyn # perform operation
fmadd.s f24, f8, f12, f30, rdn # perform operation
fmadd.s f24, f8, f12, f30, rmm # perform operation
fmadd.s f24, f8, f12, f30, rne # perform operation
fmadd.s f24, f8, f12, f30, rtz # perform operation
fmadd.s f24, f8, f12, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f12, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f12, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0xf52eaf44 # load x3 with value 0xf52eaf44
sw x3, 0(x2) # store 0xf52eaf44 in memory
flw f16, 0(x2) # load 0xf52eaf44 from memory into f16
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f5, f14, f16, f23, dyn # perform operation
fmadd.s f5, f14, f16, f23, rdn # perform operation
fmadd.s f5, f14, f16, f23, rmm # perform operation
fmadd.s f5, f14, f16, f23, rne # perform operation
fmadd.s f5, f14, f16, f23, rtz # perform operation
fmadd.s f5, f14, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f16, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
la x2, scratch
li x3, 0xf4d6d5a8 # load x3 with value 0xf4d6d5a8
sw x3, 0(x2) # store 0xf4d6d5a8 in memory
flw f10, 0(x2) # load 0xf4d6d5a8 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmadd.s f15, f26, f10, f27, dyn # perform operation
fmadd.s f15, f26, f10, f27, rdn # perform operation
fmadd.s f15, f26, f10, f27, rmm # perform operation
fmadd.s f15, f26, f10, f27, rne # perform operation
fmadd.s f15, f26, f10, f27, rtz # perform operation
fmadd.s f15, f26, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f10, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0x09daed0f # load x3 with value 0x09daed0f
sw x3, 0(x2) # store 0x09daed0f in memory
flw f28, 0(x2) # load 0x09daed0f from memory into f28
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmadd.s f5, f9, f28, f22, dyn # perform operation
fmadd.s f5, f9, f28, f22, rdn # perform operation
fmadd.s f5, f9, f28, f22, rmm # perform operation
fmadd.s f5, f9, f28, f22, rne # perform operation
fmadd.s f5, f9, f28, f22, rtz # perform operation
fmadd.s f5, f9, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f28, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x50e05588 # load x3 with value 0x50e05588
sw x3, 0(x2) # store 0x50e05588 in memory
flw f30, 0(x2) # load 0x50e05588 from memory into f30
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
fmadd.s f7, f25, f30, f27, dyn # perform operation
fmadd.s f7, f25, f30, f27, rdn # perform operation
fmadd.s f7, f25, f30, f27, rmm # perform operation
fmadd.s f7, f25, f30, f27, rne # perform operation
fmadd.s f7, f25, f30, f27, rtz # perform operation
fmadd.s f7, f25, f30, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f30, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f30, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x3092bb7e # load x3 with value 0x3092bb7e
sw x3, 0(x2) # store 0x3092bb7e in memory
flw f3, 0(x2) # load 0x3092bb7e from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmadd.s f29, f8, f3, f21, dyn # perform operation
fmadd.s f29, f8, f3, f21, rdn # perform operation
fmadd.s f29, f8, f3, f21, rmm # perform operation
fmadd.s f29, f8, f3, f21, rne # perform operation
fmadd.s f29, f8, f3, f21, rtz # perform operation
fmadd.s f29, f8, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f8, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f8, f3, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xc480f192 # load x3 with value 0xc480f192
sw x3, 0(x2) # store 0xc480f192 in memory
flw f1, 0(x2) # load 0xc480f192 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f22, f13, f1, f7, dyn # perform operation
fmadd.s f22, f13, f1, f7, rdn # perform operation
fmadd.s f22, f13, f1, f7, rmm # perform operation
fmadd.s f22, f13, f1, f7, rne # perform operation
fmadd.s f22, f13, f1, f7, rtz # perform operation
fmadd.s f22, f13, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f1, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
la x2, scratch
li x3, 0x9da042f3 # load x3 with value 0x9da042f3
sw x3, 0(x2) # store 0x9da042f3 in memory
flw f11, 0(x2) # load 0x9da042f3 from memory into f11
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmadd.s f5, f7, f11, f3, dyn # perform operation
fmadd.s f5, f7, f11, f3, rdn # perform operation
fmadd.s f5, f7, f11, f3, rmm # perform operation
fmadd.s f5, f7, f11, f3, rne # perform operation
fmadd.s f5, f7, f11, f3, rtz # perform operation
fmadd.s f5, f7, f11, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f11, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f11, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
la x2, scratch
li x3, 0x9cda93b8 # load x3 with value 0x9cda93b8
sw x3, 0(x2) # store 0x9cda93b8 in memory
flw f18, 0(x2) # load 0x9cda93b8 from memory into f18
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
fmadd.s f9, f8, f18, f12, dyn # perform operation
fmadd.s f9, f8, f18, f12, rdn # perform operation
fmadd.s f9, f8, f18, f12, rmm # perform operation
fmadd.s f9, f8, f18, f12, rne # perform operation
fmadd.s f9, f8, f18, f12, rtz # perform operation
fmadd.s f9, f8, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f18, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
la x2, scratch
li x3, 0x7e629ece # load x3 with value 0x7e629ece
sw x3, 0(x2) # store 0x7e629ece in memory
flw f30, 0(x2) # load 0x7e629ece from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f2, f21, f30, f12, dyn # perform operation
fmadd.s f2, f21, f30, f12, rdn # perform operation
fmadd.s f2, f21, f30, f12, rmm # perform operation
fmadd.s f2, f21, f30, f12, rne # perform operation
fmadd.s f2, f21, f30, f12, rtz # perform operation
fmadd.s f2, f21, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
la x2, scratch
li x3, 0x8eb18c04 # load x3 with value 0x8eb18c04
sw x3, 0(x2) # store 0x8eb18c04 in memory
flw f9, 0(x2) # load 0x8eb18c04 from memory into f9
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmadd.s f10, f27, f9, f14, dyn # perform operation
fmadd.s f10, f27, f9, f14, rdn # perform operation
fmadd.s f10, f27, f9, f14, rmm # perform operation
fmadd.s f10, f27, f9, f14, rne # perform operation
fmadd.s f10, f27, f9, f14, rtz # perform operation
fmadd.s f10, f27, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f27, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f27, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
la x2, scratch
li x3, 0x2b9cf4b0 # load x3 with value 0x2b9cf4b0
sw x3, 0(x2) # store 0x2b9cf4b0 in memory
flw f8, 0(x2) # load 0x2b9cf4b0 from memory into f8
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
fmadd.s f13, f30, f8, f10, dyn # perform operation
fmadd.s f13, f30, f8, f10, rdn # perform operation
fmadd.s f13, f30, f8, f10, rmm # perform operation
fmadd.s f13, f30, f8, f10, rne # perform operation
fmadd.s f13, f30, f8, f10, rtz # perform operation
fmadd.s f13, f30, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f30, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f30, f8, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0xce7de71d # load x3 with value 0xce7de71d
sw x3, 0(x2) # store 0xce7de71d in memory
flw f1, 0(x2) # load 0xce7de71d from memory into f1
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
fmadd.s f2, f13, f1, f10, dyn # perform operation
fmadd.s f2, f13, f1, f10, rdn # perform operation
fmadd.s f2, f13, f1, f10, rmm # perform operation
fmadd.s f2, f13, f1, f10, rne # perform operation
fmadd.s f2, f13, f1, f10, rtz # perform operation
fmadd.s f2, f13, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f13, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f13, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f13, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f13, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f13, f1, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
la x2, scratch
li x3, 0xc246261b # load x3 with value 0xc246261b
sw x3, 0(x2) # store 0xc246261b in memory
flw f25, 0(x2) # load 0xc246261b from memory into f25
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
fmadd.s f17, f6, f25, f16, dyn # perform operation
fmadd.s f17, f6, f25, f16, rdn # perform operation
fmadd.s f17, f6, f25, f16, rmm # perform operation
fmadd.s f17, f6, f25, f16, rne # perform operation
fmadd.s f17, f6, f25, f16, rtz # perform operation
fmadd.s f17, f6, f25, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f6, f25, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f6, f25, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
la x2, scratch
li x3, 0x06231eb4 # load x3 with value 0x06231eb4
sw x3, 0(x2) # store 0x06231eb4 in memory
flw f15, 0(x2) # load 0x06231eb4 from memory into f15
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmadd.s f30, f17, f15, f28, dyn # perform operation
fmadd.s f30, f17, f15, f28, rdn # perform operation
fmadd.s f30, f17, f15, f28, rmm # perform operation
fmadd.s f30, f17, f15, f28, rne # perform operation
fmadd.s f30, f17, f15, f28, rtz # perform operation
fmadd.s f30, f17, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f15, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
la x2, scratch
li x3, 0x6c9ac1b0 # load x3 with value 0x6c9ac1b0
sw x3, 0(x2) # store 0x6c9ac1b0 in memory
flw f16, 0(x2) # load 0x6c9ac1b0 from memory into f16
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f7, f14, f16, f9, dyn # perform operation
fmadd.s f7, f14, f16, f9, rdn # perform operation
fmadd.s f7, f14, f16, f9, rmm # perform operation
fmadd.s f7, f14, f16, f9, rne # perform operation
fmadd.s f7, f14, f16, f9, rtz # perform operation
fmadd.s f7, f14, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f14, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f14, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
la x2, scratch
li x3, 0x9dbcab83 # load x3 with value 0x9dbcab83
sw x3, 0(x2) # store 0x9dbcab83 in memory
flw f9, 0(x2) # load 0x9dbcab83 from memory into f9
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f2, f25, f9, f7, dyn # perform operation
fmadd.s f2, f25, f9, f7, rdn # perform operation
fmadd.s f2, f25, f9, f7, rmm # perform operation
fmadd.s f2, f25, f9, f7, rne # perform operation
fmadd.s f2, f25, f9, f7, rtz # perform operation
fmadd.s f2, f25, f9, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f25, f9, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f25, f9, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
la x2, scratch
li x3, 0x38096aad # load x3 with value 0x38096aad
sw x3, 0(x2) # store 0x38096aad in memory
flw f30, 0(x2) # load 0x38096aad from memory into f30
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
fmadd.s f31, f20, f30, f10, dyn # perform operation
fmadd.s f31, f20, f30, f10, rdn # perform operation
fmadd.s f31, f20, f30, f10, rmm # perform operation
fmadd.s f31, f20, f30, f10, rne # perform operation
fmadd.s f31, f20, f30, f10, rtz # perform operation
fmadd.s f31, f20, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f20, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f20, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xb045ac99 # load x3 with value 0xb045ac99
sw x3, 0(x2) # store 0xb045ac99 in memory
flw f20, 0(x2) # load 0xb045ac99 from memory into f20
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
fmadd.s f1, f18, f20, f10, dyn # perform operation
fmadd.s f1, f18, f20, f10, rdn # perform operation
fmadd.s f1, f18, f20, f10, rmm # perform operation
fmadd.s f1, f18, f20, f10, rne # perform operation
fmadd.s f1, f18, f20, f10, rtz # perform operation
fmadd.s f1, f18, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f20, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
la x2, scratch
li x3, 0xd0933310 # load x3 with value 0xd0933310
sw x3, 0(x2) # store 0xd0933310 in memory
flw f12, 0(x2) # load 0xd0933310 from memory into f12
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmadd.s f31, f18, f12, f9, dyn # perform operation
fmadd.s f31, f18, f12, f9, rdn # perform operation
fmadd.s f31, f18, f12, f9, rmm # perform operation
fmadd.s f31, f18, f12, f9, rne # perform operation
fmadd.s f31, f18, f12, f9, rtz # perform operation
fmadd.s f31, f18, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f18, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f18, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f18, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f18, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f18, f12, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
la x2, scratch
li x3, 0x6ff14033 # load x3 with value 0x6ff14033
sw x3, 0(x2) # store 0x6ff14033 in memory
flw f16, 0(x2) # load 0x6ff14033 from memory into f16
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
fmadd.s f14, f13, f16, f3, dyn # perform operation
fmadd.s f14, f13, f16, f3, rdn # perform operation
fmadd.s f14, f13, f16, f3, rmm # perform operation
fmadd.s f14, f13, f16, f3, rne # perform operation
fmadd.s f14, f13, f16, f3, rtz # perform operation
fmadd.s f14, f13, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f16, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
la x2, scratch
li x3, 0x238802ac # load x3 with value 0x238802ac
sw x3, 0(x2) # store 0x238802ac in memory
flw f12, 0(x2) # load 0x238802ac from memory into f12
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
fmadd.s f20, f11, f12, f28, dyn # perform operation
fmadd.s f20, f11, f12, f28, rdn # perform operation
fmadd.s f20, f11, f12, f28, rmm # perform operation
fmadd.s f20, f11, f12, f28, rne # perform operation
fmadd.s f20, f11, f12, f28, rtz # perform operation
fmadd.s f20, f11, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f11, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f11, f12, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
la x2, scratch
li x3, 0xad09a7f3 # load x3 with value 0xad09a7f3
sw x3, 0(x2) # store 0xad09a7f3 in memory
flw f5, 0(x2) # load 0xad09a7f3 from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f27, f9, f5, f17, dyn # perform operation
fmadd.s f27, f9, f5, f17, rdn # perform operation
fmadd.s f27, f9, f5, f17, rmm # perform operation
fmadd.s f27, f9, f5, f17, rne # perform operation
fmadd.s f27, f9, f5, f17, rtz # perform operation
fmadd.s f27, f9, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f5, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0xa5be44d5 # load x3 with value 0xa5be44d5
sw x3, 0(x2) # store 0xa5be44d5 in memory
flw f28, 0(x2) # load 0xa5be44d5 from memory into f28
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmadd.s f15, f31, f28, f23, dyn # perform operation
fmadd.s f15, f31, f28, f23, rdn # perform operation
fmadd.s f15, f31, f28, f23, rmm # perform operation
fmadd.s f15, f31, f28, f23, rne # perform operation
fmadd.s f15, f31, f28, f23, rtz # perform operation
fmadd.s f15, f31, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f31, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f31, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f31, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f31, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f31, f28, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xace3f6cf # load x3 with value 0xace3f6cf
sw x3, 0(x2) # store 0xace3f6cf in memory
flw f11, 0(x2) # load 0xace3f6cf from memory into f11
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fmadd.s f1, f25, f11, f13, dyn # perform operation
fmadd.s f1, f25, f11, f13, rdn # perform operation
fmadd.s f1, f25, f11, f13, rmm # perform operation
fmadd.s f1, f25, f11, f13, rne # perform operation
fmadd.s f1, f25, f11, f13, rtz # perform operation
fmadd.s f1, f25, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f25, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f25, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f25, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f25, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f25, f11, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
la x2, scratch
li x3, 0x48eb7d4f # load x3 with value 0x48eb7d4f
sw x3, 0(x2) # store 0x48eb7d4f in memory
flw f16, 0(x2) # load 0x48eb7d4f from memory into f16
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
fmadd.s f9, f1, f16, f30, dyn # perform operation
fmadd.s f9, f1, f16, f30, rdn # perform operation
fmadd.s f9, f1, f16, f30, rmm # perform operation
fmadd.s f9, f1, f16, f30, rne # perform operation
fmadd.s f9, f1, f16, f30, rtz # perform operation
fmadd.s f9, f1, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f16, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xc716f6bc # load x3 with value 0xc716f6bc
sw x3, 0(x2) # store 0xc716f6bc in memory
flw f2, 0(x2) # load 0xc716f6bc from memory into f2
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f26, f25, f2, f19, dyn # perform operation
fmadd.s f26, f25, f2, f19, rdn # perform operation
fmadd.s f26, f25, f2, f19, rmm # perform operation
fmadd.s f26, f25, f2, f19, rne # perform operation
fmadd.s f26, f25, f2, f19, rtz # perform operation
fmadd.s f26, f25, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f2, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
la x2, scratch
li x3, 0x2e6790a2 # load x3 with value 0x2e6790a2
sw x3, 0(x2) # store 0x2e6790a2 in memory
flw f6, 0(x2) # load 0x2e6790a2 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fmadd.s f2, f27, f6, f25, dyn # perform operation
fmadd.s f2, f27, f6, f25, rdn # perform operation
fmadd.s f2, f27, f6, f25, rmm # perform operation
fmadd.s f2, f27, f6, f25, rne # perform operation
fmadd.s f2, f27, f6, f25, rtz # perform operation
fmadd.s f2, f27, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f6, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x97c77695 # load x3 with value 0x97c77695
sw x3, 0(x2) # store 0x97c77695 in memory
flw f19, 0(x2) # load 0x97c77695 from memory into f19
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmadd.s f25, f18, f19, f24, dyn # perform operation
fmadd.s f25, f18, f19, f24, rdn # perform operation
fmadd.s f25, f18, f19, f24, rmm # perform operation
fmadd.s f25, f18, f19, f24, rne # perform operation
fmadd.s f25, f18, f19, f24, rtz # perform operation
fmadd.s f25, f18, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f18, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f18, f19, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
la x2, scratch
li x3, 0xe66656d1 # load x3 with value 0xe66656d1
sw x3, 0(x2) # store 0xe66656d1 in memory
flw f14, 0(x2) # load 0xe66656d1 from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmadd.s f6, f19, f14, f16, dyn # perform operation
fmadd.s f6, f19, f14, f16, rdn # perform operation
fmadd.s f6, f19, f14, f16, rmm # perform operation
fmadd.s f6, f19, f14, f16, rne # perform operation
fmadd.s f6, f19, f14, f16, rtz # perform operation
fmadd.s f6, f19, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f14, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
la x2, scratch
li x3, 0x7bbe597b # load x3 with value 0x7bbe597b
sw x3, 0(x2) # store 0x7bbe597b in memory
flw f17, 0(x2) # load 0x7bbe597b from memory into f17
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f20, f16, f17, f29, dyn # perform operation
fmadd.s f20, f16, f17, f29, rdn # perform operation
fmadd.s f20, f16, f17, f29, rmm # perform operation
fmadd.s f20, f16, f17, f29, rne # perform operation
fmadd.s f20, f16, f17, f29, rtz # perform operation
fmadd.s f20, f16, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f16, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f16, f17, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0xddb07654 # load x3 with value 0xddb07654
sw x3, 0(x2) # store 0xddb07654 in memory
flw f24, 0(x2) # load 0xddb07654 from memory into f24
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmadd.s f8, f25, f24, f22, dyn # perform operation
fmadd.s f8, f25, f24, f22, rdn # perform operation
fmadd.s f8, f25, f24, f22, rmm # perform operation
fmadd.s f8, f25, f24, f22, rne # perform operation
fmadd.s f8, f25, f24, f22, rtz # perform operation
fmadd.s f8, f25, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f25, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f25, f24, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
la x2, scratch
li x3, 0x206f43a9 # load x3 with value 0x206f43a9
sw x3, 0(x2) # store 0x206f43a9 in memory
flw f23, 0(x2) # load 0x206f43a9 from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmadd.s f27, f30, f23, f25, dyn # perform operation
fmadd.s f27, f30, f23, f25, rdn # perform operation
fmadd.s f27, f30, f23, f25, rmm # perform operation
fmadd.s f27, f30, f23, f25, rne # perform operation
fmadd.s f27, f30, f23, f25, rtz # perform operation
fmadd.s f27, f30, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f23, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0xb3bb72c3 # load x3 with value 0xb3bb72c3
sw x3, 0(x2) # store 0xb3bb72c3 in memory
flw f21, 0(x2) # load 0xb3bb72c3 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f16, f26, f21, f14, dyn # perform operation
fmadd.s f16, f26, f21, f14, rdn # perform operation
fmadd.s f16, f26, f21, f14, rmm # perform operation
fmadd.s f16, f26, f21, f14, rne # perform operation
fmadd.s f16, f26, f21, f14, rtz # perform operation
fmadd.s f16, f26, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
la x2, scratch
li x3, 0x71078f2b # load x3 with value 0x71078f2b
sw x3, 0(x2) # store 0x71078f2b in memory
flw f11, 0(x2) # load 0x71078f2b from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
fmadd.s f31, f25, f11, f10, dyn # perform operation
fmadd.s f31, f25, f11, f10, rdn # perform operation
fmadd.s f31, f25, f11, f10, rmm # perform operation
fmadd.s f31, f25, f11, f10, rne # perform operation
fmadd.s f31, f25, f11, f10, rtz # perform operation
fmadd.s f31, f25, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f25, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f25, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f25, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f25, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f25, f11, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x15543e15 # load x3 with value 0x15543e15
sw x3, 0(x2) # store 0x15543e15 in memory
flw f18, 0(x2) # load 0x15543e15 from memory into f18
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f16, f9, f18, f22, dyn # perform operation
fmadd.s f16, f9, f18, f22, rdn # perform operation
fmadd.s f16, f9, f18, f22, rmm # perform operation
fmadd.s f16, f9, f18, f22, rne # perform operation
fmadd.s f16, f9, f18, f22, rtz # perform operation
fmadd.s f16, f9, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f18, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x6f60bbb8 # load x3 with value 0x6f60bbb8
sw x3, 0(x2) # store 0x6f60bbb8 in memory
flw f31, 0(x2) # load 0x6f60bbb8 from memory into f31
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
fmadd.s f7, f9, f31, f11, dyn # perform operation
fmadd.s f7, f9, f31, f11, rdn # perform operation
fmadd.s f7, f9, f31, f11, rmm # perform operation
fmadd.s f7, f9, f31, f11, rne # perform operation
fmadd.s f7, f9, f31, f11, rtz # perform operation
fmadd.s f7, f9, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f31, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
la x2, scratch
li x3, 0x48b4cd55 # load x3 with value 0x48b4cd55
sw x3, 0(x2) # store 0x48b4cd55 in memory
flw f19, 0(x2) # load 0x48b4cd55 from memory into f19
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmadd.s f12, f28, f19, f2, dyn # perform operation
fmadd.s f12, f28, f19, f2, rdn # perform operation
fmadd.s f12, f28, f19, f2, rmm # perform operation
fmadd.s f12, f28, f19, f2, rne # perform operation
fmadd.s f12, f28, f19, f2, rtz # perform operation
fmadd.s f12, f28, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f28, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f28, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
la x2, scratch
li x3, 0x71f1b774 # load x3 with value 0x71f1b774
sw x3, 0(x2) # store 0x71f1b774 in memory
flw f24, 0(x2) # load 0x71f1b774 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f30, f14, f24, f28, dyn # perform operation
fmadd.s f30, f14, f24, f28, rdn # perform operation
fmadd.s f30, f14, f24, f28, rmm # perform operation
fmadd.s f30, f14, f24, f28, rne # perform operation
fmadd.s f30, f14, f24, f28, rtz # perform operation
fmadd.s f30, f14, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f14, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f14, f24, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
la x2, scratch
li x3, 0x8be42738 # load x3 with value 0x8be42738
sw x3, 0(x2) # store 0x8be42738 in memory
flw f20, 0(x2) # load 0x8be42738 from memory into f20
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f26, f22, f20, f1, dyn # perform operation
fmadd.s f26, f22, f20, f1, rdn # perform operation
fmadd.s f26, f22, f20, f1, rmm # perform operation
fmadd.s f26, f22, f20, f1, rne # perform operation
fmadd.s f26, f22, f20, f1, rtz # perform operation
fmadd.s f26, f22, f20, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f20, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f20, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0xc6483df7 # load x3 with value 0xc6483df7
sw x3, 0(x2) # store 0xc6483df7 in memory
flw f18, 0(x2) # load 0xc6483df7 from memory into f18
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
fmadd.s f29, f10, f18, f17, dyn # perform operation
fmadd.s f29, f10, f18, f17, rdn # perform operation
fmadd.s f29, f10, f18, f17, rmm # perform operation
fmadd.s f29, f10, f18, f17, rne # perform operation
fmadd.s f29, f10, f18, f17, rtz # perform operation
fmadd.s f29, f10, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f18, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
la x2, scratch
li x3, 0x6bf32c26 # load x3 with value 0x6bf32c26
sw x3, 0(x2) # store 0x6bf32c26 in memory
flw f21, 0(x2) # load 0x6bf32c26 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fmadd.s f23, f6, f21, f10, dyn # perform operation
fmadd.s f23, f6, f21, f10, rdn # perform operation
fmadd.s f23, f6, f21, f10, rmm # perform operation
fmadd.s f23, f6, f21, f10, rne # perform operation
fmadd.s f23, f6, f21, f10, rtz # perform operation
fmadd.s f23, f6, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f6, f21, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
la x2, scratch
li x3, 0x315aae33 # load x3 with value 0x315aae33
sw x3, 0(x2) # store 0x315aae33 in memory
flw f6, 0(x2) # load 0x315aae33 from memory into f6
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f5, f9, f6, f10, dyn # perform operation
fmadd.s f5, f9, f6, f10, rdn # perform operation
fmadd.s f5, f9, f6, f10, rmm # perform operation
fmadd.s f5, f9, f6, f10, rne # perform operation
fmadd.s f5, f9, f6, f10, rtz # perform operation
fmadd.s f5, f9, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f6, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xe4002187 # load x3 with value 0xe4002187
sw x3, 0(x2) # store 0xe4002187 in memory
flw f21, 0(x2) # load 0xe4002187 from memory into f21
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
fmadd.s f15, f3, f21, f28, dyn # perform operation
fmadd.s f15, f3, f21, f28, rdn # perform operation
fmadd.s f15, f3, f21, f28, rmm # perform operation
fmadd.s f15, f3, f21, f28, rne # perform operation
fmadd.s f15, f3, f21, f28, rtz # perform operation
fmadd.s f15, f3, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f3, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f3, f21, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
la x2, scratch
li x3, 0x4d833784 # load x3 with value 0x4d833784
sw x3, 0(x2) # store 0x4d833784 in memory
flw f28, 0(x2) # load 0x4d833784 from memory into f28
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
fmadd.s f15, f18, f28, f27, dyn # perform operation
fmadd.s f15, f18, f28, f27, rdn # perform operation
fmadd.s f15, f18, f28, f27, rmm # perform operation
fmadd.s f15, f18, f28, f27, rne # perform operation
fmadd.s f15, f18, f28, f27, rtz # perform operation
fmadd.s f15, f18, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f28, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
la x2, scratch
li x3, 0x8c0627ac # load x3 with value 0x8c0627ac
sw x3, 0(x2) # store 0x8c0627ac in memory
flw f15, 0(x2) # load 0x8c0627ac from memory into f15
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f12, 0(x2) # load 0xffffffff from memory into f12
fmadd.s f2, f31, f15, f12, dyn # perform operation
fmadd.s f2, f31, f15, f12, rdn # perform operation
fmadd.s f2, f31, f15, f12, rmm # perform operation
fmadd.s f2, f31, f15, f12, rne # perform operation
fmadd.s f2, f31, f15, f12, rtz # perform operation
fmadd.s f2, f31, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f15, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
la x2, scratch
li x3, 0x33549f54 # load x3 with value 0x33549f54
sw x3, 0(x2) # store 0x33549f54 in memory
flw f27, 0(x2) # load 0x33549f54 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
fmadd.s f25, f10, f27, f16, dyn # perform operation
fmadd.s f25, f10, f27, f16, rdn # perform operation
fmadd.s f25, f10, f27, f16, rmm # perform operation
fmadd.s f25, f10, f27, f16, rne # perform operation
fmadd.s f25, f10, f27, f16, rtz # perform operation
fmadd.s f25, f10, f27, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f27, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f27, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
la x2, scratch
li x3, 0xf084b0a1 # load x3 with value 0xf084b0a1
sw x3, 0(x2) # store 0xf084b0a1 in memory
flw f16, 0(x2) # load 0xf084b0a1 from memory into f16
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fmadd.s f31, f3, f16, f27, dyn # perform operation
fmadd.s f31, f3, f16, f27, rdn # perform operation
fmadd.s f31, f3, f16, f27, rmm # perform operation
fmadd.s f31, f3, f16, f27, rne # perform operation
fmadd.s f31, f3, f16, f27, rtz # perform operation
fmadd.s f31, f3, f16, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f16, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f16, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
la x2, scratch
li x3, 0x96aa7e25 # load x3 with value 0x96aa7e25
sw x3, 0(x2) # store 0x96aa7e25 in memory
flw f5, 0(x2) # load 0x96aa7e25 from memory into f5
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
fmadd.s f15, f23, f5, f7, dyn # perform operation
fmadd.s f15, f23, f5, f7, rdn # perform operation
fmadd.s f15, f23, f5, f7, rmm # perform operation
fmadd.s f15, f23, f5, f7, rne # perform operation
fmadd.s f15, f23, f5, f7, rtz # perform operation
fmadd.s f15, f23, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f5, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
la x2, scratch
li x3, 0x48bb706c # load x3 with value 0x48bb706c
sw x3, 0(x2) # store 0x48bb706c in memory
flw f15, 0(x2) # load 0x48bb706c from memory into f15
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmadd.s f7, f26, f15, f29, dyn # perform operation
fmadd.s f7, f26, f15, f29, rdn # perform operation
fmadd.s f7, f26, f15, f29, rmm # perform operation
fmadd.s f7, f26, f15, f29, rne # perform operation
fmadd.s f7, f26, f15, f29, rtz # perform operation
fmadd.s f7, f26, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
la x2, scratch
li x3, 0xd2d429bd # load x3 with value 0xd2d429bd
sw x3, 0(x2) # store 0xd2d429bd in memory
flw f5, 0(x2) # load 0xd2d429bd from memory into f5
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f30, f21, f5, f15, dyn # perform operation
fmadd.s f30, f21, f5, f15, rdn # perform operation
fmadd.s f30, f21, f5, f15, rmm # perform operation
fmadd.s f30, f21, f5, f15, rne # perform operation
fmadd.s f30, f21, f5, f15, rtz # perform operation
fmadd.s f30, f21, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f5, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0xbab26fd6 # load x3 with value 0xbab26fd6
sw x3, 0(x2) # store 0xbab26fd6 in memory
flw f14, 0(x2) # load 0xbab26fd6 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
fmadd.s f31, f16, f14, f25, dyn # perform operation
fmadd.s f31, f16, f14, f25, rdn # perform operation
fmadd.s f31, f16, f14, f25, rmm # perform operation
fmadd.s f31, f16, f14, f25, rne # perform operation
fmadd.s f31, f16, f14, f25, rtz # perform operation
fmadd.s f31, f16, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f16, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f16, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f16, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f16, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f16, f14, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
la x2, scratch
li x3, 0xaabfb9e2 # load x3 with value 0xaabfb9e2
sw x3, 0(x2) # store 0xaabfb9e2 in memory
flw f3, 0(x2) # load 0xaabfb9e2 from memory into f3
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmadd.s f5, f26, f3, f24, dyn # perform operation
fmadd.s f5, f26, f3, f24, rdn # perform operation
fmadd.s f5, f26, f3, f24, rmm # perform operation
fmadd.s f5, f26, f3, f24, rne # perform operation
fmadd.s f5, f26, f3, f24, rtz # perform operation
fmadd.s f5, f26, f3, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f3, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f3, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
la x2, scratch
li x3, 0xfe8e35db # load x3 with value 0xfe8e35db
sw x3, 0(x2) # store 0xfe8e35db in memory
flw f20, 0(x2) # load 0xfe8e35db from memory into f20
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fmadd.s f11, f21, f20, f29, dyn # perform operation
fmadd.s f11, f21, f20, f29, rdn # perform operation
fmadd.s f11, f21, f20, f29, rmm # perform operation
fmadd.s f11, f21, f20, f29, rne # perform operation
fmadd.s f11, f21, f20, f29, rtz # perform operation
fmadd.s f11, f21, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f21, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f21, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0x8e4acff3 # load x3 with value 0x8e4acff3
sw x3, 0(x2) # store 0x8e4acff3 in memory
flw f1, 0(x2) # load 0x8e4acff3 from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmadd.s f7, f22, f1, f16, dyn # perform operation
fmadd.s f7, f22, f1, f16, rdn # perform operation
fmadd.s f7, f22, f1, f16, rmm # perform operation
fmadd.s f7, f22, f1, f16, rne # perform operation
fmadd.s f7, f22, f1, f16, rtz # perform operation
fmadd.s f7, f22, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0xafa96e68 # load x3 with value 0xafa96e68
sw x3, 0(x2) # store 0xafa96e68 in memory
flw f6, 0(x2) # load 0xafa96e68 from memory into f6
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f3, f14, f6, f15, dyn # perform operation
fmadd.s f3, f14, f6, f15, rdn # perform operation
fmadd.s f3, f14, f6, f15, rmm # perform operation
fmadd.s f3, f14, f6, f15, rne # perform operation
fmadd.s f3, f14, f6, f15, rtz # perform operation
fmadd.s f3, f14, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f14, f6, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0x9f98dad8 # load x3 with value 0x9f98dad8
sw x3, 0(x2) # store 0x9f98dad8 in memory
flw f7, 0(x2) # load 0x9f98dad8 from memory into f7
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f27, f13, f7, f21, dyn # perform operation
fmadd.s f27, f13, f7, f21, rdn # perform operation
fmadd.s f27, f13, f7, f21, rmm # perform operation
fmadd.s f27, f13, f7, f21, rne # perform operation
fmadd.s f27, f13, f7, f21, rtz # perform operation
fmadd.s f27, f13, f7, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f13, f7, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f13, f7, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
la x2, scratch
li x3, 0x2590606b # load x3 with value 0x2590606b
sw x3, 0(x2) # store 0x2590606b in memory
flw f31, 0(x2) # load 0x2590606b from memory into f31
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
fmadd.s f27, f16, f31, f7, dyn # perform operation
fmadd.s f27, f16, f31, f7, rdn # perform operation
fmadd.s f27, f16, f31, f7, rmm # perform operation
fmadd.s f27, f16, f31, f7, rne # perform operation
fmadd.s f27, f16, f31, f7, rtz # perform operation
fmadd.s f27, f16, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f31, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
la x2, scratch
li x3, 0x87123e47 # load x3 with value 0x87123e47
sw x3, 0(x2) # store 0x87123e47 in memory
flw f30, 0(x2) # load 0x87123e47 from memory into f30
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
fmadd.s f5, f29, f30, f15, dyn # perform operation
fmadd.s f5, f29, f30, f15, rdn # perform operation
fmadd.s f5, f29, f30, f15, rmm # perform operation
fmadd.s f5, f29, f30, f15, rne # perform operation
fmadd.s f5, f29, f30, f15, rtz # perform operation
fmadd.s f5, f29, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f29, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f29, f30, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
la x2, scratch
li x3, 0x29fd0dd0 # load x3 with value 0x29fd0dd0
sw x3, 0(x2) # store 0x29fd0dd0 in memory
flw f23, 0(x2) # load 0x29fd0dd0 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f14, f1, f23, f12, dyn # perform operation
fmadd.s f14, f1, f23, f12, rdn # perform operation
fmadd.s f14, f1, f23, f12, rmm # perform operation
fmadd.s f14, f1, f23, f12, rne # perform operation
fmadd.s f14, f1, f23, f12, rtz # perform operation
fmadd.s f14, f1, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x52667c76 # load x3 with value 0x52667c76
sw x3, 0(x2) # store 0x52667c76 in memory
flw f20, 0(x2) # load 0x52667c76 from memory into f20
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f14, 0(x2) # load 0x80800000 from memory into f14
fmadd.s f18, f7, f20, f14, dyn # perform operation
fmadd.s f18, f7, f20, f14, rdn # perform operation
fmadd.s f18, f7, f20, f14, rmm # perform operation
fmadd.s f18, f7, f20, f14, rne # perform operation
fmadd.s f18, f7, f20, f14, rtz # perform operation
fmadd.s f18, f7, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f20, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x4916bcbe # load x3 with value 0x4916bcbe
sw x3, 0(x2) # store 0x4916bcbe in memory
flw f3, 0(x2) # load 0x4916bcbe from memory into f3
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
fmadd.s f7, f12, f3, f18, dyn # perform operation
fmadd.s f7, f12, f3, f18, rdn # perform operation
fmadd.s f7, f12, f3, f18, rmm # perform operation
fmadd.s f7, f12, f3, f18, rne # perform operation
fmadd.s f7, f12, f3, f18, rtz # perform operation
fmadd.s f7, f12, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f3, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x4ffc24ca # load x3 with value 0x4ffc24ca
sw x3, 0(x2) # store 0x4ffc24ca in memory
flw f26, 0(x2) # load 0x4ffc24ca from memory into f26
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
fmadd.s f3, f25, f26, f19, dyn # perform operation
fmadd.s f3, f25, f26, f19, rdn # perform operation
fmadd.s f3, f25, f26, f19, rmm # perform operation
fmadd.s f3, f25, f26, f19, rne # perform operation
fmadd.s f3, f25, f26, f19, rtz # perform operation
fmadd.s f3, f25, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f25, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f25, f26, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
la x2, scratch
li x3, 0xc2b49420 # load x3 with value 0xc2b49420
sw x3, 0(x2) # store 0xc2b49420 in memory
flw f23, 0(x2) # load 0xc2b49420 from memory into f23
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmadd.s f7, f2, f23, f13, dyn # perform operation
fmadd.s f7, f2, f23, f13, rdn # perform operation
fmadd.s f7, f2, f23, f13, rmm # perform operation
fmadd.s f7, f2, f23, f13, rne # perform operation
fmadd.s f7, f2, f23, f13, rtz # perform operation
fmadd.s f7, f2, f23, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f23, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f23, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
la x2, scratch
li x3, 0xcf150b60 # load x3 with value 0xcf150b60
sw x3, 0(x2) # store 0xcf150b60 in memory
flw f26, 0(x2) # load 0xcf150b60 from memory into f26
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
fmadd.s f2, f22, f26, f23, dyn # perform operation
fmadd.s f2, f22, f26, f23, rdn # perform operation
fmadd.s f2, f22, f26, f23, rmm # perform operation
fmadd.s f2, f22, f26, f23, rne # perform operation
fmadd.s f2, f22, f26, f23, rtz # perform operation
fmadd.s f2, f22, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f26, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x79a4135f # load x3 with value 0x79a4135f
sw x3, 0(x2) # store 0x79a4135f in memory
flw f30, 0(x2) # load 0x79a4135f from memory into f30
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f3, f17, f30, f12, dyn # perform operation
fmadd.s f3, f17, f30, f12, rdn # perform operation
fmadd.s f3, f17, f30, f12, rmm # perform operation
fmadd.s f3, f17, f30, f12, rne # perform operation
fmadd.s f3, f17, f30, f12, rtz # perform operation
fmadd.s f3, f17, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f30, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0x4ce0fa6c # load x3 with value 0x4ce0fa6c
sw x3, 0(x2) # store 0x4ce0fa6c in memory
flw f18, 0(x2) # load 0x4ce0fa6c from memory into f18
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmadd.s f13, f28, f18, f7, dyn # perform operation
fmadd.s f13, f28, f18, f7, rdn # perform operation
fmadd.s f13, f28, f18, f7, rmm # perform operation
fmadd.s f13, f28, f18, f7, rne # perform operation
fmadd.s f13, f28, f18, f7, rtz # perform operation
fmadd.s f13, f28, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x483e7016 # load x3 with value 0x483e7016
sw x3, 0(x2) # store 0x483e7016 in memory
flw f16, 0(x2) # load 0x483e7016 from memory into f16
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f19, 0(x2) # load 0x00000001 from memory into f19
fmadd.s f7, f17, f16, f19, dyn # perform operation
fmadd.s f7, f17, f16, f19, rdn # perform operation
fmadd.s f7, f17, f16, f19, rmm # perform operation
fmadd.s f7, f17, f16, f19, rne # perform operation
fmadd.s f7, f17, f16, f19, rtz # perform operation
fmadd.s f7, f17, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f16, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
la x2, scratch
li x3, 0x32b23c2e # load x3 with value 0x32b23c2e
sw x3, 0(x2) # store 0x32b23c2e in memory
flw f20, 0(x2) # load 0x32b23c2e from memory into f20
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f18, f7, f20, f16, dyn # perform operation
fmadd.s f18, f7, f20, f16, rdn # perform operation
fmadd.s f18, f7, f20, f16, rmm # perform operation
fmadd.s f18, f7, f20, f16, rne # perform operation
fmadd.s f18, f7, f20, f16, rtz # perform operation
fmadd.s f18, f7, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f20, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x0dd820c2 # load x3 with value 0x0dd820c2
sw x3, 0(x2) # store 0x0dd820c2 in memory
flw f20, 0(x2) # load 0x0dd820c2 from memory into f20
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
fmadd.s f5, f17, f20, f29, dyn # perform operation
fmadd.s f5, f17, f20, f29, rdn # perform operation
fmadd.s f5, f17, f20, f29, rmm # perform operation
fmadd.s f5, f17, f20, f29, rne # perform operation
fmadd.s f5, f17, f20, f29, rtz # perform operation
fmadd.s f5, f17, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f20, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0xc496e407 # load x3 with value 0xc496e407
sw x3, 0(x2) # store 0xc496e407 in memory
flw f19, 0(x2) # load 0xc496e407 from memory into f19
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmadd.s f24, f3, f19, f13, dyn # perform operation
fmadd.s f24, f3, f19, f13, rdn # perform operation
fmadd.s f24, f3, f19, f13, rmm # perform operation
fmadd.s f24, f3, f19, f13, rne # perform operation
fmadd.s f24, f3, f19, f13, rtz # perform operation
fmadd.s f24, f3, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f3, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f3, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
la x2, scratch
li x3, 0x245c815b # load x3 with value 0x245c815b
sw x3, 0(x2) # store 0x245c815b in memory
flw f12, 0(x2) # load 0x245c815b from memory into f12
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fmadd.s f10, f14, f12, f7, dyn # perform operation
fmadd.s f10, f14, f12, f7, rdn # perform operation
fmadd.s f10, f14, f12, f7, rmm # perform operation
fmadd.s f10, f14, f12, f7, rne # perform operation
fmadd.s f10, f14, f12, f7, rtz # perform operation
fmadd.s f10, f14, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f14, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f14, f12, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
la x2, scratch
li x3, 0x1e789728 # load x3 with value 0x1e789728
sw x3, 0(x2) # store 0x1e789728 in memory
flw f7, 0(x2) # load 0x1e789728 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f11, f10, f7, f18, dyn # perform operation
fmadd.s f11, f10, f7, f18, rdn # perform operation
fmadd.s f11, f10, f7, f18, rmm # perform operation
fmadd.s f11, f10, f7, f18, rne # perform operation
fmadd.s f11, f10, f7, f18, rtz # perform operation
fmadd.s f11, f10, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f7, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
la x2, scratch
li x3, 0xa6e1ebe3 # load x3 with value 0xa6e1ebe3
sw x3, 0(x2) # store 0xa6e1ebe3 in memory
flw f14, 0(x2) # load 0xa6e1ebe3 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
fmadd.s f10, f28, f14, f31, dyn # perform operation
fmadd.s f10, f28, f14, f31, rdn # perform operation
fmadd.s f10, f28, f14, f31, rmm # perform operation
fmadd.s f10, f28, f14, f31, rne # perform operation
fmadd.s f10, f28, f14, f31, rtz # perform operation
fmadd.s f10, f28, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f28, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f28, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
la x2, scratch
li x3, 0x95815a21 # load x3 with value 0x95815a21
sw x3, 0(x2) # store 0x95815a21 in memory
flw f27, 0(x2) # load 0x95815a21 from memory into f27
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f9, f3, f27, f29, dyn # perform operation
fmadd.s f9, f3, f27, f29, rdn # perform operation
fmadd.s f9, f3, f27, f29, rmm # perform operation
fmadd.s f9, f3, f27, f29, rne # perform operation
fmadd.s f9, f3, f27, f29, rtz # perform operation
fmadd.s f9, f3, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f27, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
la x2, scratch
li x3, 0xc5840314 # load x3 with value 0xc5840314
sw x3, 0(x2) # store 0xc5840314 in memory
flw f6, 0(x2) # load 0xc5840314 from memory into f6
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f14, f13, f6, f1, dyn # perform operation
fmadd.s f14, f13, f6, f1, rdn # perform operation
fmadd.s f14, f13, f6, f1, rmm # perform operation
fmadd.s f14, f13, f6, f1, rne # perform operation
fmadd.s f14, f13, f6, f1, rtz # perform operation
fmadd.s f14, f13, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f6, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
la x2, scratch
li x3, 0x41e8a33a # load x3 with value 0x41e8a33a
sw x3, 0(x2) # store 0x41e8a33a in memory
flw f1, 0(x2) # load 0x41e8a33a from memory into f1
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f26, 0(x2) # load 0xffbfffff from memory into f26
fmadd.s f20, f12, f1, f26, dyn # perform operation
fmadd.s f20, f12, f1, f26, rdn # perform operation
fmadd.s f20, f12, f1, f26, rmm # perform operation
fmadd.s f20, f12, f1, f26, rne # perform operation
fmadd.s f20, f12, f1, f26, rtz # perform operation
fmadd.s f20, f12, f1, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f1, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f1, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f1, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f1, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f1, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
la x2, scratch
li x3, 0x78f0b8f3 # load x3 with value 0x78f0b8f3
sw x3, 0(x2) # store 0x78f0b8f3 in memory
flw f1, 0(x2) # load 0x78f0b8f3 from memory into f1
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmadd.s f26, f25, f1, f2, dyn # perform operation
fmadd.s f26, f25, f1, f2, rdn # perform operation
fmadd.s f26, f25, f1, f2, rmm # perform operation
fmadd.s f26, f25, f1, f2, rne # perform operation
fmadd.s f26, f25, f1, f2, rtz # perform operation
fmadd.s f26, f25, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f1, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
la x2, scratch
li x3, 0x259aee4a # load x3 with value 0x259aee4a
sw x3, 0(x2) # store 0x259aee4a in memory
flw f22, 0(x2) # load 0x259aee4a from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmadd.s f27, f17, f22, f12, dyn # perform operation
fmadd.s f27, f17, f22, f12, rdn # perform operation
fmadd.s f27, f17, f22, f12, rmm # perform operation
fmadd.s f27, f17, f22, f12, rne # perform operation
fmadd.s f27, f17, f22, f12, rtz # perform operation
fmadd.s f27, f17, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x1f889359 # load x3 with value 0x1f889359
sw x3, 0(x2) # store 0x1f889359 in memory
flw f27, 0(x2) # load 0x1f889359 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmadd.s f30, f20, f27, f7, dyn # perform operation
fmadd.s f30, f20, f27, f7, rdn # perform operation
fmadd.s f30, f20, f27, f7, rmm # perform operation
fmadd.s f30, f20, f27, f7, rne # perform operation
fmadd.s f30, f20, f27, f7, rtz # perform operation
fmadd.s f30, f20, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f27, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
la x2, scratch
li x3, 0x744851b1 # load x3 with value 0x744851b1
sw x3, 0(x2) # store 0x744851b1 in memory
flw f30, 0(x2) # load 0x744851b1 from memory into f30
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
fmadd.s f6, f9, f30, f5, dyn # perform operation
fmadd.s f6, f9, f30, f5, rdn # perform operation
fmadd.s f6, f9, f30, f5, rmm # perform operation
fmadd.s f6, f9, f30, f5, rne # perform operation
fmadd.s f6, f9, f30, f5, rtz # perform operation
fmadd.s f6, f9, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0xa1c90e2f # load x3 with value 0xa1c90e2f
sw x3, 0(x2) # store 0xa1c90e2f in memory
flw f14, 0(x2) # load 0xa1c90e2f from memory into f14
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f24, f8, f14, f18, dyn # perform operation
fmadd.s f24, f8, f14, f18, rdn # perform operation
fmadd.s f24, f8, f14, f18, rmm # perform operation
fmadd.s f24, f8, f14, f18, rne # perform operation
fmadd.s f24, f8, f14, f18, rtz # perform operation
fmadd.s f24, f8, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
la x2, scratch
li x3, 0x8316211a # load x3 with value 0x8316211a
sw x3, 0(x2) # store 0x8316211a in memory
flw f26, 0(x2) # load 0x8316211a from memory into f26
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
fmadd.s f25, f31, f26, f13, dyn # perform operation
fmadd.s f25, f31, f26, f13, rdn # perform operation
fmadd.s f25, f31, f26, f13, rmm # perform operation
fmadd.s f25, f31, f26, f13, rne # perform operation
fmadd.s f25, f31, f26, f13, rtz # perform operation
fmadd.s f25, f31, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f26, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
la x2, scratch
li x3, 0x470a5b9a # load x3 with value 0x470a5b9a
sw x3, 0(x2) # store 0x470a5b9a in memory
flw f19, 0(x2) # load 0x470a5b9a from memory into f19
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
fmadd.s f15, f30, f19, f13, dyn # perform operation
fmadd.s f15, f30, f19, f13, rdn # perform operation
fmadd.s f15, f30, f19, f13, rmm # perform operation
fmadd.s f15, f30, f19, f13, rne # perform operation
fmadd.s f15, f30, f19, f13, rtz # perform operation
fmadd.s f15, f30, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f30, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f30, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f30, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f30, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f30, f19, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
la x2, scratch
li x3, 0xf9b3dd54 # load x3 with value 0xf9b3dd54
sw x3, 0(x2) # store 0xf9b3dd54 in memory
flw f6, 0(x2) # load 0xf9b3dd54 from memory into f6
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
fmadd.s f24, f10, f6, f20, dyn # perform operation
fmadd.s f24, f10, f6, f20, rdn # perform operation
fmadd.s f24, f10, f6, f20, rmm # perform operation
fmadd.s f24, f10, f6, f20, rne # perform operation
fmadd.s f24, f10, f6, f20, rtz # perform operation
fmadd.s f24, f10, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0x8d5c0115 # load x3 with value 0x8d5c0115
sw x3, 0(x2) # store 0x8d5c0115 in memory
flw f19, 0(x2) # load 0x8d5c0115 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f14, f11, f19, f9, dyn # perform operation
fmadd.s f14, f11, f19, f9, rdn # perform operation
fmadd.s f14, f11, f19, f9, rmm # perform operation
fmadd.s f14, f11, f19, f9, rne # perform operation
fmadd.s f14, f11, f19, f9, rtz # perform operation
fmadd.s f14, f11, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
la x2, scratch
li x3, 0xbffd3451 # load x3 with value 0xbffd3451
sw x3, 0(x2) # store 0xbffd3451 in memory
flw f27, 0(x2) # load 0xbffd3451 from memory into f27
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
fmadd.s f5, f15, f27, f9, dyn # perform operation
fmadd.s f5, f15, f27, f9, rdn # perform operation
fmadd.s f5, f15, f27, f9, rmm # perform operation
fmadd.s f5, f15, f27, f9, rne # perform operation
fmadd.s f5, f15, f27, f9, rtz # perform operation
fmadd.s f5, f15, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0xb31f4136 # load x3 with value 0xb31f4136
sw x3, 0(x2) # store 0xb31f4136 in memory
flw f23, 0(x2) # load 0xb31f4136 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f30, f17, f23, f6, dyn # perform operation
fmadd.s f30, f17, f23, f6, rdn # perform operation
fmadd.s f30, f17, f23, f6, rmm # perform operation
fmadd.s f30, f17, f23, f6, rne # perform operation
fmadd.s f30, f17, f23, f6, rtz # perform operation
fmadd.s f30, f17, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f23, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x3ac71961 # load x3 with value 0x3ac71961
sw x3, 0(x2) # store 0x3ac71961 in memory
flw f17, 0(x2) # load 0x3ac71961 from memory into f17
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
fmadd.s f27, f18, f17, f7, dyn # perform operation
fmadd.s f27, f18, f17, f7, rdn # perform operation
fmadd.s f27, f18, f17, f7, rmm # perform operation
fmadd.s f27, f18, f17, f7, rne # perform operation
fmadd.s f27, f18, f17, f7, rtz # perform operation
fmadd.s f27, f18, f17, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f17, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f17, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0xd2f0046c # load x3 with value 0xd2f0046c
sw x3, 0(x2) # store 0xd2f0046c in memory
flw f6, 0(x2) # load 0xd2f0046c from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
fmadd.s f3, f20, f6, f19, dyn # perform operation
fmadd.s f3, f20, f6, f19, rdn # perform operation
fmadd.s f3, f20, f6, f19, rmm # perform operation
fmadd.s f3, f20, f6, f19, rne # perform operation
fmadd.s f3, f20, f6, f19, rtz # perform operation
fmadd.s f3, f20, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f6, f19 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xbb51024d # load x3 with value 0xbb51024d
sw x3, 0(x2) # store 0xbb51024d in memory
flw f13, 0(x2) # load 0xbb51024d from memory into f13
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f9, f11, f13, f30, dyn # perform operation
fmadd.s f9, f11, f13, f30, rdn # perform operation
fmadd.s f9, f11, f13, f30, rmm # perform operation
fmadd.s f9, f11, f13, f30, rne # perform operation
fmadd.s f9, f11, f13, f30, rtz # perform operation
fmadd.s f9, f11, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f13, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
la x2, scratch
li x3, 0x85e8a635 # load x3 with value 0x85e8a635
sw x3, 0(x2) # store 0x85e8a635 in memory
flw f19, 0(x2) # load 0x85e8a635 from memory into f19
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f28, f7, f19, f20, dyn # perform operation
fmadd.s f28, f7, f19, f20, rdn # perform operation
fmadd.s f28, f7, f19, f20, rmm # perform operation
fmadd.s f28, f7, f19, f20, rne # perform operation
fmadd.s f28, f7, f19, f20, rtz # perform operation
fmadd.s f28, f7, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f19, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0xf270fd10 # load x3 with value 0xf270fd10
sw x3, 0(x2) # store 0xf270fd10 in memory
flw f6, 0(x2) # load 0xf270fd10 from memory into f6
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
fmadd.s f14, f2, f6, f22, dyn # perform operation
fmadd.s f14, f2, f6, f22, rdn # perform operation
fmadd.s f14, f2, f6, f22, rmm # perform operation
fmadd.s f14, f2, f6, f22, rne # perform operation
fmadd.s f14, f2, f6, f22, rtz # perform operation
fmadd.s f14, f2, f6, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f6, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f6, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
la x2, scratch
li x3, 0x3286067f # load x3 with value 0x3286067f
sw x3, 0(x2) # store 0x3286067f in memory
flw f14, 0(x2) # load 0x3286067f from memory into f14
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmadd.s f8, f2, f14, f22, dyn # perform operation
fmadd.s f8, f2, f14, f22, rdn # perform operation
fmadd.s f8, f2, f14, f22, rmm # perform operation
fmadd.s f8, f2, f14, f22, rne # perform operation
fmadd.s f8, f2, f14, f22, rtz # perform operation
fmadd.s f8, f2, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x95b2a109 # load x3 with value 0x95b2a109
sw x3, 0(x2) # store 0x95b2a109 in memory
flw f23, 0(x2) # load 0x95b2a109 from memory into f23
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f11, f8, f23, f2, dyn # perform operation
fmadd.s f11, f8, f23, f2, rdn # perform operation
fmadd.s f11, f8, f23, f2, rmm # perform operation
fmadd.s f11, f8, f23, f2, rne # perform operation
fmadd.s f11, f8, f23, f2, rtz # perform operation
fmadd.s f11, f8, f23, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f8, f23, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f8, f23, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
la x2, scratch
li x3, 0x631e0df8 # load x3 with value 0x631e0df8
sw x3, 0(x2) # store 0x631e0df8 in memory
flw f12, 0(x2) # load 0x631e0df8 from memory into f12
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmadd.s f7, f8, f12, f16, dyn # perform operation
fmadd.s f7, f8, f12, f16, rdn # perform operation
fmadd.s f7, f8, f12, f16, rmm # perform operation
fmadd.s f7, f8, f12, f16, rne # perform operation
fmadd.s f7, f8, f12, f16, rtz # perform operation
fmadd.s f7, f8, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
la x2, scratch
li x3, 0xa122ca39 # load x3 with value 0xa122ca39
sw x3, 0(x2) # store 0xa122ca39 in memory
flw f19, 0(x2) # load 0xa122ca39 from memory into f19
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f17, f5, f19, f29, dyn # perform operation
fmadd.s f17, f5, f19, f29, rdn # perform operation
fmadd.s f17, f5, f19, f29, rmm # perform operation
fmadd.s f17, f5, f19, f29, rne # perform operation
fmadd.s f17, f5, f19, f29, rtz # perform operation
fmadd.s f17, f5, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f5, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f5, f19, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
la x2, scratch
li x3, 0x0563eea5 # load x3 with value 0x0563eea5
sw x3, 0(x2) # store 0x0563eea5 in memory
flw f6, 0(x2) # load 0x0563eea5 from memory into f6
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f30, f14, f6, f8, dyn # perform operation
fmadd.s f30, f14, f6, f8, rdn # perform operation
fmadd.s f30, f14, f6, f8, rmm # perform operation
fmadd.s f30, f14, f6, f8, rne # perform operation
fmadd.s f30, f14, f6, f8, rtz # perform operation
fmadd.s f30, f14, f6, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f14, f6, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f14, f6, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
la x2, scratch
li x3, 0xd2a37790 # load x3 with value 0xd2a37790
sw x3, 0(x2) # store 0xd2a37790 in memory
flw f2, 0(x2) # load 0xd2a37790 from memory into f2
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f7, f11, f2, f18, dyn # perform operation
fmadd.s f7, f11, f2, f18, rdn # perform operation
fmadd.s f7, f11, f2, f18, rmm # perform operation
fmadd.s f7, f11, f2, f18, rne # perform operation
fmadd.s f7, f11, f2, f18, rtz # perform operation
fmadd.s f7, f11, f2, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f2, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f2, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
la x2, scratch
li x3, 0x617e35c1 # load x3 with value 0x617e35c1
sw x3, 0(x2) # store 0x617e35c1 in memory
flw f30, 0(x2) # load 0x617e35c1 from memory into f30
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmadd.s f26, f17, f30, f18, dyn # perform operation
fmadd.s f26, f17, f30, f18, rdn # perform operation
fmadd.s f26, f17, f30, f18, rmm # perform operation
fmadd.s f26, f17, f30, f18, rne # perform operation
fmadd.s f26, f17, f30, f18, rtz # perform operation
fmadd.s f26, f17, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f30, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x8f96b604 # load x3 with value 0x8f96b604
sw x3, 0(x2) # store 0x8f96b604 in memory
flw f16, 0(x2) # load 0x8f96b604 from memory into f16
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
fmadd.s f1, f18, f16, f20, dyn # perform operation
fmadd.s f1, f18, f16, f20, rdn # perform operation
fmadd.s f1, f18, f16, f20, rmm # perform operation
fmadd.s f1, f18, f16, f20, rne # perform operation
fmadd.s f1, f18, f16, f20, rtz # perform operation
fmadd.s f1, f18, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f16, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
la x2, scratch
li x3, 0x76a62df9 # load x3 with value 0x76a62df9
sw x3, 0(x2) # store 0x76a62df9 in memory
flw f3, 0(x2) # load 0x76a62df9 from memory into f3
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f13, 0(x2) # load 0xffffffff from memory into f13
fmadd.s f19, f28, f3, f13, dyn # perform operation
fmadd.s f19, f28, f3, f13, rdn # perform operation
fmadd.s f19, f28, f3, f13, rmm # perform operation
fmadd.s f19, f28, f3, f13, rne # perform operation
fmadd.s f19, f28, f3, f13, rtz # perform operation
fmadd.s f19, f28, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f3, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
la x2, scratch
li x3, 0x041b38b7 # load x3 with value 0x041b38b7
sw x3, 0(x2) # store 0x041b38b7 in memory
flw f11, 0(x2) # load 0x041b38b7 from memory into f11
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmadd.s f17, f21, f11, f12, dyn # perform operation
fmadd.s f17, f21, f11, f12, rdn # perform operation
fmadd.s f17, f21, f11, f12, rmm # perform operation
fmadd.s f17, f21, f11, f12, rne # perform operation
fmadd.s f17, f21, f11, f12, rtz # perform operation
fmadd.s f17, f21, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
la x2, scratch
li x3, 0x332ae38f # load x3 with value 0x332ae38f
sw x3, 0(x2) # store 0x332ae38f in memory
flw f14, 0(x2) # load 0x332ae38f from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f8, f20, f14, f18, dyn # perform operation
fmadd.s f8, f20, f14, f18, rdn # perform operation
fmadd.s f8, f20, f14, f18, rmm # perform operation
fmadd.s f8, f20, f14, f18, rne # perform operation
fmadd.s f8, f20, f14, f18, rtz # perform operation
fmadd.s f8, f20, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f14, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
la x2, scratch
li x3, 0x5ea78738 # load x3 with value 0x5ea78738
sw x3, 0(x2) # store 0x5ea78738 in memory
flw f28, 0(x2) # load 0x5ea78738 from memory into f28
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
fmadd.s f18, f16, f28, f25, dyn # perform operation
fmadd.s f18, f16, f28, f25, rdn # perform operation
fmadd.s f18, f16, f28, f25, rmm # perform operation
fmadd.s f18, f16, f28, f25, rne # perform operation
fmadd.s f18, f16, f28, f25, rtz # perform operation
fmadd.s f18, f16, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
la x2, scratch
li x3, 0x0b0c3acc # load x3 with value 0x0b0c3acc
sw x3, 0(x2) # store 0x0b0c3acc in memory
flw f22, 0(x2) # load 0x0b0c3acc from memory into f22
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmadd.s f23, f18, f22, f7, dyn # perform operation
fmadd.s f23, f18, f22, f7, rdn # perform operation
fmadd.s f23, f18, f22, f7, rmm # perform operation
fmadd.s f23, f18, f22, f7, rne # perform operation
fmadd.s f23, f18, f22, f7, rtz # perform operation
fmadd.s f23, f18, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f18, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f18, f22, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
la x2, scratch
li x3, 0xb1b71c37 # load x3 with value 0xb1b71c37
sw x3, 0(x2) # store 0xb1b71c37 in memory
flw f8, 0(x2) # load 0xb1b71c37 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f16, f12, f8, f17, dyn # perform operation
fmadd.s f16, f12, f8, f17, rdn # perform operation
fmadd.s f16, f12, f8, f17, rmm # perform operation
fmadd.s f16, f12, f8, f17, rne # perform operation
fmadd.s f16, f12, f8, f17, rtz # perform operation
fmadd.s f16, f12, f8, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f8, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f8, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
la x2, scratch
li x3, 0x14e9a981 # load x3 with value 0x14e9a981
sw x3, 0(x2) # store 0x14e9a981 in memory
flw f27, 0(x2) # load 0x14e9a981 from memory into f27
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f16, f8, f27, f13, dyn # perform operation
fmadd.s f16, f8, f27, f13, rdn # perform operation
fmadd.s f16, f8, f27, f13, rmm # perform operation
fmadd.s f16, f8, f27, f13, rne # perform operation
fmadd.s f16, f8, f27, f13, rtz # perform operation
fmadd.s f16, f8, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f8, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f8, f27, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f3, 0(x2) # load 0xffffffff from memory into f3
la x2, scratch
li x3, 0xa9753892 # load x3 with value 0xa9753892
sw x3, 0(x2) # store 0xa9753892 in memory
flw f5, 0(x2) # load 0xa9753892 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
fmadd.s f2, f3, f5, f20, dyn # perform operation
fmadd.s f2, f3, f5, f20, rdn # perform operation
fmadd.s f2, f3, f5, f20, rmm # perform operation
fmadd.s f2, f3, f5, f20, rne # perform operation
fmadd.s f2, f3, f5, f20, rtz # perform operation
fmadd.s f2, f3, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f3, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f3, f5, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x93916f23 # load x3 with value 0x93916f23
sw x3, 0(x2) # store 0x93916f23 in memory
flw f2, 0(x2) # load 0x93916f23 from memory into f2
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f25, f10, f2, f3, dyn # perform operation
fmadd.s f25, f10, f2, f3, rdn # perform operation
fmadd.s f25, f10, f2, f3, rmm # perform operation
fmadd.s f25, f10, f2, f3, rne # perform operation
fmadd.s f25, f10, f2, f3, rtz # perform operation
fmadd.s f25, f10, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f2, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f21, 0(x2) # load 0xffffffff from memory into f21
la x2, scratch
li x3, 0x32389945 # load x3 with value 0x32389945
sw x3, 0(x2) # store 0x32389945 in memory
flw f12, 0(x2) # load 0x32389945 from memory into f12
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
fmadd.s f30, f21, f12, f20, dyn # perform operation
fmadd.s f30, f21, f12, f20, rdn # perform operation
fmadd.s f30, f21, f12, f20, rmm # perform operation
fmadd.s f30, f21, f12, f20, rne # perform operation
fmadd.s f30, f21, f12, f20, rtz # perform operation
fmadd.s f30, f21, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f12, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0x9b3f41e4 # load x3 with value 0x9b3f41e4
sw x3, 0(x2) # store 0x9b3f41e4 in memory
flw f17, 0(x2) # load 0x9b3f41e4 from memory into f17
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmadd.s f21, f11, f17, f31, dyn # perform operation
fmadd.s f21, f11, f17, f31, rdn # perform operation
fmadd.s f21, f11, f17, f31, rmm # perform operation
fmadd.s f21, f11, f17, f31, rne # perform operation
fmadd.s f21, f11, f17, f31, rtz # perform operation
fmadd.s f21, f11, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0xd2b3fd25 # load x3 with value 0xd2b3fd25
sw x3, 0(x2) # store 0xd2b3fd25 in memory
flw f8, 0(x2) # load 0xd2b3fd25 from memory into f8
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
fmadd.s f3, f22, f8, f14, dyn # perform operation
fmadd.s f3, f22, f8, f14, rdn # perform operation
fmadd.s f3, f22, f8, f14, rmm # perform operation
fmadd.s f3, f22, f8, f14, rne # perform operation
fmadd.s f3, f22, f8, f14, rtz # perform operation
fmadd.s f3, f22, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f22, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f22, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f22, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f22, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f22, f8, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x1c042b0d # load x3 with value 0x1c042b0d
sw x3, 0(x2) # store 0x1c042b0d in memory
flw f17, 0(x2) # load 0x1c042b0d from memory into f17
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f20, f14, f17, f31, dyn # perform operation
fmadd.s f20, f14, f17, f31, rdn # perform operation
fmadd.s f20, f14, f17, f31, rmm # perform operation
fmadd.s f20, f14, f17, f31, rne # perform operation
fmadd.s f20, f14, f17, f31, rtz # perform operation
fmadd.s f20, f14, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f14, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f14, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f14, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f14, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f14, f17, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x369ed9c9 # load x3 with value 0x369ed9c9
sw x3, 0(x2) # store 0x369ed9c9 in memory
flw f10, 0(x2) # load 0x369ed9c9 from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
fmadd.s f20, f23, f10, f31, dyn # perform operation
fmadd.s f20, f23, f10, f31, rdn # perform operation
fmadd.s f20, f23, f10, f31, rmm # perform operation
fmadd.s f20, f23, f10, f31, rne # perform operation
fmadd.s f20, f23, f10, f31, rtz # perform operation
fmadd.s f20, f23, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f23, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f23, f10, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f23, 0(x2) # load 0xffffffff from memory into f23
la x2, scratch
li x3, 0x0f0d90c3 # load x3 with value 0x0f0d90c3
sw x3, 0(x2) # store 0x0f0d90c3 in memory
flw f7, 0(x2) # load 0x0f0d90c3 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f11, f23, f7, f6, dyn # perform operation
fmadd.s f11, f23, f7, f6, rdn # perform operation
fmadd.s f11, f23, f7, f6, rmm # perform operation
fmadd.s f11, f23, f7, f6, rne # perform operation
fmadd.s f11, f23, f7, f6, rtz # perform operation
fmadd.s f11, f23, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0x88acc8cb # load x3 with value 0x88acc8cb
sw x3, 0(x2) # store 0x88acc8cb in memory
flw f23, 0(x2) # load 0x88acc8cb from memory into f23
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f28, f14, f23, f11, dyn # perform operation
fmadd.s f28, f14, f23, f11, rdn # perform operation
fmadd.s f28, f14, f23, f11, rmm # perform operation
fmadd.s f28, f14, f23, f11, rne # perform operation
fmadd.s f28, f14, f23, f11, rtz # perform operation
fmadd.s f28, f14, f23, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f23, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f23, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f24, 0(x2) # load 0xffffffff from memory into f24
la x2, scratch
li x3, 0x422e05b1 # load x3 with value 0x422e05b1
sw x3, 0(x2) # store 0x422e05b1 in memory
flw f12, 0(x2) # load 0x422e05b1 from memory into f12
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fmadd.s f26, f24, f12, f22, dyn # perform operation
fmadd.s f26, f24, f12, f22, rdn # perform operation
fmadd.s f26, f24, f12, f22, rmm # perform operation
fmadd.s f26, f24, f12, f22, rne # perform operation
fmadd.s f26, f24, f12, f22, rtz # perform operation
fmadd.s f26, f24, f12, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f24, f12, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f24, f12, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x3096f81c # load x3 with value 0x3096f81c
sw x3, 0(x2) # store 0x3096f81c in memory
flw f27, 0(x2) # load 0x3096f81c from memory into f27
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
fmadd.s f15, f22, f27, f31, dyn # perform operation
fmadd.s f15, f22, f27, f31, rdn # perform operation
fmadd.s f15, f22, f27, f31, rmm # perform operation
fmadd.s f15, f22, f27, f31, rne # perform operation
fmadd.s f15, f22, f27, f31, rtz # perform operation
fmadd.s f15, f22, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f27, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f11, 0(x2) # load 0xffffffff from memory into f11
la x2, scratch
li x3, 0xc18d3461 # load x3 with value 0xc18d3461
sw x3, 0(x2) # store 0xc18d3461 in memory
flw f5, 0(x2) # load 0xc18d3461 from memory into f5
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmadd.s f29, f11, f5, f3, dyn # perform operation
fmadd.s f29, f11, f5, f3, rdn # perform operation
fmadd.s f29, f11, f5, f3, rmm # perform operation
fmadd.s f29, f11, f5, f3, rne # perform operation
fmadd.s f29, f11, f5, f3, rtz # perform operation
fmadd.s f29, f11, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
la x2, scratch
li x3, 0xf28225c7 # load x3 with value 0xf28225c7
sw x3, 0(x2) # store 0xf28225c7 in memory
flw f25, 0(x2) # load 0xf28225c7 from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmadd.s f15, f14, f25, f20, dyn # perform operation
fmadd.s f15, f14, f25, f20, rdn # perform operation
fmadd.s f15, f14, f25, f20, rmm # perform operation
fmadd.s f15, f14, f25, f20, rne # perform operation
fmadd.s f15, f14, f25, f20, rtz # perform operation
fmadd.s f15, f14, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f25, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0xc0860b8c # load x3 with value 0xc0860b8c
sw x3, 0(x2) # store 0xc0860b8c in memory
flw f21, 0(x2) # load 0xc0860b8c from memory into f21
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmadd.s f27, f16, f21, f29, dyn # perform operation
fmadd.s f27, f16, f21, f29, rdn # perform operation
fmadd.s f27, f16, f21, f29, rmm # perform operation
fmadd.s f27, f16, f21, f29, rne # perform operation
fmadd.s f27, f16, f21, f29, rtz # perform operation
fmadd.s f27, f16, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f21, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f10, 0(x2) # load 0xffffffff from memory into f10
la x2, scratch
li x3, 0x4b58da8a # load x3 with value 0x4b58da8a
sw x3, 0(x2) # store 0x4b58da8a in memory
flw f22, 0(x2) # load 0x4b58da8a from memory into f22
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
fmadd.s f14, f10, f22, f8, dyn # perform operation
fmadd.s f14, f10, f22, f8, rdn # perform operation
fmadd.s f14, f10, f22, f8, rmm # perform operation
fmadd.s f14, f10, f22, f8, rne # perform operation
fmadd.s f14, f10, f22, f8, rtz # perform operation
fmadd.s f14, f10, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f10, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f10, f22, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x1)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0x1415ef27 # load x3 with value 0x1415ef27
sw x3, 0(x2) # store 0x1415ef27 in memory
flw f18, 0(x2) # load 0x1415ef27 from memory into f18
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmadd.s f24, f1, f18, f7, dyn # perform operation
fmadd.s f24, f1, f18, f7, rdn # perform operation
fmadd.s f24, f1, f18, f7, rmm # perform operation
fmadd.s f24, f1, f18, f7, rne # perform operation
fmadd.s f24, f1, f18, f7, rtz # perform operation
fmadd.s f24, f1, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f18, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f31, 0(x2) # load 0xffffffff from memory into f31
la x2, scratch
li x3, 0x6ee4ef9d # load x3 with value 0x6ee4ef9d
sw x3, 0(x2) # store 0x6ee4ef9d in memory
flw f13, 0(x2) # load 0x6ee4ef9d from memory into f13
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f6, f31, f13, f21, dyn # perform operation
fmadd.s f6, f31, f13, f21, rdn # perform operation
fmadd.s f6, f31, f13, f21, rmm # perform operation
fmadd.s f6, f31, f13, f21, rne # perform operation
fmadd.s f6, f31, f13, f21, rtz # perform operation
fmadd.s f6, f31, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f31, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f31, f13, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f5, 0(x2) # load 0xffffffff from memory into f5
la x2, scratch
li x3, 0x0b82dd16 # load x3 with value 0x0b82dd16
sw x3, 0(x2) # store 0x0b82dd16 in memory
flw f14, 0(x2) # load 0x0b82dd16 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmadd.s f24, f5, f14, f21, dyn # perform operation
fmadd.s f24, f5, f14, f21, rdn # perform operation
fmadd.s f24, f5, f14, f21, rmm # perform operation
fmadd.s f24, f5, f14, f21, rne # perform operation
fmadd.s f24, f5, f14, f21, rtz # perform operation
fmadd.s f24, f5, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f5, f14, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f16, 0(x2) # load 0xffffffff from memory into f16
la x2, scratch
li x3, 0x05e048a8 # load x3 with value 0x05e048a8
sw x3, 0(x2) # store 0x05e048a8 in memory
flw f12, 0(x2) # load 0x05e048a8 from memory into f12
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
fmadd.s f13, f16, f12, f6, dyn # perform operation
fmadd.s f13, f16, f12, f6, rdn # perform operation
fmadd.s f13, f16, f12, f6, rmm # perform operation
fmadd.s f13, f16, f12, f6, rne # perform operation
fmadd.s f13, f16, f12, f6, rtz # perform operation
fmadd.s f13, f16, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f12, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f25, 0(x2) # load 0xffffffff from memory into f25
la x2, scratch
li x3, 0xdd2c21c3 # load x3 with value 0xdd2c21c3
sw x3, 0(x2) # store 0xdd2c21c3 in memory
flw f10, 0(x2) # load 0xdd2c21c3 from memory into f10
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
fmadd.s f17, f25, f10, f8, dyn # perform operation
fmadd.s f17, f25, f10, f8, rdn # perform operation
fmadd.s f17, f25, f10, f8, rmm # perform operation
fmadd.s f17, f25, f10, f8, rne # perform operation
fmadd.s f17, f25, f10, f8, rtz # perform operation
fmadd.s f17, f25, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f1, 0(x2) # load 0xffffffff from memory into f1
la x2, scratch
li x3, 0xc180c286 # load x3 with value 0xc180c286
sw x3, 0(x2) # store 0xc180c286 in memory
flw f22, 0(x2) # load 0xc180c286 from memory into f22
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f17, f1, f22, f12, dyn # perform operation
fmadd.s f17, f1, f22, f12, rdn # perform operation
fmadd.s f17, f1, f22, f12, rmm # perform operation
fmadd.s f17, f1, f22, f12, rne # perform operation
fmadd.s f17, f1, f22, f12, rtz # perform operation
fmadd.s f17, f1, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f22, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f22, 0(x2) # load 0xffffffff from memory into f22
la x2, scratch
li x3, 0x2e13bb97 # load x3 with value 0x2e13bb97
sw x3, 0(x2) # store 0x2e13bb97 in memory
flw f14, 0(x2) # load 0x2e13bb97 from memory into f14
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f9, 0(x2) # load 0xffffffff from memory into f9
fmadd.s f12, f22, f14, f9, dyn # perform operation
fmadd.s f12, f22, f14, f9, rdn # perform operation
fmadd.s f12, f22, f14, f9, rmm # perform operation
fmadd.s f12, f22, f14, f9, rne # perform operation
fmadd.s f12, f22, f14, f9, rtz # perform operation
fmadd.s f12, f22, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f22, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f22, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f22, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f22, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f22, f14, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f6, 0(x2) # load 0xffffffff from memory into f6
la x2, scratch
li x3, 0x9f1f1c0b # load x3 with value 0x9f1f1c0b
sw x3, 0(x2) # store 0x9f1f1c0b in memory
flw f9, 0(x2) # load 0x9f1f1c0b from memory into f9
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f13, f6, f9, f24, dyn # perform operation
fmadd.s f13, f6, f9, f24, rdn # perform operation
fmadd.s f13, f6, f9, f24, rmm # perform operation
fmadd.s f13, f6, f9, f24, rne # perform operation
fmadd.s f13, f6, f9, f24, rtz # perform operation
fmadd.s f13, f6, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f6, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f6, f9, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f26, 0(x2) # load 0xffffffff from memory into f26
la x2, scratch
li x3, 0x5db31059 # load x3 with value 0x5db31059
sw x3, 0(x2) # store 0x5db31059 in memory
flw f21, 0(x2) # load 0x5db31059 from memory into f21
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmadd.s f15, f26, f21, f9, dyn # perform operation
fmadd.s f15, f26, f21, f9, rdn # perform operation
fmadd.s f15, f26, f21, f9, rmm # perform operation
fmadd.s f15, f26, f21, f9, rne # perform operation
fmadd.s f15, f26, f21, f9, rtz # perform operation
fmadd.s f15, f26, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f21, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
la x2, scratch
li x3, 0x1923f02e # load x3 with value 0x1923f02e
sw x3, 0(x2) # store 0x1923f02e in memory
flw f14, 0(x2) # load 0x1923f02e from memory into f14
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
fmadd.s f11, f17, f14, f2, dyn # perform operation
fmadd.s f11, f17, f14, f2, rdn # perform operation
fmadd.s f11, f17, f14, f2, rmm # perform operation
fmadd.s f11, f17, f14, f2, rne # perform operation
fmadd.s f11, f17, f14, f2, rtz # perform operation
fmadd.s f11, f17, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f17, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f17, f14, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
la x2, scratch
li x3, 0xb46e3207 # load x3 with value 0xb46e3207
sw x3, 0(x2) # store 0xb46e3207 in memory
flw f8, 0(x2) # load 0xb46e3207 from memory into f8
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fmadd.s f26, f20, f8, f11, dyn # perform operation
fmadd.s f26, f20, f8, f11, rdn # perform operation
fmadd.s f26, f20, f8, f11, rmm # perform operation
fmadd.s f26, f20, f8, f11, rne # perform operation
fmadd.s f26, f20, f8, f11, rtz # perform operation
fmadd.s f26, f20, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f8, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffffffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f15, 0(x2) # load 0xffffffff from memory into f15
la x2, scratch
li x3, 0x944b8cd0 # load x3 with value 0x944b8cd0
sw x3, 0(x2) # store 0x944b8cd0 in memory
flw f18, 0(x2) # load 0x944b8cd0 from memory into f18
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
fmadd.s f16, f15, f18, f13, dyn # perform operation
fmadd.s f16, f15, f18, f13, rdn # perform operation
fmadd.s f16, f15, f18, f13, rmm # perform operation
fmadd.s f16, f15, f18, f13, rne # perform operation
fmadd.s f16, f15, f18, f13, rtz # perform operation
fmadd.s f16, f15, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f15, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f15, f18, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x22d90800 # load x3 with value 0x22d90800
sw x3, 0(x2) # store 0x22d90800 in memory
flw f9, 0(x2) # load 0x22d90800 from memory into f9
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
fmadd.s f19, f1, f9, f13, dyn # perform operation
fmadd.s f19, f1, f9, f13, rdn # perform operation
fmadd.s f19, f1, f9, f13, rmm # perform operation
fmadd.s f19, f1, f9, f13, rne # perform operation
fmadd.s f19, f1, f9, f13, rtz # perform operation
fmadd.s f19, f1, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f9, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
la x2, scratch
li x3, 0x83f4a19a # load x3 with value 0x83f4a19a
sw x3, 0(x2) # store 0x83f4a19a in memory
flw f16, 0(x2) # load 0x83f4a19a from memory into f16
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmadd.s f5, f17, f16, f9, dyn # perform operation
fmadd.s f5, f17, f16, f9, rdn # perform operation
fmadd.s f5, f17, f16, f9, rmm # perform operation
fmadd.s f5, f17, f16, f9, rne # perform operation
fmadd.s f5, f17, f16, f9, rtz # perform operation
fmadd.s f5, f17, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f16, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0xf41636ad # load x3 with value 0xf41636ad
sw x3, 0(x2) # store 0xf41636ad in memory
flw f31, 0(x2) # load 0xf41636ad from memory into f31
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
fmadd.s f5, f9, f31, f27, dyn # perform operation
fmadd.s f5, f9, f31, f27, rdn # perform operation
fmadd.s f5, f9, f31, f27, rmm # perform operation
fmadd.s f5, f9, f31, f27, rne # perform operation
fmadd.s f5, f9, f31, f27, rtz # perform operation
fmadd.s f5, f9, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f31, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xf22c1cf4 # load x3 with value 0xf22c1cf4
sw x3, 0(x2) # store 0xf22c1cf4 in memory
flw f21, 0(x2) # load 0xf22c1cf4 from memory into f21
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmadd.s f29, f19, f21, f31, dyn # perform operation
fmadd.s f29, f19, f21, f31, rdn # perform operation
fmadd.s f29, f19, f21, f31, rmm # perform operation
fmadd.s f29, f19, f21, f31, rne # perform operation
fmadd.s f29, f19, f21, f31, rtz # perform operation
fmadd.s f29, f19, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f19, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f19, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x51746cff # load x3 with value 0x51746cff
sw x3, 0(x2) # store 0x51746cff in memory
flw f23, 0(x2) # load 0x51746cff from memory into f23
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmadd.s f12, f7, f23, f27, dyn # perform operation
fmadd.s f12, f7, f23, f27, rdn # perform operation
fmadd.s f12, f7, f23, f27, rmm # perform operation
fmadd.s f12, f7, f23, f27, rne # perform operation
fmadd.s f12, f7, f23, f27, rtz # perform operation
fmadd.s f12, f7, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f7, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f7, f23, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
la x2, scratch
li x3, 0x5e9e7407 # load x3 with value 0x5e9e7407
sw x3, 0(x2) # store 0x5e9e7407 in memory
flw f9, 0(x2) # load 0x5e9e7407 from memory into f9
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fmadd.s f25, f14, f9, f3, dyn # perform operation
fmadd.s f25, f14, f9, f3, rdn # perform operation
fmadd.s f25, f14, f9, f3, rmm # perform operation
fmadd.s f25, f14, f9, f3, rne # perform operation
fmadd.s f25, f14, f9, f3, rtz # perform operation
fmadd.s f25, f14, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f9, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0xcc776c58 # load x3 with value 0xcc776c58
sw x3, 0(x2) # store 0xcc776c58 in memory
flw f30, 0(x2) # load 0xcc776c58 from memory into f30
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
fmadd.s f6, f13, f30, f23, dyn # perform operation
fmadd.s f6, f13, f30, f23, rdn # perform operation
fmadd.s f6, f13, f30, f23, rmm # perform operation
fmadd.s f6, f13, f30, f23, rne # perform operation
fmadd.s f6, f13, f30, f23, rtz # perform operation
fmadd.s f6, f13, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0x394d1ae4 # load x3 with value 0x394d1ae4
sw x3, 0(x2) # store 0x394d1ae4 in memory
flw f5, 0(x2) # load 0x394d1ae4 from memory into f5
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
fmadd.s f24, f12, f5, f13, dyn # perform operation
fmadd.s f24, f12, f5, f13, rdn # perform operation
fmadd.s f24, f12, f5, f13, rmm # perform operation
fmadd.s f24, f12, f5, f13, rne # perform operation
fmadd.s f24, f12, f5, f13, rtz # perform operation
fmadd.s f24, f12, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f5, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
la x2, scratch
li x3, 0x01122157 # load x3 with value 0x01122157
sw x3, 0(x2) # store 0x01122157 in memory
flw f15, 0(x2) # load 0x01122157 from memory into f15
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f7, f3, f15, f20, dyn # perform operation
fmadd.s f7, f3, f15, f20, rdn # perform operation
fmadd.s f7, f3, f15, f20, rmm # perform operation
fmadd.s f7, f3, f15, f20, rne # perform operation
fmadd.s f7, f3, f15, f20, rtz # perform operation
fmadd.s f7, f3, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f15, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xb7216fcb # load x3 with value 0xb7216fcb
sw x3, 0(x2) # store 0xb7216fcb in memory
flw f25, 0(x2) # load 0xb7216fcb from memory into f25
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmadd.s f11, f1, f25, f17, dyn # perform operation
fmadd.s f11, f1, f25, f17, rdn # perform operation
fmadd.s f11, f1, f25, f17, rmm # perform operation
fmadd.s f11, f1, f25, f17, rne # perform operation
fmadd.s f11, f1, f25, f17, rtz # perform operation
fmadd.s f11, f1, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f1, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f1, f25, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
la x2, scratch
li x3, 0x2131b347 # load x3 with value 0x2131b347
sw x3, 0(x2) # store 0x2131b347 in memory
flw f30, 0(x2) # load 0x2131b347 from memory into f30
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
fmadd.s f29, f24, f30, f10, dyn # perform operation
fmadd.s f29, f24, f30, f10, rdn # perform operation
fmadd.s f29, f24, f30, f10, rmm # perform operation
fmadd.s f29, f24, f30, f10, rne # perform operation
fmadd.s f29, f24, f30, f10, rtz # perform operation
fmadd.s f29, f24, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f24, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f24, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f24, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f24, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f24, f30, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
la x2, scratch
li x3, 0x53b28730 # load x3 with value 0x53b28730
sw x3, 0(x2) # store 0x53b28730 in memory
flw f11, 0(x2) # load 0x53b28730 from memory into f11
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
fmadd.s f21, f7, f11, f24, dyn # perform operation
fmadd.s f21, f7, f11, f24, rdn # perform operation
fmadd.s f21, f7, f11, f24, rmm # perform operation
fmadd.s f21, f7, f11, f24, rne # perform operation
fmadd.s f21, f7, f11, f24, rtz # perform operation
fmadd.s f21, f7, f11, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f11, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f11, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f11, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f11, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f11, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0xca3afe29 # load x3 with value 0xca3afe29
sw x3, 0(x2) # store 0xca3afe29 in memory
flw f10, 0(x2) # load 0xca3afe29 from memory into f10
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
fmadd.s f6, f1, f10, f8, dyn # perform operation
fmadd.s f6, f1, f10, f8, rdn # perform operation
fmadd.s f6, f1, f10, f8, rmm # perform operation
fmadd.s f6, f1, f10, f8, rne # perform operation
fmadd.s f6, f1, f10, f8, rtz # perform operation
fmadd.s f6, f1, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f10, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
la x2, scratch
li x3, 0x23d51a37 # load x3 with value 0x23d51a37
sw x3, 0(x2) # store 0x23d51a37 in memory
flw f21, 0(x2) # load 0x23d51a37 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f12, f20, f21, f14, dyn # perform operation
fmadd.s f12, f20, f21, f14, rdn # perform operation
fmadd.s f12, f20, f21, f14, rmm # perform operation
fmadd.s f12, f20, f21, f14, rne # perform operation
fmadd.s f12, f20, f21, f14, rtz # perform operation
fmadd.s f12, f20, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f20, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f20, f21, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
la x2, scratch
li x3, 0x333f10c4 # load x3 with value 0x333f10c4
sw x3, 0(x2) # store 0x333f10c4 in memory
flw f9, 0(x2) # load 0x333f10c4 from memory into f9
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmadd.s f16, f13, f9, f30, dyn # perform operation
fmadd.s f16, f13, f9, f30, rdn # perform operation
fmadd.s f16, f13, f9, f30, rmm # perform operation
fmadd.s f16, f13, f9, f30, rne # perform operation
fmadd.s f16, f13, f9, f30, rtz # perform operation
fmadd.s f16, f13, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f13, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f13, f9, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
la x2, scratch
li x3, 0xfdd2bd57 # load x3 with value 0xfdd2bd57
sw x3, 0(x2) # store 0xfdd2bd57 in memory
flw f19, 0(x2) # load 0xfdd2bd57 from memory into f19
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
fmadd.s f24, f10, f19, f7, dyn # perform operation
fmadd.s f24, f10, f19, f7, rdn # perform operation
fmadd.s f24, f10, f19, f7, rmm # perform operation
fmadd.s f24, f10, f19, f7, rne # perform operation
fmadd.s f24, f10, f19, f7, rtz # perform operation
fmadd.s f24, f10, f19, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f10, f19, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f10, f19, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
la x2, scratch
li x3, 0x6d50c05b # load x3 with value 0x6d50c05b
sw x3, 0(x2) # store 0x6d50c05b in memory
flw f3, 0(x2) # load 0x6d50c05b from memory into f3
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f24, f27, f3, f1, dyn # perform operation
fmadd.s f24, f27, f3, f1, rdn # perform operation
fmadd.s f24, f27, f3, f1, rmm # perform operation
fmadd.s f24, f27, f3, f1, rne # perform operation
fmadd.s f24, f27, f3, f1, rtz # perform operation
fmadd.s f24, f27, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f3, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
la x2, scratch
li x3, 0x70222b63 # load x3 with value 0x70222b63
sw x3, 0(x2) # store 0x70222b63 in memory
flw f22, 0(x2) # load 0x70222b63 from memory into f22
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmadd.s f25, f30, f22, f23, dyn # perform operation
fmadd.s f25, f30, f22, f23, rdn # perform operation
fmadd.s f25, f30, f22, f23, rmm # perform operation
fmadd.s f25, f30, f22, f23, rne # perform operation
fmadd.s f25, f30, f22, f23, rtz # perform operation
fmadd.s f25, f30, f22, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f30, f22, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f30, f22, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0x1340f329 # load x3 with value 0x1340f329
sw x3, 0(x2) # store 0x1340f329 in memory
flw f3, 0(x2) # load 0x1340f329 from memory into f3
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
fmadd.s f31, f25, f3, f20, dyn # perform operation
fmadd.s f31, f25, f3, f20, rdn # perform operation
fmadd.s f31, f25, f3, f20, rmm # perform operation
fmadd.s f31, f25, f3, f20, rne # perform operation
fmadd.s f31, f25, f3, f20, rtz # perform operation
fmadd.s f31, f25, f3, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f25, f3, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f25, f3, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
la x2, scratch
li x3, 0x9b261b38 # load x3 with value 0x9b261b38
sw x3, 0(x2) # store 0x9b261b38 in memory
flw f23, 0(x2) # load 0x9b261b38 from memory into f23
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f14, f11, f23, f1, dyn # perform operation
fmadd.s f14, f11, f23, f1, rdn # perform operation
fmadd.s f14, f11, f23, f1, rmm # perform operation
fmadd.s f14, f11, f23, f1, rne # perform operation
fmadd.s f14, f11, f23, f1, rtz # perform operation
fmadd.s f14, f11, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f23, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
la x2, scratch
li x3, 0xb46dff3e # load x3 with value 0xb46dff3e
sw x3, 0(x2) # store 0xb46dff3e in memory
flw f19, 0(x2) # load 0xb46dff3e from memory into f19
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmadd.s f15, f28, f19, f18, dyn # perform operation
fmadd.s f15, f28, f19, f18, rdn # perform operation
fmadd.s f15, f28, f19, f18, rmm # perform operation
fmadd.s f15, f28, f19, f18, rne # perform operation
fmadd.s f15, f28, f19, f18, rtz # perform operation
fmadd.s f15, f28, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f19, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xf9794d50 # load x3 with value 0xf9794d50
sw x3, 0(x2) # store 0xf9794d50 in memory
flw f24, 0(x2) # load 0xf9794d50 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
fmadd.s f10, f19, f24, f6, dyn # perform operation
fmadd.s f10, f19, f24, f6, rdn # perform operation
fmadd.s f10, f19, f24, f6, rmm # perform operation
fmadd.s f10, f19, f24, f6, rne # perform operation
fmadd.s f10, f19, f24, f6, rtz # perform operation
fmadd.s f10, f19, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f24, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
la x2, scratch
li x3, 0x1b657a97 # load x3 with value 0x1b657a97
sw x3, 0(x2) # store 0x1b657a97 in memory
flw f11, 0(x2) # load 0x1b657a97 from memory into f11
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f17, 0(x2) # load 0xffffffff from memory into f17
fmadd.s f7, f9, f11, f17, dyn # perform operation
fmadd.s f7, f9, f11, f17, rdn # perform operation
fmadd.s f7, f9, f11, f17, rmm # perform operation
fmadd.s f7, f9, f11, f17, rne # perform operation
fmadd.s f7, f9, f11, f17, rtz # perform operation
fmadd.s f7, f9, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f11, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
la x2, scratch
li x3, 0x282fc7d6 # load x3 with value 0x282fc7d6
sw x3, 0(x2) # store 0x282fc7d6 in memory
flw f23, 0(x2) # load 0x282fc7d6 from memory into f23
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
fmadd.s f31, f1, f23, f7, dyn # perform operation
fmadd.s f31, f1, f23, f7, rdn # perform operation
fmadd.s f31, f1, f23, f7, rmm # perform operation
fmadd.s f31, f1, f23, f7, rne # perform operation
fmadd.s f31, f1, f23, f7, rtz # perform operation
fmadd.s f31, f1, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f23, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
la x2, scratch
li x3, 0xd1b76050 # load x3 with value 0xd1b76050
sw x3, 0(x2) # store 0xd1b76050 in memory
flw f19, 0(x2) # load 0xd1b76050 from memory into f19
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
fmadd.s f6, f25, f19, f9, dyn # perform operation
fmadd.s f6, f25, f19, f9, rdn # perform operation
fmadd.s f6, f25, f19, f9, rmm # perform operation
fmadd.s f6, f25, f19, f9, rne # perform operation
fmadd.s f6, f25, f19, f9, rtz # perform operation
fmadd.s f6, f25, f19, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f25, f19, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f25, f19, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
la x2, scratch
li x3, 0xee0fe96a # load x3 with value 0xee0fe96a
sw x3, 0(x2) # store 0xee0fe96a in memory
flw f24, 0(x2) # load 0xee0fe96a from memory into f24
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
fmadd.s f23, f12, f24, f16, dyn # perform operation
fmadd.s f23, f12, f24, f16, rdn # perform operation
fmadd.s f23, f12, f24, f16, rmm # perform operation
fmadd.s f23, f12, f24, f16, rne # perform operation
fmadd.s f23, f12, f24, f16, rtz # perform operation
fmadd.s f23, f12, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f24, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
la x2, scratch
li x3, 0xb37e723b # load x3 with value 0xb37e723b
sw x3, 0(x2) # store 0xb37e723b in memory
flw f30, 0(x2) # load 0xb37e723b from memory into f30
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmadd.s f6, f19, f30, f29, dyn # perform operation
fmadd.s f6, f19, f30, f29, rdn # perform operation
fmadd.s f6, f19, f30, f29, rmm # perform operation
fmadd.s f6, f19, f30, f29, rne # perform operation
fmadd.s f6, f19, f30, f29, rtz # perform operation
fmadd.s f6, f19, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f30, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
la x2, scratch
li x3, 0xe5a2c862 # load x3 with value 0xe5a2c862
sw x3, 0(x2) # store 0xe5a2c862 in memory
flw f22, 0(x2) # load 0xe5a2c862 from memory into f22
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f26, f6, f22, f30, dyn # perform operation
fmadd.s f26, f6, f22, f30, rdn # perform operation
fmadd.s f26, f6, f22, f30, rmm # perform operation
fmadd.s f26, f6, f22, f30, rne # perform operation
fmadd.s f26, f6, f22, f30, rtz # perform operation
fmadd.s f26, f6, f22, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f22, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f22, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f22, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f22, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f22, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
la x2, scratch
li x3, 0x13de6dd6 # load x3 with value 0x13de6dd6
sw x3, 0(x2) # store 0x13de6dd6 in memory
flw f31, 0(x2) # load 0x13de6dd6 from memory into f31
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
fmadd.s f26, f8, f31, f10, dyn # perform operation
fmadd.s f26, f8, f31, f10, rdn # perform operation
fmadd.s f26, f8, f31, f10, rmm # perform operation
fmadd.s f26, f8, f31, f10, rne # perform operation
fmadd.s f26, f8, f31, f10, rtz # perform operation
fmadd.s f26, f8, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f8, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f8, f31, f10 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
la x2, scratch
li x3, 0xcf2a371d # load x3 with value 0xcf2a371d
sw x3, 0(x2) # store 0xcf2a371d in memory
flw f24, 0(x2) # load 0xcf2a371d from memory into f24
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
fmadd.s f22, f10, f24, f8, dyn # perform operation
fmadd.s f22, f10, f24, f8, rdn # perform operation
fmadd.s f22, f10, f24, f8, rmm # perform operation
fmadd.s f22, f10, f24, f8, rne # perform operation
fmadd.s f22, f10, f24, f8, rtz # perform operation
fmadd.s f22, f10, f24, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f24, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f24, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x05970cae # load x3 with value 0x05970cae
sw x3, 0(x2) # store 0x05970cae in memory
flw f12, 0(x2) # load 0x05970cae from memory into f12
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
fmadd.s f9, f23, f12, f16, dyn # perform operation
fmadd.s f9, f23, f12, f16, rdn # perform operation
fmadd.s f9, f23, f12, f16, rmm # perform operation
fmadd.s f9, f23, f12, f16, rne # perform operation
fmadd.s f9, f23, f12, f16, rtz # perform operation
fmadd.s f9, f23, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x251a4f61 # load x3 with value 0x251a4f61
sw x3, 0(x2) # store 0x251a4f61 in memory
flw f30, 0(x2) # load 0x251a4f61 from memory into f30
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmadd.s f20, f13, f30, f5, dyn # perform operation
fmadd.s f20, f13, f30, f5, rdn # perform operation
fmadd.s f20, f13, f30, f5, rmm # perform operation
fmadd.s f20, f13, f30, f5, rne # perform operation
fmadd.s f20, f13, f30, f5, rtz # perform operation
fmadd.s f20, f13, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f13, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f13, f30, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
la x2, scratch
li x3, 0x4292d742 # load x3 with value 0x4292d742
sw x3, 0(x2) # store 0x4292d742 in memory
flw f28, 0(x2) # load 0x4292d742 from memory into f28
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
fmadd.s f23, f9, f28, f29, dyn # perform operation
fmadd.s f23, f9, f28, f29, rdn # perform operation
fmadd.s f23, f9, f28, f29, rmm # perform operation
fmadd.s f23, f9, f28, f29, rne # perform operation
fmadd.s f23, f9, f28, f29, rtz # perform operation
fmadd.s f23, f9, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f9, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0xec1aa9ca # load x3 with value 0xec1aa9ca
sw x3, 0(x2) # store 0xec1aa9ca in memory
flw f12, 0(x2) # load 0xec1aa9ca from memory into f12
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
fmadd.s f14, f17, f12, f16, dyn # perform operation
fmadd.s f14, f17, f12, f16, rdn # perform operation
fmadd.s f14, f17, f12, f16, rmm # perform operation
fmadd.s f14, f17, f12, f16, rne # perform operation
fmadd.s f14, f17, f12, f16, rtz # perform operation
fmadd.s f14, f17, f12, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f12, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f12, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f12, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f12, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f12, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x86e3ebda # load x3 with value 0x86e3ebda
sw x3, 0(x2) # store 0x86e3ebda in memory
flw f14, 0(x2) # load 0x86e3ebda from memory into f14
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
fmadd.s f11, f2, f14, f22, dyn # perform operation
fmadd.s f11, f2, f14, f22, rdn # perform operation
fmadd.s f11, f2, f14, f22, rmm # perform operation
fmadd.s f11, f2, f14, f22, rne # perform operation
fmadd.s f11, f2, f14, f22, rtz # perform operation
fmadd.s f11, f2, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f2, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f2, f14, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
la x2, scratch
li x3, 0xbf5ed34e # load x3 with value 0xbf5ed34e
sw x3, 0(x2) # store 0xbf5ed34e in memory
flw f10, 0(x2) # load 0xbf5ed34e from memory into f10
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmadd.s f31, f6, f10, f3, dyn # perform operation
fmadd.s f31, f6, f10, f3, rdn # perform operation
fmadd.s f31, f6, f10, f3, rmm # perform operation
fmadd.s f31, f6, f10, f3, rne # perform operation
fmadd.s f31, f6, f10, f3, rtz # perform operation
fmadd.s f31, f6, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f10, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x41802a69 # load x3 with value 0x41802a69
sw x3, 0(x2) # store 0x41802a69 in memory
flw f7, 0(x2) # load 0x41802a69 from memory into f7
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f18, f13, f7, f6, dyn # perform operation
fmadd.s f18, f13, f7, f6, rdn # perform operation
fmadd.s f18, f13, f7, f6, rmm # perform operation
fmadd.s f18, f13, f7, f6, rne # perform operation
fmadd.s f18, f13, f7, f6, rtz # perform operation
fmadd.s f18, f13, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f13, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f13, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f13, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f13, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f13, f7, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
la x2, scratch
li x3, 0x4894416e # load x3 with value 0x4894416e
sw x3, 0(x2) # store 0x4894416e in memory
flw f28, 0(x2) # load 0x4894416e from memory into f28
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
fmadd.s f18, f11, f28, f25, dyn # perform operation
fmadd.s f18, f11, f28, f25, rdn # perform operation
fmadd.s f18, f11, f28, f25, rmm # perform operation
fmadd.s f18, f11, f28, f25, rne # perform operation
fmadd.s f18, f11, f28, f25, rtz # perform operation
fmadd.s f18, f11, f28, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f28, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f28, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
la x2, scratch
li x3, 0x32be1b03 # load x3 with value 0x32be1b03
sw x3, 0(x2) # store 0x32be1b03 in memory
flw f21, 0(x2) # load 0x32be1b03 from memory into f21
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f28, f29, f21, f17, dyn # perform operation
fmadd.s f28, f29, f21, f17, rdn # perform operation
fmadd.s f28, f29, f21, f17, rmm # perform operation
fmadd.s f28, f29, f21, f17, rne # perform operation
fmadd.s f28, f29, f21, f17, rtz # perform operation
fmadd.s f28, f29, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f21, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
la x2, scratch
li x3, 0x2e1f8173 # load x3 with value 0x2e1f8173
sw x3, 0(x2) # store 0x2e1f8173 in memory
flw f25, 0(x2) # load 0x2e1f8173 from memory into f25
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmadd.s f6, f13, f25, f18, dyn # perform operation
fmadd.s f6, f13, f25, f18, rdn # perform operation
fmadd.s f6, f13, f25, f18, rmm # perform operation
fmadd.s f6, f13, f25, f18, rne # perform operation
fmadd.s f6, f13, f25, f18, rtz # perform operation
fmadd.s f6, f13, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f25, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
la x2, scratch
li x3, 0x24804d84 # load x3 with value 0x24804d84
sw x3, 0(x2) # store 0x24804d84 in memory
flw f20, 0(x2) # load 0x24804d84 from memory into f20
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmadd.s f9, f16, f20, f14, dyn # perform operation
fmadd.s f9, f16, f20, f14, rdn # perform operation
fmadd.s f9, f16, f20, f14, rmm # perform operation
fmadd.s f9, f16, f20, f14, rne # perform operation
fmadd.s f9, f16, f20, f14, rtz # perform operation
fmadd.s f9, f16, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f20, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xfa7af142 # load x3 with value 0xfa7af142
sw x3, 0(x2) # store 0xfa7af142 in memory
flw f21, 0(x2) # load 0xfa7af142 from memory into f21
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmadd.s f26, f25, f21, f13, dyn # perform operation
fmadd.s f26, f25, f21, f13, rdn # perform operation
fmadd.s f26, f25, f21, f13, rmm # perform operation
fmadd.s f26, f25, f21, f13, rne # perform operation
fmadd.s f26, f25, f21, f13, rtz # perform operation
fmadd.s f26, f25, f21, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f21, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f21, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
la x2, scratch
li x3, 0x22442669 # load x3 with value 0x22442669
sw x3, 0(x2) # store 0x22442669 in memory
flw f23, 0(x2) # load 0x22442669 from memory into f23
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
fmadd.s f26, f27, f23, f5, dyn # perform operation
fmadd.s f26, f27, f23, f5, rdn # perform operation
fmadd.s f26, f27, f23, f5, rmm # perform operation
fmadd.s f26, f27, f23, f5, rne # perform operation
fmadd.s f26, f27, f23, f5, rtz # perform operation
fmadd.s f26, f27, f23, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f23, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f23, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f23, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f23, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f23, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
la x2, scratch
li x3, 0x93b97a04 # load x3 with value 0x93b97a04
sw x3, 0(x2) # store 0x93b97a04 in memory
flw f14, 0(x2) # load 0x93b97a04 from memory into f14
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f15, f20, f14, f31, dyn # perform operation
fmadd.s f15, f20, f14, f31, rdn # perform operation
fmadd.s f15, f20, f14, f31, rmm # perform operation
fmadd.s f15, f20, f14, f31, rne # perform operation
fmadd.s f15, f20, f14, f31, rtz # perform operation
fmadd.s f15, f20, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f14, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x41dd6da8 # load x3 with value 0x41dd6da8
sw x3, 0(x2) # store 0x41dd6da8 in memory
flw f19, 0(x2) # load 0x41dd6da8 from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fmadd.s f18, f21, f19, f22, dyn # perform operation
fmadd.s f18, f21, f19, f22, rdn # perform operation
fmadd.s f18, f21, f19, f22, rmm # perform operation
fmadd.s f18, f21, f19, f22, rne # perform operation
fmadd.s f18, f21, f19, f22, rtz # perform operation
fmadd.s f18, f21, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f19, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
la x2, scratch
li x3, 0xd06c165b # load x3 with value 0xd06c165b
sw x3, 0(x2) # store 0xd06c165b in memory
flw f27, 0(x2) # load 0xd06c165b from memory into f27
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
fmadd.s f14, f25, f27, f23, dyn # perform operation
fmadd.s f14, f25, f27, f23, rdn # perform operation
fmadd.s f14, f25, f27, f23, rmm # perform operation
fmadd.s f14, f25, f27, f23, rne # perform operation
fmadd.s f14, f25, f27, f23, rtz # perform operation
fmadd.s f14, f25, f27, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f27, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f27, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
la x2, scratch
li x3, 0x79b610d4 # load x3 with value 0x79b610d4
sw x3, 0(x2) # store 0x79b610d4 in memory
flw f14, 0(x2) # load 0x79b610d4 from memory into f14
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
fmadd.s f15, f23, f14, f1, dyn # perform operation
fmadd.s f15, f23, f14, f1, rdn # perform operation
fmadd.s f15, f23, f14, f1, rmm # perform operation
fmadd.s f15, f23, f14, f1, rne # perform operation
fmadd.s f15, f23, f14, f1, rtz # perform operation
fmadd.s f15, f23, f14, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f14, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f14, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f14, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f14, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f14, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
la x2, scratch
li x3, 0x3a9b0b1a # load x3 with value 0x3a9b0b1a
sw x3, 0(x2) # store 0x3a9b0b1a in memory
flw f16, 0(x2) # load 0x3a9b0b1a from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
fmadd.s f18, f17, f16, f15, dyn # perform operation
fmadd.s f18, f17, f16, f15, rdn # perform operation
fmadd.s f18, f17, f16, f15, rmm # perform operation
fmadd.s f18, f17, f16, f15, rne # perform operation
fmadd.s f18, f17, f16, f15, rtz # perform operation
fmadd.s f18, f17, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f16, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
la x2, scratch
li x3, 0x21b318a4 # load x3 with value 0x21b318a4
sw x3, 0(x2) # store 0x21b318a4 in memory
flw f14, 0(x2) # load 0x21b318a4 from memory into f14
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
fmadd.s f28, f21, f14, f30, dyn # perform operation
fmadd.s f28, f21, f14, f30, rdn # perform operation
fmadd.s f28, f21, f14, f30, rmm # perform operation
fmadd.s f28, f21, f14, f30, rne # perform operation
fmadd.s f28, f21, f14, f30, rtz # perform operation
fmadd.s f28, f21, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f21, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f21, f14, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xffe26317 # load x3 with value 0xffe26317
sw x3, 0(x2) # store 0xffe26317 in memory
flw f18, 0(x2) # load 0xffe26317 from memory into f18
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
fmadd.s f24, f26, f18, f3, dyn # perform operation
fmadd.s f24, f26, f18, f3, rdn # perform operation
fmadd.s f24, f26, f18, f3, rmm # perform operation
fmadd.s f24, f26, f18, f3, rne # perform operation
fmadd.s f24, f26, f18, f3, rtz # perform operation
fmadd.s f24, f26, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f26, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f26, f18, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
la x2, scratch
li x3, 0x7c93a56c # load x3 with value 0x7c93a56c
sw x3, 0(x2) # store 0x7c93a56c in memory
flw f9, 0(x2) # load 0x7c93a56c from memory into f9
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f20, 0(x2) # load 0xffffffff from memory into f20
fmadd.s f28, f7, f9, f20, dyn # perform operation
fmadd.s f28, f7, f9, f20, rdn # perform operation
fmadd.s f28, f7, f9, f20, rmm # perform operation
fmadd.s f28, f7, f9, f20, rne # perform operation
fmadd.s f28, f7, f9, f20, rtz # perform operation
fmadd.s f28, f7, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f7, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f7, f9, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
la x2, scratch
li x3, 0xd602648d # load x3 with value 0xd602648d
sw x3, 0(x2) # store 0xd602648d in memory
flw f30, 0(x2) # load 0xd602648d from memory into f30
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f20, f26, f30, f23, dyn # perform operation
fmadd.s f20, f26, f30, f23, rdn # perform operation
fmadd.s f20, f26, f30, f23, rmm # perform operation
fmadd.s f20, f26, f30, f23, rne # perform operation
fmadd.s f20, f26, f30, f23, rtz # perform operation
fmadd.s f20, f26, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f26, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f26, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
la x2, scratch
li x3, 0x21c0a8e7 # load x3 with value 0x21c0a8e7
sw x3, 0(x2) # store 0x21c0a8e7 in memory
flw f31, 0(x2) # load 0x21c0a8e7 from memory into f31
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
fmadd.s f2, f18, f31, f3, dyn # perform operation
fmadd.s f2, f18, f31, f3, rdn # perform operation
fmadd.s f2, f18, f31, f3, rmm # perform operation
fmadd.s f2, f18, f31, f3, rne # perform operation
fmadd.s f2, f18, f31, f3, rtz # perform operation
fmadd.s f2, f18, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f18, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f18, f31, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
la x2, scratch
li x3, 0x45f5a5e9 # load x3 with value 0x45f5a5e9
sw x3, 0(x2) # store 0x45f5a5e9 in memory
flw f25, 0(x2) # load 0x45f5a5e9 from memory into f25
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
fmadd.s f7, f2, f25, f29, dyn # perform operation
fmadd.s f7, f2, f25, f29, rdn # perform operation
fmadd.s f7, f2, f25, f29, rmm # perform operation
fmadd.s f7, f2, f25, f29, rne # perform operation
fmadd.s f7, f2, f25, f29, rtz # perform operation
fmadd.s f7, f2, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f25, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
la x2, scratch
li x3, 0x89fd32d5 # load x3 with value 0x89fd32d5
sw x3, 0(x2) # store 0x89fd32d5 in memory
flw f18, 0(x2) # load 0x89fd32d5 from memory into f18
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
fmadd.s f28, f3, f18, f16, dyn # perform operation
fmadd.s f28, f3, f18, f16, rdn # perform operation
fmadd.s f28, f3, f18, f16, rmm # perform operation
fmadd.s f28, f3, f18, f16, rne # perform operation
fmadd.s f28, f3, f18, f16, rtz # perform operation
fmadd.s f28, f3, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f3, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f3, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f3, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f3, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f3, f18, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
la x2, scratch
li x3, 0x05f78aca # load x3 with value 0x05f78aca
sw x3, 0(x2) # store 0x05f78aca in memory
flw f28, 0(x2) # load 0x05f78aca from memory into f28
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmadd.s f24, f31, f28, f5, dyn # perform operation
fmadd.s f24, f31, f28, f5, rdn # perform operation
fmadd.s f24, f31, f28, f5, rmm # perform operation
fmadd.s f24, f31, f28, f5, rne # perform operation
fmadd.s f24, f31, f28, f5, rtz # perform operation
fmadd.s f24, f31, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f31, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f31, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f31, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f31, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f31, f28, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f20, 0(x2) # load 0xffbfffff from memory into f20
la x2, scratch
li x3, 0x658d75f0 # load x3 with value 0x658d75f0
sw x3, 0(x2) # store 0x658d75f0 in memory
flw f11, 0(x2) # load 0x658d75f0 from memory into f11
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmadd.s f8, f20, f11, f9, dyn # perform operation
fmadd.s f8, f20, f11, f9, rdn # perform operation
fmadd.s f8, f20, f11, f9, rmm # perform operation
fmadd.s f8, f20, f11, f9, rne # perform operation
fmadd.s f8, f20, f11, f9, rtz # perform operation
fmadd.s f8, f20, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f20, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f20, f11, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f5, 0(x2) # load 0xffbfffff from memory into f5
la x2, scratch
li x3, 0x125e949f # load x3 with value 0x125e949f
sw x3, 0(x2) # store 0x125e949f in memory
flw f21, 0(x2) # load 0x125e949f from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f30, f5, f21, f7, dyn # perform operation
fmadd.s f30, f5, f21, f7, rdn # perform operation
fmadd.s f30, f5, f21, f7, rmm # perform operation
fmadd.s f30, f5, f21, f7, rne # perform operation
fmadd.s f30, f5, f21, f7, rtz # perform operation
fmadd.s f30, f5, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f21, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f8, 0(x2) # load 0xffbfffff from memory into f8
la x2, scratch
li x3, 0xc479bf6e # load x3 with value 0xc479bf6e
sw x3, 0(x2) # store 0xc479bf6e in memory
flw f5, 0(x2) # load 0xc479bf6e from memory into f5
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmadd.s f28, f8, f5, f22, dyn # perform operation
fmadd.s f28, f8, f5, f22, rdn # perform operation
fmadd.s f28, f8, f5, f22, rmm # perform operation
fmadd.s f28, f8, f5, f22, rne # perform operation
fmadd.s f28, f8, f5, f22, rtz # perform operation
fmadd.s f28, f8, f5, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f5, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f5, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbf800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f21, 0(x2) # load 0xffbfffff from memory into f21
la x2, scratch
li x3, 0xfed4f360 # load x3 with value 0xfed4f360
sw x3, 0(x2) # store 0xfed4f360 in memory
flw f8, 0(x2) # load 0xfed4f360 from memory into f8
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
fmadd.s f20, f21, f8, f9, dyn # perform operation
fmadd.s f20, f21, f8, f9, rdn # perform operation
fmadd.s f20, f21, f8, f9, rmm # perform operation
fmadd.s f20, f21, f8, f9, rne # perform operation
fmadd.s f20, f21, f8, f9, rtz # perform operation
fmadd.s f20, f21, f8, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f8, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f8, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x3fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f9, 0(x2) # load 0xffbfffff from memory into f9
la x2, scratch
li x3, 0x6ab38c3d # load x3 with value 0x6ab38c3d
sw x3, 0(x2) # store 0x6ab38c3d in memory
flw f10, 0(x2) # load 0x6ab38c3d from memory into f10
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f17, f9, f10, f12, dyn # perform operation
fmadd.s f17, f9, f10, f12, rdn # perform operation
fmadd.s f17, f9, f10, f12, rmm # perform operation
fmadd.s f17, f9, f10, f12, rne # perform operation
fmadd.s f17, f9, f10, f12, rtz # perform operation
fmadd.s f17, f9, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f10, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xbfc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0xf7f8cbd8 # load x3 with value 0xf7f8cbd8
sw x3, 0(x2) # store 0xf7f8cbd8 in memory
flw f22, 0(x2) # load 0xf7f8cbd8 from memory into f22
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fmadd.s f29, f23, f22, f3, dyn # perform operation
fmadd.s f29, f23, f22, f3, rdn # perform operation
fmadd.s f29, f23, f22, f3, rmm # perform operation
fmadd.s f29, f23, f22, f3, rne # perform operation
fmadd.s f29, f23, f22, f3, rtz # perform operation
fmadd.s f29, f23, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f23, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f23, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f23, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f23, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f23, f22, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x40000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x9608e795 # load x3 with value 0x9608e795
sw x3, 0(x2) # store 0x9608e795 in memory
flw f25, 0(x2) # load 0x9608e795 from memory into f25
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmadd.s f14, f3, f25, f26, dyn # perform operation
fmadd.s f14, f3, f25, f26, rdn # perform operation
fmadd.s f14, f3, f25, f26, rmm # perform operation
fmadd.s f14, f3, f25, f26, rne # perform operation
fmadd.s f14, f3, f25, f26, rtz # perform operation
fmadd.s f14, f3, f25, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f25, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f25, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xc0000000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0xa37fa368 # load x3 with value 0xa37fa368
sw x3, 0(x2) # store 0xa37fa368 in memory
flw f9, 0(x2) # load 0xa37fa368 from memory into f9
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f29, f7, f9, f14, dyn # perform operation
fmadd.s f29, f7, f9, f14, rdn # perform operation
fmadd.s f29, f7, f9, f14, rmm # perform operation
fmadd.s f29, f7, f9, f14, rne # perform operation
fmadd.s f29, f7, f9, f14, rtz # perform operation
fmadd.s f29, f7, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f7, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f7, f9, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x77baf67a # load x3 with value 0x77baf67a
sw x3, 0(x2) # store 0x77baf67a in memory
flw f23, 0(x2) # load 0x77baf67a from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
fmadd.s f13, f7, f23, f17, dyn # perform operation
fmadd.s f13, f7, f23, f17, rdn # perform operation
fmadd.s f13, f7, f23, f17, rmm # perform operation
fmadd.s f13, f7, f23, f17, rne # perform operation
fmadd.s f13, f7, f23, f17, rtz # perform operation
fmadd.s f13, f7, f23, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f23, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f23, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f29, 0(x2) # load 0xffbfffff from memory into f29
la x2, scratch
li x3, 0x17569441 # load x3 with value 0x17569441
sw x3, 0(x2) # store 0x17569441 in memory
flw f12, 0(x2) # load 0x17569441 from memory into f12
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
fmadd.s f28, f29, f12, f17, dyn # perform operation
fmadd.s f28, f29, f12, f17, rdn # perform operation
fmadd.s f28, f29, f12, f17, rmm # perform operation
fmadd.s f28, f29, f12, f17, rne # perform operation
fmadd.s f28, f29, f12, f17, rtz # perform operation
fmadd.s f28, f29, f12, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f12, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f12, f17 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f23, 0(x2) # load 0xffbfffff from memory into f23
la x2, scratch
li x3, 0x58f8474a # load x3 with value 0x58f8474a
sw x3, 0(x2) # store 0x58f8474a in memory
flw f6, 0(x2) # load 0x58f8474a from memory into f6
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
fmadd.s f3, f23, f6, f11, dyn # perform operation
fmadd.s f3, f23, f6, f11, rdn # perform operation
fmadd.s f3, f23, f6, f11, rmm # perform operation
fmadd.s f3, f23, f6, f11, rne # perform operation
fmadd.s f3, f23, f6, f11, rtz # perform operation
fmadd.s f3, f23, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f6, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0x3c86a5ae # load x3 with value 0x3c86a5ae
sw x3, 0(x2) # store 0x3c86a5ae in memory
flw f15, 0(x2) # load 0x3c86a5ae from memory into f15
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fmadd.s f7, f17, f15, f29, dyn # perform operation
fmadd.s f7, f17, f15, f29, rdn # perform operation
fmadd.s f7, f17, f15, f29, rmm # perform operation
fmadd.s f7, f17, f15, f29, rne # perform operation
fmadd.s f7, f17, f15, f29, rtz # perform operation
fmadd.s f7, f17, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f17, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f17, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f17, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f17, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f17, f15, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x314bc694 # load x3 with value 0x314bc694
sw x3, 0(x2) # store 0x314bc694 in memory
flw f1, 0(x2) # load 0x314bc694 from memory into f1
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f18, f16, f1, f25, dyn # perform operation
fmadd.s f18, f16, f1, f25, rdn # perform operation
fmadd.s f18, f16, f1, f25, rmm # perform operation
fmadd.s f18, f16, f1, f25, rne # perform operation
fmadd.s f18, f16, f1, f25, rtz # perform operation
fmadd.s f18, f16, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f1, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x807fffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f14, 0(x2) # load 0xffbfffff from memory into f14
la x2, scratch
li x3, 0x8ea1140e # load x3 with value 0x8ea1140e
sw x3, 0(x2) # store 0x8ea1140e in memory
flw f25, 0(x2) # load 0x8ea1140e from memory into f25
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
fmadd.s f5, f14, f25, f7, dyn # perform operation
fmadd.s f5, f14, f25, f7, rdn # perform operation
fmadd.s f5, f14, f25, f7, rmm # perform operation
fmadd.s f5, f14, f25, f7, rne # perform operation
fmadd.s f5, f14, f25, f7, rtz # perform operation
fmadd.s f5, f14, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f25, f7 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f17, 0(x2) # load 0xffbfffff from memory into f17
la x2, scratch
li x3, 0xbfdf2da1 # load x3 with value 0xbfdf2da1
sw x3, 0(x2) # store 0xbfdf2da1 in memory
flw f5, 0(x2) # load 0xbfdf2da1 from memory into f5
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f23, f17, f5, f3, dyn # perform operation
fmadd.s f23, f17, f5, f3, rdn # perform operation
fmadd.s f23, f17, f5, f3, rmm # perform operation
fmadd.s f23, f17, f5, f3, rne # perform operation
fmadd.s f23, f17, f5, f3, rtz # perform operation
fmadd.s f23, f17, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f5, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80400000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x4dc96d63 # load x3 with value 0x4dc96d63
sw x3, 0(x2) # store 0x4dc96d63 in memory
flw f24, 0(x2) # load 0x4dc96d63 from memory into f24
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmadd.s f21, f22, f24, f5, dyn # perform operation
fmadd.s f21, f22, f24, f5, rdn # perform operation
fmadd.s f21, f22, f24, f5, rmm # perform operation
fmadd.s f21, f22, f24, f5, rne # perform operation
fmadd.s f21, f22, f24, f5, rtz # perform operation
fmadd.s f21, f22, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f22, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f22, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f22, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f22, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f22, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x1)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f25, 0(x2) # load 0xffbfffff from memory into f25
la x2, scratch
li x3, 0x6a506e0c # load x3 with value 0x6a506e0c
sw x3, 0(x2) # store 0x6a506e0c in memory
flw f19, 0(x2) # load 0x6a506e0c from memory into f19
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmadd.s f15, f25, f19, f2, dyn # perform operation
fmadd.s f15, f25, f19, f2, rdn # perform operation
fmadd.s f15, f25, f19, f2, rmm # perform operation
fmadd.s f15, f25, f19, f2, rne # perform operation
fmadd.s f15, f25, f19, f2, rtz # perform operation
fmadd.s f15, f25, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f19, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x80000001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f7, 0(x2) # load 0xffbfffff from memory into f7
la x2, scratch
li x3, 0x561c887f # load x3 with value 0x561c887f
sw x3, 0(x2) # store 0x561c887f in memory
flw f21, 0(x2) # load 0x561c887f from memory into f21
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
fmadd.s f25, f7, f21, f22, dyn # perform operation
fmadd.s f25, f7, f21, f22, rdn # perform operation
fmadd.s f25, f7, f21, f22, rmm # perform operation
fmadd.s f25, f7, f21, f22, rne # perform operation
fmadd.s f25, f7, f21, f22, rtz # perform operation
fmadd.s f25, f7, f21, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f21, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f21, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f16, 0(x2) # load 0xffbfffff from memory into f16
la x2, scratch
li x3, 0x89ca05a3 # load x3 with value 0x89ca05a3
sw x3, 0(x2) # store 0x89ca05a3 in memory
flw f2, 0(x2) # load 0x89ca05a3 from memory into f2
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmadd.s f20, f16, f2, f24, dyn # perform operation
fmadd.s f20, f16, f2, f24, rdn # perform operation
fmadd.s f20, f16, f2, f24, rmm # perform operation
fmadd.s f20, f16, f2, f24, rne # perform operation
fmadd.s f20, f16, f2, f24, rtz # perform operation
fmadd.s f20, f16, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f16, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f16, f2, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xff800000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0xdbb09410 # load x3 with value 0xdbb09410
sw x3, 0(x2) # store 0xdbb09410 in memory
flw f11, 0(x2) # load 0xdbb09410 from memory into f11
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f9, f24, f11, f18, dyn # perform operation
fmadd.s f9, f24, f11, f18, rdn # perform operation
fmadd.s f9, f24, f11, f18, rmm # perform operation
fmadd.s f9, f24, f11, f18, rne # perform operation
fmadd.s f9, f24, f11, f18, rtz # perform operation
fmadd.s f9, f24, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f11, f18 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fc00000)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x5ba2389f # load x3 with value 0x5ba2389f
sw x3, 0(x2) # store 0x5ba2389f in memory
flw f18, 0(x2) # load 0x5ba2389f from memory into f18
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f23, f3, f18, f2, dyn # perform operation
fmadd.s f23, f3, f18, f2, rdn # perform operation
fmadd.s f23, f3, f18, f2, rmm # perform operation
fmadd.s f23, f3, f18, f2, rne # perform operation
fmadd.s f23, f3, f18, f2, rtz # perform operation
fmadd.s f23, f3, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f18, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f24, 0(x2) # load 0xffbfffff from memory into f24
la x2, scratch
li x3, 0x68d16e6f # load x3 with value 0x68d16e6f
sw x3, 0(x2) # store 0x68d16e6f in memory
flw f27, 0(x2) # load 0x68d16e6f from memory into f27
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmadd.s f8, f24, f27, f9, dyn # perform operation
fmadd.s f8, f24, f27, f9, rdn # perform operation
fmadd.s f8, f24, f27, f9, rmm # perform operation
fmadd.s f8, f24, f27, f9, rne # perform operation
fmadd.s f8, f24, f27, f9, rtz # perform operation
fmadd.s f8, f24, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f27, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffffffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f19, 0(x2) # load 0xffbfffff from memory into f19
la x2, scratch
li x3, 0xb27b9e80 # load x3 with value 0xb27b9e80
sw x3, 0(x2) # store 0xb27b9e80 in memory
flw f26, 0(x2) # load 0xb27b9e80 from memory into f26
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f27, 0(x2) # load 0xffffffff from memory into f27
fmadd.s f25, f19, f26, f27, dyn # perform operation
fmadd.s f25, f19, f26, f27, rdn # perform operation
fmadd.s f25, f19, f26, f27, rmm # perform operation
fmadd.s f25, f19, f26, f27, rne # perform operation
fmadd.s f25, f19, f26, f27, rtz # perform operation
fmadd.s f25, f19, f26, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f19, f26, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f19, f26, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7f800001)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f18, 0(x2) # load 0xffbfffff from memory into f18
la x2, scratch
li x3, 0x68837df8 # load x3 with value 0x68837df8
sw x3, 0(x2) # store 0x68837df8 in memory
flw f8, 0(x2) # load 0x68837df8 from memory into f8
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmadd.s f12, f18, f8, f30, dyn # perform operation
fmadd.s f12, f18, f8, f30, rdn # perform operation
fmadd.s f12, f18, f8, f30, rmm # perform operation
fmadd.s f12, f18, f8, f30, rne # perform operation
fmadd.s f12, f18, f8, f30, rtz # perform operation
fmadd.s f12, f18, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f8, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f2, 0(x2) # load 0xffbfffff from memory into f2
la x2, scratch
li x3, 0x5d261117 # load x3 with value 0x5d261117
sw x3, 0(x2) # store 0x5d261117 in memory
flw f3, 0(x2) # load 0x5d261117 from memory into f3
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f11, 0(x2) # load 0x7fbfffff from memory into f11
fmadd.s f27, f2, f3, f11, dyn # perform operation
fmadd.s f27, f2, f3, f11, rdn # perform operation
fmadd.s f27, f2, f3, f11, rmm # perform operation
fmadd.s f27, f2, f3, f11, rne # perform operation
fmadd.s f27, f2, f3, f11, rtz # perform operation
fmadd.s f27, f2, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f3, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0xffbfffff)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f3, 0(x2) # load 0xffbfffff from memory into f3
la x2, scratch
li x3, 0x81967124 # load x3 with value 0x81967124
sw x3, 0(x2) # store 0x81967124 in memory
flw f6, 0(x2) # load 0x81967124 from memory into f6
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f30, 0(x2) # load 0xffbfffff from memory into f30
fmadd.s f15, f3, f6, f30, dyn # perform operation
fmadd.s f15, f3, f6, f30, rdn # perform operation
fmadd.s f15, f3, f6, f30, rmm # perform operation
fmadd.s f15, f3, f6, f30, rne # perform operation
fmadd.s f15, f3, f6, f30, rtz # perform operation
fmadd.s f15, f3, f6, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f3, f6, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f3, f6, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f3, f6, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f3, f6, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f3, f6, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f22, 0(x2) # load 0xffbfffff from memory into f22
la x2, scratch
li x3, 0x5e33ef8d # load x3 with value 0x5e33ef8d
sw x3, 0(x2) # store 0x5e33ef8d in memory
flw f20, 0(x2) # load 0x5e33ef8d from memory into f20
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
fmadd.s f16, f22, f20, f25, dyn # perform operation
fmadd.s f16, f22, f20, f25, rdn # perform operation
fmadd.s f16, f22, f20, f25, rmm # perform operation
fmadd.s f16, f22, f20, f25, rne # perform operation
fmadd.s f16, f22, f20, f25, rtz # perform operation
fmadd.s f16, f22, f20, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f20, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f20, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f20, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f20, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f20, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xffbfffff fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f13, 0(x2) # load 0xffbfffff from memory into f13
la x2, scratch
li x3, 0xff9bbcf7 # load x3 with value 0xff9bbcf7
sw x3, 0(x2) # store 0xff9bbcf7 in memory
flw f8, 0(x2) # load 0xff9bbcf7 from memory into f8
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmadd.s f23, f13, f8, f27, dyn # perform operation
fmadd.s f23, f13, f8, f27, rdn # perform operation
fmadd.s f23, f13, f8, f27, rmm # perform operation
fmadd.s f23, f13, f8, f27, rne # perform operation
fmadd.s f23, f13, f8, f27, rtz # perform operation
fmadd.s f23, f13, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f8, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
la x2, scratch
li x3, 0xdd0ad406 # load x3 with value 0xdd0ad406
sw x3, 0(x2) # store 0xdd0ad406 in memory
flw f24, 0(x2) # load 0xdd0ad406 from memory into f24
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
fmadd.s f6, f29, f24, f20, dyn # perform operation
fmadd.s f6, f29, f24, f20, rdn # perform operation
fmadd.s f6, f29, f24, f20, rmm # perform operation
fmadd.s f6, f29, f24, f20, rne # perform operation
fmadd.s f6, f29, f24, f20, rtz # perform operation
fmadd.s f6, f29, f24, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f24, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f24, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x5b9872b2 # load x3 with value 0x5b9872b2
sw x3, 0(x2) # store 0x5b9872b2 in memory
flw f5, 0(x2) # load 0x5b9872b2 from memory into f5
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmadd.s f18, f28, f5, f9, dyn # perform operation
fmadd.s f18, f28, f5, f9, rdn # perform operation
fmadd.s f18, f28, f5, f9, rmm # perform operation
fmadd.s f18, f28, f5, f9, rne # perform operation
fmadd.s f18, f28, f5, f9, rtz # perform operation
fmadd.s f18, f28, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f5, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
la x2, scratch
li x3, 0x9d5e6a69 # load x3 with value 0x9d5e6a69
sw x3, 0(x2) # store 0x9d5e6a69 in memory
flw f8, 0(x2) # load 0x9d5e6a69 from memory into f8
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f14, f1, f8, f3, dyn # perform operation
fmadd.s f14, f1, f8, f3, rdn # perform operation
fmadd.s f14, f1, f8, f3, rmm # perform operation
fmadd.s f14, f1, f8, f3, rne # perform operation
fmadd.s f14, f1, f8, f3, rtz # perform operation
fmadd.s f14, f1, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f8, f3 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xf7032d27 # load x3 with value 0xf7032d27
sw x3, 0(x2) # store 0xf7032d27 in memory
flw f23, 0(x2) # load 0xf7032d27 from memory into f23
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f28, f8, f23, f15, dyn # perform operation
fmadd.s f28, f8, f23, f15, rdn # perform operation
fmadd.s f28, f8, f23, f15, rmm # perform operation
fmadd.s f28, f8, f23, f15, rne # perform operation
fmadd.s f28, f8, f23, f15, rtz # perform operation
fmadd.s f28, f8, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f23, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xe1744607 # load x3 with value 0xe1744607
sw x3, 0(x2) # store 0xe1744607 in memory
flw f30, 0(x2) # load 0xe1744607 from memory into f30
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmadd.s f15, f12, f30, f23, dyn # perform operation
fmadd.s f15, f12, f30, f23, rdn # perform operation
fmadd.s f15, f12, f30, f23, rmm # perform operation
fmadd.s f15, f12, f30, f23, rne # perform operation
fmadd.s f15, f12, f30, f23, rtz # perform operation
fmadd.s f15, f12, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f12, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f12, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x1f20fddc # load x3 with value 0x1f20fddc
sw x3, 0(x2) # store 0x1f20fddc in memory
flw f27, 0(x2) # load 0x1f20fddc from memory into f27
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f19, f5, f27, f6, dyn # perform operation
fmadd.s f19, f5, f27, f6, rdn # perform operation
fmadd.s f19, f5, f27, f6, rmm # perform operation
fmadd.s f19, f5, f27, f6, rne # perform operation
fmadd.s f19, f5, f27, f6, rtz # perform operation
fmadd.s f19, f5, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f5, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f5, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0x52d83861 # load x3 with value 0x52d83861
sw x3, 0(x2) # store 0x52d83861 in memory
flw f1, 0(x2) # load 0x52d83861 from memory into f1
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmadd.s f7, f26, f1, f16, dyn # perform operation
fmadd.s f7, f26, f1, f16, rdn # perform operation
fmadd.s f7, f26, f1, f16, rmm # perform operation
fmadd.s f7, f26, f1, f16, rne # perform operation
fmadd.s f7, f26, f1, f16, rtz # perform operation
fmadd.s f7, f26, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f1, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0x8eed31f3 # load x3 with value 0x8eed31f3
sw x3, 0(x2) # store 0x8eed31f3 in memory
flw f28, 0(x2) # load 0x8eed31f3 from memory into f28
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f5, f14, f28, f29, dyn # perform operation
fmadd.s f5, f14, f28, f29, rdn # perform operation
fmadd.s f5, f14, f28, f29, rmm # perform operation
fmadd.s f5, f14, f28, f29, rne # perform operation
fmadd.s f5, f14, f28, f29, rtz # perform operation
fmadd.s f5, f14, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f28, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xf78a2b59 # load x3 with value 0xf78a2b59
sw x3, 0(x2) # store 0xf78a2b59 in memory
flw f30, 0(x2) # load 0xf78a2b59 from memory into f30
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f23, 0(x2) # load 0x00800000 from memory into f23
fmadd.s f18, f20, f30, f23, dyn # perform operation
fmadd.s f18, f20, f30, f23, rdn # perform operation
fmadd.s f18, f20, f30, f23, rmm # perform operation
fmadd.s f18, f20, f30, f23, rne # perform operation
fmadd.s f18, f20, f30, f23, rtz # perform operation
fmadd.s f18, f20, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f30, f23 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xde93e409 # load x3 with value 0xde93e409
sw x3, 0(x2) # store 0xde93e409 in memory
flw f3, 0(x2) # load 0xde93e409 from memory into f3
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmadd.s f9, f20, f3, f26, dyn # perform operation
fmadd.s f9, f20, f3, f26, rdn # perform operation
fmadd.s f9, f20, f3, f26, rmm # perform operation
fmadd.s f9, f20, f3, f26, rne # perform operation
fmadd.s f9, f20, f3, f26, rtz # perform operation
fmadd.s f9, f20, f3, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f3, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f3, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0xda16abb0 # load x3 with value 0xda16abb0
sw x3, 0(x2) # store 0xda16abb0 in memory
flw f31, 0(x2) # load 0xda16abb0 from memory into f31
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
fmadd.s f25, f8, f31, f24, dyn # perform operation
fmadd.s f25, f8, f31, f24, rdn # perform operation
fmadd.s f25, f8, f31, f24, rmm # perform operation
fmadd.s f25, f8, f31, f24, rne # perform operation
fmadd.s f25, f8, f31, f24, rtz # perform operation
fmadd.s f25, f8, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f8, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f8, f31, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
la x2, scratch
li x3, 0xd6d88b50 # load x3 with value 0xd6d88b50
sw x3, 0(x2) # store 0xd6d88b50 in memory
flw f1, 0(x2) # load 0xd6d88b50 from memory into f1
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmadd.s f5, f14, f1, f8, dyn # perform operation
fmadd.s f5, f14, f1, f8, rdn # perform operation
fmadd.s f5, f14, f1, f8, rmm # perform operation
fmadd.s f5, f14, f1, f8, rne # perform operation
fmadd.s f5, f14, f1, f8, rtz # perform operation
fmadd.s f5, f14, f1, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f14, f1, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f14, f1, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
la x2, scratch
li x3, 0x1fd6f06f # load x3 with value 0x1fd6f06f
sw x3, 0(x2) # store 0x1fd6f06f in memory
flw f16, 0(x2) # load 0x1fd6f06f from memory into f16
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f31, f10, f16, f22, dyn # perform operation
fmadd.s f31, f10, f16, f22, rdn # perform operation
fmadd.s f31, f10, f16, f22, rmm # perform operation
fmadd.s f31, f10, f16, f22, rne # perform operation
fmadd.s f31, f10, f16, f22, rtz # perform operation
fmadd.s f31, f10, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f10, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f10, f16, f22 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x1c14d31d # load x3 with value 0x1c14d31d
sw x3, 0(x2) # store 0x1c14d31d in memory
flw f24, 0(x2) # load 0x1c14d31d from memory into f24
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f15, f11, f24, f27, dyn # perform operation
fmadd.s f15, f11, f24, f27, rdn # perform operation
fmadd.s f15, f11, f24, f27, rmm # perform operation
fmadd.s f15, f11, f24, f27, rne # perform operation
fmadd.s f15, f11, f24, f27, rtz # perform operation
fmadd.s f15, f11, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f11, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f11, f24, f27 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
la x2, scratch
li x3, 0x0c03bd63 # load x3 with value 0x0c03bd63
sw x3, 0(x2) # store 0x0c03bd63 in memory
flw f13, 0(x2) # load 0x0c03bd63 from memory into f13
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f14, f17, f13, f8, dyn # perform operation
fmadd.s f14, f17, f13, f8, rdn # perform operation
fmadd.s f14, f17, f13, f8, rmm # perform operation
fmadd.s f14, f17, f13, f8, rne # perform operation
fmadd.s f14, f17, f13, f8, rtz # perform operation
fmadd.s f14, f17, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f13, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
la x2, scratch
li x3, 0xec697db9 # load x3 with value 0xec697db9
sw x3, 0(x2) # store 0xec697db9 in memory
flw f13, 0(x2) # load 0xec697db9 from memory into f13
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmadd.s f10, f20, f13, f9, dyn # perform operation
fmadd.s f10, f20, f13, f9, rdn # perform operation
fmadd.s f10, f20, f13, f9, rmm # perform operation
fmadd.s f10, f20, f13, f9, rne # perform operation
fmadd.s f10, f20, f13, f9, rtz # perform operation
fmadd.s f10, f20, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f8, 0(x2) # load 0x7ef8654f from memory into f8
la x2, scratch
li x3, 0x0d038ded # load x3 with value 0x0d038ded
sw x3, 0(x2) # store 0x0d038ded in memory
flw f31, 0(x2) # load 0x0d038ded from memory into f31
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
fmadd.s f7, f8, f31, f16, dyn # perform operation
fmadd.s f7, f8, f31, f16, rdn # perform operation
fmadd.s f7, f8, f31, f16, rmm # perform operation
fmadd.s f7, f8, f31, f16, rne # perform operation
fmadd.s f7, f8, f31, f16, rtz # perform operation
fmadd.s f7, f8, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f31, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
la x2, scratch
li x3, 0xcf624168 # load x3 with value 0xcf624168
sw x3, 0(x2) # store 0xcf624168 in memory
flw f5, 0(x2) # load 0xcf624168 from memory into f5
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f17, f13, f5, f16, dyn # perform operation
fmadd.s f17, f13, f5, f16, rdn # perform operation
fmadd.s f17, f13, f5, f16, rmm # perform operation
fmadd.s f17, f13, f5, f16, rne # perform operation
fmadd.s f17, f13, f5, f16, rtz # perform operation
fmadd.s f17, f13, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f5, f16 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
la x2, scratch
li x3, 0x73fb3a57 # load x3 with value 0x73fb3a57
sw x3, 0(x2) # store 0x73fb3a57 in memory
flw f21, 0(x2) # load 0x73fb3a57 from memory into f21
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmadd.s f19, f9, f21, f24, dyn # perform operation
fmadd.s f19, f9, f21, f24, rdn # perform operation
fmadd.s f19, f9, f21, f24, rmm # perform operation
fmadd.s f19, f9, f21, f24, rne # perform operation
fmadd.s f19, f9, f21, f24, rtz # perform operation
fmadd.s f19, f9, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f21, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
la x2, scratch
li x3, 0x14ec2d14 # load x3 with value 0x14ec2d14
sw x3, 0(x2) # store 0x14ec2d14 in memory
flw f18, 0(x2) # load 0x14ec2d14 from memory into f18
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmadd.s f28, f5, f18, f14, dyn # perform operation
fmadd.s f28, f5, f18, f14, rdn # perform operation
fmadd.s f28, f5, f18, f14, rmm # perform operation
fmadd.s f28, f5, f18, f14, rne # perform operation
fmadd.s f28, f5, f18, f14, rtz # perform operation
fmadd.s f28, f5, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f18, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
la x2, scratch
li x3, 0x82ddda4b # load x3 with value 0x82ddda4b
sw x3, 0(x2) # store 0x82ddda4b in memory
flw f17, 0(x2) # load 0x82ddda4b from memory into f17
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f13, f31, f17, f2, dyn # perform operation
fmadd.s f13, f31, f17, f2, rdn # perform operation
fmadd.s f13, f31, f17, f2, rmm # perform operation
fmadd.s f13, f31, f17, f2, rne # perform operation
fmadd.s f13, f31, f17, f2, rtz # perform operation
fmadd.s f13, f31, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f31, f17, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0xdc2492b6 # load x3 with value 0xdc2492b6
sw x3, 0(x2) # store 0xdc2492b6 in memory
flw f7, 0(x2) # load 0xdc2492b6 from memory into f7
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
fmadd.s f23, f11, f7, f30, dyn # perform operation
fmadd.s f23, f11, f7, f30, rdn # perform operation
fmadd.s f23, f11, f7, f30, rmm # perform operation
fmadd.s f23, f11, f7, f30, rne # perform operation
fmadd.s f23, f11, f7, f30, rtz # perform operation
fmadd.s f23, f11, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f7, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffffffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
la x2, scratch
li x3, 0x1cfe8164 # load x3 with value 0x1cfe8164
sw x3, 0(x2) # store 0x1cfe8164 in memory
flw f12, 0(x2) # load 0x1cfe8164 from memory into f12
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f8, 0(x2) # load 0xffffffff from memory into f8
fmadd.s f22, f30, f12, f8, dyn # perform operation
fmadd.s f22, f30, f12, f8, rdn # perform operation
fmadd.s f22, f30, f12, f8, rmm # perform operation
fmadd.s f22, f30, f12, f8, rne # perform operation
fmadd.s f22, f30, f12, f8, rtz # perform operation
fmadd.s f22, f30, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f12, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
la x2, scratch
li x3, 0x56ba1294 # load x3 with value 0x56ba1294
sw x3, 0(x2) # store 0x56ba1294 in memory
flw f22, 0(x2) # load 0x56ba1294 from memory into f22
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
fmadd.s f23, f11, f22, f29, dyn # perform operation
fmadd.s f23, f11, f22, f29, rdn # perform operation
fmadd.s f23, f11, f22, f29, rmm # perform operation
fmadd.s f23, f11, f22, f29, rne # perform operation
fmadd.s f23, f11, f22, f29, rtz # perform operation
fmadd.s f23, f11, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f11, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f11, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f11, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f11, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f11, f22, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
la x2, scratch
li x3, 0x448165dc # load x3 with value 0x448165dc
sw x3, 0(x2) # store 0x448165dc in memory
flw f14, 0(x2) # load 0x448165dc from memory into f14
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmadd.s f1, f28, f14, f12, dyn # perform operation
fmadd.s f1, f28, f14, f12, rdn # perform operation
fmadd.s f1, f28, f14, f12, rmm # perform operation
fmadd.s f1, f28, f14, f12, rne # perform operation
fmadd.s f1, f28, f14, f12, rtz # perform operation
fmadd.s f1, f28, f14, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f14, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f14, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f14, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f14, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f14, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f12, 0(x2) # load 0x7ef8654f from memory into f12
la x2, scratch
li x3, 0xc3787488 # load x3 with value 0xc3787488
sw x3, 0(x2) # store 0xc3787488 in memory
flw f27, 0(x2) # load 0xc3787488 from memory into f27
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f6, 0(x2) # load 0xffbfffff from memory into f6
fmadd.s f28, f12, f27, f6, dyn # perform operation
fmadd.s f28, f12, f27, f6, rdn # perform operation
fmadd.s f28, f12, f27, f6, rmm # perform operation
fmadd.s f28, f12, f27, f6, rne # perform operation
fmadd.s f28, f12, f27, f6, rtz # perform operation
fmadd.s f28, f12, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f12, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f12, f27, f6 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
la x2, scratch
li x3, 0xe4dd1c30 # load x3 with value 0xe4dd1c30
sw x3, 0(x2) # store 0xe4dd1c30 in memory
flw f2, 0(x2) # load 0xe4dd1c30 from memory into f2
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmadd.s f27, f22, f2, f29, dyn # perform operation
fmadd.s f27, f22, f2, f29, rdn # perform operation
fmadd.s f27, f22, f2, f29, rmm # perform operation
fmadd.s f27, f22, f2, f29, rne # perform operation
fmadd.s f27, f22, f2, f29, rtz # perform operation
fmadd.s f27, f22, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f22, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f22, f2, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
la x2, scratch
li x3, 0xa77b9310 # load x3 with value 0xa77b9310
sw x3, 0(x2) # store 0xa77b9310 in memory
flw f6, 0(x2) # load 0xa77b9310 from memory into f6
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f1, f26, f6, f20, dyn # perform operation
fmadd.s f1, f26, f6, f20, rdn # perform operation
fmadd.s f1, f26, f6, f20, rmm # perform operation
fmadd.s f1, f26, f6, f20, rne # perform operation
fmadd.s f1, f26, f6, f20, rtz # perform operation
fmadd.s f1, f26, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f26, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f26, f6, f20 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
la x2, scratch
li x3, 0xca035dc2 # load x3 with value 0xca035dc2
sw x3, 0(x2) # store 0xca035dc2 in memory
flw f14, 0(x2) # load 0xca035dc2 from memory into f14
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
fmadd.s f17, f21, f14, f8, dyn # perform operation
fmadd.s f17, f21, f14, f8, rdn # perform operation
fmadd.s f17, f21, f14, f8, rmm # perform operation
fmadd.s f17, f21, f14, f8, rne # perform operation
fmadd.s f17, f21, f14, f8, rtz # perform operation
fmadd.s f17, f21, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f14, f8 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
la x2, scratch
li x3, 0x23a5c760 # load x3 with value 0x23a5c760
sw x3, 0(x2) # store 0x23a5c760 in memory
flw f21, 0(x2) # load 0x23a5c760 from memory into f21
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
fmadd.s f27, f9, f21, f31, dyn # perform operation
fmadd.s f27, f9, f21, f31, rdn # perform operation
fmadd.s f27, f9, f21, f31, rmm # perform operation
fmadd.s f27, f9, f21, f31, rne # perform operation
fmadd.s f27, f9, f21, f31, rtz # perform operation
fmadd.s f27, f9, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f21, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0x8b8fbed6 # load x3 with value 0x8b8fbed6
sw x3, 0(x2) # store 0x8b8fbed6 in memory
flw f29, 0(x2) # load 0x8b8fbed6 from memory into f29
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
fmadd.s f19, f5, f29, f15, dyn # perform operation
fmadd.s f19, f5, f29, f15, rdn # perform operation
fmadd.s f19, f5, f29, f15, rmm # perform operation
fmadd.s f19, f5, f29, f15, rne # perform operation
fmadd.s f19, f5, f29, f15, rtz # perform operation
fmadd.s f19, f5, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f5, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f5, f29, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
la x2, scratch
li x3, 0x969dc6ff # load x3 with value 0x969dc6ff
sw x3, 0(x2) # store 0x969dc6ff in memory
flw f1, 0(x2) # load 0x969dc6ff from memory into f1
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmadd.s f25, f22, f1, f12, dyn # perform operation
fmadd.s f25, f22, f1, f12, rdn # perform operation
fmadd.s f25, f22, f1, f12, rmm # perform operation
fmadd.s f25, f22, f1, f12, rne # perform operation
fmadd.s f25, f22, f1, f12, rtz # perform operation
fmadd.s f25, f22, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f1, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0x7d466142 # load x3 with value 0x7d466142
sw x3, 0(x2) # store 0x7d466142 in memory
flw f11, 0(x2) # load 0x7d466142 from memory into f11
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
fmadd.s f18, f17, f11, f12, dyn # perform operation
fmadd.s f18, f17, f11, f12, rdn # perform operation
fmadd.s f18, f17, f11, f12, rmm # perform operation
fmadd.s f18, f17, f11, f12, rne # perform operation
fmadd.s f18, f17, f11, f12, rtz # perform operation
fmadd.s f18, f17, f11, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f11, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f11, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
la x2, scratch
li x3, 0xa2390ce8 # load x3 with value 0xa2390ce8
sw x3, 0(x2) # store 0xa2390ce8 in memory
flw f25, 0(x2) # load 0xa2390ce8 from memory into f25
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmadd.s f3, f27, f25, f24, dyn # perform operation
fmadd.s f3, f27, f25, f24, rdn # perform operation
fmadd.s f3, f27, f25, f24, rmm # perform operation
fmadd.s f3, f27, f25, f24, rne # perform operation
fmadd.s f3, f27, f25, f24, rtz # perform operation
fmadd.s f3, f27, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f27, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f27, f25, f24 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
la x2, scratch
li x3, 0x92024878 # load x3 with value 0x92024878
sw x3, 0(x2) # store 0x92024878 in memory
flw f19, 0(x2) # load 0x92024878 from memory into f19
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmadd.s f21, f16, f19, f1, dyn # perform operation
fmadd.s f21, f16, f19, f1, rdn # perform operation
fmadd.s f21, f16, f19, f1, rmm # perform operation
fmadd.s f21, f16, f19, f1, rne # perform operation
fmadd.s f21, f16, f19, f1, rtz # perform operation
fmadd.s f21, f16, f19, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f16, f19, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f16, f19, f1 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x9b89c68f # load x3 with value 0x9b89c68f
sw x3, 0(x2) # store 0x9b89c68f in memory
flw f23, 0(x2) # load 0x9b89c68f from memory into f23
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
fmadd.s f12, f18, f23, f28, dyn # perform operation
fmadd.s f12, f18, f23, f28, rdn # perform operation
fmadd.s f12, f18, f23, f28, rmm # perform operation
fmadd.s f12, f18, f23, f28, rne # perform operation
fmadd.s f12, f18, f23, f28, rtz # perform operation
fmadd.s f12, f18, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f23, f28 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xf52c7de7 # load x3 with value 0xf52c7de7
sw x3, 0(x2) # store 0xf52c7de7 in memory
flw f23, 0(x2) # load 0xf52c7de7 from memory into f23
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f1, f5, f23, f12, dyn # perform operation
fmadd.s f1, f5, f23, f12, rdn # perform operation
fmadd.s f1, f5, f23, f12, rmm # perform operation
fmadd.s f1, f5, f23, f12, rne # perform operation
fmadd.s f1, f5, f23, f12, rtz # perform operation
fmadd.s f1, f5, f23, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f23, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f23, f12 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xbdd3dc58 # load x3 with value 0xbdd3dc58
sw x3, 0(x2) # store 0xbdd3dc58 in memory
flw f26, 0(x2) # load 0xbdd3dc58 from memory into f26
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f9, f19, f26, f29, dyn # perform operation
fmadd.s f9, f19, f26, f29, rdn # perform operation
fmadd.s f9, f19, f26, f29, rmm # perform operation
fmadd.s f9, f19, f26, f29, rne # perform operation
fmadd.s f9, f19, f26, f29, rtz # perform operation
fmadd.s f9, f19, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f19, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f19, f26, f29 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
la x2, scratch
li x3, 0x3867db0c # load x3 with value 0x3867db0c
sw x3, 0(x2) # store 0x3867db0c in memory
flw f16, 0(x2) # load 0x3867db0c from memory into f16
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f11, f24, f16, f14, dyn # perform operation
fmadd.s f11, f24, f16, f14, rdn # perform operation
fmadd.s f11, f24, f16, f14, rmm # perform operation
fmadd.s f11, f24, f16, f14, rne # perform operation
fmadd.s f11, f24, f16, f14, rtz # perform operation
fmadd.s f11, f24, f16, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f16, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f16, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
la x2, scratch
li x3, 0xa2398ba5 # load x3 with value 0xa2398ba5
sw x3, 0(x2) # store 0xa2398ba5 in memory
flw f10, 0(x2) # load 0xa2398ba5 from memory into f10
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmadd.s f1, f5, f10, f11, dyn # perform operation
fmadd.s f1, f5, f10, f11, rdn # perform operation
fmadd.s f1, f5, f10, f11, rmm # perform operation
fmadd.s f1, f5, f10, f11, rne # perform operation
fmadd.s f1, f5, f10, f11, rtz # perform operation
fmadd.s f1, f5, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f10, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
la x2, scratch
li x3, 0xfe83dab3 # load x3 with value 0xfe83dab3
sw x3, 0(x2) # store 0xfe83dab3 in memory
flw f12, 0(x2) # load 0xfe83dab3 from memory into f12
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmadd.s f9, f23, f12, f11, dyn # perform operation
fmadd.s f9, f23, f12, f11, rdn # perform operation
fmadd.s f9, f23, f12, f11, rmm # perform operation
fmadd.s f9, f23, f12, f11, rne # perform operation
fmadd.s f9, f23, f12, f11, rtz # perform operation
fmadd.s f9, f23, f12, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f12, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f12, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f12, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f12, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f12, f11 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
la x2, scratch
li x3, 0xb10ef7d8 # load x3 with value 0xb10ef7d8
sw x3, 0(x2) # store 0xb10ef7d8 in memory
flw f19, 0(x2) # load 0xb10ef7d8 from memory into f19
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f28, f15, f19, f14, dyn # perform operation
fmadd.s f28, f15, f19, f14, rdn # perform operation
fmadd.s f28, f15, f19, f14, rmm # perform operation
fmadd.s f28, f15, f19, f14, rne # perform operation
fmadd.s f28, f15, f19, f14, rtz # perform operation
fmadd.s f28, f15, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f19, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
la x2, scratch
li x3, 0xc1226c5a # load x3 with value 0xc1226c5a
sw x3, 0(x2) # store 0xc1226c5a in memory
flw f28, 0(x2) # load 0xc1226c5a from memory into f28
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
fmadd.s f2, f17, f28, f13, dyn # perform operation
fmadd.s f2, f17, f28, f13, rdn # perform operation
fmadd.s f2, f17, f28, f13, rmm # perform operation
fmadd.s f2, f17, f28, f13, rne # perform operation
fmadd.s f2, f17, f28, f13, rtz # perform operation
fmadd.s f2, f17, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f28, f13 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
la x2, scratch
li x3, 0x8dd690bd # load x3 with value 0x8dd690bd
sw x3, 0(x2) # store 0x8dd690bd in memory
flw f31, 0(x2) # load 0x8dd690bd from memory into f31
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f27, f30, f31, f2, dyn # perform operation
fmadd.s f27, f30, f31, f2, rdn # perform operation
fmadd.s f27, f30, f31, f2, rmm # perform operation
fmadd.s f27, f30, f31, f2, rne # perform operation
fmadd.s f27, f30, f31, f2, rtz # perform operation
fmadd.s f27, f30, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f31, f2 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
la x2, scratch
li x3, 0xd816a253 # load x3 with value 0xd816a253
sw x3, 0(x2) # store 0xd816a253 in memory
flw f28, 0(x2) # load 0xd816a253 from memory into f28
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
fmadd.s f22, f13, f28, f15, dyn # perform operation
fmadd.s f22, f13, f28, f15, rdn # perform operation
fmadd.s f22, f13, f28, f15, rmm # perform operation
fmadd.s f22, f13, f28, f15, rne # perform operation
fmadd.s f22, f13, f28, f15, rtz # perform operation
fmadd.s f22, f13, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f13, f28, f15 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
la x2, scratch
li x3, 0x0f08d4a6 # load x3 with value 0x0f08d4a6
sw x3, 0(x2) # store 0x0f08d4a6 in memory
flw f17, 0(x2) # load 0x0f08d4a6 from memory into f17
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f25, f18, f17, f21, dyn # perform operation
fmadd.s f25, f18, f17, f21, rdn # perform operation
fmadd.s f25, f18, f17, f21, rmm # perform operation
fmadd.s f25, f18, f17, f21, rne # perform operation
fmadd.s f25, f18, f17, f21, rtz # perform operation
fmadd.s f25, f18, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f18, f17, f21 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
la x2, scratch
li x3, 0xbfc0a34f # load x3 with value 0xbfc0a34f
sw x3, 0(x2) # store 0xbfc0a34f in memory
flw f16, 0(x2) # load 0xbfc0a34f from memory into f16
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f24, f6, f16, f26, dyn # perform operation
fmadd.s f24, f6, f16, f26, rdn # perform operation
fmadd.s f24, f6, f16, f26, rmm # perform operation
fmadd.s f24, f6, f16, f26, rne # perform operation
fmadd.s f24, f6, f16, f26, rtz # perform operation
fmadd.s f24, f6, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x9f5d04d3 # load x3 with value 0x9f5d04d3
sw x3, 0(x2) # store 0x9f5d04d3 in memory
flw f16, 0(x2) # load 0x9f5d04d3 from memory into f16
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f27, f29, f16, f26, dyn # perform operation
fmadd.s f27, f29, f16, f26, rdn # perform operation
fmadd.s f27, f29, f16, f26, rmm # perform operation
fmadd.s f27, f29, f16, f26, rne # perform operation
fmadd.s f27, f29, f16, f26, rtz # perform operation
fmadd.s f27, f29, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f29, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f29, f16, f26 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0xb792c910 # load x3 with value 0xb792c910
sw x3, 0(x2) # store 0xb792c910 in memory
flw f13, 0(x2) # load 0xb792c910 from memory into f13
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
fmadd.s f6, f19, f13, f9, dyn # perform operation
fmadd.s f6, f19, f13, f9, rdn # perform operation
fmadd.s f6, f19, f13, f9, rmm # perform operation
fmadd.s f6, f19, f13, f9, rne # perform operation
fmadd.s f6, f19, f13, f9, rtz # perform operation
fmadd.s f6, f19, f13, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f13, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f13, f9 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
la x2, scratch
li x3, 0x2df22186 # load x3 with value 0x2df22186
sw x3, 0(x2) # store 0x2df22186 in memory
flw f24, 0(x2) # load 0x2df22186 from memory into f24
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmadd.s f17, f29, f24, f5, dyn # perform operation
fmadd.s f17, f29, f24, f5, rdn # perform operation
fmadd.s f17, f29, f24, f5, rmm # perform operation
fmadd.s f17, f29, f24, f5, rne # perform operation
fmadd.s f17, f29, f24, f5, rtz # perform operation
fmadd.s f17, f29, f24, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f24, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f24, f5 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffffffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
la x2, scratch
li x3, 0x96fd9acf # load x3 with value 0x96fd9acf
sw x3, 0(x2) # store 0x96fd9acf in memory
flw f24, 0(x2) # load 0x96fd9acf from memory into f24
la x2, scratch
li x3, 0xffffffff # load x3 with value 0xffffffff
sw x3, 0(x2) # store 0xffffffff in memory
flw f14, 0(x2) # load 0xffffffff from memory into f14
fmadd.s f16, f31, f24, f14, dyn # perform operation
fmadd.s f16, f31, f24, f14, rdn # perform operation
fmadd.s f16, f31, f24, f14, rmm # perform operation
fmadd.s f16, f31, f24, f14, rne # perform operation
fmadd.s f16, f31, f24, f14, rtz # perform operation
fmadd.s f16, f31, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f24, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x419af941 # load x3 with value 0x419af941
sw x3, 0(x2) # store 0x419af941 in memory
flw f26, 0(x2) # load 0x419af941 from memory into f26
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmadd.s f28, f19, f26, f14, dyn # perform operation
fmadd.s f28, f19, f26, f14, rdn # perform operation
fmadd.s f28, f19, f26, f14, rmm # perform operation
fmadd.s f28, f19, f26, f14, rne # perform operation
fmadd.s f28, f19, f26, f14, rtz # perform operation
fmadd.s f28, f19, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f26, f14 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0x8c6eaf1c # load x3 with value 0x8c6eaf1c
sw x3, 0(x2) # store 0x8c6eaf1c in memory
flw f26, 0(x2) # load 0x8c6eaf1c from memory into f26
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f18, f20, f26, f25, dyn # perform operation
fmadd.s f18, f20, f26, f25, rdn # perform operation
fmadd.s f18, f20, f26, f25, rmm # perform operation
fmadd.s f18, f20, f26, f25, rne # perform operation
fmadd.s f18, f20, f26, f25, rtz # perform operation
fmadd.s f18, f20, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f26, f25 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xffbfffff)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
la x2, scratch
li x3, 0xe06fc0e9 # load x3 with value 0xe06fc0e9
sw x3, 0(x2) # store 0xe06fc0e9 in memory
flw f11, 0(x2) # load 0xe06fc0e9 from memory into f11
la x2, scratch
li x3, 0xffbfffff # load x3 with value 0xffbfffff
sw x3, 0(x2) # store 0xffbfffff in memory
flw f31, 0(x2) # load 0xffbfffff from memory into f31
fmadd.s f29, f1, f11, f31, dyn # perform operation
fmadd.s f29, f1, f11, f31, rdn # perform operation
fmadd.s f29, f1, f11, f31, rmm # perform operation
fmadd.s f29, f1, f11, f31, rne # perform operation
fmadd.s f29, f1, f11, f31, rtz # perform operation
fmadd.s f29, f1, f11, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f1, f11, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f1, f11, f31 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
la x2, scratch
li x3, 0x88f10808 # load x3 with value 0x88f10808
sw x3, 0(x2) # store 0x88f10808 in memory
flw f11, 0(x2) # load 0x88f10808 from memory into f11
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
fmadd.s f28, f19, f11, f30, dyn # perform operation
fmadd.s f28, f19, f11, f30, rdn # perform operation
fmadd.s f28, f19, f11, f30, rmm # perform operation
fmadd.s f28, f19, f11, f30, rne # perform operation
fmadd.s f28, f19, f11, f30, rtz # perform operation
fmadd.s f28, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f11, f30 # perform operation


# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
la x2, scratch
li x3, 0xdd95de27 # load x3 with value 0xdd95de27
sw x3, 0(x2) # store 0xdd95de27 in memory
flw f24, 0(x2) # load 0xdd95de27 from memory into f24
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f5, f20, f24, f18, dyn # perform operation
fmadd.s f5, f20, f24, f18, rdn # perform operation
fmadd.s f5, f20, f24, f18, rmm # perform operation
fmadd.s f5, f20, f24, f18, rne # perform operation
fmadd.s f5, f20, f24, f18, rtz # perform operation
fmadd.s f5, f20, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f24, f18 # perform operation


.EQU SIGSIZE,0


 # testgen_footer.S


write_tohost:
    la t1, tohost
    li t0, 1
    sw t0, 0(t1)
    sw zero, 4(t1)

self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 136

.data 

.section .tohost 
tohost: # write to HTIF
    .dword 0
fromhost:
    .dword 0

.align 4
begin_signature:
    .fill SIGSIZE*8/__riscv_xlen,__riscv_xlen/8,0xdeadbeef
end_signature:

.end
