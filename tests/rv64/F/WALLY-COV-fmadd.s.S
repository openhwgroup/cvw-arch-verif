///////////////////////////////////////////
// /home/jcassidy/cvw/addins/cvw-arch-verif/tests/rv64/F//WALLY-COV-fmadd.s.S
// David_Harris@hmc.edu
// Created 2025-01-24 19:54:22.743800
//
// Copyright (C) 2024 Harvey Mudd College & Oklahoma State University, Habib University, UET Lahore
//
// SPDX-License-Identifier: Apache-2.0 WITH SHL-2.1
///////////////////////////////////////////

.section .text.init
.globl rvtest_entry_point

rvtest_entry_point:

    
# set mstatus.FS to 01 to enable fp
li t0,0x4000
csrs mstatus, t0


# Testcase cmp_gpr_hazard raw test
fmadd.s f4, f10, f28, f25 # perform first operation
fmadd.s f12, f4, f9, f18 # perform second operation

# Testcase cmp_gpr_hazard raw test
fmadd.s f22, f9, f23, f29 # perform first operation
fmadd.s f9, f21, f22, f15 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmadd.s f27, f25, f16, f2 # perform first operation
fmadd.s f27, f22, f23, f17 # perform second operation

# Testcase cmp_gpr_hazard waw test
fmadd.s f18, f20, f14, f31 # perform first operation
fmadd.s f18, f17, f11, f13 # perform second operation

# Testcase cmp_gpr_hazard war test
fmadd.s f27, f17, f8, f3 # perform first operation
fmadd.s f17, f30, f7, f9 # perform second operation

# Testcase cmp_gpr_hazard war test
fmadd.s f13, f4, f16, f21 # perform first operation
fmadd.s f16, f29, f2, f22 # perform second operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f0)
li x0, 0xdf62caeba17bca99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x12c6b1260efe3e # load x3 with value 0x12c6b1260efe3e
sw x3, 0(x2) # store 0x12c6b1260efe3e in memory
flw f0, 0(x2) # load 0x12c6b1260efe3e from memory into f0
li x3, 0x24ff9b7a72603425 # load x3 with value 0x24ff9b7a72603425
sw x3, 0(x2) # store 0x24ff9b7a72603425 in memory
flw f3, 0(x2) # load 0x24ff9b7a72603425 from memory into f3
li x3, 0x164f2f35e7e5d6ea # load x3 with value 0x164f2f35e7e5d6ea
sw x3, 0(x2) # store 0x164f2f35e7e5d6ea in memory
flw f10, 0(x2) # load 0x164f2f35e7e5d6ea from memory into f10
fmadd.s f0, f0, f3, f10 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f1)
li x1, 0x21d7bae20a9e674e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x77590d238860cc4f # load x3 with value 0x77590d238860cc4f
sw x3, 0(x2) # store 0x77590d238860cc4f in memory
flw f1, 0(x2) # load 0x77590d238860cc4f from memory into f1
li x3, 0x296e9617188b0e51 # load x3 with value 0x296e9617188b0e51
sw x3, 0(x2) # store 0x296e9617188b0e51 in memory
flw f14, 0(x2) # load 0x296e9617188b0e51 from memory into f14
li x3, 0x67ccc63e8a145e09 # load x3 with value 0x67ccc63e8a145e09
sw x3, 0(x2) # store 0x67ccc63e8a145e09 in memory
flw f20, 0(x2) # load 0x67ccc63e8a145e09 from memory into f20
fmadd.s f1, f1, f14, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f2)
li x2, 0x4836b8d9704af339 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb6eab4c330469978 # load x3 with value 0xb6eab4c330469978
sw x3, 0(x2) # store 0xb6eab4c330469978 in memory
flw f2, 0(x2) # load 0xb6eab4c330469978 from memory into f2
li x3, 0x67ecad93c12e7376 # load x3 with value 0x67ecad93c12e7376
sw x3, 0(x2) # store 0x67ecad93c12e7376 in memory
flw f16, 0(x2) # load 0x67ecad93c12e7376 from memory into f16
li x3, 0xefaa9a278c2a87a # load x3 with value 0xefaa9a278c2a87a
sw x3, 0(x2) # store 0xefaa9a278c2a87a in memory
flw f24, 0(x2) # load 0xefaa9a278c2a87a from memory into f24
fmadd.s f2, f2, f16, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f3)
li x3, 0x3943f1656cd05ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x35ab50f4207bf9e4 # load x3 with value 0x35ab50f4207bf9e4
sw x3, 0(x2) # store 0x35ab50f4207bf9e4 in memory
flw f3, 0(x2) # load 0x35ab50f4207bf9e4 from memory into f3
li x3, 0xcafd7702c4ef04d0 # load x3 with value 0xcafd7702c4ef04d0
sw x3, 0(x2) # store 0xcafd7702c4ef04d0 in memory
flw f9, 0(x2) # load 0xcafd7702c4ef04d0 from memory into f9
li x3, 0x3cd839a4d666640d # load x3 with value 0x3cd839a4d666640d
sw x3, 0(x2) # store 0x3cd839a4d666640d in memory
flw f12, 0(x2) # load 0x3cd839a4d666640d from memory into f12
fmadd.s f3, f3, f9, f12 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f4)
li x4, 0x00c7e5c1f7b31b07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1fd88893ccf673dd # load x3 with value 0x1fd88893ccf673dd
sw x3, 0(x2) # store 0x1fd88893ccf673dd in memory
flw f4, 0(x2) # load 0x1fd88893ccf673dd from memory into f4
li x3, 0x4a4f414fdc71cdbf # load x3 with value 0x4a4f414fdc71cdbf
sw x3, 0(x2) # store 0x4a4f414fdc71cdbf in memory
flw f8, 0(x2) # load 0x4a4f414fdc71cdbf from memory into f8
li x3, 0x16c0a2bd407d3f72 # load x3 with value 0x16c0a2bd407d3f72
sw x3, 0(x2) # store 0x16c0a2bd407d3f72 in memory
flw f3, 0(x2) # load 0x16c0a2bd407d3f72 from memory into f3
fmadd.s f4, f4, f8, f3 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f5)
li x5, 0x607366796724aa1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa0b8ef6b4ccd8cfa # load x3 with value 0xa0b8ef6b4ccd8cfa
sw x3, 0(x2) # store 0xa0b8ef6b4ccd8cfa in memory
flw f5, 0(x2) # load 0xa0b8ef6b4ccd8cfa from memory into f5
li x3, 0x280053576f89d50c # load x3 with value 0x280053576f89d50c
sw x3, 0(x2) # store 0x280053576f89d50c in memory
flw f22, 0(x2) # load 0x280053576f89d50c from memory into f22
li x3, 0x9182a964618f38a9 # load x3 with value 0x9182a964618f38a9
sw x3, 0(x2) # store 0x9182a964618f38a9 in memory
flw f31, 0(x2) # load 0x9182a964618f38a9 from memory into f31
fmadd.s f5, f5, f22, f31 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f6)
li x6, 0xf5537ddce0b5e730 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81dc0170c78f6618 # load x3 with value 0x81dc0170c78f6618
sw x3, 0(x2) # store 0x81dc0170c78f6618 in memory
flw f6, 0(x2) # load 0x81dc0170c78f6618 from memory into f6
li x3, 0x4cc9e20e83f9321a # load x3 with value 0x4cc9e20e83f9321a
sw x3, 0(x2) # store 0x4cc9e20e83f9321a in memory
flw f17, 0(x2) # load 0x4cc9e20e83f9321a from memory into f17
li x3, 0x7cb99b1904cef321 # load x3 with value 0x7cb99b1904cef321
sw x3, 0(x2) # store 0x7cb99b1904cef321 in memory
flw f11, 0(x2) # load 0x7cb99b1904cef321 from memory into f11
fmadd.s f6, f6, f17, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f7)
li x7, 0x70f36f2e573a0b4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa2b7eb41ad60470b # load x3 with value 0xa2b7eb41ad60470b
sw x3, 0(x2) # store 0xa2b7eb41ad60470b in memory
flw f7, 0(x2) # load 0xa2b7eb41ad60470b from memory into f7
li x3, 0x926f77d68d09fb41 # load x3 with value 0x926f77d68d09fb41
sw x3, 0(x2) # store 0x926f77d68d09fb41 in memory
flw f9, 0(x2) # load 0x926f77d68d09fb41 from memory into f9
li x3, 0xa8d624e025a3338 # load x3 with value 0xa8d624e025a3338
sw x3, 0(x2) # store 0xa8d624e025a3338 in memory
flw f17, 0(x2) # load 0xa8d624e025a3338 from memory into f17
fmadd.s f7, f7, f9, f17 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f8)
li x8, 0x58e7ac9356a6b109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11a1dc647d504c26 # load x3 with value 0x11a1dc647d504c26
sw x3, 0(x2) # store 0x11a1dc647d504c26 in memory
flw f8, 0(x2) # load 0x11a1dc647d504c26 from memory into f8
li x3, 0x644a8a7c4b6ef19 # load x3 with value 0x644a8a7c4b6ef19
sw x3, 0(x2) # store 0x644a8a7c4b6ef19 in memory
flw f3, 0(x2) # load 0x644a8a7c4b6ef19 from memory into f3
li x3, 0xb29e64711efe19e4 # load x3 with value 0xb29e64711efe19e4
sw x3, 0(x2) # store 0xb29e64711efe19e4 in memory
flw f19, 0(x2) # load 0xb29e64711efe19e4 from memory into f19
fmadd.s f8, f8, f3, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f9)
li x9, 0x9b66eb60c2c3cdae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7613d98fcd585c4c # load x3 with value 0x7613d98fcd585c4c
sw x3, 0(x2) # store 0x7613d98fcd585c4c in memory
flw f9, 0(x2) # load 0x7613d98fcd585c4c from memory into f9
li x3, 0x35ab615721c7fa06 # load x3 with value 0x35ab615721c7fa06
sw x3, 0(x2) # store 0x35ab615721c7fa06 in memory
flw f21, 0(x2) # load 0x35ab615721c7fa06 from memory into f21
li x3, 0xbb1832a70bd97fa5 # load x3 with value 0xbb1832a70bd97fa5
sw x3, 0(x2) # store 0xbb1832a70bd97fa5 in memory
flw f20, 0(x2) # load 0xbb1832a70bd97fa5 from memory into f20
fmadd.s f9, f9, f21, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f10)
li x10, 0x143c214bf10b6d3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1de1d41f2b7f6a77 # load x3 with value 0x1de1d41f2b7f6a77
sw x3, 0(x2) # store 0x1de1d41f2b7f6a77 in memory
flw f10, 0(x2) # load 0x1de1d41f2b7f6a77 from memory into f10
li x3, 0xcee8ef00a999763a # load x3 with value 0xcee8ef00a999763a
sw x3, 0(x2) # store 0xcee8ef00a999763a in memory
flw f18, 0(x2) # load 0xcee8ef00a999763a from memory into f18
li x3, 0x4552cf2969770e4e # load x3 with value 0x4552cf2969770e4e
sw x3, 0(x2) # store 0x4552cf2969770e4e in memory
flw f16, 0(x2) # load 0x4552cf2969770e4e from memory into f16
fmadd.s f10, f10, f18, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f11)
li x11, 0x6c0afe075227018c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeed42745f7e20e6f # load x3 with value 0xeed42745f7e20e6f
sw x3, 0(x2) # store 0xeed42745f7e20e6f in memory
flw f11, 0(x2) # load 0xeed42745f7e20e6f from memory into f11
li x3, 0xef358cb46afd41ca # load x3 with value 0xef358cb46afd41ca
sw x3, 0(x2) # store 0xef358cb46afd41ca in memory
flw f19, 0(x2) # load 0xef358cb46afd41ca from memory into f19
li x3, 0xf5db0ed56206d144 # load x3 with value 0xf5db0ed56206d144
sw x3, 0(x2) # store 0xf5db0ed56206d144 in memory
flw f9, 0(x2) # load 0xf5db0ed56206d144 from memory into f9
fmadd.s f11, f11, f19, f9 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f12)
li x12, 0x406d2e7d456ca84d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x92a77a92561ebe1c # load x3 with value 0x92a77a92561ebe1c
sw x3, 0(x2) # store 0x92a77a92561ebe1c in memory
flw f12, 0(x2) # load 0x92a77a92561ebe1c from memory into f12
li x3, 0x68898da370a3f6df # load x3 with value 0x68898da370a3f6df
sw x3, 0(x2) # store 0x68898da370a3f6df in memory
flw f16, 0(x2) # load 0x68898da370a3f6df from memory into f16
li x3, 0x4219afc64b2657ab # load x3 with value 0x4219afc64b2657ab
sw x3, 0(x2) # store 0x4219afc64b2657ab in memory
flw f4, 0(x2) # load 0x4219afc64b2657ab from memory into f4
fmadd.s f12, f12, f16, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f13)
li x13, 0x17b71617f092c72e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fd4cb1762a62f5d # load x3 with value 0x7fd4cb1762a62f5d
sw x3, 0(x2) # store 0x7fd4cb1762a62f5d in memory
flw f13, 0(x2) # load 0x7fd4cb1762a62f5d from memory into f13
li x3, 0xf2a714fb9d924e96 # load x3 with value 0xf2a714fb9d924e96
sw x3, 0(x2) # store 0xf2a714fb9d924e96 in memory
flw f11, 0(x2) # load 0xf2a714fb9d924e96 from memory into f11
li x3, 0x5688a84936864f51 # load x3 with value 0x5688a84936864f51
sw x3, 0(x2) # store 0x5688a84936864f51 in memory
flw f28, 0(x2) # load 0x5688a84936864f51 from memory into f28
fmadd.s f13, f13, f11, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f14)
li x14, 0xead25addfc5ac661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc2295a414ad91827 # load x3 with value 0xc2295a414ad91827
sw x3, 0(x2) # store 0xc2295a414ad91827 in memory
flw f14, 0(x2) # load 0xc2295a414ad91827 from memory into f14
li x3, 0x144f904475b4719 # load x3 with value 0x144f904475b4719
sw x3, 0(x2) # store 0x144f904475b4719 in memory
flw f10, 0(x2) # load 0x144f904475b4719 from memory into f10
li x3, 0xab2c7fdd7fb671ab # load x3 with value 0xab2c7fdd7fb671ab
sw x3, 0(x2) # store 0xab2c7fdd7fb671ab in memory
flw f19, 0(x2) # load 0xab2c7fdd7fb671ab from memory into f19
fmadd.s f14, f14, f10, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f15)
li x15, 0x8c17dc5655990297 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb20ad49fa526c26 # load x3 with value 0xcb20ad49fa526c26
sw x3, 0(x2) # store 0xcb20ad49fa526c26 in memory
flw f15, 0(x2) # load 0xcb20ad49fa526c26 from memory into f15
li x3, 0xf9421bbda5e9c0da # load x3 with value 0xf9421bbda5e9c0da
sw x3, 0(x2) # store 0xf9421bbda5e9c0da in memory
flw f29, 0(x2) # load 0xf9421bbda5e9c0da from memory into f29
li x3, 0x6cee0a1f4fb3b7b9 # load x3 with value 0x6cee0a1f4fb3b7b9
sw x3, 0(x2) # store 0x6cee0a1f4fb3b7b9 in memory
flw f22, 0(x2) # load 0x6cee0a1f4fb3b7b9 from memory into f22
fmadd.s f15, f15, f29, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f16)
li x16, 0xdeb46f10b9e3d51f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf291f0c59c290739 # load x3 with value 0xf291f0c59c290739
sw x3, 0(x2) # store 0xf291f0c59c290739 in memory
flw f16, 0(x2) # load 0xf291f0c59c290739 from memory into f16
li x3, 0xb7e1f79cdc196169 # load x3 with value 0xb7e1f79cdc196169
sw x3, 0(x2) # store 0xb7e1f79cdc196169 in memory
flw f24, 0(x2) # load 0xb7e1f79cdc196169 from memory into f24
li x3, 0x6719167e3091869c # load x3 with value 0x6719167e3091869c
sw x3, 0(x2) # store 0x6719167e3091869c in memory
flw f11, 0(x2) # load 0x6719167e3091869c from memory into f11
fmadd.s f16, f16, f24, f11 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f17)
li x17, 0x622e5af3c42d3365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1db042c11edc30c # load x3 with value 0xa1db042c11edc30c
sw x3, 0(x2) # store 0xa1db042c11edc30c in memory
flw f17, 0(x2) # load 0xa1db042c11edc30c from memory into f17
li x3, 0x8183d79c109f42b2 # load x3 with value 0x8183d79c109f42b2
sw x3, 0(x2) # store 0x8183d79c109f42b2 in memory
flw f27, 0(x2) # load 0x8183d79c109f42b2 from memory into f27
li x3, 0x9339394f4e5a01d6 # load x3 with value 0x9339394f4e5a01d6
sw x3, 0(x2) # store 0x9339394f4e5a01d6 in memory
flw f4, 0(x2) # load 0x9339394f4e5a01d6 from memory into f4
fmadd.s f17, f17, f27, f4 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f18)
li x18, 0x420561792c3e99bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x995a11514e9bb2c6 # load x3 with value 0x995a11514e9bb2c6
sw x3, 0(x2) # store 0x995a11514e9bb2c6 in memory
flw f18, 0(x2) # load 0x995a11514e9bb2c6 from memory into f18
li x3, 0x78e185e8ef440fc8 # load x3 with value 0x78e185e8ef440fc8
sw x3, 0(x2) # store 0x78e185e8ef440fc8 in memory
flw f17, 0(x2) # load 0x78e185e8ef440fc8 from memory into f17
li x3, 0x8be1f5dc0f02c2ef # load x3 with value 0x8be1f5dc0f02c2ef
sw x3, 0(x2) # store 0x8be1f5dc0f02c2ef in memory
flw f14, 0(x2) # load 0x8be1f5dc0f02c2ef from memory into f14
fmadd.s f18, f18, f17, f14 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f19)
li x19, 0x171253a1eff81dc9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc30325ddf4fd57d # load x3 with value 0xc30325ddf4fd57d
sw x3, 0(x2) # store 0xc30325ddf4fd57d in memory
flw f19, 0(x2) # load 0xc30325ddf4fd57d from memory into f19
li x3, 0x2f1a31e2b4f665f9 # load x3 with value 0x2f1a31e2b4f665f9
sw x3, 0(x2) # store 0x2f1a31e2b4f665f9 in memory
flw f5, 0(x2) # load 0x2f1a31e2b4f665f9 from memory into f5
li x3, 0x1c45e21474af35b0 # load x3 with value 0x1c45e21474af35b0
sw x3, 0(x2) # store 0x1c45e21474af35b0 in memory
flw f22, 0(x2) # load 0x1c45e21474af35b0 from memory into f22
fmadd.s f19, f19, f5, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f20)
li x20, 0xfe629a984acbf4cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xedf24206e2777db8 # load x3 with value 0xedf24206e2777db8
sw x3, 0(x2) # store 0xedf24206e2777db8 in memory
flw f20, 0(x2) # load 0xedf24206e2777db8 from memory into f20
li x3, 0x271014fc60108f6d # load x3 with value 0x271014fc60108f6d
sw x3, 0(x2) # store 0x271014fc60108f6d in memory
flw f31, 0(x2) # load 0x271014fc60108f6d from memory into f31
li x3, 0xc68d288af207db42 # load x3 with value 0xc68d288af207db42
sw x3, 0(x2) # store 0xc68d288af207db42 in memory
flw f16, 0(x2) # load 0xc68d288af207db42 from memory into f16
fmadd.s f20, f20, f31, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f21)
li x21, 0x5ca80d9163ed0242 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda05d4f24a926100 # load x3 with value 0xda05d4f24a926100
sw x3, 0(x2) # store 0xda05d4f24a926100 in memory
flw f21, 0(x2) # load 0xda05d4f24a926100 from memory into f21
li x3, 0xb609816254c546cf # load x3 with value 0xb609816254c546cf
sw x3, 0(x2) # store 0xb609816254c546cf in memory
flw f20, 0(x2) # load 0xb609816254c546cf from memory into f20
li x3, 0x943c4130cc25f0cd # load x3 with value 0x943c4130cc25f0cd
sw x3, 0(x2) # store 0x943c4130cc25f0cd in memory
flw f28, 0(x2) # load 0x943c4130cc25f0cd from memory into f28
fmadd.s f21, f21, f20, f28 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f22)
li x22, 0x767cda43883b26ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24b334b107bbf3e6 # load x3 with value 0x24b334b107bbf3e6
sw x3, 0(x2) # store 0x24b334b107bbf3e6 in memory
flw f22, 0(x2) # load 0x24b334b107bbf3e6 from memory into f22
li x3, 0xa3e2e65abae1a033 # load x3 with value 0xa3e2e65abae1a033
sw x3, 0(x2) # store 0xa3e2e65abae1a033 in memory
flw f18, 0(x2) # load 0xa3e2e65abae1a033 from memory into f18
li x3, 0x713fb8af54f5f4eb # load x3 with value 0x713fb8af54f5f4eb
sw x3, 0(x2) # store 0x713fb8af54f5f4eb in memory
flw f7, 0(x2) # load 0x713fb8af54f5f4eb from memory into f7
fmadd.s f22, f22, f18, f7 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f23)
li x23, 0xa82ffa64fa1695bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcc7217ea8246a61f # load x3 with value 0xcc7217ea8246a61f
sw x3, 0(x2) # store 0xcc7217ea8246a61f in memory
flw f23, 0(x2) # load 0xcc7217ea8246a61f from memory into f23
li x3, 0x45e0bcb77e377715 # load x3 with value 0x45e0bcb77e377715
sw x3, 0(x2) # store 0x45e0bcb77e377715 in memory
flw f3, 0(x2) # load 0x45e0bcb77e377715 from memory into f3
li x3, 0xc3db05a044be0928 # load x3 with value 0xc3db05a044be0928
sw x3, 0(x2) # store 0xc3db05a044be0928 in memory
flw f22, 0(x2) # load 0xc3db05a044be0928 from memory into f22
fmadd.s f23, f23, f3, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f24)
li x24, 0x3f9a7ccb8280499a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd3266ba8f2e9c6d4 # load x3 with value 0xd3266ba8f2e9c6d4
sw x3, 0(x2) # store 0xd3266ba8f2e9c6d4 in memory
flw f24, 0(x2) # load 0xd3266ba8f2e9c6d4 from memory into f24
li x3, 0x39949d8e63b7e680 # load x3 with value 0x39949d8e63b7e680
sw x3, 0(x2) # store 0x39949d8e63b7e680 in memory
flw f25, 0(x2) # load 0x39949d8e63b7e680 from memory into f25
li x3, 0xbfd36f461f15cf06 # load x3 with value 0xbfd36f461f15cf06
sw x3, 0(x2) # store 0xbfd36f461f15cf06 in memory
flw f19, 0(x2) # load 0xbfd36f461f15cf06 from memory into f19
fmadd.s f24, f24, f25, f19 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f25)
li x25, 0xdd4312fa5a278d3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb35b9432b1790464 # load x3 with value 0xb35b9432b1790464
sw x3, 0(x2) # store 0xb35b9432b1790464 in memory
flw f25, 0(x2) # load 0xb35b9432b1790464 from memory into f25
li x3, 0x27c88199c38f4bf5 # load x3 with value 0x27c88199c38f4bf5
sw x3, 0(x2) # store 0x27c88199c38f4bf5 in memory
flw f3, 0(x2) # load 0x27c88199c38f4bf5 from memory into f3
li x3, 0xe89c6df741560147 # load x3 with value 0xe89c6df741560147
sw x3, 0(x2) # store 0xe89c6df741560147 in memory
flw f22, 0(x2) # load 0xe89c6df741560147 from memory into f22
fmadd.s f25, f25, f3, f22 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f26)
li x26, 0xd0ea12b50e27f72b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb09a9e20483ad8e3 # load x3 with value 0xb09a9e20483ad8e3
sw x3, 0(x2) # store 0xb09a9e20483ad8e3 in memory
flw f26, 0(x2) # load 0xb09a9e20483ad8e3 from memory into f26
li x3, 0xfd51f9875e62867b # load x3 with value 0xfd51f9875e62867b
sw x3, 0(x2) # store 0xfd51f9875e62867b in memory
flw f29, 0(x2) # load 0xfd51f9875e62867b from memory into f29
li x3, 0x47a22f4398b0f93c # load x3 with value 0x47a22f4398b0f93c
sw x3, 0(x2) # store 0x47a22f4398b0f93c in memory
flw f26, 0(x2) # load 0x47a22f4398b0f93c from memory into f26
fmadd.s f26, f26, f29, f26 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f27)
li x27, 0x03f4e2404ad04751 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd93fd04dc3f7b39e # load x3 with value 0xd93fd04dc3f7b39e
sw x3, 0(x2) # store 0xd93fd04dc3f7b39e in memory
flw f27, 0(x2) # load 0xd93fd04dc3f7b39e from memory into f27
li x3, 0xb35dd6438502f77d # load x3 with value 0xb35dd6438502f77d
sw x3, 0(x2) # store 0xb35dd6438502f77d in memory
flw f28, 0(x2) # load 0xb35dd6438502f77d from memory into f28
li x3, 0xf878c6431dcb6835 # load x3 with value 0xf878c6431dcb6835
sw x3, 0(x2) # store 0xf878c6431dcb6835 in memory
flw f13, 0(x2) # load 0xf878c6431dcb6835 from memory into f13
fmadd.s f27, f27, f28, f13 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f28)
li x28, 0xbed63276cf1db777 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7145f5f67b32c6c8 # load x3 with value 0x7145f5f67b32c6c8
sw x3, 0(x2) # store 0x7145f5f67b32c6c8 in memory
flw f28, 0(x2) # load 0x7145f5f67b32c6c8 from memory into f28
li x3, 0xe8f3180b6fa4535d # load x3 with value 0xe8f3180b6fa4535d
sw x3, 0(x2) # store 0xe8f3180b6fa4535d in memory
flw f5, 0(x2) # load 0xe8f3180b6fa4535d from memory into f5
li x3, 0x1bad8551076b566a # load x3 with value 0x1bad8551076b566a
sw x3, 0(x2) # store 0x1bad8551076b566a in memory
flw f16, 0(x2) # load 0x1bad8551076b566a from memory into f16
fmadd.s f28, f28, f5, f16 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f29)
li x29, 0xcb6a8fa545309de5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcece15dc5f120323 # load x3 with value 0xcece15dc5f120323
sw x3, 0(x2) # store 0xcece15dc5f120323 in memory
flw f29, 0(x2) # load 0xcece15dc5f120323 from memory into f29
li x3, 0x2921fc18086bf673 # load x3 with value 0x2921fc18086bf673
sw x3, 0(x2) # store 0x2921fc18086bf673 in memory
flw f23, 0(x2) # load 0x2921fc18086bf673 from memory into f23
li x3, 0x4c9f93acae7a1637 # load x3 with value 0x4c9f93acae7a1637
sw x3, 0(x2) # store 0x4c9f93acae7a1637 in memory
flw f24, 0(x2) # load 0x4c9f93acae7a1637 from memory into f24
fmadd.s f29, f29, f23, f24 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f30)
li x30, 0x91e0a4ba6c7ac616 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4293b1702f6c97da # load x3 with value 0x4293b1702f6c97da
sw x3, 0(x2) # store 0x4293b1702f6c97da in memory
flw f30, 0(x2) # load 0x4293b1702f6c97da from memory into f30
li x3, 0xe59f48ade31ce92d # load x3 with value 0xe59f48ade31ce92d
sw x3, 0(x2) # store 0xe59f48ade31ce92d in memory
flw f6, 0(x2) # load 0xe59f48ade31ce92d from memory into f6
li x3, 0x512ce649fa35b2c1 # load x3 with value 0x512ce649fa35b2c1
sw x3, 0(x2) # store 0x512ce649fa35b2c1 in memory
flw f20, 0(x2) # load 0x512ce649fa35b2c1 from memory into f20
fmadd.s f30, f30, f6, f20 # perform operation

# Testcase cmp_fd_fs1 (Test fd = fs1 = f31)
li x31, 0x6df63d5dd8679aff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5ece56dba40fff27 # load x3 with value 0x5ece56dba40fff27
sw x3, 0(x2) # store 0x5ece56dba40fff27 in memory
flw f31, 0(x2) # load 0x5ece56dba40fff27 from memory into f31
li x3, 0x4f62390908d08191 # load x3 with value 0x4f62390908d08191
sw x3, 0(x2) # store 0x4f62390908d08191 in memory
flw f9, 0(x2) # load 0x4f62390908d08191 from memory into f9
li x3, 0x4053fb1d94f0fc50 # load x3 with value 0x4053fb1d94f0fc50
sw x3, 0(x2) # store 0x4053fb1d94f0fc50 in memory
flw f11, 0(x2) # load 0x4053fb1d94f0fc50 from memory into f11
fmadd.s f31, f31, f9, f11 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f0)
li x0, 0x940c3a0ba82b2783 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d2448f7468fbba8 # load x3 with value 0x5d2448f7468fbba8
sw x3, 0(x2) # store 0x5d2448f7468fbba8 in memory
flw f23, 0(x2) # load 0x5d2448f7468fbba8 from memory into f23
li x3, 0x969d11b54c00dda1 # load x3 with value 0x969d11b54c00dda1
sw x3, 0(x2) # store 0x969d11b54c00dda1 in memory
flw f0, 0(x2) # load 0x969d11b54c00dda1 from memory into f0
li x3, 0xb1765d75677f95a1 # load x3 with value 0xb1765d75677f95a1
sw x3, 0(x2) # store 0xb1765d75677f95a1 in memory
flw f15, 0(x2) # load 0xb1765d75677f95a1 from memory into f15
fmadd.s f0, f23, f0, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f1)
li x1, 0xcd2d5882eeaaa28b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc1ea0948e1582a4 # load x3 with value 0xfc1ea0948e1582a4
sw x3, 0(x2) # store 0xfc1ea0948e1582a4 in memory
flw f11, 0(x2) # load 0xfc1ea0948e1582a4 from memory into f11
li x3, 0xc1193e478b3afa27 # load x3 with value 0xc1193e478b3afa27
sw x3, 0(x2) # store 0xc1193e478b3afa27 in memory
flw f1, 0(x2) # load 0xc1193e478b3afa27 from memory into f1
li x3, 0xf1e725a5caad2bb7 # load x3 with value 0xf1e725a5caad2bb7
sw x3, 0(x2) # store 0xf1e725a5caad2bb7 in memory
flw f17, 0(x2) # load 0xf1e725a5caad2bb7 from memory into f17
fmadd.s f1, f11, f1, f17 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f2)
li x2, 0x7f03c7b45014a3cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x882d33572977c947 # load x3 with value 0x882d33572977c947
sw x3, 0(x2) # store 0x882d33572977c947 in memory
flw f5, 0(x2) # load 0x882d33572977c947 from memory into f5
li x3, 0x594602eb541cf654 # load x3 with value 0x594602eb541cf654
sw x3, 0(x2) # store 0x594602eb541cf654 in memory
flw f2, 0(x2) # load 0x594602eb541cf654 from memory into f2
li x3, 0x8592b02cf1677e3 # load x3 with value 0x8592b02cf1677e3
sw x3, 0(x2) # store 0x8592b02cf1677e3 in memory
flw f12, 0(x2) # load 0x8592b02cf1677e3 from memory into f12
fmadd.s f2, f5, f2, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f3)
li x3, 0x2909775d202b501c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e94ae95d302a9d9 # load x3 with value 0x7e94ae95d302a9d9
sw x3, 0(x2) # store 0x7e94ae95d302a9d9 in memory
flw f22, 0(x2) # load 0x7e94ae95d302a9d9 from memory into f22
li x3, 0x9bb6f4e7952e58b3 # load x3 with value 0x9bb6f4e7952e58b3
sw x3, 0(x2) # store 0x9bb6f4e7952e58b3 in memory
flw f3, 0(x2) # load 0x9bb6f4e7952e58b3 from memory into f3
li x3, 0x38181f475bd02b73 # load x3 with value 0x38181f475bd02b73
sw x3, 0(x2) # store 0x38181f475bd02b73 in memory
flw f10, 0(x2) # load 0x38181f475bd02b73 from memory into f10
fmadd.s f3, f22, f3, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f4)
li x4, 0xef802be093a36861 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe49b98b323bf4f9 # load x3 with value 0xbe49b98b323bf4f9
sw x3, 0(x2) # store 0xbe49b98b323bf4f9 in memory
flw f13, 0(x2) # load 0xbe49b98b323bf4f9 from memory into f13
li x3, 0x86c7fd16abf48e5 # load x3 with value 0x86c7fd16abf48e5
sw x3, 0(x2) # store 0x86c7fd16abf48e5 in memory
flw f4, 0(x2) # load 0x86c7fd16abf48e5 from memory into f4
li x3, 0xbf0975c6cec68100 # load x3 with value 0xbf0975c6cec68100
sw x3, 0(x2) # store 0xbf0975c6cec68100 in memory
flw f16, 0(x2) # load 0xbf0975c6cec68100 from memory into f16
fmadd.s f4, f13, f4, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f5)
li x5, 0xb6bc2a7888b87de1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x99dfa113bf6c6a7 # load x3 with value 0x99dfa113bf6c6a7
sw x3, 0(x2) # store 0x99dfa113bf6c6a7 in memory
flw f21, 0(x2) # load 0x99dfa113bf6c6a7 from memory into f21
li x3, 0xe1cb6a036c7f6291 # load x3 with value 0xe1cb6a036c7f6291
sw x3, 0(x2) # store 0xe1cb6a036c7f6291 in memory
flw f5, 0(x2) # load 0xe1cb6a036c7f6291 from memory into f5
li x3, 0x77a73df39d40d700 # load x3 with value 0x77a73df39d40d700
sw x3, 0(x2) # store 0x77a73df39d40d700 in memory
flw f27, 0(x2) # load 0x77a73df39d40d700 from memory into f27
fmadd.s f5, f21, f5, f27 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f6)
li x6, 0x65a72de94efb3d1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeca4e0d0d83786b4 # load x3 with value 0xeca4e0d0d83786b4
sw x3, 0(x2) # store 0xeca4e0d0d83786b4 in memory
flw f15, 0(x2) # load 0xeca4e0d0d83786b4 from memory into f15
li x3, 0x56dd1526319a410c # load x3 with value 0x56dd1526319a410c
sw x3, 0(x2) # store 0x56dd1526319a410c in memory
flw f6, 0(x2) # load 0x56dd1526319a410c from memory into f6
li x3, 0x3cd71c5edf666013 # load x3 with value 0x3cd71c5edf666013
sw x3, 0(x2) # store 0x3cd71c5edf666013 in memory
flw f31, 0(x2) # load 0x3cd71c5edf666013 from memory into f31
fmadd.s f6, f15, f6, f31 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f7)
li x7, 0x191bac0d6d4f551b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x366bfc70f3fdacdd # load x3 with value 0x366bfc70f3fdacdd
sw x3, 0(x2) # store 0x366bfc70f3fdacdd in memory
flw f17, 0(x2) # load 0x366bfc70f3fdacdd from memory into f17
li x3, 0x6b38bf3bf2001be7 # load x3 with value 0x6b38bf3bf2001be7
sw x3, 0(x2) # store 0x6b38bf3bf2001be7 in memory
flw f7, 0(x2) # load 0x6b38bf3bf2001be7 from memory into f7
li x3, 0xa487ab0a7577e022 # load x3 with value 0xa487ab0a7577e022
sw x3, 0(x2) # store 0xa487ab0a7577e022 in memory
flw f10, 0(x2) # load 0xa487ab0a7577e022 from memory into f10
fmadd.s f7, f17, f7, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f8)
li x8, 0xd84e0a49547eb82d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe3db1cb7341cd5e4 # load x3 with value 0xe3db1cb7341cd5e4
sw x3, 0(x2) # store 0xe3db1cb7341cd5e4 in memory
flw f10, 0(x2) # load 0xe3db1cb7341cd5e4 from memory into f10
li x3, 0x3599825e41e0644e # load x3 with value 0x3599825e41e0644e
sw x3, 0(x2) # store 0x3599825e41e0644e in memory
flw f8, 0(x2) # load 0x3599825e41e0644e from memory into f8
li x3, 0xab558420f108a238 # load x3 with value 0xab558420f108a238
sw x3, 0(x2) # store 0xab558420f108a238 in memory
flw f3, 0(x2) # load 0xab558420f108a238 from memory into f3
fmadd.s f8, f10, f8, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f9)
li x9, 0xa0d476aedec76885 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54f0cb36a800bb2 # load x3 with value 0x54f0cb36a800bb2
sw x3, 0(x2) # store 0x54f0cb36a800bb2 in memory
flw f20, 0(x2) # load 0x54f0cb36a800bb2 from memory into f20
li x3, 0x543cf7cd37ce2952 # load x3 with value 0x543cf7cd37ce2952
sw x3, 0(x2) # store 0x543cf7cd37ce2952 in memory
flw f9, 0(x2) # load 0x543cf7cd37ce2952 from memory into f9
li x3, 0x9b53f0fa77b405cf # load x3 with value 0x9b53f0fa77b405cf
sw x3, 0(x2) # store 0x9b53f0fa77b405cf in memory
flw f13, 0(x2) # load 0x9b53f0fa77b405cf from memory into f13
fmadd.s f9, f20, f9, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f10)
li x10, 0x443d9127719e88ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9ffed8a06208c52d # load x3 with value 0x9ffed8a06208c52d
sw x3, 0(x2) # store 0x9ffed8a06208c52d in memory
flw f1, 0(x2) # load 0x9ffed8a06208c52d from memory into f1
li x3, 0x797bc7ad7bdd36a6 # load x3 with value 0x797bc7ad7bdd36a6
sw x3, 0(x2) # store 0x797bc7ad7bdd36a6 in memory
flw f10, 0(x2) # load 0x797bc7ad7bdd36a6 from memory into f10
li x3, 0x6718330b9ba775c5 # load x3 with value 0x6718330b9ba775c5
sw x3, 0(x2) # store 0x6718330b9ba775c5 in memory
flw f9, 0(x2) # load 0x6718330b9ba775c5 from memory into f9
fmadd.s f10, f1, f10, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f11)
li x11, 0x8d83f7c7852a0dab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd82bf052ba8aa905 # load x3 with value 0xd82bf052ba8aa905
sw x3, 0(x2) # store 0xd82bf052ba8aa905 in memory
flw f21, 0(x2) # load 0xd82bf052ba8aa905 from memory into f21
li x3, 0x9727b353d1a17ad7 # load x3 with value 0x9727b353d1a17ad7
sw x3, 0(x2) # store 0x9727b353d1a17ad7 in memory
flw f11, 0(x2) # load 0x9727b353d1a17ad7 from memory into f11
li x3, 0xc1d9f1529b2c442 # load x3 with value 0xc1d9f1529b2c442
sw x3, 0(x2) # store 0xc1d9f1529b2c442 in memory
flw f13, 0(x2) # load 0xc1d9f1529b2c442 from memory into f13
fmadd.s f11, f21, f11, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f12)
li x12, 0x82f020f368031d4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf27bea51bc12f247 # load x3 with value 0xf27bea51bc12f247
sw x3, 0(x2) # store 0xf27bea51bc12f247 in memory
flw f7, 0(x2) # load 0xf27bea51bc12f247 from memory into f7
li x3, 0x9f8476e823ca7600 # load x3 with value 0x9f8476e823ca7600
sw x3, 0(x2) # store 0x9f8476e823ca7600 in memory
flw f12, 0(x2) # load 0x9f8476e823ca7600 from memory into f12
li x3, 0x7dde988c53644bbc # load x3 with value 0x7dde988c53644bbc
sw x3, 0(x2) # store 0x7dde988c53644bbc in memory
flw f16, 0(x2) # load 0x7dde988c53644bbc from memory into f16
fmadd.s f12, f7, f12, f16 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f13)
li x13, 0xc7e481b6fcf5d690 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5bd2e274ee7c08e5 # load x3 with value 0x5bd2e274ee7c08e5
sw x3, 0(x2) # store 0x5bd2e274ee7c08e5 in memory
flw f4, 0(x2) # load 0x5bd2e274ee7c08e5 from memory into f4
li x3, 0xdb56c80c385cf200 # load x3 with value 0xdb56c80c385cf200
sw x3, 0(x2) # store 0xdb56c80c385cf200 in memory
flw f13, 0(x2) # load 0xdb56c80c385cf200 from memory into f13
li x3, 0x6f6e1b9a7b68cd4a # load x3 with value 0x6f6e1b9a7b68cd4a
sw x3, 0(x2) # store 0x6f6e1b9a7b68cd4a in memory
flw f8, 0(x2) # load 0x6f6e1b9a7b68cd4a from memory into f8
fmadd.s f13, f4, f13, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f14)
li x14, 0x8cfad613ee4d2c96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6c196e8433f961ad # load x3 with value 0x6c196e8433f961ad
sw x3, 0(x2) # store 0x6c196e8433f961ad in memory
flw f9, 0(x2) # load 0x6c196e8433f961ad from memory into f9
li x3, 0x10366d2696e1a2aa # load x3 with value 0x10366d2696e1a2aa
sw x3, 0(x2) # store 0x10366d2696e1a2aa in memory
flw f14, 0(x2) # load 0x10366d2696e1a2aa from memory into f14
li x3, 0xaf1856c958f2e9c8 # load x3 with value 0xaf1856c958f2e9c8
sw x3, 0(x2) # store 0xaf1856c958f2e9c8 in memory
flw f12, 0(x2) # load 0xaf1856c958f2e9c8 from memory into f12
fmadd.s f14, f9, f14, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f15)
li x15, 0xa3df7c9843e31601 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1239db5926c6a08c # load x3 with value 0x1239db5926c6a08c
sw x3, 0(x2) # store 0x1239db5926c6a08c in memory
flw f8, 0(x2) # load 0x1239db5926c6a08c from memory into f8
li x3, 0x1a15ef79bad1f63b # load x3 with value 0x1a15ef79bad1f63b
sw x3, 0(x2) # store 0x1a15ef79bad1f63b in memory
flw f15, 0(x2) # load 0x1a15ef79bad1f63b from memory into f15
li x3, 0x955ba84abc1728fe # load x3 with value 0x955ba84abc1728fe
sw x3, 0(x2) # store 0x955ba84abc1728fe in memory
flw f26, 0(x2) # load 0x955ba84abc1728fe from memory into f26
fmadd.s f15, f8, f15, f26 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f16)
li x16, 0xa266c133f9348094 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8615f1e0b0de7de7 # load x3 with value 0x8615f1e0b0de7de7
sw x3, 0(x2) # store 0x8615f1e0b0de7de7 in memory
flw f4, 0(x2) # load 0x8615f1e0b0de7de7 from memory into f4
li x3, 0x9581a61999621c1 # load x3 with value 0x9581a61999621c1
sw x3, 0(x2) # store 0x9581a61999621c1 in memory
flw f16, 0(x2) # load 0x9581a61999621c1 from memory into f16
li x3, 0xb42bc292c43977da # load x3 with value 0xb42bc292c43977da
sw x3, 0(x2) # store 0xb42bc292c43977da in memory
flw f2, 0(x2) # load 0xb42bc292c43977da from memory into f2
fmadd.s f16, f4, f16, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f17)
li x17, 0xf741192ea686c96e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x83ee88a0cc12b987 # load x3 with value 0x83ee88a0cc12b987
sw x3, 0(x2) # store 0x83ee88a0cc12b987 in memory
flw f3, 0(x2) # load 0x83ee88a0cc12b987 from memory into f3
li x3, 0xd6a54399d72a0d8c # load x3 with value 0xd6a54399d72a0d8c
sw x3, 0(x2) # store 0xd6a54399d72a0d8c in memory
flw f17, 0(x2) # load 0xd6a54399d72a0d8c from memory into f17
li x3, 0xb08e10171a33d40d # load x3 with value 0xb08e10171a33d40d
sw x3, 0(x2) # store 0xb08e10171a33d40d in memory
flw f5, 0(x2) # load 0xb08e10171a33d40d from memory into f5
fmadd.s f17, f3, f17, f5 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f18)
li x18, 0x773f4d29f9572391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x33402c079051ecd1 # load x3 with value 0x33402c079051ecd1
sw x3, 0(x2) # store 0x33402c079051ecd1 in memory
flw f13, 0(x2) # load 0x33402c079051ecd1 from memory into f13
li x3, 0xf13d49f990103353 # load x3 with value 0xf13d49f990103353
sw x3, 0(x2) # store 0xf13d49f990103353 in memory
flw f18, 0(x2) # load 0xf13d49f990103353 from memory into f18
li x3, 0x5e327a460e3e1048 # load x3 with value 0x5e327a460e3e1048
sw x3, 0(x2) # store 0x5e327a460e3e1048 in memory
flw f10, 0(x2) # load 0x5e327a460e3e1048 from memory into f10
fmadd.s f18, f13, f18, f10 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f19)
li x19, 0x896354e3a45e4c8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed6d0604f8056f1e # load x3 with value 0xed6d0604f8056f1e
sw x3, 0(x2) # store 0xed6d0604f8056f1e in memory
flw f15, 0(x2) # load 0xed6d0604f8056f1e from memory into f15
li x3, 0xd340b25bc010d0e4 # load x3 with value 0xd340b25bc010d0e4
sw x3, 0(x2) # store 0xd340b25bc010d0e4 in memory
flw f19, 0(x2) # load 0xd340b25bc010d0e4 from memory into f19
li x3, 0xb4183cb275b106e6 # load x3 with value 0xb4183cb275b106e6
sw x3, 0(x2) # store 0xb4183cb275b106e6 in memory
flw f21, 0(x2) # load 0xb4183cb275b106e6 from memory into f21
fmadd.s f19, f15, f19, f21 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f20)
li x20, 0x696ebf40b1982aaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ec4e69a5e036fd5 # load x3 with value 0x7ec4e69a5e036fd5
sw x3, 0(x2) # store 0x7ec4e69a5e036fd5 in memory
flw f28, 0(x2) # load 0x7ec4e69a5e036fd5 from memory into f28
li x3, 0xd1562c5a3dda33bc # load x3 with value 0xd1562c5a3dda33bc
sw x3, 0(x2) # store 0xd1562c5a3dda33bc in memory
flw f20, 0(x2) # load 0xd1562c5a3dda33bc from memory into f20
li x3, 0xc7f7e96f5363ba6d # load x3 with value 0xc7f7e96f5363ba6d
sw x3, 0(x2) # store 0xc7f7e96f5363ba6d in memory
flw f3, 0(x2) # load 0xc7f7e96f5363ba6d from memory into f3
fmadd.s f20, f28, f20, f3 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f21)
li x21, 0x4dde90ecf1cb8579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6649557ab6a9f311 # load x3 with value 0x6649557ab6a9f311
sw x3, 0(x2) # store 0x6649557ab6a9f311 in memory
flw f3, 0(x2) # load 0x6649557ab6a9f311 from memory into f3
li x3, 0x76c3630ebeabf525 # load x3 with value 0x76c3630ebeabf525
sw x3, 0(x2) # store 0x76c3630ebeabf525 in memory
flw f21, 0(x2) # load 0x76c3630ebeabf525 from memory into f21
li x3, 0x704ab5e72d2ac91b # load x3 with value 0x704ab5e72d2ac91b
sw x3, 0(x2) # store 0x704ab5e72d2ac91b in memory
flw f23, 0(x2) # load 0x704ab5e72d2ac91b from memory into f23
fmadd.s f21, f3, f21, f23 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f22)
li x22, 0x6577b229637efb4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6f396643797a03c9 # load x3 with value 0x6f396643797a03c9
sw x3, 0(x2) # store 0x6f396643797a03c9 in memory
flw f18, 0(x2) # load 0x6f396643797a03c9 from memory into f18
li x3, 0x2ec7ad14474cfbbb # load x3 with value 0x2ec7ad14474cfbbb
sw x3, 0(x2) # store 0x2ec7ad14474cfbbb in memory
flw f22, 0(x2) # load 0x2ec7ad14474cfbbb from memory into f22
li x3, 0x4e6513c6b1de5fc6 # load x3 with value 0x4e6513c6b1de5fc6
sw x3, 0(x2) # store 0x4e6513c6b1de5fc6 in memory
flw f12, 0(x2) # load 0x4e6513c6b1de5fc6 from memory into f12
fmadd.s f22, f18, f22, f12 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f23)
li x23, 0x7f5a9e4c6a8fa6c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a822e0d87efd585 # load x3 with value 0x1a822e0d87efd585
sw x3, 0(x2) # store 0x1a822e0d87efd585 in memory
flw f12, 0(x2) # load 0x1a822e0d87efd585 from memory into f12
li x3, 0x787d26587eb84237 # load x3 with value 0x787d26587eb84237
sw x3, 0(x2) # store 0x787d26587eb84237 in memory
flw f23, 0(x2) # load 0x787d26587eb84237 from memory into f23
li x3, 0xdf16133812edc4de # load x3 with value 0xdf16133812edc4de
sw x3, 0(x2) # store 0xdf16133812edc4de in memory
flw f15, 0(x2) # load 0xdf16133812edc4de from memory into f15
fmadd.s f23, f12, f23, f15 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f24)
li x24, 0x62b2e0430a1673f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdbc7339803633048 # load x3 with value 0xdbc7339803633048
sw x3, 0(x2) # store 0xdbc7339803633048 in memory
flw f10, 0(x2) # load 0xdbc7339803633048 from memory into f10
li x3, 0xbfeed635a22871d2 # load x3 with value 0xbfeed635a22871d2
sw x3, 0(x2) # store 0xbfeed635a22871d2 in memory
flw f24, 0(x2) # load 0xbfeed635a22871d2 from memory into f24
li x3, 0xf57387be4a3d6369 # load x3 with value 0xf57387be4a3d6369
sw x3, 0(x2) # store 0xf57387be4a3d6369 in memory
flw f2, 0(x2) # load 0xf57387be4a3d6369 from memory into f2
fmadd.s f24, f10, f24, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f25)
li x25, 0xf3c6b5c1ecc13a4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x69d3c397c81f4b23 # load x3 with value 0x69d3c397c81f4b23
sw x3, 0(x2) # store 0x69d3c397c81f4b23 in memory
flw f29, 0(x2) # load 0x69d3c397c81f4b23 from memory into f29
li x3, 0x6d8f291ed8c3e24d # load x3 with value 0x6d8f291ed8c3e24d
sw x3, 0(x2) # store 0x6d8f291ed8c3e24d in memory
flw f25, 0(x2) # load 0x6d8f291ed8c3e24d from memory into f25
li x3, 0x2587604a8c941a1d # load x3 with value 0x2587604a8c941a1d
sw x3, 0(x2) # store 0x2587604a8c941a1d in memory
flw f2, 0(x2) # load 0x2587604a8c941a1d from memory into f2
fmadd.s f25, f29, f25, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f26)
li x26, 0xb3bab92dc57906eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcd250db265b05a08 # load x3 with value 0xcd250db265b05a08
sw x3, 0(x2) # store 0xcd250db265b05a08 in memory
flw f19, 0(x2) # load 0xcd250db265b05a08 from memory into f19
li x3, 0xaa94499f063d4321 # load x3 with value 0xaa94499f063d4321
sw x3, 0(x2) # store 0xaa94499f063d4321 in memory
flw f26, 0(x2) # load 0xaa94499f063d4321 from memory into f26
li x3, 0x952e63facc7e6e00 # load x3 with value 0x952e63facc7e6e00
sw x3, 0(x2) # store 0x952e63facc7e6e00 in memory
flw f13, 0(x2) # load 0x952e63facc7e6e00 from memory into f13
fmadd.s f26, f19, f26, f13 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f27)
li x27, 0xe75965df80bb06c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe63a96a5883e519 # load x3 with value 0xbe63a96a5883e519
sw x3, 0(x2) # store 0xbe63a96a5883e519 in memory
flw f16, 0(x2) # load 0xbe63a96a5883e519 from memory into f16
li x3, 0x389252a339117f3 # load x3 with value 0x389252a339117f3
sw x3, 0(x2) # store 0x389252a339117f3 in memory
flw f27, 0(x2) # load 0x389252a339117f3 from memory into f27
li x3, 0xfb04423bba0002d8 # load x3 with value 0xfb04423bba0002d8
sw x3, 0(x2) # store 0xfb04423bba0002d8 in memory
flw f14, 0(x2) # load 0xfb04423bba0002d8 from memory into f14
fmadd.s f27, f16, f27, f14 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f28)
li x28, 0xb4d785a9eb168b64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xec3331142af362d8 # load x3 with value 0xec3331142af362d8
sw x3, 0(x2) # store 0xec3331142af362d8 in memory
flw f19, 0(x2) # load 0xec3331142af362d8 from memory into f19
li x3, 0x90b17bd4a868d286 # load x3 with value 0x90b17bd4a868d286
sw x3, 0(x2) # store 0x90b17bd4a868d286 in memory
flw f28, 0(x2) # load 0x90b17bd4a868d286 from memory into f28
li x3, 0x7bbfefed4b61a5b8 # load x3 with value 0x7bbfefed4b61a5b8
sw x3, 0(x2) # store 0x7bbfefed4b61a5b8 in memory
flw f8, 0(x2) # load 0x7bbfefed4b61a5b8 from memory into f8
fmadd.s f28, f19, f28, f8 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f29)
li x29, 0x9a9e509a1a1921b4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x527681b82bb794ea # load x3 with value 0x527681b82bb794ea
sw x3, 0(x2) # store 0x527681b82bb794ea in memory
flw f1, 0(x2) # load 0x527681b82bb794ea from memory into f1
li x3, 0x7d9c491c3dc2e537 # load x3 with value 0x7d9c491c3dc2e537
sw x3, 0(x2) # store 0x7d9c491c3dc2e537 in memory
flw f29, 0(x2) # load 0x7d9c491c3dc2e537 from memory into f29
li x3, 0x6a59ff7fbf419ed5 # load x3 with value 0x6a59ff7fbf419ed5
sw x3, 0(x2) # store 0x6a59ff7fbf419ed5 in memory
flw f2, 0(x2) # load 0x6a59ff7fbf419ed5 from memory into f2
fmadd.s f29, f1, f29, f2 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f30)
li x30, 0x83e95db7b2d6cbcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa8e46ea0f59c2670 # load x3 with value 0xa8e46ea0f59c2670
sw x3, 0(x2) # store 0xa8e46ea0f59c2670 in memory
flw f13, 0(x2) # load 0xa8e46ea0f59c2670 from memory into f13
li x3, 0x4ce6acf1a477ae70 # load x3 with value 0x4ce6acf1a477ae70
sw x3, 0(x2) # store 0x4ce6acf1a477ae70 in memory
flw f30, 0(x2) # load 0x4ce6acf1a477ae70 from memory into f30
li x3, 0x4cbce6253b194241 # load x3 with value 0x4cbce6253b194241
sw x3, 0(x2) # store 0x4cbce6253b194241 in memory
flw f9, 0(x2) # load 0x4cbce6253b194241 from memory into f9
fmadd.s f30, f13, f30, f9 # perform operation

# Testcase cmp_fd_fs2 (Test fd = fs2 = f31)
li x31, 0xe14a859c29763cfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb9eb18bdbfc1224 # load x3 with value 0xdb9eb18bdbfc1224
sw x3, 0(x2) # store 0xdb9eb18bdbfc1224 in memory
flw f30, 0(x2) # load 0xdb9eb18bdbfc1224 from memory into f30
li x3, 0x730bff30fee14bad # load x3 with value 0x730bff30fee14bad
sw x3, 0(x2) # store 0x730bff30fee14bad in memory
flw f31, 0(x2) # load 0x730bff30fee14bad from memory into f31
li x3, 0x703418d9a24bb182 # load x3 with value 0x703418d9a24bb182
sw x3, 0(x2) # store 0x703418d9a24bb182 in memory
flw f9, 0(x2) # load 0x703418d9a24bb182 from memory into f9
fmadd.s f31, f30, f31, f9 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x0)
li x5, 0xe76cd81ae0301de6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0xbfca425932f39e33 # load x3 with value 0xbfca425932f39e33
sw x3, 0(x2) # store 0xbfca425932f39e33 in memory
flw f21, 0(x2) # load 0xbfca425932f39e33 from memory into f21
li x3, 0x325b52d101b9535a # load x3 with value 0x325b52d101b9535a
sw x3, 0(x2) # store 0x325b52d101b9535a in memory
flw f24, 0(x2) # load 0x325b52d101b9535a from memory into f24
fmadd.s f5, f12, f21, f24 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000000)
li x24, 0x5ee67a7c18a94845 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0xc62ecf12c6494ac1 # load x3 with value 0xc62ecf12c6494ac1
sw x3, 0(x2) # store 0xc62ecf12c6494ac1 in memory
flw f3, 0(x2) # load 0xc62ecf12c6494ac1 from memory into f3
li x3, 0x16ed77dbf0b5ab94 # load x3 with value 0x16ed77dbf0b5ab94
sw x3, 0(x2) # store 0x16ed77dbf0b5ab94 in memory
flw f29, 0(x2) # load 0x16ed77dbf0b5ab94 from memory into f29
fmadd.s f24, f5, f3, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3f800000)
li x15, 0x8c489c675d162ae2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x1b40db213852da93 # load x3 with value 0x1b40db213852da93
sw x3, 0(x2) # store 0x1b40db213852da93 in memory
flw f11, 0(x2) # load 0x1b40db213852da93 from memory into f11
li x3, 0xcff2906403651586 # load x3 with value 0xcff2906403651586
sw x3, 0(x2) # store 0xcff2906403651586 in memory
flw f5, 0(x2) # load 0xcff2906403651586 from memory into f5
fmadd.s f15, f19, f11, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbf800000)
li x10, 0xb42264af73ffe7f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0x7f1131f281ec5f5f # load x3 with value 0x7f1131f281ec5f5f
sw x3, 0(x2) # store 0x7f1131f281ec5f5f in memory
flw f20, 0(x2) # load 0x7f1131f281ec5f5f from memory into f20
li x3, 0x8509407e5a8d62e4 # load x3 with value 0x8509407e5a8d62e4
sw x3, 0(x2) # store 0x8509407e5a8d62e4 in memory
flw f16, 0(x2) # load 0x8509407e5a8d62e4 from memory into f16
fmadd.s f10, f6, f20, f16 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x3fc00000)
li x10, 0xe692e61738af4401 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x5474add3d69820e0 # load x3 with value 0x5474add3d69820e0
sw x3, 0(x2) # store 0x5474add3d69820e0 in memory
flw f23, 0(x2) # load 0x5474add3d69820e0 from memory into f23
li x3, 0x852a206abf8f68c3 # load x3 with value 0x852a206abf8f68c3
sw x3, 0(x2) # store 0x852a206abf8f68c3 in memory
flw f14, 0(x2) # load 0x852a206abf8f68c3 from memory into f14
fmadd.s f10, f15, f23, f14 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xbfc00000)
li x3, 0x48263cc3306c33e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x496557db4865159b # load x3 with value 0x496557db4865159b
sw x3, 0(x2) # store 0x496557db4865159b in memory
flw f19, 0(x2) # load 0x496557db4865159b from memory into f19
li x3, 0x3378e36c4531fdd1 # load x3 with value 0x3378e36c4531fdd1
sw x3, 0(x2) # store 0x3378e36c4531fdd1 in memory
flw f5, 0(x2) # load 0x3378e36c4531fdd1 from memory into f5
fmadd.s f3, f12, f19, f5 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x40000000)
li x19, 0x2f0e506a93430b34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x3321edafb5bf600c # load x3 with value 0x3321edafb5bf600c
sw x3, 0(x2) # store 0x3321edafb5bf600c in memory
flw f9, 0(x2) # load 0x3321edafb5bf600c from memory into f9
li x3, 0x4e3f81d3ba7f8b45 # load x3 with value 0x4e3f81d3ba7f8b45
sw x3, 0(x2) # store 0x4e3f81d3ba7f8b45 in memory
flw f21, 0(x2) # load 0x4e3f81d3ba7f8b45 from memory into f21
fmadd.s f19, f11, f9, f21 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xc0000000)
li x21, 0xf4d49193033acce3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f8, 0(x2) # load 0xc0000000 from memory into f8
li x3, 0xa71efd911913361c # load x3 with value 0xa71efd911913361c
sw x3, 0(x2) # store 0xa71efd911913361c in memory
flw f25, 0(x2) # load 0xa71efd911913361c from memory into f25
li x3, 0x2df11cf228c68da8 # load x3 with value 0x2df11cf228c68da8
sw x3, 0(x2) # store 0x2df11cf228c68da8 in memory
flw f26, 0(x2) # load 0x2df11cf228c68da8 from memory into f26
fmadd.s f21, f8, f25, f26 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x800000)
li x3, 0xb69f9b5ae1d763e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0xd0ebb1f0cf1e2a12 # load x3 with value 0xd0ebb1f0cf1e2a12
sw x3, 0(x2) # store 0xd0ebb1f0cf1e2a12 in memory
flw f24, 0(x2) # load 0xd0ebb1f0cf1e2a12 from memory into f24
li x3, 0x25cd7ad36178455a # load x3 with value 0x25cd7ad36178455a
sw x3, 0(x2) # store 0x25cd7ad36178455a in memory
flw f17, 0(x2) # load 0x25cd7ad36178455a from memory into f17
fmadd.s f3, f1, f24, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80800000)
li x28, 0x6f40400b707c2185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x1873927b978bab55 # load x3 with value 0x1873927b978bab55
sw x3, 0(x2) # store 0x1873927b978bab55 in memory
flw f22, 0(x2) # load 0x1873927b978bab55 from memory into f22
li x3, 0x49c13b3d30747b18 # load x3 with value 0x49c13b3d30747b18
sw x3, 0(x2) # store 0x49c13b3d30747b18 in memory
flw f1, 0(x2) # load 0x49c13b3d30747b18 from memory into f1
fmadd.s f28, f17, f22, f1 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f7fffff)
li x29, 0xf5f6713af856615e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x2bd03dba3cb294a2 # load x3 with value 0x2bd03dba3cb294a2
sw x3, 0(x2) # store 0x2bd03dba3cb294a2 in memory
flw f17, 0(x2) # load 0x2bd03dba3cb294a2 from memory into f17
li x3, 0xeee055e8686c43e8 # load x3 with value 0xeee055e8686c43e8
sw x3, 0(x2) # store 0xeee055e8686c43e8 in memory
flw f15, 0(x2) # load 0xeee055e8686c43e8 from memory into f15
fmadd.s f29, f10, f17, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff7fffff)
li x28, 0xa4f592eae5df9661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x41dd6dde9c99852 # load x3 with value 0x41dd6dde9c99852
sw x3, 0(x2) # store 0x41dd6dde9c99852 in memory
flw f19, 0(x2) # load 0x41dd6dde9c99852 from memory into f19
li x3, 0x3e25518205a24616 # load x3 with value 0x3e25518205a24616
sw x3, 0(x2) # store 0x3e25518205a24616 in memory
flw f22, 0(x2) # load 0x3e25518205a24616 from memory into f22
fmadd.s f28, f3, f19, f22 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffff)
li x20, 0x039c2997c4408c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x41f9a695c997a5a8 # load x3 with value 0x41f9a695c997a5a8
sw x3, 0(x2) # store 0x41f9a695c997a5a8 in memory
flw f2, 0(x2) # load 0x41f9a695c997a5a8 from memory into f2
li x3, 0x4fcdcc1233e7f2ce # load x3 with value 0x4fcdcc1233e7f2ce
sw x3, 0(x2) # store 0x4fcdcc1233e7f2ce in memory
flw f12, 0(x2) # load 0x4fcdcc1233e7f2ce from memory into f12
fmadd.s f20, f4, f2, f12 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x807fffff)
li x22, 0x60faf99c7f755d30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0xc6f381ebb08f7c06 # load x3 with value 0xc6f381ebb08f7c06
sw x3, 0(x2) # store 0xc6f381ebb08f7c06 in memory
flw f3, 0(x2) # load 0xc6f381ebb08f7c06 from memory into f3
li x3, 0x87b2b3d3ae3626de # load x3 with value 0x87b2b3d3ae3626de
sw x3, 0(x2) # store 0x87b2b3d3ae3626de in memory
flw f13, 0(x2) # load 0x87b2b3d3ae3626de from memory into f13
fmadd.s f22, f12, f3, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x400000)
li x10, 0xa6f56f8ec1a2e5e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x438d8abd31a95d88 # load x3 with value 0x438d8abd31a95d88
sw x3, 0(x2) # store 0x438d8abd31a95d88 in memory
flw f31, 0(x2) # load 0x438d8abd31a95d88 from memory into f31
li x3, 0xf2df11106ee8f758 # load x3 with value 0xf2df11106ee8f758
sw x3, 0(x2) # store 0xf2df11106ee8f758 in memory
flw f30, 0(x2) # load 0xf2df11106ee8f758 from memory into f30
fmadd.s f10, f13, f31, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80400000)
li x31, 0x399703a574cf4ec0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
li x3, 0x1d4b92c726dc05d6 # load x3 with value 0x1d4b92c726dc05d6
sw x3, 0(x2) # store 0x1d4b92c726dc05d6 in memory
flw f24, 0(x2) # load 0x1d4b92c726dc05d6 from memory into f24
li x3, 0xa63b27d909916e2d # load x3 with value 0xa63b27d909916e2d
sw x3, 0(x2) # store 0xa63b27d909916e2d in memory
flw f17, 0(x2) # load 0xa63b27d909916e2d from memory into f17
fmadd.s f31, f28, f24, f17 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x1)
li x25, 0x4f6a9523f99d2dec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0xbcc27a5bc1de1059 # load x3 with value 0xbcc27a5bc1de1059
sw x3, 0(x2) # store 0xbcc27a5bc1de1059 in memory
flw f8, 0(x2) # load 0xbcc27a5bc1de1059 from memory into f8
li x3, 0x235463d037cea7a0 # load x3 with value 0x235463d037cea7a0
sw x3, 0(x2) # store 0x235463d037cea7a0 in memory
flw f29, 0(x2) # load 0x235463d037cea7a0 from memory into f29
fmadd.s f25, f28, f8, f29 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x80000001)
li x20, 0xd3e99eab4623701b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0xb05fa7f6b82daa66 # load x3 with value 0xb05fa7f6b82daa66
sw x3, 0(x2) # store 0xb05fa7f6b82daa66 in memory
flw f21, 0(x2) # load 0xb05fa7f6b82daa66 from memory into f21
li x3, 0xcef880298699b528 # load x3 with value 0xcef880298699b528
sw x3, 0(x2) # store 0xcef880298699b528 in memory
flw f10, 0(x2) # load 0xcef880298699b528 from memory into f10
fmadd.s f20, f9, f21, f10 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800000)
li x25, 0x5074ea7211d22037 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x2ed021fdc664903f # load x3 with value 0x2ed021fdc664903f
sw x3, 0(x2) # store 0x2ed021fdc664903f in memory
flw f13, 0(x2) # load 0x2ed021fdc664903f from memory into f13
li x3, 0x7d2ec300fa09e4b0 # load x3 with value 0x7d2ec300fa09e4b0
sw x3, 0(x2) # store 0x7d2ec300fa09e4b0 in memory
flw f7, 0(x2) # load 0x7d2ec300fa09e4b0 from memory into f7
fmadd.s f25, f14, f13, f7 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0xff800000)
li x25, 0x4ac04b4436f7a003 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x64b584e944ece39e # load x3 with value 0x64b584e944ece39e
sw x3, 0(x2) # store 0x64b584e944ece39e in memory
flw f27, 0(x2) # load 0x64b584e944ece39e from memory into f27
li x3, 0xaf77d09f1728a7f3 # load x3 with value 0xaf77d09f1728a7f3
sw x3, 0(x2) # store 0xaf77d09f1728a7f3 in memory
flw f13, 0(x2) # load 0xaf77d09f1728a7f3 from memory into f13
fmadd.s f25, f15, f27, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fc00000)
li x11, 0x74654302fd225345 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x95716f19a110ca1f # load x3 with value 0x95716f19a110ca1f
sw x3, 0(x2) # store 0x95716f19a110ca1f in memory
flw f16, 0(x2) # load 0x95716f19a110ca1f from memory into f16
li x3, 0x7ac92c0acd1acb10 # load x3 with value 0x7ac92c0acd1acb10
sw x3, 0(x2) # store 0x7ac92c0acd1acb10 in memory
flw f13, 0(x2) # load 0x7ac92c0acd1acb10 from memory into f13
fmadd.s f11, f12, f16, f13 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fffffff)
li x11, 0x9349d8326aa04110 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x90026b3c3c14b54d # load x3 with value 0x90026b3c3c14b54d
sw x3, 0(x2) # store 0x90026b3c3c14b54d in memory
flw f29, 0(x2) # load 0x90026b3c3c14b54d from memory into f29
li x3, 0x3407a033c0e9c945 # load x3 with value 0x3407a033c0e9c945
sw x3, 0(x2) # store 0x3407a033c0e9c945 in memory
flw f20, 0(x2) # load 0x3407a033c0e9c945 from memory into f20
fmadd.s f11, f26, f29, f20 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7f800001)
li x22, 0xd59ff769159d8f32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xc6e999fc4e6047ae # load x3 with value 0xc6e999fc4e6047ae
sw x3, 0(x2) # store 0xc6e999fc4e6047ae in memory
flw f26, 0(x2) # load 0xc6e999fc4e6047ae from memory into f26
li x3, 0x97649d4749860447 # load x3 with value 0x97649d4749860447
sw x3, 0(x2) # store 0x97649d4749860447 in memory
flw f30, 0(x2) # load 0x97649d4749860447 from memory into f30
fmadd.s f22, f7, f26, f30 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7fbfffff)
li x17, 0xa44b62543b9dd543 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xf9936600f5a571c # load x3 with value 0xf9936600f5a571c
sw x3, 0(x2) # store 0xf9936600f5a571c in memory
flw f2, 0(x2) # load 0xf9936600f5a571c from memory into f2
li x3, 0xb7b28b159984032f # load x3 with value 0xb7b28b159984032f
sw x3, 0(x2) # store 0xb7b28b159984032f in memory
flw f11, 0(x2) # load 0xb7b28b159984032f from memory into f11
fmadd.s f17, f27, f2, f11 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x7ef8654f)
li x28, 0x735c145d8f840270 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0x22a53423ad372d9 # load x3 with value 0x22a53423ad372d9
sw x3, 0(x2) # store 0x22a53423ad372d9 in memory
flw f4, 0(x2) # load 0x22a53423ad372d9 from memory into f4
li x3, 0x62561fa03ffd0ed9 # load x3 with value 0x62561fa03ffd0ed9
sw x3, 0(x2) # store 0x62561fa03ffd0ed9 in memory
flw f15, 0(x2) # load 0x62561fa03ffd0ed9 from memory into f15
fmadd.s f28, f24, f4, f15 # perform operation

# Testcase cp_fs1_corners (Test source fs1 value = 0x813d9ab0)
li x12, 0x3de05fc5b9f19fa0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0x99bd7974012c2102 # load x3 with value 0x99bd7974012c2102
sw x3, 0(x2) # store 0x99bd7974012c2102 in memory
flw f25, 0(x2) # load 0x99bd7974012c2102 from memory into f25
li x3, 0x5402e363cb4b3e93 # load x3 with value 0x5402e363cb4b3e93
sw x3, 0(x2) # store 0x5402e363cb4b3e93 in memory
flw f8, 0(x2) # load 0x5402e363cb4b3e93 from memory into f8
fmadd.s f12, f7, f25, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x0)
li x8, 0x4684974820e53e71 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf378dbed0292ceb # load x3 with value 0xf378dbed0292ceb
sw x3, 0(x2) # store 0xf378dbed0292ceb in memory
flw f25, 0(x2) # load 0xf378dbed0292ceb from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xab79f49806dad469 # load x3 with value 0xab79f49806dad469
sw x3, 0(x2) # store 0xab79f49806dad469 in memory
flw f16, 0(x2) # load 0xab79f49806dad469 from memory into f16
fmadd.s f8, f25, f4, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000000)
li x9, 0x6a8af49f7d33e555 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc8f1c8c87ba8d30d # load x3 with value 0xc8f1c8c87ba8d30d
sw x3, 0(x2) # store 0xc8f1c8c87ba8d30d in memory
flw f4, 0(x2) # load 0xc8f1c8c87ba8d30d from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
li x3, 0xed55e6ecd1bc3ff8 # load x3 with value 0xed55e6ecd1bc3ff8
sw x3, 0(x2) # store 0xed55e6ecd1bc3ff8 in memory
flw f8, 0(x2) # load 0xed55e6ecd1bc3ff8 from memory into f8
fmadd.s f9, f4, f15, f8 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3f800000)
li x21, 0xda6d7da4342f6dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x875ec002494264c2 # load x3 with value 0x875ec002494264c2
sw x3, 0(x2) # store 0x875ec002494264c2 in memory
flw f4, 0(x2) # load 0x875ec002494264c2 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0xd0583eb20d99b2a2 # load x3 with value 0xd0583eb20d99b2a2
sw x3, 0(x2) # store 0xd0583eb20d99b2a2 in memory
flw f31, 0(x2) # load 0xd0583eb20d99b2a2 from memory into f31
fmadd.s f21, f4, f20, f31 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbf800000)
li x11, 0x5c69963c7234cbe3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4b6e84190790cf98 # load x3 with value 0x4b6e84190790cf98
sw x3, 0(x2) # store 0x4b6e84190790cf98 in memory
flw f27, 0(x2) # load 0x4b6e84190790cf98 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x958c61ae63a311b9 # load x3 with value 0x958c61ae63a311b9
sw x3, 0(x2) # store 0x958c61ae63a311b9 in memory
flw f16, 0(x2) # load 0x958c61ae63a311b9 from memory into f16
fmadd.s f11, f27, f3, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x3fc00000)
li x8, 0xf77db4e80b5293c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x11c710fd9aa1521f # load x3 with value 0x11c710fd9aa1521f
sw x3, 0(x2) # store 0x11c710fd9aa1521f in memory
flw f28, 0(x2) # load 0x11c710fd9aa1521f from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x1e42362970db57a8 # load x3 with value 0x1e42362970db57a8
sw x3, 0(x2) # store 0x1e42362970db57a8 in memory
flw f16, 0(x2) # load 0x1e42362970db57a8 from memory into f16
fmadd.s f8, f28, f3, f16 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xbfc00000)
li x3, 0xd2453cb42cb19dc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5140d6ceb698e513 # load x3 with value 0x5140d6ceb698e513
sw x3, 0(x2) # store 0x5140d6ceb698e513 in memory
flw f5, 0(x2) # load 0x5140d6ceb698e513 from memory into f5
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x7cf43c217d0370a5 # load x3 with value 0x7cf43c217d0370a5
sw x3, 0(x2) # store 0x7cf43c217d0370a5 in memory
flw f15, 0(x2) # load 0x7cf43c217d0370a5 from memory into f15
fmadd.s f3, f5, f27, f15 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x40000000)
li x2, 0xd19727e5d7f54b5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87764e4d251f38 # load x3 with value 0x87764e4d251f38
sw x3, 0(x2) # store 0x87764e4d251f38 in memory
flw f31, 0(x2) # load 0x87764e4d251f38 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xe3a5ce9b1744a2b8 # load x3 with value 0xe3a5ce9b1744a2b8
sw x3, 0(x2) # store 0xe3a5ce9b1744a2b8 in memory
flw f25, 0(x2) # load 0xe3a5ce9b1744a2b8 from memory into f25
fmadd.s f2, f31, f4, f25 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xc0000000)
li x15, 0x693d72678957512a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89f7874dcbe52dd # load x3 with value 0x89f7874dcbe52dd
sw x3, 0(x2) # store 0x89f7874dcbe52dd in memory
flw f10, 0(x2) # load 0x89f7874dcbe52dd from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x86abd7f9e7333afb # load x3 with value 0x86abd7f9e7333afb
sw x3, 0(x2) # store 0x86abd7f9e7333afb in memory
flw f3, 0(x2) # load 0x86abd7f9e7333afb from memory into f3
fmadd.s f15, f10, f27, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x800000)
li x4, 0x901b5fef768af9a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f7b0904b2d8e847 # load x3 with value 0x9f7b0904b2d8e847
sw x3, 0(x2) # store 0x9f7b0904b2d8e847 in memory
flw f12, 0(x2) # load 0x9f7b0904b2d8e847 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0xc7e5b3d1371c7b08 # load x3 with value 0xc7e5b3d1371c7b08
sw x3, 0(x2) # store 0xc7e5b3d1371c7b08 in memory
flw f9, 0(x2) # load 0xc7e5b3d1371c7b08 from memory into f9
fmadd.s f4, f12, f30, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80800000)
li x7, 0xfce37b26c21e7d1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x482e9b8338cd933b # load x3 with value 0x482e9b8338cd933b
sw x3, 0(x2) # store 0x482e9b8338cd933b in memory
flw f13, 0(x2) # load 0x482e9b8338cd933b from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x783d2130c010c2c9 # load x3 with value 0x783d2130c010c2c9
sw x3, 0(x2) # store 0x783d2130c010c2c9 in memory
flw f10, 0(x2) # load 0x783d2130c010c2c9 from memory into f10
fmadd.s f7, f13, f15, f10 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f7fffff)
li x24, 0xb447621b0404f00f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf46bf43fcfd9381 # load x3 with value 0xbf46bf43fcfd9381
sw x3, 0(x2) # store 0xbf46bf43fcfd9381 in memory
flw f5, 0(x2) # load 0xbf46bf43fcfd9381 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0x77632ef1f834a633 # load x3 with value 0x77632ef1f834a633
sw x3, 0(x2) # store 0x77632ef1f834a633 in memory
flw f4, 0(x2) # load 0x77632ef1f834a633 from memory into f4
fmadd.s f24, f5, f3, f4 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff7fffff)
li x7, 0x618cf177021c5f5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x481fc1e0897afaa0 # load x3 with value 0x481fc1e0897afaa0
sw x3, 0(x2) # store 0x481fc1e0897afaa0 in memory
flw f18, 0(x2) # load 0x481fc1e0897afaa0 from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x730675553b290b37 # load x3 with value 0x730675553b290b37
sw x3, 0(x2) # store 0x730675553b290b37 in memory
flw f17, 0(x2) # load 0x730675553b290b37 from memory into f17
fmadd.s f7, f18, f13, f17 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffff)
li x19, 0xa9a841a3edaeed49 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d49ad834e3e7d23 # load x3 with value 0x4d49ad834e3e7d23
sw x3, 0(x2) # store 0x4d49ad834e3e7d23 in memory
flw f2, 0(x2) # load 0x4d49ad834e3e7d23 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0xf3bc7c3d7b5b392 # load x3 with value 0xf3bc7c3d7b5b392
sw x3, 0(x2) # store 0xf3bc7c3d7b5b392 in memory
flw f30, 0(x2) # load 0xf3bc7c3d7b5b392 from memory into f30
fmadd.s f19, f2, f28, f30 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x807fffff)
li x10, 0x9b37a78013ca053e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x24930f580c11c3c4 # load x3 with value 0x24930f580c11c3c4
sw x3, 0(x2) # store 0x24930f580c11c3c4 in memory
flw f6, 0(x2) # load 0x24930f580c11c3c4 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x7846fcf33e03d21a # load x3 with value 0x7846fcf33e03d21a
sw x3, 0(x2) # store 0x7846fcf33e03d21a in memory
flw f26, 0(x2) # load 0x7846fcf33e03d21a from memory into f26
fmadd.s f10, f6, f9, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x400000)
li x24, 0xe3d1d9d81b537c68 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8d1d78e19c81c1a3 # load x3 with value 0x8d1d78e19c81c1a3
sw x3, 0(x2) # store 0x8d1d78e19c81c1a3 in memory
flw f2, 0(x2) # load 0x8d1d78e19c81c1a3 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x60318d10b3ad69ce # load x3 with value 0x60318d10b3ad69ce
sw x3, 0(x2) # store 0x60318d10b3ad69ce in memory
flw f3, 0(x2) # load 0x60318d10b3ad69ce from memory into f3
fmadd.s f24, f2, f27, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80400000)
li x19, 0xd586e2d674598d9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc4a1405fd5e2841d # load x3 with value 0xc4a1405fd5e2841d
sw x3, 0(x2) # store 0xc4a1405fd5e2841d in memory
flw f28, 0(x2) # load 0xc4a1405fd5e2841d from memory into f28
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x2471ce1a5a662b59 # load x3 with value 0x2471ce1a5a662b59
sw x3, 0(x2) # store 0x2471ce1a5a662b59 in memory
flw f12, 0(x2) # load 0x2471ce1a5a662b59 from memory into f12
fmadd.s f19, f28, f13, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x1)
li x29, 0x111afef88e2b2aaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7457a70e8abcc05 # load x3 with value 0xd7457a70e8abcc05
sw x3, 0(x2) # store 0xd7457a70e8abcc05 in memory
flw f21, 0(x2) # load 0xd7457a70e8abcc05 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x80beaee845337867 # load x3 with value 0x80beaee845337867
sw x3, 0(x2) # store 0x80beaee845337867 in memory
flw f13, 0(x2) # load 0x80beaee845337867 from memory into f13
fmadd.s f29, f21, f15, f13 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x80000001)
li x27, 0x8ad1efd8b9c8be4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6adfd8d068f7ba46 # load x3 with value 0x6adfd8d068f7ba46
sw x3, 0(x2) # store 0x6adfd8d068f7ba46 in memory
flw f7, 0(x2) # load 0x6adfd8d068f7ba46 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f18, 0(x2) # load 0x80000001 from memory into f18
li x3, 0xecf80592389fdb6d # load x3 with value 0xecf80592389fdb6d
sw x3, 0(x2) # store 0xecf80592389fdb6d in memory
flw f9, 0(x2) # load 0xecf80592389fdb6d from memory into f9
fmadd.s f27, f7, f18, f9 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800000)
li x1, 0x39f90249442d7c56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32ea1f095a04c10c # load x3 with value 0x32ea1f095a04c10c
sw x3, 0(x2) # store 0x32ea1f095a04c10c in memory
flw f25, 0(x2) # load 0x32ea1f095a04c10c from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xe187cdf750c90bd1 # load x3 with value 0xe187cdf750c90bd1
sw x3, 0(x2) # store 0xe187cdf750c90bd1 in memory
flw f20, 0(x2) # load 0xe187cdf750c90bd1 from memory into f20
fmadd.s f1, f25, f24, f20 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0xff800000)
li x20, 0x31b07c420b10911a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x480d240120978714 # load x3 with value 0x480d240120978714
sw x3, 0(x2) # store 0x480d240120978714 in memory
flw f17, 0(x2) # load 0x480d240120978714 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
li x3, 0xd225fcb8c6b6790d # load x3 with value 0xd225fcb8c6b6790d
sw x3, 0(x2) # store 0xd225fcb8c6b6790d in memory
flw f3, 0(x2) # load 0xd225fcb8c6b6790d from memory into f3
fmadd.s f20, f17, f7, f3 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fc00000)
li x31, 0x101a8f99d9c56c75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1fa47813eab17f17 # load x3 with value 0x1fa47813eab17f17
sw x3, 0(x2) # store 0x1fa47813eab17f17 in memory
flw f17, 0(x2) # load 0x1fa47813eab17f17 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x7a8f1c16ce77be8 # load x3 with value 0x7a8f1c16ce77be8
sw x3, 0(x2) # store 0x7a8f1c16ce77be8 in memory
flw f22, 0(x2) # load 0x7a8f1c16ce77be8 from memory into f22
fmadd.s f31, f17, f21, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fffffff)
li x25, 0x2eac7a719cbccbe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2abc176bdb933210 # load x3 with value 0x2abc176bdb933210
sw x3, 0(x2) # store 0x2abc176bdb933210 in memory
flw f2, 0(x2) # load 0x2abc176bdb933210 from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x5d36271f672c893c # load x3 with value 0x5d36271f672c893c
sw x3, 0(x2) # store 0x5d36271f672c893c in memory
flw f26, 0(x2) # load 0x5d36271f672c893c from memory into f26
fmadd.s f25, f2, f14, f26 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7f800001)
li x6, 0xdbbcc36b5d2cdfd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xda9df13d55fcb416 # load x3 with value 0xda9df13d55fcb416
sw x3, 0(x2) # store 0xda9df13d55fcb416 in memory
flw f26, 0(x2) # load 0xda9df13d55fcb416 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0xba3ff28ee5f31ffc # load x3 with value 0xba3ff28ee5f31ffc
sw x3, 0(x2) # store 0xba3ff28ee5f31ffc in memory
flw f12, 0(x2) # load 0xba3ff28ee5f31ffc from memory into f12
fmadd.s f6, f26, f3, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7fbfffff)
li x17, 0xde848749ff206575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x909a65c3bcfd5461 # load x3 with value 0x909a65c3bcfd5461
sw x3, 0(x2) # store 0x909a65c3bcfd5461 in memory
flw f15, 0(x2) # load 0x909a65c3bcfd5461 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0xad65c2dc48b5e236 # load x3 with value 0xad65c2dc48b5e236
sw x3, 0(x2) # store 0xad65c2dc48b5e236 in memory
flw f12, 0(x2) # load 0xad65c2dc48b5e236 from memory into f12
fmadd.s f17, f15, f3, f12 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x7ef8654f)
li x9, 0x3032585db44207ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcccd954e7038b629 # load x3 with value 0xcccd954e7038b629
sw x3, 0(x2) # store 0xcccd954e7038b629 in memory
flw f29, 0(x2) # load 0xcccd954e7038b629 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x684f26cad0e13c4c # load x3 with value 0x684f26cad0e13c4c
sw x3, 0(x2) # store 0x684f26cad0e13c4c in memory
flw f22, 0(x2) # load 0x684f26cad0e13c4c from memory into f22
fmadd.s f9, f29, f26, f22 # perform operation

# Testcase cp_fs2_corners (Test source fs2 value = 0x813d9ab0)
li x7, 0x3d64176b2c662d1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x758524cf9d72ca7 # load x3 with value 0x758524cf9d72ca7
sw x3, 0(x2) # store 0x758524cf9d72ca7 in memory
flw f14, 0(x2) # load 0x758524cf9d72ca7 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x20c4f20a937f1f09 # load x3 with value 0x20c4f20a937f1f09
sw x3, 0(x2) # store 0x20c4f20a937f1f09 in memory
flw f2, 0(x2) # load 0x20c4f20a937f1f09 from memory into f2
fmadd.s f7, f14, f23, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x0)
li x25, 0x3baf2013df8ef632 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa4717dad345d5806 # load x3 with value 0xa4717dad345d5806
sw x3, 0(x2) # store 0xa4717dad345d5806 in memory
flw f30, 0(x2) # load 0xa4717dad345d5806 from memory into f30
li x3, 0x406f003d2771ae85 # load x3 with value 0x406f003d2771ae85
sw x3, 0(x2) # store 0x406f003d2771ae85 in memory
flw f12, 0(x2) # load 0x406f003d2771ae85 from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
fmadd.s f25, f30, f12, f2 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000000)
li x10, 0x757f399198a80071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cfe0c40b7a8edf9 # load x3 with value 0x3cfe0c40b7a8edf9
sw x3, 0(x2) # store 0x3cfe0c40b7a8edf9 in memory
flw f26, 0(x2) # load 0x3cfe0c40b7a8edf9 from memory into f26
li x3, 0x89eb2449b8e46ea8 # load x3 with value 0x89eb2449b8e46ea8
sw x3, 0(x2) # store 0x89eb2449b8e46ea8 in memory
flw f24, 0(x2) # load 0x89eb2449b8e46ea8 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
fmadd.s f10, f26, f24, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3f800000)
li x24, 0x8a9e70314b13e83b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9367ad09dd77fa41 # load x3 with value 0x9367ad09dd77fa41
sw x3, 0(x2) # store 0x9367ad09dd77fa41 in memory
flw f7, 0(x2) # load 0x9367ad09dd77fa41 from memory into f7
li x3, 0x8f0b090f385c8d23 # load x3 with value 0x8f0b090f385c8d23
sw x3, 0(x2) # store 0x8f0b090f385c8d23 in memory
flw f3, 0(x2) # load 0x8f0b090f385c8d23 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmadd.s f24, f7, f3, f8 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbf800000)
li x18, 0xe5c5b68bc0bf6476 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5da606d82e809706 # load x3 with value 0x5da606d82e809706
sw x3, 0(x2) # store 0x5da606d82e809706 in memory
flw f17, 0(x2) # load 0x5da606d82e809706 from memory into f17
li x3, 0x287c714485aaec12 # load x3 with value 0x287c714485aaec12
sw x3, 0(x2) # store 0x287c714485aaec12 in memory
flw f6, 0(x2) # load 0x287c714485aaec12 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
fmadd.s f18, f17, f6, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x3fc00000)
li x28, 0xe9eef547b26b947f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4d1ac8699db81436 # load x3 with value 0x4d1ac8699db81436
sw x3, 0(x2) # store 0x4d1ac8699db81436 in memory
flw f6, 0(x2) # load 0x4d1ac8699db81436 from memory into f6
li x3, 0x585fefeec2b9eab2 # load x3 with value 0x585fefeec2b9eab2
sw x3, 0(x2) # store 0x585fefeec2b9eab2 in memory
flw f2, 0(x2) # load 0x585fefeec2b9eab2 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
fmadd.s f28, f6, f2, f26 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xbfc00000)
li x22, 0x61c070384b001311 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc65288fc8c26d49 # load x3 with value 0xc65288fc8c26d49
sw x3, 0(x2) # store 0xc65288fc8c26d49 in memory
flw f21, 0(x2) # load 0xc65288fc8c26d49 from memory into f21
li x3, 0x64add1b6c1afcd28 # load x3 with value 0x64add1b6c1afcd28
sw x3, 0(x2) # store 0x64add1b6c1afcd28 in memory
flw f4, 0(x2) # load 0x64add1b6c1afcd28 from memory into f4
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmadd.s f22, f21, f4, f11 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x40000000)
li x29, 0x7ad4d854fe286a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x75df639b24ae6c08 # load x3 with value 0x75df639b24ae6c08
sw x3, 0(x2) # store 0x75df639b24ae6c08 in memory
flw f18, 0(x2) # load 0x75df639b24ae6c08 from memory into f18
li x3, 0x7d3199e735b56526 # load x3 with value 0x7d3199e735b56526
sw x3, 0(x2) # store 0x7d3199e735b56526 in memory
flw f31, 0(x2) # load 0x7d3199e735b56526 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
fmadd.s f29, f18, f31, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xc0000000)
li x6, 0xae434abc37697419 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xadf3aae013848035 # load x3 with value 0xadf3aae013848035
sw x3, 0(x2) # store 0xadf3aae013848035 in memory
flw f24, 0(x2) # load 0xadf3aae013848035 from memory into f24
li x3, 0x60a38438caafbcab # load x3 with value 0x60a38438caafbcab
sw x3, 0(x2) # store 0x60a38438caafbcab in memory
flw f11, 0(x2) # load 0x60a38438caafbcab from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
fmadd.s f6, f24, f11, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x800000)
li x31, 0x4abd7ad91876b1a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd7e0d312063d09ab # load x3 with value 0xd7e0d312063d09ab
sw x3, 0(x2) # store 0xd7e0d312063d09ab in memory
flw f25, 0(x2) # load 0xd7e0d312063d09ab from memory into f25
li x3, 0x5d05ba046b06d12b # load x3 with value 0x5d05ba046b06d12b
sw x3, 0(x2) # store 0x5d05ba046b06d12b in memory
flw f20, 0(x2) # load 0x5d05ba046b06d12b from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
fmadd.s f31, f25, f20, f5 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80800000)
li x10, 0x5dad6093f10aec58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xaf53058453cc096 # load x3 with value 0xaf53058453cc096
sw x3, 0(x2) # store 0xaf53058453cc096 in memory
flw f31, 0(x2) # load 0xaf53058453cc096 from memory into f31
li x3, 0xa1ebd50542346bcb # load x3 with value 0xa1ebd50542346bcb
sw x3, 0(x2) # store 0xa1ebd50542346bcb in memory
flw f13, 0(x2) # load 0xa1ebd50542346bcb from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
fmadd.s f10, f31, f13, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f7fffff)
li x17, 0x2432c650f2b682f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6cb6b281797eee2 # load x3 with value 0xf6cb6b281797eee2
sw x3, 0(x2) # store 0xf6cb6b281797eee2 in memory
flw f6, 0(x2) # load 0xf6cb6b281797eee2 from memory into f6
li x3, 0x2e4772bde46763a1 # load x3 with value 0x2e4772bde46763a1
sw x3, 0(x2) # store 0x2e4772bde46763a1 in memory
flw f22, 0(x2) # load 0x2e4772bde46763a1 from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f23, 0(x2) # load 0x7f7fffff from memory into f23
fmadd.s f17, f6, f22, f23 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff7fffff)
li x20, 0x3e92ccbf5bff1586 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xeefa3cd57f3ca22b # load x3 with value 0xeefa3cd57f3ca22b
sw x3, 0(x2) # store 0xeefa3cd57f3ca22b in memory
flw f27, 0(x2) # load 0xeefa3cd57f3ca22b from memory into f27
li x3, 0x6df835cf16d2aecb # load x3 with value 0x6df835cf16d2aecb
sw x3, 0(x2) # store 0x6df835cf16d2aecb in memory
flw f10, 0(x2) # load 0x6df835cf16d2aecb from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f20, f27, f10, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffff)
li x16, 0x79a4fcdef5096038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x36725f356f0cc6b5 # load x3 with value 0x36725f356f0cc6b5
sw x3, 0(x2) # store 0x36725f356f0cc6b5 in memory
flw f15, 0(x2) # load 0x36725f356f0cc6b5 from memory into f15
li x3, 0xe5619decf56a93d9 # load x3 with value 0xe5619decf56a93d9
sw x3, 0(x2) # store 0xe5619decf56a93d9 in memory
flw f14, 0(x2) # load 0xe5619decf56a93d9 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
fmadd.s f16, f15, f14, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x807fffff)
li x26, 0xb2e8061443581a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x42ebde1003781d84 # load x3 with value 0x42ebde1003781d84
sw x3, 0(x2) # store 0x42ebde1003781d84 in memory
flw f30, 0(x2) # load 0x42ebde1003781d84 from memory into f30
li x3, 0x5b18ab922a6f45b8 # load x3 with value 0x5b18ab922a6f45b8
sw x3, 0(x2) # store 0x5b18ab922a6f45b8 in memory
flw f23, 0(x2) # load 0x5b18ab922a6f45b8 from memory into f23
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmadd.s f26, f30, f23, f28 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x400000)
li x29, 0x773e54239e432b56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87e7f1b2d70dba96 # load x3 with value 0x87e7f1b2d70dba96
sw x3, 0(x2) # store 0x87e7f1b2d70dba96 in memory
flw f10, 0(x2) # load 0x87e7f1b2d70dba96 from memory into f10
li x3, 0x56518845d4c9f777 # load x3 with value 0x56518845d4c9f777
sw x3, 0(x2) # store 0x56518845d4c9f777 in memory
flw f7, 0(x2) # load 0x56518845d4c9f777 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
fmadd.s f29, f10, f7, f18 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80400000)
li x20, 0xa77ae19002ae52a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd313362cdcf6ddba # load x3 with value 0xd313362cdcf6ddba
sw x3, 0(x2) # store 0xd313362cdcf6ddba in memory
flw f17, 0(x2) # load 0xd313362cdcf6ddba from memory into f17
li x3, 0xf79ccc8545c58e7e # load x3 with value 0xf79ccc8545c58e7e
sw x3, 0(x2) # store 0xf79ccc8545c58e7e in memory
flw f15, 0(x2) # load 0xf79ccc8545c58e7e from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
fmadd.s f20, f17, f15, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x1)
li x18, 0xc9daad83d7efc72e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x430b7fb167018551 # load x3 with value 0x430b7fb167018551
sw x3, 0(x2) # store 0x430b7fb167018551 in memory
flw f11, 0(x2) # load 0x430b7fb167018551 from memory into f11
li x3, 0xa11daa80e513003c # load x3 with value 0xa11daa80e513003c
sw x3, 0(x2) # store 0xa11daa80e513003c in memory
flw f27, 0(x2) # load 0xa11daa80e513003c from memory into f27
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmadd.s f18, f11, f27, f9 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x80000001)
li x20, 0xe67a96b55b46abe9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9748bb19fc2840c4 # load x3 with value 0x9748bb19fc2840c4
sw x3, 0(x2) # store 0x9748bb19fc2840c4 in memory
flw f17, 0(x2) # load 0x9748bb19fc2840c4 from memory into f17
li x3, 0x275fd9d3afbaa11c # load x3 with value 0x275fd9d3afbaa11c
sw x3, 0(x2) # store 0x275fd9d3afbaa11c in memory
flw f30, 0(x2) # load 0x275fd9d3afbaa11c from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmadd.s f20, f17, f30, f27 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800000)
li x13, 0x2c54f60c2d023015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9947d953e0553b3 # load x3 with value 0x9947d953e0553b3
sw x3, 0(x2) # store 0x9947d953e0553b3 in memory
flw f8, 0(x2) # load 0x9947d953e0553b3 from memory into f8
li x3, 0x467c3957b522b0f9 # load x3 with value 0x467c3957b522b0f9
sw x3, 0(x2) # store 0x467c3957b522b0f9 in memory
flw f4, 0(x2) # load 0x467c3957b522b0f9 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f21, 0(x2) # load 0x7f800000 from memory into f21
fmadd.s f13, f8, f4, f21 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0xff800000)
li x29, 0xd46552734b5926e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1f90e9190e87e30f # load x3 with value 0x1f90e9190e87e30f
sw x3, 0(x2) # store 0x1f90e9190e87e30f in memory
flw f12, 0(x2) # load 0x1f90e9190e87e30f from memory into f12
li x3, 0x103e5865e2846fa # load x3 with value 0x103e5865e2846fa
sw x3, 0(x2) # store 0x103e5865e2846fa in memory
flw f20, 0(x2) # load 0x103e5865e2846fa from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f29, f12, f20, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fc00000)
li x30, 0x6383f5eadc0048fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac6a9427465c482b # load x3 with value 0xac6a9427465c482b
sw x3, 0(x2) # store 0xac6a9427465c482b in memory
flw f1, 0(x2) # load 0xac6a9427465c482b from memory into f1
li x3, 0xa5e888c8453de20b # load x3 with value 0xa5e888c8453de20b
sw x3, 0(x2) # store 0xa5e888c8453de20b in memory
flw f29, 0(x2) # load 0xa5e888c8453de20b from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f30, f1, f29, f13 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fffffff)
li x1, 0x8c321e7517299db3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf951ece3e6787c3f # load x3 with value 0xf951ece3e6787c3f
sw x3, 0(x2) # store 0xf951ece3e6787c3f in memory
flw f28, 0(x2) # load 0xf951ece3e6787c3f from memory into f28
li x3, 0xba8e27e3500c95d2 # load x3 with value 0xba8e27e3500c95d2
sw x3, 0(x2) # store 0xba8e27e3500c95d2 in memory
flw f29, 0(x2) # load 0xba8e27e3500c95d2 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
fmadd.s f1, f28, f29, f19 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7f800001)
li x1, 0x1aae26a52d1c0dbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x89284ec3f32eaf8e # load x3 with value 0x89284ec3f32eaf8e
sw x3, 0(x2) # store 0x89284ec3f32eaf8e in memory
flw f17, 0(x2) # load 0x89284ec3f32eaf8e from memory into f17
li x3, 0xca1e169cd7c2d4ab # load x3 with value 0xca1e169cd7c2d4ab
sw x3, 0(x2) # store 0xca1e169cd7c2d4ab in memory
flw f12, 0(x2) # load 0xca1e169cd7c2d4ab from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
fmadd.s f1, f17, f12, f25 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7fbfffff)
li x29, 0x7482b9d4b3cb1704 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd01b73c43292cb79 # load x3 with value 0xd01b73c43292cb79
sw x3, 0(x2) # store 0xd01b73c43292cb79 in memory
flw f30, 0(x2) # load 0xd01b73c43292cb79 from memory into f30
li x3, 0x8b89da70c8004a14 # load x3 with value 0x8b89da70c8004a14
sw x3, 0(x2) # store 0x8b89da70c8004a14 in memory
flw f6, 0(x2) # load 0x8b89da70c8004a14 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
fmadd.s f29, f30, f6, f14 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x7ef8654f)
li x5, 0x8fea4689c272d3fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xef052a168bf1f81b # load x3 with value 0xef052a168bf1f81b
sw x3, 0(x2) # store 0xef052a168bf1f81b in memory
flw f28, 0(x2) # load 0xef052a168bf1f81b from memory into f28
li x3, 0x964d54e178e365f # load x3 with value 0x964d54e178e365f
sw x3, 0(x2) # store 0x964d54e178e365f in memory
flw f17, 0(x2) # load 0x964d54e178e365f from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
fmadd.s f5, f28, f17, f29 # perform operation

# Testcase cp_fs3_corners (Test source fs3 value = 0x813d9ab0)
li x20, 0x40b0b062b10540aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf49066477feac3d6 # load x3 with value 0xf49066477feac3d6
sw x3, 0(x2) # store 0xf49066477feac3d6 in memory
flw f31, 0(x2) # load 0xf49066477feac3d6 from memory into f31
li x3, 0x479edec07aab41bf # load x3 with value 0x479edec07aab41bf
sw x3, 0(x2) # store 0x479edec07aab41bf in memory
flw f13, 0(x2) # load 0x479edec07aab41bf from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmadd.s f20, f31, f13, f19 # perform operation

# Testcase cp_frm
li x3, 0xe3ad371b9f9486f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfe4cb5afe9a6e25a # load x3 with value 0xfe4cb5afe9a6e25a
sw x3, 0(x2) # store 0xfe4cb5afe9a6e25a in memory
flw f10, 0(x2) # load 0xfe4cb5afe9a6e25a from memory into f10
li x3, 0xcfd94db85777a35e # load x3 with value 0xcfd94db85777a35e
sw x3, 0(x2) # store 0xcfd94db85777a35e in memory
flw f4, 0(x2) # load 0xcfd94db85777a35e from memory into f4
li x3, 0x0000001d # load x3 with value 0x0000001d
sw x3, 0(x2) # store 0x0000001d in memory
flw f29, 0(x2) # load 0x0000001d from memory into f29
fmadd.s f3, f10, f4, f29, dyn # perform operation
fmadd.s f3, f10, f4, f29, rdn # perform operation
fmadd.s f3, f10, f4, f29, rmm # perform operation
fmadd.s f3, f10, f4, f29, rne # perform operation
fmadd.s f3, f10, f4, f29, rtz # perform operation
fmadd.s f3, f10, f4, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f4, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f4, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f4, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f4, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f4, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x0)
li x3, 0x84495eff40d62e82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0xc1e3fc23f366e0b2 # load x3 with value 0xc1e3fc23f366e0b2
sw x3, 0(x2) # store 0xc1e3fc23f366e0b2 in memory
flw f7, 0(x2) # load 0xc1e3fc23f366e0b2 from memory into f7
fmadd.s f3, f13, f10, f7, dyn # perform operation
fmadd.s f3, f13, f10, f7, rdn # perform operation
fmadd.s f3, f13, f10, f7, rmm # perform operation
fmadd.s f3, f13, f10, f7, rne # perform operation
fmadd.s f3, f13, f10, f7, rtz # perform operation
fmadd.s f3, f13, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000000)
li x10, 0x58d19944c74011a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x7c48295421cd0a7a # load x3 with value 0x7c48295421cd0a7a
sw x3, 0(x2) # store 0x7c48295421cd0a7a in memory
flw f18, 0(x2) # load 0x7c48295421cd0a7a from memory into f18
fmadd.s f10, f17, f6, f18, dyn # perform operation
fmadd.s f10, f17, f6, f18, rdn # perform operation
fmadd.s f10, f17, f6, f18, rmm # perform operation
fmadd.s f10, f17, f6, f18, rne # perform operation
fmadd.s f10, f17, f6, f18, rtz # perform operation
fmadd.s f10, f17, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f17, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f17, f6, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3f800000)
li x13, 0xf12c3ded8a18ada1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xea1723a9701fc03a # load x3 with value 0xea1723a9701fc03a
sw x3, 0(x2) # store 0xea1723a9701fc03a in memory
flw f8, 0(x2) # load 0xea1723a9701fc03a from memory into f8
fmadd.s f13, f19, f16, f8, dyn # perform operation
fmadd.s f13, f19, f16, f8, rdn # perform operation
fmadd.s f13, f19, f16, f8, rmm # perform operation
fmadd.s f13, f19, f16, f8, rne # perform operation
fmadd.s f13, f19, f16, f8, rtz # perform operation
fmadd.s f13, f19, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f16, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbf800000)
li x25, 0xe8c7c90e0758e974 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x810a6706b3595e79 # load x3 with value 0x810a6706b3595e79
sw x3, 0(x2) # store 0x810a6706b3595e79 in memory
flw f16, 0(x2) # load 0x810a6706b3595e79 from memory into f16
fmadd.s f25, f20, f4, f16, dyn # perform operation
fmadd.s f25, f20, f4, f16, rdn # perform operation
fmadd.s f25, f20, f4, f16, rmm # perform operation
fmadd.s f25, f20, f4, f16, rne # perform operation
fmadd.s f25, f20, f4, f16, rtz # perform operation
fmadd.s f25, f20, f4, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f4, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f4, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f4, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f4, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f4, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x3fc00000)
li x17, 0x534b2d171249a839 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0xdf842477ab2360f9 # load x3 with value 0xdf842477ab2360f9
sw x3, 0(x2) # store 0xdf842477ab2360f9 in memory
flw f23, 0(x2) # load 0xdf842477ab2360f9 from memory into f23
fmadd.s f17, f27, f18, f23, dyn # perform operation
fmadd.s f17, f27, f18, f23, rdn # perform operation
fmadd.s f17, f27, f18, f23, rmm # perform operation
fmadd.s f17, f27, f18, f23, rne # perform operation
fmadd.s f17, f27, f18, f23, rtz # perform operation
fmadd.s f17, f27, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xbfc00000)
li x13, 0x5889afc22db9f2e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x31e6803900f25600 # load x3 with value 0x31e6803900f25600
sw x3, 0(x2) # store 0x31e6803900f25600 in memory
flw f21, 0(x2) # load 0x31e6803900f25600 from memory into f21
fmadd.s f13, f29, f31, f21, dyn # perform operation
fmadd.s f13, f29, f31, f21, rdn # perform operation
fmadd.s f13, f29, f31, f21, rmm # perform operation
fmadd.s f13, f29, f31, f21, rne # perform operation
fmadd.s f13, f29, f31, f21, rtz # perform operation
fmadd.s f13, f29, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x40000000)
li x3, 0xd2b50a5b25c92f16 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x54a4c749747255f5 # load x3 with value 0x54a4c749747255f5
sw x3, 0(x2) # store 0x54a4c749747255f5 in memory
flw f25, 0(x2) # load 0x54a4c749747255f5 from memory into f25
fmadd.s f3, f6, f22, f25, dyn # perform operation
fmadd.s f3, f6, f22, f25, rdn # perform operation
fmadd.s f3, f6, f22, f25, rmm # perform operation
fmadd.s f3, f6, f22, f25, rne # perform operation
fmadd.s f3, f6, f22, f25, rtz # perform operation
fmadd.s f3, f6, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xc0000000)
li x11, 0x2d5143515b1d55e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xcb44236d3a41b51a # load x3 with value 0xcb44236d3a41b51a
sw x3, 0(x2) # store 0xcb44236d3a41b51a in memory
flw f7, 0(x2) # load 0xcb44236d3a41b51a from memory into f7
fmadd.s f11, f6, f3, f7, dyn # perform operation
fmadd.s f11, f6, f3, f7, rdn # perform operation
fmadd.s f11, f6, f3, f7, rmm # perform operation
fmadd.s f11, f6, f3, f7, rne # perform operation
fmadd.s f11, f6, f3, f7, rtz # perform operation
fmadd.s f11, f6, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f6, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f6, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f6, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f6, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f6, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x800000)
li x4, 0x9a3e50ce1b841f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xfb03214201966cf1 # load x3 with value 0xfb03214201966cf1
sw x3, 0(x2) # store 0xfb03214201966cf1 in memory
flw f8, 0(x2) # load 0xfb03214201966cf1 from memory into f8
fmadd.s f4, f12, f3, f8, dyn # perform operation
fmadd.s f4, f12, f3, f8, rdn # perform operation
fmadd.s f4, f12, f3, f8, rmm # perform operation
fmadd.s f4, f12, f3, f8, rne # perform operation
fmadd.s f4, f12, f3, f8, rtz # perform operation
fmadd.s f4, f12, f3, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f12, f3, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f12, f3, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80800000)
li x24, 0xc564a2466d93ba0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xe8bc4bfd646530f0 # load x3 with value 0xe8bc4bfd646530f0
sw x3, 0(x2) # store 0xe8bc4bfd646530f0 in memory
flw f6, 0(x2) # load 0xe8bc4bfd646530f0 from memory into f6
fmadd.s f24, f11, f4, f6, dyn # perform operation
fmadd.s f24, f11, f4, f6, rdn # perform operation
fmadd.s f24, f11, f4, f6, rmm # perform operation
fmadd.s f24, f11, f4, f6, rne # perform operation
fmadd.s f24, f11, f4, f6, rtz # perform operation
fmadd.s f24, f11, f4, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f4, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f4, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f7fffff)
li x28, 0xea5eeab9cb96cc21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x345f5da071a7756f # load x3 with value 0x345f5da071a7756f
sw x3, 0(x2) # store 0x345f5da071a7756f in memory
flw f1, 0(x2) # load 0x345f5da071a7756f from memory into f1
fmadd.s f28, f11, f26, f1, dyn # perform operation
fmadd.s f28, f11, f26, f1, rdn # perform operation
fmadd.s f28, f11, f26, f1, rmm # perform operation
fmadd.s f28, f11, f26, f1, rne # perform operation
fmadd.s f28, f11, f26, f1, rtz # perform operation
fmadd.s f28, f11, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f11, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f11, f26, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff7fffff)
li x29, 0x7f31146f58a757ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x7afa720f19e639bd # load x3 with value 0x7afa720f19e639bd
sw x3, 0(x2) # store 0x7afa720f19e639bd in memory
flw f12, 0(x2) # load 0x7afa720f19e639bd from memory into f12
fmadd.s f29, f2, f18, f12, dyn # perform operation
fmadd.s f29, f2, f18, f12, rdn # perform operation
fmadd.s f29, f2, f18, f12, rmm # perform operation
fmadd.s f29, f2, f18, f12, rne # perform operation
fmadd.s f29, f2, f18, f12, rtz # perform operation
fmadd.s f29, f2, f18, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f18, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f18, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffff)
li x9, 0xd7306e003c23e295 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xc4cee76215b8d9ac # load x3 with value 0xc4cee76215b8d9ac
sw x3, 0(x2) # store 0xc4cee76215b8d9ac in memory
flw f22, 0(x2) # load 0xc4cee76215b8d9ac from memory into f22
fmadd.s f9, f5, f20, f22, dyn # perform operation
fmadd.s f9, f5, f20, f22, rdn # perform operation
fmadd.s f9, f5, f20, f22, rmm # perform operation
fmadd.s f9, f5, f20, f22, rne # perform operation
fmadd.s f9, f5, f20, f22, rtz # perform operation
fmadd.s f9, f5, f20, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f20, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f20, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x807fffff)
li x14, 0xe460fa6c4845c1db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0xe633a78b632a4c83 # load x3 with value 0xe633a78b632a4c83
sw x3, 0(x2) # store 0xe633a78b632a4c83 in memory
flw f18, 0(x2) # load 0xe633a78b632a4c83 from memory into f18
fmadd.s f14, f20, f10, f18, dyn # perform operation
fmadd.s f14, f20, f10, f18, rdn # perform operation
fmadd.s f14, f20, f10, f18, rmm # perform operation
fmadd.s f14, f20, f10, f18, rne # perform operation
fmadd.s f14, f20, f10, f18, rtz # perform operation
fmadd.s f14, f20, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f20, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f20, f10, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x400000)
li x27, 0xa0e394ce3e63faf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0xffa129016a690d0b # load x3 with value 0xffa129016a690d0b
sw x3, 0(x2) # store 0xffa129016a690d0b in memory
flw f8, 0(x2) # load 0xffa129016a690d0b from memory into f8
fmadd.s f27, f11, f18, f8, dyn # perform operation
fmadd.s f27, f11, f18, f8, rdn # perform operation
fmadd.s f27, f11, f18, f8, rmm # perform operation
fmadd.s f27, f11, f18, f8, rne # perform operation
fmadd.s f27, f11, f18, f8, rtz # perform operation
fmadd.s f27, f11, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80400000)
li x20, 0xec6e19cac232240e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x1a55027d042e3451 # load x3 with value 0x1a55027d042e3451
sw x3, 0(x2) # store 0x1a55027d042e3451 in memory
flw f11, 0(x2) # load 0x1a55027d042e3451 from memory into f11
fmadd.s f20, f6, f1, f11, dyn # perform operation
fmadd.s f20, f6, f1, f11, rdn # perform operation
fmadd.s f20, f6, f1, f11, rmm # perform operation
fmadd.s f20, f6, f1, f11, rne # perform operation
fmadd.s f20, f6, f1, f11, rtz # perform operation
fmadd.s f20, f6, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f1, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x1)
li x15, 0x4e6ae7e71f57e18e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x1f2fe979dae89501 # load x3 with value 0x1f2fe979dae89501
sw x3, 0(x2) # store 0x1f2fe979dae89501 in memory
flw f10, 0(x2) # load 0x1f2fe979dae89501 from memory into f10
fmadd.s f15, f6, f31, f10, dyn # perform operation
fmadd.s f15, f6, f31, f10, rdn # perform operation
fmadd.s f15, f6, f31, f10, rmm # perform operation
fmadd.s f15, f6, f31, f10, rne # perform operation
fmadd.s f15, f6, f31, f10, rtz # perform operation
fmadd.s f15, f6, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x80000001)
li x29, 0x6f74c3841df5a40e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0x8b2eb7b7b14ef79a # load x3 with value 0x8b2eb7b7b14ef79a
sw x3, 0(x2) # store 0x8b2eb7b7b14ef79a in memory
flw f14, 0(x2) # load 0x8b2eb7b7b14ef79a from memory into f14
fmadd.s f29, f6, f24, f14, dyn # perform operation
fmadd.s f29, f6, f24, f14, rdn # perform operation
fmadd.s f29, f6, f24, f14, rmm # perform operation
fmadd.s f29, f6, f24, f14, rne # perform operation
fmadd.s f29, f6, f24, f14, rtz # perform operation
fmadd.s f29, f6, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800000)
li x5, 0x86b885c2acc32c23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0xc6136021906bd31b # load x3 with value 0xc6136021906bd31b
sw x3, 0(x2) # store 0xc6136021906bd31b in memory
flw f15, 0(x2) # load 0xc6136021906bd31b from memory into f15
fmadd.s f5, f8, f3, f15, dyn # perform operation
fmadd.s f5, f8, f3, f15, rdn # perform operation
fmadd.s f5, f8, f3, f15, rmm # perform operation
fmadd.s f5, f8, f3, f15, rne # perform operation
fmadd.s f5, f8, f3, f15, rtz # perform operation
fmadd.s f5, f8, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f8, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f8, f3, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0xff800000)
li x17, 0xa8b062e555bcc0d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0x74bed4c685c41244 # load x3 with value 0x74bed4c685c41244
sw x3, 0(x2) # store 0x74bed4c685c41244 in memory
flw f8, 0(x2) # load 0x74bed4c685c41244 from memory into f8
fmadd.s f17, f25, f18, f8, dyn # perform operation
fmadd.s f17, f25, f18, f8, rdn # perform operation
fmadd.s f17, f25, f18, f8, rmm # perform operation
fmadd.s f17, f25, f18, f8, rne # perform operation
fmadd.s f17, f25, f18, f8, rtz # perform operation
fmadd.s f17, f25, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fc00000)
li x27, 0x656e41a79ad84ec8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f26, 0(x2) # load 0x7fc00000 from memory into f26
li x3, 0x9f314e63e3002c54 # load x3 with value 0x9f314e63e3002c54
sw x3, 0(x2) # store 0x9f314e63e3002c54 in memory
flw f11, 0(x2) # load 0x9f314e63e3002c54 from memory into f11
fmadd.s f27, f29, f26, f11, dyn # perform operation
fmadd.s f27, f29, f26, f11, rdn # perform operation
fmadd.s f27, f29, f26, f11, rmm # perform operation
fmadd.s f27, f29, f26, f11, rne # perform operation
fmadd.s f27, f29, f26, f11, rtz # perform operation
fmadd.s f27, f29, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f29, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f29, f26, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fffffff)
li x4, 0xc24613c20bc0d789 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f3, 0(x2) # load 0x7fffffff from memory into f3
li x3, 0x898016371b9bc696 # load x3 with value 0x898016371b9bc696
sw x3, 0(x2) # store 0x898016371b9bc696 in memory
flw f11, 0(x2) # load 0x898016371b9bc696 from memory into f11
fmadd.s f4, f29, f3, f11, dyn # perform operation
fmadd.s f4, f29, f3, f11, rdn # perform operation
fmadd.s f4, f29, f3, f11, rmm # perform operation
fmadd.s f4, f29, f3, f11, rne # perform operation
fmadd.s f4, f29, f3, f11, rtz # perform operation
fmadd.s f4, f29, f3, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f29, f3, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f29, f3, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7f800001)
li x29, 0x78aec363286a6bd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0x5cb3a40e6e9d663d # load x3 with value 0x5cb3a40e6e9d663d
sw x3, 0(x2) # store 0x5cb3a40e6e9d663d in memory
flw f19, 0(x2) # load 0x5cb3a40e6e9d663d from memory into f19
fmadd.s f29, f26, f16, f19, dyn # perform operation
fmadd.s f29, f26, f16, f19, rdn # perform operation
fmadd.s f29, f26, f16, f19, rmm # perform operation
fmadd.s f29, f26, f16, f19, rne # perform operation
fmadd.s f29, f26, f16, f19, rtz # perform operation
fmadd.s f29, f26, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f26, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f26, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f26, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f26, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f26, f16, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7fbfffff)
li x9, 0xc9832c3448476a88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x11e727e70cac7dca # load x3 with value 0x11e727e70cac7dca
sw x3, 0(x2) # store 0x11e727e70cac7dca in memory
flw f2, 0(x2) # load 0x11e727e70cac7dca from memory into f2
fmadd.s f9, f30, f24, f2, dyn # perform operation
fmadd.s f9, f30, f24, f2, rdn # perform operation
fmadd.s f9, f30, f24, f2, rmm # perform operation
fmadd.s f9, f30, f24, f2, rne # perform operation
fmadd.s f9, f30, f24, f2, rtz # perform operation
fmadd.s f9, f30, f24, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f24, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f24, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f24, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f24, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f24, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x7ef8654f)
li x15, 0x2ab1fc1d8693f448 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x21830c82b6c9be2b # load x3 with value 0x21830c82b6c9be2b
sw x3, 0(x2) # store 0x21830c82b6c9be2b in memory
flw f23, 0(x2) # load 0x21830c82b6c9be2b from memory into f23
fmadd.s f15, f21, f28, f23, dyn # perform operation
fmadd.s f15, f21, f28, f23, rdn # perform operation
fmadd.s f15, f21, f28, f23, rmm # perform operation
fmadd.s f15, f21, f28, f23, rne # perform operation
fmadd.s f15, f21, f28, f23, rtz # perform operation
fmadd.s f15, f21, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x0 fs2 = 0x813d9ab0)
li x27, 0x2c7fb4510dc01908 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0x37541db56aabf960 # load x3 with value 0x37541db56aabf960
sw x3, 0(x2) # store 0x37541db56aabf960 in memory
flw f23, 0(x2) # load 0x37541db56aabf960 from memory into f23
fmadd.s f27, f3, f30, f23, dyn # perform operation
fmadd.s f27, f3, f30, f23, rdn # perform operation
fmadd.s f27, f3, f30, f23, rmm # perform operation
fmadd.s f27, f3, f30, f23, rne # perform operation
fmadd.s f27, f3, f30, f23, rtz # perform operation
fmadd.s f27, f3, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x0)
li x31, 0x0cf5ad1ecab2680b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x28c18495f8cac1a6 # load x3 with value 0x28c18495f8cac1a6
sw x3, 0(x2) # store 0x28c18495f8cac1a6 in memory
flw f25, 0(x2) # load 0x28c18495f8cac1a6 from memory into f25
fmadd.s f31, f11, f16, f25, dyn # perform operation
fmadd.s f31, f11, f16, f25, rdn # perform operation
fmadd.s f31, f11, f16, f25, rmm # perform operation
fmadd.s f31, f11, f16, f25, rne # perform operation
fmadd.s f31, f11, f16, f25, rtz # perform operation
fmadd.s f31, f11, f16, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f11, f16, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f11, f16, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000000)
li x23, 0x8ed5a1a00a04a015 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0x95e25743a615400b # load x3 with value 0x95e25743a615400b
sw x3, 0(x2) # store 0x95e25743a615400b in memory
flw f11, 0(x2) # load 0x95e25743a615400b from memory into f11
fmadd.s f23, f26, f8, f11, dyn # perform operation
fmadd.s f23, f26, f8, f11, rdn # perform operation
fmadd.s f23, f26, f8, f11, rmm # perform operation
fmadd.s f23, f26, f8, f11, rne # perform operation
fmadd.s f23, f26, f8, f11, rtz # perform operation
fmadd.s f23, f26, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3f800000)
li x12, 0x500de88cdfba5fa1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x59b20fabf5f3fdc9 # load x3 with value 0x59b20fabf5f3fdc9
sw x3, 0(x2) # store 0x59b20fabf5f3fdc9 in memory
flw f1, 0(x2) # load 0x59b20fabf5f3fdc9 from memory into f1
fmadd.s f12, f19, f22, f1, dyn # perform operation
fmadd.s f12, f19, f22, f1, rdn # perform operation
fmadd.s f12, f19, f22, f1, rmm # perform operation
fmadd.s f12, f19, f22, f1, rne # perform operation
fmadd.s f12, f19, f22, f1, rtz # perform operation
fmadd.s f12, f19, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f22, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbf800000)
li x15, 0x3e356a62a426e650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xa889ff73ad9c884f # load x3 with value 0xa889ff73ad9c884f
sw x3, 0(x2) # store 0xa889ff73ad9c884f in memory
flw f30, 0(x2) # load 0xa889ff73ad9c884f from memory into f30
fmadd.s f15, f8, f28, f30, dyn # perform operation
fmadd.s f15, f8, f28, f30, rdn # perform operation
fmadd.s f15, f8, f28, f30, rmm # perform operation
fmadd.s f15, f8, f28, f30, rne # perform operation
fmadd.s f15, f8, f28, f30, rtz # perform operation
fmadd.s f15, f8, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f28, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x3fc00000)
li x8, 0x461844d88977c579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0xb8aca3f728716cff # load x3 with value 0xb8aca3f728716cff
sw x3, 0(x2) # store 0xb8aca3f728716cff in memory
flw f30, 0(x2) # load 0xb8aca3f728716cff from memory into f30
fmadd.s f8, f26, f20, f30, dyn # perform operation
fmadd.s f8, f26, f20, f30, rdn # perform operation
fmadd.s f8, f26, f20, f30, rmm # perform operation
fmadd.s f8, f26, f20, f30, rne # perform operation
fmadd.s f8, f26, f20, f30, rtz # perform operation
fmadd.s f8, f26, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xbfc00000)
li x10, 0x2e0b4f3338eb4fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xb665ed1fd734c291 # load x3 with value 0xb665ed1fd734c291
sw x3, 0(x2) # store 0xb665ed1fd734c291 in memory
flw f29, 0(x2) # load 0xb665ed1fd734c291 from memory into f29
fmadd.s f10, f25, f14, f29, dyn # perform operation
fmadd.s f10, f25, f14, f29, rdn # perform operation
fmadd.s f10, f25, f14, f29, rmm # perform operation
fmadd.s f10, f25, f14, f29, rne # perform operation
fmadd.s f10, f25, f14, f29, rtz # perform operation
fmadd.s f10, f25, f14, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f14, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f14, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x40000000)
li x20, 0x2d49812505418647 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xbe5fe34dd31efd14 # load x3 with value 0xbe5fe34dd31efd14
sw x3, 0(x2) # store 0xbe5fe34dd31efd14 in memory
flw f6, 0(x2) # load 0xbe5fe34dd31efd14 from memory into f6
fmadd.s f20, f19, f31, f6, dyn # perform operation
fmadd.s f20, f19, f31, f6, rdn # perform operation
fmadd.s f20, f19, f31, f6, rmm # perform operation
fmadd.s f20, f19, f31, f6, rne # perform operation
fmadd.s f20, f19, f31, f6, rtz # perform operation
fmadd.s f20, f19, f31, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f19, f31, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f19, f31, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xc0000000)
li x12, 0x14a51849fa36f26d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0xaf6decfede53376 # load x3 with value 0xaf6decfede53376
sw x3, 0(x2) # store 0xaf6decfede53376 in memory
flw f20, 0(x2) # load 0xaf6decfede53376 from memory into f20
fmadd.s f12, f17, f16, f20, dyn # perform operation
fmadd.s f12, f17, f16, f20, rdn # perform operation
fmadd.s f12, f17, f16, f20, rmm # perform operation
fmadd.s f12, f17, f16, f20, rne # perform operation
fmadd.s f12, f17, f16, f20, rtz # perform operation
fmadd.s f12, f17, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x800000)
li x16, 0x1419f7921da8fecf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x53bb511178c4e039 # load x3 with value 0x53bb511178c4e039
sw x3, 0(x2) # store 0x53bb511178c4e039 in memory
flw f29, 0(x2) # load 0x53bb511178c4e039 from memory into f29
fmadd.s f16, f10, f20, f29, dyn # perform operation
fmadd.s f16, f10, f20, f29, rdn # perform operation
fmadd.s f16, f10, f20, f29, rmm # perform operation
fmadd.s f16, f10, f20, f29, rne # perform operation
fmadd.s f16, f10, f20, f29, rtz # perform operation
fmadd.s f16, f10, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f10, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f10, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80800000)
li x25, 0xa79f301d227d8204 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0xd7735f72ef605295 # load x3 with value 0xd7735f72ef605295
sw x3, 0(x2) # store 0xd7735f72ef605295 in memory
flw f5, 0(x2) # load 0xd7735f72ef605295 from memory into f5
fmadd.s f25, f11, f28, f5, dyn # perform operation
fmadd.s f25, f11, f28, f5, rdn # perform operation
fmadd.s f25, f11, f28, f5, rmm # perform operation
fmadd.s f25, f11, f28, f5, rne # perform operation
fmadd.s f25, f11, f28, f5, rtz # perform operation
fmadd.s f25, f11, f28, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f11, f28, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f11, f28, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f7fffff)
li x9, 0xe69d7e635c9edf83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xc9213e059f011c32 # load x3 with value 0xc9213e059f011c32
sw x3, 0(x2) # store 0xc9213e059f011c32 in memory
flw f29, 0(x2) # load 0xc9213e059f011c32 from memory into f29
fmadd.s f9, f7, f30, f29, dyn # perform operation
fmadd.s f9, f7, f30, f29, rdn # perform operation
fmadd.s f9, f7, f30, f29, rmm # perform operation
fmadd.s f9, f7, f30, f29, rne # perform operation
fmadd.s f9, f7, f30, f29, rtz # perform operation
fmadd.s f9, f7, f30, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f30, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f30, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff7fffff)
li x10, 0x5f6f764545047276 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0xe315b9d272585b9 # load x3 with value 0xe315b9d272585b9
sw x3, 0(x2) # store 0xe315b9d272585b9 in memory
flw f20, 0(x2) # load 0xe315b9d272585b9 from memory into f20
fmadd.s f10, f7, f13, f20, dyn # perform operation
fmadd.s f10, f7, f13, f20, rdn # perform operation
fmadd.s f10, f7, f13, f20, rmm # perform operation
fmadd.s f10, f7, f13, f20, rne # perform operation
fmadd.s f10, f7, f13, f20, rtz # perform operation
fmadd.s f10, f7, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffff)
li x6, 0x83b44b2af8c67071 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xbd0c662fc30652e2 # load x3 with value 0xbd0c662fc30652e2
sw x3, 0(x2) # store 0xbd0c662fc30652e2 in memory
flw f7, 0(x2) # load 0xbd0c662fc30652e2 from memory into f7
fmadd.s f6, f29, f3, f7, dyn # perform operation
fmadd.s f6, f29, f3, f7, rdn # perform operation
fmadd.s f6, f29, f3, f7, rmm # perform operation
fmadd.s f6, f29, f3, f7, rne # perform operation
fmadd.s f6, f29, f3, f7, rtz # perform operation
fmadd.s f6, f29, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x807fffff)
li x3, 0x237f7bd65062f70f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0xf19f9112e426bede # load x3 with value 0xf19f9112e426bede
sw x3, 0(x2) # store 0xf19f9112e426bede in memory
flw f18, 0(x2) # load 0xf19f9112e426bede from memory into f18
fmadd.s f3, f2, f17, f18, dyn # perform operation
fmadd.s f3, f2, f17, f18, rdn # perform operation
fmadd.s f3, f2, f17, f18, rmm # perform operation
fmadd.s f3, f2, f17, f18, rne # perform operation
fmadd.s f3, f2, f17, f18, rtz # perform operation
fmadd.s f3, f2, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f2, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f2, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f2, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f2, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f2, f17, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x400000)
li x24, 0x487b5115d2328f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x6b79246f924284b5 # load x3 with value 0x6b79246f924284b5
sw x3, 0(x2) # store 0x6b79246f924284b5 in memory
flw f8, 0(x2) # load 0x6b79246f924284b5 from memory into f8
fmadd.s f24, f13, f12, f8, dyn # perform operation
fmadd.s f24, f13, f12, f8, rdn # perform operation
fmadd.s f24, f13, f12, f8, rmm # perform operation
fmadd.s f24, f13, f12, f8, rne # perform operation
fmadd.s f24, f13, f12, f8, rtz # perform operation
fmadd.s f24, f13, f12, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f12, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f12, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f12, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f12, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f12, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80400000)
li x4, 0x731f3f752b85c33a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x5968776aa4e45461 # load x3 with value 0x5968776aa4e45461
sw x3, 0(x2) # store 0x5968776aa4e45461 in memory
flw f15, 0(x2) # load 0x5968776aa4e45461 from memory into f15
fmadd.s f4, f19, f20, f15, dyn # perform operation
fmadd.s f4, f19, f20, f15, rdn # perform operation
fmadd.s f4, f19, f20, f15, rmm # perform operation
fmadd.s f4, f19, f20, f15, rne # perform operation
fmadd.s f4, f19, f20, f15, rtz # perform operation
fmadd.s f4, f19, f20, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f20, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f20, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x1)
li x1, 0x0640230f0e86cc0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f31, 0(x2) # load 0x80000000 from memory into f31
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xa8c0c7a38e3fcd58 # load x3 with value 0xa8c0c7a38e3fcd58
sw x3, 0(x2) # store 0xa8c0c7a38e3fcd58 in memory
flw f18, 0(x2) # load 0xa8c0c7a38e3fcd58 from memory into f18
fmadd.s f1, f31, f11, f18, dyn # perform operation
fmadd.s f1, f31, f11, f18, rdn # perform operation
fmadd.s f1, f31, f11, f18, rmm # perform operation
fmadd.s f1, f31, f11, f18, rne # perform operation
fmadd.s f1, f31, f11, f18, rtz # perform operation
fmadd.s f1, f31, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f31, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f31, f11, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x80000001)
li x2, 0x4b778ac1bffaef9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x376d33bbc3cc7c21 # load x3 with value 0x376d33bbc3cc7c21
sw x3, 0(x2) # store 0x376d33bbc3cc7c21 in memory
flw f25, 0(x2) # load 0x376d33bbc3cc7c21 from memory into f25
fmadd.s f2, f26, f4, f25, dyn # perform operation
fmadd.s f2, f26, f4, f25, rdn # perform operation
fmadd.s f2, f26, f4, f25, rmm # perform operation
fmadd.s f2, f26, f4, f25, rne # perform operation
fmadd.s f2, f26, f4, f25, rtz # perform operation
fmadd.s f2, f26, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f26, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f26, f4, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800000)
li x22, 0x324970fd5ee89ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xb5fb9805e0a76073 # load x3 with value 0xb5fb9805e0a76073
sw x3, 0(x2) # store 0xb5fb9805e0a76073 in memory
flw f4, 0(x2) # load 0xb5fb9805e0a76073 from memory into f4
fmadd.s f22, f6, f31, f4, dyn # perform operation
fmadd.s f22, f6, f31, f4, rdn # perform operation
fmadd.s f22, f6, f31, f4, rmm # perform operation
fmadd.s f22, f6, f31, f4, rne # perform operation
fmadd.s f22, f6, f31, f4, rtz # perform operation
fmadd.s f22, f6, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0xff800000)
li x25, 0xff4b71b01a9c7953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0xb0fdb3dd44ced01e # load x3 with value 0xb0fdb3dd44ced01e
sw x3, 0(x2) # store 0xb0fdb3dd44ced01e in memory
flw f24, 0(x2) # load 0xb0fdb3dd44ced01e from memory into f24
fmadd.s f25, f4, f31, f24, dyn # perform operation
fmadd.s f25, f4, f31, f24, rdn # perform operation
fmadd.s f25, f4, f31, f24, rmm # perform operation
fmadd.s f25, f4, f31, f24, rne # perform operation
fmadd.s f25, f4, f31, f24, rtz # perform operation
fmadd.s f25, f4, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f4, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f4, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fc00000)
li x23, 0x2fec167d0328b77e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0xf341d6b11d44bb0e # load x3 with value 0xf341d6b11d44bb0e
sw x3, 0(x2) # store 0xf341d6b11d44bb0e in memory
flw f16, 0(x2) # load 0xf341d6b11d44bb0e from memory into f16
fmadd.s f23, f30, f18, f16, dyn # perform operation
fmadd.s f23, f30, f18, f16, rdn # perform operation
fmadd.s f23, f30, f18, f16, rmm # perform operation
fmadd.s f23, f30, f18, f16, rne # perform operation
fmadd.s f23, f30, f18, f16, rtz # perform operation
fmadd.s f23, f30, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f30, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f30, f18, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fffffff)
li x22, 0xbbe95152ed5c23e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xb6c0237a83570bff # load x3 with value 0xb6c0237a83570bff
sw x3, 0(x2) # store 0xb6c0237a83570bff in memory
flw f2, 0(x2) # load 0xb6c0237a83570bff from memory into f2
fmadd.s f22, f23, f8, f2, dyn # perform operation
fmadd.s f22, f23, f8, f2, rdn # perform operation
fmadd.s f22, f23, f8, f2, rmm # perform operation
fmadd.s f22, f23, f8, f2, rne # perform operation
fmadd.s f22, f23, f8, f2, rtz # perform operation
fmadd.s f22, f23, f8, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f23, f8, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f23, f8, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7f800001)
li x8, 0x370d045c9b7b6fcc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0x1d384aa48eef29dd # load x3 with value 0x1d384aa48eef29dd
sw x3, 0(x2) # store 0x1d384aa48eef29dd in memory
flw f1, 0(x2) # load 0x1d384aa48eef29dd from memory into f1
fmadd.s f8, f7, f24, f1, dyn # perform operation
fmadd.s f8, f7, f24, f1, rdn # perform operation
fmadd.s f8, f7, f24, f1, rmm # perform operation
fmadd.s f8, f7, f24, f1, rne # perform operation
fmadd.s f8, f7, f24, f1, rtz # perform operation
fmadd.s f8, f7, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7fbfffff)
li x4, 0x89c817ecc9ffd024 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x3792e893857bc324 # load x3 with value 0x3792e893857bc324
sw x3, 0(x2) # store 0x3792e893857bc324 in memory
flw f16, 0(x2) # load 0x3792e893857bc324 from memory into f16
fmadd.s f4, f10, f3, f16, dyn # perform operation
fmadd.s f4, f10, f3, f16, rdn # perform operation
fmadd.s f4, f10, f3, f16, rmm # perform operation
fmadd.s f4, f10, f3, f16, rne # perform operation
fmadd.s f4, f10, f3, f16, rtz # perform operation
fmadd.s f4, f10, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x7ef8654f)
li x6, 0xa6cdbd05e03c3c6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xae81b0727f5cbd84 # load x3 with value 0xae81b0727f5cbd84
sw x3, 0(x2) # store 0xae81b0727f5cbd84 in memory
flw f19, 0(x2) # load 0xae81b0727f5cbd84 from memory into f19
fmadd.s f6, f5, f3, f19, dyn # perform operation
fmadd.s f6, f5, f3, f19, rdn # perform operation
fmadd.s f6, f5, f3, f19, rmm # perform operation
fmadd.s f6, f5, f3, f19, rne # perform operation
fmadd.s f6, f5, f3, f19, rtz # perform operation
fmadd.s f6, f5, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f5, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f5, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f5, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f5, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f5, f3, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000000 fs2 = 0x813d9ab0)
li x19, 0xdcc92bd1fba78eda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xfa1707c7f77dd80c # load x3 with value 0xfa1707c7f77dd80c
sw x3, 0(x2) # store 0xfa1707c7f77dd80c in memory
flw f2, 0(x2) # load 0xfa1707c7f77dd80c from memory into f2
fmadd.s f19, f26, f22, f2, dyn # perform operation
fmadd.s f19, f26, f22, f2, rdn # perform operation
fmadd.s f19, f26, f22, f2, rmm # perform operation
fmadd.s f19, f26, f22, f2, rne # perform operation
fmadd.s f19, f26, f22, f2, rtz # perform operation
fmadd.s f19, f26, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x0)
li x25, 0xab81067906469989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x834abb0fe4ceea6a # load x3 with value 0x834abb0fe4ceea6a
sw x3, 0(x2) # store 0x834abb0fe4ceea6a in memory
flw f5, 0(x2) # load 0x834abb0fe4ceea6a from memory into f5
fmadd.s f25, f3, f19, f5, dyn # perform operation
fmadd.s f25, f3, f19, f5, rdn # perform operation
fmadd.s f25, f3, f19, f5, rmm # perform operation
fmadd.s f25, f3, f19, f5, rne # perform operation
fmadd.s f25, f3, f19, f5, rtz # perform operation
fmadd.s f25, f3, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000000)
li x21, 0x0af8a62ba4dc1cb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0x7e9e3712e13c769d # load x3 with value 0x7e9e3712e13c769d
sw x3, 0(x2) # store 0x7e9e3712e13c769d in memory
flw f28, 0(x2) # load 0x7e9e3712e13c769d from memory into f28
fmadd.s f21, f29, f20, f28, dyn # perform operation
fmadd.s f21, f29, f20, f28, rdn # perform operation
fmadd.s f21, f29, f20, f28, rmm # perform operation
fmadd.s f21, f29, f20, f28, rne # perform operation
fmadd.s f21, f29, f20, f28, rtz # perform operation
fmadd.s f21, f29, f20, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f20, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f20, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f20, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f20, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f20, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3f800000)
li x20, 0x9aeaf7f648bba964 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xb918c1632dbf94f2 # load x3 with value 0xb918c1632dbf94f2
sw x3, 0(x2) # store 0xb918c1632dbf94f2 in memory
flw f4, 0(x2) # load 0xb918c1632dbf94f2 from memory into f4
fmadd.s f20, f22, f8, f4, dyn # perform operation
fmadd.s f20, f22, f8, f4, rdn # perform operation
fmadd.s f20, f22, f8, f4, rmm # perform operation
fmadd.s f20, f22, f8, f4, rne # perform operation
fmadd.s f20, f22, f8, f4, rtz # perform operation
fmadd.s f20, f22, f8, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f22, f8, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f22, f8, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f22, f8, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f22, f8, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f22, f8, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbf800000)
li x24, 0xf26620366b7068b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x28b4edd11df5173e # load x3 with value 0x28b4edd11df5173e
sw x3, 0(x2) # store 0x28b4edd11df5173e in memory
flw f22, 0(x2) # load 0x28b4edd11df5173e from memory into f22
fmadd.s f24, f2, f15, f22, dyn # perform operation
fmadd.s f24, f2, f15, f22, rdn # perform operation
fmadd.s f24, f2, f15, f22, rmm # perform operation
fmadd.s f24, f2, f15, f22, rne # perform operation
fmadd.s f24, f2, f15, f22, rtz # perform operation
fmadd.s f24, f2, f15, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f15, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f15, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x3fc00000)
li x23, 0x5ae05030dd15b7ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x9ebb38e42aa9cc4d # load x3 with value 0x9ebb38e42aa9cc4d
sw x3, 0(x2) # store 0x9ebb38e42aa9cc4d in memory
flw f29, 0(x2) # load 0x9ebb38e42aa9cc4d from memory into f29
fmadd.s f23, f22, f8, f29, dyn # perform operation
fmadd.s f23, f22, f8, f29, rdn # perform operation
fmadd.s f23, f22, f8, f29, rmm # perform operation
fmadd.s f23, f22, f8, f29, rne # perform operation
fmadd.s f23, f22, f8, f29, rtz # perform operation
fmadd.s f23, f22, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f8, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xbfc00000)
li x27, 0x04c65ac52851c065 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0xec7e44f2a20fd4fb # load x3 with value 0xec7e44f2a20fd4fb
sw x3, 0(x2) # store 0xec7e44f2a20fd4fb in memory
flw f7, 0(x2) # load 0xec7e44f2a20fd4fb from memory into f7
fmadd.s f27, f1, f20, f7, dyn # perform operation
fmadd.s f27, f1, f20, f7, rdn # perform operation
fmadd.s f27, f1, f20, f7, rmm # perform operation
fmadd.s f27, f1, f20, f7, rne # perform operation
fmadd.s f27, f1, f20, f7, rtz # perform operation
fmadd.s f27, f1, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f1, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f1, f20, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x40000000)
li x12, 0xa7d4a5f5f732810b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x4984195aa34f17c # load x3 with value 0x4984195aa34f17c
sw x3, 0(x2) # store 0x4984195aa34f17c in memory
flw f17, 0(x2) # load 0x4984195aa34f17c from memory into f17
fmadd.s f12, f16, f30, f17, dyn # perform operation
fmadd.s f12, f16, f30, f17, rdn # perform operation
fmadd.s f12, f16, f30, f17, rmm # perform operation
fmadd.s f12, f16, f30, f17, rne # perform operation
fmadd.s f12, f16, f30, f17, rtz # perform operation
fmadd.s f12, f16, f30, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f16, f30, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f16, f30, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xc0000000)
li x24, 0xa3354c7a9c771b89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x3ef4b139261aca22 # load x3 with value 0x3ef4b139261aca22
sw x3, 0(x2) # store 0x3ef4b139261aca22 in memory
flw f14, 0(x2) # load 0x3ef4b139261aca22 from memory into f14
fmadd.s f24, f9, f31, f14, dyn # perform operation
fmadd.s f24, f9, f31, f14, rdn # perform operation
fmadd.s f24, f9, f31, f14, rmm # perform operation
fmadd.s f24, f9, f31, f14, rne # perform operation
fmadd.s f24, f9, f31, f14, rtz # perform operation
fmadd.s f24, f9, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f31, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x800000)
li x22, 0xf3fb9716a66d3caf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0x38403ee65fffcfcf # load x3 with value 0x38403ee65fffcfcf
sw x3, 0(x2) # store 0x38403ee65fffcfcf in memory
flw f30, 0(x2) # load 0x38403ee65fffcfcf from memory into f30
fmadd.s f22, f15, f5, f30, dyn # perform operation
fmadd.s f22, f15, f5, f30, rdn # perform operation
fmadd.s f22, f15, f5, f30, rmm # perform operation
fmadd.s f22, f15, f5, f30, rne # perform operation
fmadd.s f22, f15, f5, f30, rtz # perform operation
fmadd.s f22, f15, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80800000)
li x10, 0x2d850c54e72bd167 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0x5d1489fd3fbc5d77 # load x3 with value 0x5d1489fd3fbc5d77
sw x3, 0(x2) # store 0x5d1489fd3fbc5d77 in memory
flw f18, 0(x2) # load 0x5d1489fd3fbc5d77 from memory into f18
fmadd.s f10, f20, f13, f18, dyn # perform operation
fmadd.s f10, f20, f13, f18, rdn # perform operation
fmadd.s f10, f20, f13, f18, rmm # perform operation
fmadd.s f10, f20, f13, f18, rne # perform operation
fmadd.s f10, f20, f13, f18, rtz # perform operation
fmadd.s f10, f20, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f7fffff)
li x17, 0x603ad6d6299540ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xa31fc9de7bbbda91 # load x3 with value 0xa31fc9de7bbbda91
sw x3, 0(x2) # store 0xa31fc9de7bbbda91 in memory
flw f29, 0(x2) # load 0xa31fc9de7bbbda91 from memory into f29
fmadd.s f17, f28, f9, f29, dyn # perform operation
fmadd.s f17, f28, f9, f29, rdn # perform operation
fmadd.s f17, f28, f9, f29, rmm # perform operation
fmadd.s f17, f28, f9, f29, rne # perform operation
fmadd.s f17, f28, f9, f29, rtz # perform operation
fmadd.s f17, f28, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f9, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff7fffff)
li x21, 0xea621538ea3a59a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f26, 0(x2) # load 0x3f800000 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x3ee79e2935073d97 # load x3 with value 0x3ee79e2935073d97
sw x3, 0(x2) # store 0x3ee79e2935073d97 in memory
flw f4, 0(x2) # load 0x3ee79e2935073d97 from memory into f4
fmadd.s f21, f26, f7, f4, dyn # perform operation
fmadd.s f21, f26, f7, f4, rdn # perform operation
fmadd.s f21, f26, f7, f4, rmm # perform operation
fmadd.s f21, f26, f7, f4, rne # perform operation
fmadd.s f21, f26, f7, f4, rtz # perform operation
fmadd.s f21, f26, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f26, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f26, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f26, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f26, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f26, f7, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffff)
li x20, 0x538a5e53c8d6dfa8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
li x3, 0x48fbf1079f3b686c # load x3 with value 0x48fbf1079f3b686c
sw x3, 0(x2) # store 0x48fbf1079f3b686c in memory
flw f31, 0(x2) # load 0x48fbf1079f3b686c from memory into f31
fmadd.s f20, f30, f28, f31, dyn # perform operation
fmadd.s f20, f30, f28, f31, rdn # perform operation
fmadd.s f20, f30, f28, f31, rmm # perform operation
fmadd.s f20, f30, f28, f31, rne # perform operation
fmadd.s f20, f30, f28, f31, rtz # perform operation
fmadd.s f20, f30, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x807fffff)
li x29, 0xfcb374be0dd48fb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x4f927605b6d94560 # load x3 with value 0x4f927605b6d94560
sw x3, 0(x2) # store 0x4f927605b6d94560 in memory
flw f3, 0(x2) # load 0x4f927605b6d94560 from memory into f3
fmadd.s f29, f4, f10, f3, dyn # perform operation
fmadd.s f29, f4, f10, f3, rdn # perform operation
fmadd.s f29, f4, f10, f3, rmm # perform operation
fmadd.s f29, f4, f10, f3, rne # perform operation
fmadd.s f29, f4, f10, f3, rtz # perform operation
fmadd.s f29, f4, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f4, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f4, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f4, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f4, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f4, f10, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x400000)
li x15, 0x78e1ba873453938b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x663a72587a312f5e # load x3 with value 0x663a72587a312f5e
sw x3, 0(x2) # store 0x663a72587a312f5e in memory
flw f4, 0(x2) # load 0x663a72587a312f5e from memory into f4
fmadd.s f15, f28, f17, f4, dyn # perform operation
fmadd.s f15, f28, f17, f4, rdn # perform operation
fmadd.s f15, f28, f17, f4, rmm # perform operation
fmadd.s f15, f28, f17, f4, rne # perform operation
fmadd.s f15, f28, f17, f4, rtz # perform operation
fmadd.s f15, f28, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80400000)
li x14, 0xf1a1c755e369a460 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x879d0d92c7542e7a # load x3 with value 0x879d0d92c7542e7a
sw x3, 0(x2) # store 0x879d0d92c7542e7a in memory
flw f5, 0(x2) # load 0x879d0d92c7542e7a from memory into f5
fmadd.s f14, f23, f6, f5, dyn # perform operation
fmadd.s f14, f23, f6, f5, rdn # perform operation
fmadd.s f14, f23, f6, f5, rmm # perform operation
fmadd.s f14, f23, f6, f5, rne # perform operation
fmadd.s f14, f23, f6, f5, rtz # perform operation
fmadd.s f14, f23, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f23, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f23, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f23, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f23, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f23, f6, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x1)
li x17, 0x1baae73a342b45d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xe1e49c17a314c6c7 # load x3 with value 0xe1e49c17a314c6c7
sw x3, 0(x2) # store 0xe1e49c17a314c6c7 in memory
flw f10, 0(x2) # load 0xe1e49c17a314c6c7 from memory into f10
fmadd.s f17, f29, f25, f10, dyn # perform operation
fmadd.s f17, f29, f25, f10, rdn # perform operation
fmadd.s f17, f29, f25, f10, rmm # perform operation
fmadd.s f17, f29, f25, f10, rne # perform operation
fmadd.s f17, f29, f25, f10, rtz # perform operation
fmadd.s f17, f29, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f25, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x80000001)
li x22, 0xee6afd734226f9da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
li x3, 0xbd37b7ac6d9ea037 # load x3 with value 0xbd37b7ac6d9ea037
sw x3, 0(x2) # store 0xbd37b7ac6d9ea037 in memory
flw f28, 0(x2) # load 0xbd37b7ac6d9ea037 from memory into f28
fmadd.s f22, f2, f14, f28, dyn # perform operation
fmadd.s f22, f2, f14, f28, rdn # perform operation
fmadd.s f22, f2, f14, f28, rmm # perform operation
fmadd.s f22, f2, f14, f28, rne # perform operation
fmadd.s f22, f2, f14, f28, rtz # perform operation
fmadd.s f22, f2, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f14, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800000)
li x30, 0xaabdd58f3c446120 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f20, 0(x2) # load 0x7f800000 from memory into f20
li x3, 0x73cc2251681a95be # load x3 with value 0x73cc2251681a95be
sw x3, 0(x2) # store 0x73cc2251681a95be in memory
flw f17, 0(x2) # load 0x73cc2251681a95be from memory into f17
fmadd.s f30, f31, f20, f17, dyn # perform operation
fmadd.s f30, f31, f20, f17, rdn # perform operation
fmadd.s f30, f31, f20, f17, rmm # perform operation
fmadd.s f30, f31, f20, f17, rne # perform operation
fmadd.s f30, f31, f20, f17, rtz # perform operation
fmadd.s f30, f31, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f20, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0xff800000)
li x24, 0x68da1047ce7ba62c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xe969f1ecfcc353ae # load x3 with value 0xe969f1ecfcc353ae
sw x3, 0(x2) # store 0xe969f1ecfcc353ae in memory
flw f22, 0(x2) # load 0xe969f1ecfcc353ae from memory into f22
fmadd.s f24, f6, f1, f22, dyn # perform operation
fmadd.s f24, f6, f1, f22, rdn # perform operation
fmadd.s f24, f6, f1, f22, rmm # perform operation
fmadd.s f24, f6, f1, f22, rne # perform operation
fmadd.s f24, f6, f1, f22, rtz # perform operation
fmadd.s f24, f6, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fc00000)
li x25, 0x13feac40e69a2def # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x7111666ceb81ce7a # load x3 with value 0x7111666ceb81ce7a
sw x3, 0(x2) # store 0x7111666ceb81ce7a in memory
flw f1, 0(x2) # load 0x7111666ceb81ce7a from memory into f1
fmadd.s f25, f20, f24, f1, dyn # perform operation
fmadd.s f25, f20, f24, f1, rdn # perform operation
fmadd.s f25, f20, f24, f1, rmm # perform operation
fmadd.s f25, f20, f24, f1, rne # perform operation
fmadd.s f25, f20, f24, f1, rtz # perform operation
fmadd.s f25, f20, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fffffff)
li x3, 0x57eeaf429e7c59c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x4adc6fd98642f1de # load x3 with value 0x4adc6fd98642f1de
sw x3, 0(x2) # store 0x4adc6fd98642f1de in memory
flw f2, 0(x2) # load 0x4adc6fd98642f1de from memory into f2
fmadd.s f3, f1, f10, f2, dyn # perform operation
fmadd.s f3, f1, f10, f2, rdn # perform operation
fmadd.s f3, f1, f10, f2, rmm # perform operation
fmadd.s f3, f1, f10, f2, rne # perform operation
fmadd.s f3, f1, f10, f2, rtz # perform operation
fmadd.s f3, f1, f10, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f1, f10, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f1, f10, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7f800001)
li x10, 0x72c8aaccff0f1813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xbd8b58edcf3ff43f # load x3 with value 0xbd8b58edcf3ff43f
sw x3, 0(x2) # store 0xbd8b58edcf3ff43f in memory
flw f9, 0(x2) # load 0xbd8b58edcf3ff43f from memory into f9
fmadd.s f10, f18, f26, f9, dyn # perform operation
fmadd.s f10, f18, f26, f9, rdn # perform operation
fmadd.s f10, f18, f26, f9, rmm # perform operation
fmadd.s f10, f18, f26, f9, rne # perform operation
fmadd.s f10, f18, f26, f9, rtz # perform operation
fmadd.s f10, f18, f26, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f26, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f26, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7fbfffff)
li x31, 0xd0d6f2bc6db3e505 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x49a639f3dfe3efbc # load x3 with value 0x49a639f3dfe3efbc
sw x3, 0(x2) # store 0x49a639f3dfe3efbc in memory
flw f20, 0(x2) # load 0x49a639f3dfe3efbc from memory into f20
fmadd.s f31, f4, f17, f20, dyn # perform operation
fmadd.s f31, f4, f17, f20, rdn # perform operation
fmadd.s f31, f4, f17, f20, rmm # perform operation
fmadd.s f31, f4, f17, f20, rne # perform operation
fmadd.s f31, f4, f17, f20, rtz # perform operation
fmadd.s f31, f4, f17, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f4, f17, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f4, f17, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f4, f17, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f4, f17, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f4, f17, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x7ef8654f)
li x14, 0xbf1f1138f54ffe7e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0xbd802f4186efbb85 # load x3 with value 0xbd802f4186efbb85
sw x3, 0(x2) # store 0xbd802f4186efbb85 in memory
flw f12, 0(x2) # load 0xbd802f4186efbb85 from memory into f12
fmadd.s f14, f19, f29, f12, dyn # perform operation
fmadd.s f14, f19, f29, f12, rdn # perform operation
fmadd.s f14, f19, f29, f12, rmm # perform operation
fmadd.s f14, f19, f29, f12, rne # perform operation
fmadd.s f14, f19, f29, f12, rtz # perform operation
fmadd.s f14, f19, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f19, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f19, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3f800000 fs2 = 0x813d9ab0)
li x12, 0x99818c8185d3953a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x418190a478bb5bdb # load x3 with value 0x418190a478bb5bdb
sw x3, 0(x2) # store 0x418190a478bb5bdb in memory
flw f22, 0(x2) # load 0x418190a478bb5bdb from memory into f22
fmadd.s f12, f11, f26, f22, dyn # perform operation
fmadd.s f12, f11, f26, f22, rdn # perform operation
fmadd.s f12, f11, f26, f22, rmm # perform operation
fmadd.s f12, f11, f26, f22, rne # perform operation
fmadd.s f12, f11, f26, f22, rtz # perform operation
fmadd.s f12, f11, f26, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f11, f26, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f11, f26, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x0)
li x6, 0x54111af3acb5bddf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x97c1cc6d53459c73 # load x3 with value 0x97c1cc6d53459c73
sw x3, 0(x2) # store 0x97c1cc6d53459c73 in memory
flw f21, 0(x2) # load 0x97c1cc6d53459c73 from memory into f21
fmadd.s f6, f26, f16, f21, dyn # perform operation
fmadd.s f6, f26, f16, f21, rdn # perform operation
fmadd.s f6, f26, f16, f21, rmm # perform operation
fmadd.s f6, f26, f16, f21, rne # perform operation
fmadd.s f6, f26, f16, f21, rtz # perform operation
fmadd.s f6, f26, f16, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f26, f16, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f26, f16, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000000)
li x24, 0x37c38f35f1537d51 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x2fe35e628f4bdb3c # load x3 with value 0x2fe35e628f4bdb3c
sw x3, 0(x2) # store 0x2fe35e628f4bdb3c in memory
flw f10, 0(x2) # load 0x2fe35e628f4bdb3c from memory into f10
fmadd.s f24, f14, f18, f10, dyn # perform operation
fmadd.s f24, f14, f18, f10, rdn # perform operation
fmadd.s f24, f14, f18, f10, rmm # perform operation
fmadd.s f24, f14, f18, f10, rne # perform operation
fmadd.s f24, f14, f18, f10, rtz # perform operation
fmadd.s f24, f14, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f14, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3f800000)
li x17, 0xecfb1da660c8047f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x76d7b67b10518f10 # load x3 with value 0x76d7b67b10518f10
sw x3, 0(x2) # store 0x76d7b67b10518f10 in memory
flw f5, 0(x2) # load 0x76d7b67b10518f10 from memory into f5
fmadd.s f17, f23, f19, f5, dyn # perform operation
fmadd.s f17, f23, f19, f5, rdn # perform operation
fmadd.s f17, f23, f19, f5, rmm # perform operation
fmadd.s f17, f23, f19, f5, rne # perform operation
fmadd.s f17, f23, f19, f5, rtz # perform operation
fmadd.s f17, f23, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbf800000)
li x18, 0x0e0c9976c0be578f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x8cb83d20f5d17b95 # load x3 with value 0x8cb83d20f5d17b95
sw x3, 0(x2) # store 0x8cb83d20f5d17b95 in memory
flw f8, 0(x2) # load 0x8cb83d20f5d17b95 from memory into f8
fmadd.s f18, f4, f19, f8, dyn # perform operation
fmadd.s f18, f4, f19, f8, rdn # perform operation
fmadd.s f18, f4, f19, f8, rmm # perform operation
fmadd.s f18, f4, f19, f8, rne # perform operation
fmadd.s f18, f4, f19, f8, rtz # perform operation
fmadd.s f18, f4, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f4, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f4, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f4, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f4, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f4, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x3fc00000)
li x10, 0xb540900d29523060 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xdf82aa3d01c45e80 # load x3 with value 0xdf82aa3d01c45e80
sw x3, 0(x2) # store 0xdf82aa3d01c45e80 in memory
flw f13, 0(x2) # load 0xdf82aa3d01c45e80 from memory into f13
fmadd.s f10, f2, f3, f13, dyn # perform operation
fmadd.s f10, f2, f3, f13, rdn # perform operation
fmadd.s f10, f2, f3, f13, rmm # perform operation
fmadd.s f10, f2, f3, f13, rne # perform operation
fmadd.s f10, f2, f3, f13, rtz # perform operation
fmadd.s f10, f2, f3, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f3, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f3, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xbfc00000)
li x29, 0xf696cda79a08eb80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f30, 0(x2) # load 0xbfc00000 from memory into f30
li x3, 0xb313e0e388e425e6 # load x3 with value 0xb313e0e388e425e6
sw x3, 0(x2) # store 0xb313e0e388e425e6 in memory
flw f21, 0(x2) # load 0xb313e0e388e425e6 from memory into f21
fmadd.s f29, f20, f30, f21, dyn # perform operation
fmadd.s f29, f20, f30, f21, rdn # perform operation
fmadd.s f29, f20, f30, f21, rmm # perform operation
fmadd.s f29, f20, f30, f21, rne # perform operation
fmadd.s f29, f20, f30, f21, rtz # perform operation
fmadd.s f29, f20, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f20, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f20, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x40000000)
li x17, 0x933cfb48fe2e0e10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x823ef58b076761b7 # load x3 with value 0x823ef58b076761b7
sw x3, 0(x2) # store 0x823ef58b076761b7 in memory
flw f30, 0(x2) # load 0x823ef58b076761b7 from memory into f30
fmadd.s f17, f2, f7, f30, dyn # perform operation
fmadd.s f17, f2, f7, f30, rdn # perform operation
fmadd.s f17, f2, f7, f30, rmm # perform operation
fmadd.s f17, f2, f7, f30, rne # perform operation
fmadd.s f17, f2, f7, f30, rtz # perform operation
fmadd.s f17, f2, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xc0000000)
li x8, 0xee4782ef7af3805b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0xdeab970db75cd082 # load x3 with value 0xdeab970db75cd082
sw x3, 0(x2) # store 0xdeab970db75cd082 in memory
flw f9, 0(x2) # load 0xdeab970db75cd082 from memory into f9
fmadd.s f8, f7, f4, f9, dyn # perform operation
fmadd.s f8, f7, f4, f9, rdn # perform operation
fmadd.s f8, f7, f4, f9, rmm # perform operation
fmadd.s f8, f7, f4, f9, rne # perform operation
fmadd.s f8, f7, f4, f9, rtz # perform operation
fmadd.s f8, f7, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f7, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f7, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f7, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f7, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f7, f4, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x800000)
li x23, 0xd7051c57a39d0b44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xe435440303a968fa # load x3 with value 0xe435440303a968fa
sw x3, 0(x2) # store 0xe435440303a968fa in memory
flw f4, 0(x2) # load 0xe435440303a968fa from memory into f4
fmadd.s f23, f12, f31, f4, dyn # perform operation
fmadd.s f23, f12, f31, f4, rdn # perform operation
fmadd.s f23, f12, f31, f4, rmm # perform operation
fmadd.s f23, f12, f31, f4, rne # perform operation
fmadd.s f23, f12, f31, f4, rtz # perform operation
fmadd.s f23, f12, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80800000)
li x9, 0x2f2873e8c961359e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x19963a724c4188ce # load x3 with value 0x19963a724c4188ce
sw x3, 0(x2) # store 0x19963a724c4188ce in memory
flw f16, 0(x2) # load 0x19963a724c4188ce from memory into f16
fmadd.s f9, f27, f8, f16, dyn # perform operation
fmadd.s f9, f27, f8, f16, rdn # perform operation
fmadd.s f9, f27, f8, f16, rmm # perform operation
fmadd.s f9, f27, f8, f16, rne # perform operation
fmadd.s f9, f27, f8, f16, rtz # perform operation
fmadd.s f9, f27, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f7fffff)
li x28, 0x92245e0463d114b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x4144c7efc556646f # load x3 with value 0x4144c7efc556646f
sw x3, 0(x2) # store 0x4144c7efc556646f in memory
flw f20, 0(x2) # load 0x4144c7efc556646f from memory into f20
fmadd.s f28, f1, f6, f20, dyn # perform operation
fmadd.s f28, f1, f6, f20, rdn # perform operation
fmadd.s f28, f1, f6, f20, rmm # perform operation
fmadd.s f28, f1, f6, f20, rne # perform operation
fmadd.s f28, f1, f6, f20, rtz # perform operation
fmadd.s f28, f1, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f1, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f1, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff7fffff)
li x12, 0xb5b74bc9665bc103 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xd58469fd6313d5d1 # load x3 with value 0xd58469fd6313d5d1
sw x3, 0(x2) # store 0xd58469fd6313d5d1 in memory
flw f7, 0(x2) # load 0xd58469fd6313d5d1 from memory into f7
fmadd.s f12, f9, f31, f7, dyn # perform operation
fmadd.s f12, f9, f31, f7, rdn # perform operation
fmadd.s f12, f9, f31, f7, rmm # perform operation
fmadd.s f12, f9, f31, f7, rne # perform operation
fmadd.s f12, f9, f31, f7, rtz # perform operation
fmadd.s f12, f9, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f9, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f9, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f9, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f9, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f9, f31, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffff)
li x10, 0x422f84fe55ab26d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x32c7670c541e2ff7 # load x3 with value 0x32c7670c541e2ff7
sw x3, 0(x2) # store 0x32c7670c541e2ff7 in memory
flw f20, 0(x2) # load 0x32c7670c541e2ff7 from memory into f20
fmadd.s f10, f16, f13, f20, dyn # perform operation
fmadd.s f10, f16, f13, f20, rdn # perform operation
fmadd.s f10, f16, f13, f20, rmm # perform operation
fmadd.s f10, f16, f13, f20, rne # perform operation
fmadd.s f10, f16, f13, f20, rtz # perform operation
fmadd.s f10, f16, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x807fffff)
li x6, 0x3dd6bcab19d3e3a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
li x3, 0x95e66723dc232b57 # load x3 with value 0x95e66723dc232b57
sw x3, 0(x2) # store 0x95e66723dc232b57 in memory
flw f7, 0(x2) # load 0x95e66723dc232b57 from memory into f7
fmadd.s f6, f18, f13, f7, dyn # perform operation
fmadd.s f6, f18, f13, f7, rdn # perform operation
fmadd.s f6, f18, f13, f7, rmm # perform operation
fmadd.s f6, f18, f13, f7, rne # perform operation
fmadd.s f6, f18, f13, f7, rtz # perform operation
fmadd.s f6, f18, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x400000)
li x18, 0xbf5e08f1f798974d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
li x3, 0xdb4d89c6a0b69bbd # load x3 with value 0xdb4d89c6a0b69bbd
sw x3, 0(x2) # store 0xdb4d89c6a0b69bbd in memory
flw f27, 0(x2) # load 0xdb4d89c6a0b69bbd from memory into f27
fmadd.s f18, f12, f2, f27, dyn # perform operation
fmadd.s f18, f12, f2, f27, rdn # perform operation
fmadd.s f18, f12, f2, f27, rmm # perform operation
fmadd.s f18, f12, f2, f27, rne # perform operation
fmadd.s f18, f12, f2, f27, rtz # perform operation
fmadd.s f18, f12, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f12, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f12, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f12, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f12, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f12, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80400000)
li x5, 0x681c7948fe07d40b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0xa4d6f3736a71998e # load x3 with value 0xa4d6f3736a71998e
sw x3, 0(x2) # store 0xa4d6f3736a71998e in memory
flw f18, 0(x2) # load 0xa4d6f3736a71998e from memory into f18
fmadd.s f5, f16, f19, f18, dyn # perform operation
fmadd.s f5, f16, f19, f18, rdn # perform operation
fmadd.s f5, f16, f19, f18, rmm # perform operation
fmadd.s f5, f16, f19, f18, rne # perform operation
fmadd.s f5, f16, f19, f18, rtz # perform operation
fmadd.s f5, f16, f19, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f16, f19, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f16, f19, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x1)
li x25, 0x0c4611bb51407b33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xe787c7047bc55bb1 # load x3 with value 0xe787c7047bc55bb1
sw x3, 0(x2) # store 0xe787c7047bc55bb1 in memory
flw f15, 0(x2) # load 0xe787c7047bc55bb1 from memory into f15
fmadd.s f25, f3, f18, f15, dyn # perform operation
fmadd.s f25, f3, f18, f15, rdn # perform operation
fmadd.s f25, f3, f18, f15, rmm # perform operation
fmadd.s f25, f3, f18, f15, rne # perform operation
fmadd.s f25, f3, f18, f15, rtz # perform operation
fmadd.s f25, f3, f18, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f18, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f18, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x80000001)
li x28, 0x8f8d49f05d3e6c4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0xf230d78b1b133c35 # load x3 with value 0xf230d78b1b133c35
sw x3, 0(x2) # store 0xf230d78b1b133c35 in memory
flw f5, 0(x2) # load 0xf230d78b1b133c35 from memory into f5
fmadd.s f28, f18, f19, f5, dyn # perform operation
fmadd.s f28, f18, f19, f5, rdn # perform operation
fmadd.s f28, f18, f19, f5, rmm # perform operation
fmadd.s f28, f18, f19, f5, rne # perform operation
fmadd.s f28, f18, f19, f5, rtz # perform operation
fmadd.s f28, f18, f19, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f18, f19, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f18, f19, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800000)
li x1, 0xfe404dc16708e34f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xbf209a6c61712a7e # load x3 with value 0xbf209a6c61712a7e
sw x3, 0(x2) # store 0xbf209a6c61712a7e in memory
flw f28, 0(x2) # load 0xbf209a6c61712a7e from memory into f28
fmadd.s f1, f2, f8, f28, dyn # perform operation
fmadd.s f1, f2, f8, f28, rdn # perform operation
fmadd.s f1, f2, f8, f28, rmm # perform operation
fmadd.s f1, f2, f8, f28, rne # perform operation
fmadd.s f1, f2, f8, f28, rtz # perform operation
fmadd.s f1, f2, f8, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f8, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f8, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0xff800000)
li x29, 0x61c26b021f3e3d44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x1d079f35d8ec5322 # load x3 with value 0x1d079f35d8ec5322
sw x3, 0(x2) # store 0x1d079f35d8ec5322 in memory
flw f7, 0(x2) # load 0x1d079f35d8ec5322 from memory into f7
fmadd.s f29, f9, f1, f7, dyn # perform operation
fmadd.s f29, f9, f1, f7, rdn # perform operation
fmadd.s f29, f9, f1, f7, rmm # perform operation
fmadd.s f29, f9, f1, f7, rne # perform operation
fmadd.s f29, f9, f1, f7, rtz # perform operation
fmadd.s f29, f9, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fc00000)
li x12, 0x538f3156f122f5dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xde6b85a57304d48d # load x3 with value 0xde6b85a57304d48d
sw x3, 0(x2) # store 0xde6b85a57304d48d in memory
flw f1, 0(x2) # load 0xde6b85a57304d48d from memory into f1
fmadd.s f12, f10, f4, f1, dyn # perform operation
fmadd.s f12, f10, f4, f1, rdn # perform operation
fmadd.s f12, f10, f4, f1, rmm # perform operation
fmadd.s f12, f10, f4, f1, rne # perform operation
fmadd.s f12, f10, f4, f1, rtz # perform operation
fmadd.s f12, f10, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f4, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fffffff)
li x3, 0x2d755f2e3d4981bc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0xc4c7f0c130bdf192 # load x3 with value 0xc4c7f0c130bdf192
sw x3, 0(x2) # store 0xc4c7f0c130bdf192 in memory
flw f2, 0(x2) # load 0xc4c7f0c130bdf192 from memory into f2
fmadd.s f3, f23, f27, f2, dyn # perform operation
fmadd.s f3, f23, f27, f2, rdn # perform operation
fmadd.s f3, f23, f27, f2, rmm # perform operation
fmadd.s f3, f23, f27, f2, rne # perform operation
fmadd.s f3, f23, f27, f2, rtz # perform operation
fmadd.s f3, f23, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f27, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7f800001)
li x18, 0x852ae900f2b96dc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xd7b484538bbef1f5 # load x3 with value 0xd7b484538bbef1f5
sw x3, 0(x2) # store 0xd7b484538bbef1f5 in memory
flw f1, 0(x2) # load 0xd7b484538bbef1f5 from memory into f1
fmadd.s f18, f4, f13, f1, dyn # perform operation
fmadd.s f18, f4, f13, f1, rdn # perform operation
fmadd.s f18, f4, f13, f1, rmm # perform operation
fmadd.s f18, f4, f13, f1, rne # perform operation
fmadd.s f18, f4, f13, f1, rtz # perform operation
fmadd.s f18, f4, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f4, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f4, f13, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7fbfffff)
li x9, 0xe54e349217d35dfa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0x48fae342e9dabf62 # load x3 with value 0x48fae342e9dabf62
sw x3, 0(x2) # store 0x48fae342e9dabf62 in memory
flw f20, 0(x2) # load 0x48fae342e9dabf62 from memory into f20
fmadd.s f9, f3, f25, f20, dyn # perform operation
fmadd.s f9, f3, f25, f20, rdn # perform operation
fmadd.s f9, f3, f25, f20, rmm # perform operation
fmadd.s f9, f3, f25, f20, rne # perform operation
fmadd.s f9, f3, f25, f20, rtz # perform operation
fmadd.s f9, f3, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x7ef8654f)
li x11, 0x86ccfea5a9f93b61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x138b943945513b89 # load x3 with value 0x138b943945513b89
sw x3, 0(x2) # store 0x138b943945513b89 in memory
flw f20, 0(x2) # load 0x138b943945513b89 from memory into f20
fmadd.s f11, f17, f4, f20, dyn # perform operation
fmadd.s f11, f17, f4, f20, rdn # perform operation
fmadd.s f11, f17, f4, f20, rmm # perform operation
fmadd.s f11, f17, f4, f20, rne # perform operation
fmadd.s f11, f17, f4, f20, rtz # perform operation
fmadd.s f11, f17, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f17, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f17, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f17, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f17, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f17, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbf800000 fs2 = 0x813d9ab0)
li x6, 0xa99d810a233b2739 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xae390d401f6c00e2 # load x3 with value 0xae390d401f6c00e2
sw x3, 0(x2) # store 0xae390d401f6c00e2 in memory
flw f13, 0(x2) # load 0xae390d401f6c00e2 from memory into f13
fmadd.s f6, f22, f27, f13, dyn # perform operation
fmadd.s f6, f22, f27, f13, rdn # perform operation
fmadd.s f6, f22, f27, f13, rmm # perform operation
fmadd.s f6, f22, f27, f13, rne # perform operation
fmadd.s f6, f22, f27, f13, rtz # perform operation
fmadd.s f6, f22, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f22, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f22, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f22, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f22, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f22, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x0)
li x14, 0xf10ea73ac85511c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x3fc7e74cbb6a0f4 # load x3 with value 0x3fc7e74cbb6a0f4
sw x3, 0(x2) # store 0x3fc7e74cbb6a0f4 in memory
flw f31, 0(x2) # load 0x3fc7e74cbb6a0f4 from memory into f31
fmadd.s f14, f9, f17, f31, dyn # perform operation
fmadd.s f14, f9, f17, f31, rdn # perform operation
fmadd.s f14, f9, f17, f31, rmm # perform operation
fmadd.s f14, f9, f17, f31, rne # perform operation
fmadd.s f14, f9, f17, f31, rtz # perform operation
fmadd.s f14, f9, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f17, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000000)
li x31, 0xdc05717d76eb0f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f25, 0(x2) # load 0x80000000 from memory into f25
li x3, 0xf535f572a40aec9a # load x3 with value 0xf535f572a40aec9a
sw x3, 0(x2) # store 0xf535f572a40aec9a in memory
flw f24, 0(x2) # load 0xf535f572a40aec9a from memory into f24
fmadd.s f31, f30, f25, f24, dyn # perform operation
fmadd.s f31, f30, f25, f24, rdn # perform operation
fmadd.s f31, f30, f25, f24, rmm # perform operation
fmadd.s f31, f30, f25, f24, rne # perform operation
fmadd.s f31, f30, f25, f24, rtz # perform operation
fmadd.s f31, f30, f25, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f30, f25, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f30, f25, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3f800000)
li x28, 0x80c7d4f6b44d4788 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
li x3, 0x4bd3f7df3c01b0ed # load x3 with value 0x4bd3f7df3c01b0ed
sw x3, 0(x2) # store 0x4bd3f7df3c01b0ed in memory
flw f13, 0(x2) # load 0x4bd3f7df3c01b0ed from memory into f13
fmadd.s f28, f4, f5, f13, dyn # perform operation
fmadd.s f28, f4, f5, f13, rdn # perform operation
fmadd.s f28, f4, f5, f13, rmm # perform operation
fmadd.s f28, f4, f5, f13, rne # perform operation
fmadd.s f28, f4, f5, f13, rtz # perform operation
fmadd.s f28, f4, f5, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f4, f5, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f4, f5, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbf800000)
li x3, 0xa5114f37ddcf6d40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x12c3ce41d8f9a44c # load x3 with value 0x12c3ce41d8f9a44c
sw x3, 0(x2) # store 0x12c3ce41d8f9a44c in memory
flw f26, 0(x2) # load 0x12c3ce41d8f9a44c from memory into f26
fmadd.s f3, f21, f16, f26, dyn # perform operation
fmadd.s f3, f21, f16, f26, rdn # perform operation
fmadd.s f3, f21, f16, f26, rmm # perform operation
fmadd.s f3, f21, f16, f26, rne # perform operation
fmadd.s f3, f21, f16, f26, rtz # perform operation
fmadd.s f3, f21, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x3fc00000)
li x14, 0x0998dfc378459e60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0xa19ca05650d21d1 # load x3 with value 0xa19ca05650d21d1
sw x3, 0(x2) # store 0xa19ca05650d21d1 in memory
flw f11, 0(x2) # load 0xa19ca05650d21d1 from memory into f11
fmadd.s f14, f16, f19, f11, dyn # perform operation
fmadd.s f14, f16, f19, f11, rdn # perform operation
fmadd.s f14, f16, f19, f11, rmm # perform operation
fmadd.s f14, f16, f19, f11, rne # perform operation
fmadd.s f14, f16, f19, f11, rtz # perform operation
fmadd.s f14, f16, f19, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f16, f19, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f16, f19, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xbfc00000)
li x26, 0x305cfbd1f51e8593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0x412934b35592f080 # load x3 with value 0x412934b35592f080
sw x3, 0(x2) # store 0x412934b35592f080 in memory
flw f20, 0(x2) # load 0x412934b35592f080 from memory into f20
fmadd.s f26, f11, f14, f20, dyn # perform operation
fmadd.s f26, f11, f14, f20, rdn # perform operation
fmadd.s f26, f11, f14, f20, rmm # perform operation
fmadd.s f26, f11, f14, f20, rne # perform operation
fmadd.s f26, f11, f14, f20, rtz # perform operation
fmadd.s f26, f11, f14, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f14, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f14, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x40000000)
li x27, 0xdacf06833b972df3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xbc65195f8de425a1 # load x3 with value 0xbc65195f8de425a1
sw x3, 0(x2) # store 0xbc65195f8de425a1 in memory
flw f15, 0(x2) # load 0xbc65195f8de425a1 from memory into f15
fmadd.s f27, f3, f2, f15, dyn # perform operation
fmadd.s f27, f3, f2, f15, rdn # perform operation
fmadd.s f27, f3, f2, f15, rmm # perform operation
fmadd.s f27, f3, f2, f15, rne # perform operation
fmadd.s f27, f3, f2, f15, rtz # perform operation
fmadd.s f27, f3, f2, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f2, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f2, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xc0000000)
li x15, 0xab2c930d181416d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
li x3, 0x143ce2cda58324af # load x3 with value 0x143ce2cda58324af
sw x3, 0(x2) # store 0x143ce2cda58324af in memory
flw f26, 0(x2) # load 0x143ce2cda58324af from memory into f26
fmadd.s f15, f14, f16, f26, dyn # perform operation
fmadd.s f15, f14, f16, f26, rdn # perform operation
fmadd.s f15, f14, f16, f26, rmm # perform operation
fmadd.s f15, f14, f16, f26, rne # perform operation
fmadd.s f15, f14, f16, f26, rtz # perform operation
fmadd.s f15, f14, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x800000)
li x22, 0x857e086ba2627dd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xd38bb9ceaeab88a # load x3 with value 0xd38bb9ceaeab88a
sw x3, 0(x2) # store 0xd38bb9ceaeab88a in memory
flw f31, 0(x2) # load 0xd38bb9ceaeab88a from memory into f31
fmadd.s f22, f2, f10, f31, dyn # perform operation
fmadd.s f22, f2, f10, f31, rdn # perform operation
fmadd.s f22, f2, f10, f31, rmm # perform operation
fmadd.s f22, f2, f10, f31, rne # perform operation
fmadd.s f22, f2, f10, f31, rtz # perform operation
fmadd.s f22, f2, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f10, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80800000)
li x16, 0x32484a17a9d65325 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0xbf8f2e524ad7c275 # load x3 with value 0xbf8f2e524ad7c275
sw x3, 0(x2) # store 0xbf8f2e524ad7c275 in memory
flw f10, 0(x2) # load 0xbf8f2e524ad7c275 from memory into f10
fmadd.s f16, f31, f20, f10, dyn # perform operation
fmadd.s f16, f31, f20, f10, rdn # perform operation
fmadd.s f16, f31, f20, f10, rmm # perform operation
fmadd.s f16, f31, f20, f10, rne # perform operation
fmadd.s f16, f31, f20, f10, rtz # perform operation
fmadd.s f16, f31, f20, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f20, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f20, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f7fffff)
li x27, 0x56ec94e819d76eba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0x2dcd3346b131088 # load x3 with value 0x2dcd3346b131088
sw x3, 0(x2) # store 0x2dcd3346b131088 in memory
flw f26, 0(x2) # load 0x2dcd3346b131088 from memory into f26
fmadd.s f27, f17, f11, f26, dyn # perform operation
fmadd.s f27, f17, f11, f26, rdn # perform operation
fmadd.s f27, f17, f11, f26, rmm # perform operation
fmadd.s f27, f17, f11, f26, rne # perform operation
fmadd.s f27, f17, f11, f26, rtz # perform operation
fmadd.s f27, f17, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff7fffff)
li x2, 0x0a2a42c761558e3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xce9509da6bef97ca # load x3 with value 0xce9509da6bef97ca
sw x3, 0(x2) # store 0xce9509da6bef97ca in memory
flw f16, 0(x2) # load 0xce9509da6bef97ca from memory into f16
fmadd.s f2, f27, f17, f16, dyn # perform operation
fmadd.s f2, f27, f17, f16, rdn # perform operation
fmadd.s f2, f27, f17, f16, rmm # perform operation
fmadd.s f2, f27, f17, f16, rne # perform operation
fmadd.s f2, f27, f17, f16, rtz # perform operation
fmadd.s f2, f27, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffff)
li x20, 0x714792dcec0ae3dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f6, 0(x2) # load 0x3fc00000 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x149e7d316025a15 # load x3 with value 0x149e7d316025a15
sw x3, 0(x2) # store 0x149e7d316025a15 in memory
flw f7, 0(x2) # load 0x149e7d316025a15 from memory into f7
fmadd.s f20, f6, f11, f7, dyn # perform operation
fmadd.s f20, f6, f11, f7, rdn # perform operation
fmadd.s f20, f6, f11, f7, rmm # perform operation
fmadd.s f20, f6, f11, f7, rne # perform operation
fmadd.s f20, f6, f11, f7, rtz # perform operation
fmadd.s f20, f6, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f11, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x807fffff)
li x20, 0xa9363284593bae4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x5addf24c6b6dfe41 # load x3 with value 0x5addf24c6b6dfe41
sw x3, 0(x2) # store 0x5addf24c6b6dfe41 in memory
flw f28, 0(x2) # load 0x5addf24c6b6dfe41 from memory into f28
fmadd.s f20, f9, f2, f28, dyn # perform operation
fmadd.s f20, f9, f2, f28, rdn # perform operation
fmadd.s f20, f9, f2, f28, rmm # perform operation
fmadd.s f20, f9, f2, f28, rne # perform operation
fmadd.s f20, f9, f2, f28, rtz # perform operation
fmadd.s f20, f9, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x400000)
li x14, 0xd16dc74daad31643 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xc91e59b3b14ef4e5 # load x3 with value 0xc91e59b3b14ef4e5
sw x3, 0(x2) # store 0xc91e59b3b14ef4e5 in memory
flw f2, 0(x2) # load 0xc91e59b3b14ef4e5 from memory into f2
fmadd.s f14, f4, f19, f2, dyn # perform operation
fmadd.s f14, f4, f19, f2, rdn # perform operation
fmadd.s f14, f4, f19, f2, rmm # perform operation
fmadd.s f14, f4, f19, f2, rne # perform operation
fmadd.s f14, f4, f19, f2, rtz # perform operation
fmadd.s f14, f4, f19, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f4, f19, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f4, f19, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f4, f19, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f4, f19, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f4, f19, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80400000)
li x20, 0xff0552b9e1928030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x77795bf704d12633 # load x3 with value 0x77795bf704d12633
sw x3, 0(x2) # store 0x77795bf704d12633 in memory
flw f28, 0(x2) # load 0x77795bf704d12633 from memory into f28
fmadd.s f20, f18, f2, f28, dyn # perform operation
fmadd.s f20, f18, f2, f28, rdn # perform operation
fmadd.s f20, f18, f2, f28, rmm # perform operation
fmadd.s f20, f18, f2, f28, rne # perform operation
fmadd.s f20, f18, f2, f28, rtz # perform operation
fmadd.s f20, f18, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f2, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x1)
li x27, 0xa7bc2eb492477ffd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
li x3, 0x760956159f055019 # load x3 with value 0x760956159f055019
sw x3, 0(x2) # store 0x760956159f055019 in memory
flw f7, 0(x2) # load 0x760956159f055019 from memory into f7
fmadd.s f27, f10, f3, f7, dyn # perform operation
fmadd.s f27, f10, f3, f7, rdn # perform operation
fmadd.s f27, f10, f3, f7, rmm # perform operation
fmadd.s f27, f10, f3, f7, rne # perform operation
fmadd.s f27, f10, f3, f7, rtz # perform operation
fmadd.s f27, f10, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f10, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f10, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f10, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f10, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f10, f3, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x80000001)
li x12, 0x110979dfc474c3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x5a3b27b541ff999d # load x3 with value 0x5a3b27b541ff999d
sw x3, 0(x2) # store 0x5a3b27b541ff999d in memory
flw f20, 0(x2) # load 0x5a3b27b541ff999d from memory into f20
fmadd.s f12, f3, f10, f20, dyn # perform operation
fmadd.s f12, f3, f10, f20, rdn # perform operation
fmadd.s f12, f3, f10, f20, rmm # perform operation
fmadd.s f12, f3, f10, f20, rne # perform operation
fmadd.s f12, f3, f10, f20, rtz # perform operation
fmadd.s f12, f3, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f10, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800000)
li x30, 0xc083cfdbc9eb51e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x4fa9fcfd8051b1b1 # load x3 with value 0x4fa9fcfd8051b1b1
sw x3, 0(x2) # store 0x4fa9fcfd8051b1b1 in memory
flw f26, 0(x2) # load 0x4fa9fcfd8051b1b1 from memory into f26
fmadd.s f30, f28, f11, f26, dyn # perform operation
fmadd.s f30, f28, f11, f26, rdn # perform operation
fmadd.s f30, f28, f11, f26, rmm # perform operation
fmadd.s f30, f28, f11, f26, rne # perform operation
fmadd.s f30, f28, f11, f26, rtz # perform operation
fmadd.s f30, f28, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f11, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0xff800000)
li x26, 0x578530ca50e20026 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x60aa6c6b33db9216 # load x3 with value 0x60aa6c6b33db9216
sw x3, 0(x2) # store 0x60aa6c6b33db9216 in memory
flw f9, 0(x2) # load 0x60aa6c6b33db9216 from memory into f9
fmadd.s f26, f21, f11, f9, dyn # perform operation
fmadd.s f26, f21, f11, f9, rdn # perform operation
fmadd.s f26, f21, f11, f9, rmm # perform operation
fmadd.s f26, f21, f11, f9, rne # perform operation
fmadd.s f26, f21, f11, f9, rtz # perform operation
fmadd.s f26, f21, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f21, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f21, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f21, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f21, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f21, f11, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fc00000)
li x24, 0x4f48faa4573074f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f29, 0(x2) # load 0x3fc00000 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xef07307f6705924f # load x3 with value 0xef07307f6705924f
sw x3, 0(x2) # store 0xef07307f6705924f in memory
flw f25, 0(x2) # load 0xef07307f6705924f from memory into f25
fmadd.s f24, f29, f30, f25, dyn # perform operation
fmadd.s f24, f29, f30, f25, rdn # perform operation
fmadd.s f24, f29, f30, f25, rmm # perform operation
fmadd.s f24, f29, f30, f25, rne # perform operation
fmadd.s f24, f29, f30, f25, rtz # perform operation
fmadd.s f24, f29, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f29, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f29, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f29, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f29, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f29, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fffffff)
li x16, 0xb16140805482148c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0xc62a51ed1267bec8 # load x3 with value 0xc62a51ed1267bec8
sw x3, 0(x2) # store 0xc62a51ed1267bec8 in memory
flw f24, 0(x2) # load 0xc62a51ed1267bec8 from memory into f24
fmadd.s f16, f22, f31, f24, dyn # perform operation
fmadd.s f16, f22, f31, f24, rdn # perform operation
fmadd.s f16, f22, f31, f24, rmm # perform operation
fmadd.s f16, f22, f31, f24, rne # perform operation
fmadd.s f16, f22, f31, f24, rtz # perform operation
fmadd.s f16, f22, f31, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f31, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f31, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7f800001)
li x7, 0xa338da5e4659b322 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
li x3, 0x54e598b20ffa2707 # load x3 with value 0x54e598b20ffa2707
sw x3, 0(x2) # store 0x54e598b20ffa2707 in memory
flw f27, 0(x2) # load 0x54e598b20ffa2707 from memory into f27
fmadd.s f7, f8, f2, f27, dyn # perform operation
fmadd.s f7, f8, f2, f27, rdn # perform operation
fmadd.s f7, f8, f2, f27, rmm # perform operation
fmadd.s f7, f8, f2, f27, rne # perform operation
fmadd.s f7, f8, f2, f27, rtz # perform operation
fmadd.s f7, f8, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7fbfffff)
li x30, 0x8baeb1e9c41d94cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x366c31774dde6fd2 # load x3 with value 0x366c31774dde6fd2
sw x3, 0(x2) # store 0x366c31774dde6fd2 in memory
flw f10, 0(x2) # load 0x366c31774dde6fd2 from memory into f10
fmadd.s f30, f16, f18, f10, dyn # perform operation
fmadd.s f30, f16, f18, f10, rdn # perform operation
fmadd.s f30, f16, f18, f10, rmm # perform operation
fmadd.s f30, f16, f18, f10, rne # perform operation
fmadd.s f30, f16, f18, f10, rtz # perform operation
fmadd.s f30, f16, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f16, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f16, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x7ef8654f)
li x13, 0x4c70f7df71e4a813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0xda5cb9c8b93e11eb # load x3 with value 0xda5cb9c8b93e11eb
sw x3, 0(x2) # store 0xda5cb9c8b93e11eb in memory
flw f14, 0(x2) # load 0xda5cb9c8b93e11eb from memory into f14
fmadd.s f13, f19, f29, f14, dyn # perform operation
fmadd.s f13, f19, f29, f14, rdn # perform operation
fmadd.s f13, f19, f29, f14, rmm # perform operation
fmadd.s f13, f19, f29, f14, rne # perform operation
fmadd.s f13, f19, f29, f14, rtz # perform operation
fmadd.s f13, f19, f29, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f29, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f29, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f29, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f29, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f29, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x3fc00000 fs2 = 0x813d9ab0)
li x26, 0x52ccab26b20779bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x5558f376bb4987e1 # load x3 with value 0x5558f376bb4987e1
sw x3, 0(x2) # store 0x5558f376bb4987e1 in memory
flw f19, 0(x2) # load 0x5558f376bb4987e1 from memory into f19
fmadd.s f26, f3, f24, f19, dyn # perform operation
fmadd.s f26, f3, f24, f19, rdn # perform operation
fmadd.s f26, f3, f24, f19, rmm # perform operation
fmadd.s f26, f3, f24, f19, rne # perform operation
fmadd.s f26, f3, f24, f19, rtz # perform operation
fmadd.s f26, f3, f24, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f24, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f24, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x0)
li x2, 0xd7a25738d744615e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0xb01b3851125508d8 # load x3 with value 0xb01b3851125508d8
sw x3, 0(x2) # store 0xb01b3851125508d8 in memory
flw f30, 0(x2) # load 0xb01b3851125508d8 from memory into f30
fmadd.s f2, f17, f8, f30, dyn # perform operation
fmadd.s f2, f17, f8, f30, rdn # perform operation
fmadd.s f2, f17, f8, f30, rmm # perform operation
fmadd.s f2, f17, f8, f30, rne # perform operation
fmadd.s f2, f17, f8, f30, rtz # perform operation
fmadd.s f2, f17, f8, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f8, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f8, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f8, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f8, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f8, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000000)
li x30, 0xe43552aa60cd46ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0x3c3fe3df607bab69 # load x3 with value 0x3c3fe3df607bab69
sw x3, 0(x2) # store 0x3c3fe3df607bab69 in memory
flw f3, 0(x2) # load 0x3c3fe3df607bab69 from memory into f3
fmadd.s f30, f25, f17, f3, dyn # perform operation
fmadd.s f30, f25, f17, f3, rdn # perform operation
fmadd.s f30, f25, f17, f3, rmm # perform operation
fmadd.s f30, f25, f17, f3, rne # perform operation
fmadd.s f30, f25, f17, f3, rtz # perform operation
fmadd.s f30, f25, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3f800000)
li x11, 0x5452cbdcb5aad8ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
li x3, 0x8c506e26f6992357 # load x3 with value 0x8c506e26f6992357
sw x3, 0(x2) # store 0x8c506e26f6992357 in memory
flw f9, 0(x2) # load 0x8c506e26f6992357 from memory into f9
fmadd.s f11, f29, f21, f9, dyn # perform operation
fmadd.s f11, f29, f21, f9, rdn # perform operation
fmadd.s f11, f29, f21, f9, rmm # perform operation
fmadd.s f11, f29, f21, f9, rne # perform operation
fmadd.s f11, f29, f21, f9, rtz # perform operation
fmadd.s f11, f29, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f29, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f29, f21, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbf800000)
li x15, 0xb1de9728f083ddb5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
li x3, 0x2de5104f003a40ef # load x3 with value 0x2de5104f003a40ef
sw x3, 0(x2) # store 0x2de5104f003a40ef in memory
flw f20, 0(x2) # load 0x2de5104f003a40ef from memory into f20
fmadd.s f15, f21, f4, f20, dyn # perform operation
fmadd.s f15, f21, f4, f20, rdn # perform operation
fmadd.s f15, f21, f4, f20, rmm # perform operation
fmadd.s f15, f21, f4, f20, rne # perform operation
fmadd.s f15, f21, f4, f20, rtz # perform operation
fmadd.s f15, f21, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x3fc00000)
li x30, 0x0487222347dbafa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xd255cd9de0d3c216 # load x3 with value 0xd255cd9de0d3c216
sw x3, 0(x2) # store 0xd255cd9de0d3c216 in memory
flw f29, 0(x2) # load 0xd255cd9de0d3c216 from memory into f29
fmadd.s f30, f20, f13, f29, dyn # perform operation
fmadd.s f30, f20, f13, f29, rdn # perform operation
fmadd.s f30, f20, f13, f29, rmm # perform operation
fmadd.s f30, f20, f13, f29, rne # perform operation
fmadd.s f30, f20, f13, f29, rtz # perform operation
fmadd.s f30, f20, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f13, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xbfc00000)
li x14, 0x70412270930c049d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x51422d41c2a17524 # load x3 with value 0x51422d41c2a17524
sw x3, 0(x2) # store 0x51422d41c2a17524 in memory
flw f19, 0(x2) # load 0x51422d41c2a17524 from memory into f19
fmadd.s f14, f18, f17, f19, dyn # perform operation
fmadd.s f14, f18, f17, f19, rdn # perform operation
fmadd.s f14, f18, f17, f19, rmm # perform operation
fmadd.s f14, f18, f17, f19, rne # perform operation
fmadd.s f14, f18, f17, f19, rtz # perform operation
fmadd.s f14, f18, f17, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f17, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f17, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x40000000)
li x24, 0x0d9f33f613224b6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0xc4e1e52dfc0a7843 # load x3 with value 0xc4e1e52dfc0a7843
sw x3, 0(x2) # store 0xc4e1e52dfc0a7843 in memory
flw f31, 0(x2) # load 0xc4e1e52dfc0a7843 from memory into f31
fmadd.s f24, f17, f3, f31, dyn # perform operation
fmadd.s f24, f17, f3, f31, rdn # perform operation
fmadd.s f24, f17, f3, f31, rmm # perform operation
fmadd.s f24, f17, f3, f31, rne # perform operation
fmadd.s f24, f17, f3, f31, rtz # perform operation
fmadd.s f24, f17, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xc0000000)
li x1, 0xc52318d241556ab0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x743319299caa957b # load x3 with value 0x743319299caa957b
sw x3, 0(x2) # store 0x743319299caa957b in memory
flw f16, 0(x2) # load 0x743319299caa957b from memory into f16
fmadd.s f1, f28, f17, f16, dyn # perform operation
fmadd.s f1, f28, f17, f16, rdn # perform operation
fmadd.s f1, f28, f17, f16, rmm # perform operation
fmadd.s f1, f28, f17, f16, rne # perform operation
fmadd.s f1, f28, f17, f16, rtz # perform operation
fmadd.s f1, f28, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f17, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x800000)
li x28, 0xe6fea26e029a0f0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xeb5c82f78793cd53 # load x3 with value 0xeb5c82f78793cd53
sw x3, 0(x2) # store 0xeb5c82f78793cd53 in memory
flw f11, 0(x2) # load 0xeb5c82f78793cd53 from memory into f11
fmadd.s f28, f29, f9, f11, dyn # perform operation
fmadd.s f28, f29, f9, f11, rdn # perform operation
fmadd.s f28, f29, f9, f11, rmm # perform operation
fmadd.s f28, f29, f9, f11, rne # perform operation
fmadd.s f28, f29, f9, f11, rtz # perform operation
fmadd.s f28, f29, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f9, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80800000)
li x8, 0x97023766a82a8e73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x8b02fae914a937e # load x3 with value 0x8b02fae914a937e
sw x3, 0(x2) # store 0x8b02fae914a937e in memory
flw f23, 0(x2) # load 0x8b02fae914a937e from memory into f23
fmadd.s f8, f18, f10, f23, dyn # perform operation
fmadd.s f8, f18, f10, f23, rdn # perform operation
fmadd.s f8, f18, f10, f23, rmm # perform operation
fmadd.s f8, f18, f10, f23, rne # perform operation
fmadd.s f8, f18, f10, f23, rtz # perform operation
fmadd.s f8, f18, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f18, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f18, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f7fffff)
li x29, 0xe1e63188dfe3597d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x1da98002330b8171 # load x3 with value 0x1da98002330b8171
sw x3, 0(x2) # store 0x1da98002330b8171 in memory
flw f10, 0(x2) # load 0x1da98002330b8171 from memory into f10
fmadd.s f29, f31, f21, f10, dyn # perform operation
fmadd.s f29, f31, f21, f10, rdn # perform operation
fmadd.s f29, f31, f21, f10, rmm # perform operation
fmadd.s f29, f31, f21, f10, rne # perform operation
fmadd.s f29, f31, f21, f10, rtz # perform operation
fmadd.s f29, f31, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff7fffff)
li x11, 0xae0a5c31e471f733 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xd89a26c26cff595c # load x3 with value 0xd89a26c26cff595c
sw x3, 0(x2) # store 0xd89a26c26cff595c in memory
flw f7, 0(x2) # load 0xd89a26c26cff595c from memory into f7
fmadd.s f11, f6, f24, f7, dyn # perform operation
fmadd.s f11, f6, f24, f7, rdn # perform operation
fmadd.s f11, f6, f24, f7, rmm # perform operation
fmadd.s f11, f6, f24, f7, rne # perform operation
fmadd.s f11, f6, f24, f7, rtz # perform operation
fmadd.s f11, f6, f24, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f6, f24, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f6, f24, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffff)
li x22, 0x2a047c88b5d78554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xf75b486c52d1c5a3 # load x3 with value 0xf75b486c52d1c5a3
sw x3, 0(x2) # store 0xf75b486c52d1c5a3 in memory
flw f24, 0(x2) # load 0xf75b486c52d1c5a3 from memory into f24
fmadd.s f22, f7, f20, f24, dyn # perform operation
fmadd.s f22, f7, f20, f24, rdn # perform operation
fmadd.s f22, f7, f20, f24, rmm # perform operation
fmadd.s f22, f7, f20, f24, rne # perform operation
fmadd.s f22, f7, f20, f24, rtz # perform operation
fmadd.s f22, f7, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f20, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x807fffff)
li x17, 0x810752e7c959f378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f29, 0(x2) # load 0xbfc00000 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x7991a3b32599ba47 # load x3 with value 0x7991a3b32599ba47
sw x3, 0(x2) # store 0x7991a3b32599ba47 in memory
flw f15, 0(x2) # load 0x7991a3b32599ba47 from memory into f15
fmadd.s f17, f29, f7, f15, dyn # perform operation
fmadd.s f17, f29, f7, f15, rdn # perform operation
fmadd.s f17, f29, f7, f15, rmm # perform operation
fmadd.s f17, f29, f7, f15, rne # perform operation
fmadd.s f17, f29, f7, f15, rtz # perform operation
fmadd.s f17, f29, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x400000)
li x7, 0x9cc029c88d17d23d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x35259a880052a82d # load x3 with value 0x35259a880052a82d
sw x3, 0(x2) # store 0x35259a880052a82d in memory
flw f18, 0(x2) # load 0x35259a880052a82d from memory into f18
fmadd.s f7, f8, f1, f18, dyn # perform operation
fmadd.s f7, f8, f1, f18, rdn # perform operation
fmadd.s f7, f8, f1, f18, rmm # perform operation
fmadd.s f7, f8, f1, f18, rne # perform operation
fmadd.s f7, f8, f1, f18, rtz # perform operation
fmadd.s f7, f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f8, f1, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80400000)
li x26, 0x1a58f688c1153849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
li x3, 0xe5dd7d96a852147c # load x3 with value 0xe5dd7d96a852147c
sw x3, 0(x2) # store 0xe5dd7d96a852147c in memory
flw f4, 0(x2) # load 0xe5dd7d96a852147c from memory into f4
fmadd.s f26, f22, f19, f4, dyn # perform operation
fmadd.s f26, f22, f19, f4, rdn # perform operation
fmadd.s f26, f22, f19, f4, rmm # perform operation
fmadd.s f26, f22, f19, f4, rne # perform operation
fmadd.s f26, f22, f19, f4, rtz # perform operation
fmadd.s f26, f22, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x1)
li x25, 0x15c897522eef8763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xbfcfac175b0f2246 # load x3 with value 0xbfcfac175b0f2246
sw x3, 0(x2) # store 0xbfcfac175b0f2246 in memory
flw f8, 0(x2) # load 0xbfcfac175b0f2246 from memory into f8
fmadd.s f25, f28, f30, f8, dyn # perform operation
fmadd.s f25, f28, f30, f8, rdn # perform operation
fmadd.s f25, f28, f30, f8, rmm # perform operation
fmadd.s f25, f28, f30, f8, rne # perform operation
fmadd.s f25, f28, f30, f8, rtz # perform operation
fmadd.s f25, f28, f30, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f28, f30, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f28, f30, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x80000001)
li x5, 0x519c59768683f2f7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xd8aef4f4f4143a51 # load x3 with value 0xd8aef4f4f4143a51
sw x3, 0(x2) # store 0xd8aef4f4f4143a51 in memory
flw f27, 0(x2) # load 0xd8aef4f4f4143a51 from memory into f27
fmadd.s f5, f17, f31, f27, dyn # perform operation
fmadd.s f5, f17, f31, f27, rdn # perform operation
fmadd.s f5, f17, f31, f27, rmm # perform operation
fmadd.s f5, f17, f31, f27, rne # perform operation
fmadd.s f5, f17, f31, f27, rtz # perform operation
fmadd.s f5, f17, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f31, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800000)
li x21, 0x979ee51d09ceffbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f20, 0(x2) # load 0xbfc00000 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x3520534f2a3375b9 # load x3 with value 0x3520534f2a3375b9
sw x3, 0(x2) # store 0x3520534f2a3375b9 in memory
flw f19, 0(x2) # load 0x3520534f2a3375b9 from memory into f19
fmadd.s f21, f20, f18, f19, dyn # perform operation
fmadd.s f21, f20, f18, f19, rdn # perform operation
fmadd.s f21, f20, f18, f19, rmm # perform operation
fmadd.s f21, f20, f18, f19, rne # perform operation
fmadd.s f21, f20, f18, f19, rtz # perform operation
fmadd.s f21, f20, f18, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f20, f18, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f20, f18, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0xff800000)
li x15, 0xcd7d96268ef1b60f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xad2f5f336bc43a5b # load x3 with value 0xad2f5f336bc43a5b
sw x3, 0(x2) # store 0xad2f5f336bc43a5b in memory
flw f26, 0(x2) # load 0xad2f5f336bc43a5b from memory into f26
fmadd.s f15, f7, f14, f26, dyn # perform operation
fmadd.s f15, f7, f14, f26, rdn # perform operation
fmadd.s f15, f7, f14, f26, rmm # perform operation
fmadd.s f15, f7, f14, f26, rne # perform operation
fmadd.s f15, f7, f14, f26, rtz # perform operation
fmadd.s f15, f7, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f7, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f7, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f7, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f7, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f7, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fc00000)
li x14, 0xfb868fe5b0d60706 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x6c5acfd7d14d420 # load x3 with value 0x6c5acfd7d14d420
sw x3, 0(x2) # store 0x6c5acfd7d14d420 in memory
flw f10, 0(x2) # load 0x6c5acfd7d14d420 from memory into f10
fmadd.s f14, f25, f31, f10, dyn # perform operation
fmadd.s f14, f25, f31, f10, rdn # perform operation
fmadd.s f14, f25, f31, f10, rmm # perform operation
fmadd.s f14, f25, f31, f10, rne # perform operation
fmadd.s f14, f25, f31, f10, rtz # perform operation
fmadd.s f14, f25, f31, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f31, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f31, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fffffff)
li x6, 0x44a8ec00ea27c57e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x32c04f8f0a1d3d95 # load x3 with value 0x32c04f8f0a1d3d95
sw x3, 0(x2) # store 0x32c04f8f0a1d3d95 in memory
flw f25, 0(x2) # load 0x32c04f8f0a1d3d95 from memory into f25
fmadd.s f6, f21, f22, f25, dyn # perform operation
fmadd.s f6, f21, f22, f25, rdn # perform operation
fmadd.s f6, f21, f22, f25, rmm # perform operation
fmadd.s f6, f21, f22, f25, rne # perform operation
fmadd.s f6, f21, f22, f25, rtz # perform operation
fmadd.s f6, f21, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f21, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f21, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f21, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f21, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f21, f22, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7f800001)
li x14, 0x891ca73bb0435356 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x8852ed23dd08405e # load x3 with value 0x8852ed23dd08405e
sw x3, 0(x2) # store 0x8852ed23dd08405e in memory
flw f11, 0(x2) # load 0x8852ed23dd08405e from memory into f11
fmadd.s f14, f2, f5, f11, dyn # perform operation
fmadd.s f14, f2, f5, f11, rdn # perform operation
fmadd.s f14, f2, f5, f11, rmm # perform operation
fmadd.s f14, f2, f5, f11, rne # perform operation
fmadd.s f14, f2, f5, f11, rtz # perform operation
fmadd.s f14, f2, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f5, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7fbfffff)
li x29, 0x80670819128d2f91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f8, 0(x2) # load 0x7fbfffff from memory into f8
li x3, 0xd9758b271a8fb154 # load x3 with value 0xd9758b271a8fb154
sw x3, 0(x2) # store 0xd9758b271a8fb154 in memory
flw f24, 0(x2) # load 0xd9758b271a8fb154 from memory into f24
fmadd.s f29, f25, f8, f24, dyn # perform operation
fmadd.s f29, f25, f8, f24, rdn # perform operation
fmadd.s f29, f25, f8, f24, rmm # perform operation
fmadd.s f29, f25, f8, f24, rne # perform operation
fmadd.s f29, f25, f8, f24, rtz # perform operation
fmadd.s f29, f25, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f25, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f25, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x7ef8654f)
li x22, 0x051d06dcd6b16a61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xd2eebd27bf55eb30 # load x3 with value 0xd2eebd27bf55eb30
sw x3, 0(x2) # store 0xd2eebd27bf55eb30 in memory
flw f11, 0(x2) # load 0xd2eebd27bf55eb30 from memory into f11
fmadd.s f22, f9, f18, f11, dyn # perform operation
fmadd.s f22, f9, f18, f11, rdn # perform operation
fmadd.s f22, f9, f18, f11, rmm # perform operation
fmadd.s f22, f9, f18, f11, rne # perform operation
fmadd.s f22, f9, f18, f11, rtz # perform operation
fmadd.s f22, f9, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f9, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f9, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xbfc00000 fs2 = 0x813d9ab0)
li x8, 0xd107926cd0a555e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x63e6a4e4a351c9ff # load x3 with value 0x63e6a4e4a351c9ff
sw x3, 0(x2) # store 0x63e6a4e4a351c9ff in memory
flw f24, 0(x2) # load 0x63e6a4e4a351c9ff from memory into f24
fmadd.s f8, f27, f16, f24, dyn # perform operation
fmadd.s f8, f27, f16, f24, rdn # perform operation
fmadd.s f8, f27, f16, f24, rmm # perform operation
fmadd.s f8, f27, f16, f24, rne # perform operation
fmadd.s f8, f27, f16, f24, rtz # perform operation
fmadd.s f8, f27, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f27, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f27, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x0)
li x14, 0x949513aab24caf0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f13, 0(x2) # load 0x00000000 from memory into f13
li x3, 0x94bc29759fb484d8 # load x3 with value 0x94bc29759fb484d8
sw x3, 0(x2) # store 0x94bc29759fb484d8 in memory
flw f6, 0(x2) # load 0x94bc29759fb484d8 from memory into f6
fmadd.s f14, f17, f13, f6, dyn # perform operation
fmadd.s f14, f17, f13, f6, rdn # perform operation
fmadd.s f14, f17, f13, f6, rmm # perform operation
fmadd.s f14, f17, f13, f6, rne # perform operation
fmadd.s f14, f17, f13, f6, rtz # perform operation
fmadd.s f14, f17, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f13, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000000)
li x17, 0x83559b75d3ef7bed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f11, 0(x2) # load 0x80000000 from memory into f11
li x3, 0xdcdde09c289fd789 # load x3 with value 0xdcdde09c289fd789
sw x3, 0(x2) # store 0xdcdde09c289fd789 in memory
flw f16, 0(x2) # load 0xdcdde09c289fd789 from memory into f16
fmadd.s f17, f3, f11, f16, dyn # perform operation
fmadd.s f17, f3, f11, f16, rdn # perform operation
fmadd.s f17, f3, f11, f16, rmm # perform operation
fmadd.s f17, f3, f11, f16, rne # perform operation
fmadd.s f17, f3, f11, f16, rtz # perform operation
fmadd.s f17, f3, f11, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f11, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f11, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f11, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f11, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f11, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3f800000)
li x5, 0x225ab71ccc11ea08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x27a9c07fdddfecc1 # load x3 with value 0x27a9c07fdddfecc1
sw x3, 0(x2) # store 0x27a9c07fdddfecc1 in memory
flw f8, 0(x2) # load 0x27a9c07fdddfecc1 from memory into f8
fmadd.s f5, f30, f27, f8, dyn # perform operation
fmadd.s f5, f30, f27, f8, rdn # perform operation
fmadd.s f5, f30, f27, f8, rmm # perform operation
fmadd.s f5, f30, f27, f8, rne # perform operation
fmadd.s f5, f30, f27, f8, rtz # perform operation
fmadd.s f5, f30, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbf800000)
li x4, 0x0324aab509befd6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f26, 0(x2) # load 0xbf800000 from memory into f26
li x3, 0x9ac35ba1ed0993f8 # load x3 with value 0x9ac35ba1ed0993f8
sw x3, 0(x2) # store 0x9ac35ba1ed0993f8 in memory
flw f6, 0(x2) # load 0x9ac35ba1ed0993f8 from memory into f6
fmadd.s f4, f9, f26, f6, dyn # perform operation
fmadd.s f4, f9, f26, f6, rdn # perform operation
fmadd.s f4, f9, f26, f6, rmm # perform operation
fmadd.s f4, f9, f26, f6, rne # perform operation
fmadd.s f4, f9, f26, f6, rtz # perform operation
fmadd.s f4, f9, f26, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f9, f26, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f9, f26, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x3fc00000)
li x29, 0xea95b8c679c8db7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0x11d768c320387b32 # load x3 with value 0x11d768c320387b32
sw x3, 0(x2) # store 0x11d768c320387b32 in memory
flw f24, 0(x2) # load 0x11d768c320387b32 from memory into f24
fmadd.s f29, f18, f15, f24, dyn # perform operation
fmadd.s f29, f18, f15, f24, rdn # perform operation
fmadd.s f29, f18, f15, f24, rmm # perform operation
fmadd.s f29, f18, f15, f24, rne # perform operation
fmadd.s f29, f18, f15, f24, rtz # perform operation
fmadd.s f29, f18, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f18, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f18, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xbfc00000)
li x1, 0x46ba370a09ca90ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f14, 0(x2) # load 0xbfc00000 from memory into f14
li x3, 0xdbe1a7bc23a07019 # load x3 with value 0xdbe1a7bc23a07019
sw x3, 0(x2) # store 0xdbe1a7bc23a07019 in memory
flw f17, 0(x2) # load 0xdbe1a7bc23a07019 from memory into f17
fmadd.s f1, f18, f14, f17, dyn # perform operation
fmadd.s f1, f18, f14, f17, rdn # perform operation
fmadd.s f1, f18, f14, f17, rmm # perform operation
fmadd.s f1, f18, f14, f17, rne # perform operation
fmadd.s f1, f18, f14, f17, rtz # perform operation
fmadd.s f1, f18, f14, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f14, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f14, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x40000000)
li x11, 0x547d834c45cfdea6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f6, 0(x2) # load 0x40000000 from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0xda5eddb923b40122 # load x3 with value 0xda5eddb923b40122
sw x3, 0(x2) # store 0xda5eddb923b40122 in memory
flw f12, 0(x2) # load 0xda5eddb923b40122 from memory into f12
fmadd.s f11, f6, f31, f12, dyn # perform operation
fmadd.s f11, f6, f31, f12, rdn # perform operation
fmadd.s f11, f6, f31, f12, rmm # perform operation
fmadd.s f11, f6, f31, f12, rne # perform operation
fmadd.s f11, f6, f31, f12, rtz # perform operation
fmadd.s f11, f6, f31, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f6, f31, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f6, f31, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f6, f31, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f6, f31, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f6, f31, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xc0000000)
li x21, 0x479cf6b18d3dde7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x7265f01eacd2d912 # load x3 with value 0x7265f01eacd2d912
sw x3, 0(x2) # store 0x7265f01eacd2d912 in memory
flw f17, 0(x2) # load 0x7265f01eacd2d912 from memory into f17
fmadd.s f21, f5, f22, f17, dyn # perform operation
fmadd.s f21, f5, f22, f17, rdn # perform operation
fmadd.s f21, f5, f22, f17, rmm # perform operation
fmadd.s f21, f5, f22, f17, rne # perform operation
fmadd.s f21, f5, f22, f17, rtz # perform operation
fmadd.s f21, f5, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f5, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x800000)
li x5, 0xeff18ae7ca232f1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xf40518424862317c # load x3 with value 0xf40518424862317c
sw x3, 0(x2) # store 0xf40518424862317c in memory
flw f4, 0(x2) # load 0xf40518424862317c from memory into f4
fmadd.s f5, f19, f25, f4, dyn # perform operation
fmadd.s f5, f19, f25, f4, rdn # perform operation
fmadd.s f5, f19, f25, f4, rmm # perform operation
fmadd.s f5, f19, f25, f4, rne # perform operation
fmadd.s f5, f19, f25, f4, rtz # perform operation
fmadd.s f5, f19, f25, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f25, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f25, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80800000)
li x10, 0x820956529d7d7249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x6a8fa96fe4c24105 # load x3 with value 0x6a8fa96fe4c24105
sw x3, 0(x2) # store 0x6a8fa96fe4c24105 in memory
flw f30, 0(x2) # load 0x6a8fa96fe4c24105 from memory into f30
fmadd.s f10, f16, f7, f30, dyn # perform operation
fmadd.s f10, f16, f7, f30, rdn # perform operation
fmadd.s f10, f16, f7, f30, rmm # perform operation
fmadd.s f10, f16, f7, f30, rne # perform operation
fmadd.s f10, f16, f7, f30, rtz # perform operation
fmadd.s f10, f16, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f16, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f16, f7, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f7fffff)
li x21, 0x09ed9a63961254f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0xff2070d5d765e5e9 # load x3 with value 0xff2070d5d765e5e9
sw x3, 0(x2) # store 0xff2070d5d765e5e9 in memory
flw f11, 0(x2) # load 0xff2070d5d765e5e9 from memory into f11
fmadd.s f21, f9, f6, f11, dyn # perform operation
fmadd.s f21, f9, f6, f11, rdn # perform operation
fmadd.s f21, f9, f6, f11, rmm # perform operation
fmadd.s f21, f9, f6, f11, rne # perform operation
fmadd.s f21, f9, f6, f11, rtz # perform operation
fmadd.s f21, f9, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f9, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f9, f6, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff7fffff)
li x25, 0x1eac1a99a48eccc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x5f0c766e249d1f2e # load x3 with value 0x5f0c766e249d1f2e
sw x3, 0(x2) # store 0x5f0c766e249d1f2e in memory
flw f31, 0(x2) # load 0x5f0c766e249d1f2e from memory into f31
fmadd.s f25, f10, f6, f31, dyn # perform operation
fmadd.s f25, f10, f6, f31, rdn # perform operation
fmadd.s f25, f10, f6, f31, rmm # perform operation
fmadd.s f25, f10, f6, f31, rne # perform operation
fmadd.s f25, f10, f6, f31, rtz # perform operation
fmadd.s f25, f10, f6, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f6, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f6, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffff)
li x19, 0x6fdcf8757e05bea8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0x94fb2c960b9ebc6f # load x3 with value 0x94fb2c960b9ebc6f
sw x3, 0(x2) # store 0x94fb2c960b9ebc6f in memory
flw f14, 0(x2) # load 0x94fb2c960b9ebc6f from memory into f14
fmadd.s f19, f30, f13, f14, dyn # perform operation
fmadd.s f19, f30, f13, f14, rdn # perform operation
fmadd.s f19, f30, f13, f14, rmm # perform operation
fmadd.s f19, f30, f13, f14, rne # perform operation
fmadd.s f19, f30, f13, f14, rtz # perform operation
fmadd.s f19, f30, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f30, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f30, f13, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x807fffff)
li x19, 0x81bdc0977fcfd845 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f17, 0(x2) # load 0x40000000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x386cae74df243c5b # load x3 with value 0x386cae74df243c5b
sw x3, 0(x2) # store 0x386cae74df243c5b in memory
flw f5, 0(x2) # load 0x386cae74df243c5b from memory into f5
fmadd.s f19, f17, f3, f5, dyn # perform operation
fmadd.s f19, f17, f3, f5, rdn # perform operation
fmadd.s f19, f17, f3, f5, rmm # perform operation
fmadd.s f19, f17, f3, f5, rne # perform operation
fmadd.s f19, f17, f3, f5, rtz # perform operation
fmadd.s f19, f17, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x400000)
li x30, 0x5d5296e1f7d30b52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f3, 0(x2) # load 0x40000000 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0x2d557263ab8c348a # load x3 with value 0x2d557263ab8c348a
sw x3, 0(x2) # store 0x2d557263ab8c348a in memory
flw f2, 0(x2) # load 0x2d557263ab8c348a from memory into f2
fmadd.s f30, f3, f11, f2, dyn # perform operation
fmadd.s f30, f3, f11, f2, rdn # perform operation
fmadd.s f30, f3, f11, f2, rmm # perform operation
fmadd.s f30, f3, f11, f2, rne # perform operation
fmadd.s f30, f3, f11, f2, rtz # perform operation
fmadd.s f30, f3, f11, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f3, f11, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f3, f11, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80400000)
li x13, 0x6998d92e5608677f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x76a657fa7351a81d # load x3 with value 0x76a657fa7351a81d
sw x3, 0(x2) # store 0x76a657fa7351a81d in memory
flw f19, 0(x2) # load 0x76a657fa7351a81d from memory into f19
fmadd.s f13, f21, f29, f19, dyn # perform operation
fmadd.s f13, f21, f29, f19, rdn # perform operation
fmadd.s f13, f21, f29, f19, rmm # perform operation
fmadd.s f13, f21, f29, f19, rne # perform operation
fmadd.s f13, f21, f29, f19, rtz # perform operation
fmadd.s f13, f21, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f21, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f21, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f21, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f21, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f21, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x1)
li x10, 0x8da5c2017f75f05e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x8f3265360dff0a05 # load x3 with value 0x8f3265360dff0a05
sw x3, 0(x2) # store 0x8f3265360dff0a05 in memory
flw f8, 0(x2) # load 0x8f3265360dff0a05 from memory into f8
fmadd.s f10, f30, f31, f8, dyn # perform operation
fmadd.s f10, f30, f31, f8, rdn # perform operation
fmadd.s f10, f30, f31, f8, rmm # perform operation
fmadd.s f10, f30, f31, f8, rne # perform operation
fmadd.s f10, f30, f31, f8, rtz # perform operation
fmadd.s f10, f30, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x80000001)
li x11, 0x8d8cf86e6faa15ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f23, 0(x2) # load 0x40000000 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x71987a3045988e6f # load x3 with value 0x71987a3045988e6f
sw x3, 0(x2) # store 0x71987a3045988e6f in memory
flw f6, 0(x2) # load 0x71987a3045988e6f from memory into f6
fmadd.s f11, f23, f30, f6, dyn # perform operation
fmadd.s f11, f23, f30, f6, rdn # perform operation
fmadd.s f11, f23, f30, f6, rmm # perform operation
fmadd.s f11, f23, f30, f6, rne # perform operation
fmadd.s f11, f23, f30, f6, rtz # perform operation
fmadd.s f11, f23, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f23, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f23, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800000)
li x15, 0x3e5729050b5b70ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f20, 0(x2) # load 0x40000000 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0xeebf0d97e6829796 # load x3 with value 0xeebf0d97e6829796
sw x3, 0(x2) # store 0xeebf0d97e6829796 in memory
flw f30, 0(x2) # load 0xeebf0d97e6829796 from memory into f30
fmadd.s f15, f20, f19, f30, dyn # perform operation
fmadd.s f15, f20, f19, f30, rdn # perform operation
fmadd.s f15, f20, f19, f30, rmm # perform operation
fmadd.s f15, f20, f19, f30, rne # perform operation
fmadd.s f15, f20, f19, f30, rtz # perform operation
fmadd.s f15, f20, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f19, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0xff800000)
li x14, 0x8b786215e2786983 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0xc2cc62257948e69c # load x3 with value 0xc2cc62257948e69c
sw x3, 0(x2) # store 0xc2cc62257948e69c in memory
flw f31, 0(x2) # load 0xc2cc62257948e69c from memory into f31
fmadd.s f14, f2, f5, f31, dyn # perform operation
fmadd.s f14, f2, f5, f31, rdn # perform operation
fmadd.s f14, f2, f5, f31, rmm # perform operation
fmadd.s f14, f2, f5, f31, rne # perform operation
fmadd.s f14, f2, f5, f31, rtz # perform operation
fmadd.s f14, f2, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fc00000)
li x9, 0xa29873cae9a45750 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0x3f10105ac4d9a46 # load x3 with value 0x3f10105ac4d9a46
sw x3, 0(x2) # store 0x3f10105ac4d9a46 in memory
flw f19, 0(x2) # load 0x3f10105ac4d9a46 from memory into f19
fmadd.s f9, f28, f1, f19, dyn # perform operation
fmadd.s f9, f28, f1, f19, rdn # perform operation
fmadd.s f9, f28, f1, f19, rmm # perform operation
fmadd.s f9, f28, f1, f19, rne # perform operation
fmadd.s f9, f28, f1, f19, rtz # perform operation
fmadd.s f9, f28, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f28, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fffffff)
li x31, 0x197e4068e661cd62 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x1019508d7c0fbe83 # load x3 with value 0x1019508d7c0fbe83
sw x3, 0(x2) # store 0x1019508d7c0fbe83 in memory
flw f23, 0(x2) # load 0x1019508d7c0fbe83 from memory into f23
fmadd.s f31, f18, f15, f23, dyn # perform operation
fmadd.s f31, f18, f15, f23, rdn # perform operation
fmadd.s f31, f18, f15, f23, rmm # perform operation
fmadd.s f31, f18, f15, f23, rne # perform operation
fmadd.s f31, f18, f15, f23, rtz # perform operation
fmadd.s f31, f18, f15, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f18, f15, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f18, f15, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7f800001)
li x1, 0xc2da7429e25ee42c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xf5dbccdf22de7551 # load x3 with value 0xf5dbccdf22de7551
sw x3, 0(x2) # store 0xf5dbccdf22de7551 in memory
flw f17, 0(x2) # load 0xf5dbccdf22de7551 from memory into f17
fmadd.s f1, f18, f10, f17, dyn # perform operation
fmadd.s f1, f18, f10, f17, rdn # perform operation
fmadd.s f1, f18, f10, f17, rmm # perform operation
fmadd.s f1, f18, f10, f17, rne # perform operation
fmadd.s f1, f18, f10, f17, rtz # perform operation
fmadd.s f1, f18, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7fbfffff)
li x27, 0x570c0f316597a46c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x6a67d2004cfef5a5 # load x3 with value 0x6a67d2004cfef5a5
sw x3, 0(x2) # store 0x6a67d2004cfef5a5 in memory
flw f19, 0(x2) # load 0x6a67d2004cfef5a5 from memory into f19
fmadd.s f27, f28, f1, f19, dyn # perform operation
fmadd.s f27, f28, f1, f19, rdn # perform operation
fmadd.s f27, f28, f1, f19, rmm # perform operation
fmadd.s f27, f28, f1, f19, rne # perform operation
fmadd.s f27, f28, f1, f19, rtz # perform operation
fmadd.s f27, f28, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f1, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x7ef8654f)
li x28, 0xc08f49bda3541ebe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f5, 0(x2) # load 0x40000000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x383f7b86862ca1b1 # load x3 with value 0x383f7b86862ca1b1
sw x3, 0(x2) # store 0x383f7b86862ca1b1 in memory
flw f8, 0(x2) # load 0x383f7b86862ca1b1 from memory into f8
fmadd.s f28, f5, f29, f8, dyn # perform operation
fmadd.s f28, f5, f29, f8, rdn # perform operation
fmadd.s f28, f5, f29, f8, rmm # perform operation
fmadd.s f28, f5, f29, f8, rne # perform operation
fmadd.s f28, f5, f29, f8, rtz # perform operation
fmadd.s f28, f5, f29, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f5, f29, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f5, f29, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x40000000 fs2 = 0x813d9ab0)
li x18, 0x7378cc06ff13f83b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0xfa3bce2b474567ed # load x3 with value 0xfa3bce2b474567ed
sw x3, 0(x2) # store 0xfa3bce2b474567ed in memory
flw f21, 0(x2) # load 0xfa3bce2b474567ed from memory into f21
fmadd.s f18, f31, f1, f21, dyn # perform operation
fmadd.s f18, f31, f1, f21, rdn # perform operation
fmadd.s f18, f31, f1, f21, rmm # perform operation
fmadd.s f18, f31, f1, f21, rne # perform operation
fmadd.s f18, f31, f1, f21, rtz # perform operation
fmadd.s f18, f31, f1, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f31, f1, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f31, f1, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f31, f1, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f31, f1, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f31, f1, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x0)
li x16, 0xb6de9760a8770224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x3926420e3e312bfe # load x3 with value 0x3926420e3e312bfe
sw x3, 0(x2) # store 0x3926420e3e312bfe in memory
flw f28, 0(x2) # load 0x3926420e3e312bfe from memory into f28
fmadd.s f16, f9, f3, f28, dyn # perform operation
fmadd.s f16, f9, f3, f28, rdn # perform operation
fmadd.s f16, f9, f3, f28, rmm # perform operation
fmadd.s f16, f9, f3, f28, rne # perform operation
fmadd.s f16, f9, f3, f28, rtz # perform operation
fmadd.s f16, f9, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000000)
li x8, 0xcb97e138d219e2d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x7bdb47b5c197e44e # load x3 with value 0x7bdb47b5c197e44e
sw x3, 0(x2) # store 0x7bdb47b5c197e44e in memory
flw f16, 0(x2) # load 0x7bdb47b5c197e44e from memory into f16
fmadd.s f8, f13, f29, f16, dyn # perform operation
fmadd.s f8, f13, f29, f16, rdn # perform operation
fmadd.s f8, f13, f29, f16, rmm # perform operation
fmadd.s f8, f13, f29, f16, rne # perform operation
fmadd.s f8, f13, f29, f16, rtz # perform operation
fmadd.s f8, f13, f29, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f29, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f29, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3f800000)
li x19, 0x7eb0c9ae9b63c9a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0x4dcae8efed0c49e3 # load x3 with value 0x4dcae8efed0c49e3
sw x3, 0(x2) # store 0x4dcae8efed0c49e3 in memory
flw f28, 0(x2) # load 0x4dcae8efed0c49e3 from memory into f28
fmadd.s f19, f24, f6, f28, dyn # perform operation
fmadd.s f19, f24, f6, f28, rdn # perform operation
fmadd.s f19, f24, f6, f28, rmm # perform operation
fmadd.s f19, f24, f6, f28, rne # perform operation
fmadd.s f19, f24, f6, f28, rtz # perform operation
fmadd.s f19, f24, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f6, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbf800000)
li x21, 0x75c228a2348cca6b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0xfe22c8959139e7d8 # load x3 with value 0xfe22c8959139e7d8
sw x3, 0(x2) # store 0xfe22c8959139e7d8 in memory
flw f17, 0(x2) # load 0xfe22c8959139e7d8 from memory into f17
fmadd.s f21, f27, f13, f17, dyn # perform operation
fmadd.s f21, f27, f13, f17, rdn # perform operation
fmadd.s f21, f27, f13, f17, rmm # perform operation
fmadd.s f21, f27, f13, f17, rne # perform operation
fmadd.s f21, f27, f13, f17, rtz # perform operation
fmadd.s f21, f27, f13, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f13, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f13, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x3fc00000)
li x23, 0x4f730d899087a230 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x10327c7f0d18cbfb # load x3 with value 0x10327c7f0d18cbfb
sw x3, 0(x2) # store 0x10327c7f0d18cbfb in memory
flw f21, 0(x2) # load 0x10327c7f0d18cbfb from memory into f21
fmadd.s f23, f4, f26, f21, dyn # perform operation
fmadd.s f23, f4, f26, f21, rdn # perform operation
fmadd.s f23, f4, f26, f21, rmm # perform operation
fmadd.s f23, f4, f26, f21, rne # perform operation
fmadd.s f23, f4, f26, f21, rtz # perform operation
fmadd.s f23, f4, f26, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f4, f26, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f4, f26, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xbfc00000)
li x8, 0x88246fe197986748 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0xf23f23943c6e5c8 # load x3 with value 0xf23f23943c6e5c8
sw x3, 0(x2) # store 0xf23f23943c6e5c8 in memory
flw f31, 0(x2) # load 0xf23f23943c6e5c8 from memory into f31
fmadd.s f8, f1, f16, f31, dyn # perform operation
fmadd.s f8, f1, f16, f31, rdn # perform operation
fmadd.s f8, f1, f16, f31, rmm # perform operation
fmadd.s f8, f1, f16, f31, rne # perform operation
fmadd.s f8, f1, f16, f31, rtz # perform operation
fmadd.s f8, f1, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f1, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f1, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f1, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f1, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f1, f16, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x40000000)
li x3, 0x628399e27ebd0253 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x2832cdba0728bdc9 # load x3 with value 0x2832cdba0728bdc9
sw x3, 0(x2) # store 0x2832cdba0728bdc9 in memory
flw f13, 0(x2) # load 0x2832cdba0728bdc9 from memory into f13
fmadd.s f3, f17, f9, f13, dyn # perform operation
fmadd.s f3, f17, f9, f13, rdn # perform operation
fmadd.s f3, f17, f9, f13, rmm # perform operation
fmadd.s f3, f17, f9, f13, rne # perform operation
fmadd.s f3, f17, f9, f13, rtz # perform operation
fmadd.s f3, f17, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xc0000000)
li x9, 0xf7f573854d346509 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f2, 0(x2) # load 0xc0000000 from memory into f2
li x3, 0x1d4d802370028ce1 # load x3 with value 0x1d4d802370028ce1
sw x3, 0(x2) # store 0x1d4d802370028ce1 in memory
flw f3, 0(x2) # load 0x1d4d802370028ce1 from memory into f3
fmadd.s f9, f13, f2, f3, dyn # perform operation
fmadd.s f9, f13, f2, f3, rdn # perform operation
fmadd.s f9, f13, f2, f3, rmm # perform operation
fmadd.s f9, f13, f2, f3, rne # perform operation
fmadd.s f9, f13, f2, f3, rtz # perform operation
fmadd.s f9, f13, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f2, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x800000)
li x2, 0x4632750c44c1ba9e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f18, 0(x2) # load 0x00800000 from memory into f18
li x3, 0x954e8a0e73342e3f # load x3 with value 0x954e8a0e73342e3f
sw x3, 0(x2) # store 0x954e8a0e73342e3f in memory
flw f26, 0(x2) # load 0x954e8a0e73342e3f from memory into f26
fmadd.s f2, f7, f18, f26, dyn # perform operation
fmadd.s f2, f7, f18, f26, rdn # perform operation
fmadd.s f2, f7, f18, f26, rmm # perform operation
fmadd.s f2, f7, f18, f26, rne # perform operation
fmadd.s f2, f7, f18, f26, rtz # perform operation
fmadd.s f2, f7, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f7, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f7, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f7, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f7, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f7, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80800000)
li x12, 0xc2a5d96323c6d3c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x3aebfa05b1aee134 # load x3 with value 0x3aebfa05b1aee134
sw x3, 0(x2) # store 0x3aebfa05b1aee134 in memory
flw f1, 0(x2) # load 0x3aebfa05b1aee134 from memory into f1
fmadd.s f12, f6, f24, f1, dyn # perform operation
fmadd.s f12, f6, f24, f1, rdn # perform operation
fmadd.s f12, f6, f24, f1, rmm # perform operation
fmadd.s f12, f6, f24, f1, rne # perform operation
fmadd.s f12, f6, f24, f1, rtz # perform operation
fmadd.s f12, f6, f24, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f6, f24, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f6, f24, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f6, f24, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f6, f24, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f6, f24, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f7fffff)
li x14, 0xe60b5ae4e4b0d972 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x87960401ad959dfd # load x3 with value 0x87960401ad959dfd
sw x3, 0(x2) # store 0x87960401ad959dfd in memory
flw f2, 0(x2) # load 0x87960401ad959dfd from memory into f2
fmadd.s f14, f31, f17, f2, dyn # perform operation
fmadd.s f14, f31, f17, f2, rdn # perform operation
fmadd.s f14, f31, f17, f2, rmm # perform operation
fmadd.s f14, f31, f17, f2, rne # perform operation
fmadd.s f14, f31, f17, f2, rtz # perform operation
fmadd.s f14, f31, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f31, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f31, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff7fffff)
li x14, 0x52d1fb83dc5bcf7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xc3cef28b30026155 # load x3 with value 0xc3cef28b30026155
sw x3, 0(x2) # store 0xc3cef28b30026155 in memory
flw f6, 0(x2) # load 0xc3cef28b30026155 from memory into f6
fmadd.s f14, f28, f21, f6, dyn # perform operation
fmadd.s f14, f28, f21, f6, rdn # perform operation
fmadd.s f14, f28, f21, f6, rmm # perform operation
fmadd.s f14, f28, f21, f6, rne # perform operation
fmadd.s f14, f28, f21, f6, rtz # perform operation
fmadd.s f14, f28, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffff)
li x17, 0x752db945f52745f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x5139d87f3c987a50 # load x3 with value 0x5139d87f3c987a50
sw x3, 0(x2) # store 0x5139d87f3c987a50 in memory
flw f22, 0(x2) # load 0x5139d87f3c987a50 from memory into f22
fmadd.s f17, f20, f10, f22, dyn # perform operation
fmadd.s f17, f20, f10, f22, rdn # perform operation
fmadd.s f17, f20, f10, f22, rmm # perform operation
fmadd.s f17, f20, f10, f22, rne # perform operation
fmadd.s f17, f20, f10, f22, rtz # perform operation
fmadd.s f17, f20, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f20, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f20, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x807fffff)
li x22, 0xd30285c2ee96c520 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x59490c75d3206f8b # load x3 with value 0x59490c75d3206f8b
sw x3, 0(x2) # store 0x59490c75d3206f8b in memory
flw f31, 0(x2) # load 0x59490c75d3206f8b from memory into f31
fmadd.s f22, f17, f2, f31, dyn # perform operation
fmadd.s f22, f17, f2, f31, rdn # perform operation
fmadd.s f22, f17, f2, f31, rmm # perform operation
fmadd.s f22, f17, f2, f31, rne # perform operation
fmadd.s f22, f17, f2, f31, rtz # perform operation
fmadd.s f22, f17, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x400000)
li x17, 0x90e0c885f5f2e847 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x7d2f40de96eed392 # load x3 with value 0x7d2f40de96eed392
sw x3, 0(x2) # store 0x7d2f40de96eed392 in memory
flw f25, 0(x2) # load 0x7d2f40de96eed392 from memory into f25
fmadd.s f17, f29, f27, f25, dyn # perform operation
fmadd.s f17, f29, f27, f25, rdn # perform operation
fmadd.s f17, f29, f27, f25, rmm # perform operation
fmadd.s f17, f29, f27, f25, rne # perform operation
fmadd.s f17, f29, f27, f25, rtz # perform operation
fmadd.s f17, f29, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f29, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f29, f27, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80400000)
li x10, 0x4c12612a11095744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x5494d00debe31ee # load x3 with value 0x5494d00debe31ee
sw x3, 0(x2) # store 0x5494d00debe31ee in memory
flw f2, 0(x2) # load 0x5494d00debe31ee from memory into f2
fmadd.s f10, f11, f17, f2, dyn # perform operation
fmadd.s f10, f11, f17, f2, rdn # perform operation
fmadd.s f10, f11, f17, f2, rmm # perform operation
fmadd.s f10, f11, f17, f2, rne # perform operation
fmadd.s f10, f11, f17, f2, rtz # perform operation
fmadd.s f10, f11, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f11, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f11, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x1)
li x19, 0x2466c8ddd2c97e7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x7e8aa6325fd8d1ae # load x3 with value 0x7e8aa6325fd8d1ae
sw x3, 0(x2) # store 0x7e8aa6325fd8d1ae in memory
flw f8, 0(x2) # load 0x7e8aa6325fd8d1ae from memory into f8
fmadd.s f19, f13, f15, f8, dyn # perform operation
fmadd.s f19, f13, f15, f8, rdn # perform operation
fmadd.s f19, f13, f15, f8, rmm # perform operation
fmadd.s f19, f13, f15, f8, rne # perform operation
fmadd.s f19, f13, f15, f8, rtz # perform operation
fmadd.s f19, f13, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f13, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f13, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f13, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f13, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f13, f15, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x80000001)
li x1, 0x625ecbfdb4e16f0b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x96abb3ce70033a19 # load x3 with value 0x96abb3ce70033a19
sw x3, 0(x2) # store 0x96abb3ce70033a19 in memory
flw f6, 0(x2) # load 0x96abb3ce70033a19 from memory into f6
fmadd.s f1, f10, f5, f6, dyn # perform operation
fmadd.s f1, f10, f5, f6, rdn # perform operation
fmadd.s f1, f10, f5, f6, rmm # perform operation
fmadd.s f1, f10, f5, f6, rne # perform operation
fmadd.s f1, f10, f5, f6, rtz # perform operation
fmadd.s f1, f10, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800000)
li x17, 0x599de41f43672a92 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xbf965659b350db03 # load x3 with value 0xbf965659b350db03
sw x3, 0(x2) # store 0xbf965659b350db03 in memory
flw f22, 0(x2) # load 0xbf965659b350db03 from memory into f22
fmadd.s f17, f3, f14, f22, dyn # perform operation
fmadd.s f17, f3, f14, f22, rdn # perform operation
fmadd.s f17, f3, f14, f22, rmm # perform operation
fmadd.s f17, f3, f14, f22, rne # perform operation
fmadd.s f17, f3, f14, f22, rtz # perform operation
fmadd.s f17, f3, f14, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f14, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f14, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f14, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f14, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f14, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0xff800000)
li x13, 0xe4f06a84f3de71e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0xf85adffa190c3c37 # load x3 with value 0xf85adffa190c3c37
sw x3, 0(x2) # store 0xf85adffa190c3c37 in memory
flw f2, 0(x2) # load 0xf85adffa190c3c37 from memory into f2
fmadd.s f13, f27, f31, f2, dyn # perform operation
fmadd.s f13, f27, f31, f2, rdn # perform operation
fmadd.s f13, f27, f31, f2, rmm # perform operation
fmadd.s f13, f27, f31, f2, rne # perform operation
fmadd.s f13, f27, f31, f2, rtz # perform operation
fmadd.s f13, f27, f31, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f27, f31, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f27, f31, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fc00000)
li x27, 0x2471acc06e9b72f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xd1c205700672ba2b # load x3 with value 0xd1c205700672ba2b
sw x3, 0(x2) # store 0xd1c205700672ba2b in memory
flw f20, 0(x2) # load 0xd1c205700672ba2b from memory into f20
fmadd.s f27, f14, f30, f20, dyn # perform operation
fmadd.s f27, f14, f30, f20, rdn # perform operation
fmadd.s f27, f14, f30, f20, rmm # perform operation
fmadd.s f27, f14, f30, f20, rne # perform operation
fmadd.s f27, f14, f30, f20, rtz # perform operation
fmadd.s f27, f14, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fffffff)
li x6, 0x1f8916c4c159298b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x902b1d5189176060 # load x3 with value 0x902b1d5189176060
sw x3, 0(x2) # store 0x902b1d5189176060 in memory
flw f20, 0(x2) # load 0x902b1d5189176060 from memory into f20
fmadd.s f6, f28, f5, f20, dyn # perform operation
fmadd.s f6, f28, f5, f20, rdn # perform operation
fmadd.s f6, f28, f5, f20, rmm # perform operation
fmadd.s f6, f28, f5, f20, rne # perform operation
fmadd.s f6, f28, f5, f20, rtz # perform operation
fmadd.s f6, f28, f5, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f5, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f5, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f5, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f5, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f5, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7f800001)
li x3, 0x66bb6517e1c4509a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xeeb2ebd187f0f66a # load x3 with value 0xeeb2ebd187f0f66a
sw x3, 0(x2) # store 0xeeb2ebd187f0f66a in memory
flw f7, 0(x2) # load 0xeeb2ebd187f0f66a from memory into f7
fmadd.s f3, f29, f10, f7, dyn # perform operation
fmadd.s f3, f29, f10, f7, rdn # perform operation
fmadd.s f3, f29, f10, f7, rmm # perform operation
fmadd.s f3, f29, f10, f7, rne # perform operation
fmadd.s f3, f29, f10, f7, rtz # perform operation
fmadd.s f3, f29, f10, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f29, f10, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f29, f10, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7fbfffff)
li x9, 0x58dd229bad977f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xca837b50712a4891 # load x3 with value 0xca837b50712a4891
sw x3, 0(x2) # store 0xca837b50712a4891 in memory
flw f14, 0(x2) # load 0xca837b50712a4891 from memory into f14
fmadd.s f9, f23, f20, f14, dyn # perform operation
fmadd.s f9, f23, f20, f14, rdn # perform operation
fmadd.s f9, f23, f20, f14, rmm # perform operation
fmadd.s f9, f23, f20, f14, rne # perform operation
fmadd.s f9, f23, f20, f14, rtz # perform operation
fmadd.s f9, f23, f20, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f20, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f20, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x7ef8654f)
li x4, 0x31e905dd3cda5b14 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
li x3, 0xb79e25a1f85f5cae # load x3 with value 0xb79e25a1f85f5cae
sw x3, 0(x2) # store 0xb79e25a1f85f5cae in memory
flw f5, 0(x2) # load 0xb79e25a1f85f5cae from memory into f5
fmadd.s f4, f22, f3, f5, dyn # perform operation
fmadd.s f4, f22, f3, f5, rdn # perform operation
fmadd.s f4, f22, f3, f5, rmm # perform operation
fmadd.s f4, f22, f3, f5, rne # perform operation
fmadd.s f4, f22, f3, f5, rtz # perform operation
fmadd.s f4, f22, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f22, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f22, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xc0000000 fs2 = 0x813d9ab0)
li x24, 0x241a9176f7d43290 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xaec0006be875d9c1 # load x3 with value 0xaec0006be875d9c1
sw x3, 0(x2) # store 0xaec0006be875d9c1 in memory
flw f11, 0(x2) # load 0xaec0006be875d9c1 from memory into f11
fmadd.s f24, f13, f7, f11, dyn # perform operation
fmadd.s f24, f13, f7, f11, rdn # perform operation
fmadd.s f24, f13, f7, f11, rmm # perform operation
fmadd.s f24, f13, f7, f11, rne # perform operation
fmadd.s f24, f13, f7, f11, rtz # perform operation
fmadd.s f24, f13, f7, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f7, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f7, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x0)
li x23, 0x7f2ccee79fda7c65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f26, 0(x2) # load 0x00000000 from memory into f26
li x3, 0x45f7bdb32c4550fc # load x3 with value 0x45f7bdb32c4550fc
sw x3, 0(x2) # store 0x45f7bdb32c4550fc in memory
flw f3, 0(x2) # load 0x45f7bdb32c4550fc from memory into f3
fmadd.s f23, f16, f26, f3, dyn # perform operation
fmadd.s f23, f16, f26, f3, rdn # perform operation
fmadd.s f23, f16, f26, f3, rmm # perform operation
fmadd.s f23, f16, f26, f3, rne # perform operation
fmadd.s f23, f16, f26, f3, rtz # perform operation
fmadd.s f23, f16, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000000)
li x1, 0xbd19b5478d37dcef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
li x3, 0x806439a14deaf4fd # load x3 with value 0x806439a14deaf4fd
sw x3, 0(x2) # store 0x806439a14deaf4fd in memory
flw f24, 0(x2) # load 0x806439a14deaf4fd from memory into f24
fmadd.s f1, f29, f26, f24, dyn # perform operation
fmadd.s f1, f29, f26, f24, rdn # perform operation
fmadd.s f1, f29, f26, f24, rmm # perform operation
fmadd.s f1, f29, f26, f24, rne # perform operation
fmadd.s f1, f29, f26, f24, rtz # perform operation
fmadd.s f1, f29, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f29, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f29, f26, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3f800000)
li x6, 0x46d0a653dc8e23a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x5a2d48cc1bdf530c # load x3 with value 0x5a2d48cc1bdf530c
sw x3, 0(x2) # store 0x5a2d48cc1bdf530c in memory
flw f30, 0(x2) # load 0x5a2d48cc1bdf530c from memory into f30
fmadd.s f6, f1, f17, f30, dyn # perform operation
fmadd.s f6, f1, f17, f30, rdn # perform operation
fmadd.s f6, f1, f17, f30, rmm # perform operation
fmadd.s f6, f1, f17, f30, rne # perform operation
fmadd.s f6, f1, f17, f30, rtz # perform operation
fmadd.s f6, f1, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbf800000)
li x27, 0x9ade71d4f8718076 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
li x3, 0x77797db872cf1a8b # load x3 with value 0x77797db872cf1a8b
sw x3, 0(x2) # store 0x77797db872cf1a8b in memory
flw f15, 0(x2) # load 0x77797db872cf1a8b from memory into f15
fmadd.s f27, f28, f30, f15, dyn # perform operation
fmadd.s f27, f28, f30, f15, rdn # perform operation
fmadd.s f27, f28, f30, f15, rmm # perform operation
fmadd.s f27, f28, f30, f15, rne # perform operation
fmadd.s f27, f28, f30, f15, rtz # perform operation
fmadd.s f27, f28, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f30, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x3fc00000)
li x18, 0x6e80c21e752f24c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0x9d9f30784deff108 # load x3 with value 0x9d9f30784deff108
sw x3, 0(x2) # store 0x9d9f30784deff108 in memory
flw f25, 0(x2) # load 0x9d9f30784deff108 from memory into f25
fmadd.s f18, f27, f13, f25, dyn # perform operation
fmadd.s f18, f27, f13, f25, rdn # perform operation
fmadd.s f18, f27, f13, f25, rmm # perform operation
fmadd.s f18, f27, f13, f25, rne # perform operation
fmadd.s f18, f27, f13, f25, rtz # perform operation
fmadd.s f18, f27, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f27, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f27, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f27, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f27, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f27, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xbfc00000)
li x12, 0x46a0c250f728cf65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x20cc57f8cf95b395 # load x3 with value 0x20cc57f8cf95b395
sw x3, 0(x2) # store 0x20cc57f8cf95b395 in memory
flw f1, 0(x2) # load 0x20cc57f8cf95b395 from memory into f1
fmadd.s f12, f29, f28, f1, dyn # perform operation
fmadd.s f12, f29, f28, f1, rdn # perform operation
fmadd.s f12, f29, f28, f1, rmm # perform operation
fmadd.s f12, f29, f28, f1, rne # perform operation
fmadd.s f12, f29, f28, f1, rtz # perform operation
fmadd.s f12, f29, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f29, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f29, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f29, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f29, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f29, f28, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x40000000)
li x23, 0x80882bbc2b27082c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f22, 0(x2) # load 0x40000000 from memory into f22
li x3, 0x9917338b92eedfe4 # load x3 with value 0x9917338b92eedfe4
sw x3, 0(x2) # store 0x9917338b92eedfe4 in memory
flw f9, 0(x2) # load 0x9917338b92eedfe4 from memory into f9
fmadd.s f23, f17, f22, f9, dyn # perform operation
fmadd.s f23, f17, f22, f9, rdn # perform operation
fmadd.s f23, f17, f22, f9, rmm # perform operation
fmadd.s f23, f17, f22, f9, rne # perform operation
fmadd.s f23, f17, f22, f9, rtz # perform operation
fmadd.s f23, f17, f22, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f22, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f22, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f22, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f22, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f22, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xc0000000)
li x17, 0xc808c18743bf9ec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x74864dd5d1999be0 # load x3 with value 0x74864dd5d1999be0
sw x3, 0(x2) # store 0x74864dd5d1999be0 in memory
flw f5, 0(x2) # load 0x74864dd5d1999be0 from memory into f5
fmadd.s f17, f7, f22, f5, dyn # perform operation
fmadd.s f17, f7, f22, f5, rdn # perform operation
fmadd.s f17, f7, f22, f5, rmm # perform operation
fmadd.s f17, f7, f22, f5, rne # perform operation
fmadd.s f17, f7, f22, f5, rtz # perform operation
fmadd.s f17, f7, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f7, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f7, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x800000)
li x19, 0x920193938140df70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0xc1b63920f4cc0b3c # load x3 with value 0xc1b63920f4cc0b3c
sw x3, 0(x2) # store 0xc1b63920f4cc0b3c in memory
flw f11, 0(x2) # load 0xc1b63920f4cc0b3c from memory into f11
fmadd.s f19, f24, f31, f11, dyn # perform operation
fmadd.s f19, f24, f31, f11, rdn # perform operation
fmadd.s f19, f24, f31, f11, rmm # perform operation
fmadd.s f19, f24, f31, f11, rne # perform operation
fmadd.s f19, f24, f31, f11, rtz # perform operation
fmadd.s f19, f24, f31, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f31, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f31, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80800000)
li x4, 0x625c279814fadff5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x3d6199cecee7bb5c # load x3 with value 0x3d6199cecee7bb5c
sw x3, 0(x2) # store 0x3d6199cecee7bb5c in memory
flw f29, 0(x2) # load 0x3d6199cecee7bb5c from memory into f29
fmadd.s f4, f21, f6, f29, dyn # perform operation
fmadd.s f4, f21, f6, f29, rdn # perform operation
fmadd.s f4, f21, f6, f29, rmm # perform operation
fmadd.s f4, f21, f6, f29, rne # perform operation
fmadd.s f4, f21, f6, f29, rtz # perform operation
fmadd.s f4, f21, f6, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f21, f6, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f21, f6, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f7fffff)
li x10, 0xe463a80607dc81c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f25, 0(x2) # load 0x7f7fffff from memory into f25
li x3, 0xaf36e9ceb2606a8c # load x3 with value 0xaf36e9ceb2606a8c
sw x3, 0(x2) # store 0xaf36e9ceb2606a8c in memory
flw f23, 0(x2) # load 0xaf36e9ceb2606a8c from memory into f23
fmadd.s f10, f3, f25, f23, dyn # perform operation
fmadd.s f10, f3, f25, f23, rdn # perform operation
fmadd.s f10, f3, f25, f23, rmm # perform operation
fmadd.s f10, f3, f25, f23, rne # perform operation
fmadd.s f10, f3, f25, f23, rtz # perform operation
fmadd.s f10, f3, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f3, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f3, f25, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff7fffff)
li x1, 0x5fd40f9230e8e0b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f5, 0(x2) # load 0x00800000 from memory into f5
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0xad43f6ed11c48e37 # load x3 with value 0xad43f6ed11c48e37
sw x3, 0(x2) # store 0xad43f6ed11c48e37 in memory
flw f21, 0(x2) # load 0xad43f6ed11c48e37 from memory into f21
fmadd.s f1, f5, f11, f21, dyn # perform operation
fmadd.s f1, f5, f11, f21, rdn # perform operation
fmadd.s f1, f5, f11, f21, rmm # perform operation
fmadd.s f1, f5, f11, f21, rne # perform operation
fmadd.s f1, f5, f11, f21, rtz # perform operation
fmadd.s f1, f5, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffff)
li x13, 0x0bd960b92405335b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0xf2c0d42efb597727 # load x3 with value 0xf2c0d42efb597727
sw x3, 0(x2) # store 0xf2c0d42efb597727 in memory
flw f20, 0(x2) # load 0xf2c0d42efb597727 from memory into f20
fmadd.s f13, f9, f16, f20, dyn # perform operation
fmadd.s f13, f9, f16, f20, rdn # perform operation
fmadd.s f13, f9, f16, f20, rmm # perform operation
fmadd.s f13, f9, f16, f20, rne # perform operation
fmadd.s f13, f9, f16, f20, rtz # perform operation
fmadd.s f13, f9, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f16, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x807fffff)
li x15, 0xfb39a97727d61405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0xafbd863c4620032f # load x3 with value 0xafbd863c4620032f
sw x3, 0(x2) # store 0xafbd863c4620032f in memory
flw f31, 0(x2) # load 0xafbd863c4620032f from memory into f31
fmadd.s f15, f17, f24, f31, dyn # perform operation
fmadd.s f15, f17, f24, f31, rdn # perform operation
fmadd.s f15, f17, f24, f31, rmm # perform operation
fmadd.s f15, f17, f24, f31, rne # perform operation
fmadd.s f15, f17, f24, f31, rtz # perform operation
fmadd.s f15, f17, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f17, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f17, f24, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x400000)
li x22, 0xd1d3a3cca8b00fe5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x22dcca32485508a9 # load x3 with value 0x22dcca32485508a9
sw x3, 0(x2) # store 0x22dcca32485508a9 in memory
flw f9, 0(x2) # load 0x22dcca32485508a9 from memory into f9
fmadd.s f22, f26, f30, f9, dyn # perform operation
fmadd.s f22, f26, f30, f9, rdn # perform operation
fmadd.s f22, f26, f30, f9, rmm # perform operation
fmadd.s f22, f26, f30, f9, rne # perform operation
fmadd.s f22, f26, f30, f9, rtz # perform operation
fmadd.s f22, f26, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f30, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80400000)
li x15, 0x869726a4fa6abd54 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xc567c257d2795636 # load x3 with value 0xc567c257d2795636
sw x3, 0(x2) # store 0xc567c257d2795636 in memory
flw f23, 0(x2) # load 0xc567c257d2795636 from memory into f23
fmadd.s f15, f2, f30, f23, dyn # perform operation
fmadd.s f15, f2, f30, f23, rdn # perform operation
fmadd.s f15, f2, f30, f23, rmm # perform operation
fmadd.s f15, f2, f30, f23, rne # perform operation
fmadd.s f15, f2, f30, f23, rtz # perform operation
fmadd.s f15, f2, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f30, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x1)
li x31, 0xa50667c2537b63ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x168c726f1165228e # load x3 with value 0x168c726f1165228e
sw x3, 0(x2) # store 0x168c726f1165228e in memory
flw f29, 0(x2) # load 0x168c726f1165228e from memory into f29
fmadd.s f31, f26, f10, f29, dyn # perform operation
fmadd.s f31, f26, f10, f29, rdn # perform operation
fmadd.s f31, f26, f10, f29, rmm # perform operation
fmadd.s f31, f26, f10, f29, rne # perform operation
fmadd.s f31, f26, f10, f29, rtz # perform operation
fmadd.s f31, f26, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f26, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f26, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x80000001)
li x18, 0xe94cfb27cd959ee4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x14bc89c44a34c326 # load x3 with value 0x14bc89c44a34c326
sw x3, 0(x2) # store 0x14bc89c44a34c326 in memory
flw f27, 0(x2) # load 0x14bc89c44a34c326 from memory into f27
fmadd.s f18, f21, f25, f27, dyn # perform operation
fmadd.s f18, f21, f25, f27, rdn # perform operation
fmadd.s f18, f21, f25, f27, rmm # perform operation
fmadd.s f18, f21, f25, f27, rne # perform operation
fmadd.s f18, f21, f25, f27, rtz # perform operation
fmadd.s f18, f21, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f21, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f21, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800000)
li x7, 0x887f19ba02da9c74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f14, 0(x2) # load 0x00800000 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xbf824335f81d261f # load x3 with value 0xbf824335f81d261f
sw x3, 0(x2) # store 0xbf824335f81d261f in memory
flw f15, 0(x2) # load 0xbf824335f81d261f from memory into f15
fmadd.s f7, f14, f6, f15, dyn # perform operation
fmadd.s f7, f14, f6, f15, rdn # perform operation
fmadd.s f7, f14, f6, f15, rmm # perform operation
fmadd.s f7, f14, f6, f15, rne # perform operation
fmadd.s f7, f14, f6, f15, rtz # perform operation
fmadd.s f7, f14, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f14, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f14, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0xff800000)
li x10, 0xcab85a3e1db073ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x4c98159add1ea856 # load x3 with value 0x4c98159add1ea856
sw x3, 0(x2) # store 0x4c98159add1ea856 in memory
flw f27, 0(x2) # load 0x4c98159add1ea856 from memory into f27
fmadd.s f10, f25, f19, f27, dyn # perform operation
fmadd.s f10, f25, f19, f27, rdn # perform operation
fmadd.s f10, f25, f19, f27, rmm # perform operation
fmadd.s f10, f25, f19, f27, rne # perform operation
fmadd.s f10, f25, f19, f27, rtz # perform operation
fmadd.s f10, f25, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fc00000)
li x11, 0x233494bcf4cdb32c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xe2a6d187f4c18568 # load x3 with value 0xe2a6d187f4c18568
sw x3, 0(x2) # store 0xe2a6d187f4c18568 in memory
flw f21, 0(x2) # load 0xe2a6d187f4c18568 from memory into f21
fmadd.s f11, f10, f30, f21, dyn # perform operation
fmadd.s f11, f10, f30, f21, rdn # perform operation
fmadd.s f11, f10, f30, f21, rmm # perform operation
fmadd.s f11, f10, f30, f21, rne # perform operation
fmadd.s f11, f10, f30, f21, rtz # perform operation
fmadd.s f11, f10, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fffffff)
li x5, 0xfff260ebbce6a09e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0x2427ea80604c8b53 # load x3 with value 0x2427ea80604c8b53
sw x3, 0(x2) # store 0x2427ea80604c8b53 in memory
flw f14, 0(x2) # load 0x2427ea80604c8b53 from memory into f14
fmadd.s f5, f15, f30, f14, dyn # perform operation
fmadd.s f5, f15, f30, f14, rdn # perform operation
fmadd.s f5, f15, f30, f14, rmm # perform operation
fmadd.s f5, f15, f30, f14, rne # perform operation
fmadd.s f5, f15, f30, f14, rtz # perform operation
fmadd.s f5, f15, f30, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f30, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f30, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7f800001)
li x30, 0xb7ec7583e365f673 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0xb5d095d50186ec42 # load x3 with value 0xb5d095d50186ec42
sw x3, 0(x2) # store 0xb5d095d50186ec42 in memory
flw f22, 0(x2) # load 0xb5d095d50186ec42 from memory into f22
fmadd.s f30, f13, f10, f22, dyn # perform operation
fmadd.s f30, f13, f10, f22, rdn # perform operation
fmadd.s f30, f13, f10, f22, rmm # perform operation
fmadd.s f30, f13, f10, f22, rne # perform operation
fmadd.s f30, f13, f10, f22, rtz # perform operation
fmadd.s f30, f13, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f13, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f13, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7fbfffff)
li x26, 0xcfc94f184f169478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x57d21ed0888e6093 # load x3 with value 0x57d21ed0888e6093
sw x3, 0(x2) # store 0x57d21ed0888e6093 in memory
flw f14, 0(x2) # load 0x57d21ed0888e6093 from memory into f14
fmadd.s f26, f25, f21, f14, dyn # perform operation
fmadd.s f26, f25, f21, f14, rdn # perform operation
fmadd.s f26, f25, f21, f14, rmm # perform operation
fmadd.s f26, f25, f21, f14, rne # perform operation
fmadd.s f26, f25, f21, f14, rtz # perform operation
fmadd.s f26, f25, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f21, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x7ef8654f)
li x25, 0x4fb29ddb8d4ce89e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x1f961e45960015da # load x3 with value 0x1f961e45960015da
sw x3, 0(x2) # store 0x1f961e45960015da in memory
flw f19, 0(x2) # load 0x1f961e45960015da from memory into f19
fmadd.s f25, f6, f11, f19, dyn # perform operation
fmadd.s f25, f6, f11, f19, rdn # perform operation
fmadd.s f25, f6, f11, f19, rmm # perform operation
fmadd.s f25, f6, f11, f19, rne # perform operation
fmadd.s f25, f6, f11, f19, rtz # perform operation
fmadd.s f25, f6, f11, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f11, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f11, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f11, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f11, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f11, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x800000 fs2 = 0x813d9ab0)
li x14, 0x497be7dd0a51e7b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x337a59a695ef999 # load x3 with value 0x337a59a695ef999
sw x3, 0(x2) # store 0x337a59a695ef999 in memory
flw f5, 0(x2) # load 0x337a59a695ef999 from memory into f5
fmadd.s f14, f26, f12, f5, dyn # perform operation
fmadd.s f14, f26, f12, f5, rdn # perform operation
fmadd.s f14, f26, f12, f5, rmm # perform operation
fmadd.s f14, f26, f12, f5, rne # perform operation
fmadd.s f14, f26, f12, f5, rtz # perform operation
fmadd.s f14, f26, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f26, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f26, f12, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x0)
li x23, 0xb22c8d453e11b540 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x6b0f182e1cc7fc5d # load x3 with value 0x6b0f182e1cc7fc5d
sw x3, 0(x2) # store 0x6b0f182e1cc7fc5d in memory
flw f8, 0(x2) # load 0x6b0f182e1cc7fc5d from memory into f8
fmadd.s f23, f10, f11, f8, dyn # perform operation
fmadd.s f23, f10, f11, f8, rdn # perform operation
fmadd.s f23, f10, f11, f8, rmm # perform operation
fmadd.s f23, f10, f11, f8, rne # perform operation
fmadd.s f23, f10, f11, f8, rtz # perform operation
fmadd.s f23, f10, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f10, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f10, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f10, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f10, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f10, f11, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000000)
li x23, 0x5201043726350cec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x70f22b0044364c72 # load x3 with value 0x70f22b0044364c72
sw x3, 0(x2) # store 0x70f22b0044364c72 in memory
flw f21, 0(x2) # load 0x70f22b0044364c72 from memory into f21
fmadd.s f23, f31, f22, f21, dyn # perform operation
fmadd.s f23, f31, f22, f21, rdn # perform operation
fmadd.s f23, f31, f22, f21, rmm # perform operation
fmadd.s f23, f31, f22, f21, rne # perform operation
fmadd.s f23, f31, f22, f21, rtz # perform operation
fmadd.s f23, f31, f22, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f22, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f22, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3f800000)
li x28, 0x464abfaf8d7a14f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0xed53e9e204161144 # load x3 with value 0xed53e9e204161144
sw x3, 0(x2) # store 0xed53e9e204161144 in memory
flw f21, 0(x2) # load 0xed53e9e204161144 from memory into f21
fmadd.s f28, f25, f18, f21, dyn # perform operation
fmadd.s f28, f25, f18, f21, rdn # perform operation
fmadd.s f28, f25, f18, f21, rmm # perform operation
fmadd.s f28, f25, f18, f21, rne # perform operation
fmadd.s f28, f25, f18, f21, rtz # perform operation
fmadd.s f28, f25, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f25, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f25, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbf800000)
li x1, 0x216d39e10644a742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0xd70a20559707b814 # load x3 with value 0xd70a20559707b814
sw x3, 0(x2) # store 0xd70a20559707b814 in memory
flw f6, 0(x2) # load 0xd70a20559707b814 from memory into f6
fmadd.s f1, f21, f27, f6, dyn # perform operation
fmadd.s f1, f21, f27, f6, rdn # perform operation
fmadd.s f1, f21, f27, f6, rmm # perform operation
fmadd.s f1, f21, f27, f6, rne # perform operation
fmadd.s f1, f21, f27, f6, rtz # perform operation
fmadd.s f1, f21, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x3fc00000)
li x24, 0xf7f683bc6475ac61 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0x69b312b66ca6badb # load x3 with value 0x69b312b66ca6badb
sw x3, 0(x2) # store 0x69b312b66ca6badb in memory
flw f6, 0(x2) # load 0x69b312b66ca6badb from memory into f6
fmadd.s f24, f22, f2, f6, dyn # perform operation
fmadd.s f24, f22, f2, f6, rdn # perform operation
fmadd.s f24, f22, f2, f6, rmm # perform operation
fmadd.s f24, f22, f2, f6, rne # perform operation
fmadd.s f24, f22, f2, f6, rtz # perform operation
fmadd.s f24, f22, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xbfc00000)
li x3, 0xe90fec62bdb0211b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xd5caa2994f2faf48 # load x3 with value 0xd5caa2994f2faf48
sw x3, 0(x2) # store 0xd5caa2994f2faf48 in memory
flw f1, 0(x2) # load 0xd5caa2994f2faf48 from memory into f1
fmadd.s f3, f24, f17, f1, dyn # perform operation
fmadd.s f3, f24, f17, f1, rdn # perform operation
fmadd.s f3, f24, f17, f1, rmm # perform operation
fmadd.s f3, f24, f17, f1, rne # perform operation
fmadd.s f3, f24, f17, f1, rtz # perform operation
fmadd.s f3, f24, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f24, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f24, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f24, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f24, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f24, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x40000000)
li x25, 0xaeb4c9a1427be800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x72308c930daa616e # load x3 with value 0x72308c930daa616e
sw x3, 0(x2) # store 0x72308c930daa616e in memory
flw f9, 0(x2) # load 0x72308c930daa616e from memory into f9
fmadd.s f25, f3, f18, f9, dyn # perform operation
fmadd.s f25, f3, f18, f9, rdn # perform operation
fmadd.s f25, f3, f18, f9, rmm # perform operation
fmadd.s f25, f3, f18, f9, rne # perform operation
fmadd.s f25, f3, f18, f9, rtz # perform operation
fmadd.s f25, f3, f18, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f18, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f18, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xc0000000)
li x25, 0xa8261bf2e5398328 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0xa7f649592b59d50a # load x3 with value 0xa7f649592b59d50a
sw x3, 0(x2) # store 0xa7f649592b59d50a in memory
flw f28, 0(x2) # load 0xa7f649592b59d50a from memory into f28
fmadd.s f25, f31, f11, f28, dyn # perform operation
fmadd.s f25, f31, f11, f28, rdn # perform operation
fmadd.s f25, f31, f11, f28, rmm # perform operation
fmadd.s f25, f31, f11, f28, rne # perform operation
fmadd.s f25, f31, f11, f28, rtz # perform operation
fmadd.s f25, f31, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x800000)
li x3, 0xb6cf85f4603d5b78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x57283330ad532226 # load x3 with value 0x57283330ad532226
sw x3, 0(x2) # store 0x57283330ad532226 in memory
flw f12, 0(x2) # load 0x57283330ad532226 from memory into f12
fmadd.s f3, f6, f25, f12, dyn # perform operation
fmadd.s f3, f6, f25, f12, rdn # perform operation
fmadd.s f3, f6, f25, f12, rmm # perform operation
fmadd.s f3, f6, f25, f12, rne # perform operation
fmadd.s f3, f6, f25, f12, rtz # perform operation
fmadd.s f3, f6, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f25, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80800000)
li x21, 0x965e3f696254adec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f6, 0(x2) # load 0x80800000 from memory into f6
li x3, 0xb2040604eaebf2ce # load x3 with value 0xb2040604eaebf2ce
sw x3, 0(x2) # store 0xb2040604eaebf2ce in memory
flw f16, 0(x2) # load 0xb2040604eaebf2ce from memory into f16
fmadd.s f21, f2, f6, f16, dyn # perform operation
fmadd.s f21, f2, f6, f16, rdn # perform operation
fmadd.s f21, f2, f6, f16, rmm # perform operation
fmadd.s f21, f2, f6, f16, rne # perform operation
fmadd.s f21, f2, f6, f16, rtz # perform operation
fmadd.s f21, f2, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f2, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f2, f6, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f7fffff)
li x2, 0x84c3c8d8fed54b3f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x1347ced936450e28 # load x3 with value 0x1347ced936450e28
sw x3, 0(x2) # store 0x1347ced936450e28 in memory
flw f13, 0(x2) # load 0x1347ced936450e28 from memory into f13
fmadd.s f2, f21, f30, f13, dyn # perform operation
fmadd.s f2, f21, f30, f13, rdn # perform operation
fmadd.s f2, f21, f30, f13, rmm # perform operation
fmadd.s f2, f21, f30, f13, rne # perform operation
fmadd.s f2, f21, f30, f13, rtz # perform operation
fmadd.s f2, f21, f30, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f21, f30, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f21, f30, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff7fffff)
li x12, 0xad5da2ba7632e81d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x93de7fee19ad025f # load x3 with value 0x93de7fee19ad025f
sw x3, 0(x2) # store 0x93de7fee19ad025f in memory
flw f6, 0(x2) # load 0x93de7fee19ad025f from memory into f6
fmadd.s f12, f13, f19, f6, dyn # perform operation
fmadd.s f12, f13, f19, f6, rdn # perform operation
fmadd.s f12, f13, f19, f6, rmm # perform operation
fmadd.s f12, f13, f19, f6, rne # perform operation
fmadd.s f12, f13, f19, f6, rtz # perform operation
fmadd.s f12, f13, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f13, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f13, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f13, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f13, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f13, f19, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffff)
li x30, 0x803247af29793127 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x27d9b63e5d44bfeb # load x3 with value 0x27d9b63e5d44bfeb
sw x3, 0(x2) # store 0x27d9b63e5d44bfeb in memory
flw f29, 0(x2) # load 0x27d9b63e5d44bfeb from memory into f29
fmadd.s f30, f21, f15, f29, dyn # perform operation
fmadd.s f30, f21, f15, f29, rdn # perform operation
fmadd.s f30, f21, f15, f29, rmm # perform operation
fmadd.s f30, f21, f15, f29, rne # perform operation
fmadd.s f30, f21, f15, f29, rtz # perform operation
fmadd.s f30, f21, f15, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f21, f15, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f21, f15, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x807fffff)
li x3, 0x4c848dc0354513cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x9591ae9b2aa81a8d # load x3 with value 0x9591ae9b2aa81a8d
sw x3, 0(x2) # store 0x9591ae9b2aa81a8d in memory
flw f14, 0(x2) # load 0x9591ae9b2aa81a8d from memory into f14
fmadd.s f3, f28, f8, f14, dyn # perform operation
fmadd.s f3, f28, f8, f14, rdn # perform operation
fmadd.s f3, f28, f8, f14, rmm # perform operation
fmadd.s f3, f28, f8, f14, rne # perform operation
fmadd.s f3, f28, f8, f14, rtz # perform operation
fmadd.s f3, f28, f8, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f28, f8, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f28, f8, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f28, f8, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f28, f8, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f28, f8, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x400000)
li x12, 0x3cd7f08943558d46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f23, 0(x2) # load 0x80800000 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x27cdeb190f1d36fb # load x3 with value 0x27cdeb190f1d36fb
sw x3, 0(x2) # store 0x27cdeb190f1d36fb in memory
flw f7, 0(x2) # load 0x27cdeb190f1d36fb from memory into f7
fmadd.s f12, f23, f21, f7, dyn # perform operation
fmadd.s f12, f23, f21, f7, rdn # perform operation
fmadd.s f12, f23, f21, f7, rmm # perform operation
fmadd.s f12, f23, f21, f7, rne # perform operation
fmadd.s f12, f23, f21, f7, rtz # perform operation
fmadd.s f12, f23, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f21, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80400000)
li x20, 0xa9af78619aaba1ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f31, 0(x2) # load 0x80800000 from memory into f31
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x69b025fe326a6d71 # load x3 with value 0x69b025fe326a6d71
sw x3, 0(x2) # store 0x69b025fe326a6d71 in memory
flw f23, 0(x2) # load 0x69b025fe326a6d71 from memory into f23
fmadd.s f20, f31, f8, f23, dyn # perform operation
fmadd.s f20, f31, f8, f23, rdn # perform operation
fmadd.s f20, f31, f8, f23, rmm # perform operation
fmadd.s f20, f31, f8, f23, rne # perform operation
fmadd.s f20, f31, f8, f23, rtz # perform operation
fmadd.s f20, f31, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f31, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f31, f8, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x1)
li x7, 0xd07f4313d248d84f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0xa63dc24eea23d533 # load x3 with value 0xa63dc24eea23d533
sw x3, 0(x2) # store 0xa63dc24eea23d533 in memory
flw f12, 0(x2) # load 0xa63dc24eea23d533 from memory into f12
fmadd.s f7, f2, f29, f12, dyn # perform operation
fmadd.s f7, f2, f29, f12, rdn # perform operation
fmadd.s f7, f2, f29, f12, rmm # perform operation
fmadd.s f7, f2, f29, f12, rne # perform operation
fmadd.s f7, f2, f29, f12, rtz # perform operation
fmadd.s f7, f2, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f29, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x80000001)
li x6, 0x54fa79ec8dd9b584 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0xe922d5e0328d627a # load x3 with value 0xe922d5e0328d627a
sw x3, 0(x2) # store 0xe922d5e0328d627a in memory
flw f8, 0(x2) # load 0xe922d5e0328d627a from memory into f8
fmadd.s f6, f4, f9, f8, dyn # perform operation
fmadd.s f6, f4, f9, f8, rdn # perform operation
fmadd.s f6, f4, f9, f8, rmm # perform operation
fmadd.s f6, f4, f9, f8, rne # perform operation
fmadd.s f6, f4, f9, f8, rtz # perform operation
fmadd.s f6, f4, f9, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f4, f9, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f4, f9, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800000)
li x21, 0x1cd8f4fb947453ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f7, 0(x2) # load 0x80800000 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x193023ba86b123f5 # load x3 with value 0x193023ba86b123f5
sw x3, 0(x2) # store 0x193023ba86b123f5 in memory
flw f15, 0(x2) # load 0x193023ba86b123f5 from memory into f15
fmadd.s f21, f7, f14, f15, dyn # perform operation
fmadd.s f21, f7, f14, f15, rdn # perform operation
fmadd.s f21, f7, f14, f15, rmm # perform operation
fmadd.s f21, f7, f14, f15, rne # perform operation
fmadd.s f21, f7, f14, f15, rtz # perform operation
fmadd.s f21, f7, f14, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f14, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f14, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0xff800000)
li x5, 0xd6dfe2b1e131ffd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x305a052d72bb7dc0 # load x3 with value 0x305a052d72bb7dc0
sw x3, 0(x2) # store 0x305a052d72bb7dc0 in memory
flw f10, 0(x2) # load 0x305a052d72bb7dc0 from memory into f10
fmadd.s f5, f3, f14, f10, dyn # perform operation
fmadd.s f5, f3, f14, f10, rdn # perform operation
fmadd.s f5, f3, f14, f10, rmm # perform operation
fmadd.s f5, f3, f14, f10, rne # perform operation
fmadd.s f5, f3, f14, f10, rtz # perform operation
fmadd.s f5, f3, f14, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f14, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f14, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fc00000)
li x31, 0x7d70df8c92abb9f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x43cea6a23c1f4b3a # load x3 with value 0x43cea6a23c1f4b3a
sw x3, 0(x2) # store 0x43cea6a23c1f4b3a in memory
flw f2, 0(x2) # load 0x43cea6a23c1f4b3a from memory into f2
fmadd.s f31, f5, f17, f2, dyn # perform operation
fmadd.s f31, f5, f17, f2, rdn # perform operation
fmadd.s f31, f5, f17, f2, rmm # perform operation
fmadd.s f31, f5, f17, f2, rne # perform operation
fmadd.s f31, f5, f17, f2, rtz # perform operation
fmadd.s f31, f5, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fffffff)
li x22, 0x304a1eb18d14a8e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x16f4e253ad7b05da # load x3 with value 0x16f4e253ad7b05da
sw x3, 0(x2) # store 0x16f4e253ad7b05da in memory
flw f3, 0(x2) # load 0x16f4e253ad7b05da from memory into f3
fmadd.s f22, f15, f5, f3, dyn # perform operation
fmadd.s f22, f15, f5, f3, rdn # perform operation
fmadd.s f22, f15, f5, f3, rmm # perform operation
fmadd.s f22, f15, f5, f3, rne # perform operation
fmadd.s f22, f15, f5, f3, rtz # perform operation
fmadd.s f22, f15, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f5, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7f800001)
li x5, 0x74e09f646da86bf7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x206ee223cd582a28 # load x3 with value 0x206ee223cd582a28
sw x3, 0(x2) # store 0x206ee223cd582a28 in memory
flw f27, 0(x2) # load 0x206ee223cd582a28 from memory into f27
fmadd.s f5, f20, f28, f27, dyn # perform operation
fmadd.s f5, f20, f28, f27, rdn # perform operation
fmadd.s f5, f20, f28, f27, rmm # perform operation
fmadd.s f5, f20, f28, f27, rne # perform operation
fmadd.s f5, f20, f28, f27, rtz # perform operation
fmadd.s f5, f20, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f28, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7fbfffff)
li x12, 0x075173a84392490d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x9a8f943273e30472 # load x3 with value 0x9a8f943273e30472
sw x3, 0(x2) # store 0x9a8f943273e30472 in memory
flw f5, 0(x2) # load 0x9a8f943273e30472 from memory into f5
fmadd.s f12, f25, f29, f5, dyn # perform operation
fmadd.s f12, f25, f29, f5, rdn # perform operation
fmadd.s f12, f25, f29, f5, rmm # perform operation
fmadd.s f12, f25, f29, f5, rne # perform operation
fmadd.s f12, f25, f29, f5, rtz # perform operation
fmadd.s f12, f25, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f29, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x7ef8654f)
li x22, 0x2e357f7f5654b5e0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f25, 0(x2) # load 0x7ef8654f from memory into f25
li x3, 0x2301b1ebfdbe0b07 # load x3 with value 0x2301b1ebfdbe0b07
sw x3, 0(x2) # store 0x2301b1ebfdbe0b07 in memory
flw f5, 0(x2) # load 0x2301b1ebfdbe0b07 from memory into f5
fmadd.s f22, f20, f25, f5, dyn # perform operation
fmadd.s f22, f20, f25, f5, rdn # perform operation
fmadd.s f22, f20, f25, f5, rmm # perform operation
fmadd.s f22, f20, f25, f5, rne # perform operation
fmadd.s f22, f20, f25, f5, rtz # perform operation
fmadd.s f22, f20, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f25, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80800000 fs2 = 0x813d9ab0)
li x11, 0x58bca2b30bfa0583 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0xde527c58942b1c12 # load x3 with value 0xde527c58942b1c12
sw x3, 0(x2) # store 0xde527c58942b1c12 in memory
flw f3, 0(x2) # load 0xde527c58942b1c12 from memory into f3
fmadd.s f11, f17, f29, f3, dyn # perform operation
fmadd.s f11, f17, f29, f3, rdn # perform operation
fmadd.s f11, f17, f29, f3, rmm # perform operation
fmadd.s f11, f17, f29, f3, rne # perform operation
fmadd.s f11, f17, f29, f3, rtz # perform operation
fmadd.s f11, f17, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f17, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f17, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x0)
li x14, 0x214e486152bd61e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x12f9360711b4882d # load x3 with value 0x12f9360711b4882d
sw x3, 0(x2) # store 0x12f9360711b4882d in memory
flw f25, 0(x2) # load 0x12f9360711b4882d from memory into f25
fmadd.s f14, f12, f17, f25, dyn # perform operation
fmadd.s f14, f12, f17, f25, rdn # perform operation
fmadd.s f14, f12, f17, f25, rmm # perform operation
fmadd.s f14, f12, f17, f25, rne # perform operation
fmadd.s f14, f12, f17, f25, rtz # perform operation
fmadd.s f14, f12, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f12, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f12, f17, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000000)
li x13, 0xff71574fb6e875d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0x54275b7c0cef5fa3 # load x3 with value 0x54275b7c0cef5fa3
sw x3, 0(x2) # store 0x54275b7c0cef5fa3 in memory
flw f23, 0(x2) # load 0x54275b7c0cef5fa3 from memory into f23
fmadd.s f13, f14, f18, f23, dyn # perform operation
fmadd.s f13, f14, f18, f23, rdn # perform operation
fmadd.s f13, f14, f18, f23, rmm # perform operation
fmadd.s f13, f14, f18, f23, rne # perform operation
fmadd.s f13, f14, f18, f23, rtz # perform operation
fmadd.s f13, f14, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3f800000)
li x14, 0xc3529b50fe9902ac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0x61b3670d36f33cfc # load x3 with value 0x61b3670d36f33cfc
sw x3, 0(x2) # store 0x61b3670d36f33cfc in memory
flw f24, 0(x2) # load 0x61b3670d36f33cfc from memory into f24
fmadd.s f14, f18, f16, f24, dyn # perform operation
fmadd.s f14, f18, f16, f24, rdn # perform operation
fmadd.s f14, f18, f16, f24, rmm # perform operation
fmadd.s f14, f18, f16, f24, rne # perform operation
fmadd.s f14, f18, f16, f24, rtz # perform operation
fmadd.s f14, f18, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbf800000)
li x27, 0xd7b828beb6d07229 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x5fbdde9454f50c08 # load x3 with value 0x5fbdde9454f50c08
sw x3, 0(x2) # store 0x5fbdde9454f50c08 in memory
flw f20, 0(x2) # load 0x5fbdde9454f50c08 from memory into f20
fmadd.s f27, f11, f19, f20, dyn # perform operation
fmadd.s f27, f11, f19, f20, rdn # perform operation
fmadd.s f27, f11, f19, f20, rmm # perform operation
fmadd.s f27, f11, f19, f20, rne # perform operation
fmadd.s f27, f11, f19, f20, rtz # perform operation
fmadd.s f27, f11, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f11, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f11, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x3fc00000)
li x15, 0xa7f893f0c26239a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f1, 0(x2) # load 0x3fc00000 from memory into f1
li x3, 0xf0bfdbfe80072d # load x3 with value 0xf0bfdbfe80072d
sw x3, 0(x2) # store 0xf0bfdbfe80072d in memory
flw f29, 0(x2) # load 0xf0bfdbfe80072d from memory into f29
fmadd.s f15, f5, f1, f29, dyn # perform operation
fmadd.s f15, f5, f1, f29, rdn # perform operation
fmadd.s f15, f5, f1, f29, rmm # perform operation
fmadd.s f15, f5, f1, f29, rne # perform operation
fmadd.s f15, f5, f1, f29, rtz # perform operation
fmadd.s f15, f5, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f5, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f5, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xbfc00000)
li x13, 0x8dfdde56ebbcb0a1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xae532485748b762b # load x3 with value 0xae532485748b762b
sw x3, 0(x2) # store 0xae532485748b762b in memory
flw f14, 0(x2) # load 0xae532485748b762b from memory into f14
fmadd.s f13, f10, f9, f14, dyn # perform operation
fmadd.s f13, f10, f9, f14, rdn # perform operation
fmadd.s f13, f10, f9, f14, rmm # perform operation
fmadd.s f13, f10, f9, f14, rne # perform operation
fmadd.s f13, f10, f9, f14, rtz # perform operation
fmadd.s f13, f10, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x40000000)
li x2, 0x3b37cf9186a3d096 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
li x3, 0x7a2c6de5517d0d61 # load x3 with value 0x7a2c6de5517d0d61
sw x3, 0(x2) # store 0x7a2c6de5517d0d61 in memory
flw f20, 0(x2) # load 0x7a2c6de5517d0d61 from memory into f20
fmadd.s f2, f17, f9, f20, dyn # perform operation
fmadd.s f2, f17, f9, f20, rdn # perform operation
fmadd.s f2, f17, f9, f20, rmm # perform operation
fmadd.s f2, f17, f9, f20, rne # perform operation
fmadd.s f2, f17, f9, f20, rtz # perform operation
fmadd.s f2, f17, f9, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f9, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f9, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f9, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f9, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f9, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xc0000000)
li x8, 0x82a37b7fe8bbd61a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
li x3, 0x227d675baf4bf8fe # load x3 with value 0x227d675baf4bf8fe
sw x3, 0(x2) # store 0x227d675baf4bf8fe in memory
flw f19, 0(x2) # load 0x227d675baf4bf8fe from memory into f19
fmadd.s f8, f17, f22, f19, dyn # perform operation
fmadd.s f8, f17, f22, f19, rdn # perform operation
fmadd.s f8, f17, f22, f19, rmm # perform operation
fmadd.s f8, f17, f22, f19, rne # perform operation
fmadd.s f8, f17, f22, f19, rtz # perform operation
fmadd.s f8, f17, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f17, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f17, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f17, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f17, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f17, f22, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x800000)
li x22, 0x94082c42c3519e5b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xde2c7983a0de6db9 # load x3 with value 0xde2c7983a0de6db9
sw x3, 0(x2) # store 0xde2c7983a0de6db9 in memory
flw f18, 0(x2) # load 0xde2c7983a0de6db9 from memory into f18
fmadd.s f22, f30, f16, f18, dyn # perform operation
fmadd.s f22, f30, f16, f18, rdn # perform operation
fmadd.s f22, f30, f16, f18, rmm # perform operation
fmadd.s f22, f30, f16, f18, rne # perform operation
fmadd.s f22, f30, f16, f18, rtz # perform operation
fmadd.s f22, f30, f16, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f30, f16, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f30, f16, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80800000)
li x21, 0xd1779e3949c5ce4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f25, 0(x2) # load 0x80800000 from memory into f25
li x3, 0x2a5e60affc3e9f55 # load x3 with value 0x2a5e60affc3e9f55
sw x3, 0(x2) # store 0x2a5e60affc3e9f55 in memory
flw f28, 0(x2) # load 0x2a5e60affc3e9f55 from memory into f28
fmadd.s f21, f27, f25, f28, dyn # perform operation
fmadd.s f21, f27, f25, f28, rdn # perform operation
fmadd.s f21, f27, f25, f28, rmm # perform operation
fmadd.s f21, f27, f25, f28, rne # perform operation
fmadd.s f21, f27, f25, f28, rtz # perform operation
fmadd.s f21, f27, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f7fffff)
li x9, 0xb050a0c01d00ede9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
li x3, 0xdc727b5d4f10a180 # load x3 with value 0xdc727b5d4f10a180
sw x3, 0(x2) # store 0xdc727b5d4f10a180 in memory
flw f18, 0(x2) # load 0xdc727b5d4f10a180 from memory into f18
fmadd.s f9, f16, f4, f18, dyn # perform operation
fmadd.s f9, f16, f4, f18, rdn # perform operation
fmadd.s f9, f16, f4, f18, rmm # perform operation
fmadd.s f9, f16, f4, f18, rne # perform operation
fmadd.s f9, f16, f4, f18, rtz # perform operation
fmadd.s f9, f16, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff7fffff)
li x19, 0xcecab2e1f143ade7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
li x3, 0xd89deaf43f5c6d17 # load x3 with value 0xd89deaf43f5c6d17
sw x3, 0(x2) # store 0xd89deaf43f5c6d17 in memory
flw f29, 0(x2) # load 0xd89deaf43f5c6d17 from memory into f29
fmadd.s f19, f16, f27, f29, dyn # perform operation
fmadd.s f19, f16, f27, f29, rdn # perform operation
fmadd.s f19, f16, f27, f29, rmm # perform operation
fmadd.s f19, f16, f27, f29, rne # perform operation
fmadd.s f19, f16, f27, f29, rtz # perform operation
fmadd.s f19, f16, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffff)
li x6, 0xe69b3212f02b58f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x5184dd9d2b102836 # load x3 with value 0x5184dd9d2b102836
sw x3, 0(x2) # store 0x5184dd9d2b102836 in memory
flw f11, 0(x2) # load 0x5184dd9d2b102836 from memory into f11
fmadd.s f6, f24, f18, f11, dyn # perform operation
fmadd.s f6, f24, f18, f11, rdn # perform operation
fmadd.s f6, f24, f18, f11, rmm # perform operation
fmadd.s f6, f24, f18, f11, rne # perform operation
fmadd.s f6, f24, f18, f11, rtz # perform operation
fmadd.s f6, f24, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f18, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x807fffff)
li x29, 0xc8b3d699bff6695e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xe1a4065dbe996725 # load x3 with value 0xe1a4065dbe996725
sw x3, 0(x2) # store 0xe1a4065dbe996725 in memory
flw f31, 0(x2) # load 0xe1a4065dbe996725 from memory into f31
fmadd.s f29, f14, f5, f31, dyn # perform operation
fmadd.s f29, f14, f5, f31, rdn # perform operation
fmadd.s f29, f14, f5, f31, rmm # perform operation
fmadd.s f29, f14, f5, f31, rne # perform operation
fmadd.s f29, f14, f5, f31, rtz # perform operation
fmadd.s f29, f14, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x400000)
li x22, 0x93b7189642509dd6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x24f831cb6e5b94b0 # load x3 with value 0x24f831cb6e5b94b0
sw x3, 0(x2) # store 0x24f831cb6e5b94b0 in memory
flw f9, 0(x2) # load 0x24f831cb6e5b94b0 from memory into f9
fmadd.s f22, f20, f5, f9, dyn # perform operation
fmadd.s f22, f20, f5, f9, rdn # perform operation
fmadd.s f22, f20, f5, f9, rmm # perform operation
fmadd.s f22, f20, f5, f9, rne # perform operation
fmadd.s f22, f20, f5, f9, rtz # perform operation
fmadd.s f22, f20, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80400000)
li x8, 0x75aa6694011ae068 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0x27cc3fd88904ff31 # load x3 with value 0x27cc3fd88904ff31
sw x3, 0(x2) # store 0x27cc3fd88904ff31 in memory
flw f13, 0(x2) # load 0x27cc3fd88904ff31 from memory into f13
fmadd.s f8, f5, f14, f13, dyn # perform operation
fmadd.s f8, f5, f14, f13, rdn # perform operation
fmadd.s f8, f5, f14, f13, rmm # perform operation
fmadd.s f8, f5, f14, f13, rne # perform operation
fmadd.s f8, f5, f14, f13, rtz # perform operation
fmadd.s f8, f5, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f14, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x1)
li x28, 0xf07cbc4b22d50244 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xa4a38e001d75d6b # load x3 with value 0xa4a38e001d75d6b
sw x3, 0(x2) # store 0xa4a38e001d75d6b in memory
flw f21, 0(x2) # load 0xa4a38e001d75d6b from memory into f21
fmadd.s f28, f13, f18, f21, dyn # perform operation
fmadd.s f28, f13, f18, f21, rdn # perform operation
fmadd.s f28, f13, f18, f21, rmm # perform operation
fmadd.s f28, f13, f18, f21, rne # perform operation
fmadd.s f28, f13, f18, f21, rtz # perform operation
fmadd.s f28, f13, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f18, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x80000001)
li x10, 0x9a97b2187eb8dcc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0x2a6e22d1c3099049 # load x3 with value 0x2a6e22d1c3099049
sw x3, 0(x2) # store 0x2a6e22d1c3099049 in memory
flw f26, 0(x2) # load 0x2a6e22d1c3099049 from memory into f26
fmadd.s f10, f9, f13, f26, dyn # perform operation
fmadd.s f10, f9, f13, f26, rdn # perform operation
fmadd.s f10, f9, f13, f26, rmm # perform operation
fmadd.s f10, f9, f13, f26, rne # perform operation
fmadd.s f10, f9, f13, f26, rtz # perform operation
fmadd.s f10, f9, f13, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f13, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f13, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800000)
li x24, 0x4f71d5d158c261c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f8, 0(x2) # load 0x7f7fffff from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0x5ed7c35b1937fe85 # load x3 with value 0x5ed7c35b1937fe85
sw x3, 0(x2) # store 0x5ed7c35b1937fe85 in memory
flw f16, 0(x2) # load 0x5ed7c35b1937fe85 from memory into f16
fmadd.s f24, f8, f22, f16, dyn # perform operation
fmadd.s f24, f8, f22, f16, rdn # perform operation
fmadd.s f24, f8, f22, f16, rmm # perform operation
fmadd.s f24, f8, f22, f16, rne # perform operation
fmadd.s f24, f8, f22, f16, rtz # perform operation
fmadd.s f24, f8, f22, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f8, f22, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f8, f22, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0xff800000)
li x22, 0xa4f7d0f96df74e17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x837f2a3921ebfebc # load x3 with value 0x837f2a3921ebfebc
sw x3, 0(x2) # store 0x837f2a3921ebfebc in memory
flw f31, 0(x2) # load 0x837f2a3921ebfebc from memory into f31
fmadd.s f22, f28, f3, f31, dyn # perform operation
fmadd.s f22, f28, f3, f31, rdn # perform operation
fmadd.s f22, f28, f3, f31, rmm # perform operation
fmadd.s f22, f28, f3, f31, rne # perform operation
fmadd.s f22, f28, f3, f31, rtz # perform operation
fmadd.s f22, f28, f3, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f28, f3, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f28, f3, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fc00000)
li x18, 0xecf1e4827d666391 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xcec484f05a011c03 # load x3 with value 0xcec484f05a011c03
sw x3, 0(x2) # store 0xcec484f05a011c03 in memory
flw f6, 0(x2) # load 0xcec484f05a011c03 from memory into f6
fmadd.s f18, f15, f5, f6, dyn # perform operation
fmadd.s f18, f15, f5, f6, rdn # perform operation
fmadd.s f18, f15, f5, f6, rmm # perform operation
fmadd.s f18, f15, f5, f6, rne # perform operation
fmadd.s f18, f15, f5, f6, rtz # perform operation
fmadd.s f18, f15, f5, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f5, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f5, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fffffff)
li x17, 0x15335f4d9e2b46ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f15, 0(x2) # load 0x7f7fffff from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x274bde8fcd946a69 # load x3 with value 0x274bde8fcd946a69
sw x3, 0(x2) # store 0x274bde8fcd946a69 in memory
flw f4, 0(x2) # load 0x274bde8fcd946a69 from memory into f4
fmadd.s f17, f15, f31, f4, dyn # perform operation
fmadd.s f17, f15, f31, f4, rdn # perform operation
fmadd.s f17, f15, f31, f4, rmm # perform operation
fmadd.s f17, f15, f31, f4, rne # perform operation
fmadd.s f17, f15, f31, f4, rtz # perform operation
fmadd.s f17, f15, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f31, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7f800001)
li x17, 0x4a5723d6264c6dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f18, 0(x2) # load 0x7f800001 from memory into f18
li x3, 0x65b570cf93ffc019 # load x3 with value 0x65b570cf93ffc019
sw x3, 0(x2) # store 0x65b570cf93ffc019 in memory
flw f25, 0(x2) # load 0x65b570cf93ffc019 from memory into f25
fmadd.s f17, f26, f18, f25, dyn # perform operation
fmadd.s f17, f26, f18, f25, rdn # perform operation
fmadd.s f17, f26, f18, f25, rmm # perform operation
fmadd.s f17, f26, f18, f25, rne # perform operation
fmadd.s f17, f26, f18, f25, rtz # perform operation
fmadd.s f17, f26, f18, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f18, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f18, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7fbfffff)
li x5, 0xe76a01058b29b47d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x97ca15f02f6433d0 # load x3 with value 0x97ca15f02f6433d0
sw x3, 0(x2) # store 0x97ca15f02f6433d0 in memory
flw f22, 0(x2) # load 0x97ca15f02f6433d0 from memory into f22
fmadd.s f5, f21, f19, f22, dyn # perform operation
fmadd.s f5, f21, f19, f22, rdn # perform operation
fmadd.s f5, f21, f19, f22, rmm # perform operation
fmadd.s f5, f21, f19, f22, rne # perform operation
fmadd.s f5, f21, f19, f22, rtz # perform operation
fmadd.s f5, f21, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f21, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f21, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x7ef8654f)
li x24, 0xee73f922e2271461 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7432f625082b2f4e # load x3 with value 0x7432f625082b2f4e
sw x3, 0(x2) # store 0x7432f625082b2f4e in memory
flw f8, 0(x2) # load 0x7432f625082b2f4e from memory into f8
fmadd.s f24, f30, f18, f8, dyn # perform operation
fmadd.s f24, f30, f18, f8, rdn # perform operation
fmadd.s f24, f30, f18, f8, rmm # perform operation
fmadd.s f24, f30, f18, f8, rne # perform operation
fmadd.s f24, f30, f18, f8, rtz # perform operation
fmadd.s f24, f30, f18, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f18, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f18, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f7fffff fs2 = 0x813d9ab0)
li x18, 0xb3c28355da0674d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
li x3, 0x11cd3ee7d8aaa44b # load x3 with value 0x11cd3ee7d8aaa44b
sw x3, 0(x2) # store 0x11cd3ee7d8aaa44b in memory
flw f27, 0(x2) # load 0x11cd3ee7d8aaa44b from memory into f27
fmadd.s f18, f2, f20, f27, dyn # perform operation
fmadd.s f18, f2, f20, f27, rdn # perform operation
fmadd.s f18, f2, f20, f27, rmm # perform operation
fmadd.s f18, f2, f20, f27, rne # perform operation
fmadd.s f18, f2, f20, f27, rtz # perform operation
fmadd.s f18, f2, f20, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f2, f20, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f2, f20, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f2, f20, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f2, f20, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f2, f20, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x0)
li x27, 0x6c7ab9e9949b1587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f2, 0(x2) # load 0x00000000 from memory into f2
li x3, 0x75e9ee1d6968247b # load x3 with value 0x75e9ee1d6968247b
sw x3, 0(x2) # store 0x75e9ee1d6968247b in memory
flw f12, 0(x2) # load 0x75e9ee1d6968247b from memory into f12
fmadd.s f27, f30, f2, f12, dyn # perform operation
fmadd.s f27, f30, f2, f12, rdn # perform operation
fmadd.s f27, f30, f2, f12, rmm # perform operation
fmadd.s f27, f30, f2, f12, rne # perform operation
fmadd.s f27, f30, f2, f12, rtz # perform operation
fmadd.s f27, f30, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f2, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000000)
li x22, 0xc01a2b7216647f40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f8, 0(x2) # load 0x80000000 from memory into f8
li x3, 0xb80636fbd294ca27 # load x3 with value 0xb80636fbd294ca27
sw x3, 0(x2) # store 0xb80636fbd294ca27 in memory
flw f10, 0(x2) # load 0xb80636fbd294ca27 from memory into f10
fmadd.s f22, f19, f8, f10, dyn # perform operation
fmadd.s f22, f19, f8, f10, rdn # perform operation
fmadd.s f22, f19, f8, f10, rmm # perform operation
fmadd.s f22, f19, f8, f10, rne # perform operation
fmadd.s f22, f19, f8, f10, rtz # perform operation
fmadd.s f22, f19, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3f800000)
li x19, 0x23735dcc8f411741 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0xecc214352336f3eb # load x3 with value 0xecc214352336f3eb
sw x3, 0(x2) # store 0xecc214352336f3eb in memory
flw f16, 0(x2) # load 0xecc214352336f3eb from memory into f16
fmadd.s f19, f3, f8, f16, dyn # perform operation
fmadd.s f19, f3, f8, f16, rdn # perform operation
fmadd.s f19, f3, f8, f16, rmm # perform operation
fmadd.s f19, f3, f8, f16, rne # perform operation
fmadd.s f19, f3, f8, f16, rtz # perform operation
fmadd.s f19, f3, f8, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f3, f8, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f3, f8, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbf800000)
li x10, 0xcdc74b308a23ce6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f23, 0(x2) # load 0xbf800000 from memory into f23
li x3, 0x65d8691db1cb0132 # load x3 with value 0x65d8691db1cb0132
sw x3, 0(x2) # store 0x65d8691db1cb0132 in memory
flw f1, 0(x2) # load 0x65d8691db1cb0132 from memory into f1
fmadd.s f10, f20, f23, f1, dyn # perform operation
fmadd.s f10, f20, f23, f1, rdn # perform operation
fmadd.s f10, f20, f23, f1, rmm # perform operation
fmadd.s f10, f20, f23, f1, rne # perform operation
fmadd.s f10, f20, f23, f1, rtz # perform operation
fmadd.s f10, f20, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f20, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f20, f23, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x3fc00000)
li x17, 0x4504f704db611731 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x2181eb7776b4b85a # load x3 with value 0x2181eb7776b4b85a
sw x3, 0(x2) # store 0x2181eb7776b4b85a in memory
flw f23, 0(x2) # load 0x2181eb7776b4b85a from memory into f23
fmadd.s f17, f22, f26, f23, dyn # perform operation
fmadd.s f17, f22, f26, f23, rdn # perform operation
fmadd.s f17, f22, f26, f23, rmm # perform operation
fmadd.s f17, f22, f26, f23, rne # perform operation
fmadd.s f17, f22, f26, f23, rtz # perform operation
fmadd.s f17, f22, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f22, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f22, f26, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xbfc00000)
li x19, 0x2ad717909a897493 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0xd4a2e73b448f99d0 # load x3 with value 0xd4a2e73b448f99d0
sw x3, 0(x2) # store 0xd4a2e73b448f99d0 in memory
flw f31, 0(x2) # load 0xd4a2e73b448f99d0 from memory into f31
fmadd.s f19, f8, f28, f31, dyn # perform operation
fmadd.s f19, f8, f28, f31, rdn # perform operation
fmadd.s f19, f8, f28, f31, rmm # perform operation
fmadd.s f19, f8, f28, f31, rne # perform operation
fmadd.s f19, f8, f28, f31, rtz # perform operation
fmadd.s f19, f8, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x40000000)
li x10, 0x0ed90c7473d4a24d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x165095f148b3d3e2 # load x3 with value 0x165095f148b3d3e2
sw x3, 0(x2) # store 0x165095f148b3d3e2 in memory
flw f20, 0(x2) # load 0x165095f148b3d3e2 from memory into f20
fmadd.s f10, f7, f30, f20, dyn # perform operation
fmadd.s f10, f7, f30, f20, rdn # perform operation
fmadd.s f10, f7, f30, f20, rmm # perform operation
fmadd.s f10, f7, f30, f20, rne # perform operation
fmadd.s f10, f7, f30, f20, rtz # perform operation
fmadd.s f10, f7, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f30, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xc0000000)
li x24, 0x47f78dbe060356a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0xdb01ee6e034a12e6 # load x3 with value 0xdb01ee6e034a12e6
sw x3, 0(x2) # store 0xdb01ee6e034a12e6 in memory
flw f23, 0(x2) # load 0xdb01ee6e034a12e6 from memory into f23
fmadd.s f24, f19, f31, f23, dyn # perform operation
fmadd.s f24, f19, f31, f23, rdn # perform operation
fmadd.s f24, f19, f31, f23, rmm # perform operation
fmadd.s f24, f19, f31, f23, rne # perform operation
fmadd.s f24, f19, f31, f23, rtz # perform operation
fmadd.s f24, f19, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f31, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x800000)
li x11, 0xac904606e1c7604a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f9, 0(x2) # load 0x00800000 from memory into f9
li x3, 0xec7379f4dc3ee5e1 # load x3 with value 0xec7379f4dc3ee5e1
sw x3, 0(x2) # store 0xec7379f4dc3ee5e1 in memory
flw f3, 0(x2) # load 0xec7379f4dc3ee5e1 from memory into f3
fmadd.s f11, f2, f9, f3, dyn # perform operation
fmadd.s f11, f2, f9, f3, rdn # perform operation
fmadd.s f11, f2, f9, f3, rmm # perform operation
fmadd.s f11, f2, f9, f3, rne # perform operation
fmadd.s f11, f2, f9, f3, rtz # perform operation
fmadd.s f11, f2, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f2, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f2, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f2, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f2, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f2, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80800000)
li x12, 0xb210706fb1ea2efe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xba01e18140798771 # load x3 with value 0xba01e18140798771
sw x3, 0(x2) # store 0xba01e18140798771 in memory
flw f30, 0(x2) # load 0xba01e18140798771 from memory into f30
fmadd.s f12, f1, f5, f30, dyn # perform operation
fmadd.s f12, f1, f5, f30, rdn # perform operation
fmadd.s f12, f1, f5, f30, rmm # perform operation
fmadd.s f12, f1, f5, f30, rne # perform operation
fmadd.s f12, f1, f5, f30, rtz # perform operation
fmadd.s f12, f1, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f1, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f1, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f1, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f1, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f1, f5, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f7fffff)
li x1, 0x61708f6c87a772b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0xe129fbe08b40bf1f # load x3 with value 0xe129fbe08b40bf1f
sw x3, 0(x2) # store 0xe129fbe08b40bf1f in memory
flw f3, 0(x2) # load 0xe129fbe08b40bf1f from memory into f3
fmadd.s f1, f5, f20, f3, dyn # perform operation
fmadd.s f1, f5, f20, f3, rdn # perform operation
fmadd.s f1, f5, f20, f3, rmm # perform operation
fmadd.s f1, f5, f20, f3, rne # perform operation
fmadd.s f1, f5, f20, f3, rtz # perform operation
fmadd.s f1, f5, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f5, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f5, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff7fffff)
li x26, 0xfc796c0d3a3bc957 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0xb60b7c4f9e585115 # load x3 with value 0xb60b7c4f9e585115
sw x3, 0(x2) # store 0xb60b7c4f9e585115 in memory
flw f1, 0(x2) # load 0xb60b7c4f9e585115 from memory into f1
fmadd.s f26, f17, f2, f1, dyn # perform operation
fmadd.s f26, f17, f2, f1, rdn # perform operation
fmadd.s f26, f17, f2, f1, rmm # perform operation
fmadd.s f26, f17, f2, f1, rne # perform operation
fmadd.s f26, f17, f2, f1, rtz # perform operation
fmadd.s f26, f17, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f2, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffff)
li x24, 0x0a340b729053cff4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0xa06d971d100f5c74 # load x3 with value 0xa06d971d100f5c74
sw x3, 0(x2) # store 0xa06d971d100f5c74 in memory
flw f5, 0(x2) # load 0xa06d971d100f5c74 from memory into f5
fmadd.s f24, f13, f14, f5, dyn # perform operation
fmadd.s f24, f13, f14, f5, rdn # perform operation
fmadd.s f24, f13, f14, f5, rmm # perform operation
fmadd.s f24, f13, f14, f5, rne # perform operation
fmadd.s f24, f13, f14, f5, rtz # perform operation
fmadd.s f24, f13, f14, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f14, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f14, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x807fffff)
li x22, 0x3ce857a146407b69 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x7306e7b75592ad0f # load x3 with value 0x7306e7b75592ad0f
sw x3, 0(x2) # store 0x7306e7b75592ad0f in memory
flw f17, 0(x2) # load 0x7306e7b75592ad0f from memory into f17
fmadd.s f22, f20, f6, f17, dyn # perform operation
fmadd.s f22, f20, f6, f17, rdn # perform operation
fmadd.s f22, f20, f6, f17, rmm # perform operation
fmadd.s f22, f20, f6, f17, rne # perform operation
fmadd.s f22, f20, f6, f17, rtz # perform operation
fmadd.s f22, f20, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x400000)
li x14, 0x3aa690780b1b4e33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x97bfce01e571ce9c # load x3 with value 0x97bfce01e571ce9c
sw x3, 0(x2) # store 0x97bfce01e571ce9c in memory
flw f12, 0(x2) # load 0x97bfce01e571ce9c from memory into f12
fmadd.s f14, f13, f26, f12, dyn # perform operation
fmadd.s f14, f13, f26, f12, rdn # perform operation
fmadd.s f14, f13, f26, f12, rmm # perform operation
fmadd.s f14, f13, f26, f12, rne # perform operation
fmadd.s f14, f13, f26, f12, rtz # perform operation
fmadd.s f14, f13, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f13, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f13, f26, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80400000)
li x2, 0xf349ad5926f6de2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0xc358f3f5d30e13d6 # load x3 with value 0xc358f3f5d30e13d6
sw x3, 0(x2) # store 0xc358f3f5d30e13d6 in memory
flw f28, 0(x2) # load 0xc358f3f5d30e13d6 from memory into f28
fmadd.s f2, f29, f5, f28, dyn # perform operation
fmadd.s f2, f29, f5, f28, rdn # perform operation
fmadd.s f2, f29, f5, f28, rmm # perform operation
fmadd.s f2, f29, f5, f28, rne # perform operation
fmadd.s f2, f29, f5, f28, rtz # perform operation
fmadd.s f2, f29, f5, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f5, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f5, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x1)
li x9, 0x730389543f09b7d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x706760f78846094e # load x3 with value 0x706760f78846094e
sw x3, 0(x2) # store 0x706760f78846094e in memory
flw f22, 0(x2) # load 0x706760f78846094e from memory into f22
fmadd.s f9, f24, f10, f22, dyn # perform operation
fmadd.s f9, f24, f10, f22, rdn # perform operation
fmadd.s f9, f24, f10, f22, rmm # perform operation
fmadd.s f9, f24, f10, f22, rne # perform operation
fmadd.s f9, f24, f10, f22, rtz # perform operation
fmadd.s f9, f24, f10, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f10, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f10, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f10, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f10, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f10, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x80000001)
li x19, 0xfbc7bc19c2b3da13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x2289c58d96f117c # load x3 with value 0x2289c58d96f117c
sw x3, 0(x2) # store 0x2289c58d96f117c in memory
flw f22, 0(x2) # load 0x2289c58d96f117c from memory into f22
fmadd.s f19, f28, f8, f22, dyn # perform operation
fmadd.s f19, f28, f8, f22, rdn # perform operation
fmadd.s f19, f28, f8, f22, rmm # perform operation
fmadd.s f19, f28, f8, f22, rne # perform operation
fmadd.s f19, f28, f8, f22, rtz # perform operation
fmadd.s f19, f28, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f28, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f28, f8, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800000)
li x4, 0xcf70650877cd60d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f6, 0(x2) # load 0xff7fffff from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f31, 0(x2) # load 0x7f800000 from memory into f31
li x3, 0xe01a571f680fe052 # load x3 with value 0xe01a571f680fe052
sw x3, 0(x2) # store 0xe01a571f680fe052 in memory
flw f25, 0(x2) # load 0xe01a571f680fe052 from memory into f25
fmadd.s f4, f6, f31, f25, dyn # perform operation
fmadd.s f4, f6, f31, f25, rdn # perform operation
fmadd.s f4, f6, f31, f25, rmm # perform operation
fmadd.s f4, f6, f31, f25, rne # perform operation
fmadd.s f4, f6, f31, f25, rtz # perform operation
fmadd.s f4, f6, f31, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f6, f31, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f6, f31, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0xff800000)
li x12, 0xc3417c471d40216f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0xc9bf88ab8c96271e # load x3 with value 0xc9bf88ab8c96271e
sw x3, 0(x2) # store 0xc9bf88ab8c96271e in memory
flw f3, 0(x2) # load 0xc9bf88ab8c96271e from memory into f3
fmadd.s f12, f5, f4, f3, dyn # perform operation
fmadd.s f12, f5, f4, f3, rdn # perform operation
fmadd.s f12, f5, f4, f3, rmm # perform operation
fmadd.s f12, f5, f4, f3, rne # perform operation
fmadd.s f12, f5, f4, f3, rtz # perform operation
fmadd.s f12, f5, f4, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f4, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f4, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fc00000)
li x23, 0xf7b421402f2600ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xe6f1269f1f348f33 # load x3 with value 0xe6f1269f1f348f33
sw x3, 0(x2) # store 0xe6f1269f1f348f33 in memory
flw f26, 0(x2) # load 0xe6f1269f1f348f33 from memory into f26
fmadd.s f23, f5, f16, f26, dyn # perform operation
fmadd.s f23, f5, f16, f26, rdn # perform operation
fmadd.s f23, f5, f16, f26, rmm # perform operation
fmadd.s f23, f5, f16, f26, rne # perform operation
fmadd.s f23, f5, f16, f26, rtz # perform operation
fmadd.s f23, f5, f16, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f16, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f16, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fffffff)
li x26, 0xcc959f3f4366fb6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0x27821dcddd237041 # load x3 with value 0x27821dcddd237041
sw x3, 0(x2) # store 0x27821dcddd237041 in memory
flw f2, 0(x2) # load 0x27821dcddd237041 from memory into f2
fmadd.s f26, f29, f5, f2, dyn # perform operation
fmadd.s f26, f29, f5, f2, rdn # perform operation
fmadd.s f26, f29, f5, f2, rmm # perform operation
fmadd.s f26, f29, f5, f2, rne # perform operation
fmadd.s f26, f29, f5, f2, rtz # perform operation
fmadd.s f26, f29, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f5, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7f800001)
li x31, 0x33fdb0b6e9ad9dce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xe51246de4fd36a15 # load x3 with value 0xe51246de4fd36a15
sw x3, 0(x2) # store 0xe51246de4fd36a15 in memory
flw f17, 0(x2) # load 0xe51246de4fd36a15 from memory into f17
fmadd.s f31, f5, f9, f17, dyn # perform operation
fmadd.s f31, f5, f9, f17, rdn # perform operation
fmadd.s f31, f5, f9, f17, rmm # perform operation
fmadd.s f31, f5, f9, f17, rne # perform operation
fmadd.s f31, f5, f9, f17, rtz # perform operation
fmadd.s f31, f5, f9, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f9, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f9, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7fbfffff)
li x21, 0x062f197c6b9de90f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x728c926be56f3d98 # load x3 with value 0x728c926be56f3d98
sw x3, 0(x2) # store 0x728c926be56f3d98 in memory
flw f4, 0(x2) # load 0x728c926be56f3d98 from memory into f4
fmadd.s f21, f12, f5, f4, dyn # perform operation
fmadd.s f21, f12, f5, f4, rdn # perform operation
fmadd.s f21, f12, f5, f4, rmm # perform operation
fmadd.s f21, f12, f5, f4, rne # perform operation
fmadd.s f21, f12, f5, f4, rtz # perform operation
fmadd.s f21, f12, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f12, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f12, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x7ef8654f)
li x12, 0x5e2d3486bf5130d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0xe756519b21e5c133 # load x3 with value 0xe756519b21e5c133
sw x3, 0(x2) # store 0xe756519b21e5c133 in memory
flw f26, 0(x2) # load 0xe756519b21e5c133 from memory into f26
fmadd.s f12, f17, f6, f26, dyn # perform operation
fmadd.s f12, f17, f6, f26, rdn # perform operation
fmadd.s f12, f17, f6, f26, rmm # perform operation
fmadd.s f12, f17, f6, f26, rne # perform operation
fmadd.s f12, f17, f6, f26, rtz # perform operation
fmadd.s f12, f17, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f6, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff7fffff fs2 = 0x813d9ab0)
li x7, 0x1048b84495d436fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x54fd93a1819871ca # load x3 with value 0x54fd93a1819871ca
sw x3, 0(x2) # store 0x54fd93a1819871ca in memory
flw f2, 0(x2) # load 0x54fd93a1819871ca from memory into f2
fmadd.s f7, f1, f9, f2, dyn # perform operation
fmadd.s f7, f1, f9, f2, rdn # perform operation
fmadd.s f7, f1, f9, f2, rmm # perform operation
fmadd.s f7, f1, f9, f2, rne # perform operation
fmadd.s f7, f1, f9, f2, rtz # perform operation
fmadd.s f7, f1, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x0)
li x3, 0xc5603baccbf2479b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0xf8850a725345e732 # load x3 with value 0xf8850a725345e732
sw x3, 0(x2) # store 0xf8850a725345e732 in memory
flw f21, 0(x2) # load 0xf8850a725345e732 from memory into f21
fmadd.s f3, f18, f17, f21, dyn # perform operation
fmadd.s f3, f18, f17, f21, rdn # perform operation
fmadd.s f3, f18, f17, f21, rmm # perform operation
fmadd.s f3, f18, f17, f21, rne # perform operation
fmadd.s f3, f18, f17, f21, rtz # perform operation
fmadd.s f3, f18, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f18, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f18, f17, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000000)
li x9, 0xe104a57d6163db73 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f18, 0(x2) # load 0x80000000 from memory into f18
li x3, 0xe59070e10074591c # load x3 with value 0xe59070e10074591c
sw x3, 0(x2) # store 0xe59070e10074591c in memory
flw f3, 0(x2) # load 0xe59070e10074591c from memory into f3
fmadd.s f9, f25, f18, f3, dyn # perform operation
fmadd.s f9, f25, f18, f3, rdn # perform operation
fmadd.s f9, f25, f18, f3, rmm # perform operation
fmadd.s f9, f25, f18, f3, rne # perform operation
fmadd.s f9, f25, f18, f3, rtz # perform operation
fmadd.s f9, f25, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f25, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f25, f18, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3f800000)
li x6, 0x69a6f368cdff9883 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
li x3, 0x43c45d923ef39fe5 # load x3 with value 0x43c45d923ef39fe5
sw x3, 0(x2) # store 0x43c45d923ef39fe5 in memory
flw f11, 0(x2) # load 0x43c45d923ef39fe5 from memory into f11
fmadd.s f6, f24, f22, f11, dyn # perform operation
fmadd.s f6, f24, f22, f11, rdn # perform operation
fmadd.s f6, f24, f22, f11, rmm # perform operation
fmadd.s f6, f24, f22, f11, rne # perform operation
fmadd.s f6, f24, f22, f11, rtz # perform operation
fmadd.s f6, f24, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f24, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f24, f22, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbf800000)
li x11, 0x8b97a0960409fe70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x95ff3c7b98a5d28c # load x3 with value 0x95ff3c7b98a5d28c
sw x3, 0(x2) # store 0x95ff3c7b98a5d28c in memory
flw f13, 0(x2) # load 0x95ff3c7b98a5d28c from memory into f13
fmadd.s f11, f25, f31, f13, dyn # perform operation
fmadd.s f11, f25, f31, f13, rdn # perform operation
fmadd.s f11, f25, f31, f13, rmm # perform operation
fmadd.s f11, f25, f31, f13, rne # perform operation
fmadd.s f11, f25, f31, f13, rtz # perform operation
fmadd.s f11, f25, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f25, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x3fc00000)
li x6, 0x798bcb10d04d8a2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0xb44b769633a3f9b1 # load x3 with value 0xb44b769633a3f9b1
sw x3, 0(x2) # store 0xb44b769633a3f9b1 in memory
flw f9, 0(x2) # load 0xb44b769633a3f9b1 from memory into f9
fmadd.s f6, f12, f3, f9, dyn # perform operation
fmadd.s f6, f12, f3, f9, rdn # perform operation
fmadd.s f6, f12, f3, f9, rmm # perform operation
fmadd.s f6, f12, f3, f9, rne # perform operation
fmadd.s f6, f12, f3, f9, rtz # perform operation
fmadd.s f6, f12, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xbfc00000)
li x15, 0xdfdcdfc867f9b43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x8aa5c11693211a61 # load x3 with value 0x8aa5c11693211a61
sw x3, 0(x2) # store 0x8aa5c11693211a61 in memory
flw f18, 0(x2) # load 0x8aa5c11693211a61 from memory into f18
fmadd.s f15, f25, f3, f18, dyn # perform operation
fmadd.s f15, f25, f3, f18, rdn # perform operation
fmadd.s f15, f25, f3, f18, rmm # perform operation
fmadd.s f15, f25, f3, f18, rne # perform operation
fmadd.s f15, f25, f3, f18, rtz # perform operation
fmadd.s f15, f25, f3, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f3, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f3, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x40000000)
li x29, 0xf2dd345bf36c8878 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x95963f0a0e9f1b0f # load x3 with value 0x95963f0a0e9f1b0f
sw x3, 0(x2) # store 0x95963f0a0e9f1b0f in memory
flw f3, 0(x2) # load 0x95963f0a0e9f1b0f from memory into f3
fmadd.s f29, f14, f26, f3, dyn # perform operation
fmadd.s f29, f14, f26, f3, rdn # perform operation
fmadd.s f29, f14, f26, f3, rmm # perform operation
fmadd.s f29, f14, f26, f3, rne # perform operation
fmadd.s f29, f14, f26, f3, rtz # perform operation
fmadd.s f29, f14, f26, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f14, f26, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f14, f26, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xc0000000)
li x26, 0x4467a6a7a0f38f27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
li x3, 0x1938267baf4640cc # load x3 with value 0x1938267baf4640cc
sw x3, 0(x2) # store 0x1938267baf4640cc in memory
flw f15, 0(x2) # load 0x1938267baf4640cc from memory into f15
fmadd.s f26, f31, f23, f15, dyn # perform operation
fmadd.s f26, f31, f23, f15, rdn # perform operation
fmadd.s f26, f31, f23, f15, rmm # perform operation
fmadd.s f26, f31, f23, f15, rne # perform operation
fmadd.s f26, f31, f23, f15, rtz # perform operation
fmadd.s f26, f31, f23, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f31, f23, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f31, f23, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x800000)
li x14, 0xe2a38a28db3483ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
li x3, 0x4e19e780c315b429 # load x3 with value 0x4e19e780c315b429
sw x3, 0(x2) # store 0x4e19e780c315b429 in memory
flw f13, 0(x2) # load 0x4e19e780c315b429 from memory into f13
fmadd.s f14, f24, f31, f13, dyn # perform operation
fmadd.s f14, f24, f31, f13, rdn # perform operation
fmadd.s f14, f24, f31, f13, rmm # perform operation
fmadd.s f14, f24, f31, f13, rne # perform operation
fmadd.s f14, f24, f31, f13, rtz # perform operation
fmadd.s f14, f24, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80800000)
li x2, 0x31a189e177224699 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0xe0e3fb848903aebb # load x3 with value 0xe0e3fb848903aebb
sw x3, 0(x2) # store 0xe0e3fb848903aebb in memory
flw f23, 0(x2) # load 0xe0e3fb848903aebb from memory into f23
fmadd.s f2, f25, f18, f23, dyn # perform operation
fmadd.s f2, f25, f18, f23, rdn # perform operation
fmadd.s f2, f25, f18, f23, rmm # perform operation
fmadd.s f2, f25, f18, f23, rne # perform operation
fmadd.s f2, f25, f18, f23, rtz # perform operation
fmadd.s f2, f25, f18, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f25, f18, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f25, f18, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f7fffff)
li x6, 0xce38d721bfb8cecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f1, 0(x2) # load 0x007fffff from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
li x3, 0x3c5208a9053280b6 # load x3 with value 0x3c5208a9053280b6
sw x3, 0(x2) # store 0x3c5208a9053280b6 in memory
flw f8, 0(x2) # load 0x3c5208a9053280b6 from memory into f8
fmadd.s f6, f1, f22, f8, dyn # perform operation
fmadd.s f6, f1, f22, f8, rdn # perform operation
fmadd.s f6, f1, f22, f8, rmm # perform operation
fmadd.s f6, f1, f22, f8, rne # perform operation
fmadd.s f6, f1, f22, f8, rtz # perform operation
fmadd.s f6, f1, f22, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f22, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f22, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff7fffff)
li x27, 0xe405c384e66b3a33 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x82bcf33f8d6f9b6b # load x3 with value 0x82bcf33f8d6f9b6b
sw x3, 0(x2) # store 0x82bcf33f8d6f9b6b in memory
flw f12, 0(x2) # load 0x82bcf33f8d6f9b6b from memory into f12
fmadd.s f27, f18, f19, f12, dyn # perform operation
fmadd.s f27, f18, f19, f12, rdn # perform operation
fmadd.s f27, f18, f19, f12, rmm # perform operation
fmadd.s f27, f18, f19, f12, rne # perform operation
fmadd.s f27, f18, f19, f12, rtz # perform operation
fmadd.s f27, f18, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f19, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffff)
li x11, 0xbe1eaef36e561098 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xcf888e5f36590f21 # load x3 with value 0xcf888e5f36590f21
sw x3, 0(x2) # store 0xcf888e5f36590f21 in memory
flw f5, 0(x2) # load 0xcf888e5f36590f21 from memory into f5
fmadd.s f11, f10, f3, f5, dyn # perform operation
fmadd.s f11, f10, f3, f5, rdn # perform operation
fmadd.s f11, f10, f3, f5, rmm # perform operation
fmadd.s f11, f10, f3, f5, rne # perform operation
fmadd.s f11, f10, f3, f5, rtz # perform operation
fmadd.s f11, f10, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f10, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f10, f3, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x807fffff)
li x8, 0xf2d93d03df8118b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x9a3c5e3b4505a8c8 # load x3 with value 0x9a3c5e3b4505a8c8
sw x3, 0(x2) # store 0x9a3c5e3b4505a8c8 in memory
flw f22, 0(x2) # load 0x9a3c5e3b4505a8c8 from memory into f22
fmadd.s f8, f12, f30, f22, dyn # perform operation
fmadd.s f8, f12, f30, f22, rdn # perform operation
fmadd.s f8, f12, f30, f22, rmm # perform operation
fmadd.s f8, f12, f30, f22, rne # perform operation
fmadd.s f8, f12, f30, f22, rtz # perform operation
fmadd.s f8, f12, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f12, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f12, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f12, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f12, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f12, f30, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x400000)
li x15, 0xcfd3d747f5108094 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0xb5f4c70856da012a # load x3 with value 0xb5f4c70856da012a
sw x3, 0(x2) # store 0xb5f4c70856da012a in memory
flw f2, 0(x2) # load 0xb5f4c70856da012a from memory into f2
fmadd.s f15, f19, f28, f2, dyn # perform operation
fmadd.s f15, f19, f28, f2, rdn # perform operation
fmadd.s f15, f19, f28, f2, rmm # perform operation
fmadd.s f15, f19, f28, f2, rne # perform operation
fmadd.s f15, f19, f28, f2, rtz # perform operation
fmadd.s f15, f19, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f28, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80400000)
li x22, 0x6f1c23f05733304e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0xd8aa7f284c21324a # load x3 with value 0xd8aa7f284c21324a
sw x3, 0(x2) # store 0xd8aa7f284c21324a in memory
flw f5, 0(x2) # load 0xd8aa7f284c21324a from memory into f5
fmadd.s f22, f10, f4, f5, dyn # perform operation
fmadd.s f22, f10, f4, f5, rdn # perform operation
fmadd.s f22, f10, f4, f5, rmm # perform operation
fmadd.s f22, f10, f4, f5, rne # perform operation
fmadd.s f22, f10, f4, f5, rtz # perform operation
fmadd.s f22, f10, f4, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f10, f4, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f10, f4, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f10, f4, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f10, f4, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f10, f4, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x1)
li x25, 0xe9729ceae3eb1a32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xb675b0d4b1795676 # load x3 with value 0xb675b0d4b1795676
sw x3, 0(x2) # store 0xb675b0d4b1795676 in memory
flw f13, 0(x2) # load 0xb675b0d4b1795676 from memory into f13
fmadd.s f25, f4, f16, f13, dyn # perform operation
fmadd.s f25, f4, f16, f13, rdn # perform operation
fmadd.s f25, f4, f16, f13, rmm # perform operation
fmadd.s f25, f4, f16, f13, rne # perform operation
fmadd.s f25, f4, f16, f13, rtz # perform operation
fmadd.s f25, f4, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f4, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f4, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f4, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f4, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f4, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x80000001)
li x9, 0xb30d80bba13bae1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
li x3, 0x9c35ff468c565334 # load x3 with value 0x9c35ff468c565334
sw x3, 0(x2) # store 0x9c35ff468c565334 in memory
flw f28, 0(x2) # load 0x9c35ff468c565334 from memory into f28
fmadd.s f9, f23, f25, f28, dyn # perform operation
fmadd.s f9, f23, f25, f28, rdn # perform operation
fmadd.s f9, f23, f25, f28, rmm # perform operation
fmadd.s f9, f23, f25, f28, rne # perform operation
fmadd.s f9, f23, f25, f28, rtz # perform operation
fmadd.s f9, f23, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f23, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f23, f25, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800000)
li x4, 0xc7c5ff5f719bfe46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x95f2af86ceec2806 # load x3 with value 0x95f2af86ceec2806
sw x3, 0(x2) # store 0x95f2af86ceec2806 in memory
flw f6, 0(x2) # load 0x95f2af86ceec2806 from memory into f6
fmadd.s f4, f23, f27, f6, dyn # perform operation
fmadd.s f4, f23, f27, f6, rdn # perform operation
fmadd.s f4, f23, f27, f6, rmm # perform operation
fmadd.s f4, f23, f27, f6, rne # perform operation
fmadd.s f4, f23, f27, f6, rtz # perform operation
fmadd.s f4, f23, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f23, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f23, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0xff800000)
li x16, 0xabdd73a7c52c836d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x9d4f7f6213916e20 # load x3 with value 0x9d4f7f6213916e20
sw x3, 0(x2) # store 0x9d4f7f6213916e20 in memory
flw f8, 0(x2) # load 0x9d4f7f6213916e20 from memory into f8
fmadd.s f16, f21, f31, f8, dyn # perform operation
fmadd.s f16, f21, f31, f8, rdn # perform operation
fmadd.s f16, f21, f31, f8, rmm # perform operation
fmadd.s f16, f21, f31, f8, rne # perform operation
fmadd.s f16, f21, f31, f8, rtz # perform operation
fmadd.s f16, f21, f31, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f21, f31, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f21, f31, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f21, f31, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f21, f31, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f21, f31, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fc00000)
li x26, 0xb66903729cc775f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0xe906548f12359484 # load x3 with value 0xe906548f12359484
sw x3, 0(x2) # store 0xe906548f12359484 in memory
flw f16, 0(x2) # load 0xe906548f12359484 from memory into f16
fmadd.s f26, f29, f15, f16, dyn # perform operation
fmadd.s f26, f29, f15, f16, rdn # perform operation
fmadd.s f26, f29, f15, f16, rmm # perform operation
fmadd.s f26, f29, f15, f16, rne # perform operation
fmadd.s f26, f29, f15, f16, rtz # perform operation
fmadd.s f26, f29, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fffffff)
li x22, 0x60b95c05f338a800 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x2bfe4b586511bf85 # load x3 with value 0x2bfe4b586511bf85
sw x3, 0(x2) # store 0x2bfe4b586511bf85 in memory
flw f18, 0(x2) # load 0x2bfe4b586511bf85 from memory into f18
fmadd.s f22, f20, f4, f18, dyn # perform operation
fmadd.s f22, f20, f4, f18, rdn # perform operation
fmadd.s f22, f20, f4, f18, rmm # perform operation
fmadd.s f22, f20, f4, f18, rne # perform operation
fmadd.s f22, f20, f4, f18, rtz # perform operation
fmadd.s f22, f20, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7f800001)
li x25, 0x24931706d7b2105a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0xd1606f038c30a22c # load x3 with value 0xd1606f038c30a22c
sw x3, 0(x2) # store 0xd1606f038c30a22c in memory
flw f10, 0(x2) # load 0xd1606f038c30a22c from memory into f10
fmadd.s f25, f26, f28, f10, dyn # perform operation
fmadd.s f25, f26, f28, f10, rdn # perform operation
fmadd.s f25, f26, f28, f10, rmm # perform operation
fmadd.s f25, f26, f28, f10, rne # perform operation
fmadd.s f25, f26, f28, f10, rtz # perform operation
fmadd.s f25, f26, f28, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f26, f28, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f26, f28, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7fbfffff)
li x31, 0xe3787542e17b3fc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x734e6ecd60ae9d68 # load x3 with value 0x734e6ecd60ae9d68
sw x3, 0(x2) # store 0x734e6ecd60ae9d68 in memory
flw f15, 0(x2) # load 0x734e6ecd60ae9d68 from memory into f15
fmadd.s f31, f11, f10, f15, dyn # perform operation
fmadd.s f31, f11, f10, f15, rdn # perform operation
fmadd.s f31, f11, f10, f15, rmm # perform operation
fmadd.s f31, f11, f10, f15, rne # perform operation
fmadd.s f31, f11, f10, f15, rtz # perform operation
fmadd.s f31, f11, f10, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f11, f10, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f11, f10, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x7ef8654f)
li x20, 0x21bb9719e8f99b8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x666e3d00acfd445c # load x3 with value 0x666e3d00acfd445c
sw x3, 0(x2) # store 0x666e3d00acfd445c in memory
flw f5, 0(x2) # load 0x666e3d00acfd445c from memory into f5
fmadd.s f20, f25, f22, f5, dyn # perform operation
fmadd.s f20, f25, f22, f5, rdn # perform operation
fmadd.s f20, f25, f22, f5, rmm # perform operation
fmadd.s f20, f25, f22, f5, rne # perform operation
fmadd.s f20, f25, f22, f5, rtz # perform operation
fmadd.s f20, f25, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f22, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffff fs2 = 0x813d9ab0)
li x10, 0x80921aefa162b40c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xdc7ccad8ffdb194b # load x3 with value 0xdc7ccad8ffdb194b
sw x3, 0(x2) # store 0xdc7ccad8ffdb194b in memory
flw f7, 0(x2) # load 0xdc7ccad8ffdb194b from memory into f7
fmadd.s f10, f6, f18, f7, dyn # perform operation
fmadd.s f10, f6, f18, f7, rdn # perform operation
fmadd.s f10, f6, f18, f7, rmm # perform operation
fmadd.s f10, f6, f18, f7, rne # perform operation
fmadd.s f10, f6, f18, f7, rtz # perform operation
fmadd.s f10, f6, f18, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f6, f18, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f6, f18, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f6, f18, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f6, f18, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f6, f18, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x0)
li x20, 0xb391d63d1ef963d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f15, 0(x2) # load 0x00000000 from memory into f15
li x3, 0xf709531a9d2faff4 # load x3 with value 0xf709531a9d2faff4
sw x3, 0(x2) # store 0xf709531a9d2faff4 in memory
flw f5, 0(x2) # load 0xf709531a9d2faff4 from memory into f5
fmadd.s f20, f3, f15, f5, dyn # perform operation
fmadd.s f20, f3, f15, f5, rdn # perform operation
fmadd.s f20, f3, f15, f5, rmm # perform operation
fmadd.s f20, f3, f15, f5, rne # perform operation
fmadd.s f20, f3, f15, f5, rtz # perform operation
fmadd.s f20, f3, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f15, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000000)
li x15, 0xd162820137b6c689 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0xd19a9de742bcf3d5 # load x3 with value 0xd19a9de742bcf3d5
sw x3, 0(x2) # store 0xd19a9de742bcf3d5 in memory
flw f27, 0(x2) # load 0xd19a9de742bcf3d5 from memory into f27
fmadd.s f15, f8, f23, f27, dyn # perform operation
fmadd.s f15, f8, f23, f27, rdn # perform operation
fmadd.s f15, f8, f23, f27, rmm # perform operation
fmadd.s f15, f8, f23, f27, rne # perform operation
fmadd.s f15, f8, f23, f27, rtz # perform operation
fmadd.s f15, f8, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f23, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3f800000)
li x25, 0x546c1e722391129f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x418e21662966e17a # load x3 with value 0x418e21662966e17a
sw x3, 0(x2) # store 0x418e21662966e17a in memory
flw f2, 0(x2) # load 0x418e21662966e17a from memory into f2
fmadd.s f25, f8, f30, f2, dyn # perform operation
fmadd.s f25, f8, f30, f2, rdn # perform operation
fmadd.s f25, f8, f30, f2, rmm # perform operation
fmadd.s f25, f8, f30, f2, rne # perform operation
fmadd.s f25, f8, f30, f2, rtz # perform operation
fmadd.s f25, f8, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f8, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f8, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f8, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f8, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f8, f30, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbf800000)
li x19, 0x86d053c349f2ebd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x63b16431c3c4c2eb # load x3 with value 0x63b16431c3c4c2eb
sw x3, 0(x2) # store 0x63b16431c3c4c2eb in memory
flw f11, 0(x2) # load 0x63b16431c3c4c2eb from memory into f11
fmadd.s f19, f6, f21, f11, dyn # perform operation
fmadd.s f19, f6, f21, f11, rdn # perform operation
fmadd.s f19, f6, f21, f11, rmm # perform operation
fmadd.s f19, f6, f21, f11, rne # perform operation
fmadd.s f19, f6, f21, f11, rtz # perform operation
fmadd.s f19, f6, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f6, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f6, f21, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x3fc00000)
li x3, 0x6e0597acea362dcb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f17, 0(x2) # load 0x807fffff from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xb1aec4d219409d5b # load x3 with value 0xb1aec4d219409d5b
sw x3, 0(x2) # store 0xb1aec4d219409d5b in memory
flw f24, 0(x2) # load 0xb1aec4d219409d5b from memory into f24
fmadd.s f3, f17, f27, f24, dyn # perform operation
fmadd.s f3, f17, f27, f24, rdn # perform operation
fmadd.s f3, f17, f27, f24, rmm # perform operation
fmadd.s f3, f17, f27, f24, rne # perform operation
fmadd.s f3, f17, f27, f24, rtz # perform operation
fmadd.s f3, f17, f27, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f27, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f27, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f27, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f27, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f27, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xbfc00000)
li x23, 0x78fbfc29a595c3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
li x3, 0xe05cfacbdb04e3f0 # load x3 with value 0xe05cfacbdb04e3f0
sw x3, 0(x2) # store 0xe05cfacbdb04e3f0 in memory
flw f22, 0(x2) # load 0xe05cfacbdb04e3f0 from memory into f22
fmadd.s f23, f1, f4, f22, dyn # perform operation
fmadd.s f23, f1, f4, f22, rdn # perform operation
fmadd.s f23, f1, f4, f22, rmm # perform operation
fmadd.s f23, f1, f4, f22, rne # perform operation
fmadd.s f23, f1, f4, f22, rtz # perform operation
fmadd.s f23, f1, f4, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f4, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f4, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f4, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f4, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f4, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x40000000)
li x26, 0x0d6894ef2e3567f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f25, 0(x2) # load 0x40000000 from memory into f25
li x3, 0x52da3188af43b24a # load x3 with value 0x52da3188af43b24a
sw x3, 0(x2) # store 0x52da3188af43b24a in memory
flw f21, 0(x2) # load 0x52da3188af43b24a from memory into f21
fmadd.s f26, f20, f25, f21, dyn # perform operation
fmadd.s f26, f20, f25, f21, rdn # perform operation
fmadd.s f26, f20, f25, f21, rmm # perform operation
fmadd.s f26, f20, f25, f21, rne # perform operation
fmadd.s f26, f20, f25, f21, rtz # perform operation
fmadd.s f26, f20, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xc0000000)
li x7, 0x1aad8072a1c44d96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x373c54263c5bdd62 # load x3 with value 0x373c54263c5bdd62
sw x3, 0(x2) # store 0x373c54263c5bdd62 in memory
flw f14, 0(x2) # load 0x373c54263c5bdd62 from memory into f14
fmadd.s f7, f5, f9, f14, dyn # perform operation
fmadd.s f7, f5, f9, f14, rdn # perform operation
fmadd.s f7, f5, f9, f14, rmm # perform operation
fmadd.s f7, f5, f9, f14, rne # perform operation
fmadd.s f7, f5, f9, f14, rtz # perform operation
fmadd.s f7, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x800000)
li x16, 0xcd704dfb235d7051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x594f56f4fce1e44d # load x3 with value 0x594f56f4fce1e44d
sw x3, 0(x2) # store 0x594f56f4fce1e44d in memory
flw f29, 0(x2) # load 0x594f56f4fce1e44d from memory into f29
fmadd.s f16, f9, f20, f29, dyn # perform operation
fmadd.s f16, f9, f20, f29, rdn # perform operation
fmadd.s f16, f9, f20, f29, rmm # perform operation
fmadd.s f16, f9, f20, f29, rne # perform operation
fmadd.s f16, f9, f20, f29, rtz # perform operation
fmadd.s f16, f9, f20, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f9, f20, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f9, f20, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80800000)
li x16, 0x5f017b08d414996a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x2cffb0ccd9be0654 # load x3 with value 0x2cffb0ccd9be0654
sw x3, 0(x2) # store 0x2cffb0ccd9be0654 in memory
flw f7, 0(x2) # load 0x2cffb0ccd9be0654 from memory into f7
fmadd.s f16, f2, f1, f7, dyn # perform operation
fmadd.s f16, f2, f1, f7, rdn # perform operation
fmadd.s f16, f2, f1, f7, rmm # perform operation
fmadd.s f16, f2, f1, f7, rne # perform operation
fmadd.s f16, f2, f1, f7, rtz # perform operation
fmadd.s f16, f2, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f2, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f2, f1, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f7fffff)
li x31, 0x1805f3b51dc92af5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0xa6735a24901d31fe # load x3 with value 0xa6735a24901d31fe
sw x3, 0(x2) # store 0xa6735a24901d31fe in memory
flw f26, 0(x2) # load 0xa6735a24901d31fe from memory into f26
fmadd.s f31, f3, f18, f26, dyn # perform operation
fmadd.s f31, f3, f18, f26, rdn # perform operation
fmadd.s f31, f3, f18, f26, rmm # perform operation
fmadd.s f31, f3, f18, f26, rne # perform operation
fmadd.s f31, f3, f18, f26, rtz # perform operation
fmadd.s f31, f3, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f3, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f3, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff7fffff)
li x13, 0x92ed7cc0814f9061 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x32e3af123410af7b # load x3 with value 0x32e3af123410af7b
sw x3, 0(x2) # store 0x32e3af123410af7b in memory
flw f4, 0(x2) # load 0x32e3af123410af7b from memory into f4
fmadd.s f13, f28, f24, f4, dyn # perform operation
fmadd.s f13, f28, f24, f4, rdn # perform operation
fmadd.s f13, f28, f24, f4, rmm # perform operation
fmadd.s f13, f28, f24, f4, rne # perform operation
fmadd.s f13, f28, f24, f4, rtz # perform operation
fmadd.s f13, f28, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffff)
li x30, 0x583a01d5a1210ac3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0x541b3b346dbec469 # load x3 with value 0x541b3b346dbec469
sw x3, 0(x2) # store 0x541b3b346dbec469 in memory
flw f26, 0(x2) # load 0x541b3b346dbec469 from memory into f26
fmadd.s f30, f31, f18, f26, dyn # perform operation
fmadd.s f30, f31, f18, f26, rdn # perform operation
fmadd.s f30, f31, f18, f26, rmm # perform operation
fmadd.s f30, f31, f18, f26, rne # perform operation
fmadd.s f30, f31, f18, f26, rtz # perform operation
fmadd.s f30, f31, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f18, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x807fffff)
li x17, 0x553c625c6f4f9913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f4, 0(x2) # load 0x807fffff from memory into f4
li x3, 0x20addf2439d90dac # load x3 with value 0x20addf2439d90dac
sw x3, 0(x2) # store 0x20addf2439d90dac in memory
flw f18, 0(x2) # load 0x20addf2439d90dac from memory into f18
fmadd.s f17, f27, f4, f18, dyn # perform operation
fmadd.s f17, f27, f4, f18, rdn # perform operation
fmadd.s f17, f27, f4, f18, rmm # perform operation
fmadd.s f17, f27, f4, f18, rne # perform operation
fmadd.s f17, f27, f4, f18, rtz # perform operation
fmadd.s f17, f27, f4, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f4, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f4, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x400000)
li x25, 0xd4b20a3ab71a186a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f31, 0(x2) # load 0x00400000 from memory into f31
li x3, 0x5fa5efa577ae1da8 # load x3 with value 0x5fa5efa577ae1da8
sw x3, 0(x2) # store 0x5fa5efa577ae1da8 in memory
flw f21, 0(x2) # load 0x5fa5efa577ae1da8 from memory into f21
fmadd.s f25, f26, f31, f21, dyn # perform operation
fmadd.s f25, f26, f31, f21, rdn # perform operation
fmadd.s f25, f26, f31, f21, rmm # perform operation
fmadd.s f25, f26, f31, f21, rne # perform operation
fmadd.s f25, f26, f31, f21, rtz # perform operation
fmadd.s f25, f26, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f26, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f26, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f26, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f26, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f26, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80400000)
li x17, 0x78555ab5d9230807 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0xcd63deef303b96d3 # load x3 with value 0xcd63deef303b96d3
sw x3, 0(x2) # store 0xcd63deef303b96d3 in memory
flw f12, 0(x2) # load 0xcd63deef303b96d3 from memory into f12
fmadd.s f17, f16, f30, f12, dyn # perform operation
fmadd.s f17, f16, f30, f12, rdn # perform operation
fmadd.s f17, f16, f30, f12, rmm # perform operation
fmadd.s f17, f16, f30, f12, rne # perform operation
fmadd.s f17, f16, f30, f12, rtz # perform operation
fmadd.s f17, f16, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f30, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x1)
li x22, 0x00a8070a3aab1489 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f8, 0(x2) # load 0x807fffff from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x2031d839b240628b # load x3 with value 0x2031d839b240628b
sw x3, 0(x2) # store 0x2031d839b240628b in memory
flw f30, 0(x2) # load 0x2031d839b240628b from memory into f30
fmadd.s f22, f8, f1, f30, dyn # perform operation
fmadd.s f22, f8, f1, f30, rdn # perform operation
fmadd.s f22, f8, f1, f30, rmm # perform operation
fmadd.s f22, f8, f1, f30, rne # perform operation
fmadd.s f22, f8, f1, f30, rtz # perform operation
fmadd.s f22, f8, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f1, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x80000001)
li x9, 0x04bd8d8a754fa523 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xf2e9c41a4bb009ab # load x3 with value 0xf2e9c41a4bb009ab
sw x3, 0(x2) # store 0xf2e9c41a4bb009ab in memory
flw f20, 0(x2) # load 0xf2e9c41a4bb009ab from memory into f20
fmadd.s f9, f6, f13, f20, dyn # perform operation
fmadd.s f9, f6, f13, f20, rdn # perform operation
fmadd.s f9, f6, f13, f20, rmm # perform operation
fmadd.s f9, f6, f13, f20, rne # perform operation
fmadd.s f9, f6, f13, f20, rtz # perform operation
fmadd.s f9, f6, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f13, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800000)
li x16, 0x925bc7a49fe0766a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xb4f1078a51a5e503 # load x3 with value 0xb4f1078a51a5e503
sw x3, 0(x2) # store 0xb4f1078a51a5e503 in memory
flw f15, 0(x2) # load 0xb4f1078a51a5e503 from memory into f15
fmadd.s f16, f20, f27, f15, dyn # perform operation
fmadd.s f16, f20, f27, f15, rdn # perform operation
fmadd.s f16, f20, f27, f15, rmm # perform operation
fmadd.s f16, f20, f27, f15, rne # perform operation
fmadd.s f16, f20, f27, f15, rtz # perform operation
fmadd.s f16, f20, f27, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f27, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f27, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f27, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f27, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f27, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0xff800000)
li x11, 0x031cc3caa53f5c30 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0xabc2927c43050096 # load x3 with value 0xabc2927c43050096
sw x3, 0(x2) # store 0xabc2927c43050096 in memory
flw f25, 0(x2) # load 0xabc2927c43050096 from memory into f25
fmadd.s f11, f31, f14, f25, dyn # perform operation
fmadd.s f11, f31, f14, f25, rdn # perform operation
fmadd.s f11, f31, f14, f25, rmm # perform operation
fmadd.s f11, f31, f14, f25, rne # perform operation
fmadd.s f11, f31, f14, f25, rtz # perform operation
fmadd.s f11, f31, f14, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f31, f14, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f31, f14, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fc00000)
li x29, 0x98988393a794d038 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x17f712de677876ae # load x3 with value 0x17f712de677876ae
sw x3, 0(x2) # store 0x17f712de677876ae in memory
flw f9, 0(x2) # load 0x17f712de677876ae from memory into f9
fmadd.s f29, f25, f3, f9, dyn # perform operation
fmadd.s f29, f25, f3, f9, rdn # perform operation
fmadd.s f29, f25, f3, f9, rmm # perform operation
fmadd.s f29, f25, f3, f9, rne # perform operation
fmadd.s f29, f25, f3, f9, rtz # perform operation
fmadd.s f29, f25, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f25, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f25, f3, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fffffff)
li x11, 0x358dde2e3895f7a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
li x3, 0xb6c5aacc3969d1ad # load x3 with value 0xb6c5aacc3969d1ad
sw x3, 0(x2) # store 0xb6c5aacc3969d1ad in memory
flw f18, 0(x2) # load 0xb6c5aacc3969d1ad from memory into f18
fmadd.s f11, f2, f29, f18, dyn # perform operation
fmadd.s f11, f2, f29, f18, rdn # perform operation
fmadd.s f11, f2, f29, f18, rmm # perform operation
fmadd.s f11, f2, f29, f18, rne # perform operation
fmadd.s f11, f2, f29, f18, rtz # perform operation
fmadd.s f11, f2, f29, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f2, f29, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f2, f29, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7f800001)
li x6, 0x62371907da4593ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0xf9b0fe67b249b1b1 # load x3 with value 0xf9b0fe67b249b1b1
sw x3, 0(x2) # store 0xf9b0fe67b249b1b1 in memory
flw f10, 0(x2) # load 0xf9b0fe67b249b1b1 from memory into f10
fmadd.s f6, f28, f8, f10, dyn # perform operation
fmadd.s f6, f28, f8, f10, rdn # perform operation
fmadd.s f6, f28, f8, f10, rmm # perform operation
fmadd.s f6, f28, f8, f10, rne # perform operation
fmadd.s f6, f28, f8, f10, rtz # perform operation
fmadd.s f6, f28, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f28, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f28, f8, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7fbfffff)
li x19, 0x98a345975efb850d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xf9062dfd3bd596c3 # load x3 with value 0xf9062dfd3bd596c3
sw x3, 0(x2) # store 0xf9062dfd3bd596c3 in memory
flw f11, 0(x2) # load 0xf9062dfd3bd596c3 from memory into f11
fmadd.s f19, f24, f30, f11, dyn # perform operation
fmadd.s f19, f24, f30, f11, rdn # perform operation
fmadd.s f19, f24, f30, f11, rmm # perform operation
fmadd.s f19, f24, f30, f11, rne # perform operation
fmadd.s f19, f24, f30, f11, rtz # perform operation
fmadd.s f19, f24, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f24, f30, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x7ef8654f)
li x24, 0x379195870d729359 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f31, 0(x2) # load 0x807fffff from memory into f31
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x669d4173d313e65 # load x3 with value 0x669d4173d313e65
sw x3, 0(x2) # store 0x669d4173d313e65 in memory
flw f22, 0(x2) # load 0x669d4173d313e65 from memory into f22
fmadd.s f24, f31, f2, f22, dyn # perform operation
fmadd.s f24, f31, f2, f22, rdn # perform operation
fmadd.s f24, f31, f2, f22, rmm # perform operation
fmadd.s f24, f31, f2, f22, rne # perform operation
fmadd.s f24, f31, f2, f22, rtz # perform operation
fmadd.s f24, f31, f2, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f31, f2, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f31, f2, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x807fffff fs2 = 0x813d9ab0)
li x6, 0x9e20089a7133aea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f14, 0(x2) # load 0x813d9ab0 from memory into f14
li x3, 0xd95111cb90f41155 # load x3 with value 0xd95111cb90f41155
sw x3, 0(x2) # store 0xd95111cb90f41155 in memory
flw f18, 0(x2) # load 0xd95111cb90f41155 from memory into f18
fmadd.s f6, f9, f14, f18, dyn # perform operation
fmadd.s f6, f9, f14, f18, rdn # perform operation
fmadd.s f6, f9, f14, f18, rmm # perform operation
fmadd.s f6, f9, f14, f18, rne # perform operation
fmadd.s f6, f9, f14, f18, rtz # perform operation
fmadd.s f6, f9, f14, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f14, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f14, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x0)
li x2, 0xcbfc33eaa3773dec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
li x3, 0x284f649bf0ce3dfa # load x3 with value 0x284f649bf0ce3dfa
sw x3, 0(x2) # store 0x284f649bf0ce3dfa in memory
flw f21, 0(x2) # load 0x284f649bf0ce3dfa from memory into f21
fmadd.s f2, f7, f31, f21, dyn # perform operation
fmadd.s f2, f7, f31, f21, rdn # perform operation
fmadd.s f2, f7, f31, f21, rmm # perform operation
fmadd.s f2, f7, f31, f21, rne # perform operation
fmadd.s f2, f7, f31, f21, rtz # perform operation
fmadd.s f2, f7, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f7, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f7, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000000)
li x21, 0x099c55a440a7d6da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x1dcde051a830ac4a # load x3 with value 0x1dcde051a830ac4a
sw x3, 0(x2) # store 0x1dcde051a830ac4a in memory
flw f10, 0(x2) # load 0x1dcde051a830ac4a from memory into f10
fmadd.s f21, f18, f6, f10, dyn # perform operation
fmadd.s f21, f18, f6, f10, rdn # perform operation
fmadd.s f21, f18, f6, f10, rmm # perform operation
fmadd.s f21, f18, f6, f10, rne # perform operation
fmadd.s f21, f18, f6, f10, rtz # perform operation
fmadd.s f21, f18, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f18, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f18, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3f800000)
li x4, 0xc55803870be673b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x35fa16c6a328c2a # load x3 with value 0x35fa16c6a328c2a
sw x3, 0(x2) # store 0x35fa16c6a328c2a in memory
flw f30, 0(x2) # load 0x35fa16c6a328c2a from memory into f30
fmadd.s f4, f9, f20, f30, dyn # perform operation
fmadd.s f4, f9, f20, f30, rdn # perform operation
fmadd.s f4, f9, f20, f30, rmm # perform operation
fmadd.s f4, f9, f20, f30, rne # perform operation
fmadd.s f4, f9, f20, f30, rtz # perform operation
fmadd.s f4, f9, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f9, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f9, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f9, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f9, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f9, f20, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbf800000)
li x21, 0xbeec9f5855be44d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xf8d0d7d514e720c9 # load x3 with value 0xf8d0d7d514e720c9
sw x3, 0(x2) # store 0xf8d0d7d514e720c9 in memory
flw f17, 0(x2) # load 0xf8d0d7d514e720c9 from memory into f17
fmadd.s f21, f11, f6, f17, dyn # perform operation
fmadd.s f21, f11, f6, f17, rdn # perform operation
fmadd.s f21, f11, f6, f17, rmm # perform operation
fmadd.s f21, f11, f6, f17, rne # perform operation
fmadd.s f21, f11, f6, f17, rtz # perform operation
fmadd.s f21, f11, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f6, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x3fc00000)
li x9, 0xbcbf11445cabee99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xfd95d33f2c158bba # load x3 with value 0xfd95d33f2c158bba
sw x3, 0(x2) # store 0xfd95d33f2c158bba in memory
flw f16, 0(x2) # load 0xfd95d33f2c158bba from memory into f16
fmadd.s f9, f18, f31, f16, dyn # perform operation
fmadd.s f9, f18, f31, f16, rdn # perform operation
fmadd.s f9, f18, f31, f16, rmm # perform operation
fmadd.s f9, f18, f31, f16, rne # perform operation
fmadd.s f9, f18, f31, f16, rtz # perform operation
fmadd.s f9, f18, f31, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f18, f31, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f18, f31, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xbfc00000)
li x1, 0x3fb85892a47268c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xebf4d89f2f81edad # load x3 with value 0xebf4d89f2f81edad
sw x3, 0(x2) # store 0xebf4d89f2f81edad in memory
flw f18, 0(x2) # load 0xebf4d89f2f81edad from memory into f18
fmadd.s f1, f3, f24, f18, dyn # perform operation
fmadd.s f1, f3, f24, f18, rdn # perform operation
fmadd.s f1, f3, f24, f18, rmm # perform operation
fmadd.s f1, f3, f24, f18, rne # perform operation
fmadd.s f1, f3, f24, f18, rtz # perform operation
fmadd.s f1, f3, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f24, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x40000000)
li x9, 0xe8ad4223b5ffabd4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xbadbce493c050e91 # load x3 with value 0xbadbce493c050e91
sw x3, 0(x2) # store 0xbadbce493c050e91 in memory
flw f25, 0(x2) # load 0xbadbce493c050e91 from memory into f25
fmadd.s f9, f1, f15, f25, dyn # perform operation
fmadd.s f9, f1, f15, f25, rdn # perform operation
fmadd.s f9, f1, f15, f25, rmm # perform operation
fmadd.s f9, f1, f15, f25, rne # perform operation
fmadd.s f9, f1, f15, f25, rtz # perform operation
fmadd.s f9, f1, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f1, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f1, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f1, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f1, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f1, f15, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xc0000000)
li x14, 0x79793c18f594fe64 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0x13cb1877dfeadc18 # load x3 with value 0x13cb1877dfeadc18
sw x3, 0(x2) # store 0x13cb1877dfeadc18 in memory
flw f13, 0(x2) # load 0x13cb1877dfeadc18 from memory into f13
fmadd.s f14, f11, f29, f13, dyn # perform operation
fmadd.s f14, f11, f29, f13, rdn # perform operation
fmadd.s f14, f11, f29, f13, rmm # perform operation
fmadd.s f14, f11, f29, f13, rne # perform operation
fmadd.s f14, f11, f29, f13, rtz # perform operation
fmadd.s f14, f11, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f11, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f11, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f11, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f11, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f11, f29, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x800000)
li x22, 0xc7598fbac6f3ffdb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x5be5910cef88199f # load x3 with value 0x5be5910cef88199f
sw x3, 0(x2) # store 0x5be5910cef88199f in memory
flw f6, 0(x2) # load 0x5be5910cef88199f from memory into f6
fmadd.s f22, f26, f27, f6, dyn # perform operation
fmadd.s f22, f26, f27, f6, rdn # perform operation
fmadd.s f22, f26, f27, f6, rmm # perform operation
fmadd.s f22, f26, f27, f6, rne # perform operation
fmadd.s f22, f26, f27, f6, rtz # perform operation
fmadd.s f22, f26, f27, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f27, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f27, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80800000)
li x27, 0x402252def0dc073b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f18, 0(x2) # load 0x00400000 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x2f499dd21cea851d # load x3 with value 0x2f499dd21cea851d
sw x3, 0(x2) # store 0x2f499dd21cea851d in memory
flw f25, 0(x2) # load 0x2f499dd21cea851d from memory into f25
fmadd.s f27, f18, f1, f25, dyn # perform operation
fmadd.s f27, f18, f1, f25, rdn # perform operation
fmadd.s f27, f18, f1, f25, rmm # perform operation
fmadd.s f27, f18, f1, f25, rne # perform operation
fmadd.s f27, f18, f1, f25, rtz # perform operation
fmadd.s f27, f18, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f1, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f7fffff)
li x26, 0x5c74b5dd6e526fa5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x476e0c6e42e005bd # load x3 with value 0x476e0c6e42e005bd
sw x3, 0(x2) # store 0x476e0c6e42e005bd in memory
flw f27, 0(x2) # load 0x476e0c6e42e005bd from memory into f27
fmadd.s f26, f17, f9, f27, dyn # perform operation
fmadd.s f26, f17, f9, f27, rdn # perform operation
fmadd.s f26, f17, f9, f27, rmm # perform operation
fmadd.s f26, f17, f9, f27, rne # perform operation
fmadd.s f26, f17, f9, f27, rtz # perform operation
fmadd.s f26, f17, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f9, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff7fffff)
li x16, 0xbc17caf6db16044e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
li x3, 0x8e0ed64bb49db740 # load x3 with value 0x8e0ed64bb49db740
sw x3, 0(x2) # store 0x8e0ed64bb49db740 in memory
flw f31, 0(x2) # load 0x8e0ed64bb49db740 from memory into f31
fmadd.s f16, f22, f15, f31, dyn # perform operation
fmadd.s f16, f22, f15, f31, rdn # perform operation
fmadd.s f16, f22, f15, f31, rmm # perform operation
fmadd.s f16, f22, f15, f31, rne # perform operation
fmadd.s f16, f22, f15, f31, rtz # perform operation
fmadd.s f16, f22, f15, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f22, f15, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f22, f15, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffff)
li x13, 0x7eefac566a029ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xc9eef3d4af6ffe79 # load x3 with value 0xc9eef3d4af6ffe79
sw x3, 0(x2) # store 0xc9eef3d4af6ffe79 in memory
flw f21, 0(x2) # load 0xc9eef3d4af6ffe79 from memory into f21
fmadd.s f13, f7, f2, f21, dyn # perform operation
fmadd.s f13, f7, f2, f21, rdn # perform operation
fmadd.s f13, f7, f2, f21, rmm # perform operation
fmadd.s f13, f7, f2, f21, rne # perform operation
fmadd.s f13, f7, f2, f21, rtz # perform operation
fmadd.s f13, f7, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f2, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x807fffff)
li x13, 0xd035f59daf55542f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x3f4f4639bcdaa311 # load x3 with value 0x3f4f4639bcdaa311
sw x3, 0(x2) # store 0x3f4f4639bcdaa311 in memory
flw f7, 0(x2) # load 0x3f4f4639bcdaa311 from memory into f7
fmadd.s f13, f24, f22, f7, dyn # perform operation
fmadd.s f13, f24, f22, f7, rdn # perform operation
fmadd.s f13, f24, f22, f7, rmm # perform operation
fmadd.s f13, f24, f22, f7, rne # perform operation
fmadd.s f13, f24, f22, f7, rtz # perform operation
fmadd.s f13, f24, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f24, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f24, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f24, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f24, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f24, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x400000)
li x19, 0x4eaeb3fdf0311362 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0xd33d6bb416b524f1 # load x3 with value 0xd33d6bb416b524f1
sw x3, 0(x2) # store 0xd33d6bb416b524f1 in memory
flw f9, 0(x2) # load 0xd33d6bb416b524f1 from memory into f9
fmadd.s f19, f13, f15, f9, dyn # perform operation
fmadd.s f19, f13, f15, f9, rdn # perform operation
fmadd.s f19, f13, f15, f9, rmm # perform operation
fmadd.s f19, f13, f15, f9, rne # perform operation
fmadd.s f19, f13, f15, f9, rtz # perform operation
fmadd.s f19, f13, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f13, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f13, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80400000)
li x22, 0x09d19d0ac6ce8e20 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0xaebb812cd8c1b4d8 # load x3 with value 0xaebb812cd8c1b4d8
sw x3, 0(x2) # store 0xaebb812cd8c1b4d8 in memory
flw f29, 0(x2) # load 0xaebb812cd8c1b4d8 from memory into f29
fmadd.s f22, f24, f18, f29, dyn # perform operation
fmadd.s f22, f24, f18, f29, rdn # perform operation
fmadd.s f22, f24, f18, f29, rmm # perform operation
fmadd.s f22, f24, f18, f29, rne # perform operation
fmadd.s f22, f24, f18, f29, rtz # perform operation
fmadd.s f22, f24, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f18, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x1)
li x13, 0x44166b3113bff1c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xbea961df1541fc1 # load x3 with value 0xbea961df1541fc1
sw x3, 0(x2) # store 0xbea961df1541fc1 in memory
flw f9, 0(x2) # load 0xbea961df1541fc1 from memory into f9
fmadd.s f13, f7, f12, f9, dyn # perform operation
fmadd.s f13, f7, f12, f9, rdn # perform operation
fmadd.s f13, f7, f12, f9, rmm # perform operation
fmadd.s f13, f7, f12, f9, rne # perform operation
fmadd.s f13, f7, f12, f9, rtz # perform operation
fmadd.s f13, f7, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f12, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x80000001)
li x31, 0xdb89aa81dc83ba13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f13, 0(x2) # load 0x80000001 from memory into f13
li x3, 0xb913fe29ce7b3da5 # load x3 with value 0xb913fe29ce7b3da5
sw x3, 0(x2) # store 0xb913fe29ce7b3da5 in memory
flw f7, 0(x2) # load 0xb913fe29ce7b3da5 from memory into f7
fmadd.s f31, f14, f13, f7, dyn # perform operation
fmadd.s f31, f14, f13, f7, rdn # perform operation
fmadd.s f31, f14, f13, f7, rmm # perform operation
fmadd.s f31, f14, f13, f7, rne # perform operation
fmadd.s f31, f14, f13, f7, rtz # perform operation
fmadd.s f31, f14, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f14, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f14, f13, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800000)
li x30, 0xcaaebb12449942f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0xda154cae22ab0f16 # load x3 with value 0xda154cae22ab0f16
sw x3, 0(x2) # store 0xda154cae22ab0f16 in memory
flw f29, 0(x2) # load 0xda154cae22ab0f16 from memory into f29
fmadd.s f30, f25, f19, f29, dyn # perform operation
fmadd.s f30, f25, f19, f29, rdn # perform operation
fmadd.s f30, f25, f19, f29, rmm # perform operation
fmadd.s f30, f25, f19, f29, rne # perform operation
fmadd.s f30, f25, f19, f29, rtz # perform operation
fmadd.s f30, f25, f19, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f25, f19, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f25, f19, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0xff800000)
li x27, 0xc396803b87831e8f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xe79d3c4fc85f148a # load x3 with value 0xe79d3c4fc85f148a
sw x3, 0(x2) # store 0xe79d3c4fc85f148a in memory
flw f2, 0(x2) # load 0xe79d3c4fc85f148a from memory into f2
fmadd.s f27, f17, f9, f2, dyn # perform operation
fmadd.s f27, f17, f9, f2, rdn # perform operation
fmadd.s f27, f17, f9, f2, rmm # perform operation
fmadd.s f27, f17, f9, f2, rne # perform operation
fmadd.s f27, f17, f9, f2, rtz # perform operation
fmadd.s f27, f17, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fc00000)
li x24, 0x62b2320b018d8d8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0xaf590411b7d3e4bb # load x3 with value 0xaf590411b7d3e4bb
sw x3, 0(x2) # store 0xaf590411b7d3e4bb in memory
flw f10, 0(x2) # load 0xaf590411b7d3e4bb from memory into f10
fmadd.s f24, f6, f21, f10, dyn # perform operation
fmadd.s f24, f6, f21, f10, rdn # perform operation
fmadd.s f24, f6, f21, f10, rmm # perform operation
fmadd.s f24, f6, f21, f10, rne # perform operation
fmadd.s f24, f6, f21, f10, rtz # perform operation
fmadd.s f24, f6, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f21, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fffffff)
li x14, 0xd84ad92805d3d8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0x5d2bbdded68fbee # load x3 with value 0x5d2bbdded68fbee
sw x3, 0(x2) # store 0x5d2bbdded68fbee in memory
flw f19, 0(x2) # load 0x5d2bbdded68fbee from memory into f19
fmadd.s f14, f28, f25, f19, dyn # perform operation
fmadd.s f14, f28, f25, f19, rdn # perform operation
fmadd.s f14, f28, f25, f19, rmm # perform operation
fmadd.s f14, f28, f25, f19, rne # perform operation
fmadd.s f14, f28, f25, f19, rtz # perform operation
fmadd.s f14, f28, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f25, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7f800001)
li x18, 0x49e20d84ede632f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x3b719c255bdb54a6 # load x3 with value 0x3b719c255bdb54a6
sw x3, 0(x2) # store 0x3b719c255bdb54a6 in memory
flw f28, 0(x2) # load 0x3b719c255bdb54a6 from memory into f28
fmadd.s f18, f30, f3, f28, dyn # perform operation
fmadd.s f18, f30, f3, f28, rdn # perform operation
fmadd.s f18, f30, f3, f28, rmm # perform operation
fmadd.s f18, f30, f3, f28, rne # perform operation
fmadd.s f18, f30, f3, f28, rtz # perform operation
fmadd.s f18, f30, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7fbfffff)
li x31, 0x982611964e08e948 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xfdb20a36f38b42de # load x3 with value 0xfdb20a36f38b42de
sw x3, 0(x2) # store 0xfdb20a36f38b42de in memory
flw f2, 0(x2) # load 0xfdb20a36f38b42de from memory into f2
fmadd.s f31, f12, f9, f2, dyn # perform operation
fmadd.s f31, f12, f9, f2, rdn # perform operation
fmadd.s f31, f12, f9, f2, rmm # perform operation
fmadd.s f31, f12, f9, f2, rne # perform operation
fmadd.s f31, f12, f9, f2, rtz # perform operation
fmadd.s f31, f12, f9, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f9, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f9, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x7ef8654f)
li x12, 0xdbb7b408d8a67b48 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x5ae04a594c214736 # load x3 with value 0x5ae04a594c214736
sw x3, 0(x2) # store 0x5ae04a594c214736 in memory
flw f19, 0(x2) # load 0x5ae04a594c214736 from memory into f19
fmadd.s f12, f5, f15, f19, dyn # perform operation
fmadd.s f12, f5, f15, f19, rdn # perform operation
fmadd.s f12, f5, f15, f19, rmm # perform operation
fmadd.s f12, f5, f15, f19, rne # perform operation
fmadd.s f12, f5, f15, f19, rtz # perform operation
fmadd.s f12, f5, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f15, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x400000 fs2 = 0x813d9ab0)
li x11, 0x06fc7b3cd10e27ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x27c3a93b039bd711 # load x3 with value 0x27c3a93b039bd711
sw x3, 0(x2) # store 0x27c3a93b039bd711 in memory
flw f14, 0(x2) # load 0x27c3a93b039bd711 from memory into f14
fmadd.s f11, f28, f6, f14, dyn # perform operation
fmadd.s f11, f28, f6, f14, rdn # perform operation
fmadd.s f11, f28, f6, f14, rmm # perform operation
fmadd.s f11, f28, f6, f14, rne # perform operation
fmadd.s f11, f28, f6, f14, rtz # perform operation
fmadd.s f11, f28, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x0)
li x21, 0x126b23111c94dfc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
li x3, 0xea2fb361d17e189c # load x3 with value 0xea2fb361d17e189c
sw x3, 0(x2) # store 0xea2fb361d17e189c in memory
flw f10, 0(x2) # load 0xea2fb361d17e189c from memory into f10
fmadd.s f21, f27, f6, f10, dyn # perform operation
fmadd.s f21, f27, f6, f10, rdn # perform operation
fmadd.s f21, f27, f6, f10, rmm # perform operation
fmadd.s f21, f27, f6, f10, rne # perform operation
fmadd.s f21, f27, f6, f10, rtz # perform operation
fmadd.s f21, f27, f6, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f6, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f6, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000000)
li x17, 0x22e4a3cb160f66a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x4f3d3920f1e39c22 # load x3 with value 0x4f3d3920f1e39c22
sw x3, 0(x2) # store 0x4f3d3920f1e39c22 in memory
flw f16, 0(x2) # load 0x4f3d3920f1e39c22 from memory into f16
fmadd.s f17, f13, f28, f16, dyn # perform operation
fmadd.s f17, f13, f28, f16, rdn # perform operation
fmadd.s f17, f13, f28, f16, rmm # perform operation
fmadd.s f17, f13, f28, f16, rne # perform operation
fmadd.s f17, f13, f28, f16, rtz # perform operation
fmadd.s f17, f13, f28, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f28, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f28, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3f800000)
li x25, 0x8a0598369bdd7e38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0xd7cfcbdd68e75eba # load x3 with value 0xd7cfcbdd68e75eba
sw x3, 0(x2) # store 0xd7cfcbdd68e75eba in memory
flw f17, 0(x2) # load 0xd7cfcbdd68e75eba from memory into f17
fmadd.s f25, f23, f7, f17, dyn # perform operation
fmadd.s f25, f23, f7, f17, rdn # perform operation
fmadd.s f25, f23, f7, f17, rmm # perform operation
fmadd.s f25, f23, f7, f17, rne # perform operation
fmadd.s f25, f23, f7, f17, rtz # perform operation
fmadd.s f25, f23, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbf800000)
li x25, 0x3e876de34d0e7f80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0xa16af3b160b807ca # load x3 with value 0xa16af3b160b807ca
sw x3, 0(x2) # store 0xa16af3b160b807ca in memory
flw f31, 0(x2) # load 0xa16af3b160b807ca from memory into f31
fmadd.s f25, f23, f2, f31, dyn # perform operation
fmadd.s f25, f23, f2, f31, rdn # perform operation
fmadd.s f25, f23, f2, f31, rmm # perform operation
fmadd.s f25, f23, f2, f31, rne # perform operation
fmadd.s f25, f23, f2, f31, rtz # perform operation
fmadd.s f25, f23, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f23, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f23, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x3fc00000)
li x25, 0x6337316e7f7e06f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0x4f64a4825159142a # load x3 with value 0x4f64a4825159142a
sw x3, 0(x2) # store 0x4f64a4825159142a in memory
flw f17, 0(x2) # load 0x4f64a4825159142a from memory into f17
fmadd.s f25, f1, f11, f17, dyn # perform operation
fmadd.s f25, f1, f11, f17, rdn # perform operation
fmadd.s f25, f1, f11, f17, rmm # perform operation
fmadd.s f25, f1, f11, f17, rne # perform operation
fmadd.s f25, f1, f11, f17, rtz # perform operation
fmadd.s f25, f1, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f11, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xbfc00000)
li x15, 0xecb032e0bb1a49cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
li x3, 0x78d239554090ee67 # load x3 with value 0x78d239554090ee67
sw x3, 0(x2) # store 0x78d239554090ee67 in memory
flw f18, 0(x2) # load 0x78d239554090ee67 from memory into f18
fmadd.s f15, f24, f25, f18, dyn # perform operation
fmadd.s f15, f24, f25, f18, rdn # perform operation
fmadd.s f15, f24, f25, f18, rmm # perform operation
fmadd.s f15, f24, f25, f18, rne # perform operation
fmadd.s f15, f24, f25, f18, rtz # perform operation
fmadd.s f15, f24, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f24, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f24, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f24, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f24, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f24, f25, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x40000000)
li x22, 0xf6ab1bd68838d94a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
li x3, 0xe510ca3ece4e289e # load x3 with value 0xe510ca3ece4e289e
sw x3, 0(x2) # store 0xe510ca3ece4e289e in memory
flw f29, 0(x2) # load 0xe510ca3ece4e289e from memory into f29
fmadd.s f22, f24, f27, f29, dyn # perform operation
fmadd.s f22, f24, f27, f29, rdn # perform operation
fmadd.s f22, f24, f27, f29, rmm # perform operation
fmadd.s f22, f24, f27, f29, rne # perform operation
fmadd.s f22, f24, f27, f29, rtz # perform operation
fmadd.s f22, f24, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xc0000000)
li x23, 0xf8062437bbef650c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0xfd525b13158cfa06 # load x3 with value 0xfd525b13158cfa06
sw x3, 0(x2) # store 0xfd525b13158cfa06 in memory
flw f25, 0(x2) # load 0xfd525b13158cfa06 from memory into f25
fmadd.s f23, f13, f9, f25, dyn # perform operation
fmadd.s f23, f13, f9, f25, rdn # perform operation
fmadd.s f23, f13, f9, f25, rmm # perform operation
fmadd.s f23, f13, f9, f25, rne # perform operation
fmadd.s f23, f13, f9, f25, rtz # perform operation
fmadd.s f23, f13, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f13, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f13, f9, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x800000)
li x30, 0x1d14156178424401 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
li x3, 0x5eeb601492251ce9 # load x3 with value 0x5eeb601492251ce9
sw x3, 0(x2) # store 0x5eeb601492251ce9 in memory
flw f20, 0(x2) # load 0x5eeb601492251ce9 from memory into f20
fmadd.s f30, f2, f19, f20, dyn # perform operation
fmadd.s f30, f2, f19, f20, rdn # perform operation
fmadd.s f30, f2, f19, f20, rmm # perform operation
fmadd.s f30, f2, f19, f20, rne # perform operation
fmadd.s f30, f2, f19, f20, rtz # perform operation
fmadd.s f30, f2, f19, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f2, f19, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f2, f19, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f2, f19, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f2, f19, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f2, f19, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80800000)
li x29, 0x2b6541dbd827b5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xb54187f73a1f92f9 # load x3 with value 0xb54187f73a1f92f9
sw x3, 0(x2) # store 0xb54187f73a1f92f9 in memory
flw f24, 0(x2) # load 0xb54187f73a1f92f9 from memory into f24
fmadd.s f29, f13, f2, f24, dyn # perform operation
fmadd.s f29, f13, f2, f24, rdn # perform operation
fmadd.s f29, f13, f2, f24, rmm # perform operation
fmadd.s f29, f13, f2, f24, rne # perform operation
fmadd.s f29, f13, f2, f24, rtz # perform operation
fmadd.s f29, f13, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f13, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f13, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f13, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f13, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f13, f2, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f7fffff)
li x30, 0x3b420e1fdefe824d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f18, 0(x2) # load 0x7f7fffff from memory into f18
li x3, 0xcdbb4a8d185f4ed4 # load x3 with value 0xcdbb4a8d185f4ed4
sw x3, 0(x2) # store 0xcdbb4a8d185f4ed4 in memory
flw f22, 0(x2) # load 0xcdbb4a8d185f4ed4 from memory into f22
fmadd.s f30, f8, f18, f22, dyn # perform operation
fmadd.s f30, f8, f18, f22, rdn # perform operation
fmadd.s f30, f8, f18, f22, rmm # perform operation
fmadd.s f30, f8, f18, f22, rne # perform operation
fmadd.s f30, f8, f18, f22, rtz # perform operation
fmadd.s f30, f8, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f8, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f8, f18, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff7fffff)
li x4, 0x1ee6ad9c0cfa3c78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f22, 0(x2) # load 0xff7fffff from memory into f22
li x3, 0x48a6c6aa16f27286 # load x3 with value 0x48a6c6aa16f27286
sw x3, 0(x2) # store 0x48a6c6aa16f27286 in memory
flw f13, 0(x2) # load 0x48a6c6aa16f27286 from memory into f13
fmadd.s f4, f26, f22, f13, dyn # perform operation
fmadd.s f4, f26, f22, f13, rdn # perform operation
fmadd.s f4, f26, f22, f13, rmm # perform operation
fmadd.s f4, f26, f22, f13, rne # perform operation
fmadd.s f4, f26, f22, f13, rtz # perform operation
fmadd.s f4, f26, f22, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f26, f22, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f26, f22, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffff)
li x12, 0xb47e24eb55387efc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xa0bf50ed305a98d9 # load x3 with value 0xa0bf50ed305a98d9
sw x3, 0(x2) # store 0xa0bf50ed305a98d9 in memory
flw f18, 0(x2) # load 0xa0bf50ed305a98d9 from memory into f18
fmadd.s f12, f26, f8, f18, dyn # perform operation
fmadd.s f12, f26, f8, f18, rdn # perform operation
fmadd.s f12, f26, f8, f18, rmm # perform operation
fmadd.s f12, f26, f8, f18, rne # perform operation
fmadd.s f12, f26, f8, f18, rtz # perform operation
fmadd.s f12, f26, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f8, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x807fffff)
li x29, 0xa10c1941106e91f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x1ac3e8950a6c328e # load x3 with value 0x1ac3e8950a6c328e
sw x3, 0(x2) # store 0x1ac3e8950a6c328e in memory
flw f23, 0(x2) # load 0x1ac3e8950a6c328e from memory into f23
fmadd.s f29, f6, f7, f23, dyn # perform operation
fmadd.s f29, f6, f7, f23, rdn # perform operation
fmadd.s f29, f6, f7, f23, rmm # perform operation
fmadd.s f29, f6, f7, f23, rne # perform operation
fmadd.s f29, f6, f7, f23, rtz # perform operation
fmadd.s f29, f6, f7, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f7, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f7, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x400000)
li x18, 0x815607ed4d85b9f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x71e65cb699348f8a # load x3 with value 0x71e65cb699348f8a
sw x3, 0(x2) # store 0x71e65cb699348f8a in memory
flw f4, 0(x2) # load 0x71e65cb699348f8a from memory into f4
fmadd.s f18, f8, f30, f4, dyn # perform operation
fmadd.s f18, f8, f30, f4, rdn # perform operation
fmadd.s f18, f8, f30, f4, rmm # perform operation
fmadd.s f18, f8, f30, f4, rne # perform operation
fmadd.s f18, f8, f30, f4, rtz # perform operation
fmadd.s f18, f8, f30, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f30, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f30, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f30, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f30, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f30, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80400000)
li x4, 0xce4b2733b6dd1742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0x630db4272d1eb126 # load x3 with value 0x630db4272d1eb126
sw x3, 0(x2) # store 0x630db4272d1eb126 in memory
flw f10, 0(x2) # load 0x630db4272d1eb126 from memory into f10
fmadd.s f4, f15, f17, f10, dyn # perform operation
fmadd.s f4, f15, f17, f10, rdn # perform operation
fmadd.s f4, f15, f17, f10, rmm # perform operation
fmadd.s f4, f15, f17, f10, rne # perform operation
fmadd.s f4, f15, f17, f10, rtz # perform operation
fmadd.s f4, f15, f17, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f17, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f17, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x1)
li x2, 0x7b64f826d62438df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x1b3f6e6c04203217 # load x3 with value 0x1b3f6e6c04203217
sw x3, 0(x2) # store 0x1b3f6e6c04203217 in memory
flw f21, 0(x2) # load 0x1b3f6e6c04203217 from memory into f21
fmadd.s f2, f29, f25, f21, dyn # perform operation
fmadd.s f2, f29, f25, f21, rdn # perform operation
fmadd.s f2, f29, f25, f21, rmm # perform operation
fmadd.s f2, f29, f25, f21, rne # perform operation
fmadd.s f2, f29, f25, f21, rtz # perform operation
fmadd.s f2, f29, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f29, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f29, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f29, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f29, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f29, f25, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x80000001)
li x6, 0x907169c502a4810b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xf3febc562a9d039b # load x3 with value 0xf3febc562a9d039b
sw x3, 0(x2) # store 0xf3febc562a9d039b in memory
flw f17, 0(x2) # load 0xf3febc562a9d039b from memory into f17
fmadd.s f6, f29, f22, f17, dyn # perform operation
fmadd.s f6, f29, f22, f17, rdn # perform operation
fmadd.s f6, f29, f22, f17, rmm # perform operation
fmadd.s f6, f29, f22, f17, rne # perform operation
fmadd.s f6, f29, f22, f17, rtz # perform operation
fmadd.s f6, f29, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f29, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f29, f22, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800000)
li x12, 0x197a0cb21c269b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0xbed40c0dccd5dd47 # load x3 with value 0xbed40c0dccd5dd47
sw x3, 0(x2) # store 0xbed40c0dccd5dd47 in memory
flw f9, 0(x2) # load 0xbed40c0dccd5dd47 from memory into f9
fmadd.s f12, f8, f14, f9, dyn # perform operation
fmadd.s f12, f8, f14, f9, rdn # perform operation
fmadd.s f12, f8, f14, f9, rmm # perform operation
fmadd.s f12, f8, f14, f9, rne # perform operation
fmadd.s f12, f8, f14, f9, rtz # perform operation
fmadd.s f12, f8, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f8, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f8, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0xff800000)
li x22, 0x8f47d3970728fd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0xa00eccbc9245ddb7 # load x3 with value 0xa00eccbc9245ddb7
sw x3, 0(x2) # store 0xa00eccbc9245ddb7 in memory
flw f8, 0(x2) # load 0xa00eccbc9245ddb7 from memory into f8
fmadd.s f22, f25, f27, f8, dyn # perform operation
fmadd.s f22, f25, f27, f8, rdn # perform operation
fmadd.s f22, f25, f27, f8, rmm # perform operation
fmadd.s f22, f25, f27, f8, rne # perform operation
fmadd.s f22, f25, f27, f8, rtz # perform operation
fmadd.s f22, f25, f27, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f25, f27, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f25, f27, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fc00000)
li x8, 0xc7f55851e194dd31 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x6967ae67b0e9f3a8 # load x3 with value 0x6967ae67b0e9f3a8
sw x3, 0(x2) # store 0x6967ae67b0e9f3a8 in memory
flw f4, 0(x2) # load 0x6967ae67b0e9f3a8 from memory into f4
fmadd.s f8, f30, f19, f4, dyn # perform operation
fmadd.s f8, f30, f19, f4, rdn # perform operation
fmadd.s f8, f30, f19, f4, rmm # perform operation
fmadd.s f8, f30, f19, f4, rne # perform operation
fmadd.s f8, f30, f19, f4, rtz # perform operation
fmadd.s f8, f30, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f30, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f30, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fffffff)
li x31, 0xbcf34ac4abc77285 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0x10ee136753b41617 # load x3 with value 0x10ee136753b41617
sw x3, 0(x2) # store 0x10ee136753b41617 in memory
flw f4, 0(x2) # load 0x10ee136753b41617 from memory into f4
fmadd.s f31, f5, f2, f4, dyn # perform operation
fmadd.s f31, f5, f2, f4, rdn # perform operation
fmadd.s f31, f5, f2, f4, rmm # perform operation
fmadd.s f31, f5, f2, f4, rne # perform operation
fmadd.s f31, f5, f2, f4, rtz # perform operation
fmadd.s f31, f5, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f2, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7f800001)
li x29, 0x192a4bcf60a77ac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x4c7b95abd6651fbb # load x3 with value 0x4c7b95abd6651fbb
sw x3, 0(x2) # store 0x4c7b95abd6651fbb in memory
flw f2, 0(x2) # load 0x4c7b95abd6651fbb from memory into f2
fmadd.s f29, f11, f25, f2, dyn # perform operation
fmadd.s f29, f11, f25, f2, rdn # perform operation
fmadd.s f29, f11, f25, f2, rmm # perform operation
fmadd.s f29, f11, f25, f2, rne # perform operation
fmadd.s f29, f11, f25, f2, rtz # perform operation
fmadd.s f29, f11, f25, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f25, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f25, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f25, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f25, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f25, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7fbfffff)
li x13, 0x400a430ee9ce311c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
li x3, 0x557e4de3e5c0a3f7 # load x3 with value 0x557e4de3e5c0a3f7
sw x3, 0(x2) # store 0x557e4de3e5c0a3f7 in memory
flw f17, 0(x2) # load 0x557e4de3e5c0a3f7 from memory into f17
fmadd.s f13, f22, f10, f17, dyn # perform operation
fmadd.s f13, f22, f10, f17, rdn # perform operation
fmadd.s f13, f22, f10, f17, rmm # perform operation
fmadd.s f13, f22, f10, f17, rne # perform operation
fmadd.s f13, f22, f10, f17, rtz # perform operation
fmadd.s f13, f22, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f22, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f22, f10, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x7ef8654f)
li x14, 0x94d3aa0f78b0836d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f21, 0(x2) # load 0x80400000 from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x1ee134b6715c0818 # load x3 with value 0x1ee134b6715c0818
sw x3, 0(x2) # store 0x1ee134b6715c0818 in memory
flw f24, 0(x2) # load 0x1ee134b6715c0818 from memory into f24
fmadd.s f14, f21, f22, f24, dyn # perform operation
fmadd.s f14, f21, f22, f24, rdn # perform operation
fmadd.s f14, f21, f22, f24, rmm # perform operation
fmadd.s f14, f21, f22, f24, rne # perform operation
fmadd.s f14, f21, f22, f24, rtz # perform operation
fmadd.s f14, f21, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f21, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f21, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80400000 fs2 = 0x813d9ab0)
li x22, 0x7c7ece6abc1b18ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xbf92ea442631f46a # load x3 with value 0xbf92ea442631f46a
sw x3, 0(x2) # store 0xbf92ea442631f46a in memory
flw f31, 0(x2) # load 0xbf92ea442631f46a from memory into f31
fmadd.s f22, f7, f19, f31, dyn # perform operation
fmadd.s f22, f7, f19, f31, rdn # perform operation
fmadd.s f22, f7, f19, f31, rmm # perform operation
fmadd.s f22, f7, f19, f31, rne # perform operation
fmadd.s f22, f7, f19, f31, rtz # perform operation
fmadd.s f22, f7, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f7, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f7, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f7, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f7, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f7, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x0)
li x6, 0x088131a5bc164367 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f29, 0(x2) # load 0x00000000 from memory into f29
li x3, 0xf5e5312280db49cd # load x3 with value 0xf5e5312280db49cd
sw x3, 0(x2) # store 0xf5e5312280db49cd in memory
flw f19, 0(x2) # load 0xf5e5312280db49cd from memory into f19
fmadd.s f6, f15, f29, f19, dyn # perform operation
fmadd.s f6, f15, f29, f19, rdn # perform operation
fmadd.s f6, f15, f29, f19, rmm # perform operation
fmadd.s f6, f15, f29, f19, rne # perform operation
fmadd.s f6, f15, f29, f19, rtz # perform operation
fmadd.s f6, f15, f29, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f29, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f29, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000000)
li x24, 0xf4ae73a284da1ffc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xa2fbaef753c65cf6 # load x3 with value 0xa2fbaef753c65cf6
sw x3, 0(x2) # store 0xa2fbaef753c65cf6 in memory
flw f15, 0(x2) # load 0xa2fbaef753c65cf6 from memory into f15
fmadd.s f24, f1, f17, f15, dyn # perform operation
fmadd.s f24, f1, f17, f15, rdn # perform operation
fmadd.s f24, f1, f17, f15, rmm # perform operation
fmadd.s f24, f1, f17, f15, rne # perform operation
fmadd.s f24, f1, f17, f15, rtz # perform operation
fmadd.s f24, f1, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f1, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f1, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f1, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f1, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f1, f17, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3f800000)
li x13, 0x95ad7bdb86a163bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0x883100525ebc3ad9 # load x3 with value 0x883100525ebc3ad9
sw x3, 0(x2) # store 0x883100525ebc3ad9 in memory
flw f26, 0(x2) # load 0x883100525ebc3ad9 from memory into f26
fmadd.s f13, f7, f4, f26, dyn # perform operation
fmadd.s f13, f7, f4, f26, rdn # perform operation
fmadd.s f13, f7, f4, f26, rmm # perform operation
fmadd.s f13, f7, f4, f26, rne # perform operation
fmadd.s f13, f7, f4, f26, rtz # perform operation
fmadd.s f13, f7, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f4, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbf800000)
li x8, 0x55505de900d28d74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0xc068ff6f7e5922dc # load x3 with value 0xc068ff6f7e5922dc
sw x3, 0(x2) # store 0xc068ff6f7e5922dc in memory
flw f20, 0(x2) # load 0xc068ff6f7e5922dc from memory into f20
fmadd.s f8, f6, f7, f20, dyn # perform operation
fmadd.s f8, f6, f7, f20, rdn # perform operation
fmadd.s f8, f6, f7, f20, rmm # perform operation
fmadd.s f8, f6, f7, f20, rne # perform operation
fmadd.s f8, f6, f7, f20, rtz # perform operation
fmadd.s f8, f6, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f6, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f6, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x3fc00000)
li x28, 0x32b0efe2e5f7769f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x22fa9e1d9af9b69d # load x3 with value 0x22fa9e1d9af9b69d
sw x3, 0(x2) # store 0x22fa9e1d9af9b69d in memory
flw f24, 0(x2) # load 0x22fa9e1d9af9b69d from memory into f24
fmadd.s f28, f30, f17, f24, dyn # perform operation
fmadd.s f28, f30, f17, f24, rdn # perform operation
fmadd.s f28, f30, f17, f24, rmm # perform operation
fmadd.s f28, f30, f17, f24, rne # perform operation
fmadd.s f28, f30, f17, f24, rtz # perform operation
fmadd.s f28, f30, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f30, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f30, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f30, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f30, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f30, f17, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xbfc00000)
li x26, 0xc92b09b425d5e614 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0x59e60e95c65ef28b # load x3 with value 0x59e60e95c65ef28b
sw x3, 0(x2) # store 0x59e60e95c65ef28b in memory
flw f1, 0(x2) # load 0x59e60e95c65ef28b from memory into f1
fmadd.s f26, f25, f17, f1, dyn # perform operation
fmadd.s f26, f25, f17, f1, rdn # perform operation
fmadd.s f26, f25, f17, f1, rmm # perform operation
fmadd.s f26, f25, f17, f1, rne # perform operation
fmadd.s f26, f25, f17, f1, rtz # perform operation
fmadd.s f26, f25, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x40000000)
li x13, 0x03174cb6ccf2df44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x3386a98ce2fa085 # load x3 with value 0x3386a98ce2fa085
sw x3, 0(x2) # store 0x3386a98ce2fa085 in memory
flw f27, 0(x2) # load 0x3386a98ce2fa085 from memory into f27
fmadd.s f13, f31, f24, f27, dyn # perform operation
fmadd.s f13, f31, f24, f27, rdn # perform operation
fmadd.s f13, f31, f24, f27, rmm # perform operation
fmadd.s f13, f31, f24, f27, rne # perform operation
fmadd.s f13, f31, f24, f27, rtz # perform operation
fmadd.s f13, f31, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f31, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f31, f24, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xc0000000)
li x14, 0x9508851e06fbff2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xc585af54182f7899 # load x3 with value 0xc585af54182f7899
sw x3, 0(x2) # store 0xc585af54182f7899 in memory
flw f2, 0(x2) # load 0xc585af54182f7899 from memory into f2
fmadd.s f14, f1, f7, f2, dyn # perform operation
fmadd.s f14, f1, f7, f2, rdn # perform operation
fmadd.s f14, f1, f7, f2, rmm # perform operation
fmadd.s f14, f1, f7, f2, rne # perform operation
fmadd.s f14, f1, f7, f2, rtz # perform operation
fmadd.s f14, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x800000)
li x18, 0x377fdededf0c7b3e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0x6a0bcfe3bb233093 # load x3 with value 0x6a0bcfe3bb233093
sw x3, 0(x2) # store 0x6a0bcfe3bb233093 in memory
flw f3, 0(x2) # load 0x6a0bcfe3bb233093 from memory into f3
fmadd.s f18, f23, f25, f3, dyn # perform operation
fmadd.s f18, f23, f25, f3, rdn # perform operation
fmadd.s f18, f23, f25, f3, rmm # perform operation
fmadd.s f18, f23, f25, f3, rne # perform operation
fmadd.s f18, f23, f25, f3, rtz # perform operation
fmadd.s f18, f23, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f25, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80800000)
li x27, 0x51c0ef4bf85b1067 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0x95c8011568c0721a # load x3 with value 0x95c8011568c0721a
sw x3, 0(x2) # store 0x95c8011568c0721a in memory
flw f8, 0(x2) # load 0x95c8011568c0721a from memory into f8
fmadd.s f27, f26, f2, f8, dyn # perform operation
fmadd.s f27, f26, f2, f8, rdn # perform operation
fmadd.s f27, f26, f2, f8, rmm # perform operation
fmadd.s f27, f26, f2, f8, rne # perform operation
fmadd.s f27, f26, f2, f8, rtz # perform operation
fmadd.s f27, f26, f2, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f26, f2, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f26, f2, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f26, f2, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f26, f2, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f26, f2, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f7fffff)
li x29, 0x66925a47dcfe2bee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x6554854e444f5e04 # load x3 with value 0x6554854e444f5e04
sw x3, 0(x2) # store 0x6554854e444f5e04 in memory
flw f15, 0(x2) # load 0x6554854e444f5e04 from memory into f15
fmadd.s f29, f10, f5, f15, dyn # perform operation
fmadd.s f29, f10, f5, f15, rdn # perform operation
fmadd.s f29, f10, f5, f15, rmm # perform operation
fmadd.s f29, f10, f5, f15, rne # perform operation
fmadd.s f29, f10, f5, f15, rtz # perform operation
fmadd.s f29, f10, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f10, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f10, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f10, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f10, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f10, f5, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff7fffff)
li x30, 0xf5028365d72b8915 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x8fb004f80078ac2f # load x3 with value 0x8fb004f80078ac2f
sw x3, 0(x2) # store 0x8fb004f80078ac2f in memory
flw f1, 0(x2) # load 0x8fb004f80078ac2f from memory into f1
fmadd.s f30, f31, f17, f1, dyn # perform operation
fmadd.s f30, f31, f17, f1, rdn # perform operation
fmadd.s f30, f31, f17, f1, rmm # perform operation
fmadd.s f30, f31, f17, f1, rne # perform operation
fmadd.s f30, f31, f17, f1, rtz # perform operation
fmadd.s f30, f31, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f31, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f31, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffff)
li x16, 0x0e1a55a3a4724fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0xd08b7ba005d75e28 # load x3 with value 0xd08b7ba005d75e28
sw x3, 0(x2) # store 0xd08b7ba005d75e28 in memory
flw f29, 0(x2) # load 0xd08b7ba005d75e28 from memory into f29
fmadd.s f16, f25, f26, f29, dyn # perform operation
fmadd.s f16, f25, f26, f29, rdn # perform operation
fmadd.s f16, f25, f26, f29, rmm # perform operation
fmadd.s f16, f25, f26, f29, rne # perform operation
fmadd.s f16, f25, f26, f29, rtz # perform operation
fmadd.s f16, f25, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f25, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f25, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x807fffff)
li x15, 0x6e9a1d8859037dea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f27, 0(x2) # load 0x00000001 from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0xd3c50a5eeeae8abf # load x3 with value 0xd3c50a5eeeae8abf
sw x3, 0(x2) # store 0xd3c50a5eeeae8abf in memory
flw f23, 0(x2) # load 0xd3c50a5eeeae8abf from memory into f23
fmadd.s f15, f27, f12, f23, dyn # perform operation
fmadd.s f15, f27, f12, f23, rdn # perform operation
fmadd.s f15, f27, f12, f23, rmm # perform operation
fmadd.s f15, f27, f12, f23, rne # perform operation
fmadd.s f15, f27, f12, f23, rtz # perform operation
fmadd.s f15, f27, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x400000)
li x9, 0xfc9fb619aba49d58 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f13, 0(x2) # load 0x00400000 from memory into f13
li x3, 0xe1c0f6a0359efbc3 # load x3 with value 0xe1c0f6a0359efbc3
sw x3, 0(x2) # store 0xe1c0f6a0359efbc3 in memory
flw f18, 0(x2) # load 0xe1c0f6a0359efbc3 from memory into f18
fmadd.s f9, f20, f13, f18, dyn # perform operation
fmadd.s f9, f20, f13, f18, rdn # perform operation
fmadd.s f9, f20, f13, f18, rmm # perform operation
fmadd.s f9, f20, f13, f18, rne # perform operation
fmadd.s f9, f20, f13, f18, rtz # perform operation
fmadd.s f9, f20, f13, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f13, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f13, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80400000)
li x27, 0x031d9f1efec9df77 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x41e755fbad0bab0e # load x3 with value 0x41e755fbad0bab0e
sw x3, 0(x2) # store 0x41e755fbad0bab0e in memory
flw f3, 0(x2) # load 0x41e755fbad0bab0e from memory into f3
fmadd.s f27, f20, f24, f3, dyn # perform operation
fmadd.s f27, f20, f24, f3, rdn # perform operation
fmadd.s f27, f20, f24, f3, rmm # perform operation
fmadd.s f27, f20, f24, f3, rne # perform operation
fmadd.s f27, f20, f24, f3, rtz # perform operation
fmadd.s f27, f20, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x1)
li x21, 0x27efadff26824a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f29, 0(x2) # load 0x00000001 from memory into f29
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xfda61055abf77bfa # load x3 with value 0xfda61055abf77bfa
sw x3, 0(x2) # store 0xfda61055abf77bfa in memory
flw f14, 0(x2) # load 0xfda61055abf77bfa from memory into f14
fmadd.s f21, f29, f25, f14, dyn # perform operation
fmadd.s f21, f29, f25, f14, rdn # perform operation
fmadd.s f21, f29, f25, f14, rmm # perform operation
fmadd.s f21, f29, f25, f14, rne # perform operation
fmadd.s f21, f29, f25, f14, rtz # perform operation
fmadd.s f21, f29, f25, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f25, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f25, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f25, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f25, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f25, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x80000001)
li x18, 0x53074fdcafbad697 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x41e02be431d285b0 # load x3 with value 0x41e02be431d285b0
sw x3, 0(x2) # store 0x41e02be431d285b0 in memory
flw f29, 0(x2) # load 0x41e02be431d285b0 from memory into f29
fmadd.s f18, f28, f10, f29, dyn # perform operation
fmadd.s f18, f28, f10, f29, rdn # perform operation
fmadd.s f18, f28, f10, f29, rmm # perform operation
fmadd.s f18, f28, f10, f29, rne # perform operation
fmadd.s f18, f28, f10, f29, rtz # perform operation
fmadd.s f18, f28, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800000)
li x2, 0xc2338c91c2a341fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0xe073fcd387fd14a2 # load x3 with value 0xe073fcd387fd14a2
sw x3, 0(x2) # store 0xe073fcd387fd14a2 in memory
flw f13, 0(x2) # load 0xe073fcd387fd14a2 from memory into f13
fmadd.s f2, f20, f27, f13, dyn # perform operation
fmadd.s f2, f20, f27, f13, rdn # perform operation
fmadd.s f2, f20, f27, f13, rmm # perform operation
fmadd.s f2, f20, f27, f13, rne # perform operation
fmadd.s f2, f20, f27, f13, rtz # perform operation
fmadd.s f2, f20, f27, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f27, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f27, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0xff800000)
li x28, 0x173e8cb36c22e753 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x199ce025fbbd1d46 # load x3 with value 0x199ce025fbbd1d46
sw x3, 0(x2) # store 0x199ce025fbbd1d46 in memory
flw f9, 0(x2) # load 0x199ce025fbbd1d46 from memory into f9
fmadd.s f28, f8, f15, f9, dyn # perform operation
fmadd.s f28, f8, f15, f9, rdn # perform operation
fmadd.s f28, f8, f15, f9, rmm # perform operation
fmadd.s f28, f8, f15, f9, rne # perform operation
fmadd.s f28, f8, f15, f9, rtz # perform operation
fmadd.s f28, f8, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f8, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f8, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f8, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f8, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f8, f15, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fc00000)
li x15, 0x19250298f5759249 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xd498144b23009c2d # load x3 with value 0xd498144b23009c2d
sw x3, 0(x2) # store 0xd498144b23009c2d in memory
flw f13, 0(x2) # load 0xd498144b23009c2d from memory into f13
fmadd.s f15, f23, f19, f13, dyn # perform operation
fmadd.s f15, f23, f19, f13, rdn # perform operation
fmadd.s f15, f23, f19, f13, rmm # perform operation
fmadd.s f15, f23, f19, f13, rne # perform operation
fmadd.s f15, f23, f19, f13, rtz # perform operation
fmadd.s f15, f23, f19, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f19, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f19, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fffffff)
li x25, 0xe4bad1068c3c2e6f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f10, 0(x2) # load 0x00000001 from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x3f8954a8bcf91858 # load x3 with value 0x3f8954a8bcf91858
sw x3, 0(x2) # store 0x3f8954a8bcf91858 in memory
flw f1, 0(x2) # load 0x3f8954a8bcf91858 from memory into f1
fmadd.s f25, f10, f9, f1, dyn # perform operation
fmadd.s f25, f10, f9, f1, rdn # perform operation
fmadd.s f25, f10, f9, f1, rmm # perform operation
fmadd.s f25, f10, f9, f1, rne # perform operation
fmadd.s f25, f10, f9, f1, rtz # perform operation
fmadd.s f25, f10, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7f800001)
li x7, 0xac644fe375255570 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xfd7fb16db9e218b2 # load x3 with value 0xfd7fb16db9e218b2
sw x3, 0(x2) # store 0xfd7fb16db9e218b2 in memory
flw f25, 0(x2) # load 0xfd7fb16db9e218b2 from memory into f25
fmadd.s f7, f11, f13, f25, dyn # perform operation
fmadd.s f7, f11, f13, f25, rdn # perform operation
fmadd.s f7, f11, f13, f25, rmm # perform operation
fmadd.s f7, f11, f13, f25, rne # perform operation
fmadd.s f7, f11, f13, f25, rtz # perform operation
fmadd.s f7, f11, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7fbfffff)
li x23, 0xf8c389bc4ec24b4c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x3866296e8009be3e # load x3 with value 0x3866296e8009be3e
sw x3, 0(x2) # store 0x3866296e8009be3e in memory
flw f27, 0(x2) # load 0x3866296e8009be3e from memory into f27
fmadd.s f23, f25, f21, f27, dyn # perform operation
fmadd.s f23, f25, f21, f27, rdn # perform operation
fmadd.s f23, f25, f21, f27, rmm # perform operation
fmadd.s f23, f25, f21, f27, rne # perform operation
fmadd.s f23, f25, f21, f27, rtz # perform operation
fmadd.s f23, f25, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f25, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f25, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f25, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f25, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f25, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x7ef8654f)
li x7, 0x11e362f62f9e2804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xb87222f68c1711b # load x3 with value 0xb87222f68c1711b
sw x3, 0(x2) # store 0xb87222f68c1711b in memory
flw f15, 0(x2) # load 0xb87222f68c1711b from memory into f15
fmadd.s f7, f28, f22, f15, dyn # perform operation
fmadd.s f7, f28, f22, f15, rdn # perform operation
fmadd.s f7, f28, f22, f15, rmm # perform operation
fmadd.s f7, f28, f22, f15, rne # perform operation
fmadd.s f7, f28, f22, f15, rtz # perform operation
fmadd.s f7, f28, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f28, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f28, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x1 fs2 = 0x813d9ab0)
li x3, 0xf43b219bfaf10165 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x44cd5de7877d983 # load x3 with value 0x44cd5de7877d983
sw x3, 0(x2) # store 0x44cd5de7877d983 in memory
flw f4, 0(x2) # load 0x44cd5de7877d983 from memory into f4
fmadd.s f3, f15, f19, f4, dyn # perform operation
fmadd.s f3, f15, f19, f4, rdn # perform operation
fmadd.s f3, f15, f19, f4, rmm # perform operation
fmadd.s f3, f15, f19, f4, rne # perform operation
fmadd.s f3, f15, f19, f4, rtz # perform operation
fmadd.s f3, f15, f19, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f15, f19, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f15, f19, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f15, f19, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f15, f19, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f15, f19, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x0)
li x4, 0x2d4b6a6d126ef6e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0xe1c34db5f636db8d # load x3 with value 0xe1c34db5f636db8d
sw x3, 0(x2) # store 0xe1c34db5f636db8d in memory
flw f17, 0(x2) # load 0xe1c34db5f636db8d from memory into f17
fmadd.s f4, f19, f27, f17, dyn # perform operation
fmadd.s f4, f19, f27, f17, rdn # perform operation
fmadd.s f4, f19, f27, f17, rmm # perform operation
fmadd.s f4, f19, f27, f17, rne # perform operation
fmadd.s f4, f19, f27, f17, rtz # perform operation
fmadd.s f4, f19, f27, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f19, f27, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f19, f27, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000000)
li x21, 0x788b1cb1ccc6a126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x8ec3c6353a5b1a3d # load x3 with value 0x8ec3c6353a5b1a3d
sw x3, 0(x2) # store 0x8ec3c6353a5b1a3d in memory
flw f29, 0(x2) # load 0x8ec3c6353a5b1a3d from memory into f29
fmadd.s f21, f30, f27, f29, dyn # perform operation
fmadd.s f21, f30, f27, f29, rdn # perform operation
fmadd.s f21, f30, f27, f29, rmm # perform operation
fmadd.s f21, f30, f27, f29, rne # perform operation
fmadd.s f21, f30, f27, f29, rtz # perform operation
fmadd.s f21, f30, f27, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f30, f27, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f30, f27, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3f800000)
li x5, 0x92875ef55771db7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f24, 0(x2) # load 0x3f800000 from memory into f24
li x3, 0x855dab972dd02c0c # load x3 with value 0x855dab972dd02c0c
sw x3, 0(x2) # store 0x855dab972dd02c0c in memory
flw f22, 0(x2) # load 0x855dab972dd02c0c from memory into f22
fmadd.s f5, f3, f24, f22, dyn # perform operation
fmadd.s f5, f3, f24, f22, rdn # perform operation
fmadd.s f5, f3, f24, f22, rmm # perform operation
fmadd.s f5, f3, f24, f22, rne # perform operation
fmadd.s f5, f3, f24, f22, rtz # perform operation
fmadd.s f5, f3, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbf800000)
li x9, 0x9fa96426df4f82eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xca84315822dd8205 # load x3 with value 0xca84315822dd8205
sw x3, 0(x2) # store 0xca84315822dd8205 in memory
flw f13, 0(x2) # load 0xca84315822dd8205 from memory into f13
fmadd.s f9, f27, f6, f13, dyn # perform operation
fmadd.s f9, f27, f6, f13, rdn # perform operation
fmadd.s f9, f27, f6, f13, rmm # perform operation
fmadd.s f9, f27, f6, f13, rne # perform operation
fmadd.s f9, f27, f6, f13, rtz # perform operation
fmadd.s f9, f27, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f6, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x3fc00000)
li x16, 0x2f57fc38ce57d421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x1d430e7d8e4be1c # load x3 with value 0x1d430e7d8e4be1c
sw x3, 0(x2) # store 0x1d430e7d8e4be1c in memory
flw f6, 0(x2) # load 0x1d430e7d8e4be1c from memory into f6
fmadd.s f16, f26, f3, f6, dyn # perform operation
fmadd.s f16, f26, f3, f6, rdn # perform operation
fmadd.s f16, f26, f3, f6, rmm # perform operation
fmadd.s f16, f26, f3, f6, rne # perform operation
fmadd.s f16, f26, f3, f6, rtz # perform operation
fmadd.s f16, f26, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f26, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f26, f3, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xbfc00000)
li x14, 0x18e059a0312395cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xdea4da66bdac59b2 # load x3 with value 0xdea4da66bdac59b2
sw x3, 0(x2) # store 0xdea4da66bdac59b2 in memory
flw f2, 0(x2) # load 0xdea4da66bdac59b2 from memory into f2
fmadd.s f14, f1, f7, f2, dyn # perform operation
fmadd.s f14, f1, f7, f2, rdn # perform operation
fmadd.s f14, f1, f7, f2, rmm # perform operation
fmadd.s f14, f1, f7, f2, rne # perform operation
fmadd.s f14, f1, f7, f2, rtz # perform operation
fmadd.s f14, f1, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f1, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f1, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x40000000)
li x24, 0x3bbc0ab098ffb6cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f14, 0(x2) # load 0x40000000 from memory into f14
li x3, 0x1bed518653910ae # load x3 with value 0x1bed518653910ae
sw x3, 0(x2) # store 0x1bed518653910ae in memory
flw f8, 0(x2) # load 0x1bed518653910ae from memory into f8
fmadd.s f24, f27, f14, f8, dyn # perform operation
fmadd.s f24, f27, f14, f8, rdn # perform operation
fmadd.s f24, f27, f14, f8, rmm # perform operation
fmadd.s f24, f27, f14, f8, rne # perform operation
fmadd.s f24, f27, f14, f8, rtz # perform operation
fmadd.s f24, f27, f14, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f14, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f14, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xc0000000)
li x9, 0xa4c18d3136b6e7c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f15, 0(x2) # load 0xc0000000 from memory into f15
li x3, 0x657d4d7586f71d90 # load x3 with value 0x657d4d7586f71d90
sw x3, 0(x2) # store 0x657d4d7586f71d90 in memory
flw f20, 0(x2) # load 0x657d4d7586f71d90 from memory into f20
fmadd.s f9, f29, f15, f20, dyn # perform operation
fmadd.s f9, f29, f15, f20, rdn # perform operation
fmadd.s f9, f29, f15, f20, rmm # perform operation
fmadd.s f9, f29, f15, f20, rne # perform operation
fmadd.s f9, f29, f15, f20, rtz # perform operation
fmadd.s f9, f29, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f29, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x800000)
li x17, 0x6d1f6f6b2f333634 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x451978e205329ef4 # load x3 with value 0x451978e205329ef4
sw x3, 0(x2) # store 0x451978e205329ef4 in memory
flw f10, 0(x2) # load 0x451978e205329ef4 from memory into f10
fmadd.s f17, f23, f13, f10, dyn # perform operation
fmadd.s f17, f23, f13, f10, rdn # perform operation
fmadd.s f17, f23, f13, f10, rmm # perform operation
fmadd.s f17, f23, f13, f10, rne # perform operation
fmadd.s f17, f23, f13, f10, rtz # perform operation
fmadd.s f17, f23, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f23, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f23, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80800000)
li x22, 0x190a4dcf07fcfbdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
li x3, 0xa66dbe6897338489 # load x3 with value 0xa66dbe6897338489
sw x3, 0(x2) # store 0xa66dbe6897338489 in memory
flw f17, 0(x2) # load 0xa66dbe6897338489 from memory into f17
fmadd.s f22, f26, f5, f17, dyn # perform operation
fmadd.s f22, f26, f5, f17, rdn # perform operation
fmadd.s f22, f26, f5, f17, rmm # perform operation
fmadd.s f22, f26, f5, f17, rne # perform operation
fmadd.s f22, f26, f5, f17, rtz # perform operation
fmadd.s f22, f26, f5, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f26, f5, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f26, f5, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f7fffff)
li x25, 0x28effd1085108a04 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
li x3, 0x6895ca0c04f3b577 # load x3 with value 0x6895ca0c04f3b577
sw x3, 0(x2) # store 0x6895ca0c04f3b577 in memory
flw f3, 0(x2) # load 0x6895ca0c04f3b577 from memory into f3
fmadd.s f25, f20, f28, f3, dyn # perform operation
fmadd.s f25, f20, f28, f3, rdn # perform operation
fmadd.s f25, f20, f28, f3, rmm # perform operation
fmadd.s f25, f20, f28, f3, rne # perform operation
fmadd.s f25, f20, f28, f3, rtz # perform operation
fmadd.s f25, f20, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f28, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff7fffff)
li x20, 0xf4d72805e756c575 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0xe8b846e370c7555e # load x3 with value 0xe8b846e370c7555e
sw x3, 0(x2) # store 0xe8b846e370c7555e in memory
flw f19, 0(x2) # load 0xe8b846e370c7555e from memory into f19
fmadd.s f20, f3, f5, f19, dyn # perform operation
fmadd.s f20, f3, f5, f19, rdn # perform operation
fmadd.s f20, f3, f5, f19, rmm # perform operation
fmadd.s f20, f3, f5, f19, rne # perform operation
fmadd.s f20, f3, f5, f19, rtz # perform operation
fmadd.s f20, f3, f5, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f5, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f5, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffff)
li x28, 0x26396b842619f953 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f6, 0(x2) # load 0x007fffff from memory into f6
li x3, 0x8f55f1575d8b0114 # load x3 with value 0x8f55f1575d8b0114
sw x3, 0(x2) # store 0x8f55f1575d8b0114 in memory
flw f20, 0(x2) # load 0x8f55f1575d8b0114 from memory into f20
fmadd.s f28, f15, f6, f20, dyn # perform operation
fmadd.s f28, f15, f6, f20, rdn # perform operation
fmadd.s f28, f15, f6, f20, rmm # perform operation
fmadd.s f28, f15, f6, f20, rne # perform operation
fmadd.s f28, f15, f6, f20, rtz # perform operation
fmadd.s f28, f15, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x807fffff)
li x3, 0x342f4bf835ed6cf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x82a6cdc97e0a13f8 # load x3 with value 0x82a6cdc97e0a13f8
sw x3, 0(x2) # store 0x82a6cdc97e0a13f8 in memory
flw f26, 0(x2) # load 0x82a6cdc97e0a13f8 from memory into f26
fmadd.s f3, f21, f14, f26, dyn # perform operation
fmadd.s f3, f21, f14, f26, rdn # perform operation
fmadd.s f3, f21, f14, f26, rmm # perform operation
fmadd.s f3, f21, f14, f26, rne # perform operation
fmadd.s f3, f21, f14, f26, rtz # perform operation
fmadd.s f3, f21, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f14, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x400000)
li x13, 0xae80fb727a98b589 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x11d8ab202895d219 # load x3 with value 0x11d8ab202895d219
sw x3, 0(x2) # store 0x11d8ab202895d219 in memory
flw f7, 0(x2) # load 0x11d8ab202895d219 from memory into f7
fmadd.s f13, f9, f25, f7, dyn # perform operation
fmadd.s f13, f9, f25, f7, rdn # perform operation
fmadd.s f13, f9, f25, f7, rmm # perform operation
fmadd.s f13, f9, f25, f7, rne # perform operation
fmadd.s f13, f9, f25, f7, rtz # perform operation
fmadd.s f13, f9, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f9, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f9, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80400000)
li x28, 0xa56b22b837c5902a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f12, 0(x2) # load 0x80400000 from memory into f12
li x3, 0x474757af41fb1615 # load x3 with value 0x474757af41fb1615
sw x3, 0(x2) # store 0x474757af41fb1615 in memory
flw f2, 0(x2) # load 0x474757af41fb1615 from memory into f2
fmadd.s f28, f23, f12, f2, dyn # perform operation
fmadd.s f28, f23, f12, f2, rdn # perform operation
fmadd.s f28, f23, f12, f2, rmm # perform operation
fmadd.s f28, f23, f12, f2, rne # perform operation
fmadd.s f28, f23, f12, f2, rtz # perform operation
fmadd.s f28, f23, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x1)
li x6, 0x45aa642b90ea4dac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f11, 0(x2) # load 0x00000001 from memory into f11
li x3, 0xa4cdc63c2bddbf16 # load x3 with value 0xa4cdc63c2bddbf16
sw x3, 0(x2) # store 0xa4cdc63c2bddbf16 in memory
flw f28, 0(x2) # load 0xa4cdc63c2bddbf16 from memory into f28
fmadd.s f6, f23, f11, f28, dyn # perform operation
fmadd.s f6, f23, f11, f28, rdn # perform operation
fmadd.s f6, f23, f11, f28, rmm # perform operation
fmadd.s f6, f23, f11, f28, rne # perform operation
fmadd.s f6, f23, f11, f28, rtz # perform operation
fmadd.s f6, f23, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f23, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f23, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f23, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f23, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f23, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x80000001)
li x20, 0x5132da3f6e4ec1fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x581932e97e4235d3 # load x3 with value 0x581932e97e4235d3
sw x3, 0(x2) # store 0x581932e97e4235d3 in memory
flw f9, 0(x2) # load 0x581932e97e4235d3 from memory into f9
fmadd.s f20, f7, f29, f9, dyn # perform operation
fmadd.s f20, f7, f29, f9, rdn # perform operation
fmadd.s f20, f7, f29, f9, rmm # perform operation
fmadd.s f20, f7, f29, f9, rne # perform operation
fmadd.s f20, f7, f29, f9, rtz # perform operation
fmadd.s f20, f7, f29, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f7, f29, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f7, f29, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800000)
li x12, 0xe7345c33aa22dfe8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f4, 0(x2) # load 0x80000001 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xe218e946fa3c787d # load x3 with value 0xe218e946fa3c787d
sw x3, 0(x2) # store 0xe218e946fa3c787d in memory
flw f3, 0(x2) # load 0xe218e946fa3c787d from memory into f3
fmadd.s f12, f4, f9, f3, dyn # perform operation
fmadd.s f12, f4, f9, f3, rdn # perform operation
fmadd.s f12, f4, f9, f3, rmm # perform operation
fmadd.s f12, f4, f9, f3, rne # perform operation
fmadd.s f12, f4, f9, f3, rtz # perform operation
fmadd.s f12, f4, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f4, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f4, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f4, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f4, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f4, f9, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0xff800000)
li x19, 0xfd9f8cbd2e4f68e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xd7e94ad4ef43aece # load x3 with value 0xd7e94ad4ef43aece
sw x3, 0(x2) # store 0xd7e94ad4ef43aece in memory
flw f30, 0(x2) # load 0xd7e94ad4ef43aece from memory into f30
fmadd.s f19, f20, f17, f30, dyn # perform operation
fmadd.s f19, f20, f17, f30, rdn # perform operation
fmadd.s f19, f20, f17, f30, rmm # perform operation
fmadd.s f19, f20, f17, f30, rne # perform operation
fmadd.s f19, f20, f17, f30, rtz # perform operation
fmadd.s f19, f20, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f17, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fc00000)
li x16, 0xacb18d85e4025afe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x6a413a0502213e77 # load x3 with value 0x6a413a0502213e77
sw x3, 0(x2) # store 0x6a413a0502213e77 in memory
flw f24, 0(x2) # load 0x6a413a0502213e77 from memory into f24
fmadd.s f16, f7, f18, f24, dyn # perform operation
fmadd.s f16, f7, f18, f24, rdn # perform operation
fmadd.s f16, f7, f18, f24, rmm # perform operation
fmadd.s f16, f7, f18, f24, rne # perform operation
fmadd.s f16, f7, f18, f24, rtz # perform operation
fmadd.s f16, f7, f18, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f7, f18, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f7, f18, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fffffff)
li x24, 0xd7c125d1c26465c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xfacb537712d66e74 # load x3 with value 0xfacb537712d66e74
sw x3, 0(x2) # store 0xfacb537712d66e74 in memory
flw f15, 0(x2) # load 0xfacb537712d66e74 from memory into f15
fmadd.s f24, f27, f1, f15, dyn # perform operation
fmadd.s f24, f27, f1, f15, rdn # perform operation
fmadd.s f24, f27, f1, f15, rmm # perform operation
fmadd.s f24, f27, f1, f15, rne # perform operation
fmadd.s f24, f27, f1, f15, rtz # perform operation
fmadd.s f24, f27, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f27, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f27, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f27, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f27, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f27, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7f800001)
li x10, 0xe6d854f9c4b69980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x8aaa4162f456c7f2 # load x3 with value 0x8aaa4162f456c7f2
sw x3, 0(x2) # store 0x8aaa4162f456c7f2 in memory
flw f5, 0(x2) # load 0x8aaa4162f456c7f2 from memory into f5
fmadd.s f10, f15, f31, f5, dyn # perform operation
fmadd.s f10, f15, f31, f5, rdn # perform operation
fmadd.s f10, f15, f31, f5, rmm # perform operation
fmadd.s f10, f15, f31, f5, rne # perform operation
fmadd.s f10, f15, f31, f5, rtz # perform operation
fmadd.s f10, f15, f31, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f15, f31, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f15, f31, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7fbfffff)
li x23, 0x0b595c4ff394c1f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f24, 0(x2) # load 0x7fbfffff from memory into f24
li x3, 0x191577d8a878bec4 # load x3 with value 0x191577d8a878bec4
sw x3, 0(x2) # store 0x191577d8a878bec4 in memory
flw f6, 0(x2) # load 0x191577d8a878bec4 from memory into f6
fmadd.s f23, f5, f24, f6, dyn # perform operation
fmadd.s f23, f5, f24, f6, rdn # perform operation
fmadd.s f23, f5, f24, f6, rmm # perform operation
fmadd.s f23, f5, f24, f6, rne # perform operation
fmadd.s f23, f5, f24, f6, rtz # perform operation
fmadd.s f23, f5, f24, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f5, f24, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f5, f24, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x7ef8654f)
li x17, 0x712044934e89c26b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0x27465433f7611d01 # load x3 with value 0x27465433f7611d01
sw x3, 0(x2) # store 0x27465433f7611d01 in memory
flw f21, 0(x2) # load 0x27465433f7611d01 from memory into f21
fmadd.s f17, f28, f13, f21, dyn # perform operation
fmadd.s f17, f28, f13, f21, rdn # perform operation
fmadd.s f17, f28, f13, f21, rmm # perform operation
fmadd.s f17, f28, f13, f21, rne # perform operation
fmadd.s f17, f28, f13, f21, rtz # perform operation
fmadd.s f17, f28, f13, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f13, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f13, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x80000001 fs2 = 0x813d9ab0)
li x14, 0x852d636ae29cf6db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x6d1d9ee7dc4fb4cd # load x3 with value 0x6d1d9ee7dc4fb4cd
sw x3, 0(x2) # store 0x6d1d9ee7dc4fb4cd in memory
flw f7, 0(x2) # load 0x6d1d9ee7dc4fb4cd from memory into f7
fmadd.s f14, f3, f22, f7, dyn # perform operation
fmadd.s f14, f3, f22, f7, rdn # perform operation
fmadd.s f14, f3, f22, f7, rmm # perform operation
fmadd.s f14, f3, f22, f7, rne # perform operation
fmadd.s f14, f3, f22, f7, rtz # perform operation
fmadd.s f14, f3, f22, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f3, f22, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f3, f22, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x0)
li x31, 0x539a78eb7a2c9dba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x5f156b8e12fba00c # load x3 with value 0x5f156b8e12fba00c
sw x3, 0(x2) # store 0x5f156b8e12fba00c in memory
flw f23, 0(x2) # load 0x5f156b8e12fba00c from memory into f23
fmadd.s f31, f13, f10, f23, dyn # perform operation
fmadd.s f31, f13, f10, f23, rdn # perform operation
fmadd.s f31, f13, f10, f23, rmm # perform operation
fmadd.s f31, f13, f10, f23, rne # perform operation
fmadd.s f31, f13, f10, f23, rtz # perform operation
fmadd.s f31, f13, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f13, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f13, f10, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000000)
li x2, 0xc6c1677e28e0658e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xe58ddc59e5c91ed5 # load x3 with value 0xe58ddc59e5c91ed5
sw x3, 0(x2) # store 0xe58ddc59e5c91ed5 in memory
flw f8, 0(x2) # load 0xe58ddc59e5c91ed5 from memory into f8
fmadd.s f2, f28, f19, f8, dyn # perform operation
fmadd.s f2, f28, f19, f8, rdn # perform operation
fmadd.s f2, f28, f19, f8, rmm # perform operation
fmadd.s f2, f28, f19, f8, rne # perform operation
fmadd.s f2, f28, f19, f8, rtz # perform operation
fmadd.s f2, f28, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f19, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3f800000)
li x7, 0x90fc7443161f756b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0x659a0c69db43141a # load x3 with value 0x659a0c69db43141a
sw x3, 0(x2) # store 0x659a0c69db43141a in memory
flw f13, 0(x2) # load 0x659a0c69db43141a from memory into f13
fmadd.s f7, f25, f31, f13, dyn # perform operation
fmadd.s f7, f25, f31, f13, rdn # perform operation
fmadd.s f7, f25, f31, f13, rmm # perform operation
fmadd.s f7, f25, f31, f13, rne # perform operation
fmadd.s f7, f25, f31, f13, rtz # perform operation
fmadd.s f7, f25, f31, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f31, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f31, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbf800000)
li x7, 0xa344f6366d126c19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f2, 0(x2) # load 0xbf800000 from memory into f2
li x3, 0x1604048ed4f7fc3b # load x3 with value 0x1604048ed4f7fc3b
sw x3, 0(x2) # store 0x1604048ed4f7fc3b in memory
flw f29, 0(x2) # load 0x1604048ed4f7fc3b from memory into f29
fmadd.s f7, f25, f2, f29, dyn # perform operation
fmadd.s f7, f25, f2, f29, rdn # perform operation
fmadd.s f7, f25, f2, f29, rmm # perform operation
fmadd.s f7, f25, f2, f29, rne # perform operation
fmadd.s f7, f25, f2, f29, rtz # perform operation
fmadd.s f7, f25, f2, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f2, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f2, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x3fc00000)
li x5, 0x55ed9ae967d37371 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x9e00eb4b007f9178 # load x3 with value 0x9e00eb4b007f9178
sw x3, 0(x2) # store 0x9e00eb4b007f9178 in memory
flw f12, 0(x2) # load 0x9e00eb4b007f9178 from memory into f12
fmadd.s f5, f19, f28, f12, dyn # perform operation
fmadd.s f5, f19, f28, f12, rdn # perform operation
fmadd.s f5, f19, f28, f12, rmm # perform operation
fmadd.s f5, f19, f28, f12, rne # perform operation
fmadd.s f5, f19, f28, f12, rtz # perform operation
fmadd.s f5, f19, f28, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f28, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f28, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xbfc00000)
li x20, 0x88d6e54d6132ef86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0xf00b11617d6999ef # load x3 with value 0xf00b11617d6999ef
sw x3, 0(x2) # store 0xf00b11617d6999ef in memory
flw f31, 0(x2) # load 0xf00b11617d6999ef from memory into f31
fmadd.s f20, f8, f19, f31, dyn # perform operation
fmadd.s f20, f8, f19, f31, rdn # perform operation
fmadd.s f20, f8, f19, f31, rmm # perform operation
fmadd.s f20, f8, f19, f31, rne # perform operation
fmadd.s f20, f8, f19, f31, rtz # perform operation
fmadd.s f20, f8, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f8, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f8, f19, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x40000000)
li x24, 0x4b86b3536f62b40c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f19, 0(x2) # load 0x40000000 from memory into f19
li x3, 0xb6b2b5446439acff # load x3 with value 0xb6b2b5446439acff
sw x3, 0(x2) # store 0xb6b2b5446439acff in memory
flw f27, 0(x2) # load 0xb6b2b5446439acff from memory into f27
fmadd.s f24, f13, f19, f27, dyn # perform operation
fmadd.s f24, f13, f19, f27, rdn # perform operation
fmadd.s f24, f13, f19, f27, rmm # perform operation
fmadd.s f24, f13, f19, f27, rne # perform operation
fmadd.s f24, f13, f19, f27, rtz # perform operation
fmadd.s f24, f13, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f19, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xc0000000)
li x25, 0x5e567c85b7f4774a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xd5b611d0395c2834 # load x3 with value 0xd5b611d0395c2834
sw x3, 0(x2) # store 0xd5b611d0395c2834 in memory
flw f11, 0(x2) # load 0xd5b611d0395c2834 from memory into f11
fmadd.s f25, f5, f27, f11, dyn # perform operation
fmadd.s f25, f5, f27, f11, rdn # perform operation
fmadd.s f25, f5, f27, f11, rmm # perform operation
fmadd.s f25, f5, f27, f11, rne # perform operation
fmadd.s f25, f5, f27, f11, rtz # perform operation
fmadd.s f25, f5, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f5, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f5, f27, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x800000)
li x18, 0x7582dc52794e2911 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x7e3c43f30475e047 # load x3 with value 0x7e3c43f30475e047
sw x3, 0(x2) # store 0x7e3c43f30475e047 in memory
flw f17, 0(x2) # load 0x7e3c43f30475e047 from memory into f17
fmadd.s f18, f11, f26, f17, dyn # perform operation
fmadd.s f18, f11, f26, f17, rdn # perform operation
fmadd.s f18, f11, f26, f17, rmm # perform operation
fmadd.s f18, f11, f26, f17, rne # perform operation
fmadd.s f18, f11, f26, f17, rtz # perform operation
fmadd.s f18, f11, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80800000)
li x7, 0x9e7ba49dff979e2c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xd4931414052b5a1a # load x3 with value 0xd4931414052b5a1a
sw x3, 0(x2) # store 0xd4931414052b5a1a in memory
flw f13, 0(x2) # load 0xd4931414052b5a1a from memory into f13
fmadd.s f7, f12, f16, f13, dyn # perform operation
fmadd.s f7, f12, f16, f13, rdn # perform operation
fmadd.s f7, f12, f16, f13, rmm # perform operation
fmadd.s f7, f12, f16, f13, rne # perform operation
fmadd.s f7, f12, f16, f13, rtz # perform operation
fmadd.s f7, f12, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f12, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f12, f16, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f7fffff)
li x6, 0x863bbaf0a44d844e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xd5ef2c8158473d5c # load x3 with value 0xd5ef2c8158473d5c
sw x3, 0(x2) # store 0xd5ef2c8158473d5c in memory
flw f16, 0(x2) # load 0xd5ef2c8158473d5c from memory into f16
fmadd.s f6, f7, f13, f16, dyn # perform operation
fmadd.s f6, f7, f13, f16, rdn # perform operation
fmadd.s f6, f7, f13, f16, rmm # perform operation
fmadd.s f6, f7, f13, f16, rne # perform operation
fmadd.s f6, f7, f13, f16, rtz # perform operation
fmadd.s f6, f7, f13, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f13, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f13, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff7fffff)
li x13, 0x5c0d87d765bf5bd0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0xf04f9b1e6d69e739 # load x3 with value 0xf04f9b1e6d69e739
sw x3, 0(x2) # store 0xf04f9b1e6d69e739 in memory
flw f15, 0(x2) # load 0xf04f9b1e6d69e739 from memory into f15
fmadd.s f13, f4, f24, f15, dyn # perform operation
fmadd.s f13, f4, f24, f15, rdn # perform operation
fmadd.s f13, f4, f24, f15, rmm # perform operation
fmadd.s f13, f4, f24, f15, rne # perform operation
fmadd.s f13, f4, f24, f15, rtz # perform operation
fmadd.s f13, f4, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f4, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f4, f24, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffff)
li x31, 0xe1ecfcbc813f6062 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x1ac9204dc607b104 # load x3 with value 0x1ac9204dc607b104
sw x3, 0(x2) # store 0x1ac9204dc607b104 in memory
flw f18, 0(x2) # load 0x1ac9204dc607b104 from memory into f18
fmadd.s f31, f28, f27, f18, dyn # perform operation
fmadd.s f31, f28, f27, f18, rdn # perform operation
fmadd.s f31, f28, f27, f18, rmm # perform operation
fmadd.s f31, f28, f27, f18, rne # perform operation
fmadd.s f31, f28, f27, f18, rtz # perform operation
fmadd.s f31, f28, f27, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f27, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f27, f18 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x807fffff)
li x17, 0x42029b64b966f72d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xfbedce31dca23e74 # load x3 with value 0xfbedce31dca23e74
sw x3, 0(x2) # store 0xfbedce31dca23e74 in memory
flw f28, 0(x2) # load 0xfbedce31dca23e74 from memory into f28
fmadd.s f17, f13, f11, f28, dyn # perform operation
fmadd.s f17, f13, f11, f28, rdn # perform operation
fmadd.s f17, f13, f11, f28, rmm # perform operation
fmadd.s f17, f13, f11, f28, rne # perform operation
fmadd.s f17, f13, f11, f28, rtz # perform operation
fmadd.s f17, f13, f11, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f13, f11, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f13, f11, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f13, f11, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f13, f11, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f13, f11, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x400000)
li x8, 0x550fa134b9d7deb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xdc5cf0cc1e8a09fc # load x3 with value 0xdc5cf0cc1e8a09fc
sw x3, 0(x2) # store 0xdc5cf0cc1e8a09fc in memory
flw f12, 0(x2) # load 0xdc5cf0cc1e8a09fc from memory into f12
fmadd.s f8, f3, f1, f12, dyn # perform operation
fmadd.s f8, f3, f1, f12, rdn # perform operation
fmadd.s f8, f3, f1, f12, rmm # perform operation
fmadd.s f8, f3, f1, f12, rne # perform operation
fmadd.s f8, f3, f1, f12, rtz # perform operation
fmadd.s f8, f3, f1, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f3, f1, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f3, f1, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80400000)
li x22, 0xa58a0dbcd221ceaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x6461f11125d44686 # load x3 with value 0x6461f11125d44686
sw x3, 0(x2) # store 0x6461f11125d44686 in memory
flw f10, 0(x2) # load 0x6461f11125d44686 from memory into f10
fmadd.s f22, f6, f23, f10, dyn # perform operation
fmadd.s f22, f6, f23, f10, rdn # perform operation
fmadd.s f22, f6, f23, f10, rmm # perform operation
fmadd.s f22, f6, f23, f10, rne # perform operation
fmadd.s f22, f6, f23, f10, rtz # perform operation
fmadd.s f22, f6, f23, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f23, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f23, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f23, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f23, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f23, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x1)
li x20, 0x0452e416b0c2cf7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xae64472c21dcbc47 # load x3 with value 0xae64472c21dcbc47
sw x3, 0(x2) # store 0xae64472c21dcbc47 in memory
flw f24, 0(x2) # load 0xae64472c21dcbc47 from memory into f24
fmadd.s f20, f3, f16, f24, dyn # perform operation
fmadd.s f20, f3, f16, f24, rdn # perform operation
fmadd.s f20, f3, f16, f24, rmm # perform operation
fmadd.s f20, f3, f16, f24, rne # perform operation
fmadd.s f20, f3, f16, f24, rtz # perform operation
fmadd.s f20, f3, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x80000001)
li x26, 0x37cdfa7f115eb61a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0xb9f5925828b04a4d # load x3 with value 0xb9f5925828b04a4d
sw x3, 0(x2) # store 0xb9f5925828b04a4d in memory
flw f8, 0(x2) # load 0xb9f5925828b04a4d from memory into f8
fmadd.s f26, f29, f10, f8, dyn # perform operation
fmadd.s f26, f29, f10, f8, rdn # perform operation
fmadd.s f26, f29, f10, f8, rmm # perform operation
fmadd.s f26, f29, f10, f8, rne # perform operation
fmadd.s f26, f29, f10, f8, rtz # perform operation
fmadd.s f26, f29, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f29, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f29, f10, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800000)
li x25, 0xc0f5c8bdb7f7981d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x3d21818785bcbbfa # load x3 with value 0x3d21818785bcbbfa
sw x3, 0(x2) # store 0x3d21818785bcbbfa in memory
flw f9, 0(x2) # load 0x3d21818785bcbbfa from memory into f9
fmadd.s f25, f2, f5, f9, dyn # perform operation
fmadd.s f25, f2, f5, f9, rdn # perform operation
fmadd.s f25, f2, f5, f9, rmm # perform operation
fmadd.s f25, f2, f5, f9, rne # perform operation
fmadd.s f25, f2, f5, f9, rtz # perform operation
fmadd.s f25, f2, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f5, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0xff800000)
li x8, 0xc734bb4407d5deb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0xca916e655151a51b # load x3 with value 0xca916e655151a51b
sw x3, 0(x2) # store 0xca916e655151a51b in memory
flw f29, 0(x2) # load 0xca916e655151a51b from memory into f29
fmadd.s f8, f25, f17, f29, dyn # perform operation
fmadd.s f8, f25, f17, f29, rdn # perform operation
fmadd.s f8, f25, f17, f29, rmm # perform operation
fmadd.s f8, f25, f17, f29, rne # perform operation
fmadd.s f8, f25, f17, f29, rtz # perform operation
fmadd.s f8, f25, f17, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f25, f17, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f25, f17, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f25, f17, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f25, f17, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f25, f17, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fc00000)
li x3, 0xbf829379d9a67130 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x9d8872d307fb3c8a # load x3 with value 0x9d8872d307fb3c8a
sw x3, 0(x2) # store 0x9d8872d307fb3c8a in memory
flw f24, 0(x2) # load 0x9d8872d307fb3c8a from memory into f24
fmadd.s f3, f12, f9, f24, dyn # perform operation
fmadd.s f3, f12, f9, f24, rdn # perform operation
fmadd.s f3, f12, f9, f24, rmm # perform operation
fmadd.s f3, f12, f9, f24, rne # perform operation
fmadd.s f3, f12, f9, f24, rtz # perform operation
fmadd.s f3, f12, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f9, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fffffff)
li x15, 0x33f197a42a783377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0xd8d2320d97b0b628 # load x3 with value 0xd8d2320d97b0b628
sw x3, 0(x2) # store 0xd8d2320d97b0b628 in memory
flw f23, 0(x2) # load 0xd8d2320d97b0b628 from memory into f23
fmadd.s f15, f26, f24, f23, dyn # perform operation
fmadd.s f15, f26, f24, f23, rdn # perform operation
fmadd.s f15, f26, f24, f23, rmm # perform operation
fmadd.s f15, f26, f24, f23, rne # perform operation
fmadd.s f15, f26, f24, f23, rtz # perform operation
fmadd.s f15, f26, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f24, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7f800001)
li x26, 0xed309cc3eb2082dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f7, 0(x2) # load 0x7f800001 from memory into f7
li x3, 0xa699236fd9efcca # load x3 with value 0xa699236fd9efcca
sw x3, 0(x2) # store 0xa699236fd9efcca in memory
flw f3, 0(x2) # load 0xa699236fd9efcca from memory into f3
fmadd.s f26, f16, f7, f3, dyn # perform operation
fmadd.s f26, f16, f7, f3, rdn # perform operation
fmadd.s f26, f16, f7, f3, rmm # perform operation
fmadd.s f26, f16, f7, f3, rne # perform operation
fmadd.s f26, f16, f7, f3, rtz # perform operation
fmadd.s f26, f16, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f16, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f16, f7, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7fbfffff)
li x18, 0xb08d27ca81f90809 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0x9118c659838421fa # load x3 with value 0x9118c659838421fa
sw x3, 0(x2) # store 0x9118c659838421fa in memory
flw f7, 0(x2) # load 0x9118c659838421fa from memory into f7
fmadd.s f18, f10, f4, f7, dyn # perform operation
fmadd.s f18, f10, f4, f7, rdn # perform operation
fmadd.s f18, f10, f4, f7, rmm # perform operation
fmadd.s f18, f10, f4, f7, rne # perform operation
fmadd.s f18, f10, f4, f7, rtz # perform operation
fmadd.s f18, f10, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f4, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x7ef8654f)
li x17, 0x2a902c961723f52b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f15, 0(x2) # load 0x7f800000 from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x7cd27a6c8c0c5303 # load x3 with value 0x7cd27a6c8c0c5303
sw x3, 0(x2) # store 0x7cd27a6c8c0c5303 in memory
flw f24, 0(x2) # load 0x7cd27a6c8c0c5303 from memory into f24
fmadd.s f17, f15, f22, f24, dyn # perform operation
fmadd.s f17, f15, f22, f24, rdn # perform operation
fmadd.s f17, f15, f22, f24, rmm # perform operation
fmadd.s f17, f15, f22, f24, rne # perform operation
fmadd.s f17, f15, f22, f24, rtz # perform operation
fmadd.s f17, f15, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f22, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800000 fs2 = 0x813d9ab0)
li x17, 0x9bcc3d620fcd57d9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x37d8a228c605db41 # load x3 with value 0x37d8a228c605db41
sw x3, 0(x2) # store 0x37d8a228c605db41 in memory
flw f16, 0(x2) # load 0x37d8a228c605db41 from memory into f16
fmadd.s f17, f2, f10, f16, dyn # perform operation
fmadd.s f17, f2, f10, f16, rdn # perform operation
fmadd.s f17, f2, f10, f16, rmm # perform operation
fmadd.s f17, f2, f10, f16, rne # perform operation
fmadd.s f17, f2, f10, f16, rtz # perform operation
fmadd.s f17, f2, f10, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f10, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f10, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x0)
li x9, 0x13d9021a61d7dee5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f5, 0(x2) # load 0xff800000 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0x254dae06a4ce288f # load x3 with value 0x254dae06a4ce288f
sw x3, 0(x2) # store 0x254dae06a4ce288f in memory
flw f15, 0(x2) # load 0x254dae06a4ce288f from memory into f15
fmadd.s f9, f5, f28, f15, dyn # perform operation
fmadd.s f9, f5, f28, f15, rdn # perform operation
fmadd.s f9, f5, f28, f15, rmm # perform operation
fmadd.s f9, f5, f28, f15, rne # perform operation
fmadd.s f9, f5, f28, f15, rtz # perform operation
fmadd.s f9, f5, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f28, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000000)
li x21, 0xa2074510f197ff0d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0xc1de9e9aa0673a66 # load x3 with value 0xc1de9e9aa0673a66
sw x3, 0(x2) # store 0xc1de9e9aa0673a66 in memory
flw f6, 0(x2) # load 0xc1de9e9aa0673a66 from memory into f6
fmadd.s f21, f10, f2, f6, dyn # perform operation
fmadd.s f21, f10, f2, f6, rdn # perform operation
fmadd.s f21, f10, f2, f6, rmm # perform operation
fmadd.s f21, f10, f2, f6, rne # perform operation
fmadd.s f21, f10, f2, f6, rtz # perform operation
fmadd.s f21, f10, f2, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f10, f2, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f10, f2, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3f800000)
li x20, 0xb6ad3e094960d78d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f7, 0(x2) # load 0x3f800000 from memory into f7
li x3, 0x41acee723612c332 # load x3 with value 0x41acee723612c332
sw x3, 0(x2) # store 0x41acee723612c332 in memory
flw f6, 0(x2) # load 0x41acee723612c332 from memory into f6
fmadd.s f20, f1, f7, f6, dyn # perform operation
fmadd.s f20, f1, f7, f6, rdn # perform operation
fmadd.s f20, f1, f7, f6, rmm # perform operation
fmadd.s f20, f1, f7, f6, rne # perform operation
fmadd.s f20, f1, f7, f6, rtz # perform operation
fmadd.s f20, f1, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f7, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbf800000)
li x19, 0xde4055ca424e4793 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
li x3, 0x6187749c75b7807d # load x3 with value 0x6187749c75b7807d
sw x3, 0(x2) # store 0x6187749c75b7807d in memory
flw f12, 0(x2) # load 0x6187749c75b7807d from memory into f12
fmadd.s f19, f18, f7, f12, dyn # perform operation
fmadd.s f19, f18, f7, f12, rdn # perform operation
fmadd.s f19, f18, f7, f12, rmm # perform operation
fmadd.s f19, f18, f7, f12, rne # perform operation
fmadd.s f19, f18, f7, f12, rtz # perform operation
fmadd.s f19, f18, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f18, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x3fc00000)
li x30, 0xf50a2e2f849db8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0x79b2a0a8646736ac # load x3 with value 0x79b2a0a8646736ac
sw x3, 0(x2) # store 0x79b2a0a8646736ac in memory
flw f21, 0(x2) # load 0x79b2a0a8646736ac from memory into f21
fmadd.s f30, f10, f19, f21, dyn # perform operation
fmadd.s f30, f10, f19, f21, rdn # perform operation
fmadd.s f30, f10, f19, f21, rmm # perform operation
fmadd.s f30, f10, f19, f21, rne # perform operation
fmadd.s f30, f10, f19, f21, rtz # perform operation
fmadd.s f30, f10, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f10, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f10, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xbfc00000)
li x2, 0x3ea76f118bdc8eb4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f22, 0(x2) # load 0xff800000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xbf6072165d3a4c83 # load x3 with value 0xbf6072165d3a4c83
sw x3, 0(x2) # store 0xbf6072165d3a4c83 in memory
flw f13, 0(x2) # load 0xbf6072165d3a4c83 from memory into f13
fmadd.s f2, f22, f9, f13, dyn # perform operation
fmadd.s f2, f22, f9, f13, rdn # perform operation
fmadd.s f2, f22, f9, f13, rmm # perform operation
fmadd.s f2, f22, f9, f13, rne # perform operation
fmadd.s f2, f22, f9, f13, rtz # perform operation
fmadd.s f2, f22, f9, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f9, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f9, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f9, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f9, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f9, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x40000000)
li x15, 0x049b082e06719999 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x4cae26da7fcf7c # load x3 with value 0x4cae26da7fcf7c
sw x3, 0(x2) # store 0x4cae26da7fcf7c in memory
flw f4, 0(x2) # load 0x4cae26da7fcf7c from memory into f4
fmadd.s f15, f27, f21, f4, dyn # perform operation
fmadd.s f15, f27, f21, f4, rdn # perform operation
fmadd.s f15, f27, f21, f4, rmm # perform operation
fmadd.s f15, f27, f21, f4, rne # perform operation
fmadd.s f15, f27, f21, f4, rtz # perform operation
fmadd.s f15, f27, f21, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f21, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f21, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xc0000000)
li x13, 0x32872feb0fd3028d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0xfa7ae63549c8822e # load x3 with value 0xfa7ae63549c8822e
sw x3, 0(x2) # store 0xfa7ae63549c8822e in memory
flw f4, 0(x2) # load 0xfa7ae63549c8822e from memory into f4
fmadd.s f13, f11, f5, f4, dyn # perform operation
fmadd.s f13, f11, f5, f4, rdn # perform operation
fmadd.s f13, f11, f5, f4, rmm # perform operation
fmadd.s f13, f11, f5, f4, rne # perform operation
fmadd.s f13, f11, f5, f4, rtz # perform operation
fmadd.s f13, f11, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f5, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x800000)
li x2, 0x7ce86d5cec8d7fc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x521fe386b471e84 # load x3 with value 0x521fe386b471e84
sw x3, 0(x2) # store 0x521fe386b471e84 in memory
flw f28, 0(x2) # load 0x521fe386b471e84 from memory into f28
fmadd.s f2, f14, f29, f28, dyn # perform operation
fmadd.s f2, f14, f29, f28, rdn # perform operation
fmadd.s f2, f14, f29, f28, rmm # perform operation
fmadd.s f2, f14, f29, f28, rne # perform operation
fmadd.s f2, f14, f29, f28, rtz # perform operation
fmadd.s f2, f14, f29, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f29, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f29, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f29, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f29, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f29, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80800000)
li x7, 0x7df9fbc48b4eb99c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0x7e0eefaf901cab2e # load x3 with value 0x7e0eefaf901cab2e
sw x3, 0(x2) # store 0x7e0eefaf901cab2e in memory
flw f5, 0(x2) # load 0x7e0eefaf901cab2e from memory into f5
fmadd.s f7, f19, f8, f5, dyn # perform operation
fmadd.s f7, f19, f8, f5, rdn # perform operation
fmadd.s f7, f19, f8, f5, rmm # perform operation
fmadd.s f7, f19, f8, f5, rne # perform operation
fmadd.s f7, f19, f8, f5, rtz # perform operation
fmadd.s f7, f19, f8, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f8, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f8, f5 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f7fffff)
li x8, 0x37824b28381fe2ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xa21f3689cf711a7a # load x3 with value 0xa21f3689cf711a7a
sw x3, 0(x2) # store 0xa21f3689cf711a7a in memory
flw f25, 0(x2) # load 0xa21f3689cf711a7a from memory into f25
fmadd.s f8, f26, f2, f25, dyn # perform operation
fmadd.s f8, f26, f2, f25, rdn # perform operation
fmadd.s f8, f26, f2, f25, rmm # perform operation
fmadd.s f8, f26, f2, f25, rne # perform operation
fmadd.s f8, f26, f2, f25, rtz # perform operation
fmadd.s f8, f26, f2, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f2, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f2, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff7fffff)
li x15, 0x8a114ec1cc6212fe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x784750a18594cc1d # load x3 with value 0x784750a18594cc1d
sw x3, 0(x2) # store 0x784750a18594cc1d in memory
flw f11, 0(x2) # load 0x784750a18594cc1d from memory into f11
fmadd.s f15, f1, f2, f11, dyn # perform operation
fmadd.s f15, f1, f2, f11, rdn # perform operation
fmadd.s f15, f1, f2, f11, rmm # perform operation
fmadd.s f15, f1, f2, f11, rne # perform operation
fmadd.s f15, f1, f2, f11, rtz # perform operation
fmadd.s f15, f1, f2, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f2, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f2, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffff)
li x7, 0x578027bf3fca3497 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
li x3, 0x7a19f46b1aa88104 # load x3 with value 0x7a19f46b1aa88104
sw x3, 0(x2) # store 0x7a19f46b1aa88104 in memory
flw f21, 0(x2) # load 0x7a19f46b1aa88104 from memory into f21
fmadd.s f7, f25, f31, f21, dyn # perform operation
fmadd.s f7, f25, f31, f21, rdn # perform operation
fmadd.s f7, f25, f31, f21, rmm # perform operation
fmadd.s f7, f25, f31, f21, rne # perform operation
fmadd.s f7, f25, f31, f21, rtz # perform operation
fmadd.s f7, f25, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f31, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x807fffff)
li x28, 0x9e66f2f610fbc0e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x40869777e00d082c # load x3 with value 0x40869777e00d082c
sw x3, 0(x2) # store 0x40869777e00d082c in memory
flw f27, 0(x2) # load 0x40869777e00d082c from memory into f27
fmadd.s f28, f31, f2, f27, dyn # perform operation
fmadd.s f28, f31, f2, f27, rdn # perform operation
fmadd.s f28, f31, f2, f27, rmm # perform operation
fmadd.s f28, f31, f2, f27, rne # perform operation
fmadd.s f28, f31, f2, f27, rtz # perform operation
fmadd.s f28, f31, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f2, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x400000)
li x27, 0x368677f41cd5a5ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0xd7d18b9073393245 # load x3 with value 0xd7d18b9073393245
sw x3, 0(x2) # store 0xd7d18b9073393245 in memory
flw f21, 0(x2) # load 0xd7d18b9073393245 from memory into f21
fmadd.s f27, f30, f19, f21, dyn # perform operation
fmadd.s f27, f30, f19, f21, rdn # perform operation
fmadd.s f27, f30, f19, f21, rmm # perform operation
fmadd.s f27, f30, f19, f21, rne # perform operation
fmadd.s f27, f30, f19, f21, rtz # perform operation
fmadd.s f27, f30, f19, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f19, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f19, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80400000)
li x10, 0x261f09baf87bd593 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f22, 0(x2) # load 0x80400000 from memory into f22
li x3, 0xf831a235649c679 # load x3 with value 0xf831a235649c679
sw x3, 0(x2) # store 0xf831a235649c679 in memory
flw f4, 0(x2) # load 0xf831a235649c679 from memory into f4
fmadd.s f10, f3, f22, f4, dyn # perform operation
fmadd.s f10, f3, f22, f4, rdn # perform operation
fmadd.s f10, f3, f22, f4, rmm # perform operation
fmadd.s f10, f3, f22, f4, rne # perform operation
fmadd.s f10, f3, f22, f4, rtz # perform operation
fmadd.s f10, f3, f22, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f3, f22, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f3, f22, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f3, f22, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f3, f22, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f3, f22, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x1)
li x12, 0x1281d28f1b471d07 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xd7e9b2be04dec395 # load x3 with value 0xd7e9b2be04dec395
sw x3, 0(x2) # store 0xd7e9b2be04dec395 in memory
flw f7, 0(x2) # load 0xd7e9b2be04dec395 from memory into f7
fmadd.s f12, f1, f25, f7, dyn # perform operation
fmadd.s f12, f1, f25, f7, rdn # perform operation
fmadd.s f12, f1, f25, f7, rmm # perform operation
fmadd.s f12, f1, f25, f7, rne # perform operation
fmadd.s f12, f1, f25, f7, rtz # perform operation
fmadd.s f12, f1, f25, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f1, f25, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f1, f25, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x80000001)
li x24, 0x039f97daada0785e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xdbc5cc76c538ac7f # load x3 with value 0xdbc5cc76c538ac7f
sw x3, 0(x2) # store 0xdbc5cc76c538ac7f in memory
flw f26, 0(x2) # load 0xdbc5cc76c538ac7f from memory into f26
fmadd.s f24, f17, f12, f26, dyn # perform operation
fmadd.s f24, f17, f12, f26, rdn # perform operation
fmadd.s f24, f17, f12, f26, rmm # perform operation
fmadd.s f24, f17, f12, f26, rne # perform operation
fmadd.s f24, f17, f12, f26, rtz # perform operation
fmadd.s f24, f17, f12, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f12, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f12, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800000)
li x5, 0x4648da7f82f51e5f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
li x3, 0xbdb06d16f463360f # load x3 with value 0xbdb06d16f463360f
sw x3, 0(x2) # store 0xbdb06d16f463360f in memory
flw f26, 0(x2) # load 0xbdb06d16f463360f from memory into f26
fmadd.s f5, f30, f17, f26, dyn # perform operation
fmadd.s f5, f30, f17, f26, rdn # perform operation
fmadd.s f5, f30, f17, f26, rmm # perform operation
fmadd.s f5, f30, f17, f26, rne # perform operation
fmadd.s f5, f30, f17, f26, rtz # perform operation
fmadd.s f5, f30, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f30, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f30, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f30, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f30, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f30, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0xff800000)
li x2, 0x320e4be14af59dce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f30, 0(x2) # load 0xff800000 from memory into f30
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x2689e2a49b4b205 # load x3 with value 0x2689e2a49b4b205
sw x3, 0(x2) # store 0x2689e2a49b4b205 in memory
flw f16, 0(x2) # load 0x2689e2a49b4b205 from memory into f16
fmadd.s f2, f30, f23, f16, dyn # perform operation
fmadd.s f2, f30, f23, f16, rdn # perform operation
fmadd.s f2, f30, f23, f16, rmm # perform operation
fmadd.s f2, f30, f23, f16, rne # perform operation
fmadd.s f2, f30, f23, f16, rtz # perform operation
fmadd.s f2, f30, f23, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f30, f23, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f30, f23, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fc00000)
li x23, 0x3cda5fca0523530f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
li x3, 0x8691b654a05a12ad # load x3 with value 0x8691b654a05a12ad
sw x3, 0(x2) # store 0x8691b654a05a12ad in memory
flw f21, 0(x2) # load 0x8691b654a05a12ad from memory into f21
fmadd.s f23, f12, f11, f21, dyn # perform operation
fmadd.s f23, f12, f11, f21, rdn # perform operation
fmadd.s f23, f12, f11, f21, rmm # perform operation
fmadd.s f23, f12, f11, f21, rne # perform operation
fmadd.s f23, f12, f11, f21, rtz # perform operation
fmadd.s f23, f12, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f11, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fffffff)
li x17, 0x3d43a583b13cfd9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x340cc71b513b1bf9 # load x3 with value 0x340cc71b513b1bf9
sw x3, 0(x2) # store 0x340cc71b513b1bf9 in memory
flw f22, 0(x2) # load 0x340cc71b513b1bf9 from memory into f22
fmadd.s f17, f31, f19, f22, dyn # perform operation
fmadd.s f17, f31, f19, f22, rdn # perform operation
fmadd.s f17, f31, f19, f22, rmm # perform operation
fmadd.s f17, f31, f19, f22, rne # perform operation
fmadd.s f17, f31, f19, f22, rtz # perform operation
fmadd.s f17, f31, f19, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f31, f19, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f31, f19, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f31, f19, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f31, f19, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f31, f19, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7f800001)
li x9, 0x96ec113a5c8e5d7a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f16, 0(x2) # load 0x7f800001 from memory into f16
li x3, 0xc0a9871d62b57cd9 # load x3 with value 0xc0a9871d62b57cd9
sw x3, 0(x2) # store 0xc0a9871d62b57cd9 in memory
flw f3, 0(x2) # load 0xc0a9871d62b57cd9 from memory into f3
fmadd.s f9, f11, f16, f3, dyn # perform operation
fmadd.s f9, f11, f16, f3, rdn # perform operation
fmadd.s f9, f11, f16, f3, rmm # perform operation
fmadd.s f9, f11, f16, f3, rne # perform operation
fmadd.s f9, f11, f16, f3, rtz # perform operation
fmadd.s f9, f11, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f11, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f11, f16, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7fbfffff)
li x11, 0xf850873811dfb1ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0xf0da75fd1836268c # load x3 with value 0xf0da75fd1836268c
sw x3, 0(x2) # store 0xf0da75fd1836268c in memory
flw f15, 0(x2) # load 0xf0da75fd1836268c from memory into f15
fmadd.s f11, f13, f29, f15, dyn # perform operation
fmadd.s f11, f13, f29, f15, rdn # perform operation
fmadd.s f11, f13, f29, f15, rmm # perform operation
fmadd.s f11, f13, f29, f15, rne # perform operation
fmadd.s f11, f13, f29, f15, rtz # perform operation
fmadd.s f11, f13, f29, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f13, f29, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f13, f29, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f13, f29, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f13, f29, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f13, f29, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x7ef8654f)
li x25, 0xe7b96c9549da941b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f20, 0(x2) # load 0xff800000 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0xfcf7c75a80e79145 # load x3 with value 0xfcf7c75a80e79145
sw x3, 0(x2) # store 0xfcf7c75a80e79145 in memory
flw f22, 0(x2) # load 0xfcf7c75a80e79145 from memory into f22
fmadd.s f25, f20, f11, f22, dyn # perform operation
fmadd.s f25, f20, f11, f22, rdn # perform operation
fmadd.s f25, f20, f11, f22, rmm # perform operation
fmadd.s f25, f20, f11, f22, rne # perform operation
fmadd.s f25, f20, f11, f22, rtz # perform operation
fmadd.s f25, f20, f11, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f20, f11, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f20, f11, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f20, f11, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f20, f11, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f20, f11, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0xff800000 fs2 = 0x813d9ab0)
li x17, 0x03c73edb16dbbfd3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x4c70d10612f7c86f # load x3 with value 0x4c70d10612f7c86f
sw x3, 0(x2) # store 0x4c70d10612f7c86f in memory
flw f29, 0(x2) # load 0x4c70d10612f7c86f from memory into f29
fmadd.s f17, f21, f1, f29, dyn # perform operation
fmadd.s f17, f21, f1, f29, rdn # perform operation
fmadd.s f17, f21, f1, f29, rmm # perform operation
fmadd.s f17, f21, f1, f29, rne # perform operation
fmadd.s f17, f21, f1, f29, rtz # perform operation
fmadd.s f17, f21, f1, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f21, f1, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f21, f1, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x0)
li x8, 0x30b49a9d844a1384 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x4e738f17a7363032 # load x3 with value 0x4e738f17a7363032
sw x3, 0(x2) # store 0x4e738f17a7363032 in memory
flw f6, 0(x2) # load 0x4e738f17a7363032 from memory into f6
fmadd.s f8, f31, f21, f6, dyn # perform operation
fmadd.s f8, f31, f21, f6, rdn # perform operation
fmadd.s f8, f31, f21, f6, rmm # perform operation
fmadd.s f8, f31, f21, f6, rne # perform operation
fmadd.s f8, f31, f21, f6, rtz # perform operation
fmadd.s f8, f31, f21, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f21, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f21, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000000)
li x19, 0xa81f6f951d87e534 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f17, 0(x2) # load 0x80000000 from memory into f17
li x3, 0xcf08383e8c7a4e92 # load x3 with value 0xcf08383e8c7a4e92
sw x3, 0(x2) # store 0xcf08383e8c7a4e92 in memory
flw f3, 0(x2) # load 0xcf08383e8c7a4e92 from memory into f3
fmadd.s f19, f10, f17, f3, dyn # perform operation
fmadd.s f19, f10, f17, f3, rdn # perform operation
fmadd.s f19, f10, f17, f3, rmm # perform operation
fmadd.s f19, f10, f17, f3, rne # perform operation
fmadd.s f19, f10, f17, f3, rtz # perform operation
fmadd.s f19, f10, f17, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f17, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f17, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f17, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f17, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f17, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3f800000)
li x15, 0x8a2b27f440e1431b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
li x3, 0x88dffc4dc7aa8471 # load x3 with value 0x88dffc4dc7aa8471
sw x3, 0(x2) # store 0x88dffc4dc7aa8471 in memory
flw f14, 0(x2) # load 0x88dffc4dc7aa8471 from memory into f14
fmadd.s f15, f24, f18, f14, dyn # perform operation
fmadd.s f15, f24, f18, f14, rdn # perform operation
fmadd.s f15, f24, f18, f14, rmm # perform operation
fmadd.s f15, f24, f18, f14, rne # perform operation
fmadd.s f15, f24, f18, f14, rtz # perform operation
fmadd.s f15, f24, f18, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f24, f18, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f24, f18, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f24, f18, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f24, f18, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f24, f18, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbf800000)
li x21, 0xdb508c790a13ebc2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xf3d0bc1adc645bcd # load x3 with value 0xf3d0bc1adc645bcd
sw x3, 0(x2) # store 0xf3d0bc1adc645bcd in memory
flw f3, 0(x2) # load 0xf3d0bc1adc645bcd from memory into f3
fmadd.s f21, f17, f20, f3, dyn # perform operation
fmadd.s f21, f17, f20, f3, rdn # perform operation
fmadd.s f21, f17, f20, f3, rmm # perform operation
fmadd.s f21, f17, f20, f3, rne # perform operation
fmadd.s f21, f17, f20, f3, rtz # perform operation
fmadd.s f21, f17, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f17, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f17, f20, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x3fc00000)
li x22, 0x0d36a499b984df59 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
li x3, 0xe0e3f7f0abe338 # load x3 with value 0xe0e3f7f0abe338
sw x3, 0(x2) # store 0xe0e3f7f0abe338 in memory
flw f12, 0(x2) # load 0xe0e3f7f0abe338 from memory into f12
fmadd.s f22, f21, f15, f12, dyn # perform operation
fmadd.s f22, f21, f15, f12, rdn # perform operation
fmadd.s f22, f21, f15, f12, rmm # perform operation
fmadd.s f22, f21, f15, f12, rne # perform operation
fmadd.s f22, f21, f15, f12, rtz # perform operation
fmadd.s f22, f21, f15, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f15, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f15, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xbfc00000)
li x15, 0x898068559da112ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f22, 0(x2) # load 0x7fc00000 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x9f7985680725e7a6 # load x3 with value 0x9f7985680725e7a6
sw x3, 0(x2) # store 0x9f7985680725e7a6 in memory
flw f10, 0(x2) # load 0x9f7985680725e7a6 from memory into f10
fmadd.s f15, f22, f16, f10, dyn # perform operation
fmadd.s f15, f22, f16, f10, rdn # perform operation
fmadd.s f15, f22, f16, f10, rmm # perform operation
fmadd.s f15, f22, f16, f10, rne # perform operation
fmadd.s f15, f22, f16, f10, rtz # perform operation
fmadd.s f15, f22, f16, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f22, f16, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f22, f16, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f22, f16, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f22, f16, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f22, f16, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x40000000)
li x9, 0x9a7dcddc9c96e87b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x98950e4d68ff95fc # load x3 with value 0x98950e4d68ff95fc
sw x3, 0(x2) # store 0x98950e4d68ff95fc in memory
flw f22, 0(x2) # load 0x98950e4d68ff95fc from memory into f22
fmadd.s f9, f31, f1, f22, dyn # perform operation
fmadd.s f9, f31, f1, f22, rdn # perform operation
fmadd.s f9, f31, f1, f22, rmm # perform operation
fmadd.s f9, f31, f1, f22, rne # perform operation
fmadd.s f9, f31, f1, f22, rtz # perform operation
fmadd.s f9, f31, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xc0000000)
li x21, 0x6fa0f00891bbb36f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f17, 0(x2) # load 0xc0000000 from memory into f17
li x3, 0xcf405e4fdb911520 # load x3 with value 0xcf405e4fdb911520
sw x3, 0(x2) # store 0xcf405e4fdb911520 in memory
flw f1, 0(x2) # load 0xcf405e4fdb911520 from memory into f1
fmadd.s f21, f20, f17, f1, dyn # perform operation
fmadd.s f21, f20, f17, f1, rdn # perform operation
fmadd.s f21, f20, f17, f1, rmm # perform operation
fmadd.s f21, f20, f17, f1, rne # perform operation
fmadd.s f21, f20, f17, f1, rtz # perform operation
fmadd.s f21, f20, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f20, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f20, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x800000)
li x17, 0x8db6c074a8a1531c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0x9284ff35dc6df679 # load x3 with value 0x9284ff35dc6df679
sw x3, 0(x2) # store 0x9284ff35dc6df679 in memory
flw f31, 0(x2) # load 0x9284ff35dc6df679 from memory into f31
fmadd.s f17, f27, f28, f31, dyn # perform operation
fmadd.s f17, f27, f28, f31, rdn # perform operation
fmadd.s f17, f27, f28, f31, rmm # perform operation
fmadd.s f17, f27, f28, f31, rne # perform operation
fmadd.s f17, f27, f28, f31, rtz # perform operation
fmadd.s f17, f27, f28, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f27, f28, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f27, f28, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80800000)
li x10, 0x4126e7a0cd76ba5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0xe29e622cb4f02235 # load x3 with value 0xe29e622cb4f02235
sw x3, 0(x2) # store 0xe29e622cb4f02235 in memory
flw f15, 0(x2) # load 0xe29e622cb4f02235 from memory into f15
fmadd.s f10, f24, f1, f15, dyn # perform operation
fmadd.s f10, f24, f1, f15, rdn # perform operation
fmadd.s f10, f24, f1, f15, rmm # perform operation
fmadd.s f10, f24, f1, f15, rne # perform operation
fmadd.s f10, f24, f1, f15, rtz # perform operation
fmadd.s f10, f24, f1, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f1, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f1, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f1, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f1, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f1, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f7fffff)
li x15, 0xeacda78963c30e9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xb56dc564298cfc3 # load x3 with value 0xb56dc564298cfc3
sw x3, 0(x2) # store 0xb56dc564298cfc3 in memory
flw f10, 0(x2) # load 0xb56dc564298cfc3 from memory into f10
fmadd.s f15, f8, f30, f10, dyn # perform operation
fmadd.s f15, f8, f30, f10, rdn # perform operation
fmadd.s f15, f8, f30, f10, rmm # perform operation
fmadd.s f15, f8, f30, f10, rne # perform operation
fmadd.s f15, f8, f30, f10, rtz # perform operation
fmadd.s f15, f8, f30, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f30, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f30, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff7fffff)
li x9, 0xf2f5f81752c5f7bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x28b68375fb603b4d # load x3 with value 0x28b68375fb603b4d
sw x3, 0(x2) # store 0x28b68375fb603b4d in memory
flw f31, 0(x2) # load 0x28b68375fb603b4d from memory into f31
fmadd.s f9, f30, f2, f31, dyn # perform operation
fmadd.s f9, f30, f2, f31, rdn # perform operation
fmadd.s f9, f30, f2, f31, rmm # perform operation
fmadd.s f9, f30, f2, f31, rne # perform operation
fmadd.s f9, f30, f2, f31, rtz # perform operation
fmadd.s f9, f30, f2, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f30, f2, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f30, f2, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f30, f2, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f30, f2, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f30, f2, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffff)
li x26, 0xf3f831f79dd174b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f7, 0(x2) # load 0x007fffff from memory into f7
li x3, 0x6f75404e0d08556d # load x3 with value 0x6f75404e0d08556d
sw x3, 0(x2) # store 0x6f75404e0d08556d in memory
flw f17, 0(x2) # load 0x6f75404e0d08556d from memory into f17
fmadd.s f26, f15, f7, f17, dyn # perform operation
fmadd.s f26, f15, f7, f17, rdn # perform operation
fmadd.s f26, f15, f7, f17, rmm # perform operation
fmadd.s f26, f15, f7, f17, rne # perform operation
fmadd.s f26, f15, f7, f17, rtz # perform operation
fmadd.s f26, f15, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f15, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f15, f7, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x807fffff)
li x19, 0x52daa45e56c77fba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0x50b7104973a76c02 # load x3 with value 0x50b7104973a76c02
sw x3, 0(x2) # store 0x50b7104973a76c02 in memory
flw f14, 0(x2) # load 0x50b7104973a76c02 from memory into f14
fmadd.s f19, f10, f28, f14, dyn # perform operation
fmadd.s f19, f10, f28, f14, rdn # perform operation
fmadd.s f19, f10, f28, f14, rmm # perform operation
fmadd.s f19, f10, f28, f14, rne # perform operation
fmadd.s f19, f10, f28, f14, rtz # perform operation
fmadd.s f19, f10, f28, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f28, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f28, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x400000)
li x15, 0x6efb7e7496e54df4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x24eafaa9d9aea95a # load x3 with value 0x24eafaa9d9aea95a
sw x3, 0(x2) # store 0x24eafaa9d9aea95a in memory
flw f30, 0(x2) # load 0x24eafaa9d9aea95a from memory into f30
fmadd.s f15, f28, f9, f30, dyn # perform operation
fmadd.s f15, f28, f9, f30, rdn # perform operation
fmadd.s f15, f28, f9, f30, rmm # perform operation
fmadd.s f15, f28, f9, f30, rne # perform operation
fmadd.s f15, f28, f9, f30, rtz # perform operation
fmadd.s f15, f28, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f28, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f28, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f28, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f28, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f28, f9, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80400000)
li x26, 0x61427aee8b258ecc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x8d8a00d609e7cd80 # load x3 with value 0x8d8a00d609e7cd80
sw x3, 0(x2) # store 0x8d8a00d609e7cd80 in memory
flw f4, 0(x2) # load 0x8d8a00d609e7cd80 from memory into f4
fmadd.s f26, f25, f24, f4, dyn # perform operation
fmadd.s f26, f25, f24, f4, rdn # perform operation
fmadd.s f26, f25, f24, f4, rmm # perform operation
fmadd.s f26, f25, f24, f4, rne # perform operation
fmadd.s f26, f25, f24, f4, rtz # perform operation
fmadd.s f26, f25, f24, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f25, f24, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f25, f24, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f25, f24, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f25, f24, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f25, f24, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x1)
li x26, 0xa2a4fc99136222fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f30, 0(x2) # load 0x7fc00000 from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0xf9aa8b710ffdcb71 # load x3 with value 0xf9aa8b710ffdcb71
sw x3, 0(x2) # store 0xf9aa8b710ffdcb71 in memory
flw f27, 0(x2) # load 0xf9aa8b710ffdcb71 from memory into f27
fmadd.s f26, f30, f25, f27, dyn # perform operation
fmadd.s f26, f30, f25, f27, rdn # perform operation
fmadd.s f26, f30, f25, f27, rmm # perform operation
fmadd.s f26, f30, f25, f27, rne # perform operation
fmadd.s f26, f30, f25, f27, rtz # perform operation
fmadd.s f26, f30, f25, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f25, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f25, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f25, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f25, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f25, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x80000001)
li x11, 0x8dbf2aba93f1b8d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f24, 0(x2) # load 0x7fc00000 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0xc053f68128f1486e # load x3 with value 0xc053f68128f1486e
sw x3, 0(x2) # store 0xc053f68128f1486e in memory
flw f23, 0(x2) # load 0xc053f68128f1486e from memory into f23
fmadd.s f11, f24, f12, f23, dyn # perform operation
fmadd.s f11, f24, f12, f23, rdn # perform operation
fmadd.s f11, f24, f12, f23, rmm # perform operation
fmadd.s f11, f24, f12, f23, rne # perform operation
fmadd.s f11, f24, f12, f23, rtz # perform operation
fmadd.s f11, f24, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f24, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f24, f12, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800000)
li x10, 0x810e679c5fa40f1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f7, 0(x2) # load 0x7f800000 from memory into f7
li x3, 0xf29906225e3def4 # load x3 with value 0xf29906225e3def4
sw x3, 0(x2) # store 0xf29906225e3def4 in memory
flw f20, 0(x2) # load 0xf29906225e3def4 from memory into f20
fmadd.s f10, f19, f7, f20, dyn # perform operation
fmadd.s f10, f19, f7, f20, rdn # perform operation
fmadd.s f10, f19, f7, f20, rmm # perform operation
fmadd.s f10, f19, f7, f20, rne # perform operation
fmadd.s f10, f19, f7, f20, rtz # perform operation
fmadd.s f10, f19, f7, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f7, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f7, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f7, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f7, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f7, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0xff800000)
li x10, 0x3055e143fac7833b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0xcf1f89ec004816e8 # load x3 with value 0xcf1f89ec004816e8
sw x3, 0(x2) # store 0xcf1f89ec004816e8 in memory
flw f24, 0(x2) # load 0xcf1f89ec004816e8 from memory into f24
fmadd.s f10, f3, f28, f24, dyn # perform operation
fmadd.s f10, f3, f28, f24, rdn # perform operation
fmadd.s f10, f3, f28, f24, rmm # perform operation
fmadd.s f10, f3, f28, f24, rne # perform operation
fmadd.s f10, f3, f28, f24, rtz # perform operation
fmadd.s f10, f3, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f3, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f3, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fc00000)
li x19, 0x3d6171c33607b2a4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x23df8334231aedae # load x3 with value 0x23df8334231aedae
sw x3, 0(x2) # store 0x23df8334231aedae in memory
flw f20, 0(x2) # load 0x23df8334231aedae from memory into f20
fmadd.s f19, f9, f25, f20, dyn # perform operation
fmadd.s f19, f9, f25, f20, rdn # perform operation
fmadd.s f19, f9, f25, f20, rmm # perform operation
fmadd.s f19, f9, f25, f20, rne # perform operation
fmadd.s f19, f9, f25, f20, rtz # perform operation
fmadd.s f19, f9, f25, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f25, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f25, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fffffff)
li x20, 0x216eb1dd30d24afb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x1d7ccdcd1f176da5 # load x3 with value 0x1d7ccdcd1f176da5
sw x3, 0(x2) # store 0x1d7ccdcd1f176da5 in memory
flw f17, 0(x2) # load 0x1d7ccdcd1f176da5 from memory into f17
fmadd.s f20, f25, f21, f17, dyn # perform operation
fmadd.s f20, f25, f21, f17, rdn # perform operation
fmadd.s f20, f25, f21, f17, rmm # perform operation
fmadd.s f20, f25, f21, f17, rne # perform operation
fmadd.s f20, f25, f21, f17, rtz # perform operation
fmadd.s f20, f25, f21, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f25, f21, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f25, f21, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f25, f21, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f25, f21, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f25, f21, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7f800001)
li x22, 0x9cfa19f7050f0a9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0xb98b2c8ada6be696 # load x3 with value 0xb98b2c8ada6be696
sw x3, 0(x2) # store 0xb98b2c8ada6be696 in memory
flw f25, 0(x2) # load 0xb98b2c8ada6be696 from memory into f25
fmadd.s f22, f4, f19, f25, dyn # perform operation
fmadd.s f22, f4, f19, f25, rdn # perform operation
fmadd.s f22, f4, f19, f25, rmm # perform operation
fmadd.s f22, f4, f19, f25, rne # perform operation
fmadd.s f22, f4, f19, f25, rtz # perform operation
fmadd.s f22, f4, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f4, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f4, f19, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7fbfffff)
li x20, 0x09a383275661ee00 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x165c0c2ad7676ed # load x3 with value 0x165c0c2ad7676ed
sw x3, 0(x2) # store 0x165c0c2ad7676ed in memory
flw f12, 0(x2) # load 0x165c0c2ad7676ed from memory into f12
fmadd.s f20, f18, f7, f12, dyn # perform operation
fmadd.s f20, f18, f7, f12, rdn # perform operation
fmadd.s f20, f18, f7, f12, rmm # perform operation
fmadd.s f20, f18, f7, f12, rne # perform operation
fmadd.s f20, f18, f7, f12, rtz # perform operation
fmadd.s f20, f18, f7, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f7, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f7, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x7ef8654f)
li x31, 0xb8619ff145a69fdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x526651ffbb06e467 # load x3 with value 0x526651ffbb06e467
sw x3, 0(x2) # store 0x526651ffbb06e467 in memory
flw f20, 0(x2) # load 0x526651ffbb06e467 from memory into f20
fmadd.s f31, f29, f15, f20, dyn # perform operation
fmadd.s f31, f29, f15, f20, rdn # perform operation
fmadd.s f31, f29, f15, f20, rmm # perform operation
fmadd.s f31, f29, f15, f20, rne # perform operation
fmadd.s f31, f29, f15, f20, rtz # perform operation
fmadd.s f31, f29, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f29, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f29, f15, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fc00000 fs2 = 0x813d9ab0)
li x13, 0x8859ccc018f62eb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x17efc9f680670135 # load x3 with value 0x17efc9f680670135
sw x3, 0(x2) # store 0x17efc9f680670135 in memory
flw f22, 0(x2) # load 0x17efc9f680670135 from memory into f22
fmadd.s f13, f8, f1, f22, dyn # perform operation
fmadd.s f13, f8, f1, f22, rdn # perform operation
fmadd.s f13, f8, f1, f22, rmm # perform operation
fmadd.s f13, f8, f1, f22, rne # perform operation
fmadd.s f13, f8, f1, f22, rtz # perform operation
fmadd.s f13, f8, f1, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f1, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f1, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x0)
li x22, 0xd4697f4cb206a737 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f24, 0(x2) # load 0x7fffffff from memory into f24
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0xd4dbdd7061ec6b4a # load x3 with value 0xd4dbdd7061ec6b4a
sw x3, 0(x2) # store 0xd4dbdd7061ec6b4a in memory
flw f28, 0(x2) # load 0xd4dbdd7061ec6b4a from memory into f28
fmadd.s f22, f24, f3, f28, dyn # perform operation
fmadd.s f22, f24, f3, f28, rdn # perform operation
fmadd.s f22, f24, f3, f28, rmm # perform operation
fmadd.s f22, f24, f3, f28, rne # perform operation
fmadd.s f22, f24, f3, f28, rtz # perform operation
fmadd.s f22, f24, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000000)
li x20, 0xc307d8a4c839431e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
li x3, 0xa5853de75f9249b7 # load x3 with value 0xa5853de75f9249b7
sw x3, 0(x2) # store 0xa5853de75f9249b7 in memory
flw f28, 0(x2) # load 0xa5853de75f9249b7 from memory into f28
fmadd.s f20, f4, f19, f28, dyn # perform operation
fmadd.s f20, f4, f19, f28, rdn # perform operation
fmadd.s f20, f4, f19, f28, rmm # perform operation
fmadd.s f20, f4, f19, f28, rne # perform operation
fmadd.s f20, f4, f19, f28, rtz # perform operation
fmadd.s f20, f4, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f4, f19, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3f800000)
li x22, 0x02d12dd943ee8014 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
li x3, 0xb0ba740fd656bf0f # load x3 with value 0xb0ba740fd656bf0f
sw x3, 0(x2) # store 0xb0ba740fd656bf0f in memory
flw f16, 0(x2) # load 0xb0ba740fd656bf0f from memory into f16
fmadd.s f22, f18, f1, f16, dyn # perform operation
fmadd.s f22, f18, f1, f16, rdn # perform operation
fmadd.s f22, f18, f1, f16, rmm # perform operation
fmadd.s f22, f18, f1, f16, rne # perform operation
fmadd.s f22, f18, f1, f16, rtz # perform operation
fmadd.s f22, f18, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f18, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f18, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f18, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f18, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f18, f1, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbf800000)
li x23, 0x1a56cd7911122ad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xc558c206899547fa # load x3 with value 0xc558c206899547fa
sw x3, 0(x2) # store 0xc558c206899547fa in memory
flw f26, 0(x2) # load 0xc558c206899547fa from memory into f26
fmadd.s f23, f7, f22, f26, dyn # perform operation
fmadd.s f23, f7, f22, f26, rdn # perform operation
fmadd.s f23, f7, f22, f26, rmm # perform operation
fmadd.s f23, f7, f22, f26, rne # perform operation
fmadd.s f23, f7, f22, f26, rtz # perform operation
fmadd.s f23, f7, f22, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f7, f22, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f7, f22, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f7, f22, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f7, f22, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f7, f22, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x3fc00000)
li x29, 0x633c4e5fff46cf35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f13, 0(x2) # load 0x3fc00000 from memory into f13
li x3, 0xca299ae4c784ae1d # load x3 with value 0xca299ae4c784ae1d
sw x3, 0(x2) # store 0xca299ae4c784ae1d in memory
flw f27, 0(x2) # load 0xca299ae4c784ae1d from memory into f27
fmadd.s f29, f21, f13, f27, dyn # perform operation
fmadd.s f29, f21, f13, f27, rdn # perform operation
fmadd.s f29, f21, f13, f27, rmm # perform operation
fmadd.s f29, f21, f13, f27, rne # perform operation
fmadd.s f29, f21, f13, f27, rtz # perform operation
fmadd.s f29, f21, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f21, f13, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xbfc00000)
li x15, 0x94dbe36e4a0198f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f18, 0(x2) # load 0xbfc00000 from memory into f18
li x3, 0x5d54bb4cf496c7e5 # load x3 with value 0x5d54bb4cf496c7e5
sw x3, 0(x2) # store 0x5d54bb4cf496c7e5 in memory
flw f10, 0(x2) # load 0x5d54bb4cf496c7e5 from memory into f10
fmadd.s f15, f14, f18, f10, dyn # perform operation
fmadd.s f15, f14, f18, f10, rdn # perform operation
fmadd.s f15, f14, f18, f10, rmm # perform operation
fmadd.s f15, f14, f18, f10, rne # perform operation
fmadd.s f15, f14, f18, f10, rtz # perform operation
fmadd.s f15, f14, f18, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f18, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f18, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x40000000)
li x19, 0x5c0065bf7f68fc18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f27, 0(x2) # load 0x7fffffff from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0xbb8802fe6a64c8ac # load x3 with value 0xbb8802fe6a64c8ac
sw x3, 0(x2) # store 0xbb8802fe6a64c8ac in memory
flw f2, 0(x2) # load 0xbb8802fe6a64c8ac from memory into f2
fmadd.s f19, f27, f7, f2, dyn # perform operation
fmadd.s f19, f27, f7, f2, rdn # perform operation
fmadd.s f19, f27, f7, f2, rmm # perform operation
fmadd.s f19, f27, f7, f2, rne # perform operation
fmadd.s f19, f27, f7, f2, rtz # perform operation
fmadd.s f19, f27, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f7, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xc0000000)
li x14, 0x1789c58bc7b7a870 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0x17d20acf8ca587ff # load x3 with value 0x17d20acf8ca587ff
sw x3, 0(x2) # store 0x17d20acf8ca587ff in memory
flw f8, 0(x2) # load 0x17d20acf8ca587ff from memory into f8
fmadd.s f14, f7, f28, f8, dyn # perform operation
fmadd.s f14, f7, f28, f8, rdn # perform operation
fmadd.s f14, f7, f28, f8, rmm # perform operation
fmadd.s f14, f7, f28, f8, rne # perform operation
fmadd.s f14, f7, f28, f8, rtz # perform operation
fmadd.s f14, f7, f28, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f7, f28, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f7, f28, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x800000)
li x5, 0xd5bb1f9d91cf1980 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0xefff158a2e75fa65 # load x3 with value 0xefff158a2e75fa65
sw x3, 0(x2) # store 0xefff158a2e75fa65 in memory
flw f28, 0(x2) # load 0xefff158a2e75fa65 from memory into f28
fmadd.s f5, f4, f24, f28, dyn # perform operation
fmadd.s f5, f4, f24, f28, rdn # perform operation
fmadd.s f5, f4, f24, f28, rmm # perform operation
fmadd.s f5, f4, f24, f28, rne # perform operation
fmadd.s f5, f4, f24, f28, rtz # perform operation
fmadd.s f5, f4, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f4, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f4, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f4, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f4, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f4, f24, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80800000)
li x22, 0x3232a2b6efb8b6aa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0xd2654615cb4c0370 # load x3 with value 0xd2654615cb4c0370
sw x3, 0(x2) # store 0xd2654615cb4c0370 in memory
flw f11, 0(x2) # load 0xd2654615cb4c0370 from memory into f11
fmadd.s f22, f21, f24, f11, dyn # perform operation
fmadd.s f22, f21, f24, f11, rdn # perform operation
fmadd.s f22, f21, f24, f11, rmm # perform operation
fmadd.s f22, f21, f24, f11, rne # perform operation
fmadd.s f22, f21, f24, f11, rtz # perform operation
fmadd.s f22, f21, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f7fffff)
li x5, 0x7cbe749721ca9b2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f11, 0(x2) # load 0x7f7fffff from memory into f11
li x3, 0xf854180ac566bd73 # load x3 with value 0xf854180ac566bd73
sw x3, 0(x2) # store 0xf854180ac566bd73 in memory
flw f10, 0(x2) # load 0xf854180ac566bd73 from memory into f10
fmadd.s f5, f15, f11, f10, dyn # perform operation
fmadd.s f5, f15, f11, f10, rdn # perform operation
fmadd.s f5, f15, f11, f10, rmm # perform operation
fmadd.s f5, f15, f11, f10, rne # perform operation
fmadd.s f5, f15, f11, f10, rtz # perform operation
fmadd.s f5, f15, f11, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f11, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f11, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff7fffff)
li x6, 0x2ec671e8e99aed01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0xcd641fffb99f2ea9 # load x3 with value 0xcd641fffb99f2ea9
sw x3, 0(x2) # store 0xcd641fffb99f2ea9 in memory
flw f21, 0(x2) # load 0xcd641fffb99f2ea9 from memory into f21
fmadd.s f6, f30, f29, f21, dyn # perform operation
fmadd.s f6, f30, f29, f21, rdn # perform operation
fmadd.s f6, f30, f29, f21, rmm # perform operation
fmadd.s f6, f30, f29, f21, rne # perform operation
fmadd.s f6, f30, f29, f21, rtz # perform operation
fmadd.s f6, f30, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f30, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f30, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f30, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f30, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f30, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffff)
li x26, 0xf0eddb0a7ffc91a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f8, 0(x2) # load 0x007fffff from memory into f8
li x3, 0xd2137d1b6c8f68ad # load x3 with value 0xd2137d1b6c8f68ad
sw x3, 0(x2) # store 0xd2137d1b6c8f68ad in memory
flw f24, 0(x2) # load 0xd2137d1b6c8f68ad from memory into f24
fmadd.s f26, f22, f8, f24, dyn # perform operation
fmadd.s f26, f22, f8, f24, rdn # perform operation
fmadd.s f26, f22, f8, f24, rmm # perform operation
fmadd.s f26, f22, f8, f24, rne # perform operation
fmadd.s f26, f22, f8, f24, rtz # perform operation
fmadd.s f26, f22, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x807fffff)
li x21, 0x11903ec7dc6cde35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x1300a187b46e444c # load x3 with value 0x1300a187b46e444c
sw x3, 0(x2) # store 0x1300a187b46e444c in memory
flw f26, 0(x2) # load 0x1300a187b46e444c from memory into f26
fmadd.s f21, f14, f24, f26, dyn # perform operation
fmadd.s f21, f14, f24, f26, rdn # perform operation
fmadd.s f21, f14, f24, f26, rmm # perform operation
fmadd.s f21, f14, f24, f26, rne # perform operation
fmadd.s f21, f14, f24, f26, rtz # perform operation
fmadd.s f21, f14, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f24, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x400000)
li x3, 0x5f0cfa4af692a0de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x66ac8767b3d19819 # load x3 with value 0x66ac8767b3d19819
sw x3, 0(x2) # store 0x66ac8767b3d19819 in memory
flw f4, 0(x2) # load 0x66ac8767b3d19819 from memory into f4
fmadd.s f3, f16, f17, f4, dyn # perform operation
fmadd.s f3, f16, f17, f4, rdn # perform operation
fmadd.s f3, f16, f17, f4, rmm # perform operation
fmadd.s f3, f16, f17, f4, rne # perform operation
fmadd.s f3, f16, f17, f4, rtz # perform operation
fmadd.s f3, f16, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f17, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80400000)
li x14, 0x632cc22031a95cd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f6, 0(x2) # load 0x7fffffff from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0x82c18138a610a210 # load x3 with value 0x82c18138a610a210
sw x3, 0(x2) # store 0x82c18138a610a210 in memory
flw f7, 0(x2) # load 0x82c18138a610a210 from memory into f7
fmadd.s f14, f6, f8, f7, dyn # perform operation
fmadd.s f14, f6, f8, f7, rdn # perform operation
fmadd.s f14, f6, f8, f7, rmm # perform operation
fmadd.s f14, f6, f8, f7, rne # perform operation
fmadd.s f14, f6, f8, f7, rtz # perform operation
fmadd.s f14, f6, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f6, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f6, f8, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x1)
li x28, 0xfd633c364a1304dd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xf8eb3bb6ee89d6eb # load x3 with value 0xf8eb3bb6ee89d6eb
sw x3, 0(x2) # store 0xf8eb3bb6ee89d6eb in memory
flw f31, 0(x2) # load 0xf8eb3bb6ee89d6eb from memory into f31
fmadd.s f28, f16, f13, f31, dyn # perform operation
fmadd.s f28, f16, f13, f31, rdn # perform operation
fmadd.s f28, f16, f13, f31, rmm # perform operation
fmadd.s f28, f16, f13, f31, rne # perform operation
fmadd.s f28, f16, f13, f31, rtz # perform operation
fmadd.s f28, f16, f13, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f16, f13, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f16, f13, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f16, f13, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f16, f13, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f16, f13, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x80000001)
li x26, 0xc491373f6ad34d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f28, 0(x2) # load 0x80000001 from memory into f28
li x3, 0x17b9345ed95c91ae # load x3 with value 0x17b9345ed95c91ae
sw x3, 0(x2) # store 0x17b9345ed95c91ae in memory
flw f24, 0(x2) # load 0x17b9345ed95c91ae from memory into f24
fmadd.s f26, f19, f28, f24, dyn # perform operation
fmadd.s f26, f19, f28, f24, rdn # perform operation
fmadd.s f26, f19, f28, f24, rmm # perform operation
fmadd.s f26, f19, f28, f24, rne # perform operation
fmadd.s f26, f19, f28, f24, rtz # perform operation
fmadd.s f26, f19, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f19, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f19, f28, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800000)
li x2, 0xad8fb101876d248e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f10, 0(x2) # load 0x7fffffff from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x188f092783a218d8 # load x3 with value 0x188f092783a218d8
sw x3, 0(x2) # store 0x188f092783a218d8 in memory
flw f14, 0(x2) # load 0x188f092783a218d8 from memory into f14
fmadd.s f2, f10, f5, f14, dyn # perform operation
fmadd.s f2, f10, f5, f14, rdn # perform operation
fmadd.s f2, f10, f5, f14, rmm # perform operation
fmadd.s f2, f10, f5, f14, rne # perform operation
fmadd.s f2, f10, f5, f14, rtz # perform operation
fmadd.s f2, f10, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f5, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0xff800000)
li x21, 0xea5417220c22dd1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
li x3, 0x8ced2e2940c5a606 # load x3 with value 0x8ced2e2940c5a606
sw x3, 0(x2) # store 0x8ced2e2940c5a606 in memory
flw f26, 0(x2) # load 0x8ced2e2940c5a606 from memory into f26
fmadd.s f21, f19, f17, f26, dyn # perform operation
fmadd.s f21, f19, f17, f26, rdn # perform operation
fmadd.s f21, f19, f17, f26, rmm # perform operation
fmadd.s f21, f19, f17, f26, rne # perform operation
fmadd.s f21, f19, f17, f26, rtz # perform operation
fmadd.s f21, f19, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f19, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f19, f17, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fc00000)
li x10, 0xf9dcb034a8033377 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x2bb2e37b6ac51c16 # load x3 with value 0x2bb2e37b6ac51c16
sw x3, 0(x2) # store 0x2bb2e37b6ac51c16 in memory
flw f2, 0(x2) # load 0x2bb2e37b6ac51c16 from memory into f2
fmadd.s f10, f7, f12, f2, dyn # perform operation
fmadd.s f10, f7, f12, f2, rdn # perform operation
fmadd.s f10, f7, f12, f2, rmm # perform operation
fmadd.s f10, f7, f12, f2, rne # perform operation
fmadd.s f10, f7, f12, f2, rtz # perform operation
fmadd.s f10, f7, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f7, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f7, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f7, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f7, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f7, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fffffff)
li x3, 0xfe554102fddb6c22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x97cd8ee1f168b9b6 # load x3 with value 0x97cd8ee1f168b9b6
sw x3, 0(x2) # store 0x97cd8ee1f168b9b6 in memory
flw f20, 0(x2) # load 0x97cd8ee1f168b9b6 from memory into f20
fmadd.s f3, f8, f12, f20, dyn # perform operation
fmadd.s f3, f8, f12, f20, rdn # perform operation
fmadd.s f3, f8, f12, f20, rmm # perform operation
fmadd.s f3, f8, f12, f20, rne # perform operation
fmadd.s f3, f8, f12, f20, rtz # perform operation
fmadd.s f3, f8, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f8, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f8, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f8, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f8, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f8, f12, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7f800001)
li x3, 0x68f4323b33461b26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f6, 0(x2) # load 0x7f800001 from memory into f6
li x3, 0x66c238826b6c65ba # load x3 with value 0x66c238826b6c65ba
sw x3, 0(x2) # store 0x66c238826b6c65ba in memory
flw f14, 0(x2) # load 0x66c238826b6c65ba from memory into f14
fmadd.s f3, f12, f6, f14, dyn # perform operation
fmadd.s f3, f12, f6, f14, rdn # perform operation
fmadd.s f3, f12, f6, f14, rmm # perform operation
fmadd.s f3, f12, f6, f14, rne # perform operation
fmadd.s f3, f12, f6, f14, rtz # perform operation
fmadd.s f3, f12, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f6, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7fbfffff)
li x19, 0x79917c11c80aea03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f31, 0(x2) # load 0x7fffffff from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0x66adc5b665ef701a # load x3 with value 0x66adc5b665ef701a
sw x3, 0(x2) # store 0x66adc5b665ef701a in memory
flw f16, 0(x2) # load 0x66adc5b665ef701a from memory into f16
fmadd.s f19, f31, f20, f16, dyn # perform operation
fmadd.s f19, f31, f20, f16, rdn # perform operation
fmadd.s f19, f31, f20, f16, rmm # perform operation
fmadd.s f19, f31, f20, f16, rne # perform operation
fmadd.s f19, f31, f20, f16, rtz # perform operation
fmadd.s f19, f31, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f31, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f31, f20, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x7ef8654f)
li x21, 0xa85a70ca808ed8f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0xa5288d894d14dd59 # load x3 with value 0xa5288d894d14dd59
sw x3, 0(x2) # store 0xa5288d894d14dd59 in memory
flw f25, 0(x2) # load 0xa5288d894d14dd59 from memory into f25
fmadd.s f21, f4, f23, f25, dyn # perform operation
fmadd.s f21, f4, f23, f25, rdn # perform operation
fmadd.s f21, f4, f23, f25, rmm # perform operation
fmadd.s f21, f4, f23, f25, rne # perform operation
fmadd.s f21, f4, f23, f25, rtz # perform operation
fmadd.s f21, f4, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f4, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f4, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f4, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f4, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f4, f23, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fffffff fs2 = 0x813d9ab0)
li x30, 0x0405e12781e81941 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f13, 0(x2) # load 0x813d9ab0 from memory into f13
li x3, 0xd419238695454fc6 # load x3 with value 0xd419238695454fc6
sw x3, 0(x2) # store 0xd419238695454fc6 in memory
flw f8, 0(x2) # load 0xd419238695454fc6 from memory into f8
fmadd.s f30, f17, f13, f8, dyn # perform operation
fmadd.s f30, f17, f13, f8, rdn # perform operation
fmadd.s f30, f17, f13, f8, rmm # perform operation
fmadd.s f30, f17, f13, f8, rne # perform operation
fmadd.s f30, f17, f13, f8, rtz # perform operation
fmadd.s f30, f17, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f13, f8 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x0)
li x17, 0xeb25430898b4fd03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0x447b2d7e4c2a1bdf # load x3 with value 0x447b2d7e4c2a1bdf
sw x3, 0(x2) # store 0x447b2d7e4c2a1bdf in memory
flw f20, 0(x2) # load 0x447b2d7e4c2a1bdf from memory into f20
fmadd.s f17, f9, f4, f20, dyn # perform operation
fmadd.s f17, f9, f4, f20, rdn # perform operation
fmadd.s f17, f9, f4, f20, rmm # perform operation
fmadd.s f17, f9, f4, f20, rne # perform operation
fmadd.s f17, f9, f4, f20, rtz # perform operation
fmadd.s f17, f9, f4, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f4, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f4, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000000)
li x17, 0xae8e89aef37fd8a0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
li x3, 0xf6711730211de3f1 # load x3 with value 0xf6711730211de3f1
sw x3, 0(x2) # store 0xf6711730211de3f1 in memory
flw f10, 0(x2) # load 0xf6711730211de3f1 from memory into f10
fmadd.s f17, f30, f9, f10, dyn # perform operation
fmadd.s f17, f30, f9, f10, rdn # perform operation
fmadd.s f17, f30, f9, f10, rmm # perform operation
fmadd.s f17, f30, f9, f10, rne # perform operation
fmadd.s f17, f30, f9, f10, rtz # perform operation
fmadd.s f17, f30, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f9, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3f800000)
li x27, 0xc19be22ff8acaea0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f4, 0(x2) # load 0x3f800000 from memory into f4
li x3, 0xb501509ea043f956 # load x3 with value 0xb501509ea043f956
sw x3, 0(x2) # store 0xb501509ea043f956 in memory
flw f28, 0(x2) # load 0xb501509ea043f956 from memory into f28
fmadd.s f27, f20, f4, f28, dyn # perform operation
fmadd.s f27, f20, f4, f28, rdn # perform operation
fmadd.s f27, f20, f4, f28, rmm # perform operation
fmadd.s f27, f20, f4, f28, rne # perform operation
fmadd.s f27, f20, f4, f28, rtz # perform operation
fmadd.s f27, f20, f4, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f4, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f4, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbf800000)
li x29, 0x81c0d11d48af4505 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
li x3, 0x9e6c2f76d26d0dc1 # load x3 with value 0x9e6c2f76d26d0dc1
sw x3, 0(x2) # store 0x9e6c2f76d26d0dc1 in memory
flw f1, 0(x2) # load 0x9e6c2f76d26d0dc1 from memory into f1
fmadd.s f29, f4, f17, f1, dyn # perform operation
fmadd.s f29, f4, f17, f1, rdn # perform operation
fmadd.s f29, f4, f17, f1, rmm # perform operation
fmadd.s f29, f4, f17, f1, rne # perform operation
fmadd.s f29, f4, f17, f1, rtz # perform operation
fmadd.s f29, f4, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f4, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f4, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f4, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f4, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f4, f17, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x3fc00000)
li x12, 0x253ec33b413dffbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f9, 0(x2) # load 0x3fc00000 from memory into f9
li x3, 0x65d7d8d41212dd67 # load x3 with value 0x65d7d8d41212dd67
sw x3, 0(x2) # store 0x65d7d8d41212dd67 in memory
flw f16, 0(x2) # load 0x65d7d8d41212dd67 from memory into f16
fmadd.s f12, f23, f9, f16, dyn # perform operation
fmadd.s f12, f23, f9, f16, rdn # perform operation
fmadd.s f12, f23, f9, f16, rmm # perform operation
fmadd.s f12, f23, f9, f16, rne # perform operation
fmadd.s f12, f23, f9, f16, rtz # perform operation
fmadd.s f12, f23, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f23, f9, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xbfc00000)
li x8, 0xab40b26742e6616c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x98e953872dc592d1 # load x3 with value 0x98e953872dc592d1
sw x3, 0(x2) # store 0x98e953872dc592d1 in memory
flw f9, 0(x2) # load 0x98e953872dc592d1 from memory into f9
fmadd.s f8, f24, f28, f9, dyn # perform operation
fmadd.s f8, f24, f28, f9, rdn # perform operation
fmadd.s f8, f24, f28, f9, rmm # perform operation
fmadd.s f8, f24, f28, f9, rne # perform operation
fmadd.s f8, f24, f28, f9, rtz # perform operation
fmadd.s f8, f24, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x40000000)
li x1, 0x7ff1de13587a15d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x788a7fc82757c4f7 # load x3 with value 0x788a7fc82757c4f7
sw x3, 0(x2) # store 0x788a7fc82757c4f7 in memory
flw f17, 0(x2) # load 0x788a7fc82757c4f7 from memory into f17
fmadd.s f1, f29, f26, f17, dyn # perform operation
fmadd.s f1, f29, f26, f17, rdn # perform operation
fmadd.s f1, f29, f26, f17, rmm # perform operation
fmadd.s f1, f29, f26, f17, rne # perform operation
fmadd.s f1, f29, f26, f17, rtz # perform operation
fmadd.s f1, f29, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f29, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f29, f26, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xc0000000)
li x29, 0x4d3c02fae161b3d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x775bc38e9a0254d2 # load x3 with value 0x775bc38e9a0254d2
sw x3, 0(x2) # store 0x775bc38e9a0254d2 in memory
flw f3, 0(x2) # load 0x775bc38e9a0254d2 from memory into f3
fmadd.s f29, f9, f13, f3, dyn # perform operation
fmadd.s f29, f9, f13, f3, rdn # perform operation
fmadd.s f29, f9, f13, f3, rmm # perform operation
fmadd.s f29, f9, f13, f3, rne # perform operation
fmadd.s f29, f9, f13, f3, rtz # perform operation
fmadd.s f29, f9, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f9, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f9, f13, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x800000)
li x1, 0x0fcc6f7f81714962 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xcc2cfa9527ce088b # load x3 with value 0xcc2cfa9527ce088b
sw x3, 0(x2) # store 0xcc2cfa9527ce088b in memory
flw f6, 0(x2) # load 0xcc2cfa9527ce088b from memory into f6
fmadd.s f1, f3, f25, f6, dyn # perform operation
fmadd.s f1, f3, f25, f6, rdn # perform operation
fmadd.s f1, f3, f25, f6, rmm # perform operation
fmadd.s f1, f3, f25, f6, rne # perform operation
fmadd.s f1, f3, f25, f6, rtz # perform operation
fmadd.s f1, f3, f25, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f3, f25, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f3, f25, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f3, f25, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f3, f25, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f3, f25, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80800000)
li x21, 0xaf96f9e1301dab6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f8, 0(x2) # load 0x7f800001 from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x44cdd974a4b2d0ec # load x3 with value 0x44cdd974a4b2d0ec
sw x3, 0(x2) # store 0x44cdd974a4b2d0ec in memory
flw f25, 0(x2) # load 0x44cdd974a4b2d0ec from memory into f25
fmadd.s f21, f8, f24, f25, dyn # perform operation
fmadd.s f21, f8, f24, f25, rdn # perform operation
fmadd.s f21, f8, f24, f25, rmm # perform operation
fmadd.s f21, f8, f24, f25, rne # perform operation
fmadd.s f21, f8, f24, f25, rtz # perform operation
fmadd.s f21, f8, f24, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f24, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f24, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f24, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f24, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f24, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f7fffff)
li x17, 0x0d60a1d8949c71c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x37c3146b89cfa974 # load x3 with value 0x37c3146b89cfa974
sw x3, 0(x2) # store 0x37c3146b89cfa974 in memory
flw f30, 0(x2) # load 0x37c3146b89cfa974 from memory into f30
fmadd.s f17, f1, f16, f30, dyn # perform operation
fmadd.s f17, f1, f16, f30, rdn # perform operation
fmadd.s f17, f1, f16, f30, rmm # perform operation
fmadd.s f17, f1, f16, f30, rne # perform operation
fmadd.s f17, f1, f16, f30, rtz # perform operation
fmadd.s f17, f1, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff7fffff)
li x12, 0x9043eaad0d7fc744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
li x3, 0xfd6e451e6849a3fb # load x3 with value 0xfd6e451e6849a3fb
sw x3, 0(x2) # store 0xfd6e451e6849a3fb in memory
flw f31, 0(x2) # load 0xfd6e451e6849a3fb from memory into f31
fmadd.s f12, f26, f9, f31, dyn # perform operation
fmadd.s f12, f26, f9, f31, rdn # perform operation
fmadd.s f12, f26, f9, f31, rmm # perform operation
fmadd.s f12, f26, f9, f31, rne # perform operation
fmadd.s f12, f26, f9, f31, rtz # perform operation
fmadd.s f12, f26, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f26, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f26, f9, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffff)
li x30, 0xffda78dd626edf79 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x2afe8be1969890a # load x3 with value 0x2afe8be1969890a
sw x3, 0(x2) # store 0x2afe8be1969890a in memory
flw f4, 0(x2) # load 0x2afe8be1969890a from memory into f4
fmadd.s f30, f11, f23, f4, dyn # perform operation
fmadd.s f30, f11, f23, f4, rdn # perform operation
fmadd.s f30, f11, f23, f4, rmm # perform operation
fmadd.s f30, f11, f23, f4, rne # perform operation
fmadd.s f30, f11, f23, f4, rtz # perform operation
fmadd.s f30, f11, f23, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f23, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f23, f4 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x807fffff)
li x12, 0xa4d8adcc2549c6b7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x3b83a003025bebee # load x3 with value 0x3b83a003025bebee
sw x3, 0(x2) # store 0x3b83a003025bebee in memory
flw f28, 0(x2) # load 0x3b83a003025bebee from memory into f28
fmadd.s f12, f10, f30, f28, dyn # perform operation
fmadd.s f12, f10, f30, f28, rdn # perform operation
fmadd.s f12, f10, f30, f28, rmm # perform operation
fmadd.s f12, f10, f30, f28, rne # perform operation
fmadd.s f12, f10, f30, f28, rtz # perform operation
fmadd.s f12, f10, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f30, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x400000)
li x18, 0xd09c62490fc22ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x820ff0a57ff88549 # load x3 with value 0x820ff0a57ff88549
sw x3, 0(x2) # store 0x820ff0a57ff88549 in memory
flw f26, 0(x2) # load 0x820ff0a57ff88549 from memory into f26
fmadd.s f18, f10, f8, f26, dyn # perform operation
fmadd.s f18, f10, f8, f26, rdn # perform operation
fmadd.s f18, f10, f8, f26, rmm # perform operation
fmadd.s f18, f10, f8, f26, rne # perform operation
fmadd.s f18, f10, f8, f26, rtz # perform operation
fmadd.s f18, f10, f8, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f10, f8, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f10, f8, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80400000)
li x7, 0x296cb23c6bb8a690 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x43e856be23e9590d # load x3 with value 0x43e856be23e9590d
sw x3, 0(x2) # store 0x43e856be23e9590d in memory
flw f30, 0(x2) # load 0x43e856be23e9590d from memory into f30
fmadd.s f7, f19, f11, f30, dyn # perform operation
fmadd.s f7, f19, f11, f30, rdn # perform operation
fmadd.s f7, f19, f11, f30, rmm # perform operation
fmadd.s f7, f19, f11, f30, rne # perform operation
fmadd.s f7, f19, f11, f30, rtz # perform operation
fmadd.s f7, f19, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f19, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f19, f11, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x1)
li x1, 0x63963f1dda6dafac # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x73f89a2189ae57c5 # load x3 with value 0x73f89a2189ae57c5
sw x3, 0(x2) # store 0x73f89a2189ae57c5 in memory
flw f7, 0(x2) # load 0x73f89a2189ae57c5 from memory into f7
fmadd.s f1, f11, f16, f7, dyn # perform operation
fmadd.s f1, f11, f16, f7, rdn # perform operation
fmadd.s f1, f11, f16, f7, rmm # perform operation
fmadd.s f1, f11, f16, f7, rne # perform operation
fmadd.s f1, f11, f16, f7, rtz # perform operation
fmadd.s f1, f11, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f11, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f11, f16, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x80000001)
li x2, 0x26ab333c46cde744 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f10, 0(x2) # load 0x7f800001 from memory into f10
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x6e2fc8528da5e29f # load x3 with value 0x6e2fc8528da5e29f
sw x3, 0(x2) # store 0x6e2fc8528da5e29f in memory
flw f14, 0(x2) # load 0x6e2fc8528da5e29f from memory into f14
fmadd.s f2, f10, f9, f14, dyn # perform operation
fmadd.s f2, f10, f9, f14, rdn # perform operation
fmadd.s f2, f10, f9, f14, rmm # perform operation
fmadd.s f2, f10, f9, f14, rne # perform operation
fmadd.s f2, f10, f9, f14, rtz # perform operation
fmadd.s f2, f10, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f9, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800000)
li x28, 0x07361dfee940051b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
li x3, 0x9d19cb3f7dd78be6 # load x3 with value 0x9d19cb3f7dd78be6
sw x3, 0(x2) # store 0x9d19cb3f7dd78be6 in memory
flw f12, 0(x2) # load 0x9d19cb3f7dd78be6 from memory into f12
fmadd.s f28, f14, f13, f12, dyn # perform operation
fmadd.s f28, f14, f13, f12, rdn # perform operation
fmadd.s f28, f14, f13, f12, rmm # perform operation
fmadd.s f28, f14, f13, f12, rne # perform operation
fmadd.s f28, f14, f13, f12, rtz # perform operation
fmadd.s f28, f14, f13, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f14, f13, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f14, f13, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0xff800000)
li x14, 0x4a22fc14f2634950 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f4, 0(x2) # load 0xff800000 from memory into f4
li x3, 0xf6e682fcd1f99de1 # load x3 with value 0xf6e682fcd1f99de1
sw x3, 0(x2) # store 0xf6e682fcd1f99de1 in memory
flw f23, 0(x2) # load 0xf6e682fcd1f99de1 from memory into f23
fmadd.s f14, f24, f4, f23, dyn # perform operation
fmadd.s f14, f24, f4, f23, rdn # perform operation
fmadd.s f14, f24, f4, f23, rmm # perform operation
fmadd.s f14, f24, f4, f23, rne # perform operation
fmadd.s f14, f24, f4, f23, rtz # perform operation
fmadd.s f14, f24, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f4, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fc00000)
li x17, 0xa1ade450809614b1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f4, 0(x2) # load 0x7f800001 from memory into f4
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0xb3565756123438b # load x3 with value 0xb3565756123438b
sw x3, 0(x2) # store 0xb3565756123438b in memory
flw f2, 0(x2) # load 0xb3565756123438b from memory into f2
fmadd.s f17, f4, f12, f2, dyn # perform operation
fmadd.s f17, f4, f12, f2, rdn # perform operation
fmadd.s f17, f4, f12, f2, rmm # perform operation
fmadd.s f17, f4, f12, f2, rne # perform operation
fmadd.s f17, f4, f12, f2, rtz # perform operation
fmadd.s f17, f4, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f4, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f4, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fffffff)
li x1, 0x167015271888d934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xc52bad744751ebff # load x3 with value 0xc52bad744751ebff
sw x3, 0(x2) # store 0xc52bad744751ebff in memory
flw f13, 0(x2) # load 0xc52bad744751ebff from memory into f13
fmadd.s f1, f22, f8, f13, dyn # perform operation
fmadd.s f1, f22, f8, f13, rdn # perform operation
fmadd.s f1, f22, f8, f13, rmm # perform operation
fmadd.s f1, f22, f8, f13, rne # perform operation
fmadd.s f1, f22, f8, f13, rtz # perform operation
fmadd.s f1, f22, f8, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f8, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f8, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7f800001)
li x20, 0xc9c826733bf75a74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f22, 0(x2) # load 0x7f800001 from memory into f22
li x3, 0x129df2c41515ec5a # load x3 with value 0x129df2c41515ec5a
sw x3, 0(x2) # store 0x129df2c41515ec5a in memory
flw f28, 0(x2) # load 0x129df2c41515ec5a from memory into f28
fmadd.s f20, f12, f22, f28, dyn # perform operation
fmadd.s f20, f12, f22, f28, rdn # perform operation
fmadd.s f20, f12, f22, f28, rmm # perform operation
fmadd.s f20, f12, f22, f28, rne # perform operation
fmadd.s f20, f12, f22, f28, rtz # perform operation
fmadd.s f20, f12, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f12, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f12, f22, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7fbfffff)
li x31, 0x402ec8942395519e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0xd7fc8246f74a3f40 # load x3 with value 0xd7fc8246f74a3f40
sw x3, 0(x2) # store 0xd7fc8246f74a3f40 in memory
flw f25, 0(x2) # load 0xd7fc8246f74a3f40 from memory into f25
fmadd.s f31, f9, f30, f25, dyn # perform operation
fmadd.s f31, f9, f30, f25, rdn # perform operation
fmadd.s f31, f9, f30, f25, rmm # perform operation
fmadd.s f31, f9, f30, f25, rne # perform operation
fmadd.s f31, f9, f30, f25, rtz # perform operation
fmadd.s f31, f9, f30, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f30, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f30, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x7ef8654f)
li x19, 0xdf76f744694f0974 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
li x3, 0xe82a569cb49e02f1 # load x3 with value 0xe82a569cb49e02f1
sw x3, 0(x2) # store 0xe82a569cb49e02f1 in memory
flw f6, 0(x2) # load 0xe82a569cb49e02f1 from memory into f6
fmadd.s f19, f25, f14, f6, dyn # perform operation
fmadd.s f19, f25, f14, f6, rdn # perform operation
fmadd.s f19, f25, f14, f6, rmm # perform operation
fmadd.s f19, f25, f14, f6, rne # perform operation
fmadd.s f19, f25, f14, f6, rtz # perform operation
fmadd.s f19, f25, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f25, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f25, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7f800001 fs2 = 0x813d9ab0)
li x15, 0xa960dcdece87ec55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0x65c577b46e6bf6ca # load x3 with value 0x65c577b46e6bf6ca
sw x3, 0(x2) # store 0x65c577b46e6bf6ca in memory
flw f11, 0(x2) # load 0x65c577b46e6bf6ca from memory into f11
fmadd.s f15, f14, f24, f11, dyn # perform operation
fmadd.s f15, f14, f24, f11, rdn # perform operation
fmadd.s f15, f14, f24, f11, rmm # perform operation
fmadd.s f15, f14, f24, f11, rne # perform operation
fmadd.s f15, f14, f24, f11, rtz # perform operation
fmadd.s f15, f14, f24, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f14, f24, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f14, f24, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x0)
li x8, 0x08183f539dbe4989 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0x3f2c3a1147a3ede0 # load x3 with value 0x3f2c3a1147a3ede0
sw x3, 0(x2) # store 0x3f2c3a1147a3ede0 in memory
flw f29, 0(x2) # load 0x3f2c3a1147a3ede0 from memory into f29
fmadd.s f8, f5, f11, f29, dyn # perform operation
fmadd.s f8, f5, f11, f29, rdn # perform operation
fmadd.s f8, f5, f11, f29, rmm # perform operation
fmadd.s f8, f5, f11, f29, rne # perform operation
fmadd.s f8, f5, f11, f29, rtz # perform operation
fmadd.s f8, f5, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f5, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f5, f11, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000000)
li x7, 0xb14851814f9cb32e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
li x3, 0xb2dddb9ddbe99a81 # load x3 with value 0xb2dddb9ddbe99a81
sw x3, 0(x2) # store 0xb2dddb9ddbe99a81 in memory
flw f10, 0(x2) # load 0xb2dddb9ddbe99a81 from memory into f10
fmadd.s f7, f18, f13, f10, dyn # perform operation
fmadd.s f7, f18, f13, f10, rdn # perform operation
fmadd.s f7, f18, f13, f10, rmm # perform operation
fmadd.s f7, f18, f13, f10, rne # perform operation
fmadd.s f7, f18, f13, f10, rtz # perform operation
fmadd.s f7, f18, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f18, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f18, f13, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3f800000)
li x16, 0x92efbada53bc834d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x4f69db83ca10b2c1 # load x3 with value 0x4f69db83ca10b2c1
sw x3, 0(x2) # store 0x4f69db83ca10b2c1 in memory
flw f19, 0(x2) # load 0x4f69db83ca10b2c1 from memory into f19
fmadd.s f16, f30, f13, f19, dyn # perform operation
fmadd.s f16, f30, f13, f19, rdn # perform operation
fmadd.s f16, f30, f13, f19, rmm # perform operation
fmadd.s f16, f30, f13, f19, rne # perform operation
fmadd.s f16, f30, f13, f19, rtz # perform operation
fmadd.s f16, f30, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f13, f19 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbf800000)
li x19, 0x765742a89592a5da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x4762f7da47639ac5 # load x3 with value 0x4762f7da47639ac5
sw x3, 0(x2) # store 0x4762f7da47639ac5 in memory
flw f2, 0(x2) # load 0x4762f7da47639ac5 from memory into f2
fmadd.s f19, f1, f22, f2, dyn # perform operation
fmadd.s f19, f1, f22, f2, rdn # perform operation
fmadd.s f19, f1, f22, f2, rmm # perform operation
fmadd.s f19, f1, f22, f2, rne # perform operation
fmadd.s f19, f1, f22, f2, rtz # perform operation
fmadd.s f19, f1, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f22, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x3fc00000)
li x2, 0x5a2a7802a216ebf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0xe7b4360008742398 # load x3 with value 0xe7b4360008742398
sw x3, 0(x2) # store 0xe7b4360008742398 in memory
flw f30, 0(x2) # load 0xe7b4360008742398 from memory into f30
fmadd.s f2, f12, f14, f30, dyn # perform operation
fmadd.s f2, f12, f14, f30, rdn # perform operation
fmadd.s f2, f12, f14, f30, rmm # perform operation
fmadd.s f2, f12, f14, f30, rne # perform operation
fmadd.s f2, f12, f14, f30, rtz # perform operation
fmadd.s f2, f12, f14, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f12, f14, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f12, f14, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xbfc00000)
li x1, 0x455b9a9aa1b0203a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0x99a9a15f61b99d61 # load x3 with value 0x99a9a15f61b99d61
sw x3, 0(x2) # store 0x99a9a15f61b99d61 in memory
flw f20, 0(x2) # load 0x99a9a15f61b99d61 from memory into f20
fmadd.s f1, f25, f31, f20, dyn # perform operation
fmadd.s f1, f25, f31, f20, rdn # perform operation
fmadd.s f1, f25, f31, f20, rmm # perform operation
fmadd.s f1, f25, f31, f20, rne # perform operation
fmadd.s f1, f25, f31, f20, rtz # perform operation
fmadd.s f1, f25, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f25, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f25, f31, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x40000000)
li x12, 0x44ea6a9d62ffa554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f7, 0(x2) # load 0x40000000 from memory into f7
li x3, 0x155171690df04790 # load x3 with value 0x155171690df04790
sw x3, 0(x2) # store 0x155171690df04790 in memory
flw f15, 0(x2) # load 0x155171690df04790 from memory into f15
fmadd.s f12, f21, f7, f15, dyn # perform operation
fmadd.s f12, f21, f7, f15, rdn # perform operation
fmadd.s f12, f21, f7, f15, rmm # perform operation
fmadd.s f12, f21, f7, f15, rne # perform operation
fmadd.s f12, f21, f7, f15, rtz # perform operation
fmadd.s f12, f21, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xc0000000)
li x25, 0x9e30d6440b60530e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0xd97d830a44be8503 # load x3 with value 0xd97d830a44be8503
sw x3, 0(x2) # store 0xd97d830a44be8503 in memory
flw f12, 0(x2) # load 0xd97d830a44be8503 from memory into f12
fmadd.s f25, f4, f3, f12, dyn # perform operation
fmadd.s f25, f4, f3, f12, rdn # perform operation
fmadd.s f25, f4, f3, f12, rmm # perform operation
fmadd.s f25, f4, f3, f12, rne # perform operation
fmadd.s f25, f4, f3, f12, rtz # perform operation
fmadd.s f25, f4, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f4, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f4, f3, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x800000)
li x23, 0xa5761afde0a4dad3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f10, 0(x2) # load 0x00800000 from memory into f10
li x3, 0xc52069ebbbcee78f # load x3 with value 0xc52069ebbbcee78f
sw x3, 0(x2) # store 0xc52069ebbbcee78f in memory
flw f29, 0(x2) # load 0xc52069ebbbcee78f from memory into f29
fmadd.s f23, f16, f10, f29, dyn # perform operation
fmadd.s f23, f16, f10, f29, rdn # perform operation
fmadd.s f23, f16, f10, f29, rmm # perform operation
fmadd.s f23, f16, f10, f29, rne # perform operation
fmadd.s f23, f16, f10, f29, rtz # perform operation
fmadd.s f23, f16, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f16, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f16, f10, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80800000)
li x15, 0x94d883ec4c422ec1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x23f838ad3e246aba # load x3 with value 0x23f838ad3e246aba
sw x3, 0(x2) # store 0x23f838ad3e246aba in memory
flw f27, 0(x2) # load 0x23f838ad3e246aba from memory into f27
fmadd.s f15, f23, f10, f27, dyn # perform operation
fmadd.s f15, f23, f10, f27, rdn # perform operation
fmadd.s f15, f23, f10, f27, rmm # perform operation
fmadd.s f15, f23, f10, f27, rne # perform operation
fmadd.s f15, f23, f10, f27, rtz # perform operation
fmadd.s f15, f23, f10, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f10, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f10, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f7fffff)
li x8, 0xff0b16e51e366c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f29, 0(x2) # load 0x7f7fffff from memory into f29
li x3, 0x1ece1d1042dc6bf2 # load x3 with value 0x1ece1d1042dc6bf2
sw x3, 0(x2) # store 0x1ece1d1042dc6bf2 in memory
flw f6, 0(x2) # load 0x1ece1d1042dc6bf2 from memory into f6
fmadd.s f8, f26, f29, f6, dyn # perform operation
fmadd.s f8, f26, f29, f6, rdn # perform operation
fmadd.s f8, f26, f29, f6, rmm # perform operation
fmadd.s f8, f26, f29, f6, rne # perform operation
fmadd.s f8, f26, f29, f6, rtz # perform operation
fmadd.s f8, f26, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f29, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff7fffff)
li x25, 0xe5fd1c1c68160389 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0x5d6260d8a5893113 # load x3 with value 0x5d6260d8a5893113
sw x3, 0(x2) # store 0x5d6260d8a5893113 in memory
flw f2, 0(x2) # load 0x5d6260d8a5893113 from memory into f2
fmadd.s f25, f26, f17, f2, dyn # perform operation
fmadd.s f25, f26, f17, f2, rdn # perform operation
fmadd.s f25, f26, f17, f2, rmm # perform operation
fmadd.s f25, f26, f17, f2, rne # perform operation
fmadd.s f25, f26, f17, f2, rtz # perform operation
fmadd.s f25, f26, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f26, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f26, f17, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffff)
li x31, 0x4f7c2dc4ee835c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0xa623a7dcffea4f43 # load x3 with value 0xa623a7dcffea4f43
sw x3, 0(x2) # store 0xa623a7dcffea4f43 in memory
flw f27, 0(x2) # load 0xa623a7dcffea4f43 from memory into f27
fmadd.s f31, f9, f4, f27, dyn # perform operation
fmadd.s f31, f9, f4, f27, rdn # perform operation
fmadd.s f31, f9, f4, f27, rmm # perform operation
fmadd.s f31, f9, f4, f27, rne # perform operation
fmadd.s f31, f9, f4, f27, rtz # perform operation
fmadd.s f31, f9, f4, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f4, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f4, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f4, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f4, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f4, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x807fffff)
li x10, 0x3d77d4a84b8174ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0xcc4dbf99b5892e37 # load x3 with value 0xcc4dbf99b5892e37
sw x3, 0(x2) # store 0xcc4dbf99b5892e37 in memory
flw f24, 0(x2) # load 0xcc4dbf99b5892e37 from memory into f24
fmadd.s f10, f29, f15, f24, dyn # perform operation
fmadd.s f10, f29, f15, f24, rdn # perform operation
fmadd.s f10, f29, f15, f24, rmm # perform operation
fmadd.s f10, f29, f15, f24, rne # perform operation
fmadd.s f10, f29, f15, f24, rtz # perform operation
fmadd.s f10, f29, f15, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f29, f15, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f29, f15, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x400000)
li x23, 0x98359b3093a46146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x4c057eeb67cda3f7 # load x3 with value 0x4c057eeb67cda3f7
sw x3, 0(x2) # store 0x4c057eeb67cda3f7 in memory
flw f6, 0(x2) # load 0x4c057eeb67cda3f7 from memory into f6
fmadd.s f23, f29, f15, f6, dyn # perform operation
fmadd.s f23, f29, f15, f6, rdn # perform operation
fmadd.s f23, f29, f15, f6, rmm # perform operation
fmadd.s f23, f29, f15, f6, rne # perform operation
fmadd.s f23, f29, f15, f6, rtz # perform operation
fmadd.s f23, f29, f15, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f15, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f15, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80400000)
li x6, 0xaaa3c15fa6e5e6ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f8, 0(x2) # load 0x80400000 from memory into f8
li x3, 0xf16a9664cd59645e # load x3 with value 0xf16a9664cd59645e
sw x3, 0(x2) # store 0xf16a9664cd59645e in memory
flw f24, 0(x2) # load 0xf16a9664cd59645e from memory into f24
fmadd.s f6, f12, f8, f24, dyn # perform operation
fmadd.s f6, f12, f8, f24, rdn # perform operation
fmadd.s f6, f12, f8, f24, rmm # perform operation
fmadd.s f6, f12, f8, f24, rne # perform operation
fmadd.s f6, f12, f8, f24, rtz # perform operation
fmadd.s f6, f12, f8, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f8, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f8, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x1)
li x12, 0x7a63c399a82beae9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x8b3864361f613233 # load x3 with value 0x8b3864361f613233
sw x3, 0(x2) # store 0x8b3864361f613233 in memory
flw f17, 0(x2) # load 0x8b3864361f613233 from memory into f17
fmadd.s f12, f3, f25, f17, dyn # perform operation
fmadd.s f12, f3, f25, f17, rdn # perform operation
fmadd.s f12, f3, f25, f17, rmm # perform operation
fmadd.s f12, f3, f25, f17, rne # perform operation
fmadd.s f12, f3, f25, f17, rtz # perform operation
fmadd.s f12, f3, f25, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f25, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f25, f17 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x80000001)
li x3, 0x1418ccf9ad7b4478 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
li x3, 0x7b71f77899daf119 # load x3 with value 0x7b71f77899daf119
sw x3, 0(x2) # store 0x7b71f77899daf119 in memory
flw f25, 0(x2) # load 0x7b71f77899daf119 from memory into f25
fmadd.s f3, f14, f21, f25, dyn # perform operation
fmadd.s f3, f14, f21, f25, rdn # perform operation
fmadd.s f3, f14, f21, f25, rmm # perform operation
fmadd.s f3, f14, f21, f25, rne # perform operation
fmadd.s f3, f14, f21, f25, rtz # perform operation
fmadd.s f3, f14, f21, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f14, f21, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f14, f21, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800000)
li x10, 0x985395b985d9629c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f23, 0(x2) # load 0x7fbfffff from memory into f23
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xefbf746dba9023e8 # load x3 with value 0xefbf746dba9023e8
sw x3, 0(x2) # store 0xefbf746dba9023e8 in memory
flw f20, 0(x2) # load 0xefbf746dba9023e8 from memory into f20
fmadd.s f10, f23, f6, f20, dyn # perform operation
fmadd.s f10, f23, f6, f20, rdn # perform operation
fmadd.s f10, f23, f6, f20, rmm # perform operation
fmadd.s f10, f23, f6, f20, rne # perform operation
fmadd.s f10, f23, f6, f20, rtz # perform operation
fmadd.s f10, f23, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f23, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f23, f6, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0xff800000)
li x1, 0xa3951c1fc8f73ad7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0xa8319d95cafea9f7 # load x3 with value 0xa8319d95cafea9f7
sw x3, 0(x2) # store 0xa8319d95cafea9f7 in memory
flw f15, 0(x2) # load 0xa8319d95cafea9f7 from memory into f15
fmadd.s f1, f21, f6, f15, dyn # perform operation
fmadd.s f1, f21, f6, f15, rdn # perform operation
fmadd.s f1, f21, f6, f15, rmm # perform operation
fmadd.s f1, f21, f6, f15, rne # perform operation
fmadd.s f1, f21, f6, f15, rtz # perform operation
fmadd.s f1, f21, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f6, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fc00000)
li x12, 0xb07cf6628c47bfe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f14, 0(x2) # load 0x7fbfffff from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
li x3, 0xb77dc488dc48fa54 # load x3 with value 0xb77dc488dc48fa54
sw x3, 0(x2) # store 0xb77dc488dc48fa54 in memory
flw f24, 0(x2) # load 0xb77dc488dc48fa54 from memory into f24
fmadd.s f12, f14, f6, f24, dyn # perform operation
fmadd.s f12, f14, f6, f24, rdn # perform operation
fmadd.s f12, f14, f6, f24, rmm # perform operation
fmadd.s f12, f14, f6, f24, rne # perform operation
fmadd.s f12, f14, f6, f24, rtz # perform operation
fmadd.s f12, f14, f6, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f14, f6, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f14, f6, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fffffff)
li x15, 0xaa66d4bc21285da1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x25f04e89eb7bffc1 # load x3 with value 0x25f04e89eb7bffc1
sw x3, 0(x2) # store 0x25f04e89eb7bffc1 in memory
flw f11, 0(x2) # load 0x25f04e89eb7bffc1 from memory into f11
fmadd.s f15, f19, f8, f11, dyn # perform operation
fmadd.s f15, f19, f8, f11, rdn # perform operation
fmadd.s f15, f19, f8, f11, rmm # perform operation
fmadd.s f15, f19, f8, f11, rne # perform operation
fmadd.s f15, f19, f8, f11, rtz # perform operation
fmadd.s f15, f19, f8, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f8, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f8, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7f800001)
li x2, 0x58d0bbfdc2dbaa2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0xfca6f771760275a1 # load x3 with value 0xfca6f771760275a1
sw x3, 0(x2) # store 0xfca6f771760275a1 in memory
flw f20, 0(x2) # load 0xfca6f771760275a1 from memory into f20
fmadd.s f2, f5, f1, f20, dyn # perform operation
fmadd.s f2, f5, f1, f20, rdn # perform operation
fmadd.s f2, f5, f1, f20, rmm # perform operation
fmadd.s f2, f5, f1, f20, rne # perform operation
fmadd.s f2, f5, f1, f20, rtz # perform operation
fmadd.s f2, f5, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f1, f20 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7fbfffff)
li x3, 0x0e35ba6dc5664ef7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x8efda13cd069441f # load x3 with value 0x8efda13cd069441f
sw x3, 0(x2) # store 0x8efda13cd069441f in memory
flw f22, 0(x2) # load 0x8efda13cd069441f from memory into f22
fmadd.s f3, f31, f29, f22, dyn # perform operation
fmadd.s f3, f31, f29, f22, rdn # perform operation
fmadd.s f3, f31, f29, f22, rmm # perform operation
fmadd.s f3, f31, f29, f22, rne # perform operation
fmadd.s f3, f31, f29, f22, rtz # perform operation
fmadd.s f3, f31, f29, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f31, f29, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f31, f29, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x7ef8654f)
li x18, 0x3a497bd3ce190daa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f22, 0(x2) # load 0x7fbfffff from memory into f22
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0xc965aec4a6e8e679 # load x3 with value 0xc965aec4a6e8e679
sw x3, 0(x2) # store 0xc965aec4a6e8e679 in memory
flw f21, 0(x2) # load 0xc965aec4a6e8e679 from memory into f21
fmadd.s f18, f22, f5, f21, dyn # perform operation
fmadd.s f18, f22, f5, f21, rdn # perform operation
fmadd.s f18, f22, f5, f21, rmm # perform operation
fmadd.s f18, f22, f5, f21, rne # perform operation
fmadd.s f18, f22, f5, f21, rtz # perform operation
fmadd.s f18, f22, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f22, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f22, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7fbfffff fs2 = 0x813d9ab0)
li x25, 0x7c57f92a6d4f07f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x1b80ccee0abad965 # load x3 with value 0x1b80ccee0abad965
sw x3, 0(x2) # store 0x1b80ccee0abad965 in memory
flw f3, 0(x2) # load 0x1b80ccee0abad965 from memory into f3
fmadd.s f25, f6, f29, f3, dyn # perform operation
fmadd.s f25, f6, f29, f3, rdn # perform operation
fmadd.s f25, f6, f29, f3, rmm # perform operation
fmadd.s f25, f6, f29, f3, rne # perform operation
fmadd.s f25, f6, f29, f3, rtz # perform operation
fmadd.s f25, f6, f29, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f6, f29, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f6, f29, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x0)
li x17, 0x86701003d5ac1c03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x224d824b57974e08 # load x3 with value 0x224d824b57974e08
sw x3, 0(x2) # store 0x224d824b57974e08 in memory
flw f12, 0(x2) # load 0x224d824b57974e08 from memory into f12
fmadd.s f17, f28, f24, f12, dyn # perform operation
fmadd.s f17, f28, f24, f12, rdn # perform operation
fmadd.s f17, f28, f24, f12, rmm # perform operation
fmadd.s f17, f28, f24, f12, rne # perform operation
fmadd.s f17, f28, f24, f12, rtz # perform operation
fmadd.s f17, f28, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f24, f12 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000000)
li x18, 0x462252ed9e1cd508 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f14, 0(x2) # load 0x80000000 from memory into f14
li x3, 0x2a657ee720ee101f # load x3 with value 0x2a657ee720ee101f
sw x3, 0(x2) # store 0x2a657ee720ee101f in memory
flw f11, 0(x2) # load 0x2a657ee720ee101f from memory into f11
fmadd.s f18, f15, f14, f11, dyn # perform operation
fmadd.s f18, f15, f14, f11, rdn # perform operation
fmadd.s f18, f15, f14, f11, rmm # perform operation
fmadd.s f18, f15, f14, f11, rne # perform operation
fmadd.s f18, f15, f14, f11, rtz # perform operation
fmadd.s f18, f15, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f15, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f15, f14, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3f800000)
li x19, 0x86adf1a4f764ccbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xbfa1405a2e3fdd8a # load x3 with value 0xbfa1405a2e3fdd8a
sw x3, 0(x2) # store 0xbfa1405a2e3fdd8a in memory
flw f13, 0(x2) # load 0xbfa1405a2e3fdd8a from memory into f13
fmadd.s f19, f7, f2, f13, dyn # perform operation
fmadd.s f19, f7, f2, f13, rdn # perform operation
fmadd.s f19, f7, f2, f13, rmm # perform operation
fmadd.s f19, f7, f2, f13, rne # perform operation
fmadd.s f19, f7, f2, f13, rtz # perform operation
fmadd.s f19, f7, f2, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f2, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f2, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f2, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f2, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f2, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbf800000)
li x12, 0x1c001fb30a1a24c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x3c5a3a69893119d8 # load x3 with value 0x3c5a3a69893119d8
sw x3, 0(x2) # store 0x3c5a3a69893119d8 in memory
flw f29, 0(x2) # load 0x3c5a3a69893119d8 from memory into f29
fmadd.s f12, f17, f21, f29, dyn # perform operation
fmadd.s f12, f17, f21, f29, rdn # perform operation
fmadd.s f12, f17, f21, f29, rmm # perform operation
fmadd.s f12, f17, f21, f29, rne # perform operation
fmadd.s f12, f17, f21, f29, rtz # perform operation
fmadd.s f12, f17, f21, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f21, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f21, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x3fc00000)
li x8, 0xfcd2afc39d4af4d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f12, 0(x2) # load 0x3fc00000 from memory into f12
li x3, 0x8ea4305ae49bf532 # load x3 with value 0x8ea4305ae49bf532
sw x3, 0(x2) # store 0x8ea4305ae49bf532 in memory
flw f2, 0(x2) # load 0x8ea4305ae49bf532 from memory into f2
fmadd.s f8, f21, f12, f2, dyn # perform operation
fmadd.s f8, f21, f12, f2, rdn # perform operation
fmadd.s f8, f21, f12, f2, rmm # perform operation
fmadd.s f8, f21, f12, f2, rne # perform operation
fmadd.s f8, f21, f12, f2, rtz # perform operation
fmadd.s f8, f21, f12, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f12, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f12, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xbfc00000)
li x26, 0x78ff530f54fc2af3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
li x3, 0x3a19cfc2c12b8d74 # load x3 with value 0x3a19cfc2c12b8d74
sw x3, 0(x2) # store 0x3a19cfc2c12b8d74 in memory
flw f31, 0(x2) # load 0x3a19cfc2c12b8d74 from memory into f31
fmadd.s f26, f22, f5, f31, dyn # perform operation
fmadd.s f26, f22, f5, f31, rdn # perform operation
fmadd.s f26, f22, f5, f31, rmm # perform operation
fmadd.s f26, f22, f5, f31, rne # perform operation
fmadd.s f26, f22, f5, f31, rtz # perform operation
fmadd.s f26, f22, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f5, f31 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x40000000)
li x24, 0x00911c845d4dfd17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xa73df7ba714f562c # load x3 with value 0xa73df7ba714f562c
sw x3, 0(x2) # store 0xa73df7ba714f562c in memory
flw f1, 0(x2) # load 0xa73df7ba714f562c from memory into f1
fmadd.s f24, f5, f18, f1, dyn # perform operation
fmadd.s f24, f5, f18, f1, rdn # perform operation
fmadd.s f24, f5, f18, f1, rmm # perform operation
fmadd.s f24, f5, f18, f1, rne # perform operation
fmadd.s f24, f5, f18, f1, rtz # perform operation
fmadd.s f24, f5, f18, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f5, f18, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f5, f18, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xc0000000)
li x27, 0x0b4ceaf01ef89ea5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xc503c0afaa94381e # load x3 with value 0xc503c0afaa94381e
sw x3, 0(x2) # store 0xc503c0afaa94381e in memory
flw f2, 0(x2) # load 0xc503c0afaa94381e from memory into f2
fmadd.s f27, f24, f20, f2, dyn # perform operation
fmadd.s f27, f24, f20, f2, rdn # perform operation
fmadd.s f27, f24, f20, f2, rmm # perform operation
fmadd.s f27, f24, f20, f2, rne # perform operation
fmadd.s f27, f24, f20, f2, rtz # perform operation
fmadd.s f27, f24, f20, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f24, f20, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f24, f20, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f24, f20, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f24, f20, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f24, f20, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x800000)
li x4, 0x34a338c4a25e0857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xada4cb8fac8a740a # load x3 with value 0xada4cb8fac8a740a
sw x3, 0(x2) # store 0xada4cb8fac8a740a in memory
flw f29, 0(x2) # load 0xada4cb8fac8a740a from memory into f29
fmadd.s f4, f17, f16, f29, dyn # perform operation
fmadd.s f4, f17, f16, f29, rdn # perform operation
fmadd.s f4, f17, f16, f29, rmm # perform operation
fmadd.s f4, f17, f16, f29, rne # perform operation
fmadd.s f4, f17, f16, f29, rtz # perform operation
fmadd.s f4, f17, f16, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f17, f16, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f17, f16, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80800000)
li x30, 0x496e60c5120e7ac8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
li x3, 0x1af28369b07bdc33 # load x3 with value 0x1af28369b07bdc33
sw x3, 0(x2) # store 0x1af28369b07bdc33 in memory
flw f27, 0(x2) # load 0x1af28369b07bdc33 from memory into f27
fmadd.s f30, f26, f22, f27, dyn # perform operation
fmadd.s f30, f26, f22, f27, rdn # perform operation
fmadd.s f30, f26, f22, f27, rmm # perform operation
fmadd.s f30, f26, f22, f27, rne # perform operation
fmadd.s f30, f26, f22, f27, rtz # perform operation
fmadd.s f30, f26, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f22, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f7fffff)
li x15, 0x7149b363a2d9ff50 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x79183eac678d5e5c # load x3 with value 0x79183eac678d5e5c
sw x3, 0(x2) # store 0x79183eac678d5e5c in memory
flw f24, 0(x2) # load 0x79183eac678d5e5c from memory into f24
fmadd.s f15, f4, f16, f24, dyn # perform operation
fmadd.s f15, f4, f16, f24, rdn # perform operation
fmadd.s f15, f4, f16, f24, rmm # perform operation
fmadd.s f15, f4, f16, f24, rne # perform operation
fmadd.s f15, f4, f16, f24, rtz # perform operation
fmadd.s f15, f4, f16, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f4, f16, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f4, f16, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff7fffff)
li x31, 0x5f2d389e4e9c7825 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f13, 0(x2) # load 0x7ef8654f from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0x5e1f3a8400b846c9 # load x3 with value 0x5e1f3a8400b846c9
sw x3, 0(x2) # store 0x5e1f3a8400b846c9 in memory
flw f28, 0(x2) # load 0x5e1f3a8400b846c9 from memory into f28
fmadd.s f31, f13, f3, f28, dyn # perform operation
fmadd.s f31, f13, f3, f28, rdn # perform operation
fmadd.s f31, f13, f3, f28, rmm # perform operation
fmadd.s f31, f13, f3, f28, rne # perform operation
fmadd.s f31, f13, f3, f28, rtz # perform operation
fmadd.s f31, f13, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f13, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f13, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffff)
li x2, 0x43b545acc43eb6d0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x6889f75237017493 # load x3 with value 0x6889f75237017493
sw x3, 0(x2) # store 0x6889f75237017493 in memory
flw f24, 0(x2) # load 0x6889f75237017493 from memory into f24
fmadd.s f2, f23, f30, f24, dyn # perform operation
fmadd.s f2, f23, f30, f24, rdn # perform operation
fmadd.s f2, f23, f30, f24, rmm # perform operation
fmadd.s f2, f23, f30, f24, rne # perform operation
fmadd.s f2, f23, f30, f24, rtz # perform operation
fmadd.s f2, f23, f30, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f30, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f30, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f30, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f30, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f30, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x807fffff)
li x25, 0x8f062923dac9d07b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f22, 0(x2) # load 0x7ef8654f from memory into f22
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0x9ab3f2031776ee35 # load x3 with value 0x9ab3f2031776ee35
sw x3, 0(x2) # store 0x9ab3f2031776ee35 in memory
flw f1, 0(x2) # load 0x9ab3f2031776ee35 from memory into f1
fmadd.s f25, f22, f21, f1, dyn # perform operation
fmadd.s f25, f22, f21, f1, rdn # perform operation
fmadd.s f25, f22, f21, f1, rmm # perform operation
fmadd.s f25, f22, f21, f1, rne # perform operation
fmadd.s f25, f22, f21, f1, rtz # perform operation
fmadd.s f25, f22, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f22, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f22, f21, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x400000)
li x8, 0x7a7055733023c3b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0x465b590861907e99 # load x3 with value 0x465b590861907e99
sw x3, 0(x2) # store 0x465b590861907e99 in memory
flw f3, 0(x2) # load 0x465b590861907e99 from memory into f3
fmadd.s f8, f17, f14, f3, dyn # perform operation
fmadd.s f8, f17, f14, f3, rdn # perform operation
fmadd.s f8, f17, f14, f3, rmm # perform operation
fmadd.s f8, f17, f14, f3, rne # perform operation
fmadd.s f8, f17, f14, f3, rtz # perform operation
fmadd.s f8, f17, f14, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f17, f14, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f17, f14, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80400000)
li x18, 0x33a8b1ff14461c28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0x179da93d04fe785e # load x3 with value 0x179da93d04fe785e
sw x3, 0(x2) # store 0x179da93d04fe785e in memory
flw f26, 0(x2) # load 0x179da93d04fe785e from memory into f26
fmadd.s f18, f17, f10, f26, dyn # perform operation
fmadd.s f18, f17, f10, f26, rdn # perform operation
fmadd.s f18, f17, f10, f26, rmm # perform operation
fmadd.s f18, f17, f10, f26, rne # perform operation
fmadd.s f18, f17, f10, f26, rtz # perform operation
fmadd.s f18, f17, f10, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f10, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f10, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f10, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f10, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f10, f26 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x1)
li x23, 0x7ca10ce49d784023 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0xef701bb8bb376860 # load x3 with value 0xef701bb8bb376860
sw x3, 0(x2) # store 0xef701bb8bb376860 in memory
flw f25, 0(x2) # load 0xef701bb8bb376860 from memory into f25
fmadd.s f23, f30, f13, f25, dyn # perform operation
fmadd.s f23, f30, f13, f25, rdn # perform operation
fmadd.s f23, f30, f13, f25, rmm # perform operation
fmadd.s f23, f30, f13, f25, rne # perform operation
fmadd.s f23, f30, f13, f25, rtz # perform operation
fmadd.s f23, f30, f13, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f30, f13, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f30, f13, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x80000001)
li x24, 0xc844d5ebbd96e9cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f15, 0(x2) # load 0x7ef8654f from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
li x3, 0x65e616581da095b # load x3 with value 0x65e616581da095b
sw x3, 0(x2) # store 0x65e616581da095b in memory
flw f28, 0(x2) # load 0x65e616581da095b from memory into f28
fmadd.s f24, f15, f3, f28, dyn # perform operation
fmadd.s f24, f15, f3, f28, rdn # perform operation
fmadd.s f24, f15, f3, f28, rmm # perform operation
fmadd.s f24, f15, f3, f28, rne # perform operation
fmadd.s f24, f15, f3, f28, rtz # perform operation
fmadd.s f24, f15, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f15, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f15, f3, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800000)
li x22, 0xd58936448a42c880 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f14, 0(x2) # load 0x7f800000 from memory into f14
li x3, 0x7c97a222a0885943 # load x3 with value 0x7c97a222a0885943
sw x3, 0(x2) # store 0x7c97a222a0885943 in memory
flw f6, 0(x2) # load 0x7c97a222a0885943 from memory into f6
fmadd.s f22, f2, f14, f6, dyn # perform operation
fmadd.s f22, f2, f14, f6, rdn # perform operation
fmadd.s f22, f2, f14, f6, rmm # perform operation
fmadd.s f22, f2, f14, f6, rne # perform operation
fmadd.s f22, f2, f14, f6, rtz # perform operation
fmadd.s f22, f2, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f14, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0xff800000)
li x23, 0x750fd8b1952d04ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
li x3, 0x24418c9881d05ae0 # load x3 with value 0x24418c9881d05ae0
sw x3, 0(x2) # store 0x24418c9881d05ae0 in memory
flw f7, 0(x2) # load 0x24418c9881d05ae0 from memory into f7
fmadd.s f23, f21, f28, f7, dyn # perform operation
fmadd.s f23, f21, f28, f7, rdn # perform operation
fmadd.s f23, f21, f28, f7, rmm # perform operation
fmadd.s f23, f21, f28, f7, rne # perform operation
fmadd.s f23, f21, f28, f7, rtz # perform operation
fmadd.s f23, f21, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f21, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f21, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f21, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f21, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f21, f28, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fc00000)
li x19, 0x5f7cc3d09cfad4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f3, 0(x2) # load 0x7fc00000 from memory into f3
li x3, 0x7bdfff3722e635d4 # load x3 with value 0x7bdfff3722e635d4
sw x3, 0(x2) # store 0x7bdfff3722e635d4 in memory
flw f16, 0(x2) # load 0x7bdfff3722e635d4 from memory into f16
fmadd.s f19, f17, f3, f16, dyn # perform operation
fmadd.s f19, f17, f3, f16, rdn # perform operation
fmadd.s f19, f17, f3, f16, rmm # perform operation
fmadd.s f19, f17, f3, f16, rne # perform operation
fmadd.s f19, f17, f3, f16, rtz # perform operation
fmadd.s f19, f17, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f17, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f17, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f17, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f17, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f17, f3, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fffffff)
li x30, 0xdb152e0455a9700a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f26, 0(x2) # load 0x7fffffff from memory into f26
li x3, 0x41a51fcd91643bf9 # load x3 with value 0x41a51fcd91643bf9
sw x3, 0(x2) # store 0x41a51fcd91643bf9 in memory
flw f29, 0(x2) # load 0x41a51fcd91643bf9 from memory into f29
fmadd.s f30, f5, f26, f29, dyn # perform operation
fmadd.s f30, f5, f26, f29, rdn # perform operation
fmadd.s f30, f5, f26, f29, rmm # perform operation
fmadd.s f30, f5, f26, f29, rne # perform operation
fmadd.s f30, f5, f26, f29, rtz # perform operation
fmadd.s f30, f5, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f5, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f5, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f5, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f5, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f5, f26, f29 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7f800001)
li x30, 0xc19071ad389f7342 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
li x3, 0x63c09cc6c7acbbde # load x3 with value 0x63c09cc6c7acbbde
sw x3, 0(x2) # store 0x63c09cc6c7acbbde in memory
flw f9, 0(x2) # load 0x63c09cc6c7acbbde from memory into f9
fmadd.s f30, f18, f28, f9, dyn # perform operation
fmadd.s f30, f18, f28, f9, rdn # perform operation
fmadd.s f30, f18, f28, f9, rmm # perform operation
fmadd.s f30, f18, f28, f9, rne # perform operation
fmadd.s f30, f18, f28, f9, rtz # perform operation
fmadd.s f30, f18, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f28, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7fbfffff)
li x30, 0x1e5c77944a29c9b3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x81940554a9d97b6a # load x3 with value 0x81940554a9d97b6a
sw x3, 0(x2) # store 0x81940554a9d97b6a in memory
flw f16, 0(x2) # load 0x81940554a9d97b6a from memory into f16
fmadd.s f30, f19, f15, f16, dyn # perform operation
fmadd.s f30, f19, f15, f16, rdn # perform operation
fmadd.s f30, f19, f15, f16, rmm # perform operation
fmadd.s f30, f19, f15, f16, rne # perform operation
fmadd.s f30, f19, f15, f16, rtz # perform operation
fmadd.s f30, f19, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f19, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f19, f15, f16 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x7ef8654f)
li x10, 0x611c0b2105784b4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
li x3, 0x34427c6684030b18 # load x3 with value 0x34427c6684030b18
sw x3, 0(x2) # store 0x34427c6684030b18 in memory
flw f21, 0(x2) # load 0x34427c6684030b18 from memory into f21
fmadd.s f10, f18, f5, f21, dyn # perform operation
fmadd.s f10, f18, f5, f21, rdn # perform operation
fmadd.s f10, f18, f5, f21, rmm # perform operation
fmadd.s f10, f18, f5, f21, rne # perform operation
fmadd.s f10, f18, f5, f21, rtz # perform operation
fmadd.s f10, f18, f5, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f5, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f5, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x7ef8654f fs2 = 0x813d9ab0)
li x31, 0x86b2205553b14fce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x993e7bb826d1f996 # load x3 with value 0x993e7bb826d1f996
sw x3, 0(x2) # store 0x993e7bb826d1f996 in memory
flw f7, 0(x2) # load 0x993e7bb826d1f996 from memory into f7
fmadd.s f31, f1, f5, f7, dyn # perform operation
fmadd.s f31, f1, f5, f7, rdn # perform operation
fmadd.s f31, f1, f5, f7, rmm # perform operation
fmadd.s f31, f1, f5, f7, rne # perform operation
fmadd.s f31, f1, f5, f7, rtz # perform operation
fmadd.s f31, f1, f5, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f5, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f5, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f5, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f5, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f5, f7 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x0)
li x2, 0x09e4aaf8ef879498 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f25, 0(x2) # load 0x00000000 from memory into f25
li x3, 0x92246caaa5fba6b5 # load x3 with value 0x92246caaa5fba6b5
sw x3, 0(x2) # store 0x92246caaa5fba6b5 in memory
flw f11, 0(x2) # load 0x92246caaa5fba6b5 from memory into f11
fmadd.s f2, f31, f25, f11, dyn # perform operation
fmadd.s f2, f31, f25, f11, rdn # perform operation
fmadd.s f2, f31, f25, f11, rmm # perform operation
fmadd.s f2, f31, f25, f11, rne # perform operation
fmadd.s f2, f31, f25, f11, rtz # perform operation
fmadd.s f2, f31, f25, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f25, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f25, f11 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000000)
li x12, 0xa1320332133cf90d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x9ea770d3061e9a78 # load x3 with value 0x9ea770d3061e9a78
sw x3, 0(x2) # store 0x9ea770d3061e9a78 in memory
flw f25, 0(x2) # load 0x9ea770d3061e9a78 from memory into f25
fmadd.s f12, f10, f6, f25, dyn # perform operation
fmadd.s f12, f10, f6, f25, rdn # perform operation
fmadd.s f12, f10, f6, f25, rmm # perform operation
fmadd.s f12, f10, f6, f25, rne # perform operation
fmadd.s f12, f10, f6, f25, rtz # perform operation
fmadd.s f12, f10, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f10, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f10, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f10, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f10, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f10, f6, f25 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3f800000)
li x27, 0x071f695cdd5bb55d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x73ba182d46e96190 # load x3 with value 0x73ba182d46e96190
sw x3, 0(x2) # store 0x73ba182d46e96190 in memory
flw f21, 0(x2) # load 0x73ba182d46e96190 from memory into f21
fmadd.s f27, f18, f30, f21, dyn # perform operation
fmadd.s f27, f18, f30, f21, rdn # perform operation
fmadd.s f27, f18, f30, f21, rmm # perform operation
fmadd.s f27, f18, f30, f21, rne # perform operation
fmadd.s f27, f18, f30, f21, rtz # perform operation
fmadd.s f27, f18, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f30, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbf800000)
li x16, 0x2d70308454846881 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x121c1964f63879e6 # load x3 with value 0x121c1964f63879e6
sw x3, 0(x2) # store 0x121c1964f63879e6 in memory
flw f10, 0(x2) # load 0x121c1964f63879e6 from memory into f10
fmadd.s f16, f31, f1, f10, dyn # perform operation
fmadd.s f16, f31, f1, f10, rdn # perform operation
fmadd.s f16, f31, f1, f10, rmm # perform operation
fmadd.s f16, f31, f1, f10, rne # perform operation
fmadd.s f16, f31, f1, f10, rtz # perform operation
fmadd.s f16, f31, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f31, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f31, f1, f10 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x3fc00000)
li x26, 0x5502cd97d7b49d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xac171aaedc5c6e14 # load x3 with value 0xac171aaedc5c6e14
sw x3, 0(x2) # store 0xac171aaedc5c6e14 in memory
flw f14, 0(x2) # load 0xac171aaedc5c6e14 from memory into f14
fmadd.s f26, f3, f7, f14, dyn # perform operation
fmadd.s f26, f3, f7, f14, rdn # perform operation
fmadd.s f26, f3, f7, f14, rmm # perform operation
fmadd.s f26, f3, f7, f14, rne # perform operation
fmadd.s f26, f3, f7, f14, rtz # perform operation
fmadd.s f26, f3, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f7, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xbfc00000)
li x21, 0x3bffc3ffa9eddb5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f24, 0(x2) # load 0x813d9ab0 from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
li x3, 0x4d4ab3cb11ec3034 # load x3 with value 0x4d4ab3cb11ec3034
sw x3, 0(x2) # store 0x4d4ab3cb11ec3034 in memory
flw f23, 0(x2) # load 0x4d4ab3cb11ec3034 from memory into f23
fmadd.s f21, f24, f28, f23, dyn # perform operation
fmadd.s f21, f24, f28, f23, rdn # perform operation
fmadd.s f21, f24, f28, f23, rmm # perform operation
fmadd.s f21, f24, f28, f23, rne # perform operation
fmadd.s f21, f24, f28, f23, rtz # perform operation
fmadd.s f21, f24, f28, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f24, f28, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f24, f28, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x40000000)
li x31, 0xc1e3fdd1064db463 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x9ad0d6a19734019a # load x3 with value 0x9ad0d6a19734019a
sw x3, 0(x2) # store 0x9ad0d6a19734019a in memory
flw f28, 0(x2) # load 0x9ad0d6a19734019a from memory into f28
fmadd.s f31, f19, f21, f28, dyn # perform operation
fmadd.s f31, f19, f21, f28, rdn # perform operation
fmadd.s f31, f19, f21, f28, rmm # perform operation
fmadd.s f31, f19, f21, f28, rne # perform operation
fmadd.s f31, f19, f21, f28, rtz # perform operation
fmadd.s f31, f19, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f21, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xc0000000)
li x17, 0xdde42539377043e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0x916160b798b69e1f # load x3 with value 0x916160b798b69e1f
sw x3, 0(x2) # store 0x916160b798b69e1f in memory
flw f13, 0(x2) # load 0x916160b798b69e1f from memory into f13
fmadd.s f17, f15, f10, f13, dyn # perform operation
fmadd.s f17, f15, f10, f13, rdn # perform operation
fmadd.s f17, f15, f10, f13, rmm # perform operation
fmadd.s f17, f15, f10, f13, rne # perform operation
fmadd.s f17, f15, f10, f13, rtz # perform operation
fmadd.s f17, f15, f10, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f15, f10, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f15, f10, f13 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x800000)
li x26, 0x51d111764cd44b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0xf4409f15b8348208 # load x3 with value 0xf4409f15b8348208
sw x3, 0(x2) # store 0xf4409f15b8348208 in memory
flw f23, 0(x2) # load 0xf4409f15b8348208 from memory into f23
fmadd.s f26, f17, f29, f23, dyn # perform operation
fmadd.s f26, f17, f29, f23, rdn # perform operation
fmadd.s f26, f17, f29, f23, rmm # perform operation
fmadd.s f26, f17, f29, f23, rne # perform operation
fmadd.s f26, f17, f29, f23, rtz # perform operation
fmadd.s f26, f17, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f29, f23 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80800000)
li x29, 0x29f6e00da55f51e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f21, 0(x2) # load 0x80800000 from memory into f21
li x3, 0x29fb7225956e0875 # load x3 with value 0x29fb7225956e0875
sw x3, 0(x2) # store 0x29fb7225956e0875 in memory
flw f30, 0(x2) # load 0x29fb7225956e0875 from memory into f30
fmadd.s f29, f5, f21, f30, dyn # perform operation
fmadd.s f29, f5, f21, f30, rdn # perform operation
fmadd.s f29, f5, f21, f30, rmm # perform operation
fmadd.s f29, f5, f21, f30, rne # perform operation
fmadd.s f29, f5, f21, f30, rtz # perform operation
fmadd.s f29, f5, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f5, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f5, f21, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f7fffff)
li x3, 0x0a197ebd458bf5ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0xd5121aff9cd897b3 # load x3 with value 0xd5121aff9cd897b3
sw x3, 0(x2) # store 0xd5121aff9cd897b3 in memory
flw f1, 0(x2) # load 0xd5121aff9cd897b3 from memory into f1
fmadd.s f3, f21, f9, f1, dyn # perform operation
fmadd.s f3, f21, f9, f1, rdn # perform operation
fmadd.s f3, f21, f9, f1, rmm # perform operation
fmadd.s f3, f21, f9, f1, rne # perform operation
fmadd.s f3, f21, f9, f1, rtz # perform operation
fmadd.s f3, f21, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f9, f1 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff7fffff)
li x3, 0x068fc063964fa5ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f10, 0(x2) # load 0x813d9ab0 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f24, 0(x2) # load 0xff7fffff from memory into f24
li x3, 0x9645b248bda5a33e # load x3 with value 0x9645b248bda5a33e
sw x3, 0(x2) # store 0x9645b248bda5a33e in memory
flw f14, 0(x2) # load 0x9645b248bda5a33e from memory into f14
fmadd.s f3, f10, f24, f14, dyn # perform operation
fmadd.s f3, f10, f24, f14, rdn # perform operation
fmadd.s f3, f10, f24, f14, rmm # perform operation
fmadd.s f3, f10, f24, f14, rne # perform operation
fmadd.s f3, f10, f24, f14, rtz # perform operation
fmadd.s f3, f10, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f24, f14 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffff)
li x20, 0xe87ff755d8765e94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f24, 0(x2) # load 0x007fffff from memory into f24
li x3, 0x1330e59faff435ba # load x3 with value 0x1330e59faff435ba
sw x3, 0(x2) # store 0x1330e59faff435ba in memory
flw f22, 0(x2) # load 0x1330e59faff435ba from memory into f22
fmadd.s f20, f29, f24, f22, dyn # perform operation
fmadd.s f20, f29, f24, f22, rdn # perform operation
fmadd.s f20, f29, f24, f22, rmm # perform operation
fmadd.s f20, f29, f24, f22, rne # perform operation
fmadd.s f20, f29, f24, f22, rtz # perform operation
fmadd.s f20, f29, f24, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f24, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f24, f22 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x807fffff)
li x31, 0x44e6a2ccef467e80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f25, 0(x2) # load 0x813d9ab0 from memory into f25
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
li x3, 0x3d55bf1c1df41b27 # load x3 with value 0x3d55bf1c1df41b27
sw x3, 0(x2) # store 0x3d55bf1c1df41b27 in memory
flw f6, 0(x2) # load 0x3d55bf1c1df41b27 from memory into f6
fmadd.s f31, f25, f30, f6, dyn # perform operation
fmadd.s f31, f25, f30, f6, rdn # perform operation
fmadd.s f31, f25, f30, f6, rmm # perform operation
fmadd.s f31, f25, f30, f6, rne # perform operation
fmadd.s f31, f25, f30, f6, rtz # perform operation
fmadd.s f31, f25, f30, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f25, f30, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f25, f30, f6 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x400000)
li x5, 0x2269e5b97addbf83 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f19, 0(x2) # load 0x00400000 from memory into f19
li x3, 0x60e2c323bb1a79d # load x3 with value 0x60e2c323bb1a79d
sw x3, 0(x2) # store 0x60e2c323bb1a79d in memory
flw f24, 0(x2) # load 0x60e2c323bb1a79d from memory into f24
fmadd.s f5, f26, f19, f24, dyn # perform operation
fmadd.s f5, f26, f19, f24, rdn # perform operation
fmadd.s f5, f26, f19, f24, rmm # perform operation
fmadd.s f5, f26, f19, f24, rne # perform operation
fmadd.s f5, f26, f19, f24, rtz # perform operation
fmadd.s f5, f26, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f19, f24 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80400000)
li x12, 0xa58b6b08e6f771df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x7936727b6e845314 # load x3 with value 0x7936727b6e845314
sw x3, 0(x2) # store 0x7936727b6e845314 in memory
flw f27, 0(x2) # load 0x7936727b6e845314 from memory into f27
fmadd.s f12, f15, f7, f27, dyn # perform operation
fmadd.s f12, f15, f7, f27, rdn # perform operation
fmadd.s f12, f15, f7, f27, rmm # perform operation
fmadd.s f12, f15, f7, f27, rne # perform operation
fmadd.s f12, f15, f7, f27, rtz # perform operation
fmadd.s f12, f15, f7, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f7, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f7, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x1)
li x12, 0x3e803fedf2b29dec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xb176d14dfb7d4129 # load x3 with value 0xb176d14dfb7d4129
sw x3, 0(x2) # store 0xb176d14dfb7d4129 in memory
flw f28, 0(x2) # load 0xb176d14dfb7d4129 from memory into f28
fmadd.s f12, f21, f16, f28, dyn # perform operation
fmadd.s f12, f21, f16, f28, rdn # perform operation
fmadd.s f12, f21, f16, f28, rmm # perform operation
fmadd.s f12, f21, f16, f28, rne # perform operation
fmadd.s f12, f21, f16, f28, rtz # perform operation
fmadd.s f12, f21, f16, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f16, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f16, f28 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x80000001)
li x23, 0x1a0d98fb7aafecb2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f1, 0(x2) # load 0x813d9ab0 from memory into f1
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x1992401ea6f9f670 # load x3 with value 0x1992401ea6f9f670
sw x3, 0(x2) # store 0x1992401ea6f9f670 in memory
flw f15, 0(x2) # load 0x1992401ea6f9f670 from memory into f15
fmadd.s f23, f1, f22, f15, dyn # perform operation
fmadd.s f23, f1, f22, f15, rdn # perform operation
fmadd.s f23, f1, f22, f15, rmm # perform operation
fmadd.s f23, f1, f22, f15, rne # perform operation
fmadd.s f23, f1, f22, f15, rtz # perform operation
fmadd.s f23, f1, f22, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f22, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f22, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800000)
li x11, 0x93bf30a0cae0b12a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xfe574e80453177b4 # load x3 with value 0xfe574e80453177b4
sw x3, 0(x2) # store 0xfe574e80453177b4 in memory
flw f3, 0(x2) # load 0xfe574e80453177b4 from memory into f3
fmadd.s f11, f4, f24, f3, dyn # perform operation
fmadd.s f11, f4, f24, f3, rdn # perform operation
fmadd.s f11, f4, f24, f3, rmm # perform operation
fmadd.s f11, f4, f24, f3, rne # perform operation
fmadd.s f11, f4, f24, f3, rtz # perform operation
fmadd.s f11, f4, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f4, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f4, f24, f3 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0xff800000)
li x1, 0x498c472b6aa12e65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
li x3, 0x4926d372f646bc3f # load x3 with value 0x4926d372f646bc3f
sw x3, 0(x2) # store 0x4926d372f646bc3f in memory
flw f9, 0(x2) # load 0x4926d372f646bc3f from memory into f9
fmadd.s f1, f12, f14, f9, dyn # perform operation
fmadd.s f1, f12, f14, f9, rdn # perform operation
fmadd.s f1, f12, f14, f9, rmm # perform operation
fmadd.s f1, f12, f14, f9, rne # perform operation
fmadd.s f1, f12, f14, f9, rtz # perform operation
fmadd.s f1, f12, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f12, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f12, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f12, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f12, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f12, f14, f9 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fc00000)
li x26, 0x99891955c00596c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0xe0d93b3420cd3b32 # load x3 with value 0xe0d93b3420cd3b32
sw x3, 0(x2) # store 0xe0d93b3420cd3b32 in memory
flw f30, 0(x2) # load 0xe0d93b3420cd3b32 from memory into f30
fmadd.s f26, f18, f16, f30, dyn # perform operation
fmadd.s f26, f18, f16, f30, rdn # perform operation
fmadd.s f26, f18, f16, f30, rmm # perform operation
fmadd.s f26, f18, f16, f30, rne # perform operation
fmadd.s f26, f18, f16, f30, rtz # perform operation
fmadd.s f26, f18, f16, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f18, f16, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f18, f16, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f18, f16, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f18, f16, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f18, f16, f30 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fffffff)
li x5, 0x1b9f6dd34910a42a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f21, 0(x2) # load 0x7fffffff from memory into f21
li x3, 0x347ae97ae7aad13d # load x3 with value 0x347ae97ae7aad13d
sw x3, 0(x2) # store 0x347ae97ae7aad13d in memory
flw f27, 0(x2) # load 0x347ae97ae7aad13d from memory into f27
fmadd.s f5, f17, f21, f27, dyn # perform operation
fmadd.s f5, f17, f21, f27, rdn # perform operation
fmadd.s f5, f17, f21, f27, rmm # perform operation
fmadd.s f5, f17, f21, f27, rne # perform operation
fmadd.s f5, f17, f21, f27, rtz # perform operation
fmadd.s f5, f17, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f21, f27 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7f800001)
li x9, 0xa0c7840822fb7209 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
li x3, 0x6adb4d127ad557d7 # load x3 with value 0x6adb4d127ad557d7
sw x3, 0(x2) # store 0x6adb4d127ad557d7 in memory
flw f2, 0(x2) # load 0x6adb4d127ad557d7 from memory into f2
fmadd.s f9, f16, f3, f2, dyn # perform operation
fmadd.s f9, f16, f3, f2, rdn # perform operation
fmadd.s f9, f16, f3, f2, rmm # perform operation
fmadd.s f9, f16, f3, f2, rne # perform operation
fmadd.s f9, f16, f3, f2, rtz # perform operation
fmadd.s f9, f16, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f3, f2 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7fbfffff)
li x29, 0xc449e429245440bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f7, 0(x2) # load 0x7fbfffff from memory into f7
li x3, 0x1e55ebc4e2d52c36 # load x3 with value 0x1e55ebc4e2d52c36
sw x3, 0(x2) # store 0x1e55ebc4e2d52c36 in memory
flw f15, 0(x2) # load 0x1e55ebc4e2d52c36 from memory into f15
fmadd.s f29, f27, f7, f15, dyn # perform operation
fmadd.s f29, f27, f7, f15, rdn # perform operation
fmadd.s f29, f27, f7, f15, rmm # perform operation
fmadd.s f29, f27, f7, f15, rne # perform operation
fmadd.s f29, f27, f7, f15, rtz # perform operation
fmadd.s f29, f27, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f7, f15 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x7ef8654f)
li x2, 0x3a049dbbd19701e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x3aea36f56549411f # load x3 with value 0x3aea36f56549411f
sw x3, 0(x2) # store 0x3aea36f56549411f in memory
flw f21, 0(x2) # load 0x3aea36f56549411f from memory into f21
fmadd.s f2, f16, f29, f21, dyn # perform operation
fmadd.s f2, f16, f29, f21, rdn # perform operation
fmadd.s f2, f16, f29, f21, rmm # perform operation
fmadd.s f2, f16, f29, f21, rne # perform operation
fmadd.s f2, f16, f29, f21, rtz # perform operation
fmadd.s f2, f16, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f16, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f16, f29, f21 # perform operation

# Testcase cr_fs1_fs2_corners (Test source fs1 = 0x813d9ab0 fs2 = 0x813d9ab0)
li x4, 0x5efb6cfd0712aa4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x56d344ee40a3b751 # load x3 with value 0x56d344ee40a3b751
sw x3, 0(x2) # store 0x56d344ee40a3b751 in memory
flw f29, 0(x2) # load 0x56d344ee40a3b751 from memory into f29
fmadd.s f4, f16, f18, f29, dyn # perform operation
fmadd.s f4, f16, f18, f29, rdn # perform operation
fmadd.s f4, f16, f18, f29, rmm # perform operation
fmadd.s f4, f16, f18, f29, rne # perform operation
fmadd.s f4, f16, f18, f29, rtz # perform operation
fmadd.s f4, f16, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f16, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f16, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x0)
li x26, 0x376eb3f7f87a6a44 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0xeee37ac688e9c6b # load x3 with value 0xeee37ac688e9c6b
sw x3, 0(x2) # store 0xeee37ac688e9c6b in memory
flw f7, 0(x2) # load 0xeee37ac688e9c6b from memory into f7
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f26, f14, f7, f17, dyn # perform operation
fmadd.s f26, f14, f7, f17, rdn # perform operation
fmadd.s f26, f14, f7, f17, rmm # perform operation
fmadd.s f26, f14, f7, f17, rne # perform operation
fmadd.s f26, f14, f7, f17, rtz # perform operation
fmadd.s f26, f14, f7, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f14, f7, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f14, f7, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000000)
li x7, 0x5faa1d4a60123ea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xc41ecec21195be47 # load x3 with value 0xc41ecec21195be47
sw x3, 0(x2) # store 0xc41ecec21195be47 in memory
flw f23, 0(x2) # load 0xc41ecec21195be47 from memory into f23
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f9, 0(x2) # load 0x80000000 from memory into f9
fmadd.s f7, f11, f23, f9, dyn # perform operation
fmadd.s f7, f11, f23, f9, rdn # perform operation
fmadd.s f7, f11, f23, f9, rmm # perform operation
fmadd.s f7, f11, f23, f9, rne # perform operation
fmadd.s f7, f11, f23, f9, rtz # perform operation
fmadd.s f7, f11, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f11, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f11, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3f800000)
li x25, 0x5a250bfc0ca98a3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
li x3, 0x43b56953050b0e96 # load x3 with value 0x43b56953050b0e96
sw x3, 0(x2) # store 0x43b56953050b0e96 in memory
flw f15, 0(x2) # load 0x43b56953050b0e96 from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
fmadd.s f25, f14, f15, f9, dyn # perform operation
fmadd.s f25, f14, f15, f9, rdn # perform operation
fmadd.s f25, f14, f15, f9, rmm # perform operation
fmadd.s f25, f14, f15, f9, rne # perform operation
fmadd.s f25, f14, f15, f9, rtz # perform operation
fmadd.s f25, f14, f15, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f15, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f15, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f15, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f15, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f15, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbf800000)
li x28, 0xf510f89a48c4c446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f24, 0(x2) # load 0x00000000 from memory into f24
li x3, 0x6d9a5bcd79b0f272 # load x3 with value 0x6d9a5bcd79b0f272
sw x3, 0(x2) # store 0x6d9a5bcd79b0f272 in memory
flw f30, 0(x2) # load 0x6d9a5bcd79b0f272 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f5, 0(x2) # load 0xbf800000 from memory into f5
fmadd.s f28, f24, f30, f5, dyn # perform operation
fmadd.s f28, f24, f30, f5, rdn # perform operation
fmadd.s f28, f24, f30, f5, rmm # perform operation
fmadd.s f28, f24, f30, f5, rne # perform operation
fmadd.s f28, f24, f30, f5, rtz # perform operation
fmadd.s f28, f24, f30, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f30, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f30, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x3fc00000)
li x9, 0x0b8e5c4304bbb678 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f22, 0(x2) # load 0x00000000 from memory into f22
li x3, 0x7556f6f0f8ff8bab # load x3 with value 0x7556f6f0f8ff8bab
sw x3, 0(x2) # store 0x7556f6f0f8ff8bab in memory
flw f23, 0(x2) # load 0x7556f6f0f8ff8bab from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f25, 0(x2) # load 0x3fc00000 from memory into f25
fmadd.s f9, f22, f23, f25, dyn # perform operation
fmadd.s f9, f22, f23, f25, rdn # perform operation
fmadd.s f9, f22, f23, f25, rmm # perform operation
fmadd.s f9, f22, f23, f25, rne # perform operation
fmadd.s f9, f22, f23, f25, rtz # perform operation
fmadd.s f9, f22, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f22, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f22, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xbfc00000)
li x23, 0x93c50b491b61abfc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f8, 0(x2) # load 0x00000000 from memory into f8
li x3, 0x33d3a42b926806b3 # load x3 with value 0x33d3a42b926806b3
sw x3, 0(x2) # store 0x33d3a42b926806b3 in memory
flw f29, 0(x2) # load 0x33d3a42b926806b3 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f23, f8, f29, f21, dyn # perform operation
fmadd.s f23, f8, f29, f21, rdn # perform operation
fmadd.s f23, f8, f29, f21, rmm # perform operation
fmadd.s f23, f8, f29, f21, rne # perform operation
fmadd.s f23, f8, f29, f21, rtz # perform operation
fmadd.s f23, f8, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f8, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f8, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x40000000)
li x5, 0x6d2a96beafec9b99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0x2ce082a173015e84 # load x3 with value 0x2ce082a173015e84
sw x3, 0(x2) # store 0x2ce082a173015e84 in memory
flw f7, 0(x2) # load 0x2ce082a173015e84 from memory into f7
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
fmadd.s f5, f21, f7, f18, dyn # perform operation
fmadd.s f5, f21, f7, f18, rdn # perform operation
fmadd.s f5, f21, f7, f18, rmm # perform operation
fmadd.s f5, f21, f7, f18, rne # perform operation
fmadd.s f5, f21, f7, f18, rtz # perform operation
fmadd.s f5, f21, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f21, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f21, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xc0000000)
li x25, 0x933c38d4c5d4700e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x9674afbbdbc751e1 # load x3 with value 0x9674afbbdbc751e1
sw x3, 0(x2) # store 0x9674afbbdbc751e1 in memory
flw f8, 0(x2) # load 0x9674afbbdbc751e1 from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmadd.s f25, f10, f8, f23, dyn # perform operation
fmadd.s f25, f10, f8, f23, rdn # perform operation
fmadd.s f25, f10, f8, f23, rmm # perform operation
fmadd.s f25, f10, f8, f23, rne # perform operation
fmadd.s f25, f10, f8, f23, rtz # perform operation
fmadd.s f25, f10, f8, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f8, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f8, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x800000)
li x26, 0xcf524f68f3ca3ff5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f5, 0(x2) # load 0x00000000 from memory into f5
li x3, 0x5d784bbc0c02ee8 # load x3 with value 0x5d784bbc0c02ee8
sw x3, 0(x2) # store 0x5d784bbc0c02ee8 in memory
flw f24, 0(x2) # load 0x5d784bbc0c02ee8 from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
fmadd.s f26, f5, f24, f28, dyn # perform operation
fmadd.s f26, f5, f24, f28, rdn # perform operation
fmadd.s f26, f5, f24, f28, rmm # perform operation
fmadd.s f26, f5, f24, f28, rne # perform operation
fmadd.s f26, f5, f24, f28, rtz # perform operation
fmadd.s f26, f5, f24, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f24, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f24, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80800000)
li x6, 0xb06f637ea33eea47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x6a26daa0f3bb9663 # load x3 with value 0x6a26daa0f3bb9663
sw x3, 0(x2) # store 0x6a26daa0f3bb9663 in memory
flw f5, 0(x2) # load 0x6a26daa0f3bb9663 from memory into f5
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f6, f7, f5, f11, dyn # perform operation
fmadd.s f6, f7, f5, f11, rdn # perform operation
fmadd.s f6, f7, f5, f11, rmm # perform operation
fmadd.s f6, f7, f5, f11, rne # perform operation
fmadd.s f6, f7, f5, f11, rtz # perform operation
fmadd.s f6, f7, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f7fffff)
li x24, 0xf92bd35ccc437dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
li x3, 0x1faa8793854967bc # load x3 with value 0x1faa8793854967bc
sw x3, 0(x2) # store 0x1faa8793854967bc in memory
flw f11, 0(x2) # load 0x1faa8793854967bc from memory into f11
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f24, f17, f11, f30, dyn # perform operation
fmadd.s f24, f17, f11, f30, rdn # perform operation
fmadd.s f24, f17, f11, f30, rmm # perform operation
fmadd.s f24, f17, f11, f30, rne # perform operation
fmadd.s f24, f17, f11, f30, rtz # perform operation
fmadd.s f24, f17, f11, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f17, f11, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f17, f11, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f17, f11, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f17, f11, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f17, f11, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff7fffff)
li x10, 0xd9b3dcbcbdcf49cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x910bd4028a7c2ec4 # load x3 with value 0x910bd4028a7c2ec4
sw x3, 0(x2) # store 0x910bd4028a7c2ec4 in memory
flw f30, 0(x2) # load 0x910bd4028a7c2ec4 from memory into f30
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f9, 0(x2) # load 0xff7fffff from memory into f9
fmadd.s f10, f19, f30, f9, dyn # perform operation
fmadd.s f10, f19, f30, f9, rdn # perform operation
fmadd.s f10, f19, f30, f9, rmm # perform operation
fmadd.s f10, f19, f30, f9, rne # perform operation
fmadd.s f10, f19, f30, f9, rtz # perform operation
fmadd.s f10, f19, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f19, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f19, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffff)
li x26, 0x85abb91e85b74355 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f1, 0(x2) # load 0x00000000 from memory into f1
li x3, 0x8cb966911921c955 # load x3 with value 0x8cb966911921c955
sw x3, 0(x2) # store 0x8cb966911921c955 in memory
flw f21, 0(x2) # load 0x8cb966911921c955 from memory into f21
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
fmadd.s f26, f1, f21, f27, dyn # perform operation
fmadd.s f26, f1, f21, f27, rdn # perform operation
fmadd.s f26, f1, f21, f27, rmm # perform operation
fmadd.s f26, f1, f21, f27, rne # perform operation
fmadd.s f26, f1, f21, f27, rtz # perform operation
fmadd.s f26, f1, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f1, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x807fffff)
li x18, 0x2f5b8acd5cd92fbc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
li x3, 0x32ce94801559d68 # load x3 with value 0x32ce94801559d68
sw x3, 0(x2) # store 0x32ce94801559d68 in memory
flw f6, 0(x2) # load 0x32ce94801559d68 from memory into f6
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f18, f7, f6, f27, dyn # perform operation
fmadd.s f18, f7, f6, f27, rdn # perform operation
fmadd.s f18, f7, f6, f27, rmm # perform operation
fmadd.s f18, f7, f6, f27, rne # perform operation
fmadd.s f18, f7, f6, f27, rtz # perform operation
fmadd.s f18, f7, f6, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f7, f6, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f7, f6, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x400000)
li x19, 0xa13398e9b69e7fb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
li x3, 0xb43243b081490356 # load x3 with value 0xb43243b081490356
sw x3, 0(x2) # store 0xb43243b081490356 in memory
flw f18, 0(x2) # load 0xb43243b081490356 from memory into f18
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
fmadd.s f19, f11, f18, f3, dyn # perform operation
fmadd.s f19, f11, f18, f3, rdn # perform operation
fmadd.s f19, f11, f18, f3, rmm # perform operation
fmadd.s f19, f11, f18, f3, rne # perform operation
fmadd.s f19, f11, f18, f3, rtz # perform operation
fmadd.s f19, f11, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f11, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f11, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80400000)
li x26, 0xbed343dd2d14337e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f10, 0(x2) # load 0x00000000 from memory into f10
li x3, 0x8ab5a786f471f2ec # load x3 with value 0x8ab5a786f471f2ec
sw x3, 0(x2) # store 0x8ab5a786f471f2ec in memory
flw f25, 0(x2) # load 0x8ab5a786f471f2ec from memory into f25
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f26, f10, f25, f31, dyn # perform operation
fmadd.s f26, f10, f25, f31, rdn # perform operation
fmadd.s f26, f10, f25, f31, rmm # perform operation
fmadd.s f26, f10, f25, f31, rne # perform operation
fmadd.s f26, f10, f25, f31, rtz # perform operation
fmadd.s f26, f10, f25, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f10, f25, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f10, f25, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x1)
li x20, 0xb91dcb58f10a0df3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f21, 0(x2) # load 0x00000000 from memory into f21
li x3, 0xc5c6cd26386ea141 # load x3 with value 0xc5c6cd26386ea141
sw x3, 0(x2) # store 0xc5c6cd26386ea141 in memory
flw f7, 0(x2) # load 0xc5c6cd26386ea141 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f4, 0(x2) # load 0x00000001 from memory into f4
fmadd.s f20, f21, f7, f4, dyn # perform operation
fmadd.s f20, f21, f7, f4, rdn # perform operation
fmadd.s f20, f21, f7, f4, rmm # perform operation
fmadd.s f20, f21, f7, f4, rne # perform operation
fmadd.s f20, f21, f7, f4, rtz # perform operation
fmadd.s f20, f21, f7, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f7, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f7, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f7, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f7, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f7, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x80000001)
li x4, 0x06d0a7ab6a17edfb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
li x3, 0x8a06186fad065259 # load x3 with value 0x8a06186fad065259
sw x3, 0(x2) # store 0x8a06186fad065259 in memory
flw f29, 0(x2) # load 0x8a06186fad065259 from memory into f29
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmadd.s f4, f16, f29, f12, dyn # perform operation
fmadd.s f4, f16, f29, f12, rdn # perform operation
fmadd.s f4, f16, f29, f12, rmm # perform operation
fmadd.s f4, f16, f29, f12, rne # perform operation
fmadd.s f4, f16, f29, f12, rtz # perform operation
fmadd.s f4, f16, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f16, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f16, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f16, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f16, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f16, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800000)
li x11, 0x8c7091ea96b99354 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
li x3, 0xbd95e9e7125205fc # load x3 with value 0xbd95e9e7125205fc
sw x3, 0(x2) # store 0xbd95e9e7125205fc in memory
flw f21, 0(x2) # load 0xbd95e9e7125205fc from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmadd.s f11, f28, f21, f2, dyn # perform operation
fmadd.s f11, f28, f21, f2, rdn # perform operation
fmadd.s f11, f28, f21, f2, rmm # perform operation
fmadd.s f11, f28, f21, f2, rne # perform operation
fmadd.s f11, f28, f21, f2, rtz # perform operation
fmadd.s f11, f28, f21, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f21, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f21, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f21, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f21, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f21, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0xff800000)
li x17, 0xfb64773a0941bec4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
li x3, 0x426a724742e7ba24 # load x3 with value 0x426a724742e7ba24
sw x3, 0(x2) # store 0x426a724742e7ba24 in memory
flw f19, 0(x2) # load 0x426a724742e7ba24 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f10, 0(x2) # load 0xff800000 from memory into f10
fmadd.s f17, f30, f19, f10, dyn # perform operation
fmadd.s f17, f30, f19, f10, rdn # perform operation
fmadd.s f17, f30, f19, f10, rmm # perform operation
fmadd.s f17, f30, f19, f10, rne # perform operation
fmadd.s f17, f30, f19, f10, rtz # perform operation
fmadd.s f17, f30, f19, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f30, f19, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f30, f19, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fc00000)
li x15, 0x617ad85349be1cb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f20, 0(x2) # load 0x00000000 from memory into f20
li x3, 0x1a4d16fadc239b10 # load x3 with value 0x1a4d16fadc239b10
sw x3, 0(x2) # store 0x1a4d16fadc239b10 in memory
flw f2, 0(x2) # load 0x1a4d16fadc239b10 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fmadd.s f15, f20, f2, f1, dyn # perform operation
fmadd.s f15, f20, f2, f1, rdn # perform operation
fmadd.s f15, f20, f2, f1, rmm # perform operation
fmadd.s f15, f20, f2, f1, rne # perform operation
fmadd.s f15, f20, f2, f1, rtz # perform operation
fmadd.s f15, f20, f2, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f2, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f2, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f2, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f2, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f2, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fffffff)
li x25, 0x3aad971ab8c44a1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x670d78946b110ba5 # load x3 with value 0x670d78946b110ba5
sw x3, 0(x2) # store 0x670d78946b110ba5 in memory
flw f16, 0(x2) # load 0x670d78946b110ba5 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f22, 0(x2) # load 0x7fffffff from memory into f22
fmadd.s f25, f27, f16, f22, dyn # perform operation
fmadd.s f25, f27, f16, f22, rdn # perform operation
fmadd.s f25, f27, f16, f22, rmm # perform operation
fmadd.s f25, f27, f16, f22, rne # perform operation
fmadd.s f25, f27, f16, f22, rtz # perform operation
fmadd.s f25, f27, f16, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f16, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f16, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7f800001)
li x5, 0xf35241888f8920b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f3, 0(x2) # load 0x00000000 from memory into f3
li x3, 0x3bc2bfdb299c8583 # load x3 with value 0x3bc2bfdb299c8583
sw x3, 0(x2) # store 0x3bc2bfdb299c8583 in memory
flw f26, 0(x2) # load 0x3bc2bfdb299c8583 from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmadd.s f5, f3, f26, f11, dyn # perform operation
fmadd.s f5, f3, f26, f11, rdn # perform operation
fmadd.s f5, f3, f26, f11, rmm # perform operation
fmadd.s f5, f3, f26, f11, rne # perform operation
fmadd.s f5, f3, f26, f11, rtz # perform operation
fmadd.s f5, f3, f26, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f3, f26, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f3, f26, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f3, f26, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f3, f26, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f3, f26, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7fbfffff)
li x24, 0x5da53d6ba37cb26a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
li x3, 0x495c6678f7b1acd4 # load x3 with value 0x495c6678f7b1acd4
sw x3, 0(x2) # store 0x495c6678f7b1acd4 in memory
flw f1, 0(x2) # load 0x495c6678f7b1acd4 from memory into f1
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmadd.s f24, f19, f1, f10, dyn # perform operation
fmadd.s f24, f19, f1, f10, rdn # perform operation
fmadd.s f24, f19, f1, f10, rmm # perform operation
fmadd.s f24, f19, f1, f10, rne # perform operation
fmadd.s f24, f19, f1, f10, rtz # perform operation
fmadd.s f24, f19, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x7ef8654f)
li x1, 0xfeb38de1a3f6c4c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f4, 0(x2) # load 0x00000000 from memory into f4
li x3, 0xbe3e202c587f9a23 # load x3 with value 0xbe3e202c587f9a23
sw x3, 0(x2) # store 0xbe3e202c587f9a23 in memory
flw f20, 0(x2) # load 0xbe3e202c587f9a23 from memory into f20
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f24, 0(x2) # load 0x7ef8654f from memory into f24
fmadd.s f1, f4, f20, f24, dyn # perform operation
fmadd.s f1, f4, f20, f24, rdn # perform operation
fmadd.s f1, f4, f20, f24, rmm # perform operation
fmadd.s f1, f4, f20, f24, rne # perform operation
fmadd.s f1, f4, f20, f24, rtz # perform operation
fmadd.s f1, f4, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f4, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f4, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f4, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f4, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f4, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x0 fs3 = 0x813d9ab0)
li x15, 0x96c36f8a7d1c6c15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
li x3, 0x942a036dea46ffd0 # load x3 with value 0x942a036dea46ffd0
sw x3, 0(x2) # store 0x942a036dea46ffd0 in memory
flw f5, 0(x2) # load 0x942a036dea46ffd0 from memory into f5
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f2, 0(x2) # load 0x813d9ab0 from memory into f2
fmadd.s f15, f27, f5, f2, dyn # perform operation
fmadd.s f15, f27, f5, f2, rdn # perform operation
fmadd.s f15, f27, f5, f2, rmm # perform operation
fmadd.s f15, f27, f5, f2, rne # perform operation
fmadd.s f15, f27, f5, f2, rtz # perform operation
fmadd.s f15, f27, f5, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f5, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f5, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x0)
li x25, 0x13241cf6ee301233 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
li x3, 0x102e4abdab17d036 # load x3 with value 0x102e4abdab17d036
sw x3, 0(x2) # store 0x102e4abdab17d036 in memory
flw f3, 0(x2) # load 0x102e4abdab17d036 from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f25, f2, f3, f6, dyn # perform operation
fmadd.s f25, f2, f3, f6, rdn # perform operation
fmadd.s f25, f2, f3, f6, rmm # perform operation
fmadd.s f25, f2, f3, f6, rne # perform operation
fmadd.s f25, f2, f3, f6, rtz # perform operation
fmadd.s f25, f2, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f2, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f2, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000000)
li x22, 0x2307cbcc193f41c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x8857346e0d666ebc # load x3 with value 0x8857346e0d666ebc
sw x3, 0(x2) # store 0x8857346e0d666ebc in memory
flw f17, 0(x2) # load 0x8857346e0d666ebc from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmadd.s f22, f29, f17, f30, dyn # perform operation
fmadd.s f22, f29, f17, f30, rdn # perform operation
fmadd.s f22, f29, f17, f30, rmm # perform operation
fmadd.s f22, f29, f17, f30, rne # perform operation
fmadd.s f22, f29, f17, f30, rtz # perform operation
fmadd.s f22, f29, f17, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f17, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f17, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3f800000)
li x7, 0x2c8ed7875b60aaa7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x16822a24199dac54 # load x3 with value 0x16822a24199dac54
sw x3, 0(x2) # store 0x16822a24199dac54 in memory
flw f6, 0(x2) # load 0x16822a24199dac54 from memory into f6
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fmadd.s f7, f23, f6, f11, dyn # perform operation
fmadd.s f7, f23, f6, f11, rdn # perform operation
fmadd.s f7, f23, f6, f11, rmm # perform operation
fmadd.s f7, f23, f6, f11, rne # perform operation
fmadd.s f7, f23, f6, f11, rtz # perform operation
fmadd.s f7, f23, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f23, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f23, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbf800000)
li x26, 0x0a67c70f6deb75bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x89d6add2f215ede9 # load x3 with value 0x89d6add2f215ede9
sw x3, 0(x2) # store 0x89d6add2f215ede9 in memory
flw f17, 0(x2) # load 0x89d6add2f215ede9 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
fmadd.s f26, f23, f17, f31, dyn # perform operation
fmadd.s f26, f23, f17, f31, rdn # perform operation
fmadd.s f26, f23, f17, f31, rmm # perform operation
fmadd.s f26, f23, f17, f31, rne # perform operation
fmadd.s f26, f23, f17, f31, rtz # perform operation
fmadd.s f26, f23, f17, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f17, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f17, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x3fc00000)
li x25, 0xf0e17cd7fe8441f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0xda6669d5240f0fb0 # load x3 with value 0xda6669d5240f0fb0
sw x3, 0(x2) # store 0xda6669d5240f0fb0 in memory
flw f2, 0(x2) # load 0xda6669d5240f0fb0 from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f5, 0(x2) # load 0x3fc00000 from memory into f5
fmadd.s f25, f27, f2, f5, dyn # perform operation
fmadd.s f25, f27, f2, f5, rdn # perform operation
fmadd.s f25, f27, f2, f5, rmm # perform operation
fmadd.s f25, f27, f2, f5, rne # perform operation
fmadd.s f25, f27, f2, f5, rtz # perform operation
fmadd.s f25, f27, f2, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f27, f2, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f27, f2, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xbfc00000)
li x20, 0x9b10732dbc099b4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x2b31f6841ba3c7da # load x3 with value 0x2b31f6841ba3c7da
sw x3, 0(x2) # store 0x2b31f6841ba3c7da in memory
flw f14, 0(x2) # load 0x2b31f6841ba3c7da from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f11, 0(x2) # load 0xbfc00000 from memory into f11
fmadd.s f20, f3, f14, f11, dyn # perform operation
fmadd.s f20, f3, f14, f11, rdn # perform operation
fmadd.s f20, f3, f14, f11, rmm # perform operation
fmadd.s f20, f3, f14, f11, rne # perform operation
fmadd.s f20, f3, f14, f11, rtz # perform operation
fmadd.s f20, f3, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f3, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f3, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x40000000)
li x27, 0x1a587cd41b416891 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x2934e03a7db95d25 # load x3 with value 0x2934e03a7db95d25
sw x3, 0(x2) # store 0x2934e03a7db95d25 in memory
flw f21, 0(x2) # load 0x2934e03a7db95d25 from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
fmadd.s f27, f28, f21, f15, dyn # perform operation
fmadd.s f27, f28, f21, f15, rdn # perform operation
fmadd.s f27, f28, f21, f15, rmm # perform operation
fmadd.s f27, f28, f21, f15, rne # perform operation
fmadd.s f27, f28, f21, f15, rtz # perform operation
fmadd.s f27, f28, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xc0000000)
li x28, 0x88e579cf8f548554 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0xb272d31e19813b2b # load x3 with value 0xb272d31e19813b2b
sw x3, 0(x2) # store 0xb272d31e19813b2b in memory
flw f20, 0(x2) # load 0xb272d31e19813b2b from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f16, 0(x2) # load 0xc0000000 from memory into f16
fmadd.s f28, f27, f20, f16, dyn # perform operation
fmadd.s f28, f27, f20, f16, rdn # perform operation
fmadd.s f28, f27, f20, f16, rmm # perform operation
fmadd.s f28, f27, f20, f16, rne # perform operation
fmadd.s f28, f27, f20, f16, rtz # perform operation
fmadd.s f28, f27, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f27, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f27, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f27, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f27, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f27, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x800000)
li x9, 0xe476536334e6caf0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0xfa00d7369fe715e # load x3 with value 0xfa00d7369fe715e
sw x3, 0(x2) # store 0xfa00d7369fe715e in memory
flw f12, 0(x2) # load 0xfa00d7369fe715e from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f31, 0(x2) # load 0x00800000 from memory into f31
fmadd.s f9, f24, f12, f31, dyn # perform operation
fmadd.s f9, f24, f12, f31, rdn # perform operation
fmadd.s f9, f24, f12, f31, rmm # perform operation
fmadd.s f9, f24, f12, f31, rne # perform operation
fmadd.s f9, f24, f12, f31, rtz # perform operation
fmadd.s f9, f24, f12, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f12, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f12, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80800000)
li x21, 0xebc031e03c37d5fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0xdf74106fdcf4ae6d # load x3 with value 0xdf74106fdcf4ae6d
sw x3, 0(x2) # store 0xdf74106fdcf4ae6d in memory
flw f19, 0(x2) # load 0xdf74106fdcf4ae6d from memory into f19
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f12, 0(x2) # load 0x80800000 from memory into f12
fmadd.s f21, f3, f19, f12, dyn # perform operation
fmadd.s f21, f3, f19, f12, rdn # perform operation
fmadd.s f21, f3, f19, f12, rmm # perform operation
fmadd.s f21, f3, f19, f12, rne # perform operation
fmadd.s f21, f3, f19, f12, rtz # perform operation
fmadd.s f21, f3, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f3, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f3, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f7fffff)
li x30, 0xfe44e331f3e5fdc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
li x3, 0xda6a081e89ba2777 # load x3 with value 0xda6a081e89ba2777
sw x3, 0(x2) # store 0xda6a081e89ba2777 in memory
flw f6, 0(x2) # load 0xda6a081e89ba2777 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f30, f12, f6, f14, dyn # perform operation
fmadd.s f30, f12, f6, f14, rdn # perform operation
fmadd.s f30, f12, f6, f14, rmm # perform operation
fmadd.s f30, f12, f6, f14, rne # perform operation
fmadd.s f30, f12, f6, f14, rtz # perform operation
fmadd.s f30, f12, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff7fffff)
li x26, 0xb7903eaf24859be5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x73432154bd026c0b # load x3 with value 0x73432154bd026c0b
sw x3, 0(x2) # store 0x73432154bd026c0b in memory
flw f21, 0(x2) # load 0x73432154bd026c0b from memory into f21
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f26, f22, f21, f30, dyn # perform operation
fmadd.s f26, f22, f21, f30, rdn # perform operation
fmadd.s f26, f22, f21, f30, rmm # perform operation
fmadd.s f26, f22, f21, f30, rne # perform operation
fmadd.s f26, f22, f21, f30, rtz # perform operation
fmadd.s f26, f22, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f22, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f22, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f22, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f22, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f22, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffff)
li x9, 0x53f8140cbced6fd8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
li x3, 0x82c960a307be2724 # load x3 with value 0x82c960a307be2724
sw x3, 0(x2) # store 0x82c960a307be2724 in memory
flw f6, 0(x2) # load 0x82c960a307be2724 from memory into f6
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
fmadd.s f9, f24, f6, f25, dyn # perform operation
fmadd.s f9, f24, f6, f25, rdn # perform operation
fmadd.s f9, f24, f6, f25, rmm # perform operation
fmadd.s f9, f24, f6, f25, rne # perform operation
fmadd.s f9, f24, f6, f25, rtz # perform operation
fmadd.s f9, f24, f6, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f24, f6, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f24, f6, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x807fffff)
li x1, 0x59432a39fa902fbb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
li x3, 0x7a9c9c0cc1209d5c # load x3 with value 0x7a9c9c0cc1209d5c
sw x3, 0(x2) # store 0x7a9c9c0cc1209d5c in memory
flw f10, 0(x2) # load 0x7a9c9c0cc1209d5c from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f18, 0(x2) # load 0x807fffff from memory into f18
fmadd.s f1, f23, f10, f18, dyn # perform operation
fmadd.s f1, f23, f10, f18, rdn # perform operation
fmadd.s f1, f23, f10, f18, rmm # perform operation
fmadd.s f1, f23, f10, f18, rne # perform operation
fmadd.s f1, f23, f10, f18, rtz # perform operation
fmadd.s f1, f23, f10, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f23, f10, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f23, f10, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x400000)
li x2, 0x1ee100ee449ca6dc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f5, 0(x2) # load 0x80000000 from memory into f5
li x3, 0x5644875fc1be73a8 # load x3 with value 0x5644875fc1be73a8
sw x3, 0(x2) # store 0x5644875fc1be73a8 in memory
flw f19, 0(x2) # load 0x5644875fc1be73a8 from memory into f19
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmadd.s f2, f5, f19, f25, dyn # perform operation
fmadd.s f2, f5, f19, f25, rdn # perform operation
fmadd.s f2, f5, f19, f25, rmm # perform operation
fmadd.s f2, f5, f19, f25, rne # perform operation
fmadd.s f2, f5, f19, f25, rtz # perform operation
fmadd.s f2, f5, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f5, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f5, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f5, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f5, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f5, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80400000)
li x1, 0x8025c162285ac313 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
li x3, 0x8ead462e677762a9 # load x3 with value 0x8ead462e677762a9
sw x3, 0(x2) # store 0x8ead462e677762a9 in memory
flw f12, 0(x2) # load 0x8ead462e677762a9 from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmadd.s f1, f7, f12, f23, dyn # perform operation
fmadd.s f1, f7, f12, f23, rdn # perform operation
fmadd.s f1, f7, f12, f23, rmm # perform operation
fmadd.s f1, f7, f12, f23, rne # perform operation
fmadd.s f1, f7, f12, f23, rtz # perform operation
fmadd.s f1, f7, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x1)
li x12, 0x8e4b1ec2e59cb268 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
li x3, 0x34b89a7f3551c9e3 # load x3 with value 0x34b89a7f3551c9e3
sw x3, 0(x2) # store 0x34b89a7f3551c9e3 in memory
flw f6, 0(x2) # load 0x34b89a7f3551c9e3 from memory into f6
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
fmadd.s f12, f3, f6, f18, dyn # perform operation
fmadd.s f12, f3, f6, f18, rdn # perform operation
fmadd.s f12, f3, f6, f18, rmm # perform operation
fmadd.s f12, f3, f6, f18, rne # perform operation
fmadd.s f12, f3, f6, f18, rtz # perform operation
fmadd.s f12, f3, f6, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f3, f6, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f3, f6, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x80000001)
li x17, 0xe7099d2b4e2150df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
li x3, 0xb04d72664f0c8e65 # load x3 with value 0xb04d72664f0c8e65
sw x3, 0(x2) # store 0xb04d72664f0c8e65 in memory
flw f15, 0(x2) # load 0xb04d72664f0c8e65 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmadd.s f17, f10, f15, f30, dyn # perform operation
fmadd.s f17, f10, f15, f30, rdn # perform operation
fmadd.s f17, f10, f15, f30, rmm # perform operation
fmadd.s f17, f10, f15, f30, rne # perform operation
fmadd.s f17, f10, f15, f30, rtz # perform operation
fmadd.s f17, f10, f15, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f15, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f15, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800000)
li x8, 0xd312afc0f13079e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f28, 0(x2) # load 0x80000000 from memory into f28
li x3, 0x7c14194d9d689db4 # load x3 with value 0x7c14194d9d689db4
sw x3, 0(x2) # store 0x7c14194d9d689db4 in memory
flw f16, 0(x2) # load 0x7c14194d9d689db4 from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f17, 0(x2) # load 0x7f800000 from memory into f17
fmadd.s f8, f28, f16, f17, dyn # perform operation
fmadd.s f8, f28, f16, f17, rdn # perform operation
fmadd.s f8, f28, f16, f17, rmm # perform operation
fmadd.s f8, f28, f16, f17, rne # perform operation
fmadd.s f8, f28, f16, f17, rtz # perform operation
fmadd.s f8, f28, f16, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f28, f16, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f28, f16, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0xff800000)
li x7, 0xec96a8ea466b0feb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f22, 0(x2) # load 0x80000000 from memory into f22
li x3, 0x479dc911fb9bd9e9 # load x3 with value 0x479dc911fb9bd9e9
sw x3, 0(x2) # store 0x479dc911fb9bd9e9 in memory
flw f20, 0(x2) # load 0x479dc911fb9bd9e9 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f7, f22, f20, f18, dyn # perform operation
fmadd.s f7, f22, f20, f18, rdn # perform operation
fmadd.s f7, f22, f20, f18, rmm # perform operation
fmadd.s f7, f22, f20, f18, rne # perform operation
fmadd.s f7, f22, f20, f18, rtz # perform operation
fmadd.s f7, f22, f20, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f20, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f20, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fc00000)
li x10, 0x17f2e390d9dacebc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
li x3, 0x2e376166078118ca # load x3 with value 0x2e376166078118ca
sw x3, 0(x2) # store 0x2e376166078118ca in memory
flw f25, 0(x2) # load 0x2e376166078118ca from memory into f25
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f10, f4, f25, f5, dyn # perform operation
fmadd.s f10, f4, f25, f5, rdn # perform operation
fmadd.s f10, f4, f25, f5, rmm # perform operation
fmadd.s f10, f4, f25, f5, rne # perform operation
fmadd.s f10, f4, f25, f5, rtz # perform operation
fmadd.s f10, f4, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f4, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f4, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f4, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f4, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f4, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fffffff)
li x15, 0xb0eda182e81371c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f16, 0(x2) # load 0x80000000 from memory into f16
li x3, 0xcd7c2aa1b3aa9206 # load x3 with value 0xcd7c2aa1b3aa9206
sw x3, 0(x2) # store 0xcd7c2aa1b3aa9206 in memory
flw f14, 0(x2) # load 0xcd7c2aa1b3aa9206 from memory into f14
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmadd.s f15, f16, f14, f4, dyn # perform operation
fmadd.s f15, f16, f14, f4, rdn # perform operation
fmadd.s f15, f16, f14, f4, rmm # perform operation
fmadd.s f15, f16, f14, f4, rne # perform operation
fmadd.s f15, f16, f14, f4, rtz # perform operation
fmadd.s f15, f16, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7f800001)
li x3, 0xeb98a7dc58a47f38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f6, 0(x2) # load 0x80000000 from memory into f6
li x3, 0x4caf4c730594ea4d # load x3 with value 0x4caf4c730594ea4d
sw x3, 0(x2) # store 0x4caf4c730594ea4d in memory
flw f26, 0(x2) # load 0x4caf4c730594ea4d from memory into f26
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmadd.s f3, f6, f26, f14, dyn # perform operation
fmadd.s f3, f6, f26, f14, rdn # perform operation
fmadd.s f3, f6, f26, f14, rmm # perform operation
fmadd.s f3, f6, f26, f14, rne # perform operation
fmadd.s f3, f6, f26, f14, rtz # perform operation
fmadd.s f3, f6, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7fbfffff)
li x14, 0x4ee83f842f1e8e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
li x3, 0x59783523ad537a87 # load x3 with value 0x59783523ad537a87
sw x3, 0(x2) # store 0x59783523ad537a87 in memory
flw f3, 0(x2) # load 0x59783523ad537a87 from memory into f3
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmadd.s f14, f29, f3, f2, dyn # perform operation
fmadd.s f14, f29, f3, f2, rdn # perform operation
fmadd.s f14, f29, f3, f2, rmm # perform operation
fmadd.s f14, f29, f3, f2, rne # perform operation
fmadd.s f14, f29, f3, f2, rtz # perform operation
fmadd.s f14, f29, f3, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f29, f3, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f29, f3, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f29, f3, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f29, f3, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f29, f3, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x7ef8654f)
li x9, 0xf7401cde9ebeeec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f20, 0(x2) # load 0x80000000 from memory into f20
li x3, 0xd09e10ec9a221148 # load x3 with value 0xd09e10ec9a221148
sw x3, 0(x2) # store 0xd09e10ec9a221148 in memory
flw f13, 0(x2) # load 0xd09e10ec9a221148 from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f3, 0(x2) # load 0x7ef8654f from memory into f3
fmadd.s f9, f20, f13, f3, dyn # perform operation
fmadd.s f9, f20, f13, f3, rdn # perform operation
fmadd.s f9, f20, f13, f3, rmm # perform operation
fmadd.s f9, f20, f13, f3, rne # perform operation
fmadd.s f9, f20, f13, f3, rtz # perform operation
fmadd.s f9, f20, f13, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f20, f13, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f20, f13, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f20, f13, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f20, f13, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f20, f13, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000000 fs3 = 0x813d9ab0)
li x9, 0xabfaa690710d4095 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
li x3, 0x899a8a1372314b07 # load x3 with value 0x899a8a1372314b07
sw x3, 0(x2) # store 0x899a8a1372314b07 in memory
flw f14, 0(x2) # load 0x899a8a1372314b07 from memory into f14
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
fmadd.s f9, f27, f14, f4, dyn # perform operation
fmadd.s f9, f27, f14, f4, rdn # perform operation
fmadd.s f9, f27, f14, f4, rmm # perform operation
fmadd.s f9, f27, f14, f4, rne # perform operation
fmadd.s f9, f27, f14, f4, rtz # perform operation
fmadd.s f9, f27, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f27, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f27, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x0)
li x17, 0x46a980f36a2c29a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x85966c273de304b9 # load x3 with value 0x85966c273de304b9
sw x3, 0(x2) # store 0x85966c273de304b9 in memory
flw f4, 0(x2) # load 0x85966c273de304b9 from memory into f4
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmadd.s f17, f25, f4, f23, dyn # perform operation
fmadd.s f17, f25, f4, f23, rdn # perform operation
fmadd.s f17, f25, f4, f23, rmm # perform operation
fmadd.s f17, f25, f4, f23, rne # perform operation
fmadd.s f17, f25, f4, f23, rtz # perform operation
fmadd.s f17, f25, f4, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f4, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f4, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f4, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f4, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f4, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000000)
li x1, 0x0145fc3cf95f2745 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0x476332404fc90a40 # load x3 with value 0x476332404fc90a40
sw x3, 0(x2) # store 0x476332404fc90a40 in memory
flw f28, 0(x2) # load 0x476332404fc90a40 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f1, f17, f28, f7, dyn # perform operation
fmadd.s f1, f17, f28, f7, rdn # perform operation
fmadd.s f1, f17, f28, f7, rmm # perform operation
fmadd.s f1, f17, f28, f7, rne # perform operation
fmadd.s f1, f17, f28, f7, rtz # perform operation
fmadd.s f1, f17, f28, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f28, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f28, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3f800000)
li x5, 0x6f70493073ed5c8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f16, 0(x2) # load 0x3f800000 from memory into f16
li x3, 0xdad55bbbec9a2dd0 # load x3 with value 0xdad55bbbec9a2dd0
sw x3, 0(x2) # store 0xdad55bbbec9a2dd0 in memory
flw f8, 0(x2) # load 0xdad55bbbec9a2dd0 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f5, f16, f8, f18, dyn # perform operation
fmadd.s f5, f16, f8, f18, rdn # perform operation
fmadd.s f5, f16, f8, f18, rmm # perform operation
fmadd.s f5, f16, f8, f18, rne # perform operation
fmadd.s f5, f16, f8, f18, rtz # perform operation
fmadd.s f5, f16, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f16, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f16, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f16, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f16, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f16, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbf800000)
li x9, 0x97edbc9972b94df9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
li x3, 0xd15546df63fd6877 # load x3 with value 0xd15546df63fd6877
sw x3, 0(x2) # store 0xd15546df63fd6877 in memory
flw f6, 0(x2) # load 0xd15546df63fd6877 from memory into f6
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
fmadd.s f9, f31, f6, f19, dyn # perform operation
fmadd.s f9, f31, f6, f19, rdn # perform operation
fmadd.s f9, f31, f6, f19, rmm # perform operation
fmadd.s f9, f31, f6, f19, rne # perform operation
fmadd.s f9, f31, f6, f19, rtz # perform operation
fmadd.s f9, f31, f6, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f6, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f6, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f6, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f6, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f6, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x3fc00000)
li x21, 0x2538c4d628b0522f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
li x3, 0x51acf519a809f47b # load x3 with value 0x51acf519a809f47b
sw x3, 0(x2) # store 0x51acf519a809f47b in memory
flw f2, 0(x2) # load 0x51acf519a809f47b from memory into f2
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
fmadd.s f21, f8, f2, f20, dyn # perform operation
fmadd.s f21, f8, f2, f20, rdn # perform operation
fmadd.s f21, f8, f2, f20, rmm # perform operation
fmadd.s f21, f8, f2, f20, rne # perform operation
fmadd.s f21, f8, f2, f20, rtz # perform operation
fmadd.s f21, f8, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f8, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f8, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xbfc00000)
li x10, 0x09446ed2904413e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f9, 0(x2) # load 0x3f800000 from memory into f9
li x3, 0x51bbef848664be00 # load x3 with value 0x51bbef848664be00
sw x3, 0(x2) # store 0x51bbef848664be00 in memory
flw f15, 0(x2) # load 0x51bbef848664be00 from memory into f15
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmadd.s f10, f9, f15, f4, dyn # perform operation
fmadd.s f10, f9, f15, f4, rdn # perform operation
fmadd.s f10, f9, f15, f4, rmm # perform operation
fmadd.s f10, f9, f15, f4, rne # perform operation
fmadd.s f10, f9, f15, f4, rtz # perform operation
fmadd.s f10, f9, f15, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f9, f15, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f9, f15, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x40000000)
li x31, 0x742f72d544b3c97b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
li x3, 0x1ef0f3f09497e3f0 # load x3 with value 0x1ef0f3f09497e3f0
sw x3, 0(x2) # store 0x1ef0f3f09497e3f0 in memory
flw f24, 0(x2) # load 0x1ef0f3f09497e3f0 from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
fmadd.s f31, f19, f24, f21, dyn # perform operation
fmadd.s f31, f19, f24, f21, rdn # perform operation
fmadd.s f31, f19, f24, f21, rmm # perform operation
fmadd.s f31, f19, f24, f21, rne # perform operation
fmadd.s f31, f19, f24, f21, rtz # perform operation
fmadd.s f31, f19, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f19, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f19, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f19, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f19, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f19, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xc0000000)
li x19, 0xada33f920bb2a201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0xa65d17e356ce79a2 # load x3 with value 0xa65d17e356ce79a2
sw x3, 0(x2) # store 0xa65d17e356ce79a2 in memory
flw f26, 0(x2) # load 0xa65d17e356ce79a2 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f19, f27, f26, f29, dyn # perform operation
fmadd.s f19, f27, f26, f29, rdn # perform operation
fmadd.s f19, f27, f26, f29, rmm # perform operation
fmadd.s f19, f27, f26, f29, rne # perform operation
fmadd.s f19, f27, f26, f29, rtz # perform operation
fmadd.s f19, f27, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x800000)
li x22, 0x9b3d887662be335b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f28, 0(x2) # load 0x3f800000 from memory into f28
li x3, 0x401e0408a6f56df2 # load x3 with value 0x401e0408a6f56df2
sw x3, 0(x2) # store 0x401e0408a6f56df2 in memory
flw f9, 0(x2) # load 0x401e0408a6f56df2 from memory into f9
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f22, f28, f9, f3, dyn # perform operation
fmadd.s f22, f28, f9, f3, rdn # perform operation
fmadd.s f22, f28, f9, f3, rmm # perform operation
fmadd.s f22, f28, f9, f3, rne # perform operation
fmadd.s f22, f28, f9, f3, rtz # perform operation
fmadd.s f22, f28, f9, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f28, f9, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f28, f9, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f28, f9, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f28, f9, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f28, f9, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80800000)
li x1, 0xb84b2b48193b156b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f17, 0(x2) # load 0x3f800000 from memory into f17
li x3, 0xd2fa57fe3edbc61b # load x3 with value 0xd2fa57fe3edbc61b
sw x3, 0(x2) # store 0xd2fa57fe3edbc61b in memory
flw f26, 0(x2) # load 0xd2fa57fe3edbc61b from memory into f26
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
fmadd.s f1, f17, f26, f13, dyn # perform operation
fmadd.s f1, f17, f26, f13, rdn # perform operation
fmadd.s f1, f17, f26, f13, rmm # perform operation
fmadd.s f1, f17, f26, f13, rne # perform operation
fmadd.s f1, f17, f26, f13, rtz # perform operation
fmadd.s f1, f17, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f17, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f17, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f17, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f17, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f17, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f7fffff)
li x5, 0x811ccf675fe84334 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
li x3, 0x286bac8b06544724 # load x3 with value 0x286bac8b06544724
sw x3, 0(x2) # store 0x286bac8b06544724 in memory
flw f9, 0(x2) # load 0x286bac8b06544724 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f5, f13, f9, f31, dyn # perform operation
fmadd.s f5, f13, f9, f31, rdn # perform operation
fmadd.s f5, f13, f9, f31, rmm # perform operation
fmadd.s f5, f13, f9, f31, rne # perform operation
fmadd.s f5, f13, f9, f31, rtz # perform operation
fmadd.s f5, f13, f9, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f13, f9, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f13, f9, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f13, f9, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f13, f9, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f13, f9, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff7fffff)
li x13, 0x28e5d62759623802 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
li x3, 0xd39a4e5531349c7b # load x3 with value 0xd39a4e5531349c7b
sw x3, 0(x2) # store 0xd39a4e5531349c7b in memory
flw f17, 0(x2) # load 0xd39a4e5531349c7b from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
fmadd.s f13, f2, f17, f12, dyn # perform operation
fmadd.s f13, f2, f17, f12, rdn # perform operation
fmadd.s f13, f2, f17, f12, rmm # perform operation
fmadd.s f13, f2, f17, f12, rne # perform operation
fmadd.s f13, f2, f17, f12, rtz # perform operation
fmadd.s f13, f2, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f2, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f2, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffff)
li x18, 0x0509220f7c27a385 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x9c41f969d38f9737 # load x3 with value 0x9c41f969d38f9737
sw x3, 0(x2) # store 0x9c41f969d38f9737 in memory
flw f28, 0(x2) # load 0x9c41f969d38f9737 from memory into f28
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
fmadd.s f18, f23, f28, f22, dyn # perform operation
fmadd.s f18, f23, f28, f22, rdn # perform operation
fmadd.s f18, f23, f28, f22, rmm # perform operation
fmadd.s f18, f23, f28, f22, rne # perform operation
fmadd.s f18, f23, f28, f22, rtz # perform operation
fmadd.s f18, f23, f28, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f23, f28, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f23, f28, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x807fffff)
li x8, 0x1ee9ff344c073efa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x5e9e9ad62e7fc96a # load x3 with value 0x5e9e9ad62e7fc96a
sw x3, 0(x2) # store 0x5e9e9ad62e7fc96a in memory
flw f14, 0(x2) # load 0x5e9e9ad62e7fc96a from memory into f14
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmadd.s f8, f30, f14, f21, dyn # perform operation
fmadd.s f8, f30, f14, f21, rdn # perform operation
fmadd.s f8, f30, f14, f21, rmm # perform operation
fmadd.s f8, f30, f14, f21, rne # perform operation
fmadd.s f8, f30, f14, f21, rtz # perform operation
fmadd.s f8, f30, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f30, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f30, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x400000)
li x26, 0xc5fe9ab439390a86 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
li x3, 0x6e272e256723ea5c # load x3 with value 0x6e272e256723ea5c
sw x3, 0(x2) # store 0x6e272e256723ea5c in memory
flw f21, 0(x2) # load 0x6e272e256723ea5c from memory into f21
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmadd.s f26, f3, f21, f9, dyn # perform operation
fmadd.s f26, f3, f21, f9, rdn # perform operation
fmadd.s f26, f3, f21, f9, rmm # perform operation
fmadd.s f26, f3, f21, f9, rne # perform operation
fmadd.s f26, f3, f21, f9, rtz # perform operation
fmadd.s f26, f3, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f3, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f3, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80400000)
li x21, 0x523080a9763f7fca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
li x3, 0xf34d86030688a75e # load x3 with value 0xf34d86030688a75e
sw x3, 0(x2) # store 0xf34d86030688a75e in memory
flw f6, 0(x2) # load 0xf34d86030688a75e from memory into f6
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
fmadd.s f21, f29, f6, f15, dyn # perform operation
fmadd.s f21, f29, f6, f15, rdn # perform operation
fmadd.s f21, f29, f6, f15, rmm # perform operation
fmadd.s f21, f29, f6, f15, rne # perform operation
fmadd.s f21, f29, f6, f15, rtz # perform operation
fmadd.s f21, f29, f6, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f29, f6, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f29, f6, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f29, f6, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f29, f6, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f29, f6, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x1)
li x4, 0x07d143877c2e3cd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
li x3, 0x1ab6ac0cf54964d # load x3 with value 0x1ab6ac0cf54964d
sw x3, 0(x2) # store 0x1ab6ac0cf54964d in memory
flw f8, 0(x2) # load 0x1ab6ac0cf54964d from memory into f8
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
fmadd.s f4, f20, f8, f12, dyn # perform operation
fmadd.s f4, f20, f8, f12, rdn # perform operation
fmadd.s f4, f20, f8, f12, rmm # perform operation
fmadd.s f4, f20, f8, f12, rne # perform operation
fmadd.s f4, f20, f8, f12, rtz # perform operation
fmadd.s f4, f20, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f20, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f20, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x80000001)
li x15, 0x79e436b2f845c31a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f27, 0(x2) # load 0x3f800000 from memory into f27
li x3, 0x2915b201329563ae # load x3 with value 0x2915b201329563ae
sw x3, 0(x2) # store 0x2915b201329563ae in memory
flw f16, 0(x2) # load 0x2915b201329563ae from memory into f16
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
fmadd.s f15, f27, f16, f5, dyn # perform operation
fmadd.s f15, f27, f16, f5, rdn # perform operation
fmadd.s f15, f27, f16, f5, rmm # perform operation
fmadd.s f15, f27, f16, f5, rne # perform operation
fmadd.s f15, f27, f16, f5, rtz # perform operation
fmadd.s f15, f27, f16, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f27, f16, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f27, f16, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f27, f16, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f27, f16, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f27, f16, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800000)
li x22, 0x10b08397929e9f02 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0xe77df6e3b68a7a1f # load x3 with value 0xe77df6e3b68a7a1f
sw x3, 0(x2) # store 0xe77df6e3b68a7a1f in memory
flw f1, 0(x2) # load 0xe77df6e3b68a7a1f from memory into f1
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f22, f15, f1, f3, dyn # perform operation
fmadd.s f22, f15, f1, f3, rdn # perform operation
fmadd.s f22, f15, f1, f3, rmm # perform operation
fmadd.s f22, f15, f1, f3, rne # perform operation
fmadd.s f22, f15, f1, f3, rtz # perform operation
fmadd.s f22, f15, f1, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f15, f1, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f15, f1, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0xff800000)
li x24, 0xf530839b2059bebd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f6, 0(x2) # load 0x3f800000 from memory into f6
li x3, 0xcbc15f7524c55306 # load x3 with value 0xcbc15f7524c55306
sw x3, 0(x2) # store 0xcbc15f7524c55306 in memory
flw f22, 0(x2) # load 0xcbc15f7524c55306 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f28, 0(x2) # load 0xff800000 from memory into f28
fmadd.s f24, f6, f22, f28, dyn # perform operation
fmadd.s f24, f6, f22, f28, rdn # perform operation
fmadd.s f24, f6, f22, f28, rmm # perform operation
fmadd.s f24, f6, f22, f28, rne # perform operation
fmadd.s f24, f6, f22, f28, rtz # perform operation
fmadd.s f24, f6, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f6, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f6, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fc00000)
li x24, 0xb0afe4d41d3fcaa2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f30, 0(x2) # load 0x3f800000 from memory into f30
li x3, 0x8bb8e8c2c16f0e95 # load x3 with value 0x8bb8e8c2c16f0e95
sw x3, 0(x2) # store 0x8bb8e8c2c16f0e95 in memory
flw f5, 0(x2) # load 0x8bb8e8c2c16f0e95 from memory into f5
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f24, f30, f5, f14, dyn # perform operation
fmadd.s f24, f30, f5, f14, rdn # perform operation
fmadd.s f24, f30, f5, f14, rmm # perform operation
fmadd.s f24, f30, f5, f14, rne # perform operation
fmadd.s f24, f30, f5, f14, rtz # perform operation
fmadd.s f24, f30, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fffffff)
li x13, 0x74595b58934d7f8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f15, 0(x2) # load 0x3f800000 from memory into f15
li x3, 0x95561dec28f85ee1 # load x3 with value 0x95561dec28f85ee1
sw x3, 0(x2) # store 0x95561dec28f85ee1 in memory
flw f27, 0(x2) # load 0x95561dec28f85ee1 from memory into f27
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f13, f15, f27, f7, dyn # perform operation
fmadd.s f13, f15, f27, f7, rdn # perform operation
fmadd.s f13, f15, f27, f7, rmm # perform operation
fmadd.s f13, f15, f27, f7, rne # perform operation
fmadd.s f13, f15, f27, f7, rtz # perform operation
fmadd.s f13, f15, f27, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f15, f27, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f15, f27, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7f800001)
li x27, 0x17237b41d6cb5dbd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f25, 0(x2) # load 0x3f800000 from memory into f25
li x3, 0x1343750c37df9a7c # load x3 with value 0x1343750c37df9a7c
sw x3, 0(x2) # store 0x1343750c37df9a7c in memory
flw f5, 0(x2) # load 0x1343750c37df9a7c from memory into f5
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmadd.s f27, f25, f5, f14, dyn # perform operation
fmadd.s f27, f25, f5, f14, rdn # perform operation
fmadd.s f27, f25, f5, f14, rmm # perform operation
fmadd.s f27, f25, f5, f14, rne # perform operation
fmadd.s f27, f25, f5, f14, rtz # perform operation
fmadd.s f27, f25, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f25, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f25, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7fbfffff)
li x4, 0xa4c1926d9abbd001 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f10, 0(x2) # load 0x3f800000 from memory into f10
li x3, 0x86fcb85ec695bcd0 # load x3 with value 0x86fcb85ec695bcd0
sw x3, 0(x2) # store 0x86fcb85ec695bcd0 in memory
flw f12, 0(x2) # load 0x86fcb85ec695bcd0 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmadd.s f4, f10, f12, f21, dyn # perform operation
fmadd.s f4, f10, f12, f21, rdn # perform operation
fmadd.s f4, f10, f12, f21, rmm # perform operation
fmadd.s f4, f10, f12, f21, rne # perform operation
fmadd.s f4, f10, f12, f21, rtz # perform operation
fmadd.s f4, f10, f12, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f12, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f12, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x7ef8654f)
li x5, 0xb3c1591a7b3ed8bb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x5cbb212e558e72ee # load x3 with value 0x5cbb212e558e72ee
sw x3, 0(x2) # store 0x5cbb212e558e72ee in memory
flw f18, 0(x2) # load 0x5cbb212e558e72ee from memory into f18
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
fmadd.s f5, f23, f18, f11, dyn # perform operation
fmadd.s f5, f23, f18, f11, rdn # perform operation
fmadd.s f5, f23, f18, f11, rmm # perform operation
fmadd.s f5, f23, f18, f11, rne # perform operation
fmadd.s f5, f23, f18, f11, rtz # perform operation
fmadd.s f5, f23, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3f800000 fs3 = 0x813d9ab0)
li x8, 0x0564595a230f07b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
li x3, 0x40b9084783f9c205 # load x3 with value 0x40b9084783f9c205
sw x3, 0(x2) # store 0x40b9084783f9c205 in memory
flw f2, 0(x2) # load 0x40b9084783f9c205 from memory into f2
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f8, f23, f2, f20, dyn # perform operation
fmadd.s f8, f23, f2, f20, rdn # perform operation
fmadd.s f8, f23, f2, f20, rmm # perform operation
fmadd.s f8, f23, f2, f20, rne # perform operation
fmadd.s f8, f23, f2, f20, rtz # perform operation
fmadd.s f8, f23, f2, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f2, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f2, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x0)
li x13, 0xdbb1c0025908029f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0x88bf857a8fa99725 # load x3 with value 0x88bf857a8fa99725
sw x3, 0(x2) # store 0x88bf857a8fa99725 in memory
flw f26, 0(x2) # load 0x88bf857a8fa99725 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f13, f31, f26, f16, dyn # perform operation
fmadd.s f13, f31, f26, f16, rdn # perform operation
fmadd.s f13, f31, f26, f16, rmm # perform operation
fmadd.s f13, f31, f26, f16, rne # perform operation
fmadd.s f13, f31, f26, f16, rtz # perform operation
fmadd.s f13, f31, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f31, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f31, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f31, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f31, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f31, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000000)
li x7, 0x32919a7913ea0eb9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
li x3, 0x4110a692eefc9e5d # load x3 with value 0x4110a692eefc9e5d
sw x3, 0(x2) # store 0x4110a692eefc9e5d in memory
flw f22, 0(x2) # load 0x4110a692eefc9e5d from memory into f22
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f1, 0(x2) # load 0x80000000 from memory into f1
fmadd.s f7, f15, f22, f1, dyn # perform operation
fmadd.s f7, f15, f22, f1, rdn # perform operation
fmadd.s f7, f15, f22, f1, rmm # perform operation
fmadd.s f7, f15, f22, f1, rne # perform operation
fmadd.s f7, f15, f22, f1, rtz # perform operation
fmadd.s f7, f15, f22, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f22, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f22, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3f800000)
li x3, 0x43910aac2972013e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f13, 0(x2) # load 0xbf800000 from memory into f13
li x3, 0x7b325543de37e421 # load x3 with value 0x7b325543de37e421
sw x3, 0(x2) # store 0x7b325543de37e421 in memory
flw f25, 0(x2) # load 0x7b325543de37e421 from memory into f25
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f5, 0(x2) # load 0x3f800000 from memory into f5
fmadd.s f3, f13, f25, f5, dyn # perform operation
fmadd.s f3, f13, f25, f5, rdn # perform operation
fmadd.s f3, f13, f25, f5, rmm # perform operation
fmadd.s f3, f13, f25, f5, rne # perform operation
fmadd.s f3, f13, f25, f5, rtz # perform operation
fmadd.s f3, f13, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbf800000)
li x4, 0xc483736f23a0dad1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0x871f0b589b19b930 # load x3 with value 0x871f0b589b19b930
sw x3, 0(x2) # store 0x871f0b589b19b930 in memory
flw f23, 0(x2) # load 0x871f0b589b19b930 from memory into f23
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
fmadd.s f4, f9, f23, f1, dyn # perform operation
fmadd.s f4, f9, f23, f1, rdn # perform operation
fmadd.s f4, f9, f23, f1, rmm # perform operation
fmadd.s f4, f9, f23, f1, rne # perform operation
fmadd.s f4, f9, f23, f1, rtz # perform operation
fmadd.s f4, f9, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f9, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f9, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x3fc00000)
li x20, 0xa1722bf7aaea444f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
li x3, 0xeb7c86e18d1b598b # load x3 with value 0xeb7c86e18d1b598b
sw x3, 0(x2) # store 0xeb7c86e18d1b598b in memory
flw f5, 0(x2) # load 0xeb7c86e18d1b598b from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f20, f24, f5, f15, dyn # perform operation
fmadd.s f20, f24, f5, f15, rdn # perform operation
fmadd.s f20, f24, f5, f15, rmm # perform operation
fmadd.s f20, f24, f5, f15, rne # perform operation
fmadd.s f20, f24, f5, f15, rtz # perform operation
fmadd.s f20, f24, f5, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f24, f5, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f24, f5, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xbfc00000)
li x8, 0x75be16adea015ff7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x77177f673c0783db # load x3 with value 0x77177f673c0783db
sw x3, 0(x2) # store 0x77177f673c0783db in memory
flw f30, 0(x2) # load 0x77177f673c0783db from memory into f30
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f8, f27, f30, f22, dyn # perform operation
fmadd.s f8, f27, f30, f22, rdn # perform operation
fmadd.s f8, f27, f30, f22, rmm # perform operation
fmadd.s f8, f27, f30, f22, rne # perform operation
fmadd.s f8, f27, f30, f22, rtz # perform operation
fmadd.s f8, f27, f30, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f27, f30, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f27, f30, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x40000000)
li x31, 0x72ce4cc7bf7f7163 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f6, 0(x2) # load 0xbf800000 from memory into f6
li x3, 0xef2e84d983ada805 # load x3 with value 0xef2e84d983ada805
sw x3, 0(x2) # store 0xef2e84d983ada805 in memory
flw f29, 0(x2) # load 0xef2e84d983ada805 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
fmadd.s f31, f6, f29, f26, dyn # perform operation
fmadd.s f31, f6, f29, f26, rdn # perform operation
fmadd.s f31, f6, f29, f26, rmm # perform operation
fmadd.s f31, f6, f29, f26, rne # perform operation
fmadd.s f31, f6, f29, f26, rtz # perform operation
fmadd.s f31, f6, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xc0000000)
li x10, 0x93c3450b6772f821 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0xe4021c03febf78b # load x3 with value 0xe4021c03febf78b
sw x3, 0(x2) # store 0xe4021c03febf78b in memory
flw f9, 0(x2) # load 0xe4021c03febf78b from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
fmadd.s f10, f21, f9, f26, dyn # perform operation
fmadd.s f10, f21, f9, f26, rdn # perform operation
fmadd.s f10, f21, f9, f26, rmm # perform operation
fmadd.s f10, f21, f9, f26, rne # perform operation
fmadd.s f10, f21, f9, f26, rtz # perform operation
fmadd.s f10, f21, f9, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f21, f9, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f21, f9, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f21, f9, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f21, f9, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f21, f9, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x800000)
li x5, 0x2b03954c545cacf1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0xb56029048b0e3d0a # load x3 with value 0xb56029048b0e3d0a
sw x3, 0(x2) # store 0xb56029048b0e3d0a in memory
flw f22, 0(x2) # load 0xb56029048b0e3d0a from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
fmadd.s f5, f28, f22, f20, dyn # perform operation
fmadd.s f5, f28, f22, f20, rdn # perform operation
fmadd.s f5, f28, f22, f20, rmm # perform operation
fmadd.s f5, f28, f22, f20, rne # perform operation
fmadd.s f5, f28, f22, f20, rtz # perform operation
fmadd.s f5, f28, f22, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f22, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f22, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80800000)
li x8, 0xa5fc2797340fa66e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
li x3, 0x8a41be7d350c5fe3 # load x3 with value 0x8a41be7d350c5fe3
sw x3, 0(x2) # store 0x8a41be7d350c5fe3 in memory
flw f30, 0(x2) # load 0x8a41be7d350c5fe3 from memory into f30
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fmadd.s f8, f12, f30, f3, dyn # perform operation
fmadd.s f8, f12, f30, f3, rdn # perform operation
fmadd.s f8, f12, f30, f3, rmm # perform operation
fmadd.s f8, f12, f30, f3, rne # perform operation
fmadd.s f8, f12, f30, f3, rtz # perform operation
fmadd.s f8, f12, f30, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f12, f30, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f12, f30, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f7fffff)
li x3, 0xf83e666ae89ea569 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xb81747018db6f9d8 # load x3 with value 0xb81747018db6f9d8
sw x3, 0(x2) # store 0xb81747018db6f9d8 in memory
flw f27, 0(x2) # load 0xb81747018db6f9d8 from memory into f27
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmadd.s f3, f20, f27, f21, dyn # perform operation
fmadd.s f3, f20, f27, f21, rdn # perform operation
fmadd.s f3, f20, f27, f21, rmm # perform operation
fmadd.s f3, f20, f27, f21, rne # perform operation
fmadd.s f3, f20, f27, f21, rtz # perform operation
fmadd.s f3, f20, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f20, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f20, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff7fffff)
li x21, 0xc3a4ce700266aec2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f14, 0(x2) # load 0xbf800000 from memory into f14
li x3, 0x922e5d1e7e1f9d97 # load x3 with value 0x922e5d1e7e1f9d97
sw x3, 0(x2) # store 0x922e5d1e7e1f9d97 in memory
flw f7, 0(x2) # load 0x922e5d1e7e1f9d97 from memory into f7
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f15, 0(x2) # load 0xff7fffff from memory into f15
fmadd.s f21, f14, f7, f15, dyn # perform operation
fmadd.s f21, f14, f7, f15, rdn # perform operation
fmadd.s f21, f14, f7, f15, rmm # perform operation
fmadd.s f21, f14, f7, f15, rne # perform operation
fmadd.s f21, f14, f7, f15, rtz # perform operation
fmadd.s f21, f14, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f14, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f14, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffff)
li x2, 0xb53d1faaa53d103a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x2c5e8ec8fd11058f # load x3 with value 0x2c5e8ec8fd11058f
sw x3, 0(x2) # store 0x2c5e8ec8fd11058f in memory
flw f13, 0(x2) # load 0x2c5e8ec8fd11058f from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f28, 0(x2) # load 0x007fffff from memory into f28
fmadd.s f2, f1, f13, f28, dyn # perform operation
fmadd.s f2, f1, f13, f28, rdn # perform operation
fmadd.s f2, f1, f13, f28, rmm # perform operation
fmadd.s f2, f1, f13, f28, rne # perform operation
fmadd.s f2, f1, f13, f28, rtz # perform operation
fmadd.s f2, f1, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f1, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f1, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x807fffff)
li x2, 0x70848387d04f94b9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
li x3, 0x2fe8934da99062f6 # load x3 with value 0x2fe8934da99062f6
sw x3, 0(x2) # store 0x2fe8934da99062f6 in memory
flw f29, 0(x2) # load 0x2fe8934da99062f6 from memory into f29
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmadd.s f2, f27, f29, f20, dyn # perform operation
fmadd.s f2, f27, f29, f20, rdn # perform operation
fmadd.s f2, f27, f29, f20, rmm # perform operation
fmadd.s f2, f27, f29, f20, rne # perform operation
fmadd.s f2, f27, f29, f20, rtz # perform operation
fmadd.s f2, f27, f29, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f29, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f29, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x400000)
li x30, 0x7fd2b62593797e08 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0x27108c2fc983f0d1 # load x3 with value 0x27108c2fc983f0d1
sw x3, 0(x2) # store 0x27108c2fc983f0d1 in memory
flw f20, 0(x2) # load 0x27108c2fc983f0d1 from memory into f20
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
fmadd.s f30, f22, f20, f7, dyn # perform operation
fmadd.s f30, f22, f20, f7, rdn # perform operation
fmadd.s f30, f22, f20, f7, rmm # perform operation
fmadd.s f30, f22, f20, f7, rne # perform operation
fmadd.s f30, f22, f20, f7, rtz # perform operation
fmadd.s f30, f22, f20, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f22, f20, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f22, f20, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80400000)
li x5, 0x83ac7632a974b55f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f20, 0(x2) # load 0xbf800000 from memory into f20
li x3, 0xaa1d7a1a1dbc72d9 # load x3 with value 0xaa1d7a1a1dbc72d9
sw x3, 0(x2) # store 0xaa1d7a1a1dbc72d9 in memory
flw f19, 0(x2) # load 0xaa1d7a1a1dbc72d9 from memory into f19
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f5, f20, f19, f27, dyn # perform operation
fmadd.s f5, f20, f19, f27, rdn # perform operation
fmadd.s f5, f20, f19, f27, rmm # perform operation
fmadd.s f5, f20, f19, f27, rne # perform operation
fmadd.s f5, f20, f19, f27, rtz # perform operation
fmadd.s f5, f20, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x1)
li x9, 0x5a19f16657315fe7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
li x3, 0x90fc02fd0231018a # load x3 with value 0x90fc02fd0231018a
sw x3, 0(x2) # store 0x90fc02fd0231018a in memory
flw f21, 0(x2) # load 0x90fc02fd0231018a from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f24, 0(x2) # load 0x00000001 from memory into f24
fmadd.s f9, f16, f21, f24, dyn # perform operation
fmadd.s f9, f16, f21, f24, rdn # perform operation
fmadd.s f9, f16, f21, f24, rmm # perform operation
fmadd.s f9, f16, f21, f24, rne # perform operation
fmadd.s f9, f16, f21, f24, rtz # perform operation
fmadd.s f9, f16, f21, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f21, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f21, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x80000001)
li x25, 0xaac34aac61229829 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
li x3, 0x870a199949ad042c # load x3 with value 0x870a199949ad042c
sw x3, 0(x2) # store 0x870a199949ad042c in memory
flw f11, 0(x2) # load 0x870a199949ad042c from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f7, 0(x2) # load 0x80000001 from memory into f7
fmadd.s f25, f21, f11, f7, dyn # perform operation
fmadd.s f25, f21, f11, f7, rdn # perform operation
fmadd.s f25, f21, f11, f7, rmm # perform operation
fmadd.s f25, f21, f11, f7, rne # perform operation
fmadd.s f25, f21, f11, f7, rtz # perform operation
fmadd.s f25, f21, f11, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f11, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f11, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f11, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f11, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f11, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800000)
li x12, 0x8c4181464f7b724d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f19, 0(x2) # load 0xbf800000 from memory into f19
li x3, 0x711ae106f58a4000 # load x3 with value 0x711ae106f58a4000
sw x3, 0(x2) # store 0x711ae106f58a4000 in memory
flw f6, 0(x2) # load 0x711ae106f58a4000 from memory into f6
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
fmadd.s f12, f19, f6, f11, dyn # perform operation
fmadd.s f12, f19, f6, f11, rdn # perform operation
fmadd.s f12, f19, f6, f11, rmm # perform operation
fmadd.s f12, f19, f6, f11, rne # perform operation
fmadd.s f12, f19, f6, f11, rtz # perform operation
fmadd.s f12, f19, f6, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f6, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f6, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0xff800000)
li x1, 0x8c7cbe49e84cac9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f28, 0(x2) # load 0xbf800000 from memory into f28
li x3, 0x75d9f1b898f5be68 # load x3 with value 0x75d9f1b898f5be68
sw x3, 0(x2) # store 0x75d9f1b898f5be68 in memory
flw f4, 0(x2) # load 0x75d9f1b898f5be68 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f1, f28, f4, f25, dyn # perform operation
fmadd.s f1, f28, f4, f25, rdn # perform operation
fmadd.s f1, f28, f4, f25, rmm # perform operation
fmadd.s f1, f28, f4, f25, rne # perform operation
fmadd.s f1, f28, f4, f25, rtz # perform operation
fmadd.s f1, f28, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f28, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f28, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f28, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f28, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f28, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fc00000)
li x12, 0xe229458db0879aea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
li x3, 0xbd10c783981e4e69 # load x3 with value 0xbd10c783981e4e69
sw x3, 0(x2) # store 0xbd10c783981e4e69 in memory
flw f27, 0(x2) # load 0xbd10c783981e4e69 from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
fmadd.s f12, f18, f27, f2, dyn # perform operation
fmadd.s f12, f18, f27, f2, rdn # perform operation
fmadd.s f12, f18, f27, f2, rmm # perform operation
fmadd.s f12, f18, f27, f2, rne # perform operation
fmadd.s f12, f18, f27, f2, rtz # perform operation
fmadd.s f12, f18, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f18, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f18, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fffffff)
li x20, 0xb8c7937132c66a93 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f1, 0(x2) # load 0xbf800000 from memory into f1
li x3, 0x2a816c126a474ddc # load x3 with value 0x2a816c126a474ddc
sw x3, 0(x2) # store 0x2a816c126a474ddc in memory
flw f18, 0(x2) # load 0x2a816c126a474ddc from memory into f18
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmadd.s f20, f1, f18, f29, dyn # perform operation
fmadd.s f20, f1, f18, f29, rdn # perform operation
fmadd.s f20, f1, f18, f29, rmm # perform operation
fmadd.s f20, f1, f18, f29, rne # perform operation
fmadd.s f20, f1, f18, f29, rtz # perform operation
fmadd.s f20, f1, f18, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f1, f18, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f1, f18, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7f800001)
li x31, 0x139827937a3de946 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f9, 0(x2) # load 0xbf800000 from memory into f9
li x3, 0xb902c04edf44f82a # load x3 with value 0xb902c04edf44f82a
sw x3, 0(x2) # store 0xb902c04edf44f82a in memory
flw f23, 0(x2) # load 0xb902c04edf44f82a from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f27, 0(x2) # load 0x7f800001 from memory into f27
fmadd.s f31, f9, f23, f27, dyn # perform operation
fmadd.s f31, f9, f23, f27, rdn # perform operation
fmadd.s f31, f9, f23, f27, rmm # perform operation
fmadd.s f31, f9, f23, f27, rne # perform operation
fmadd.s f31, f9, f23, f27, rtz # perform operation
fmadd.s f31, f9, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f9, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f9, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7fbfffff)
li x22, 0x35999c48b877a8f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f29, 0(x2) # load 0xbf800000 from memory into f29
li x3, 0x3dd0f64c9344fda5 # load x3 with value 0x3dd0f64c9344fda5
sw x3, 0(x2) # store 0x3dd0f64c9344fda5 in memory
flw f14, 0(x2) # load 0x3dd0f64c9344fda5 from memory into f14
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f2, 0(x2) # load 0x7fbfffff from memory into f2
fmadd.s f22, f29, f14, f2, dyn # perform operation
fmadd.s f22, f29, f14, f2, rdn # perform operation
fmadd.s f22, f29, f14, f2, rmm # perform operation
fmadd.s f22, f29, f14, f2, rne # perform operation
fmadd.s f22, f29, f14, f2, rtz # perform operation
fmadd.s f22, f29, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x7ef8654f)
li x22, 0x5f156402db426fd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f31, 0(x2) # load 0xbf800000 from memory into f31
li x3, 0xbe58c4e30542e6ef # load x3 with value 0xbe58c4e30542e6ef
sw x3, 0(x2) # store 0xbe58c4e30542e6ef in memory
flw f17, 0(x2) # load 0xbe58c4e30542e6ef from memory into f17
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f22, f31, f17, f21, dyn # perform operation
fmadd.s f22, f31, f17, f21, rdn # perform operation
fmadd.s f22, f31, f17, f21, rmm # perform operation
fmadd.s f22, f31, f17, f21, rne # perform operation
fmadd.s f22, f31, f17, f21, rtz # perform operation
fmadd.s f22, f31, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f31, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f31, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f31, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f31, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f31, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbf800000 fs3 = 0x813d9ab0)
li x8, 0x6f1c5964a8c51930 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
li x3, 0xd4cd97e9886adbe4 # load x3 with value 0xd4cd97e9886adbe4
sw x3, 0(x2) # store 0xd4cd97e9886adbe4 in memory
flw f20, 0(x2) # load 0xd4cd97e9886adbe4 from memory into f20
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f8, f22, f20, f17, dyn # perform operation
fmadd.s f8, f22, f20, f17, rdn # perform operation
fmadd.s f8, f22, f20, f17, rmm # perform operation
fmadd.s f8, f22, f20, f17, rne # perform operation
fmadd.s f8, f22, f20, f17, rtz # perform operation
fmadd.s f8, f22, f20, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f20, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f20, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f20, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f20, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f20, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x0)
li x4, 0xd68bd87c358a0156 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
li x3, 0xee4c16a155d51d8f # load x3 with value 0xee4c16a155d51d8f
sw x3, 0(x2) # store 0xee4c16a155d51d8f in memory
flw f17, 0(x2) # load 0xee4c16a155d51d8f from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmadd.s f4, f22, f17, f11, dyn # perform operation
fmadd.s f4, f22, f17, f11, rdn # perform operation
fmadd.s f4, f22, f17, f11, rmm # perform operation
fmadd.s f4, f22, f17, f11, rne # perform operation
fmadd.s f4, f22, f17, f11, rtz # perform operation
fmadd.s f4, f22, f17, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f22, f17, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f22, f17, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000000)
li x23, 0x51bc2a090e331495 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0xaef7efa1a35a02d6 # load x3 with value 0xaef7efa1a35a02d6
sw x3, 0(x2) # store 0xaef7efa1a35a02d6 in memory
flw f1, 0(x2) # load 0xaef7efa1a35a02d6 from memory into f1
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmadd.s f23, f17, f1, f10, dyn # perform operation
fmadd.s f23, f17, f1, f10, rdn # perform operation
fmadd.s f23, f17, f1, f10, rmm # perform operation
fmadd.s f23, f17, f1, f10, rne # perform operation
fmadd.s f23, f17, f1, f10, rtz # perform operation
fmadd.s f23, f17, f1, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f17, f1, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f17, f1, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3f800000)
li x14, 0x5df46482230db220 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0x2dd0b299c485e5fe # load x3 with value 0x2dd0b299c485e5fe
sw x3, 0(x2) # store 0x2dd0b299c485e5fe in memory
flw f12, 0(x2) # load 0x2dd0b299c485e5fe from memory into f12
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f14, f28, f12, f20, dyn # perform operation
fmadd.s f14, f28, f12, f20, rdn # perform operation
fmadd.s f14, f28, f12, f20, rmm # perform operation
fmadd.s f14, f28, f12, f20, rne # perform operation
fmadd.s f14, f28, f12, f20, rtz # perform operation
fmadd.s f14, f28, f12, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f12, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f12, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f12, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f12, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f12, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbf800000)
li x2, 0xca23fc85df1cdd87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f17, 0(x2) # load 0x3fc00000 from memory into f17
li x3, 0x89ed367c37cf1508 # load x3 with value 0x89ed367c37cf1508
sw x3, 0(x2) # store 0x89ed367c37cf1508 in memory
flw f30, 0(x2) # load 0x89ed367c37cf1508 from memory into f30
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f15, 0(x2) # load 0xbf800000 from memory into f15
fmadd.s f2, f17, f30, f15, dyn # perform operation
fmadd.s f2, f17, f30, f15, rdn # perform operation
fmadd.s f2, f17, f30, f15, rmm # perform operation
fmadd.s f2, f17, f30, f15, rne # perform operation
fmadd.s f2, f17, f30, f15, rtz # perform operation
fmadd.s f2, f17, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x3fc00000)
li x17, 0x359f2ccd1a7ad7db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
li x3, 0x6de12883de3eda48 # load x3 with value 0x6de12883de3eda48
sw x3, 0(x2) # store 0x6de12883de3eda48 in memory
flw f5, 0(x2) # load 0x6de12883de3eda48 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmadd.s f17, f3, f5, f11, dyn # perform operation
fmadd.s f17, f3, f5, f11, rdn # perform operation
fmadd.s f17, f3, f5, f11, rmm # perform operation
fmadd.s f17, f3, f5, f11, rne # perform operation
fmadd.s f17, f3, f5, f11, rtz # perform operation
fmadd.s f17, f3, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f3, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f3, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xbfc00000)
li x4, 0x6f2c8b58566c143e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
li x3, 0xcaa978010c98212d # load x3 with value 0xcaa978010c98212d
sw x3, 0(x2) # store 0xcaa978010c98212d in memory
flw f14, 0(x2) # load 0xcaa978010c98212d from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f4, f18, f14, f6, dyn # perform operation
fmadd.s f4, f18, f14, f6, rdn # perform operation
fmadd.s f4, f18, f14, f6, rmm # perform operation
fmadd.s f4, f18, f14, f6, rne # perform operation
fmadd.s f4, f18, f14, f6, rtz # perform operation
fmadd.s f4, f18, f14, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f18, f14, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f18, f14, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x40000000)
li x11, 0x052754ddf18a948d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f28, 0(x2) # load 0x3fc00000 from memory into f28
li x3, 0xfa77f0d711c6d770 # load x3 with value 0xfa77f0d711c6d770
sw x3, 0(x2) # store 0xfa77f0d711c6d770 in memory
flw f29, 0(x2) # load 0xfa77f0d711c6d770 from memory into f29
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
fmadd.s f11, f28, f29, f30, dyn # perform operation
fmadd.s f11, f28, f29, f30, rdn # perform operation
fmadd.s f11, f28, f29, f30, rmm # perform operation
fmadd.s f11, f28, f29, f30, rne # perform operation
fmadd.s f11, f28, f29, f30, rtz # perform operation
fmadd.s f11, f28, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f28, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f28, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xc0000000)
li x19, 0xbf46350820d9f056 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xea7940b59e4d2688 # load x3 with value 0xea7940b59e4d2688
sw x3, 0(x2) # store 0xea7940b59e4d2688 in memory
flw f2, 0(x2) # load 0xea7940b59e4d2688 from memory into f2
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
fmadd.s f19, f7, f2, f30, dyn # perform operation
fmadd.s f19, f7, f2, f30, rdn # perform operation
fmadd.s f19, f7, f2, f30, rmm # perform operation
fmadd.s f19, f7, f2, f30, rne # perform operation
fmadd.s f19, f7, f2, f30, rtz # perform operation
fmadd.s f19, f7, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f7, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x800000)
li x26, 0xcec719404bb690f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0x450b03d2c9a9178 # load x3 with value 0x450b03d2c9a9178
sw x3, 0(x2) # store 0x450b03d2c9a9178 in memory
flw f18, 0(x2) # load 0x450b03d2c9a9178 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f26, f30, f18, f3, dyn # perform operation
fmadd.s f26, f30, f18, f3, rdn # perform operation
fmadd.s f26, f30, f18, f3, rmm # perform operation
fmadd.s f26, f30, f18, f3, rne # perform operation
fmadd.s f26, f30, f18, f3, rtz # perform operation
fmadd.s f26, f30, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80800000)
li x31, 0x62e61f23e1ef8239 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
li x3, 0x675ea3422ae7e9b2 # load x3 with value 0x675ea3422ae7e9b2
sw x3, 0(x2) # store 0x675ea3422ae7e9b2 in memory
flw f18, 0(x2) # load 0x675ea3422ae7e9b2 from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmadd.s f31, f8, f18, f20, dyn # perform operation
fmadd.s f31, f8, f18, f20, rdn # perform operation
fmadd.s f31, f8, f18, f20, rmm # perform operation
fmadd.s f31, f8, f18, f20, rne # perform operation
fmadd.s f31, f8, f18, f20, rtz # perform operation
fmadd.s f31, f8, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f8, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f8, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f7fffff)
li x8, 0x2c4e51c517b316d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xa401e4e845ba9609 # load x3 with value 0xa401e4e845ba9609
sw x3, 0(x2) # store 0xa401e4e845ba9609 in memory
flw f2, 0(x2) # load 0xa401e4e845ba9609 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
fmadd.s f8, f31, f2, f12, dyn # perform operation
fmadd.s f8, f31, f2, f12, rdn # perform operation
fmadd.s f8, f31, f2, f12, rmm # perform operation
fmadd.s f8, f31, f2, f12, rne # perform operation
fmadd.s f8, f31, f2, f12, rtz # perform operation
fmadd.s f8, f31, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff7fffff)
li x16, 0x1268ad01b8e34b1a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
li x3, 0xf6548a43234e4c2e # load x3 with value 0xf6548a43234e4c2e
sw x3, 0(x2) # store 0xf6548a43234e4c2e in memory
flw f26, 0(x2) # load 0xf6548a43234e4c2e from memory into f26
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fmadd.s f16, f27, f26, f25, dyn # perform operation
fmadd.s f16, f27, f26, f25, rdn # perform operation
fmadd.s f16, f27, f26, f25, rmm # perform operation
fmadd.s f16, f27, f26, f25, rne # perform operation
fmadd.s f16, f27, f26, f25, rtz # perform operation
fmadd.s f16, f27, f26, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f27, f26, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f27, f26, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f27, f26, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f27, f26, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f27, f26, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffff)
li x15, 0x6cda9c4b618a2965 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x486edf102835eda2 # load x3 with value 0x486edf102835eda2
sw x3, 0(x2) # store 0x486edf102835eda2 in memory
flw f18, 0(x2) # load 0x486edf102835eda2 from memory into f18
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmadd.s f15, f16, f18, f21, dyn # perform operation
fmadd.s f15, f16, f18, f21, rdn # perform operation
fmadd.s f15, f16, f18, f21, rmm # perform operation
fmadd.s f15, f16, f18, f21, rne # perform operation
fmadd.s f15, f16, f18, f21, rtz # perform operation
fmadd.s f15, f16, f18, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f18, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f18, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f18, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f18, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f18, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x807fffff)
li x4, 0x4a94c88ff255f76d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xd80d3449de95bf9 # load x3 with value 0xd80d3449de95bf9
sw x3, 0(x2) # store 0xd80d3449de95bf9 in memory
flw f24, 0(x2) # load 0xd80d3449de95bf9 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
fmadd.s f4, f10, f24, f3, dyn # perform operation
fmadd.s f4, f10, f24, f3, rdn # perform operation
fmadd.s f4, f10, f24, f3, rmm # perform operation
fmadd.s f4, f10, f24, f3, rne # perform operation
fmadd.s f4, f10, f24, f3, rtz # perform operation
fmadd.s f4, f10, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x400000)
li x17, 0x050891c2715778c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f10, 0(x2) # load 0x3fc00000 from memory into f10
li x3, 0xf87773ee5ae8fa3e # load x3 with value 0xf87773ee5ae8fa3e
sw x3, 0(x2) # store 0xf87773ee5ae8fa3e in memory
flw f30, 0(x2) # load 0xf87773ee5ae8fa3e from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f26, 0(x2) # load 0x00400000 from memory into f26
fmadd.s f17, f10, f30, f26, dyn # perform operation
fmadd.s f17, f10, f30, f26, rdn # perform operation
fmadd.s f17, f10, f30, f26, rmm # perform operation
fmadd.s f17, f10, f30, f26, rne # perform operation
fmadd.s f17, f10, f30, f26, rtz # perform operation
fmadd.s f17, f10, f30, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f10, f30, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f10, f30, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f10, f30, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f10, f30, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f10, f30, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80400000)
li x24, 0xba5c330b1758e19c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
li x3, 0x8c6cd0a884b5a9d3 # load x3 with value 0x8c6cd0a884b5a9d3
sw x3, 0(x2) # store 0x8c6cd0a884b5a9d3 in memory
flw f2, 0(x2) # load 0x8c6cd0a884b5a9d3 from memory into f2
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f19, 0(x2) # load 0x80400000 from memory into f19
fmadd.s f24, f16, f2, f19, dyn # perform operation
fmadd.s f24, f16, f2, f19, rdn # perform operation
fmadd.s f24, f16, f2, f19, rmm # perform operation
fmadd.s f24, f16, f2, f19, rne # perform operation
fmadd.s f24, f16, f2, f19, rtz # perform operation
fmadd.s f24, f16, f2, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f16, f2, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f16, f2, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x1)
li x2, 0x7d6b6ca674d8068e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
li x3, 0x13bcc6707a09f3fc # load x3 with value 0x13bcc6707a09f3fc
sw x3, 0(x2) # store 0x13bcc6707a09f3fc in memory
flw f13, 0(x2) # load 0x13bcc6707a09f3fc from memory into f13
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f2, f14, f13, f5, dyn # perform operation
fmadd.s f2, f14, f13, f5, rdn # perform operation
fmadd.s f2, f14, f13, f5, rmm # perform operation
fmadd.s f2, f14, f13, f5, rne # perform operation
fmadd.s f2, f14, f13, f5, rtz # perform operation
fmadd.s f2, f14, f13, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f14, f13, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f14, f13, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f14, f13, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f14, f13, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f14, f13, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x80000001)
li x11, 0xf5f62e40db0470e4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xb8afdf9f6f55cb0 # load x3 with value 0xb8afdf9f6f55cb0
sw x3, 0(x2) # store 0xb8afdf9f6f55cb0 in memory
flw f2, 0(x2) # load 0xb8afdf9f6f55cb0 from memory into f2
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmadd.s f11, f30, f2, f12, dyn # perform operation
fmadd.s f11, f30, f2, f12, rdn # perform operation
fmadd.s f11, f30, f2, f12, rmm # perform operation
fmadd.s f11, f30, f2, f12, rne # perform operation
fmadd.s f11, f30, f2, f12, rtz # perform operation
fmadd.s f11, f30, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800000)
li x26, 0xe0cbb52bee4d3335 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f20, 0(x2) # load 0x3fc00000 from memory into f20
li x3, 0x9b5f92be4a8eaa2c # load x3 with value 0x9b5f92be4a8eaa2c
sw x3, 0(x2) # store 0x9b5f92be4a8eaa2c in memory
flw f25, 0(x2) # load 0x9b5f92be4a8eaa2c from memory into f25
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f8, 0(x2) # load 0x7f800000 from memory into f8
fmadd.s f26, f20, f25, f8, dyn # perform operation
fmadd.s f26, f20, f25, f8, rdn # perform operation
fmadd.s f26, f20, f25, f8, rmm # perform operation
fmadd.s f26, f20, f25, f8, rne # perform operation
fmadd.s f26, f20, f25, f8, rtz # perform operation
fmadd.s f26, f20, f25, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f20, f25, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f20, f25, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0xff800000)
li x18, 0x248c6484e0eb3740 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f26, 0(x2) # load 0x3fc00000 from memory into f26
li x3, 0x39dd3e6a4c988603 # load x3 with value 0x39dd3e6a4c988603
sw x3, 0(x2) # store 0x39dd3e6a4c988603 in memory
flw f31, 0(x2) # load 0x39dd3e6a4c988603 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
fmadd.s f18, f26, f31, f23, dyn # perform operation
fmadd.s f18, f26, f31, f23, rdn # perform operation
fmadd.s f18, f26, f31, f23, rmm # perform operation
fmadd.s f18, f26, f31, f23, rne # perform operation
fmadd.s f18, f26, f31, f23, rtz # perform operation
fmadd.s f18, f26, f31, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f26, f31, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f26, f31, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fc00000)
li x15, 0x1349c0827ab604c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
li x3, 0xa52a9c9d03f9b851 # load x3 with value 0xa52a9c9d03f9b851
sw x3, 0(x2) # store 0xa52a9c9d03f9b851 in memory
flw f11, 0(x2) # load 0xa52a9c9d03f9b851 from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f15, f19, f11, f13, dyn # perform operation
fmadd.s f15, f19, f11, f13, rdn # perform operation
fmadd.s f15, f19, f11, f13, rmm # perform operation
fmadd.s f15, f19, f11, f13, rne # perform operation
fmadd.s f15, f19, f11, f13, rtz # perform operation
fmadd.s f15, f19, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f19, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f19, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f19, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f19, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f19, f11, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fffffff)
li x12, 0x226e04b7d7bb36da # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
li x3, 0xe8de3bf052723755 # load x3 with value 0xe8de3bf052723755
sw x3, 0(x2) # store 0xe8de3bf052723755 in memory
flw f23, 0(x2) # load 0xe8de3bf052723755 from memory into f23
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
fmadd.s f12, f11, f23, f25, dyn # perform operation
fmadd.s f12, f11, f23, f25, rdn # perform operation
fmadd.s f12, f11, f23, f25, rmm # perform operation
fmadd.s f12, f11, f23, f25, rne # perform operation
fmadd.s f12, f11, f23, f25, rtz # perform operation
fmadd.s f12, f11, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f11, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f11, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7f800001)
li x22, 0xe5bd8ad3b80726c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f2, 0(x2) # load 0x3fc00000 from memory into f2
li x3, 0xce6c156f2b8e03d4 # load x3 with value 0xce6c156f2b8e03d4
sw x3, 0(x2) # store 0xce6c156f2b8e03d4 in memory
flw f7, 0(x2) # load 0xce6c156f2b8e03d4 from memory into f7
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmadd.s f22, f2, f7, f9, dyn # perform operation
fmadd.s f22, f2, f7, f9, rdn # perform operation
fmadd.s f22, f2, f7, f9, rmm # perform operation
fmadd.s f22, f2, f7, f9, rne # perform operation
fmadd.s f22, f2, f7, f9, rtz # perform operation
fmadd.s f22, f2, f7, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f2, f7, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f2, f7, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7fbfffff)
li x8, 0x7b3eada051bdaacd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
li x3, 0xa883b64a0a827bde # load x3 with value 0xa883b64a0a827bde
sw x3, 0(x2) # store 0xa883b64a0a827bde in memory
flw f27, 0(x2) # load 0xa883b64a0a827bde from memory into f27
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f8, f31, f27, f1, dyn # perform operation
fmadd.s f8, f31, f27, f1, rdn # perform operation
fmadd.s f8, f31, f27, f1, rmm # perform operation
fmadd.s f8, f31, f27, f1, rne # perform operation
fmadd.s f8, f31, f27, f1, rtz # perform operation
fmadd.s f8, f31, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x7ef8654f)
li x30, 0x0dc90cf83a5fca4e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
li x3, 0xdd31e64d0d5b3659 # load x3 with value 0xdd31e64d0d5b3659
sw x3, 0(x2) # store 0xdd31e64d0d5b3659 in memory
flw f1, 0(x2) # load 0xdd31e64d0d5b3659 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f30, f7, f1, f6, dyn # perform operation
fmadd.s f30, f7, f1, f6, rdn # perform operation
fmadd.s f30, f7, f1, f6, rmm # perform operation
fmadd.s f30, f7, f1, f6, rne # perform operation
fmadd.s f30, f7, f1, f6, rtz # perform operation
fmadd.s f30, f7, f1, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f7, f1, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f7, f1, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x3fc00000 fs3 = 0x813d9ab0)
li x29, 0x20e0591d431c6277 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f30, 0(x2) # load 0x3fc00000 from memory into f30
li x3, 0xe8ecebbc17d9e829 # load x3 with value 0xe8ecebbc17d9e829
sw x3, 0(x2) # store 0xe8ecebbc17d9e829 in memory
flw f22, 0(x2) # load 0xe8ecebbc17d9e829 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
fmadd.s f29, f30, f22, f11, dyn # perform operation
fmadd.s f29, f30, f22, f11, rdn # perform operation
fmadd.s f29, f30, f22, f11, rmm # perform operation
fmadd.s f29, f30, f22, f11, rne # perform operation
fmadd.s f29, f30, f22, f11, rtz # perform operation
fmadd.s f29, f30, f22, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f30, f22, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f30, f22, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x0)
li x13, 0x0034543b585fb32f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0xfb90876acdd2e48f # load x3 with value 0xfb90876acdd2e48f
sw x3, 0(x2) # store 0xfb90876acdd2e48f in memory
flw f3, 0(x2) # load 0xfb90876acdd2e48f from memory into f3
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f13, f26, f3, f17, dyn # perform operation
fmadd.s f13, f26, f3, f17, rdn # perform operation
fmadd.s f13, f26, f3, f17, rmm # perform operation
fmadd.s f13, f26, f3, f17, rne # perform operation
fmadd.s f13, f26, f3, f17, rtz # perform operation
fmadd.s f13, f26, f3, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f3, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f3, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f3, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f3, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f3, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000000)
li x24, 0x4e5185aa2e65ae46 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
li x3, 0x144443687c3b6c10 # load x3 with value 0x144443687c3b6c10
sw x3, 0(x2) # store 0x144443687c3b6c10 in memory
flw f17, 0(x2) # load 0x144443687c3b6c10 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmadd.s f24, f19, f17, f12, dyn # perform operation
fmadd.s f24, f19, f17, f12, rdn # perform operation
fmadd.s f24, f19, f17, f12, rmm # perform operation
fmadd.s f24, f19, f17, f12, rne # perform operation
fmadd.s f24, f19, f17, f12, rtz # perform operation
fmadd.s f24, f19, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3f800000)
li x26, 0x6a34876b974f00cb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xc1e9d6b3edc1e0ca # load x3 with value 0xc1e9d6b3edc1e0ca
sw x3, 0(x2) # store 0xc1e9d6b3edc1e0ca in memory
flw f8, 0(x2) # load 0xc1e9d6b3edc1e0ca from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f21, 0(x2) # load 0x3f800000 from memory into f21
fmadd.s f26, f27, f8, f21, dyn # perform operation
fmadd.s f26, f27, f8, f21, rdn # perform operation
fmadd.s f26, f27, f8, f21, rmm # perform operation
fmadd.s f26, f27, f8, f21, rne # perform operation
fmadd.s f26, f27, f8, f21, rtz # perform operation
fmadd.s f26, f27, f8, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f8, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f8, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbf800000)
li x9, 0x29d9ded3e7492ab4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
li x3, 0x7b497539d18312f2 # load x3 with value 0x7b497539d18312f2
sw x3, 0(x2) # store 0x7b497539d18312f2 in memory
flw f15, 0(x2) # load 0x7b497539d18312f2 from memory into f15
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmadd.s f9, f8, f15, f16, dyn # perform operation
fmadd.s f9, f8, f15, f16, rdn # perform operation
fmadd.s f9, f8, f15, f16, rmm # perform operation
fmadd.s f9, f8, f15, f16, rne # perform operation
fmadd.s f9, f8, f15, f16, rtz # perform operation
fmadd.s f9, f8, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f8, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f8, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f8, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f8, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f8, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x3fc00000)
li x4, 0x0e9f43bedb206b26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x4d0f4d5c4d310b83 # load x3 with value 0x4d0f4d5c4d310b83
sw x3, 0(x2) # store 0x4d0f4d5c4d310b83 in memory
flw f28, 0(x2) # load 0x4d0f4d5c4d310b83 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f4, f23, f28, f3, dyn # perform operation
fmadd.s f4, f23, f28, f3, rdn # perform operation
fmadd.s f4, f23, f28, f3, rmm # perform operation
fmadd.s f4, f23, f28, f3, rne # perform operation
fmadd.s f4, f23, f28, f3, rtz # perform operation
fmadd.s f4, f23, f28, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f23, f28, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f23, f28, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xbfc00000)
li x21, 0x379bc8194e9f0598 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f16, 0(x2) # load 0xbfc00000 from memory into f16
li x3, 0x7e906cddbbff750f # load x3 with value 0x7e906cddbbff750f
sw x3, 0(x2) # store 0x7e906cddbbff750f in memory
flw f14, 0(x2) # load 0x7e906cddbbff750f from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
fmadd.s f21, f16, f14, f24, dyn # perform operation
fmadd.s f21, f16, f14, f24, rdn # perform operation
fmadd.s f21, f16, f14, f24, rmm # perform operation
fmadd.s f21, f16, f14, f24, rne # perform operation
fmadd.s f21, f16, f14, f24, rtz # perform operation
fmadd.s f21, f16, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f16, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f16, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x40000000)
li x19, 0xcbaede578d864bee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0x604aa673c9dc2ab6 # load x3 with value 0x604aa673c9dc2ab6
sw x3, 0(x2) # store 0x604aa673c9dc2ab6 in memory
flw f27, 0(x2) # load 0x604aa673c9dc2ab6 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmadd.s f19, f1, f27, f2, dyn # perform operation
fmadd.s f19, f1, f27, f2, rdn # perform operation
fmadd.s f19, f1, f27, f2, rmm # perform operation
fmadd.s f19, f1, f27, f2, rne # perform operation
fmadd.s f19, f1, f27, f2, rtz # perform operation
fmadd.s f19, f1, f27, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f27, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f27, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xc0000000)
li x25, 0x578c148b6d1d866c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f13, 0(x2) # load 0xbfc00000 from memory into f13
li x3, 0x6d33c82c071614fd # load x3 with value 0x6d33c82c071614fd
sw x3, 0(x2) # store 0x6d33c82c071614fd in memory
flw f8, 0(x2) # load 0x6d33c82c071614fd from memory into f8
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
fmadd.s f25, f13, f8, f18, dyn # perform operation
fmadd.s f25, f13, f8, f18, rdn # perform operation
fmadd.s f25, f13, f8, f18, rmm # perform operation
fmadd.s f25, f13, f8, f18, rne # perform operation
fmadd.s f25, f13, f8, f18, rtz # perform operation
fmadd.s f25, f13, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x800000)
li x10, 0x106ad1a64d64a00a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x92b1908c5c758370 # load x3 with value 0x92b1908c5c758370
sw x3, 0(x2) # store 0x92b1908c5c758370 in memory
flw f16, 0(x2) # load 0x92b1908c5c758370 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f1, 0(x2) # load 0x00800000 from memory into f1
fmadd.s f10, f24, f16, f1, dyn # perform operation
fmadd.s f10, f24, f16, f1, rdn # perform operation
fmadd.s f10, f24, f16, f1, rmm # perform operation
fmadd.s f10, f24, f16, f1, rne # perform operation
fmadd.s f10, f24, f16, f1, rtz # perform operation
fmadd.s f10, f24, f16, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f16, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f16, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80800000)
li x9, 0x6b754eaf7e8c24e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
li x3, 0x3f3f24295b615fd0 # load x3 with value 0x3f3f24295b615fd0
sw x3, 0(x2) # store 0x3f3f24295b615fd0 in memory
flw f12, 0(x2) # load 0x3f3f24295b615fd0 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmadd.s f9, f2, f12, f28, dyn # perform operation
fmadd.s f9, f2, f12, f28, rdn # perform operation
fmadd.s f9, f2, f12, f28, rmm # perform operation
fmadd.s f9, f2, f12, f28, rne # perform operation
fmadd.s f9, f2, f12, f28, rtz # perform operation
fmadd.s f9, f2, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f2, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f2, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f2, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f2, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f2, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f7fffff)
li x15, 0xbda95685f9776192 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
li x3, 0x8445566dd27ca9d3 # load x3 with value 0x8445566dd27ca9d3
sw x3, 0(x2) # store 0x8445566dd27ca9d3 in memory
flw f8, 0(x2) # load 0x8445566dd27ca9d3 from memory into f8
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
fmadd.s f15, f21, f8, f1, dyn # perform operation
fmadd.s f15, f21, f8, f1, rdn # perform operation
fmadd.s f15, f21, f8, f1, rmm # perform operation
fmadd.s f15, f21, f8, f1, rne # perform operation
fmadd.s f15, f21, f8, f1, rtz # perform operation
fmadd.s f15, f21, f8, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f8, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f8, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff7fffff)
li x31, 0x0a418c8dbd7ef117 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x8eab537ac7595998 # load x3 with value 0x8eab537ac7595998
sw x3, 0(x2) # store 0x8eab537ac7595998 in memory
flw f14, 0(x2) # load 0x8eab537ac7595998 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fmadd.s f31, f24, f14, f16, dyn # perform operation
fmadd.s f31, f24, f14, f16, rdn # perform operation
fmadd.s f31, f24, f14, f16, rmm # perform operation
fmadd.s f31, f24, f14, f16, rne # perform operation
fmadd.s f31, f24, f14, f16, rtz # perform operation
fmadd.s f31, f24, f14, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f14, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f14, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffff)
li x6, 0xb98bb5ec03182fee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
li x3, 0x16941a3d35072c42 # load x3 with value 0x16941a3d35072c42
sw x3, 0(x2) # store 0x16941a3d35072c42 in memory
flw f10, 0(x2) # load 0x16941a3d35072c42 from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f17, 0(x2) # load 0x007fffff from memory into f17
fmadd.s f6, f3, f10, f17, dyn # perform operation
fmadd.s f6, f3, f10, f17, rdn # perform operation
fmadd.s f6, f3, f10, f17, rmm # perform operation
fmadd.s f6, f3, f10, f17, rne # perform operation
fmadd.s f6, f3, f10, f17, rtz # perform operation
fmadd.s f6, f3, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f3, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f3, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f3, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f3, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f3, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x807fffff)
li x25, 0x2882f44aded5d2ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0x6b9bd58f5aa46a6d # load x3 with value 0x6b9bd58f5aa46a6d
sw x3, 0(x2) # store 0x6b9bd58f5aa46a6d in memory
flw f27, 0(x2) # load 0x6b9bd58f5aa46a6d from memory into f27
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmadd.s f25, f24, f27, f21, dyn # perform operation
fmadd.s f25, f24, f27, f21, rdn # perform operation
fmadd.s f25, f24, f27, f21, rmm # perform operation
fmadd.s f25, f24, f27, f21, rne # perform operation
fmadd.s f25, f24, f27, f21, rtz # perform operation
fmadd.s f25, f24, f27, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f24, f27, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f24, f27, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x400000)
li x25, 0x49e764566e2c62ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f1, 0(x2) # load 0xbfc00000 from memory into f1
li x3, 0xfbd65df4f38a9008 # load x3 with value 0xfbd65df4f38a9008
sw x3, 0(x2) # store 0xfbd65df4f38a9008 in memory
flw f15, 0(x2) # load 0xfbd65df4f38a9008 from memory into f15
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
fmadd.s f25, f1, f15, f10, dyn # perform operation
fmadd.s f25, f1, f15, f10, rdn # perform operation
fmadd.s f25, f1, f15, f10, rmm # perform operation
fmadd.s f25, f1, f15, f10, rne # perform operation
fmadd.s f25, f1, f15, f10, rtz # perform operation
fmadd.s f25, f1, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80400000)
li x6, 0xc5fd714633fba185 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f12, 0(x2) # load 0xbfc00000 from memory into f12
li x3, 0x7d0a1dbe87683655 # load x3 with value 0x7d0a1dbe87683655
sw x3, 0(x2) # store 0x7d0a1dbe87683655 in memory
flw f17, 0(x2) # load 0x7d0a1dbe87683655 from memory into f17
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fmadd.s f6, f12, f17, f26, dyn # perform operation
fmadd.s f6, f12, f17, f26, rdn # perform operation
fmadd.s f6, f12, f17, f26, rmm # perform operation
fmadd.s f6, f12, f17, f26, rne # perform operation
fmadd.s f6, f12, f17, f26, rtz # perform operation
fmadd.s f6, f12, f17, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f17, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f17, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x1)
li x4, 0x5a4f33c6206daa75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f15, 0(x2) # load 0xbfc00000 from memory into f15
li x3, 0x2029529df685da09 # load x3 with value 0x2029529df685da09
sw x3, 0(x2) # store 0x2029529df685da09 in memory
flw f18, 0(x2) # load 0x2029529df685da09 from memory into f18
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmadd.s f4, f15, f18, f20, dyn # perform operation
fmadd.s f4, f15, f18, f20, rdn # perform operation
fmadd.s f4, f15, f18, f20, rmm # perform operation
fmadd.s f4, f15, f18, f20, rne # perform operation
fmadd.s f4, f15, f18, f20, rtz # perform operation
fmadd.s f4, f15, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x80000001)
li x20, 0x3f3aad766aae838b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f17, 0(x2) # load 0xbfc00000 from memory into f17
li x3, 0xa73bd4d4bebbac16 # load x3 with value 0xa73bd4d4bebbac16
sw x3, 0(x2) # store 0xa73bd4d4bebbac16 in memory
flw f19, 0(x2) # load 0xa73bd4d4bebbac16 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmadd.s f20, f17, f19, f8, dyn # perform operation
fmadd.s f20, f17, f19, f8, rdn # perform operation
fmadd.s f20, f17, f19, f8, rmm # perform operation
fmadd.s f20, f17, f19, f8, rne # perform operation
fmadd.s f20, f17, f19, f8, rtz # perform operation
fmadd.s f20, f17, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f17, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f17, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800000)
li x9, 0x20a309fed0e46281 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f31, 0(x2) # load 0xbfc00000 from memory into f31
li x3, 0xdd98dcd7b0ac26e5 # load x3 with value 0xdd98dcd7b0ac26e5
sw x3, 0(x2) # store 0xdd98dcd7b0ac26e5 in memory
flw f22, 0(x2) # load 0xdd98dcd7b0ac26e5 from memory into f22
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmadd.s f9, f31, f22, f25, dyn # perform operation
fmadd.s f9, f31, f22, f25, rdn # perform operation
fmadd.s f9, f31, f22, f25, rmm # perform operation
fmadd.s f9, f31, f22, f25, rne # perform operation
fmadd.s f9, f31, f22, f25, rtz # perform operation
fmadd.s f9, f31, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0xff800000)
li x19, 0x3d98c1c35687c4af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
li x3, 0x857a2e83f30fbcd4 # load x3 with value 0x857a2e83f30fbcd4
sw x3, 0(x2) # store 0x857a2e83f30fbcd4 in memory
flw f31, 0(x2) # load 0x857a2e83f30fbcd4 from memory into f31
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f19, f26, f31, f27, dyn # perform operation
fmadd.s f19, f26, f31, f27, rdn # perform operation
fmadd.s f19, f26, f31, f27, rmm # perform operation
fmadd.s f19, f26, f31, f27, rne # perform operation
fmadd.s f19, f26, f31, f27, rtz # perform operation
fmadd.s f19, f26, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f26, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f26, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f26, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f26, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f26, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fc00000)
li x21, 0x97c4a3793e069742 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f27, 0(x2) # load 0xbfc00000 from memory into f27
li x3, 0xeb2aa7da51d6e53c # load x3 with value 0xeb2aa7da51d6e53c
sw x3, 0(x2) # store 0xeb2aa7da51d6e53c in memory
flw f1, 0(x2) # load 0xeb2aa7da51d6e53c from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
fmadd.s f21, f27, f1, f25, dyn # perform operation
fmadd.s f21, f27, f1, f25, rdn # perform operation
fmadd.s f21, f27, f1, f25, rmm # perform operation
fmadd.s f21, f27, f1, f25, rne # perform operation
fmadd.s f21, f27, f1, f25, rtz # perform operation
fmadd.s f21, f27, f1, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f27, f1, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f27, f1, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fffffff)
li x31, 0x2dab022fe782ee21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
li x3, 0xcc76406e06409cc1 # load x3 with value 0xcc76406e06409cc1
sw x3, 0(x2) # store 0xcc76406e06409cc1 in memory
flw f6, 0(x2) # load 0xcc76406e06409cc1 from memory into f6
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f28, 0(x2) # load 0x7fffffff from memory into f28
fmadd.s f31, f7, f6, f28, dyn # perform operation
fmadd.s f31, f7, f6, f28, rdn # perform operation
fmadd.s f31, f7, f6, f28, rmm # perform operation
fmadd.s f31, f7, f6, f28, rne # perform operation
fmadd.s f31, f7, f6, f28, rtz # perform operation
fmadd.s f31, f7, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f7, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f7, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7f800001)
li x4, 0x31a800092b65280f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f24, 0(x2) # load 0xbfc00000 from memory into f24
li x3, 0xc40c5c04a458e27a # load x3 with value 0xc40c5c04a458e27a
sw x3, 0(x2) # store 0xc40c5c04a458e27a in memory
flw f14, 0(x2) # load 0xc40c5c04a458e27a from memory into f14
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
fmadd.s f4, f24, f14, f19, dyn # perform operation
fmadd.s f4, f24, f14, f19, rdn # perform operation
fmadd.s f4, f24, f14, f19, rmm # perform operation
fmadd.s f4, f24, f14, f19, rne # perform operation
fmadd.s f4, f24, f14, f19, rtz # perform operation
fmadd.s f4, f24, f14, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f24, f14, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f24, f14, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7fbfffff)
li x31, 0x468b78ac56f30934 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0xb5cbceab665665fd # load x3 with value 0xb5cbceab665665fd
sw x3, 0(x2) # store 0xb5cbceab665665fd in memory
flw f10, 0(x2) # load 0xb5cbceab665665fd from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f30, 0(x2) # load 0x7fbfffff from memory into f30
fmadd.s f31, f23, f10, f30, dyn # perform operation
fmadd.s f31, f23, f10, f30, rdn # perform operation
fmadd.s f31, f23, f10, f30, rmm # perform operation
fmadd.s f31, f23, f10, f30, rne # perform operation
fmadd.s f31, f23, f10, f30, rtz # perform operation
fmadd.s f31, f23, f10, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f10, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f10, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x7ef8654f)
li x26, 0x31a9229daff56282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f23, 0(x2) # load 0xbfc00000 from memory into f23
li x3, 0x9e0a2e7bf142c2c1 # load x3 with value 0x9e0a2e7bf142c2c1
sw x3, 0(x2) # store 0x9e0a2e7bf142c2c1 in memory
flw f4, 0(x2) # load 0x9e0a2e7bf142c2c1 from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f2, 0(x2) # load 0x7ef8654f from memory into f2
fmadd.s f26, f23, f4, f2, dyn # perform operation
fmadd.s f26, f23, f4, f2, rdn # perform operation
fmadd.s f26, f23, f4, f2, rmm # perform operation
fmadd.s f26, f23, f4, f2, rne # perform operation
fmadd.s f26, f23, f4, f2, rtz # perform operation
fmadd.s f26, f23, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f23, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f23, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f23, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f23, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f23, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xbfc00000 fs3 = 0x813d9ab0)
li x25, 0xdc1810f7e46d55e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
li x3, 0xacedebefa4feb5c2 # load x3 with value 0xacedebefa4feb5c2
sw x3, 0(x2) # store 0xacedebefa4feb5c2 in memory
flw f29, 0(x2) # load 0xacedebefa4feb5c2 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f26, 0(x2) # load 0x813d9ab0 from memory into f26
fmadd.s f25, f9, f29, f26, dyn # perform operation
fmadd.s f25, f9, f29, f26, rdn # perform operation
fmadd.s f25, f9, f29, f26, rmm # perform operation
fmadd.s f25, f9, f29, f26, rne # perform operation
fmadd.s f25, f9, f29, f26, rtz # perform operation
fmadd.s f25, f9, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f9, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f9, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f9, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f9, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f9, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x0)
li x21, 0x8cb080740e4bc20a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xd772b5bc6fabfc58 # load x3 with value 0xd772b5bc6fabfc58
sw x3, 0(x2) # store 0xd772b5bc6fabfc58 in memory
flw f9, 0(x2) # load 0xd772b5bc6fabfc58 from memory into f9
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f28, 0(x2) # load 0x00000000 from memory into f28
fmadd.s f21, f11, f9, f28, dyn # perform operation
fmadd.s f21, f11, f9, f28, rdn # perform operation
fmadd.s f21, f11, f9, f28, rmm # perform operation
fmadd.s f21, f11, f9, f28, rne # perform operation
fmadd.s f21, f11, f9, f28, rtz # perform operation
fmadd.s f21, f11, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000000)
li x3, 0x4155a3ea1f7d6b87 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
li x3, 0x1ba53c431e2c57bd # load x3 with value 0x1ba53c431e2c57bd
sw x3, 0(x2) # store 0x1ba53c431e2c57bd in memory
flw f21, 0(x2) # load 0x1ba53c431e2c57bd from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f7, 0(x2) # load 0x80000000 from memory into f7
fmadd.s f3, f28, f21, f7, dyn # perform operation
fmadd.s f3, f28, f21, f7, rdn # perform operation
fmadd.s f3, f28, f21, f7, rmm # perform operation
fmadd.s f3, f28, f21, f7, rne # perform operation
fmadd.s f3, f28, f21, f7, rtz # perform operation
fmadd.s f3, f28, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f28, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f28, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f28, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f28, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f28, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3f800000)
li x18, 0x8833a590b72bfc78 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x36c61aa1d28400c5 # load x3 with value 0x36c61aa1d28400c5
sw x3, 0(x2) # store 0x36c61aa1d28400c5 in memory
flw f1, 0(x2) # load 0x36c61aa1d28400c5 from memory into f1
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f19, 0(x2) # load 0x3f800000 from memory into f19
fmadd.s f18, f13, f1, f19, dyn # perform operation
fmadd.s f18, f13, f1, f19, rdn # perform operation
fmadd.s f18, f13, f1, f19, rmm # perform operation
fmadd.s f18, f13, f1, f19, rne # perform operation
fmadd.s f18, f13, f1, f19, rtz # perform operation
fmadd.s f18, f13, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f13, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f13, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f13, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f13, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f13, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbf800000)
li x23, 0xe25684d1621c139c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
li x3, 0x6d7605d365e67d1d # load x3 with value 0x6d7605d365e67d1d
sw x3, 0(x2) # store 0x6d7605d365e67d1d in memory
flw f21, 0(x2) # load 0x6d7605d365e67d1d from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f27, 0(x2) # load 0xbf800000 from memory into f27
fmadd.s f23, f1, f21, f27, dyn # perform operation
fmadd.s f23, f1, f21, f27, rdn # perform operation
fmadd.s f23, f1, f21, f27, rmm # perform operation
fmadd.s f23, f1, f21, f27, rne # perform operation
fmadd.s f23, f1, f21, f27, rtz # perform operation
fmadd.s f23, f1, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f1, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f1, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x3fc00000)
li x25, 0x770ce04bdfc8eb80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0x1937997c1a382327 # load x3 with value 0x1937997c1a382327
sw x3, 0(x2) # store 0x1937997c1a382327 in memory
flw f17, 0(x2) # load 0x1937997c1a382327 from memory into f17
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f25, f11, f17, f15, dyn # perform operation
fmadd.s f25, f11, f17, f15, rdn # perform operation
fmadd.s f25, f11, f17, f15, rmm # perform operation
fmadd.s f25, f11, f17, f15, rne # perform operation
fmadd.s f25, f11, f17, f15, rtz # perform operation
fmadd.s f25, f11, f17, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f11, f17, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f11, f17, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f11, f17, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f11, f17, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f11, f17, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xbfc00000)
li x18, 0xd04fa4b8be6aa5e3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0x294963432b413904 # load x3 with value 0x294963432b413904
sw x3, 0(x2) # store 0x294963432b413904 in memory
flw f27, 0(x2) # load 0x294963432b413904 from memory into f27
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmadd.s f18, f24, f27, f10, dyn # perform operation
fmadd.s f18, f24, f27, f10, rdn # perform operation
fmadd.s f18, f24, f27, f10, rmm # perform operation
fmadd.s f18, f24, f27, f10, rne # perform operation
fmadd.s f18, f24, f27, f10, rtz # perform operation
fmadd.s f18, f24, f27, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f24, f27, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f24, f27, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x40000000)
li x27, 0x5fd255f34a8a2f75 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
li x3, 0x17abbf976ff7de7d # load x3 with value 0x17abbf976ff7de7d
sw x3, 0(x2) # store 0x17abbf976ff7de7d in memory
flw f16, 0(x2) # load 0x17abbf976ff7de7d from memory into f16
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f27, f12, f16, f31, dyn # perform operation
fmadd.s f27, f12, f16, f31, rdn # perform operation
fmadd.s f27, f12, f16, f31, rmm # perform operation
fmadd.s f27, f12, f16, f31, rne # perform operation
fmadd.s f27, f12, f16, f31, rtz # perform operation
fmadd.s f27, f12, f16, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f12, f16, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f12, f16, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xc0000000)
li x4, 0x58cc37c0dd6bfe70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0x8a664e5dcbed9111 # load x3 with value 0x8a664e5dcbed9111
sw x3, 0(x2) # store 0x8a664e5dcbed9111 in memory
flw f26, 0(x2) # load 0x8a664e5dcbed9111 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmadd.s f4, f15, f26, f1, dyn # perform operation
fmadd.s f4, f15, f26, f1, rdn # perform operation
fmadd.s f4, f15, f26, f1, rmm # perform operation
fmadd.s f4, f15, f26, f1, rne # perform operation
fmadd.s f4, f15, f26, f1, rtz # perform operation
fmadd.s f4, f15, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f15, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f15, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x800000)
li x3, 0xd105a0e3cf1fc5ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f4, 0(x2) # load 0x40000000 from memory into f4
li x3, 0xb6b2ed3379073f0a # load x3 with value 0xb6b2ed3379073f0a
sw x3, 0(x2) # store 0xb6b2ed3379073f0a in memory
flw f16, 0(x2) # load 0xb6b2ed3379073f0a from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f15, 0(x2) # load 0x00800000 from memory into f15
fmadd.s f3, f4, f16, f15, dyn # perform operation
fmadd.s f3, f4, f16, f15, rdn # perform operation
fmadd.s f3, f4, f16, f15, rmm # perform operation
fmadd.s f3, f4, f16, f15, rne # perform operation
fmadd.s f3, f4, f16, f15, rtz # perform operation
fmadd.s f3, f4, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f4, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f4, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f4, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f4, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f4, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80800000)
li x26, 0xe95be934b5d6a90e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xb8e10bf17bac78f2 # load x3 with value 0xb8e10bf17bac78f2
sw x3, 0(x2) # store 0xb8e10bf17bac78f2 in memory
flw f13, 0(x2) # load 0xb8e10bf17bac78f2 from memory into f13
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
fmadd.s f26, f18, f13, f2, dyn # perform operation
fmadd.s f26, f18, f13, f2, rdn # perform operation
fmadd.s f26, f18, f13, f2, rmm # perform operation
fmadd.s f26, f18, f13, f2, rne # perform operation
fmadd.s f26, f18, f13, f2, rtz # perform operation
fmadd.s f26, f18, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f18, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f18, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f7fffff)
li x17, 0x5712721298a7c8b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
li x3, 0xe49c0709fb511c6d # load x3 with value 0xe49c0709fb511c6d
sw x3, 0(x2) # store 0xe49c0709fb511c6d in memory
flw f19, 0(x2) # load 0xe49c0709fb511c6d from memory into f19
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f17, f11, f19, f14, dyn # perform operation
fmadd.s f17, f11, f19, f14, rdn # perform operation
fmadd.s f17, f11, f19, f14, rmm # perform operation
fmadd.s f17, f11, f19, f14, rne # perform operation
fmadd.s f17, f11, f19, f14, rtz # perform operation
fmadd.s f17, f11, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f11, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f11, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff7fffff)
li x27, 0x0596a0bbe908918d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
li x3, 0xf9674a86d16e4e1 # load x3 with value 0xf9674a86d16e4e1
sw x3, 0(x2) # store 0xf9674a86d16e4e1 in memory
flw f3, 0(x2) # load 0xf9674a86d16e4e1 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmadd.s f27, f2, f3, f23, dyn # perform operation
fmadd.s f27, f2, f3, f23, rdn # perform operation
fmadd.s f27, f2, f3, f23, rmm # perform operation
fmadd.s f27, f2, f3, f23, rne # perform operation
fmadd.s f27, f2, f3, f23, rtz # perform operation
fmadd.s f27, f2, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffff)
li x1, 0x4c6e3a1f3dde3081 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x31735ca8a1699232 # load x3 with value 0x31735ca8a1699232
sw x3, 0(x2) # store 0x31735ca8a1699232 in memory
flw f8, 0(x2) # load 0x31735ca8a1699232 from memory into f8
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
fmadd.s f1, f21, f8, f10, dyn # perform operation
fmadd.s f1, f21, f8, f10, rdn # perform operation
fmadd.s f1, f21, f8, f10, rmm # perform operation
fmadd.s f1, f21, f8, f10, rne # perform operation
fmadd.s f1, f21, f8, f10, rtz # perform operation
fmadd.s f1, f21, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f21, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f21, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f21, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f21, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f21, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x807fffff)
li x10, 0x5544280f282b71c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f15, 0(x2) # load 0x40000000 from memory into f15
li x3, 0xcd04046d7dcecf0f # load x3 with value 0xcd04046d7dcecf0f
sw x3, 0(x2) # store 0xcd04046d7dcecf0f in memory
flw f24, 0(x2) # load 0xcd04046d7dcecf0f from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f10, f15, f24, f27, dyn # perform operation
fmadd.s f10, f15, f24, f27, rdn # perform operation
fmadd.s f10, f15, f24, f27, rmm # perform operation
fmadd.s f10, f15, f24, f27, rne # perform operation
fmadd.s f10, f15, f24, f27, rtz # perform operation
fmadd.s f10, f15, f24, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f15, f24, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f15, f24, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x400000)
li x5, 0x79c6f2cd2be22c05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f26, 0(x2) # load 0x40000000 from memory into f26
li x3, 0x4ee777bcec846afa # load x3 with value 0x4ee777bcec846afa
sw x3, 0(x2) # store 0x4ee777bcec846afa in memory
flw f22, 0(x2) # load 0x4ee777bcec846afa from memory into f22
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
fmadd.s f5, f26, f22, f17, dyn # perform operation
fmadd.s f5, f26, f22, f17, rdn # perform operation
fmadd.s f5, f26, f22, f17, rmm # perform operation
fmadd.s f5, f26, f22, f17, rne # perform operation
fmadd.s f5, f26, f22, f17, rtz # perform operation
fmadd.s f5, f26, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80400000)
li x31, 0xaa40e5f2977919f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
li x3, 0xe896842f888acc4a # load x3 with value 0xe896842f888acc4a
sw x3, 0(x2) # store 0xe896842f888acc4a in memory
flw f3, 0(x2) # load 0xe896842f888acc4a from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f1, 0(x2) # load 0x80400000 from memory into f1
fmadd.s f31, f24, f3, f1, dyn # perform operation
fmadd.s f31, f24, f3, f1, rdn # perform operation
fmadd.s f31, f24, f3, f1, rmm # perform operation
fmadd.s f31, f24, f3, f1, rne # perform operation
fmadd.s f31, f24, f3, f1, rtz # perform operation
fmadd.s f31, f24, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f24, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f24, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x1)
li x4, 0x5d4f105a7ca1e902 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f10, 0(x2) # load 0x40000000 from memory into f10
li x3, 0xeab0203b07dccb0d # load x3 with value 0xeab0203b07dccb0d
sw x3, 0(x2) # store 0xeab0203b07dccb0d in memory
flw f25, 0(x2) # load 0xeab0203b07dccb0d from memory into f25
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f4, f10, f25, f5, dyn # perform operation
fmadd.s f4, f10, f25, f5, rdn # perform operation
fmadd.s f4, f10, f25, f5, rmm # perform operation
fmadd.s f4, f10, f25, f5, rne # perform operation
fmadd.s f4, f10, f25, f5, rtz # perform operation
fmadd.s f4, f10, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f10, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f10, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f10, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f10, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f10, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x80000001)
li x26, 0x4b17fb7c3e257307 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0x1a98f8ff9a701634 # load x3 with value 0x1a98f8ff9a701634
sw x3, 0(x2) # store 0x1a98f8ff9a701634 in memory
flw f13, 0(x2) # load 0x1a98f8ff9a701634 from memory into f13
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmadd.s f26, f21, f13, f27, dyn # perform operation
fmadd.s f26, f21, f13, f27, rdn # perform operation
fmadd.s f26, f21, f13, f27, rmm # perform operation
fmadd.s f26, f21, f13, f27, rne # perform operation
fmadd.s f26, f21, f13, f27, rtz # perform operation
fmadd.s f26, f21, f13, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f21, f13, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f21, f13, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800000)
li x19, 0xec2b46fecf03040a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0x549c2fd11c2ad166 # load x3 with value 0x549c2fd11c2ad166
sw x3, 0(x2) # store 0x549c2fd11c2ad166 in memory
flw f13, 0(x2) # load 0x549c2fd11c2ad166 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f4, 0(x2) # load 0x7f800000 from memory into f4
fmadd.s f19, f8, f13, f4, dyn # perform operation
fmadd.s f19, f8, f13, f4, rdn # perform operation
fmadd.s f19, f8, f13, f4, rmm # perform operation
fmadd.s f19, f8, f13, f4, rne # perform operation
fmadd.s f19, f8, f13, f4, rtz # perform operation
fmadd.s f19, f8, f13, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f13, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f13, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0xff800000)
li x22, 0x2a67f9aded2cefd5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f8, 0(x2) # load 0x40000000 from memory into f8
li x3, 0xc89059363f1dc90d # load x3 with value 0xc89059363f1dc90d
sw x3, 0(x2) # store 0xc89059363f1dc90d in memory
flw f1, 0(x2) # load 0xc89059363f1dc90d from memory into f1
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f22, f8, f1, f18, dyn # perform operation
fmadd.s f22, f8, f1, f18, rdn # perform operation
fmadd.s f22, f8, f1, f18, rmm # perform operation
fmadd.s f22, f8, f1, f18, rne # perform operation
fmadd.s f22, f8, f1, f18, rtz # perform operation
fmadd.s f22, f8, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fc00000)
li x29, 0x13ac5ad388c73c82 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
li x3, 0x41292197e2eab3ce # load x3 with value 0x41292197e2eab3ce
sw x3, 0(x2) # store 0x41292197e2eab3ce in memory
flw f16, 0(x2) # load 0x41292197e2eab3ce from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
fmadd.s f29, f31, f16, f13, dyn # perform operation
fmadd.s f29, f31, f16, f13, rdn # perform operation
fmadd.s f29, f31, f16, f13, rmm # perform operation
fmadd.s f29, f31, f16, f13, rne # perform operation
fmadd.s f29, f31, f16, f13, rtz # perform operation
fmadd.s f29, f31, f16, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f16, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f16, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f16, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f16, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f16, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fffffff)
li x27, 0x3752c55b87089d7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0xef7a8de9ffeec908 # load x3 with value 0xef7a8de9ffeec908
sw x3, 0(x2) # store 0xef7a8de9ffeec908 in memory
flw f26, 0(x2) # load 0xef7a8de9ffeec908 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f15, 0(x2) # load 0x7fffffff from memory into f15
fmadd.s f27, f18, f26, f15, dyn # perform operation
fmadd.s f27, f18, f26, f15, rdn # perform operation
fmadd.s f27, f18, f26, f15, rmm # perform operation
fmadd.s f27, f18, f26, f15, rne # perform operation
fmadd.s f27, f18, f26, f15, rtz # perform operation
fmadd.s f27, f18, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f18, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f18, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f18, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f18, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f18, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7f800001)
li x12, 0x5ca600887911c03a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f21, 0(x2) # load 0x40000000 from memory into f21
li x3, 0xb6509ef4e5a791de # load x3 with value 0xb6509ef4e5a791de
sw x3, 0(x2) # store 0xb6509ef4e5a791de in memory
flw f29, 0(x2) # load 0xb6509ef4e5a791de from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f23, 0(x2) # load 0x7f800001 from memory into f23
fmadd.s f12, f21, f29, f23, dyn # perform operation
fmadd.s f12, f21, f29, f23, rdn # perform operation
fmadd.s f12, f21, f29, f23, rmm # perform operation
fmadd.s f12, f21, f29, f23, rne # perform operation
fmadd.s f12, f21, f29, f23, rtz # perform operation
fmadd.s f12, f21, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f21, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f21, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f21, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f21, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f21, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7fbfffff)
li x3, 0xb4f3e6e2c4da2ccd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f30, 0(x2) # load 0x40000000 from memory into f30
li x3, 0x53ae7cd3dd72bdb8 # load x3 with value 0x53ae7cd3dd72bdb8
sw x3, 0(x2) # store 0x53ae7cd3dd72bdb8 in memory
flw f29, 0(x2) # load 0x53ae7cd3dd72bdb8 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmadd.s f3, f30, f29, f12, dyn # perform operation
fmadd.s f3, f30, f29, f12, rdn # perform operation
fmadd.s f3, f30, f29, f12, rmm # perform operation
fmadd.s f3, f30, f29, f12, rne # perform operation
fmadd.s f3, f30, f29, f12, rtz # perform operation
fmadd.s f3, f30, f29, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f30, f29, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f30, f29, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f30, f29, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f30, f29, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f30, f29, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x7ef8654f)
li x17, 0x4419097108f515ec # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f18, 0(x2) # load 0x40000000 from memory into f18
li x3, 0x2041698dbd2b5acd # load x3 with value 0x2041698dbd2b5acd
sw x3, 0(x2) # store 0x2041698dbd2b5acd in memory
flw f8, 0(x2) # load 0x2041698dbd2b5acd from memory into f8
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f17, f18, f8, f10, dyn # perform operation
fmadd.s f17, f18, f8, f10, rdn # perform operation
fmadd.s f17, f18, f8, f10, rmm # perform operation
fmadd.s f17, f18, f8, f10, rne # perform operation
fmadd.s f17, f18, f8, f10, rtz # perform operation
fmadd.s f17, f18, f8, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f8, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f8, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f8, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f8, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f8, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x40000000 fs3 = 0x813d9ab0)
li x6, 0xeda647376e3cfb60 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
li x3, 0x6b34d886e99dc577 # load x3 with value 0x6b34d886e99dc577
sw x3, 0(x2) # store 0x6b34d886e99dc577 in memory
flw f31, 0(x2) # load 0x6b34d886e99dc577 from memory into f31
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f6, f13, f31, f15, dyn # perform operation
fmadd.s f6, f13, f31, f15, rdn # perform operation
fmadd.s f6, f13, f31, f15, rmm # perform operation
fmadd.s f6, f13, f31, f15, rne # perform operation
fmadd.s f6, f13, f31, f15, rtz # perform operation
fmadd.s f6, f13, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f13, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x0)
li x22, 0x422e96f58ab8232a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
li x3, 0xe88926b339d63ce4 # load x3 with value 0xe88926b339d63ce4
sw x3, 0(x2) # store 0xe88926b339d63ce4 in memory
flw f30, 0(x2) # load 0xe88926b339d63ce4 from memory into f30
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f11, 0(x2) # load 0x00000000 from memory into f11
fmadd.s f22, f24, f30, f11, dyn # perform operation
fmadd.s f22, f24, f30, f11, rdn # perform operation
fmadd.s f22, f24, f30, f11, rmm # perform operation
fmadd.s f22, f24, f30, f11, rne # perform operation
fmadd.s f22, f24, f30, f11, rtz # perform operation
fmadd.s f22, f24, f30, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f30, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f30, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000000)
li x15, 0x70fd81db0ef09a2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
li x3, 0x4ddc606b5bd4a653 # load x3 with value 0x4ddc606b5bd4a653
sw x3, 0(x2) # store 0x4ddc606b5bd4a653 in memory
flw f25, 0(x2) # load 0x4ddc606b5bd4a653 from memory into f25
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmadd.s f15, f5, f25, f3, dyn # perform operation
fmadd.s f15, f5, f25, f3, rdn # perform operation
fmadd.s f15, f5, f25, f3, rmm # perform operation
fmadd.s f15, f5, f25, f3, rne # perform operation
fmadd.s f15, f5, f25, f3, rtz # perform operation
fmadd.s f15, f5, f25, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f5, f25, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f5, f25, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3f800000)
li x24, 0x1f29cd74cda39a38 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0x959a36686b032fad # load x3 with value 0x959a36686b032fad
sw x3, 0(x2) # store 0x959a36686b032fad in memory
flw f18, 0(x2) # load 0x959a36686b032fad from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fmadd.s f24, f30, f18, f11, dyn # perform operation
fmadd.s f24, f30, f18, f11, rdn # perform operation
fmadd.s f24, f30, f18, f11, rmm # perform operation
fmadd.s f24, f30, f18, f11, rne # perform operation
fmadd.s f24, f30, f18, f11, rtz # perform operation
fmadd.s f24, f30, f18, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f18, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f18, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbf800000)
li x11, 0x770c7af85b919c17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0x70fbafbb6726d4d2 # load x3 with value 0x70fbafbb6726d4d2
sw x3, 0(x2) # store 0x70fbafbb6726d4d2 in memory
flw f3, 0(x2) # load 0x70fbafbb6726d4d2 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f11, f19, f3, f10, dyn # perform operation
fmadd.s f11, f19, f3, f10, rdn # perform operation
fmadd.s f11, f19, f3, f10, rmm # perform operation
fmadd.s f11, f19, f3, f10, rne # perform operation
fmadd.s f11, f19, f3, f10, rtz # perform operation
fmadd.s f11, f19, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f19, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f19, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x3fc00000)
li x30, 0x7d5c574f27f3bd2e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
li x3, 0x28d112f1c21c808d # load x3 with value 0x28d112f1c21c808d
sw x3, 0(x2) # store 0x28d112f1c21c808d in memory
flw f15, 0(x2) # load 0x28d112f1c21c808d from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmadd.s f30, f11, f15, f19, dyn # perform operation
fmadd.s f30, f11, f15, f19, rdn # perform operation
fmadd.s f30, f11, f15, f19, rmm # perform operation
fmadd.s f30, f11, f15, f19, rne # perform operation
fmadd.s f30, f11, f15, f19, rtz # perform operation
fmadd.s f30, f11, f15, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f15, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f15, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xbfc00000)
li x19, 0x02c47b36c8430528 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f14, 0(x2) # load 0xc0000000 from memory into f14
li x3, 0xb13df406cd2a33d5 # load x3 with value 0xb13df406cd2a33d5
sw x3, 0(x2) # store 0xb13df406cd2a33d5 in memory
flw f25, 0(x2) # load 0xb13df406cd2a33d5 from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f5, 0(x2) # load 0xbfc00000 from memory into f5
fmadd.s f19, f14, f25, f5, dyn # perform operation
fmadd.s f19, f14, f25, f5, rdn # perform operation
fmadd.s f19, f14, f25, f5, rmm # perform operation
fmadd.s f19, f14, f25, f5, rne # perform operation
fmadd.s f19, f14, f25, f5, rtz # perform operation
fmadd.s f19, f14, f25, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f14, f25, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f14, f25, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f14, f25, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f14, f25, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f14, f25, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x40000000)
li x14, 0x67df73d0a82c473d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f28, 0(x2) # load 0xc0000000 from memory into f28
li x3, 0xe063c6a7fda1de38 # load x3 with value 0xe063c6a7fda1de38
sw x3, 0(x2) # store 0xe063c6a7fda1de38 in memory
flw f22, 0(x2) # load 0xe063c6a7fda1de38 from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f14, f28, f22, f31, dyn # perform operation
fmadd.s f14, f28, f22, f31, rdn # perform operation
fmadd.s f14, f28, f22, f31, rmm # perform operation
fmadd.s f14, f28, f22, f31, rne # perform operation
fmadd.s f14, f28, f22, f31, rtz # perform operation
fmadd.s f14, f28, f22, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f28, f22, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f28, f22, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xc0000000)
li x28, 0x634ac45ac8625763 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f31, 0(x2) # load 0xc0000000 from memory into f31
li x3, 0xa9f5debc9e081d01 # load x3 with value 0xa9f5debc9e081d01
sw x3, 0(x2) # store 0xa9f5debc9e081d01 in memory
flw f10, 0(x2) # load 0xa9f5debc9e081d01 from memory into f10
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f11, 0(x2) # load 0xc0000000 from memory into f11
fmadd.s f28, f31, f10, f11, dyn # perform operation
fmadd.s f28, f31, f10, f11, rdn # perform operation
fmadd.s f28, f31, f10, f11, rmm # perform operation
fmadd.s f28, f31, f10, f11, rne # perform operation
fmadd.s f28, f31, f10, f11, rtz # perform operation
fmadd.s f28, f31, f10, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f31, f10, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f31, f10, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f31, f10, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f31, f10, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f31, f10, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x800000)
li x6, 0xc73576dae7464390 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xdbf1eb1da730f910 # load x3 with value 0xdbf1eb1da730f910
sw x3, 0(x2) # store 0xdbf1eb1da730f910 in memory
flw f8, 0(x2) # load 0xdbf1eb1da730f910 from memory into f8
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmadd.s f6, f7, f8, f29, dyn # perform operation
fmadd.s f6, f7, f8, f29, rdn # perform operation
fmadd.s f6, f7, f8, f29, rmm # perform operation
fmadd.s f6, f7, f8, f29, rne # perform operation
fmadd.s f6, f7, f8, f29, rtz # perform operation
fmadd.s f6, f7, f8, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f8, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f8, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80800000)
li x22, 0xa07835891a15ae56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
li x3, 0xc3ae3956ef68f58d # load x3 with value 0xc3ae3956ef68f58d
sw x3, 0(x2) # store 0xc3ae3956ef68f58d in memory
flw f9, 0(x2) # load 0xc3ae3956ef68f58d from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f30, 0(x2) # load 0x80800000 from memory into f30
fmadd.s f22, f19, f9, f30, dyn # perform operation
fmadd.s f22, f19, f9, f30, rdn # perform operation
fmadd.s f22, f19, f9, f30, rmm # perform operation
fmadd.s f22, f19, f9, f30, rne # perform operation
fmadd.s f22, f19, f9, f30, rtz # perform operation
fmadd.s f22, f19, f9, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f9, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f9, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f7fffff)
li x14, 0x7b25fc9188672efa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
li x3, 0xea0ad289f012166b # load x3 with value 0xea0ad289f012166b
sw x3, 0(x2) # store 0xea0ad289f012166b in memory
flw f9, 0(x2) # load 0xea0ad289f012166b from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f28, 0(x2) # load 0x7f7fffff from memory into f28
fmadd.s f14, f29, f9, f28, dyn # perform operation
fmadd.s f14, f29, f9, f28, rdn # perform operation
fmadd.s f14, f29, f9, f28, rmm # perform operation
fmadd.s f14, f29, f9, f28, rne # perform operation
fmadd.s f14, f29, f9, f28, rtz # perform operation
fmadd.s f14, f29, f9, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f29, f9, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f29, f9, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff7fffff)
li x9, 0xe31d7a5264b94352 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f7, 0(x2) # load 0xc0000000 from memory into f7
li x3, 0xde0b0d629a33484d # load x3 with value 0xde0b0d629a33484d
sw x3, 0(x2) # store 0xde0b0d629a33484d in memory
flw f18, 0(x2) # load 0xde0b0d629a33484d from memory into f18
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fmadd.s f9, f7, f18, f27, dyn # perform operation
fmadd.s f9, f7, f18, f27, rdn # perform operation
fmadd.s f9, f7, f18, f27, rmm # perform operation
fmadd.s f9, f7, f18, f27, rne # perform operation
fmadd.s f9, f7, f18, f27, rtz # perform operation
fmadd.s f9, f7, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffff)
li x28, 0x8915d4fc8c1de73b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f30, 0(x2) # load 0xc0000000 from memory into f30
li x3, 0xe1c9e874157329cb # load x3 with value 0xe1c9e874157329cb
sw x3, 0(x2) # store 0xe1c9e874157329cb in memory
flw f13, 0(x2) # load 0xe1c9e874157329cb from memory into f13
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f28, f30, f13, f20, dyn # perform operation
fmadd.s f28, f30, f13, f20, rdn # perform operation
fmadd.s f28, f30, f13, f20, rmm # perform operation
fmadd.s f28, f30, f13, f20, rne # perform operation
fmadd.s f28, f30, f13, f20, rtz # perform operation
fmadd.s f28, f30, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f30, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f30, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x807fffff)
li x23, 0xb863cf1c2e85ac4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x98dc77427b7f82d6 # load x3 with value 0x98dc77427b7f82d6
sw x3, 0(x2) # store 0x98dc77427b7f82d6 in memory
flw f15, 0(x2) # load 0x98dc77427b7f82d6 from memory into f15
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmadd.s f23, f3, f15, f5, dyn # perform operation
fmadd.s f23, f3, f15, f5, rdn # perform operation
fmadd.s f23, f3, f15, f5, rmm # perform operation
fmadd.s f23, f3, f15, f5, rne # perform operation
fmadd.s f23, f3, f15, f5, rtz # perform operation
fmadd.s f23, f3, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f3, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f3, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x400000)
li x16, 0x04718360dd63c633 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0xde23549931059577 # load x3 with value 0xde23549931059577
sw x3, 0(x2) # store 0xde23549931059577 in memory
flw f23, 0(x2) # load 0xde23549931059577 from memory into f23
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f28, 0(x2) # load 0x00400000 from memory into f28
fmadd.s f16, f20, f23, f28, dyn # perform operation
fmadd.s f16, f20, f23, f28, rdn # perform operation
fmadd.s f16, f20, f23, f28, rmm # perform operation
fmadd.s f16, f20, f23, f28, rne # perform operation
fmadd.s f16, f20, f23, f28, rtz # perform operation
fmadd.s f16, f20, f23, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f23, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f23, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80400000)
li x26, 0x105311e9e5de2240 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0xea480b7356832f6 # load x3 with value 0xea480b7356832f6
sw x3, 0(x2) # store 0xea480b7356832f6 in memory
flw f3, 0(x2) # load 0xea480b7356832f6 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
fmadd.s f26, f27, f3, f10, dyn # perform operation
fmadd.s f26, f27, f3, f10, rdn # perform operation
fmadd.s f26, f27, f3, f10, rmm # perform operation
fmadd.s f26, f27, f3, f10, rne # perform operation
fmadd.s f26, f27, f3, f10, rtz # perform operation
fmadd.s f26, f27, f3, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f27, f3, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f27, f3, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f27, f3, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f27, f3, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f27, f3, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x1)
li x14, 0x4b7a5da81aa26aba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f9, 0(x2) # load 0xc0000000 from memory into f9
li x3, 0x733b74a42d1645cf # load x3 with value 0x733b74a42d1645cf
sw x3, 0(x2) # store 0x733b74a42d1645cf in memory
flw f15, 0(x2) # load 0x733b74a42d1645cf from memory into f15
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f3, 0(x2) # load 0x00000001 from memory into f3
fmadd.s f14, f9, f15, f3, dyn # perform operation
fmadd.s f14, f9, f15, f3, rdn # perform operation
fmadd.s f14, f9, f15, f3, rmm # perform operation
fmadd.s f14, f9, f15, f3, rne # perform operation
fmadd.s f14, f9, f15, f3, rtz # perform operation
fmadd.s f14, f9, f15, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f15, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f15, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x80000001)
li x7, 0x3d9f93db92df9774 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
li x3, 0xc348ed205496a83f # load x3 with value 0xc348ed205496a83f
sw x3, 0(x2) # store 0xc348ed205496a83f in memory
flw f26, 0(x2) # load 0xc348ed205496a83f from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f30, 0(x2) # load 0x80000001 from memory into f30
fmadd.s f7, f1, f26, f30, dyn # perform operation
fmadd.s f7, f1, f26, f30, rdn # perform operation
fmadd.s f7, f1, f26, f30, rmm # perform operation
fmadd.s f7, f1, f26, f30, rne # perform operation
fmadd.s f7, f1, f26, f30, rtz # perform operation
fmadd.s f7, f1, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800000)
li x24, 0xbbe43525fc5ddf24 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
li x3, 0x6e734a4ec8ace7e1 # load x3 with value 0x6e734a4ec8ace7e1
sw x3, 0(x2) # store 0x6e734a4ec8ace7e1 in memory
flw f4, 0(x2) # load 0x6e734a4ec8ace7e1 from memory into f4
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmadd.s f24, f21, f4, f30, dyn # perform operation
fmadd.s f24, f21, f4, f30, rdn # perform operation
fmadd.s f24, f21, f4, f30, rmm # perform operation
fmadd.s f24, f21, f4, f30, rne # perform operation
fmadd.s f24, f21, f4, f30, rtz # perform operation
fmadd.s f24, f21, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f21, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f21, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0xff800000)
li x10, 0x0acfe6671f596078 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
li x3, 0x5166a1d93bf8da62 # load x3 with value 0x5166a1d93bf8da62
sw x3, 0(x2) # store 0x5166a1d93bf8da62 in memory
flw f22, 0(x2) # load 0x5166a1d93bf8da62 from memory into f22
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f14, 0(x2) # load 0xff800000 from memory into f14
fmadd.s f10, f27, f22, f14, dyn # perform operation
fmadd.s f10, f27, f22, f14, rdn # perform operation
fmadd.s f10, f27, f22, f14, rmm # perform operation
fmadd.s f10, f27, f22, f14, rne # perform operation
fmadd.s f10, f27, f22, f14, rtz # perform operation
fmadd.s f10, f27, f22, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f27, f22, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f27, f22, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f27, f22, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f27, f22, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f27, f22, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fc00000)
li x3, 0x64c9cb5d4b464c2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f10, 0(x2) # load 0xc0000000 from memory into f10
li x3, 0xc9e1a6f81de6b95a # load x3 with value 0xc9e1a6f81de6b95a
sw x3, 0(x2) # store 0xc9e1a6f81de6b95a in memory
flw f17, 0(x2) # load 0xc9e1a6f81de6b95a from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
fmadd.s f3, f10, f17, f1, dyn # perform operation
fmadd.s f3, f10, f17, f1, rdn # perform operation
fmadd.s f3, f10, f17, f1, rmm # perform operation
fmadd.s f3, f10, f17, f1, rne # perform operation
fmadd.s f3, f10, f17, f1, rtz # perform operation
fmadd.s f3, f10, f17, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f10, f17, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f10, f17, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fffffff)
li x27, 0xd8b9482ee10ae511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
li x3, 0x7a796edbecbe761d # load x3 with value 0x7a796edbecbe761d
sw x3, 0(x2) # store 0x7a796edbecbe761d in memory
flw f15, 0(x2) # load 0x7a796edbecbe761d from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
fmadd.s f27, f3, f15, f8, dyn # perform operation
fmadd.s f27, f3, f15, f8, rdn # perform operation
fmadd.s f27, f3, f15, f8, rmm # perform operation
fmadd.s f27, f3, f15, f8, rne # perform operation
fmadd.s f27, f3, f15, f8, rtz # perform operation
fmadd.s f27, f3, f15, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f3, f15, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f3, f15, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7f800001)
li x24, 0x5f53c24311c1b022 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f13, 0(x2) # load 0xc0000000 from memory into f13
li x3, 0x1eca59537348864 # load x3 with value 0x1eca59537348864
sw x3, 0(x2) # store 0x1eca59537348864 in memory
flw f31, 0(x2) # load 0x1eca59537348864 from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f15, 0(x2) # load 0x7f800001 from memory into f15
fmadd.s f24, f13, f31, f15, dyn # perform operation
fmadd.s f24, f13, f31, f15, rdn # perform operation
fmadd.s f24, f13, f31, f15, rmm # perform operation
fmadd.s f24, f13, f31, f15, rne # perform operation
fmadd.s f24, f13, f31, f15, rtz # perform operation
fmadd.s f24, f13, f31, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f13, f31, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f13, f31, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7fbfffff)
li x4, 0xa2791612a6d996a6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f26, 0(x2) # load 0xc0000000 from memory into f26
li x3, 0x38b9954c7b5ea2b1 # load x3 with value 0x38b9954c7b5ea2b1
sw x3, 0(x2) # store 0x38b9954c7b5ea2b1 in memory
flw f12, 0(x2) # load 0x38b9954c7b5ea2b1 from memory into f12
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f18, 0(x2) # load 0x7fbfffff from memory into f18
fmadd.s f4, f26, f12, f18, dyn # perform operation
fmadd.s f4, f26, f12, f18, rdn # perform operation
fmadd.s f4, f26, f12, f18, rmm # perform operation
fmadd.s f4, f26, f12, f18, rne # perform operation
fmadd.s f4, f26, f12, f18, rtz # perform operation
fmadd.s f4, f26, f12, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f26, f12, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f26, f12, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x7ef8654f)
li x13, 0x8fc43f00ba9a0349 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f20, 0(x2) # load 0xc0000000 from memory into f20
li x3, 0x48324539c8b7c2a7 # load x3 with value 0x48324539c8b7c2a7
sw x3, 0(x2) # store 0x48324539c8b7c2a7 in memory
flw f9, 0(x2) # load 0x48324539c8b7c2a7 from memory into f9
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
fmadd.s f13, f20, f9, f21, dyn # perform operation
fmadd.s f13, f20, f9, f21, rdn # perform operation
fmadd.s f13, f20, f9, f21, rmm # perform operation
fmadd.s f13, f20, f9, f21, rne # perform operation
fmadd.s f13, f20, f9, f21, rtz # perform operation
fmadd.s f13, f20, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f20, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f20, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f20, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f20, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f20, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xc0000000 fs3 = 0x813d9ab0)
li x31, 0x9ee9b71077bee696 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f18, 0(x2) # load 0xc0000000 from memory into f18
li x3, 0x24256ff1f4f4a711 # load x3 with value 0x24256ff1f4f4a711
sw x3, 0(x2) # store 0x24256ff1f4f4a711 in memory
flw f13, 0(x2) # load 0x24256ff1f4f4a711 from memory into f13
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmadd.s f31, f18, f13, f19, dyn # perform operation
fmadd.s f31, f18, f13, f19, rdn # perform operation
fmadd.s f31, f18, f13, f19, rmm # perform operation
fmadd.s f31, f18, f13, f19, rne # perform operation
fmadd.s f31, f18, f13, f19, rtz # perform operation
fmadd.s f31, f18, f13, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f18, f13, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f18, f13, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x0)
li x2, 0xdfd06858bb283561 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f28, 0(x2) # load 0x00800000 from memory into f28
li x3, 0xe1a0a354005f3c72 # load x3 with value 0xe1a0a354005f3c72
sw x3, 0(x2) # store 0xe1a0a354005f3c72 in memory
flw f31, 0(x2) # load 0xe1a0a354005f3c72 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmadd.s f2, f28, f31, f27, dyn # perform operation
fmadd.s f2, f28, f31, f27, rdn # perform operation
fmadd.s f2, f28, f31, f27, rmm # perform operation
fmadd.s f2, f28, f31, f27, rne # perform operation
fmadd.s f2, f28, f31, f27, rtz # perform operation
fmadd.s f2, f28, f31, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f28, f31, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f28, f31, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000000)
li x22, 0x50abbec77a4b8399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
li x3, 0x8d93bd0bb005ab50 # load x3 with value 0x8d93bd0bb005ab50
sw x3, 0(x2) # store 0x8d93bd0bb005ab50 in memory
flw f31, 0(x2) # load 0x8d93bd0bb005ab50 from memory into f31
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f4, 0(x2) # load 0x80000000 from memory into f4
fmadd.s f22, f6, f31, f4, dyn # perform operation
fmadd.s f22, f6, f31, f4, rdn # perform operation
fmadd.s f22, f6, f31, f4, rmm # perform operation
fmadd.s f22, f6, f31, f4, rne # perform operation
fmadd.s f22, f6, f31, f4, rtz # perform operation
fmadd.s f22, f6, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3f800000)
li x31, 0x0dbacffd25524799 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
li x3, 0xc30117afdff95ff7 # load x3 with value 0xc30117afdff95ff7
sw x3, 0(x2) # store 0xc30117afdff95ff7 in memory
flw f21, 0(x2) # load 0xc30117afdff95ff7 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fmadd.s f31, f12, f21, f11, dyn # perform operation
fmadd.s f31, f12, f21, f11, rdn # perform operation
fmadd.s f31, f12, f21, f11, rmm # perform operation
fmadd.s f31, f12, f21, f11, rne # perform operation
fmadd.s f31, f12, f21, f11, rtz # perform operation
fmadd.s f31, f12, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f12, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f12, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbf800000)
li x7, 0x1b87626cbfaf533d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x8b19fcb18ae6350f # load x3 with value 0x8b19fcb18ae6350f
sw x3, 0(x2) # store 0x8b19fcb18ae6350f in memory
flw f19, 0(x2) # load 0x8b19fcb18ae6350f from memory into f19
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f24, 0(x2) # load 0xbf800000 from memory into f24
fmadd.s f7, f30, f19, f24, dyn # perform operation
fmadd.s f7, f30, f19, f24, rdn # perform operation
fmadd.s f7, f30, f19, f24, rmm # perform operation
fmadd.s f7, f30, f19, f24, rne # perform operation
fmadd.s f7, f30, f19, f24, rtz # perform operation
fmadd.s f7, f30, f19, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f30, f19, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f30, f19, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x3fc00000)
li x29, 0xb5e56f3d387d4f7b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
li x3, 0xf579911ded504631 # load x3 with value 0xf579911ded504631
sw x3, 0(x2) # store 0xf579911ded504631 in memory
flw f27, 0(x2) # load 0xf579911ded504631 from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f31, 0(x2) # load 0x3fc00000 from memory into f31
fmadd.s f29, f3, f27, f31, dyn # perform operation
fmadd.s f29, f3, f27, f31, rdn # perform operation
fmadd.s f29, f3, f27, f31, rmm # perform operation
fmadd.s f29, f3, f27, f31, rne # perform operation
fmadd.s f29, f3, f27, f31, rtz # perform operation
fmadd.s f29, f3, f27, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f3, f27, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f3, f27, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xbfc00000)
li x11, 0x3a92200543138766 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x455ba57335e26499 # load x3 with value 0x455ba57335e26499
sw x3, 0(x2) # store 0x455ba57335e26499 in memory
flw f2, 0(x2) # load 0x455ba57335e26499 from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f21, 0(x2) # load 0xbfc00000 from memory into f21
fmadd.s f11, f20, f2, f21, dyn # perform operation
fmadd.s f11, f20, f2, f21, rdn # perform operation
fmadd.s f11, f20, f2, f21, rmm # perform operation
fmadd.s f11, f20, f2, f21, rne # perform operation
fmadd.s f11, f20, f2, f21, rtz # perform operation
fmadd.s f11, f20, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f20, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f20, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x40000000)
li x15, 0x6d90a210b15b4f36 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f8, 0(x2) # load 0x00800000 from memory into f8
li x3, 0xfb28a5c7bab3dfd8 # load x3 with value 0xfb28a5c7bab3dfd8
sw x3, 0(x2) # store 0xfb28a5c7bab3dfd8 in memory
flw f28, 0(x2) # load 0xfb28a5c7bab3dfd8 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmadd.s f15, f8, f28, f11, dyn # perform operation
fmadd.s f15, f8, f28, f11, rdn # perform operation
fmadd.s f15, f8, f28, f11, rmm # perform operation
fmadd.s f15, f8, f28, f11, rne # perform operation
fmadd.s f15, f8, f28, f11, rtz # perform operation
fmadd.s f15, f8, f28, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f8, f28, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f8, f28, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xc0000000)
li x30, 0xf582afdf2acf6dae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xaef39fdb4023ed18 # load x3 with value 0xaef39fdb4023ed18
sw x3, 0(x2) # store 0xaef39fdb4023ed18 in memory
flw f26, 0(x2) # load 0xaef39fdb4023ed18 from memory into f26
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f23, 0(x2) # load 0xc0000000 from memory into f23
fmadd.s f30, f20, f26, f23, dyn # perform operation
fmadd.s f30, f20, f26, f23, rdn # perform operation
fmadd.s f30, f20, f26, f23, rmm # perform operation
fmadd.s f30, f20, f26, f23, rne # perform operation
fmadd.s f30, f20, f26, f23, rtz # perform operation
fmadd.s f30, f20, f26, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f26, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f26, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x800000)
li x5, 0xb7d7baf2abe7d1e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f26, 0(x2) # load 0x00800000 from memory into f26
li x3, 0x8547b4109c767117 # load x3 with value 0x8547b4109c767117
sw x3, 0(x2) # store 0x8547b4109c767117 in memory
flw f20, 0(x2) # load 0x8547b4109c767117 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
fmadd.s f5, f26, f20, f30, dyn # perform operation
fmadd.s f5, f26, f20, f30, rdn # perform operation
fmadd.s f5, f26, f20, f30, rmm # perform operation
fmadd.s f5, f26, f20, f30, rne # perform operation
fmadd.s f5, f26, f20, f30, rtz # perform operation
fmadd.s f5, f26, f20, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f26, f20, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f26, f20, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80800000)
li x30, 0x1757eb5db2fc8600 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0x6416a462418f72eb # load x3 with value 0x6416a462418f72eb
sw x3, 0(x2) # store 0x6416a462418f72eb in memory
flw f22, 0(x2) # load 0x6416a462418f72eb from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
fmadd.s f30, f20, f22, f24, dyn # perform operation
fmadd.s f30, f20, f22, f24, rdn # perform operation
fmadd.s f30, f20, f22, f24, rmm # perform operation
fmadd.s f30, f20, f22, f24, rne # perform operation
fmadd.s f30, f20, f22, f24, rtz # perform operation
fmadd.s f30, f20, f22, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f22, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f22, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f7fffff)
li x26, 0x8489dff475a014d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0x80bc9f5ae87b8f87 # load x3 with value 0x80bc9f5ae87b8f87
sw x3, 0(x2) # store 0x80bc9f5ae87b8f87 in memory
flw f18, 0(x2) # load 0x80bc9f5ae87b8f87 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f26, f13, f18, f31, dyn # perform operation
fmadd.s f26, f13, f18, f31, rdn # perform operation
fmadd.s f26, f13, f18, f31, rmm # perform operation
fmadd.s f26, f13, f18, f31, rne # perform operation
fmadd.s f26, f13, f18, f31, rtz # perform operation
fmadd.s f26, f13, f18, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f18, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f18, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f18, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f18, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f18, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff7fffff)
li x4, 0x1cadd0e9b784493d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
li x3, 0xde2b22773a7662c # load x3 with value 0xde2b22773a7662c
sw x3, 0(x2) # store 0xde2b22773a7662c in memory
flw f23, 0(x2) # load 0xde2b22773a7662c from memory into f23
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
fmadd.s f4, f25, f23, f7, dyn # perform operation
fmadd.s f4, f25, f23, f7, rdn # perform operation
fmadd.s f4, f25, f23, f7, rmm # perform operation
fmadd.s f4, f25, f23, f7, rne # perform operation
fmadd.s f4, f25, f23, f7, rtz # perform operation
fmadd.s f4, f25, f23, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f25, f23, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f25, f23, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f25, f23, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f25, f23, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f25, f23, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffff)
li x2, 0xb540b9b0e4d8d126 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x3e378e52ec8ef93 # load x3 with value 0x3e378e52ec8ef93
sw x3, 0(x2) # store 0x3e378e52ec8ef93 in memory
flw f3, 0(x2) # load 0x3e378e52ec8ef93 from memory into f3
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f2, f27, f3, f15, dyn # perform operation
fmadd.s f2, f27, f3, f15, rdn # perform operation
fmadd.s f2, f27, f3, f15, rmm # perform operation
fmadd.s f2, f27, f3, f15, rne # perform operation
fmadd.s f2, f27, f3, f15, rtz # perform operation
fmadd.s f2, f27, f3, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f3, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f3, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x807fffff)
li x7, 0x92772824a07d7bd9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
li x3, 0xd2b3790990c5a58 # load x3 with value 0xd2b3790990c5a58
sw x3, 0(x2) # store 0xd2b3790990c5a58 in memory
flw f26, 0(x2) # load 0xd2b3790990c5a58 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmadd.s f7, f22, f26, f24, dyn # perform operation
fmadd.s f7, f22, f26, f24, rdn # perform operation
fmadd.s f7, f22, f26, f24, rmm # perform operation
fmadd.s f7, f22, f26, f24, rne # perform operation
fmadd.s f7, f22, f26, f24, rtz # perform operation
fmadd.s f7, f22, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f22, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x400000)
li x30, 0x0a609fac49ebecaa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0xeeadf6e7b1b7a5ef # load x3 with value 0xeeadf6e7b1b7a5ef
sw x3, 0(x2) # store 0xeeadf6e7b1b7a5ef in memory
flw f31, 0(x2) # load 0xeeadf6e7b1b7a5ef from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmadd.s f30, f11, f31, f9, dyn # perform operation
fmadd.s f30, f11, f31, f9, rdn # perform operation
fmadd.s f30, f11, f31, f9, rmm # perform operation
fmadd.s f30, f11, f31, f9, rne # perform operation
fmadd.s f30, f11, f31, f9, rtz # perform operation
fmadd.s f30, f11, f31, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f11, f31, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f11, f31, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80400000)
li x30, 0xebf8daddad581935 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0xeabc4e59309401d5 # load x3 with value 0xeabc4e59309401d5
sw x3, 0(x2) # store 0xeabc4e59309401d5 in memory
flw f18, 0(x2) # load 0xeabc4e59309401d5 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
fmadd.s f30, f27, f18, f4, dyn # perform operation
fmadd.s f30, f27, f18, f4, rdn # perform operation
fmadd.s f30, f27, f18, f4, rmm # perform operation
fmadd.s f30, f27, f18, f4, rne # perform operation
fmadd.s f30, f27, f18, f4, rtz # perform operation
fmadd.s f30, f27, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x1)
li x16, 0x7f96b5e2ca9685ce # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
li x3, 0x5d33a470315005a9 # load x3 with value 0x5d33a470315005a9
sw x3, 0(x2) # store 0x5d33a470315005a9 in memory
flw f17, 0(x2) # load 0x5d33a470315005a9 from memory into f17
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
fmadd.s f16, f24, f17, f8, dyn # perform operation
fmadd.s f16, f24, f17, f8, rdn # perform operation
fmadd.s f16, f24, f17, f8, rmm # perform operation
fmadd.s f16, f24, f17, f8, rne # perform operation
fmadd.s f16, f24, f17, f8, rtz # perform operation
fmadd.s f16, f24, f17, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f24, f17, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f24, f17, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f24, f17, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f24, f17, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f24, f17, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x80000001)
li x8, 0xe1294904c1d474be # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
li x3, 0xcde52a7b854edad5 # load x3 with value 0xcde52a7b854edad5
sw x3, 0(x2) # store 0xcde52a7b854edad5 in memory
flw f19, 0(x2) # load 0xcde52a7b854edad5 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f27, 0(x2) # load 0x80000001 from memory into f27
fmadd.s f8, f13, f19, f27, dyn # perform operation
fmadd.s f8, f13, f19, f27, rdn # perform operation
fmadd.s f8, f13, f19, f27, rmm # perform operation
fmadd.s f8, f13, f19, f27, rne # perform operation
fmadd.s f8, f13, f19, f27, rtz # perform operation
fmadd.s f8, f13, f19, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f13, f19, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f13, f19, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800000)
li x30, 0x642a8ab5a8372cc8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f17, 0(x2) # load 0x00800000 from memory into f17
li x3, 0x9da91c330f496612 # load x3 with value 0x9da91c330f496612
sw x3, 0(x2) # store 0x9da91c330f496612 in memory
flw f18, 0(x2) # load 0x9da91c330f496612 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f30, f17, f18, f26, dyn # perform operation
fmadd.s f30, f17, f18, f26, rdn # perform operation
fmadd.s f30, f17, f18, f26, rmm # perform operation
fmadd.s f30, f17, f18, f26, rne # perform operation
fmadd.s f30, f17, f18, f26, rtz # perform operation
fmadd.s f30, f17, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f17, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f17, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0xff800000)
li x23, 0x65085fa3bbfca5fa # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f20, 0(x2) # load 0x00800000 from memory into f20
li x3, 0xc1e9295c6a860067 # load x3 with value 0xc1e9295c6a860067
sw x3, 0(x2) # store 0xc1e9295c6a860067 in memory
flw f8, 0(x2) # load 0xc1e9295c6a860067 from memory into f8
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f23, f20, f8, f27, dyn # perform operation
fmadd.s f23, f20, f8, f27, rdn # perform operation
fmadd.s f23, f20, f8, f27, rmm # perform operation
fmadd.s f23, f20, f8, f27, rne # perform operation
fmadd.s f23, f20, f8, f27, rtz # perform operation
fmadd.s f23, f20, f8, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f20, f8, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f20, f8, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fc00000)
li x27, 0xbd094231169e6a09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f30, 0(x2) # load 0x00800000 from memory into f30
li x3, 0x4e55b5b2d2a2d105 # load x3 with value 0x4e55b5b2d2a2d105
sw x3, 0(x2) # store 0x4e55b5b2d2a2d105 in memory
flw f17, 0(x2) # load 0x4e55b5b2d2a2d105 from memory into f17
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f6, 0(x2) # load 0x7fc00000 from memory into f6
fmadd.s f27, f30, f17, f6, dyn # perform operation
fmadd.s f27, f30, f17, f6, rdn # perform operation
fmadd.s f27, f30, f17, f6, rmm # perform operation
fmadd.s f27, f30, f17, f6, rne # perform operation
fmadd.s f27, f30, f17, f6, rtz # perform operation
fmadd.s f27, f30, f17, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f17, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f17, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fffffff)
li x22, 0x3a89784b2a7193e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
li x3, 0x25ab31a95f676bde # load x3 with value 0x25ab31a95f676bde
sw x3, 0(x2) # store 0x25ab31a95f676bde in memory
flw f17, 0(x2) # load 0x25ab31a95f676bde from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
fmadd.s f22, f29, f17, f23, dyn # perform operation
fmadd.s f22, f29, f17, f23, rdn # perform operation
fmadd.s f22, f29, f17, f23, rmm # perform operation
fmadd.s f22, f29, f17, f23, rne # perform operation
fmadd.s f22, f29, f17, f23, rtz # perform operation
fmadd.s f22, f29, f17, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f29, f17, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f29, f17, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7f800001)
li x29, 0x0aec2c420e291aa3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
li x3, 0x70b17b65b687c5c8 # load x3 with value 0x70b17b65b687c5c8
sw x3, 0(x2) # store 0x70b17b65b687c5c8 in memory
flw f22, 0(x2) # load 0x70b17b65b687c5c8 from memory into f22
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f12, 0(x2) # load 0x7f800001 from memory into f12
fmadd.s f29, f27, f22, f12, dyn # perform operation
fmadd.s f29, f27, f22, f12, rdn # perform operation
fmadd.s f29, f27, f22, f12, rmm # perform operation
fmadd.s f29, f27, f22, f12, rne # perform operation
fmadd.s f29, f27, f22, f12, rtz # perform operation
fmadd.s f29, f27, f22, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f27, f22, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f27, f22, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7fbfffff)
li x15, 0xee6f0efa06225c2b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f21, 0(x2) # load 0x00800000 from memory into f21
li x3, 0x3c37d3ecae8807b7 # load x3 with value 0x3c37d3ecae8807b7
sw x3, 0(x2) # store 0x3c37d3ecae8807b7 in memory
flw f25, 0(x2) # load 0x3c37d3ecae8807b7 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f10, 0(x2) # load 0x7fbfffff from memory into f10
fmadd.s f15, f21, f25, f10, dyn # perform operation
fmadd.s f15, f21, f25, f10, rdn # perform operation
fmadd.s f15, f21, f25, f10, rmm # perform operation
fmadd.s f15, f21, f25, f10, rne # perform operation
fmadd.s f15, f21, f25, f10, rtz # perform operation
fmadd.s f15, f21, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x7ef8654f)
li x2, 0x12aba39b812e738d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
li x3, 0xd575bcd774dfef94 # load x3 with value 0xd575bcd774dfef94
sw x3, 0(x2) # store 0xd575bcd774dfef94 in memory
flw f6, 0(x2) # load 0xd575bcd774dfef94 from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
fmadd.s f2, f16, f6, f20, dyn # perform operation
fmadd.s f2, f16, f6, f20, rdn # perform operation
fmadd.s f2, f16, f6, f20, rmm # perform operation
fmadd.s f2, f16, f6, f20, rne # perform operation
fmadd.s f2, f16, f6, f20, rtz # perform operation
fmadd.s f2, f16, f6, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f16, f6, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f16, f6, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f16, f6, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f16, f6, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f16, f6, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x800000 fs3 = 0x813d9ab0)
li x21, 0xe011ee8b913b17f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f11, 0(x2) # load 0x00800000 from memory into f11
li x3, 0x3dbf57988364c75d # load x3 with value 0x3dbf57988364c75d
sw x3, 0(x2) # store 0x3dbf57988364c75d in memory
flw f10, 0(x2) # load 0x3dbf57988364c75d from memory into f10
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmadd.s f21, f11, f10, f12, dyn # perform operation
fmadd.s f21, f11, f10, f12, rdn # perform operation
fmadd.s f21, f11, f10, f12, rmm # perform operation
fmadd.s f21, f11, f10, f12, rne # perform operation
fmadd.s f21, f11, f10, f12, rtz # perform operation
fmadd.s f21, f11, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x0)
li x22, 0x373d4e2ed2dee6e7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
li x3, 0x94d1283fcaa561e1 # load x3 with value 0x94d1283fcaa561e1
sw x3, 0(x2) # store 0x94d1283fcaa561e1 in memory
flw f16, 0(x2) # load 0x94d1283fcaa561e1 from memory into f16
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmadd.s f22, f28, f16, f12, dyn # perform operation
fmadd.s f22, f28, f16, f12, rdn # perform operation
fmadd.s f22, f28, f16, f12, rmm # perform operation
fmadd.s f22, f28, f16, f12, rne # perform operation
fmadd.s f22, f28, f16, f12, rtz # perform operation
fmadd.s f22, f28, f16, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f28, f16, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f28, f16, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f28, f16, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f28, f16, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f28, f16, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000000)
li x30, 0xde601fd48c799e72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0xd3885ab4fc54b711 # load x3 with value 0xd3885ab4fc54b711
sw x3, 0(x2) # store 0xd3885ab4fc54b711 in memory
flw f17, 0(x2) # load 0xd3885ab4fc54b711 from memory into f17
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmadd.s f30, f27, f17, f2, dyn # perform operation
fmadd.s f30, f27, f17, f2, rdn # perform operation
fmadd.s f30, f27, f17, f2, rmm # perform operation
fmadd.s f30, f27, f17, f2, rne # perform operation
fmadd.s f30, f27, f17, f2, rtz # perform operation
fmadd.s f30, f27, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f27, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f27, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f27, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f27, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f27, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3f800000)
li x26, 0x145cde0eb93770d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f2, 0(x2) # load 0x80800000 from memory into f2
li x3, 0xfd4a0f436d665b19 # load x3 with value 0xfd4a0f436d665b19
sw x3, 0(x2) # store 0xfd4a0f436d665b19 in memory
flw f14, 0(x2) # load 0xfd4a0f436d665b19 from memory into f14
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmadd.s f26, f2, f14, f13, dyn # perform operation
fmadd.s f26, f2, f14, f13, rdn # perform operation
fmadd.s f26, f2, f14, f13, rmm # perform operation
fmadd.s f26, f2, f14, f13, rne # perform operation
fmadd.s f26, f2, f14, f13, rtz # perform operation
fmadd.s f26, f2, f14, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f2, f14, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f2, f14, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbf800000)
li x24, 0xc81a8d2132c20a99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0x3879b270fd5570ae # load x3 with value 0x3879b270fd5570ae
sw x3, 0(x2) # store 0x3879b270fd5570ae in memory
flw f13, 0(x2) # load 0x3879b270fd5570ae from memory into f13
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f7, 0(x2) # load 0xbf800000 from memory into f7
fmadd.s f24, f4, f13, f7, dyn # perform operation
fmadd.s f24, f4, f13, f7, rdn # perform operation
fmadd.s f24, f4, f13, f7, rmm # perform operation
fmadd.s f24, f4, f13, f7, rne # perform operation
fmadd.s f24, f4, f13, f7, rtz # perform operation
fmadd.s f24, f4, f13, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f4, f13, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f4, f13, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f4, f13, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f4, f13, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f4, f13, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x3fc00000)
li x22, 0xf959bc69ffd54217 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
li x3, 0x2c7e21ffe51a2c8 # load x3 with value 0x2c7e21ffe51a2c8
sw x3, 0(x2) # store 0x2c7e21ffe51a2c8 in memory
flw f28, 0(x2) # load 0x2c7e21ffe51a2c8 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f27, 0(x2) # load 0x3fc00000 from memory into f27
fmadd.s f22, f19, f28, f27, dyn # perform operation
fmadd.s f22, f19, f28, f27, rdn # perform operation
fmadd.s f22, f19, f28, f27, rmm # perform operation
fmadd.s f22, f19, f28, f27, rne # perform operation
fmadd.s f22, f19, f28, f27, rtz # perform operation
fmadd.s f22, f19, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xbfc00000)
li x21, 0x809436c9d9411944 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xb3d2ac3159657a2b # load x3 with value 0xb3d2ac3159657a2b
sw x3, 0(x2) # store 0xb3d2ac3159657a2b in memory
flw f31, 0(x2) # load 0xb3d2ac3159657a2b from memory into f31
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fmadd.s f21, f4, f31, f7, dyn # perform operation
fmadd.s f21, f4, f31, f7, rdn # perform operation
fmadd.s f21, f4, f31, f7, rmm # perform operation
fmadd.s f21, f4, f31, f7, rne # perform operation
fmadd.s f21, f4, f31, f7, rtz # perform operation
fmadd.s f21, f4, f31, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f4, f31, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f4, f31, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x40000000)
li x9, 0x9109211f929f4be2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xaf7dfef2fa5281c2 # load x3 with value 0xaf7dfef2fa5281c2
sw x3, 0(x2) # store 0xaf7dfef2fa5281c2 in memory
flw f23, 0(x2) # load 0xaf7dfef2fa5281c2 from memory into f23
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmadd.s f9, f15, f23, f1, dyn # perform operation
fmadd.s f9, f15, f23, f1, rdn # perform operation
fmadd.s f9, f15, f23, f1, rmm # perform operation
fmadd.s f9, f15, f23, f1, rne # perform operation
fmadd.s f9, f15, f23, f1, rtz # perform operation
fmadd.s f9, f15, f23, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f23, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f23, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xc0000000)
li x6, 0x8151ed88e5b20f9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0xc273c23ae55f709e # load x3 with value 0xc273c23ae55f709e
sw x3, 0(x2) # store 0xc273c23ae55f709e in memory
flw f14, 0(x2) # load 0xc273c23ae55f709e from memory into f14
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f6, f15, f14, f4, dyn # perform operation
fmadd.s f6, f15, f14, f4, rdn # perform operation
fmadd.s f6, f15, f14, f4, rmm # perform operation
fmadd.s f6, f15, f14, f4, rne # perform operation
fmadd.s f6, f15, f14, f4, rtz # perform operation
fmadd.s f6, f15, f14, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f15, f14, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f15, f14, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f15, f14, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f15, f14, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f15, f14, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x800000)
li x30, 0xcf3e1c00d22e591c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
li x3, 0xc6310798b88ef0ee # load x3 with value 0xc6310798b88ef0ee
sw x3, 0(x2) # store 0xc6310798b88ef0ee in memory
flw f10, 0(x2) # load 0xc6310798b88ef0ee from memory into f10
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f30, f26, f10, f12, dyn # perform operation
fmadd.s f30, f26, f10, f12, rdn # perform operation
fmadd.s f30, f26, f10, f12, rmm # perform operation
fmadd.s f30, f26, f10, f12, rne # perform operation
fmadd.s f30, f26, f10, f12, rtz # perform operation
fmadd.s f30, f26, f10, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f10, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f10, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80800000)
li x26, 0x1fdf02d782537f11 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f13, 0(x2) # load 0x80800000 from memory into f13
li x3, 0xa55a6ea6166dc338 # load x3 with value 0xa55a6ea6166dc338
sw x3, 0(x2) # store 0xa55a6ea6166dc338 in memory
flw f3, 0(x2) # load 0xa55a6ea6166dc338 from memory into f3
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f9, 0(x2) # load 0x80800000 from memory into f9
fmadd.s f26, f13, f3, f9, dyn # perform operation
fmadd.s f26, f13, f3, f9, rdn # perform operation
fmadd.s f26, f13, f3, f9, rmm # perform operation
fmadd.s f26, f13, f3, f9, rne # perform operation
fmadd.s f26, f13, f3, f9, rtz # perform operation
fmadd.s f26, f13, f3, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f13, f3, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f13, f3, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f7fffff)
li x10, 0x1f00dbfe4488fda6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x8b34157410f6d9be # load x3 with value 0x8b34157410f6d9be
sw x3, 0(x2) # store 0x8b34157410f6d9be in memory
flw f31, 0(x2) # load 0x8b34157410f6d9be from memory into f31
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
fmadd.s f10, f24, f31, f21, dyn # perform operation
fmadd.s f10, f24, f31, f21, rdn # perform operation
fmadd.s f10, f24, f31, f21, rmm # perform operation
fmadd.s f10, f24, f31, f21, rne # perform operation
fmadd.s f10, f24, f31, f21, rtz # perform operation
fmadd.s f10, f24, f31, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f24, f31, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f24, f31, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff7fffff)
li x1, 0x5592000e24cb001e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x8d48436de610bab2 # load x3 with value 0x8d48436de610bab2
sw x3, 0(x2) # store 0x8d48436de610bab2 in memory
flw f17, 0(x2) # load 0x8d48436de610bab2 from memory into f17
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
fmadd.s f1, f18, f17, f5, dyn # perform operation
fmadd.s f1, f18, f17, f5, rdn # perform operation
fmadd.s f1, f18, f17, f5, rmm # perform operation
fmadd.s f1, f18, f17, f5, rne # perform operation
fmadd.s f1, f18, f17, f5, rtz # perform operation
fmadd.s f1, f18, f17, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f18, f17, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f18, f17, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f18, f17, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f18, f17, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f18, f17, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffff)
li x7, 0x30430d7f86f7dfba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x37d93f00483ae6fb # load x3 with value 0x37d93f00483ae6fb
sw x3, 0(x2) # store 0x37d93f00483ae6fb in memory
flw f20, 0(x2) # load 0x37d93f00483ae6fb from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f11, 0(x2) # load 0x007fffff from memory into f11
fmadd.s f7, f1, f20, f11, dyn # perform operation
fmadd.s f7, f1, f20, f11, rdn # perform operation
fmadd.s f7, f1, f20, f11, rmm # perform operation
fmadd.s f7, f1, f20, f11, rne # perform operation
fmadd.s f7, f1, f20, f11, rtz # perform operation
fmadd.s f7, f1, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f20, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x807fffff)
li x25, 0x0941752e54db33ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
li x3, 0xcf44738a782ef00a # load x3 with value 0xcf44738a782ef00a
sw x3, 0(x2) # store 0xcf44738a782ef00a in memory
flw f10, 0(x2) # load 0xcf44738a782ef00a from memory into f10
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
fmadd.s f25, f29, f10, f28, dyn # perform operation
fmadd.s f25, f29, f10, f28, rdn # perform operation
fmadd.s f25, f29, f10, f28, rmm # perform operation
fmadd.s f25, f29, f10, f28, rne # perform operation
fmadd.s f25, f29, f10, f28, rtz # perform operation
fmadd.s f25, f29, f10, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f29, f10, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f29, f10, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x400000)
li x28, 0x9f13cefdf77e741e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f24, 0(x2) # load 0x80800000 from memory into f24
li x3, 0x11a5ffa3f61e09fd # load x3 with value 0x11a5ffa3f61e09fd
sw x3, 0(x2) # store 0x11a5ffa3f61e09fd in memory
flw f26, 0(x2) # load 0x11a5ffa3f61e09fd from memory into f26
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f28, f24, f26, f12, dyn # perform operation
fmadd.s f28, f24, f26, f12, rdn # perform operation
fmadd.s f28, f24, f26, f12, rmm # perform operation
fmadd.s f28, f24, f26, f12, rne # perform operation
fmadd.s f28, f24, f26, f12, rtz # perform operation
fmadd.s f28, f24, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f24, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f24, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80400000)
li x17, 0x8be955016ca4a87f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f16, 0(x2) # load 0x80800000 from memory into f16
li x3, 0xa9a6cc4aa500f47f # load x3 with value 0xa9a6cc4aa500f47f
sw x3, 0(x2) # store 0xa9a6cc4aa500f47f in memory
flw f12, 0(x2) # load 0xa9a6cc4aa500f47f from memory into f12
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
fmadd.s f17, f16, f12, f4, dyn # perform operation
fmadd.s f17, f16, f12, f4, rdn # perform operation
fmadd.s f17, f16, f12, f4, rmm # perform operation
fmadd.s f17, f16, f12, f4, rne # perform operation
fmadd.s f17, f16, f12, f4, rtz # perform operation
fmadd.s f17, f16, f12, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f12, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f12, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f12, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f12, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f12, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x1)
li x12, 0x1df68168ff256857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f17, 0(x2) # load 0x80800000 from memory into f17
li x3, 0xd18e022381d9c5e4 # load x3 with value 0xd18e022381d9c5e4
sw x3, 0(x2) # store 0xd18e022381d9c5e4 in memory
flw f21, 0(x2) # load 0xd18e022381d9c5e4 from memory into f21
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
fmadd.s f12, f17, f21, f9, dyn # perform operation
fmadd.s f12, f17, f21, f9, rdn # perform operation
fmadd.s f12, f17, f21, f9, rmm # perform operation
fmadd.s f12, f17, f21, f9, rne # perform operation
fmadd.s f12, f17, f21, f9, rtz # perform operation
fmadd.s f12, f17, f21, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f17, f21, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f17, f21, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x80000001)
li x5, 0x8bd1eaaf8740f46d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f27, 0(x2) # load 0x80800000 from memory into f27
li x3, 0x4978470d60ac70f0 # load x3 with value 0x4978470d60ac70f0
sw x3, 0(x2) # store 0x4978470d60ac70f0 in memory
flw f7, 0(x2) # load 0x4978470d60ac70f0 from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
fmadd.s f5, f27, f7, f31, dyn # perform operation
fmadd.s f5, f27, f7, f31, rdn # perform operation
fmadd.s f5, f27, f7, f31, rmm # perform operation
fmadd.s f5, f27, f7, f31, rne # perform operation
fmadd.s f5, f27, f7, f31, rtz # perform operation
fmadd.s f5, f27, f7, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f7, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f7, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800000)
li x5, 0x3b463e194f9d3912 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0x9bf5e5baf8b6da8e # load x3 with value 0x9bf5e5baf8b6da8e
sw x3, 0(x2) # store 0x9bf5e5baf8b6da8e in memory
flw f16, 0(x2) # load 0x9bf5e5baf8b6da8e from memory into f16
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
fmadd.s f5, f10, f16, f19, dyn # perform operation
fmadd.s f5, f10, f16, f19, rdn # perform operation
fmadd.s f5, f10, f16, f19, rmm # perform operation
fmadd.s f5, f10, f16, f19, rne # perform operation
fmadd.s f5, f10, f16, f19, rtz # perform operation
fmadd.s f5, f10, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0xff800000)
li x3, 0x18f498284d8b6785 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xb7a744543563c27e # load x3 with value 0xb7a744543563c27e
sw x3, 0(x2) # store 0xb7a744543563c27e in memory
flw f27, 0(x2) # load 0xb7a744543563c27e from memory into f27
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f3, f8, f27, f25, dyn # perform operation
fmadd.s f3, f8, f27, f25, rdn # perform operation
fmadd.s f3, f8, f27, f25, rmm # perform operation
fmadd.s f3, f8, f27, f25, rne # perform operation
fmadd.s f3, f8, f27, f25, rtz # perform operation
fmadd.s f3, f8, f27, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f8, f27, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f8, f27, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fc00000)
li x8, 0x63b4e7b0627de4d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
li x3, 0x2b292bcc9a4ac860 # load x3 with value 0x2b292bcc9a4ac860
sw x3, 0(x2) # store 0x2b292bcc9a4ac860 in memory
flw f29, 0(x2) # load 0x2b292bcc9a4ac860 from memory into f29
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
fmadd.s f8, f1, f29, f21, dyn # perform operation
fmadd.s f8, f1, f29, f21, rdn # perform operation
fmadd.s f8, f1, f29, f21, rmm # perform operation
fmadd.s f8, f1, f29, f21, rne # perform operation
fmadd.s f8, f1, f29, f21, rtz # perform operation
fmadd.s f8, f1, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f1, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f1, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f1, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f1, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f1, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fffffff)
li x21, 0xa63dda5e69b9ddd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
li x3, 0x25bf344a582359e # load x3 with value 0x25bf344a582359e
sw x3, 0(x2) # store 0x25bf344a582359e in memory
flw f15, 0(x2) # load 0x25bf344a582359e from memory into f15
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f21, f18, f15, f7, dyn # perform operation
fmadd.s f21, f18, f15, f7, rdn # perform operation
fmadd.s f21, f18, f15, f7, rmm # perform operation
fmadd.s f21, f18, f15, f7, rne # perform operation
fmadd.s f21, f18, f15, f7, rtz # perform operation
fmadd.s f21, f18, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f18, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f18, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7f800001)
li x5, 0xa2a8ea7a2c2a03cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f15, 0(x2) # load 0x80800000 from memory into f15
li x3, 0x5ede9192e3c349e6 # load x3 with value 0x5ede9192e3c349e6
sw x3, 0(x2) # store 0x5ede9192e3c349e6 in memory
flw f9, 0(x2) # load 0x5ede9192e3c349e6 from memory into f9
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f5, f15, f9, f24, dyn # perform operation
fmadd.s f5, f15, f9, f24, rdn # perform operation
fmadd.s f5, f15, f9, f24, rmm # perform operation
fmadd.s f5, f15, f9, f24, rne # perform operation
fmadd.s f5, f15, f9, f24, rtz # perform operation
fmadd.s f5, f15, f9, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f15, f9, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f15, f9, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7fbfffff)
li x29, 0x76107b6104dd3924 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
li x3, 0xbc3313fbe4ec33f2 # load x3 with value 0xbc3313fbe4ec33f2
sw x3, 0(x2) # store 0xbc3313fbe4ec33f2 in memory
flw f15, 0(x2) # load 0xbc3313fbe4ec33f2 from memory into f15
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f29, f8, f15, f1, dyn # perform operation
fmadd.s f29, f8, f15, f1, rdn # perform operation
fmadd.s f29, f8, f15, f1, rmm # perform operation
fmadd.s f29, f8, f15, f1, rne # perform operation
fmadd.s f29, f8, f15, f1, rtz # perform operation
fmadd.s f29, f8, f15, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f8, f15, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f8, f15, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f8, f15, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f8, f15, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f8, f15, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x7ef8654f)
li x8, 0xc766beddbd1e006d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f10, 0(x2) # load 0x80800000 from memory into f10
li x3, 0xccf6cded1525a6d6 # load x3 with value 0xccf6cded1525a6d6
sw x3, 0(x2) # store 0xccf6cded1525a6d6 in memory
flw f29, 0(x2) # load 0xccf6cded1525a6d6 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
fmadd.s f8, f10, f29, f6, dyn # perform operation
fmadd.s f8, f10, f29, f6, rdn # perform operation
fmadd.s f8, f10, f29, f6, rmm # perform operation
fmadd.s f8, f10, f29, f6, rne # perform operation
fmadd.s f8, f10, f29, f6, rtz # perform operation
fmadd.s f8, f10, f29, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f10, f29, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f10, f29, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f10, f29, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f10, f29, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f10, f29, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80800000 fs3 = 0x813d9ab0)
li x13, 0xc2db7b8cc8a0916e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f4, 0(x2) # load 0x80800000 from memory into f4
li x3, 0xdaf2d7ca1da183a7 # load x3 with value 0xdaf2d7ca1da183a7
sw x3, 0(x2) # store 0xdaf2d7ca1da183a7 in memory
flw f22, 0(x2) # load 0xdaf2d7ca1da183a7 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f29, 0(x2) # load 0x813d9ab0 from memory into f29
fmadd.s f13, f4, f22, f29, dyn # perform operation
fmadd.s f13, f4, f22, f29, rdn # perform operation
fmadd.s f13, f4, f22, f29, rmm # perform operation
fmadd.s f13, f4, f22, f29, rne # perform operation
fmadd.s f13, f4, f22, f29, rtz # perform operation
fmadd.s f13, f4, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f4, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f4, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x0)
li x23, 0xd10140fda1dbdb9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0x9481fd9c5d1ad615 # load x3 with value 0x9481fd9c5d1ad615
sw x3, 0(x2) # store 0x9481fd9c5d1ad615 in memory
flw f11, 0(x2) # load 0x9481fd9c5d1ad615 from memory into f11
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f23, f2, f11, f6, dyn # perform operation
fmadd.s f23, f2, f11, f6, rdn # perform operation
fmadd.s f23, f2, f11, f6, rmm # perform operation
fmadd.s f23, f2, f11, f6, rne # perform operation
fmadd.s f23, f2, f11, f6, rtz # perform operation
fmadd.s f23, f2, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f2, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f2, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000000)
li x28, 0xced78e3f76958dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f19, 0(x2) # load 0x7f7fffff from memory into f19
li x3, 0x560a50941771eb12 # load x3 with value 0x560a50941771eb12
sw x3, 0(x2) # store 0x560a50941771eb12 in memory
flw f24, 0(x2) # load 0x560a50941771eb12 from memory into f24
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmadd.s f28, f19, f24, f3, dyn # perform operation
fmadd.s f28, f19, f24, f3, rdn # perform operation
fmadd.s f28, f19, f24, f3, rmm # perform operation
fmadd.s f28, f19, f24, f3, rne # perform operation
fmadd.s f28, f19, f24, f3, rtz # perform operation
fmadd.s f28, f19, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f19, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f19, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3f800000)
li x26, 0x6b97137f567c3b67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x7801b75c6a95fbb6 # load x3 with value 0x7801b75c6a95fbb6
sw x3, 0(x2) # store 0x7801b75c6a95fbb6 in memory
flw f10, 0(x2) # load 0x7801b75c6a95fbb6 from memory into f10
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmadd.s f26, f6, f10, f8, dyn # perform operation
fmadd.s f26, f6, f10, f8, rdn # perform operation
fmadd.s f26, f6, f10, f8, rmm # perform operation
fmadd.s f26, f6, f10, f8, rne # perform operation
fmadd.s f26, f6, f10, f8, rtz # perform operation
fmadd.s f26, f6, f10, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f10, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f10, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbf800000)
li x14, 0x145347080be5216d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f9, 0(x2) # load 0x7f7fffff from memory into f9
li x3, 0x75971ae13a4d26e2 # load x3 with value 0x75971ae13a4d26e2
sw x3, 0(x2) # store 0x75971ae13a4d26e2 in memory
flw f24, 0(x2) # load 0x75971ae13a4d26e2 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fmadd.s f14, f9, f24, f21, dyn # perform operation
fmadd.s f14, f9, f24, f21, rdn # perform operation
fmadd.s f14, f9, f24, f21, rmm # perform operation
fmadd.s f14, f9, f24, f21, rne # perform operation
fmadd.s f14, f9, f24, f21, rtz # perform operation
fmadd.s f14, f9, f24, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f24, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f24, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x3fc00000)
li x24, 0x1ff40f947775de41 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f12, 0(x2) # load 0x7f7fffff from memory into f12
li x3, 0x8478140ac4d32461 # load x3 with value 0x8478140ac4d32461
sw x3, 0(x2) # store 0x8478140ac4d32461 in memory
flw f5, 0(x2) # load 0x8478140ac4d32461 from memory into f5
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f14, 0(x2) # load 0x3fc00000 from memory into f14
fmadd.s f24, f12, f5, f14, dyn # perform operation
fmadd.s f24, f12, f5, f14, rdn # perform operation
fmadd.s f24, f12, f5, f14, rmm # perform operation
fmadd.s f24, f12, f5, f14, rne # perform operation
fmadd.s f24, f12, f5, f14, rtz # perform operation
fmadd.s f24, f12, f5, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f12, f5, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f12, f5, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f12, f5, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f12, f5, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f12, f5, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xbfc00000)
li x28, 0xfd82879cf7a785ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xacaa30a42238bbc8 # load x3 with value 0xacaa30a42238bbc8
sw x3, 0(x2) # store 0xacaa30a42238bbc8 in memory
flw f8, 0(x2) # load 0xacaa30a42238bbc8 from memory into f8
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f7, 0(x2) # load 0xbfc00000 from memory into f7
fmadd.s f28, f2, f8, f7, dyn # perform operation
fmadd.s f28, f2, f8, f7, rdn # perform operation
fmadd.s f28, f2, f8, f7, rmm # perform operation
fmadd.s f28, f2, f8, f7, rne # perform operation
fmadd.s f28, f2, f8, f7, rtz # perform operation
fmadd.s f28, f2, f8, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f8, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f8, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x40000000)
li x23, 0x848bb60e25e84587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0xe5b7bbdfa25645ad # load x3 with value 0xe5b7bbdfa25645ad
sw x3, 0(x2) # store 0xe5b7bbdfa25645ad in memory
flw f10, 0(x2) # load 0xe5b7bbdfa25645ad from memory into f10
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f31, 0(x2) # load 0x40000000 from memory into f31
fmadd.s f23, f24, f10, f31, dyn # perform operation
fmadd.s f23, f24, f10, f31, rdn # perform operation
fmadd.s f23, f24, f10, f31, rmm # perform operation
fmadd.s f23, f24, f10, f31, rne # perform operation
fmadd.s f23, f24, f10, f31, rtz # perform operation
fmadd.s f23, f24, f10, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f10, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f10, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xc0000000)
li x21, 0x2854731b843f85bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0x1608ff1794d9d0af # load x3 with value 0x1608ff1794d9d0af
sw x3, 0(x2) # store 0x1608ff1794d9d0af in memory
flw f18, 0(x2) # load 0x1608ff1794d9d0af from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f22, 0(x2) # load 0xc0000000 from memory into f22
fmadd.s f21, f16, f18, f22, dyn # perform operation
fmadd.s f21, f16, f18, f22, rdn # perform operation
fmadd.s f21, f16, f18, f22, rmm # perform operation
fmadd.s f21, f16, f18, f22, rne # perform operation
fmadd.s f21, f16, f18, f22, rtz # perform operation
fmadd.s f21, f16, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f16, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f16, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f16, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f16, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f16, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x800000)
li x9, 0x0369aba5b6fa7ea9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x8817f1eb21a5193f # load x3 with value 0x8817f1eb21a5193f
sw x3, 0(x2) # store 0x8817f1eb21a5193f in memory
flw f24, 0(x2) # load 0x8817f1eb21a5193f from memory into f24
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f9, f21, f24, f12, dyn # perform operation
fmadd.s f9, f21, f24, f12, rdn # perform operation
fmadd.s f9, f21, f24, f12, rmm # perform operation
fmadd.s f9, f21, f24, f12, rne # perform operation
fmadd.s f9, f21, f24, f12, rtz # perform operation
fmadd.s f9, f21, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80800000)
li x6, 0x980e4f26726fcacc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f7, 0(x2) # load 0x7f7fffff from memory into f7
li x3, 0xfc18a2016cb5d2dc # load x3 with value 0xfc18a2016cb5d2dc
sw x3, 0(x2) # store 0xfc18a2016cb5d2dc in memory
flw f23, 0(x2) # load 0xfc18a2016cb5d2dc from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmadd.s f6, f7, f23, f26, dyn # perform operation
fmadd.s f6, f7, f23, f26, rdn # perform operation
fmadd.s f6, f7, f23, f26, rmm # perform operation
fmadd.s f6, f7, f23, f26, rne # perform operation
fmadd.s f6, f7, f23, f26, rtz # perform operation
fmadd.s f6, f7, f23, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f7, f23, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f7, f23, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f7fffff)
li x8, 0xa0e1624334367afc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f26, 0(x2) # load 0x7f7fffff from memory into f26
li x3, 0x39ce8b303f1f8b94 # load x3 with value 0x39ce8b303f1f8b94
sw x3, 0(x2) # store 0x39ce8b303f1f8b94 in memory
flw f2, 0(x2) # load 0x39ce8b303f1f8b94 from memory into f2
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
fmadd.s f8, f26, f2, f3, dyn # perform operation
fmadd.s f8, f26, f2, f3, rdn # perform operation
fmadd.s f8, f26, f2, f3, rmm # perform operation
fmadd.s f8, f26, f2, f3, rne # perform operation
fmadd.s f8, f26, f2, f3, rtz # perform operation
fmadd.s f8, f26, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f26, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f26, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff7fffff)
li x20, 0x995d1e9af29cf9e9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f21, 0(x2) # load 0x7f7fffff from memory into f21
li x3, 0x455482927db302a0 # load x3 with value 0x455482927db302a0
sw x3, 0(x2) # store 0x455482927db302a0 in memory
flw f14, 0(x2) # load 0x455482927db302a0 from memory into f14
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
fmadd.s f20, f21, f14, f11, dyn # perform operation
fmadd.s f20, f21, f14, f11, rdn # perform operation
fmadd.s f20, f21, f14, f11, rmm # perform operation
fmadd.s f20, f21, f14, f11, rne # perform operation
fmadd.s f20, f21, f14, f11, rtz # perform operation
fmadd.s f20, f21, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffff)
li x29, 0x8931612d5d806e28 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f1, 0(x2) # load 0x7f7fffff from memory into f1
li x3, 0x1f9431e5d6367e38 # load x3 with value 0x1f9431e5d6367e38
sw x3, 0(x2) # store 0x1f9431e5d6367e38 in memory
flw f31, 0(x2) # load 0x1f9431e5d6367e38 from memory into f31
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
fmadd.s f29, f1, f31, f20, dyn # perform operation
fmadd.s f29, f1, f31, f20, rdn # perform operation
fmadd.s f29, f1, f31, f20, rmm # perform operation
fmadd.s f29, f1, f31, f20, rne # perform operation
fmadd.s f29, f1, f31, f20, rtz # perform operation
fmadd.s f29, f1, f31, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f1, f31, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f1, f31, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x807fffff)
li x23, 0xa8f5d9b0c5d7db15 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x617ef14939c2e2ea # load x3 with value 0x617ef14939c2e2ea
sw x3, 0(x2) # store 0x617ef14939c2e2ea in memory
flw f30, 0(x2) # load 0x617ef14939c2e2ea from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
fmadd.s f23, f31, f30, f9, dyn # perform operation
fmadd.s f23, f31, f30, f9, rdn # perform operation
fmadd.s f23, f31, f30, f9, rmm # perform operation
fmadd.s f23, f31, f30, f9, rne # perform operation
fmadd.s f23, f31, f30, f9, rtz # perform operation
fmadd.s f23, f31, f30, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f31, f30, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f31, f30, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x400000)
li x26, 0x30df8be4ea665f06 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f10, 0(x2) # load 0x7f7fffff from memory into f10
li x3, 0x5479eb51187fee64 # load x3 with value 0x5479eb51187fee64
sw x3, 0(x2) # store 0x5479eb51187fee64 in memory
flw f30, 0(x2) # load 0x5479eb51187fee64 from memory into f30
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f12, 0(x2) # load 0x00400000 from memory into f12
fmadd.s f26, f10, f30, f12, dyn # perform operation
fmadd.s f26, f10, f30, f12, rdn # perform operation
fmadd.s f26, f10, f30, f12, rmm # perform operation
fmadd.s f26, f10, f30, f12, rne # perform operation
fmadd.s f26, f10, f30, f12, rtz # perform operation
fmadd.s f26, f10, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f10, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f10, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f10, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f10, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f10, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80400000)
li x8, 0x4405e55460f335d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f24, 0(x2) # load 0x7f7fffff from memory into f24
li x3, 0x22d28e7f61f4b9f7 # load x3 with value 0x22d28e7f61f4b9f7
sw x3, 0(x2) # store 0x22d28e7f61f4b9f7 in memory
flw f23, 0(x2) # load 0x22d28e7f61f4b9f7 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
fmadd.s f8, f24, f23, f18, dyn # perform operation
fmadd.s f8, f24, f23, f18, rdn # perform operation
fmadd.s f8, f24, f23, f18, rmm # perform operation
fmadd.s f8, f24, f23, f18, rne # perform operation
fmadd.s f8, f24, f23, f18, rtz # perform operation
fmadd.s f8, f24, f23, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f24, f23, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f24, f23, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x1)
li x27, 0x19f78f56de6d91ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
li x3, 0xa06221642790a971 # load x3 with value 0xa06221642790a971
sw x3, 0(x2) # store 0xa06221642790a971 in memory
flw f7, 0(x2) # load 0xa06221642790a971 from memory into f7
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f2, 0(x2) # load 0x00000001 from memory into f2
fmadd.s f27, f13, f7, f2, dyn # perform operation
fmadd.s f27, f13, f7, f2, rdn # perform operation
fmadd.s f27, f13, f7, f2, rmm # perform operation
fmadd.s f27, f13, f7, f2, rne # perform operation
fmadd.s f27, f13, f7, f2, rtz # perform operation
fmadd.s f27, f13, f7, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f13, f7, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f13, f7, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x80000001)
li x4, 0x4a117078a0357282 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
li x3, 0x7417e4ee1ce2cb36 # load x3 with value 0x7417e4ee1ce2cb36
sw x3, 0(x2) # store 0x7417e4ee1ce2cb36 in memory
flw f15, 0(x2) # load 0x7417e4ee1ce2cb36 from memory into f15
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f4, f31, f15, f16, dyn # perform operation
fmadd.s f4, f31, f15, f16, rdn # perform operation
fmadd.s f4, f31, f15, f16, rmm # perform operation
fmadd.s f4, f31, f15, f16, rne # perform operation
fmadd.s f4, f31, f15, f16, rtz # perform operation
fmadd.s f4, f31, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f31, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f31, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800000)
li x20, 0x442cd0da11842394 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0x69d30a5819fe91ae # load x3 with value 0x69d30a5819fe91ae
sw x3, 0(x2) # store 0x69d30a5819fe91ae in memory
flw f18, 0(x2) # load 0x69d30a5819fe91ae from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmadd.s f20, f30, f18, f13, dyn # perform operation
fmadd.s f20, f30, f18, f13, rdn # perform operation
fmadd.s f20, f30, f18, f13, rmm # perform operation
fmadd.s f20, f30, f18, f13, rne # perform operation
fmadd.s f20, f30, f18, f13, rtz # perform operation
fmadd.s f20, f30, f18, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f18, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f18, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0xff800000)
li x30, 0x388f20ca79e8cb25 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f20, 0(x2) # load 0x7f7fffff from memory into f20
li x3, 0x8dd6a643ef13746e # load x3 with value 0x8dd6a643ef13746e
sw x3, 0(x2) # store 0x8dd6a643ef13746e in memory
flw f15, 0(x2) # load 0x8dd6a643ef13746e from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f7, 0(x2) # load 0xff800000 from memory into f7
fmadd.s f30, f20, f15, f7, dyn # perform operation
fmadd.s f30, f20, f15, f7, rdn # perform operation
fmadd.s f30, f20, f15, f7, rmm # perform operation
fmadd.s f30, f20, f15, f7, rne # perform operation
fmadd.s f30, f20, f15, f7, rtz # perform operation
fmadd.s f30, f20, f15, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f20, f15, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f20, f15, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fc00000)
li x16, 0xa59e716363e56462 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f3, 0(x2) # load 0x7f7fffff from memory into f3
li x3, 0xbb964862c814d89 # load x3 with value 0xbb964862c814d89
sw x3, 0(x2) # store 0xbb964862c814d89 in memory
flw f8, 0(x2) # load 0xbb964862c814d89 from memory into f8
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
fmadd.s f16, f3, f8, f18, dyn # perform operation
fmadd.s f16, f3, f8, f18, rdn # perform operation
fmadd.s f16, f3, f8, f18, rmm # perform operation
fmadd.s f16, f3, f8, f18, rne # perform operation
fmadd.s f16, f3, f8, f18, rtz # perform operation
fmadd.s f16, f3, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f3, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f3, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fffffff)
li x28, 0x8d7081273dc10a22 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f2, 0(x2) # load 0x7f7fffff from memory into f2
li x3, 0xc273bf66a81e45c # load x3 with value 0xc273bf66a81e45c
sw x3, 0(x2) # store 0xc273bf66a81e45c in memory
flw f10, 0(x2) # load 0xc273bf66a81e45c from memory into f10
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f29, 0(x2) # load 0x7fffffff from memory into f29
fmadd.s f28, f2, f10, f29, dyn # perform operation
fmadd.s f28, f2, f10, f29, rdn # perform operation
fmadd.s f28, f2, f10, f29, rmm # perform operation
fmadd.s f28, f2, f10, f29, rne # perform operation
fmadd.s f28, f2, f10, f29, rtz # perform operation
fmadd.s f28, f2, f10, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f2, f10, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f2, f10, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7f800001)
li x20, 0x7765a4e66fd7b7f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
li x3, 0xaaae8a9f7d3f37ef # load x3 with value 0xaaae8a9f7d3f37ef
sw x3, 0(x2) # store 0xaaae8a9f7d3f37ef in memory
flw f31, 0(x2) # load 0xaaae8a9f7d3f37ef from memory into f31
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
fmadd.s f20, f16, f31, f14, dyn # perform operation
fmadd.s f20, f16, f31, f14, rdn # perform operation
fmadd.s f20, f16, f31, f14, rmm # perform operation
fmadd.s f20, f16, f31, f14, rne # perform operation
fmadd.s f20, f16, f31, f14, rtz # perform operation
fmadd.s f20, f16, f31, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f16, f31, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f16, f31, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7fbfffff)
li x31, 0xbabbfb45de68fdba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f6, 0(x2) # load 0x7f7fffff from memory into f6
li x3, 0x80baac51d3d9a7ec # load x3 with value 0x80baac51d3d9a7ec
sw x3, 0(x2) # store 0x80baac51d3d9a7ec in memory
flw f4, 0(x2) # load 0x80baac51d3d9a7ec from memory into f4
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f31, f6, f4, f25, dyn # perform operation
fmadd.s f31, f6, f4, f25, rdn # perform operation
fmadd.s f31, f6, f4, f25, rmm # perform operation
fmadd.s f31, f6, f4, f25, rne # perform operation
fmadd.s f31, f6, f4, f25, rtz # perform operation
fmadd.s f31, f6, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x7ef8654f)
li x14, 0x61de56ef29065eab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
li x3, 0x2574ab1cf5bebb60 # load x3 with value 0x2574ab1cf5bebb60
sw x3, 0(x2) # store 0x2574ab1cf5bebb60 in memory
flw f29, 0(x2) # load 0x2574ab1cf5bebb60 from memory into f29
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f14, f5, f29, f10, dyn # perform operation
fmadd.s f14, f5, f29, f10, rdn # perform operation
fmadd.s f14, f5, f29, f10, rmm # perform operation
fmadd.s f14, f5, f29, f10, rne # perform operation
fmadd.s f14, f5, f29, f10, rtz # perform operation
fmadd.s f14, f5, f29, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f29, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f29, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f7fffff fs3 = 0x813d9ab0)
li x28, 0xa140384d31c89bda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
li x3, 0xfbe543383a879316 # load x3 with value 0xfbe543383a879316
sw x3, 0(x2) # store 0xfbe543383a879316 in memory
flw f24, 0(x2) # load 0xfbe543383a879316 from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
fmadd.s f28, f30, f24, f23, dyn # perform operation
fmadd.s f28, f30, f24, f23, rdn # perform operation
fmadd.s f28, f30, f24, f23, rmm # perform operation
fmadd.s f28, f30, f24, f23, rne # perform operation
fmadd.s f28, f30, f24, f23, rtz # perform operation
fmadd.s f28, f30, f24, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f30, f24, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f30, f24, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x0)
li x10, 0x37211f4dac809397 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f12, 0(x2) # load 0xff7fffff from memory into f12
li x3, 0x508f6bb6d4217120 # load x3 with value 0x508f6bb6d4217120
sw x3, 0(x2) # store 0x508f6bb6d4217120 in memory
flw f17, 0(x2) # load 0x508f6bb6d4217120 from memory into f17
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f14, 0(x2) # load 0x00000000 from memory into f14
fmadd.s f10, f12, f17, f14, dyn # perform operation
fmadd.s f10, f12, f17, f14, rdn # perform operation
fmadd.s f10, f12, f17, f14, rmm # perform operation
fmadd.s f10, f12, f17, f14, rne # perform operation
fmadd.s f10, f12, f17, f14, rtz # perform operation
fmadd.s f10, f12, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f12, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f12, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000000)
li x25, 0xb4858e78108f2b40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f3, 0(x2) # load 0xff7fffff from memory into f3
li x3, 0xfe316a82cfc28086 # load x3 with value 0xfe316a82cfc28086
sw x3, 0(x2) # store 0xfe316a82cfc28086 in memory
flw f28, 0(x2) # load 0xfe316a82cfc28086 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f2, 0(x2) # load 0x80000000 from memory into f2
fmadd.s f25, f3, f28, f2, dyn # perform operation
fmadd.s f25, f3, f28, f2, rdn # perform operation
fmadd.s f25, f3, f28, f2, rmm # perform operation
fmadd.s f25, f3, f28, f2, rne # perform operation
fmadd.s f25, f3, f28, f2, rtz # perform operation
fmadd.s f25, f3, f28, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f28, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f28, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3f800000)
li x18, 0x38925dfc691d6362 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0xc771c340d6c4e3c8 # load x3 with value 0xc771c340d6c4e3c8
sw x3, 0(x2) # store 0xc771c340d6c4e3c8 in memory
flw f21, 0(x2) # load 0xc771c340d6c4e3c8 from memory into f21
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f1, 0(x2) # load 0x3f800000 from memory into f1
fmadd.s f18, f20, f21, f1, dyn # perform operation
fmadd.s f18, f20, f21, f1, rdn # perform operation
fmadd.s f18, f20, f21, f1, rmm # perform operation
fmadd.s f18, f20, f21, f1, rne # perform operation
fmadd.s f18, f20, f21, f1, rtz # perform operation
fmadd.s f18, f20, f21, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f20, f21, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f20, f21, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbf800000)
li x25, 0x5b1d1505665e0210 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x53ae060b40e8c360 # load x3 with value 0x53ae060b40e8c360
sw x3, 0(x2) # store 0x53ae060b40e8c360 in memory
flw f3, 0(x2) # load 0x53ae060b40e8c360 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f12, 0(x2) # load 0xbf800000 from memory into f12
fmadd.s f25, f10, f3, f12, dyn # perform operation
fmadd.s f25, f10, f3, f12, rdn # perform operation
fmadd.s f25, f10, f3, f12, rmm # perform operation
fmadd.s f25, f10, f3, f12, rne # perform operation
fmadd.s f25, f10, f3, f12, rtz # perform operation
fmadd.s f25, f10, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x3fc00000)
li x7, 0xdd4dc6017ad89998 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x61b87a85e000a81f # load x3 with value 0x61b87a85e000a81f
sw x3, 0(x2) # store 0x61b87a85e000a81f in memory
flw f9, 0(x2) # load 0x61b87a85e000a81f from memory into f9
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmadd.s f7, f29, f9, f11, dyn # perform operation
fmadd.s f7, f29, f9, f11, rdn # perform operation
fmadd.s f7, f29, f9, f11, rmm # perform operation
fmadd.s f7, f29, f9, f11, rne # perform operation
fmadd.s f7, f29, f9, f11, rtz # perform operation
fmadd.s f7, f29, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f29, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f29, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xbfc00000)
li x9, 0x073be0312fc00191 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
li x3, 0x4a82779dd023be29 # load x3 with value 0x4a82779dd023be29
sw x3, 0(x2) # store 0x4a82779dd023be29 in memory
flw f16, 0(x2) # load 0x4a82779dd023be29 from memory into f16
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f2, 0(x2) # load 0xbfc00000 from memory into f2
fmadd.s f9, f4, f16, f2, dyn # perform operation
fmadd.s f9, f4, f16, f2, rdn # perform operation
fmadd.s f9, f4, f16, f2, rmm # perform operation
fmadd.s f9, f4, f16, f2, rne # perform operation
fmadd.s f9, f4, f16, f2, rtz # perform operation
fmadd.s f9, f4, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f4, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f4, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f4, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f4, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f4, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x40000000)
li x20, 0x9f19564ee49e9399 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0xa992d72eb2a0bf57 # load x3 with value 0xa992d72eb2a0bf57
sw x3, 0(x2) # store 0xa992d72eb2a0bf57 in memory
flw f27, 0(x2) # load 0xa992d72eb2a0bf57 from memory into f27
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f20, f18, f27, f9, dyn # perform operation
fmadd.s f20, f18, f27, f9, rdn # perform operation
fmadd.s f20, f18, f27, f9, rmm # perform operation
fmadd.s f20, f18, f27, f9, rne # perform operation
fmadd.s f20, f18, f27, f9, rtz # perform operation
fmadd.s f20, f18, f27, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f27, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f27, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xc0000000)
li x7, 0x825479fcd03bebc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f5, 0(x2) # load 0xff7fffff from memory into f5
li x3, 0x25438e8607d7ecf6 # load x3 with value 0x25438e8607d7ecf6
sw x3, 0(x2) # store 0x25438e8607d7ecf6 in memory
flw f28, 0(x2) # load 0x25438e8607d7ecf6 from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f4, 0(x2) # load 0xc0000000 from memory into f4
fmadd.s f7, f5, f28, f4, dyn # perform operation
fmadd.s f7, f5, f28, f4, rdn # perform operation
fmadd.s f7, f5, f28, f4, rmm # perform operation
fmadd.s f7, f5, f28, f4, rne # perform operation
fmadd.s f7, f5, f28, f4, rtz # perform operation
fmadd.s f7, f5, f28, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f28, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f28, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f28, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f28, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f28, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x800000)
li x23, 0x8bb388c3171c6405 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x46c68c95e62c4dd8 # load x3 with value 0x46c68c95e62c4dd8
sw x3, 0(x2) # store 0x46c68c95e62c4dd8 in memory
flw f18, 0(x2) # load 0x46c68c95e62c4dd8 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmadd.s f23, f26, f18, f27, dyn # perform operation
fmadd.s f23, f26, f18, f27, rdn # perform operation
fmadd.s f23, f26, f18, f27, rmm # perform operation
fmadd.s f23, f26, f18, f27, rne # perform operation
fmadd.s f23, f26, f18, f27, rtz # perform operation
fmadd.s f23, f26, f18, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f18, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f18, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80800000)
li x13, 0x25111b4e29fb8188 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
li x3, 0x63f0c43a6ef696be # load x3 with value 0x63f0c43a6ef696be
sw x3, 0(x2) # store 0x63f0c43a6ef696be in memory
flw f8, 0(x2) # load 0x63f0c43a6ef696be from memory into f8
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f3, 0(x2) # load 0x80800000 from memory into f3
fmadd.s f13, f28, f8, f3, dyn # perform operation
fmadd.s f13, f28, f8, f3, rdn # perform operation
fmadd.s f13, f28, f8, f3, rmm # perform operation
fmadd.s f13, f28, f8, f3, rne # perform operation
fmadd.s f13, f28, f8, f3, rtz # perform operation
fmadd.s f13, f28, f8, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f28, f8, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f28, f8, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f7fffff)
li x14, 0x2dd999e9ed94214e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f17, 0(x2) # load 0xff7fffff from memory into f17
li x3, 0xce6b3fd82b5d63d2 # load x3 with value 0xce6b3fd82b5d63d2
sw x3, 0(x2) # store 0xce6b3fd82b5d63d2 in memory
flw f9, 0(x2) # load 0xce6b3fd82b5d63d2 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f27, 0(x2) # load 0x7f7fffff from memory into f27
fmadd.s f14, f17, f9, f27, dyn # perform operation
fmadd.s f14, f17, f9, f27, rdn # perform operation
fmadd.s f14, f17, f9, f27, rmm # perform operation
fmadd.s f14, f17, f9, f27, rne # perform operation
fmadd.s f14, f17, f9, f27, rtz # perform operation
fmadd.s f14, f17, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff7fffff)
li x8, 0x70ba79bc00e73143 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f31, 0(x2) # load 0xff7fffff from memory into f31
li x3, 0xa2cf10fe2a79b222 # load x3 with value 0xa2cf10fe2a79b222
sw x3, 0(x2) # store 0xa2cf10fe2a79b222 in memory
flw f13, 0(x2) # load 0xa2cf10fe2a79b222 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f28, 0(x2) # load 0xff7fffff from memory into f28
fmadd.s f8, f31, f13, f28, dyn # perform operation
fmadd.s f8, f31, f13, f28, rdn # perform operation
fmadd.s f8, f31, f13, f28, rmm # perform operation
fmadd.s f8, f31, f13, f28, rne # perform operation
fmadd.s f8, f31, f13, f28, rtz # perform operation
fmadd.s f8, f31, f13, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f31, f13, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f31, f13, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f31, f13, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f31, f13, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f31, f13, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffff)
li x8, 0x0df40a27174d52e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f2, 0(x2) # load 0xff7fffff from memory into f2
li x3, 0x20ab8c2e314a5872 # load x3 with value 0x20ab8c2e314a5872
sw x3, 0(x2) # store 0x20ab8c2e314a5872 in memory
flw f19, 0(x2) # load 0x20ab8c2e314a5872 from memory into f19
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f8, f2, f19, f15, dyn # perform operation
fmadd.s f8, f2, f19, f15, rdn # perform operation
fmadd.s f8, f2, f19, f15, rmm # perform operation
fmadd.s f8, f2, f19, f15, rne # perform operation
fmadd.s f8, f2, f19, f15, rtz # perform operation
fmadd.s f8, f2, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f2, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x807fffff)
li x4, 0xa928b4cecbca5c72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f26, 0(x2) # load 0xff7fffff from memory into f26
li x3, 0x8582c7372907b9f7 # load x3 with value 0x8582c7372907b9f7
sw x3, 0(x2) # store 0x8582c7372907b9f7 in memory
flw f21, 0(x2) # load 0x8582c7372907b9f7 from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f27, 0(x2) # load 0x807fffff from memory into f27
fmadd.s f4, f26, f21, f27, dyn # perform operation
fmadd.s f4, f26, f21, f27, rdn # perform operation
fmadd.s f4, f26, f21, f27, rmm # perform operation
fmadd.s f4, f26, f21, f27, rne # perform operation
fmadd.s f4, f26, f21, f27, rtz # perform operation
fmadd.s f4, f26, f21, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f26, f21, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f26, f21, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x400000)
li x21, 0x8275ccd3806c83e8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f7, 0(x2) # load 0xff7fffff from memory into f7
li x3, 0x7a204d04738214c6 # load x3 with value 0x7a204d04738214c6
sw x3, 0(x2) # store 0x7a204d04738214c6 in memory
flw f14, 0(x2) # load 0x7a204d04738214c6 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmadd.s f21, f7, f14, f2, dyn # perform operation
fmadd.s f21, f7, f14, f2, rdn # perform operation
fmadd.s f21, f7, f14, f2, rmm # perform operation
fmadd.s f21, f7, f14, f2, rne # perform operation
fmadd.s f21, f7, f14, f2, rtz # perform operation
fmadd.s f21, f7, f14, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f7, f14, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f7, f14, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80400000)
li x16, 0xc26fd7e372bdc660 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f11, 0(x2) # load 0xff7fffff from memory into f11
li x3, 0x586d09689cf20b7c # load x3 with value 0x586d09689cf20b7c
sw x3, 0(x2) # store 0x586d09689cf20b7c in memory
flw f5, 0(x2) # load 0x586d09689cf20b7c from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
fmadd.s f16, f11, f5, f23, dyn # perform operation
fmadd.s f16, f11, f5, f23, rdn # perform operation
fmadd.s f16, f11, f5, f23, rmm # perform operation
fmadd.s f16, f11, f5, f23, rne # perform operation
fmadd.s f16, f11, f5, f23, rtz # perform operation
fmadd.s f16, f11, f5, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f5, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f5, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x1)
li x15, 0x6db7c83181187f17 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0x8520010c126f1714 # load x3 with value 0x8520010c126f1714
sw x3, 0(x2) # store 0x8520010c126f1714 in memory
flw f3, 0(x2) # load 0x8520010c126f1714 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fmadd.s f15, f21, f3, f28, dyn # perform operation
fmadd.s f15, f21, f3, f28, rdn # perform operation
fmadd.s f15, f21, f3, f28, rmm # perform operation
fmadd.s f15, f21, f3, f28, rne # perform operation
fmadd.s f15, f21, f3, f28, rtz # perform operation
fmadd.s f15, f21, f3, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f21, f3, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f21, f3, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f21, f3, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f21, f3, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f21, f3, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x80000001)
li x2, 0x736cc7a2b0e31b74 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
li x3, 0xef7845c6aa1d93a # load x3 with value 0xef7845c6aa1d93a
sw x3, 0(x2) # store 0xef7845c6aa1d93a in memory
flw f4, 0(x2) # load 0xef7845c6aa1d93a from memory into f4
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
fmadd.s f2, f16, f4, f12, dyn # perform operation
fmadd.s f2, f16, f4, f12, rdn # perform operation
fmadd.s f2, f16, f4, f12, rmm # perform operation
fmadd.s f2, f16, f4, f12, rne # perform operation
fmadd.s f2, f16, f4, f12, rtz # perform operation
fmadd.s f2, f16, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f16, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f16, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800000)
li x30, 0x8bdcb774c7e82ac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
li x3, 0x7a931b6c867080e4 # load x3 with value 0x7a931b6c867080e4
sw x3, 0(x2) # store 0x7a931b6c867080e4 in memory
flw f17, 0(x2) # load 0x7a931b6c867080e4 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
fmadd.s f30, f18, f17, f2, dyn # perform operation
fmadd.s f30, f18, f17, f2, rdn # perform operation
fmadd.s f30, f18, f17, f2, rmm # perform operation
fmadd.s f30, f18, f17, f2, rne # perform operation
fmadd.s f30, f18, f17, f2, rtz # perform operation
fmadd.s f30, f18, f17, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f18, f17, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f18, f17, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f18, f17, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f18, f17, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f18, f17, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0xff800000)
li x31, 0x59ad29389773867a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f13, 0(x2) # load 0xff7fffff from memory into f13
li x3, 0xb67484d3badc7323 # load x3 with value 0xb67484d3badc7323
sw x3, 0(x2) # store 0xb67484d3badc7323 in memory
flw f20, 0(x2) # load 0xb67484d3badc7323 from memory into f20
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f31, f13, f20, f24, dyn # perform operation
fmadd.s f31, f13, f20, f24, rdn # perform operation
fmadd.s f31, f13, f20, f24, rmm # perform operation
fmadd.s f31, f13, f20, f24, rne # perform operation
fmadd.s f31, f13, f20, f24, rtz # perform operation
fmadd.s f31, f13, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f13, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f13, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fc00000)
li x25, 0xa8f7d2579bf95511 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f10, 0(x2) # load 0xff7fffff from memory into f10
li x3, 0x23cd758953c15a5f # load x3 with value 0x23cd758953c15a5f
sw x3, 0(x2) # store 0x23cd758953c15a5f in memory
flw f2, 0(x2) # load 0x23cd758953c15a5f from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fmadd.s f25, f10, f2, f7, dyn # perform operation
fmadd.s f25, f10, f2, f7, rdn # perform operation
fmadd.s f25, f10, f2, f7, rmm # perform operation
fmadd.s f25, f10, f2, f7, rne # perform operation
fmadd.s f25, f10, f2, f7, rtz # perform operation
fmadd.s f25, f10, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f10, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f10, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fffffff)
li x8, 0x36ac1c9544598556 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
li x3, 0xe8059f631e8c478c # load x3 with value 0xe8059f631e8c478c
sw x3, 0(x2) # store 0xe8059f631e8c478c in memory
flw f12, 0(x2) # load 0xe8059f631e8c478c from memory into f12
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
fmadd.s f8, f21, f12, f5, dyn # perform operation
fmadd.s f8, f21, f12, f5, rdn # perform operation
fmadd.s f8, f21, f12, f5, rmm # perform operation
fmadd.s f8, f21, f12, f5, rne # perform operation
fmadd.s f8, f21, f12, f5, rtz # perform operation
fmadd.s f8, f21, f12, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f12, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f12, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7f800001)
li x29, 0x70407975fe7a7f23 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
li x3, 0x5c74b0770a78c737 # load x3 with value 0x5c74b0770a78c737
sw x3, 0(x2) # store 0x5c74b0770a78c737 in memory
flw f25, 0(x2) # load 0x5c74b0770a78c737 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmadd.s f29, f20, f25, f21, dyn # perform operation
fmadd.s f29, f20, f25, f21, rdn # perform operation
fmadd.s f29, f20, f25, f21, rmm # perform operation
fmadd.s f29, f20, f25, f21, rne # perform operation
fmadd.s f29, f20, f25, f21, rtz # perform operation
fmadd.s f29, f20, f25, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f20, f25, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f20, f25, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7fbfffff)
li x2, 0xc6a26dcf88783c0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f19, 0(x2) # load 0xff7fffff from memory into f19
li x3, 0x1f336e3165843830 # load x3 with value 0x1f336e3165843830
sw x3, 0(x2) # store 0x1f336e3165843830 in memory
flw f5, 0(x2) # load 0x1f336e3165843830 from memory into f5
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
fmadd.s f2, f19, f5, f16, dyn # perform operation
fmadd.s f2, f19, f5, f16, rdn # perform operation
fmadd.s f2, f19, f5, f16, rmm # perform operation
fmadd.s f2, f19, f5, f16, rne # perform operation
fmadd.s f2, f19, f5, f16, rtz # perform operation
fmadd.s f2, f19, f5, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f19, f5, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f19, f5, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x7ef8654f)
li x8, 0x72f6dc9ba6e03527 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
li x3, 0x8c50ac619845b7b # load x3 with value 0x8c50ac619845b7b
sw x3, 0(x2) # store 0x8c50ac619845b7b in memory
flw f7, 0(x2) # load 0x8c50ac619845b7b from memory into f7
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmadd.s f8, f29, f7, f14, dyn # perform operation
fmadd.s f8, f29, f7, f14, rdn # perform operation
fmadd.s f8, f29, f7, f14, rmm # perform operation
fmadd.s f8, f29, f7, f14, rne # perform operation
fmadd.s f8, f29, f7, f14, rtz # perform operation
fmadd.s f8, f29, f7, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f29, f7, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f29, f7, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff7fffff fs3 = 0x813d9ab0)
li x18, 0x4c4ff987f3d0b2d7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
li x3, 0x1d5c7ca60a669bae # load x3 with value 0x1d5c7ca60a669bae
sw x3, 0(x2) # store 0x1d5c7ca60a669bae in memory
flw f15, 0(x2) # load 0x1d5c7ca60a669bae from memory into f15
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
fmadd.s f18, f8, f15, f28, dyn # perform operation
fmadd.s f18, f8, f15, f28, rdn # perform operation
fmadd.s f18, f8, f15, f28, rmm # perform operation
fmadd.s f18, f8, f15, f28, rne # perform operation
fmadd.s f18, f8, f15, f28, rtz # perform operation
fmadd.s f18, f8, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f8, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f8, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x0)
li x10, 0xf21b1d8cf6796aba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0x45f7251c9069e440 # load x3 with value 0x45f7251c9069e440
sw x3, 0(x2) # store 0x45f7251c9069e440 in memory
flw f31, 0(x2) # load 0x45f7251c9069e440 from memory into f31
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f10, f2, f31, f30, dyn # perform operation
fmadd.s f10, f2, f31, f30, rdn # perform operation
fmadd.s f10, f2, f31, f30, rmm # perform operation
fmadd.s f10, f2, f31, f30, rne # perform operation
fmadd.s f10, f2, f31, f30, rtz # perform operation
fmadd.s f10, f2, f31, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f2, f31, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f2, f31, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f2, f31, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f2, f31, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f2, f31, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000000)
li x1, 0x78dbe9a66c2521bf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
li x3, 0x8c33066c61d78e97 # load x3 with value 0x8c33066c61d78e97
sw x3, 0(x2) # store 0x8c33066c61d78e97 in memory
flw f8, 0(x2) # load 0x8c33066c61d78e97 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f19, 0(x2) # load 0x80000000 from memory into f19
fmadd.s f1, f12, f8, f19, dyn # perform operation
fmadd.s f1, f12, f8, f19, rdn # perform operation
fmadd.s f1, f12, f8, f19, rmm # perform operation
fmadd.s f1, f12, f8, f19, rne # perform operation
fmadd.s f1, f12, f8, f19, rtz # perform operation
fmadd.s f1, f12, f8, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f12, f8, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f12, f8, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3f800000)
li x21, 0xe55bfbc66f43c9f2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f4, 0(x2) # load 0x007fffff from memory into f4
li x3, 0x140d4368e8d4a17f # load x3 with value 0x140d4368e8d4a17f
sw x3, 0(x2) # store 0x140d4368e8d4a17f in memory
flw f15, 0(x2) # load 0x140d4368e8d4a17f from memory into f15
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f13, 0(x2) # load 0x3f800000 from memory into f13
fmadd.s f21, f4, f15, f13, dyn # perform operation
fmadd.s f21, f4, f15, f13, rdn # perform operation
fmadd.s f21, f4, f15, f13, rmm # perform operation
fmadd.s f21, f4, f15, f13, rne # perform operation
fmadd.s f21, f4, f15, f13, rtz # perform operation
fmadd.s f21, f4, f15, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f4, f15, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f4, f15, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbf800000)
li x5, 0x3b105be096d1c559 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0xf711126568bbcfd4 # load x3 with value 0xf711126568bbcfd4
sw x3, 0(x2) # store 0xf711126568bbcfd4 in memory
flw f25, 0(x2) # load 0xf711126568bbcfd4 from memory into f25
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f10, 0(x2) # load 0xbf800000 from memory into f10
fmadd.s f5, f19, f25, f10, dyn # perform operation
fmadd.s f5, f19, f25, f10, rdn # perform operation
fmadd.s f5, f19, f25, f10, rmm # perform operation
fmadd.s f5, f19, f25, f10, rne # perform operation
fmadd.s f5, f19, f25, f10, rtz # perform operation
fmadd.s f5, f19, f25, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f25, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f25, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f25, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f25, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f25, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x3fc00000)
li x22, 0x17738626ff583d97 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
li x3, 0xd163f25808a65f9b # load x3 with value 0xd163f25808a65f9b
sw x3, 0(x2) # store 0xd163f25808a65f9b in memory
flw f30, 0(x2) # load 0xd163f25808a65f9b from memory into f30
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f18, 0(x2) # load 0x3fc00000 from memory into f18
fmadd.s f22, f5, f30, f18, dyn # perform operation
fmadd.s f22, f5, f30, f18, rdn # perform operation
fmadd.s f22, f5, f30, f18, rmm # perform operation
fmadd.s f22, f5, f30, f18, rne # perform operation
fmadd.s f22, f5, f30, f18, rtz # perform operation
fmadd.s f22, f5, f30, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f5, f30, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f5, f30, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xbfc00000)
li x10, 0xe2e8a1ccf6da1ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f22, 0(x2) # load 0x007fffff from memory into f22
li x3, 0x27ee4e9f14ef2048 # load x3 with value 0x27ee4e9f14ef2048
sw x3, 0(x2) # store 0x27ee4e9f14ef2048 in memory
flw f6, 0(x2) # load 0x27ee4e9f14ef2048 from memory into f6
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f4, 0(x2) # load 0xbfc00000 from memory into f4
fmadd.s f10, f22, f6, f4, dyn # perform operation
fmadd.s f10, f22, f6, f4, rdn # perform operation
fmadd.s f10, f22, f6, f4, rmm # perform operation
fmadd.s f10, f22, f6, f4, rne # perform operation
fmadd.s f10, f22, f6, f4, rtz # perform operation
fmadd.s f10, f22, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f22, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f22, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f22, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f22, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f22, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x40000000)
li x14, 0xad0e84391c258f89 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f20, 0(x2) # load 0x007fffff from memory into f20
li x3, 0xa01fa48ac2d7b3cc # load x3 with value 0xa01fa48ac2d7b3cc
sw x3, 0(x2) # store 0xa01fa48ac2d7b3cc in memory
flw f21, 0(x2) # load 0xa01fa48ac2d7b3cc from memory into f21
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f28, 0(x2) # load 0x40000000 from memory into f28
fmadd.s f14, f20, f21, f28, dyn # perform operation
fmadd.s f14, f20, f21, f28, rdn # perform operation
fmadd.s f14, f20, f21, f28, rmm # perform operation
fmadd.s f14, f20, f21, f28, rne # perform operation
fmadd.s f14, f20, f21, f28, rtz # perform operation
fmadd.s f14, f20, f21, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f20, f21, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f20, f21, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xc0000000)
li x2, 0x9c6108beb791bd70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f25, 0(x2) # load 0x007fffff from memory into f25
li x3, 0x8701added5f1ded9 # load x3 with value 0x8701added5f1ded9
sw x3, 0(x2) # store 0x8701added5f1ded9 in memory
flw f9, 0(x2) # load 0x8701added5f1ded9 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f21, 0(x2) # load 0xc0000000 from memory into f21
fmadd.s f2, f25, f9, f21, dyn # perform operation
fmadd.s f2, f25, f9, f21, rdn # perform operation
fmadd.s f2, f25, f9, f21, rmm # perform operation
fmadd.s f2, f25, f9, f21, rne # perform operation
fmadd.s f2, f25, f9, f21, rtz # perform operation
fmadd.s f2, f25, f9, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f25, f9, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f25, f9, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f25, f9, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f25, f9, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f25, f9, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x800000)
li x11, 0x0027ce3d34e309a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x38e5387fcf811164 # load x3 with value 0x38e5387fcf811164
sw x3, 0(x2) # store 0x38e5387fcf811164 in memory
flw f18, 0(x2) # load 0x38e5387fcf811164 from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f3, 0(x2) # load 0x00800000 from memory into f3
fmadd.s f11, f30, f18, f3, dyn # perform operation
fmadd.s f11, f30, f18, f3, rdn # perform operation
fmadd.s f11, f30, f18, f3, rmm # perform operation
fmadd.s f11, f30, f18, f3, rne # perform operation
fmadd.s f11, f30, f18, f3, rtz # perform operation
fmadd.s f11, f30, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f30, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f30, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80800000)
li x9, 0x786fee77e6326ddc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
li x3, 0x65838dfe36d14455 # load x3 with value 0x65838dfe36d14455
sw x3, 0(x2) # store 0x65838dfe36d14455 in memory
flw f12, 0(x2) # load 0x65838dfe36d14455 from memory into f12
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f19, 0(x2) # load 0x80800000 from memory into f19
fmadd.s f9, f21, f12, f19, dyn # perform operation
fmadd.s f9, f21, f12, f19, rdn # perform operation
fmadd.s f9, f21, f12, f19, rmm # perform operation
fmadd.s f9, f21, f12, f19, rne # perform operation
fmadd.s f9, f21, f12, f19, rtz # perform operation
fmadd.s f9, f21, f12, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f12, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f12, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f7fffff)
li x31, 0x8be886d1f224348d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
li x3, 0x37b89f44922182a9 # load x3 with value 0x37b89f44922182a9
sw x3, 0(x2) # store 0x37b89f44922182a9 in memory
flw f6, 0(x2) # load 0x37b89f44922182a9 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fmadd.s f31, f15, f6, f16, dyn # perform operation
fmadd.s f31, f15, f6, f16, rdn # perform operation
fmadd.s f31, f15, f6, f16, rmm # perform operation
fmadd.s f31, f15, f6, f16, rne # perform operation
fmadd.s f31, f15, f6, f16, rtz # perform operation
fmadd.s f31, f15, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f15, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f15, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff7fffff)
li x29, 0x1cc53d6b7fbb4a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
li x3, 0x47a6eba63d2cbb51 # load x3 with value 0x47a6eba63d2cbb51
sw x3, 0(x2) # store 0x47a6eba63d2cbb51 in memory
flw f24, 0(x2) # load 0x47a6eba63d2cbb51 from memory into f24
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f16, 0(x2) # load 0xff7fffff from memory into f16
fmadd.s f29, f19, f24, f16, dyn # perform operation
fmadd.s f29, f19, f24, f16, rdn # perform operation
fmadd.s f29, f19, f24, f16, rmm # perform operation
fmadd.s f29, f19, f24, f16, rne # perform operation
fmadd.s f29, f19, f24, f16, rtz # perform operation
fmadd.s f29, f19, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f19, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f19, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffff)
li x16, 0x34c959aa2cb88e01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
li x3, 0x7954bd8846b01205 # load x3 with value 0x7954bd8846b01205
sw x3, 0(x2) # store 0x7954bd8846b01205 in memory
flw f29, 0(x2) # load 0x7954bd8846b01205 from memory into f29
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
fmadd.s f16, f30, f29, f2, dyn # perform operation
fmadd.s f16, f30, f29, f2, rdn # perform operation
fmadd.s f16, f30, f29, f2, rmm # perform operation
fmadd.s f16, f30, f29, f2, rne # perform operation
fmadd.s f16, f30, f29, f2, rtz # perform operation
fmadd.s f16, f30, f29, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f30, f29, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f30, f29, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x807fffff)
li x11, 0xa016b5bcf296c72c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x6df3c7acb1f0f1a # load x3 with value 0x6df3c7acb1f0f1a
sw x3, 0(x2) # store 0x6df3c7acb1f0f1a in memory
flw f21, 0(x2) # load 0x6df3c7acb1f0f1a from memory into f21
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
fmadd.s f11, f16, f21, f14, dyn # perform operation
fmadd.s f11, f16, f21, f14, rdn # perform operation
fmadd.s f11, f16, f21, f14, rmm # perform operation
fmadd.s f11, f16, f21, f14, rne # perform operation
fmadd.s f11, f16, f21, f14, rtz # perform operation
fmadd.s f11, f16, f21, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f21, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f21, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f21, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f21, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f21, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x400000)
li x25, 0xac7d3a5b6990c224 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xdd4b24f1151e4386 # load x3 with value 0xdd4b24f1151e4386
sw x3, 0(x2) # store 0xdd4b24f1151e4386 in memory
flw f31, 0(x2) # load 0xdd4b24f1151e4386 from memory into f31
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f29, 0(x2) # load 0x00400000 from memory into f29
fmadd.s f25, f13, f31, f29, dyn # perform operation
fmadd.s f25, f13, f31, f29, rdn # perform operation
fmadd.s f25, f13, f31, f29, rmm # perform operation
fmadd.s f25, f13, f31, f29, rne # perform operation
fmadd.s f25, f13, f31, f29, rtz # perform operation
fmadd.s f25, f13, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80400000)
li x18, 0xf9a48c077d9d3d6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f27, 0(x2) # load 0x007fffff from memory into f27
li x3, 0x3c62f093c5675165 # load x3 with value 0x3c62f093c5675165
sw x3, 0(x2) # store 0x3c62f093c5675165 in memory
flw f23, 0(x2) # load 0x3c62f093c5675165 from memory into f23
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f9, 0(x2) # load 0x80400000 from memory into f9
fmadd.s f18, f27, f23, f9, dyn # perform operation
fmadd.s f18, f27, f23, f9, rdn # perform operation
fmadd.s f18, f27, f23, f9, rmm # perform operation
fmadd.s f18, f27, f23, f9, rne # perform operation
fmadd.s f18, f27, f23, f9, rtz # perform operation
fmadd.s f18, f27, f23, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f27, f23, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f27, f23, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f27, f23, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f27, f23, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f27, f23, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x1)
li x3, 0xb06f6aca63e4e0c1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f26, 0(x2) # load 0x007fffff from memory into f26
li x3, 0x18d383069960c242 # load x3 with value 0x18d383069960c242
sw x3, 0(x2) # store 0x18d383069960c242 in memory
flw f4, 0(x2) # load 0x18d383069960c242 from memory into f4
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f7, 0(x2) # load 0x00000001 from memory into f7
fmadd.s f3, f26, f4, f7, dyn # perform operation
fmadd.s f3, f26, f4, f7, rdn # perform operation
fmadd.s f3, f26, f4, f7, rmm # perform operation
fmadd.s f3, f26, f4, f7, rne # perform operation
fmadd.s f3, f26, f4, f7, rtz # perform operation
fmadd.s f3, f26, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f26, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f26, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f26, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f26, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f26, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x80000001)
li x21, 0xf13e3fc6116b2e10 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
li x3, 0x8a244fe15680abd6 # load x3 with value 0x8a244fe15680abd6
sw x3, 0(x2) # store 0x8a244fe15680abd6 in memory
flw f9, 0(x2) # load 0x8a244fe15680abd6 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f21, f23, f9, f16, dyn # perform operation
fmadd.s f21, f23, f9, f16, rdn # perform operation
fmadd.s f21, f23, f9, f16, rmm # perform operation
fmadd.s f21, f23, f9, f16, rne # perform operation
fmadd.s f21, f23, f9, f16, rtz # perform operation
fmadd.s f21, f23, f9, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f23, f9, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f23, f9, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800000)
li x9, 0x9fd9d8175fb53271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
li x3, 0xf1eab8e1e61dcbc2 # load x3 with value 0xf1eab8e1e61dcbc2
sw x3, 0(x2) # store 0xf1eab8e1e61dcbc2 in memory
flw f11, 0(x2) # load 0xf1eab8e1e61dcbc2 from memory into f11
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
fmadd.s f9, f3, f11, f18, dyn # perform operation
fmadd.s f9, f3, f11, f18, rdn # perform operation
fmadd.s f9, f3, f11, f18, rmm # perform operation
fmadd.s f9, f3, f11, f18, rne # perform operation
fmadd.s f9, f3, f11, f18, rtz # perform operation
fmadd.s f9, f3, f11, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f3, f11, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f3, f11, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0xff800000)
li x19, 0xdb1dfbc525e32990 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f18, 0(x2) # load 0x007fffff from memory into f18
li x3, 0xb7e0efcece9c1662 # load x3 with value 0xb7e0efcece9c1662
sw x3, 0(x2) # store 0xb7e0efcece9c1662 in memory
flw f26, 0(x2) # load 0xb7e0efcece9c1662 from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f24, 0(x2) # load 0xff800000 from memory into f24
fmadd.s f19, f18, f26, f24, dyn # perform operation
fmadd.s f19, f18, f26, f24, rdn # perform operation
fmadd.s f19, f18, f26, f24, rmm # perform operation
fmadd.s f19, f18, f26, f24, rne # perform operation
fmadd.s f19, f18, f26, f24, rtz # perform operation
fmadd.s f19, f18, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f18, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f18, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f18, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f18, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f18, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fc00000)
li x1, 0xe2bcabb14fa030ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f29, 0(x2) # load 0x007fffff from memory into f29
li x3, 0x9bf232ff2bc18184 # load x3 with value 0x9bf232ff2bc18184
sw x3, 0(x2) # store 0x9bf232ff2bc18184 in memory
flw f16, 0(x2) # load 0x9bf232ff2bc18184 from memory into f16
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmadd.s f1, f29, f16, f11, dyn # perform operation
fmadd.s f1, f29, f16, f11, rdn # perform operation
fmadd.s f1, f29, f16, f11, rmm # perform operation
fmadd.s f1, f29, f16, f11, rne # perform operation
fmadd.s f1, f29, f16, f11, rtz # perform operation
fmadd.s f1, f29, f16, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f29, f16, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f29, f16, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fffffff)
li x5, 0xf5d2d23a95bdc976 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x1843d3e4625711f3 # load x3 with value 0x1843d3e4625711f3
sw x3, 0(x2) # store 0x1843d3e4625711f3 in memory
flw f19, 0(x2) # load 0x1843d3e4625711f3 from memory into f19
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmadd.s f5, f10, f19, f14, dyn # perform operation
fmadd.s f5, f10, f19, f14, rdn # perform operation
fmadd.s f5, f10, f19, f14, rmm # perform operation
fmadd.s f5, f10, f19, f14, rne # perform operation
fmadd.s f5, f10, f19, f14, rtz # perform operation
fmadd.s f5, f10, f19, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f10, f19, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f10, f19, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f10, f19, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f10, f19, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f10, f19, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7f800001)
li x12, 0xba8a361754c1c857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f13, 0(x2) # load 0x007fffff from memory into f13
li x3, 0xc6ea8e0806e45851 # load x3 with value 0xc6ea8e0806e45851
sw x3, 0(x2) # store 0xc6ea8e0806e45851 in memory
flw f23, 0(x2) # load 0xc6ea8e0806e45851 from memory into f23
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
fmadd.s f12, f13, f23, f30, dyn # perform operation
fmadd.s f12, f13, f23, f30, rdn # perform operation
fmadd.s f12, f13, f23, f30, rmm # perform operation
fmadd.s f12, f13, f23, f30, rne # perform operation
fmadd.s f12, f13, f23, f30, rtz # perform operation
fmadd.s f12, f13, f23, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f13, f23, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f13, f23, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7fbfffff)
li x17, 0x0ca33b4c6adaf446 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f2, 0(x2) # load 0x007fffff from memory into f2
li x3, 0xcb5920bc4fa1cdc3 # load x3 with value 0xcb5920bc4fa1cdc3
sw x3, 0(x2) # store 0xcb5920bc4fa1cdc3 in memory
flw f9, 0(x2) # load 0xcb5920bc4fa1cdc3 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmadd.s f17, f2, f9, f29, dyn # perform operation
fmadd.s f17, f2, f9, f29, rdn # perform operation
fmadd.s f17, f2, f9, f29, rmm # perform operation
fmadd.s f17, f2, f9, f29, rne # perform operation
fmadd.s f17, f2, f9, f29, rtz # perform operation
fmadd.s f17, f2, f9, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f2, f9, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f2, f9, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x7ef8654f)
li x9, 0x4c93ac35484b5e5e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f10, 0(x2) # load 0x007fffff from memory into f10
li x3, 0x5c954c3589fa0a37 # load x3 with value 0x5c954c3589fa0a37
sw x3, 0(x2) # store 0x5c954c3589fa0a37 in memory
flw f28, 0(x2) # load 0x5c954c3589fa0a37 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
fmadd.s f9, f10, f28, f19, dyn # perform operation
fmadd.s f9, f10, f28, f19, rdn # perform operation
fmadd.s f9, f10, f28, f19, rmm # perform operation
fmadd.s f9, f10, f28, f19, rne # perform operation
fmadd.s f9, f10, f28, f19, rtz # perform operation
fmadd.s f9, f10, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f10, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f10, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffff fs3 = 0x813d9ab0)
li x19, 0x9c74a128ac809715 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f16, 0(x2) # load 0x007fffff from memory into f16
li x3, 0x5048866f5e7a3bef # load x3 with value 0x5048866f5e7a3bef
sw x3, 0(x2) # store 0x5048866f5e7a3bef in memory
flw f12, 0(x2) # load 0x5048866f5e7a3bef from memory into f12
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f19, f16, f12, f15, dyn # perform operation
fmadd.s f19, f16, f12, f15, rdn # perform operation
fmadd.s f19, f16, f12, f15, rmm # perform operation
fmadd.s f19, f16, f12, f15, rne # perform operation
fmadd.s f19, f16, f12, f15, rtz # perform operation
fmadd.s f19, f16, f12, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f12, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f12, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x0)
li x12, 0x885cb89529f53985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
li x3, 0x2b16d9aecc9113e9 # load x3 with value 0x2b16d9aecc9113e9
sw x3, 0(x2) # store 0x2b16d9aecc9113e9 in memory
flw f23, 0(x2) # load 0x2b16d9aecc9113e9 from memory into f23
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f12, f15, f23, f6, dyn # perform operation
fmadd.s f12, f15, f23, f6, rdn # perform operation
fmadd.s f12, f15, f23, f6, rmm # perform operation
fmadd.s f12, f15, f23, f6, rne # perform operation
fmadd.s f12, f15, f23, f6, rtz # perform operation
fmadd.s f12, f15, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f15, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f15, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000000)
li x5, 0xe1c9e5b79db7ce96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f28, 0(x2) # load 0x807fffff from memory into f28
li x3, 0xf5ec75ffad594acd # load x3 with value 0xf5ec75ffad594acd
sw x3, 0(x2) # store 0xf5ec75ffad594acd in memory
flw f13, 0(x2) # load 0xf5ec75ffad594acd from memory into f13
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f10, 0(x2) # load 0x80000000 from memory into f10
fmadd.s f5, f28, f13, f10, dyn # perform operation
fmadd.s f5, f28, f13, f10, rdn # perform operation
fmadd.s f5, f28, f13, f10, rmm # perform operation
fmadd.s f5, f28, f13, f10, rne # perform operation
fmadd.s f5, f28, f13, f10, rtz # perform operation
fmadd.s f5, f28, f13, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f28, f13, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f28, f13, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f28, f13, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f28, f13, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f28, f13, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3f800000)
li x7, 0x765c229260b12981 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f3, 0(x2) # load 0x807fffff from memory into f3
li x3, 0x7d77b6a7ade1f5b1 # load x3 with value 0x7d77b6a7ade1f5b1
sw x3, 0(x2) # store 0x7d77b6a7ade1f5b1 in memory
flw f8, 0(x2) # load 0x7d77b6a7ade1f5b1 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f22, 0(x2) # load 0x3f800000 from memory into f22
fmadd.s f7, f3, f8, f22, dyn # perform operation
fmadd.s f7, f3, f8, f22, rdn # perform operation
fmadd.s f7, f3, f8, f22, rmm # perform operation
fmadd.s f7, f3, f8, f22, rne # perform operation
fmadd.s f7, f3, f8, f22, rtz # perform operation
fmadd.s f7, f3, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f3, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f3, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbf800000)
li x13, 0x328256482a1b089a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
li x3, 0x3c31df509553da7d # load x3 with value 0x3c31df509553da7d
sw x3, 0(x2) # store 0x3c31df509553da7d in memory
flw f24, 0(x2) # load 0x3c31df509553da7d from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fmadd.s f13, f10, f24, f3, dyn # perform operation
fmadd.s f13, f10, f24, f3, rdn # perform operation
fmadd.s f13, f10, f24, f3, rmm # perform operation
fmadd.s f13, f10, f24, f3, rne # perform operation
fmadd.s f13, f10, f24, f3, rtz # perform operation
fmadd.s f13, f10, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f10, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f10, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x3fc00000)
li x8, 0x5cb0add8ee17bec3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f11, 0(x2) # load 0x807fffff from memory into f11
li x3, 0xe857a440e66df45 # load x3 with value 0xe857a440e66df45
sw x3, 0(x2) # store 0xe857a440e66df45 in memory
flw f29, 0(x2) # load 0xe857a440e66df45 from memory into f29
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f23, 0(x2) # load 0x3fc00000 from memory into f23
fmadd.s f8, f11, f29, f23, dyn # perform operation
fmadd.s f8, f11, f29, f23, rdn # perform operation
fmadd.s f8, f11, f29, f23, rmm # perform operation
fmadd.s f8, f11, f29, f23, rne # perform operation
fmadd.s f8, f11, f29, f23, rtz # perform operation
fmadd.s f8, f11, f29, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f11, f29, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f11, f29, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f11, f29, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f11, f29, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f11, f29, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xbfc00000)
li x12, 0x94c168acad9e2e72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xbebdb8d6922b704e # load x3 with value 0xbebdb8d6922b704e
sw x3, 0(x2) # store 0xbebdb8d6922b704e in memory
flw f25, 0(x2) # load 0xbebdb8d6922b704e from memory into f25
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f22, 0(x2) # load 0xbfc00000 from memory into f22
fmadd.s f12, f5, f25, f22, dyn # perform operation
fmadd.s f12, f5, f25, f22, rdn # perform operation
fmadd.s f12, f5, f25, f22, rmm # perform operation
fmadd.s f12, f5, f25, f22, rne # perform operation
fmadd.s f12, f5, f25, f22, rtz # perform operation
fmadd.s f12, f5, f25, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f25, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f25, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x40000000)
li x30, 0xd331227f9c62a234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x9a3d5f448d70d109 # load x3 with value 0x9a3d5f448d70d109
sw x3, 0(x2) # store 0x9a3d5f448d70d109 in memory
flw f14, 0(x2) # load 0x9a3d5f448d70d109 from memory into f14
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f11, 0(x2) # load 0x40000000 from memory into f11
fmadd.s f30, f22, f14, f11, dyn # perform operation
fmadd.s f30, f22, f14, f11, rdn # perform operation
fmadd.s f30, f22, f14, f11, rmm # perform operation
fmadd.s f30, f22, f14, f11, rne # perform operation
fmadd.s f30, f22, f14, f11, rtz # perform operation
fmadd.s f30, f22, f14, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f22, f14, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f22, f14, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f22, f14, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f22, f14, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f22, f14, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xc0000000)
li x23, 0x48ab7f630e0c8d4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f22, 0(x2) # load 0x807fffff from memory into f22
li x3, 0x3eed9e466481f8cd # load x3 with value 0x3eed9e466481f8cd
sw x3, 0(x2) # store 0x3eed9e466481f8cd in memory
flw f18, 0(x2) # load 0x3eed9e466481f8cd from memory into f18
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmadd.s f23, f22, f18, f5, dyn # perform operation
fmadd.s f23, f22, f18, f5, rdn # perform operation
fmadd.s f23, f22, f18, f5, rmm # perform operation
fmadd.s f23, f22, f18, f5, rne # perform operation
fmadd.s f23, f22, f18, f5, rtz # perform operation
fmadd.s f23, f22, f18, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f22, f18, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f22, f18, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f22, f18, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f22, f18, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f22, f18, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x800000)
li x2, 0x5e6d85ba95ed4bde # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f23, 0(x2) # load 0x807fffff from memory into f23
li x3, 0x68aee8186788428a # load x3 with value 0x68aee8186788428a
sw x3, 0(x2) # store 0x68aee8186788428a in memory
flw f11, 0(x2) # load 0x68aee8186788428a from memory into f11
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f27, 0(x2) # load 0x00800000 from memory into f27
fmadd.s f2, f23, f11, f27, dyn # perform operation
fmadd.s f2, f23, f11, f27, rdn # perform operation
fmadd.s f2, f23, f11, f27, rmm # perform operation
fmadd.s f2, f23, f11, f27, rne # perform operation
fmadd.s f2, f23, f11, f27, rtz # perform operation
fmadd.s f2, f23, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f23, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f23, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f23, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f23, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f23, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80800000)
li x15, 0x838849c17c22482d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xac2f37c4440c731a # load x3 with value 0xac2f37c4440c731a
sw x3, 0(x2) # store 0xac2f37c4440c731a in memory
flw f25, 0(x2) # load 0xac2f37c4440c731a from memory into f25
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f1, 0(x2) # load 0x80800000 from memory into f1
fmadd.s f15, f16, f25, f1, dyn # perform operation
fmadd.s f15, f16, f25, f1, rdn # perform operation
fmadd.s f15, f16, f25, f1, rmm # perform operation
fmadd.s f15, f16, f25, f1, rne # perform operation
fmadd.s f15, f16, f25, f1, rtz # perform operation
fmadd.s f15, f16, f25, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f16, f25, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f16, f25, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f7fffff)
li x1, 0xc63ab38ab694e640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x137d598c2cf99e30 # load x3 with value 0x137d598c2cf99e30
sw x3, 0(x2) # store 0x137d598c2cf99e30 in memory
flw f5, 0(x2) # load 0x137d598c2cf99e30 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f1, f2, f5, f31, dyn # perform operation
fmadd.s f1, f2, f5, f31, rdn # perform operation
fmadd.s f1, f2, f5, f31, rmm # perform operation
fmadd.s f1, f2, f5, f31, rne # perform operation
fmadd.s f1, f2, f5, f31, rtz # perform operation
fmadd.s f1, f2, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f2, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f2, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff7fffff)
li x31, 0xf3abc0e673403b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xcea250cdfeaef608 # load x3 with value 0xcea250cdfeaef608
sw x3, 0(x2) # store 0xcea250cdfeaef608 in memory
flw f13, 0(x2) # load 0xcea250cdfeaef608 from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmadd.s f31, f26, f13, f20, dyn # perform operation
fmadd.s f31, f26, f13, f20, rdn # perform operation
fmadd.s f31, f26, f13, f20, rmm # perform operation
fmadd.s f31, f26, f13, f20, rne # perform operation
fmadd.s f31, f26, f13, f20, rtz # perform operation
fmadd.s f31, f26, f13, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f26, f13, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f26, f13, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f26, f13, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f26, f13, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f26, f13, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffff)
li x24, 0x4deeae3735ed84c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f14, 0(x2) # load 0x807fffff from memory into f14
li x3, 0x803dec2845487251 # load x3 with value 0x803dec2845487251
sw x3, 0(x2) # store 0x803dec2845487251 in memory
flw f16, 0(x2) # load 0x803dec2845487251 from memory into f16
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmadd.s f24, f14, f16, f3, dyn # perform operation
fmadd.s f24, f14, f16, f3, rdn # perform operation
fmadd.s f24, f14, f16, f3, rmm # perform operation
fmadd.s f24, f14, f16, f3, rne # perform operation
fmadd.s f24, f14, f16, f3, rtz # perform operation
fmadd.s f24, f14, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f14, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f14, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x807fffff)
li x24, 0xf59029c16676fad9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f9, 0(x2) # load 0x807fffff from memory into f9
li x3, 0x6430b6c040d309c3 # load x3 with value 0x6430b6c040d309c3
sw x3, 0(x2) # store 0x6430b6c040d309c3 in memory
flw f26, 0(x2) # load 0x6430b6c040d309c3 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f13, 0(x2) # load 0x807fffff from memory into f13
fmadd.s f24, f9, f26, f13, dyn # perform operation
fmadd.s f24, f9, f26, f13, rdn # perform operation
fmadd.s f24, f9, f26, f13, rmm # perform operation
fmadd.s f24, f9, f26, f13, rne # perform operation
fmadd.s f24, f9, f26, f13, rtz # perform operation
fmadd.s f24, f9, f26, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f26, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f26, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x400000)
li x29, 0xe17f07aed067b494 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
li x3, 0xef0077cbe58185da # load x3 with value 0xef0077cbe58185da
sw x3, 0(x2) # store 0xef0077cbe58185da in memory
flw f4, 0(x2) # load 0xef0077cbe58185da from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
fmadd.s f29, f16, f4, f30, dyn # perform operation
fmadd.s f29, f16, f4, f30, rdn # perform operation
fmadd.s f29, f16, f4, f30, rmm # perform operation
fmadd.s f29, f16, f4, f30, rne # perform operation
fmadd.s f29, f16, f4, f30, rtz # perform operation
fmadd.s f29, f16, f4, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f16, f4, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f16, f4, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80400000)
li x21, 0xda75d1e66c8c2854 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f1, 0(x2) # load 0x807fffff from memory into f1
li x3, 0x6ddf4e8383f4edff # load x3 with value 0x6ddf4e8383f4edff
sw x3, 0(x2) # store 0x6ddf4e8383f4edff in memory
flw f14, 0(x2) # load 0x6ddf4e8383f4edff from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
fmadd.s f21, f1, f14, f26, dyn # perform operation
fmadd.s f21, f1, f14, f26, rdn # perform operation
fmadd.s f21, f1, f14, f26, rmm # perform operation
fmadd.s f21, f1, f14, f26, rne # perform operation
fmadd.s f21, f1, f14, f26, rtz # perform operation
fmadd.s f21, f1, f14, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f14, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f14, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x1)
li x9, 0xaeafbfccd4188d99 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f7, 0(x2) # load 0x807fffff from memory into f7
li x3, 0x25d533f91486d59 # load x3 with value 0x25d533f91486d59
sw x3, 0(x2) # store 0x25d533f91486d59 in memory
flw f1, 0(x2) # load 0x25d533f91486d59 from memory into f1
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmadd.s f9, f7, f1, f13, dyn # perform operation
fmadd.s f9, f7, f1, f13, rdn # perform operation
fmadd.s f9, f7, f1, f13, rmm # perform operation
fmadd.s f9, f7, f1, f13, rne # perform operation
fmadd.s f9, f7, f1, f13, rtz # perform operation
fmadd.s f9, f7, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f7, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f7, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f7, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f7, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f7, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x80000001)
li x24, 0x665b2bbde44223df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0xb0a018fc80a889e1 # load x3 with value 0xb0a018fc80a889e1
sw x3, 0(x2) # store 0xb0a018fc80a889e1 in memory
flw f19, 0(x2) # load 0xb0a018fc80a889e1 from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fmadd.s f24, f21, f19, f3, dyn # perform operation
fmadd.s f24, f21, f19, f3, rdn # perform operation
fmadd.s f24, f21, f19, f3, rmm # perform operation
fmadd.s f24, f21, f19, f3, rne # perform operation
fmadd.s f24, f21, f19, f3, rtz # perform operation
fmadd.s f24, f21, f19, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f21, f19, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f21, f19, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800000)
li x16, 0xc0517dcfb598ad47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0xe53e968fc78a2614 # load x3 with value 0xe53e968fc78a2614
sw x3, 0(x2) # store 0xe53e968fc78a2614 in memory
flw f17, 0(x2) # load 0xe53e968fc78a2614 from memory into f17
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f13, 0(x2) # load 0x7f800000 from memory into f13
fmadd.s f16, f12, f17, f13, dyn # perform operation
fmadd.s f16, f12, f17, f13, rdn # perform operation
fmadd.s f16, f12, f17, f13, rmm # perform operation
fmadd.s f16, f12, f17, f13, rne # perform operation
fmadd.s f16, f12, f17, f13, rtz # perform operation
fmadd.s f16, f12, f17, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f17, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f17, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0xff800000)
li x22, 0xdf7f9f53eb65276f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
li x3, 0x8f284e8cdc2f6499 # load x3 with value 0x8f284e8cdc2f6499
sw x3, 0(x2) # store 0x8f284e8cdc2f6499 in memory
flw f28, 0(x2) # load 0x8f284e8cdc2f6499 from memory into f28
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
fmadd.s f22, f24, f28, f13, dyn # perform operation
fmadd.s f22, f24, f28, f13, rdn # perform operation
fmadd.s f22, f24, f28, f13, rmm # perform operation
fmadd.s f22, f24, f28, f13, rne # perform operation
fmadd.s f22, f24, f28, f13, rtz # perform operation
fmadd.s f22, f24, f28, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f28, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f28, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fc00000)
li x10, 0xf26aa70029fd0e2a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
li x3, 0xbb11160f27eaabcd # load x3 with value 0xbb11160f27eaabcd
sw x3, 0(x2) # store 0xbb11160f27eaabcd in memory
flw f6, 0(x2) # load 0xbb11160f27eaabcd from memory into f6
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f10, f5, f6, f14, dyn # perform operation
fmadd.s f10, f5, f6, f14, rdn # perform operation
fmadd.s f10, f5, f6, f14, rmm # perform operation
fmadd.s f10, f5, f6, f14, rne # perform operation
fmadd.s f10, f5, f6, f14, rtz # perform operation
fmadd.s f10, f5, f6, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f5, f6, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f5, f6, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fffffff)
li x7, 0x76fbd94db5af91d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
li x3, 0xf46a1c5192249554 # load x3 with value 0xf46a1c5192249554
sw x3, 0(x2) # store 0xf46a1c5192249554 in memory
flw f1, 0(x2) # load 0xf46a1c5192249554 from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
fmadd.s f7, f21, f1, f18, dyn # perform operation
fmadd.s f7, f21, f1, f18, rdn # perform operation
fmadd.s f7, f21, f1, f18, rmm # perform operation
fmadd.s f7, f21, f1, f18, rne # perform operation
fmadd.s f7, f21, f1, f18, rtz # perform operation
fmadd.s f7, f21, f1, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f1, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f1, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7f800001)
li x18, 0xf7de4c637df89109 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f25, 0(x2) # load 0x807fffff from memory into f25
li x3, 0xa20681cc65d5b046 # load x3 with value 0xa20681cc65d5b046
sw x3, 0(x2) # store 0xa20681cc65d5b046 in memory
flw f20, 0(x2) # load 0xa20681cc65d5b046 from memory into f20
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
fmadd.s f18, f25, f20, f24, dyn # perform operation
fmadd.s f18, f25, f20, f24, rdn # perform operation
fmadd.s f18, f25, f20, f24, rmm # perform operation
fmadd.s f18, f25, f20, f24, rne # perform operation
fmadd.s f18, f25, f20, f24, rtz # perform operation
fmadd.s f18, f25, f20, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f25, f20, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f25, f20, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7fbfffff)
li x7, 0x1ae1ba3128747314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f26, 0(x2) # load 0x807fffff from memory into f26
li x3, 0xc509d99755cb85eb # load x3 with value 0xc509d99755cb85eb
sw x3, 0(x2) # store 0xc509d99755cb85eb in memory
flw f19, 0(x2) # load 0xc509d99755cb85eb from memory into f19
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f6, 0(x2) # load 0x7fbfffff from memory into f6
fmadd.s f7, f26, f19, f6, dyn # perform operation
fmadd.s f7, f26, f19, f6, rdn # perform operation
fmadd.s f7, f26, f19, f6, rmm # perform operation
fmadd.s f7, f26, f19, f6, rne # perform operation
fmadd.s f7, f26, f19, f6, rtz # perform operation
fmadd.s f7, f26, f19, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f26, f19, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f26, f19, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x7ef8654f)
li x3, 0x37ec502b1b08ceae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f12, 0(x2) # load 0x807fffff from memory into f12
li x3, 0x106637967b14b2c # load x3 with value 0x106637967b14b2c
sw x3, 0(x2) # store 0x106637967b14b2c in memory
flw f13, 0(x2) # load 0x106637967b14b2c from memory into f13
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f14, 0(x2) # load 0x7ef8654f from memory into f14
fmadd.s f3, f12, f13, f14, dyn # perform operation
fmadd.s f3, f12, f13, f14, rdn # perform operation
fmadd.s f3, f12, f13, f14, rmm # perform operation
fmadd.s f3, f12, f13, f14, rne # perform operation
fmadd.s f3, f12, f13, f14, rtz # perform operation
fmadd.s f3, f12, f13, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f13, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f13, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x807fffff fs3 = 0x813d9ab0)
li x7, 0xf21b2f12af945e03 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f2, 0(x2) # load 0x807fffff from memory into f2
li x3, 0x914e534bd714b481 # load x3 with value 0x914e534bd714b481
sw x3, 0(x2) # store 0x914e534bd714b481 in memory
flw f19, 0(x2) # load 0x914e534bd714b481 from memory into f19
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f7, f2, f19, f15, dyn # perform operation
fmadd.s f7, f2, f19, f15, rdn # perform operation
fmadd.s f7, f2, f19, f15, rmm # perform operation
fmadd.s f7, f2, f19, f15, rne # perform operation
fmadd.s f7, f2, f19, f15, rtz # perform operation
fmadd.s f7, f2, f19, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f2, f19, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f2, f19, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x0)
li x26, 0xc57eceeeae4a37df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f7, 0(x2) # load 0x00400000 from memory into f7
li x3, 0x380c4ab52d50a56f # load x3 with value 0x380c4ab52d50a56f
sw x3, 0(x2) # store 0x380c4ab52d50a56f in memory
flw f2, 0(x2) # load 0x380c4ab52d50a56f from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f26, f7, f2, f30, dyn # perform operation
fmadd.s f26, f7, f2, f30, rdn # perform operation
fmadd.s f26, f7, f2, f30, rmm # perform operation
fmadd.s f26, f7, f2, f30, rne # perform operation
fmadd.s f26, f7, f2, f30, rtz # perform operation
fmadd.s f26, f7, f2, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f7, f2, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f7, f2, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000000)
li x18, 0x93f38a59826de8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f11, 0(x2) # load 0x00400000 from memory into f11
li x3, 0xa365a47d3726276f # load x3 with value 0xa365a47d3726276f
sw x3, 0(x2) # store 0xa365a47d3726276f in memory
flw f6, 0(x2) # load 0xa365a47d3726276f from memory into f6
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fmadd.s f18, f11, f6, f26, dyn # perform operation
fmadd.s f18, f11, f6, f26, rdn # perform operation
fmadd.s f18, f11, f6, f26, rmm # perform operation
fmadd.s f18, f11, f6, f26, rne # perform operation
fmadd.s f18, f11, f6, f26, rtz # perform operation
fmadd.s f18, f11, f6, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f11, f6, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f11, f6, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3f800000)
li x19, 0x6695fc74b65b6dd2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0x795c1e844a1cc2e4 # load x3 with value 0x795c1e844a1cc2e4
sw x3, 0(x2) # store 0x795c1e844a1cc2e4 in memory
flw f20, 0(x2) # load 0x795c1e844a1cc2e4 from memory into f20
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f11, 0(x2) # load 0x3f800000 from memory into f11
fmadd.s f19, f9, f20, f11, dyn # perform operation
fmadd.s f19, f9, f20, f11, rdn # perform operation
fmadd.s f19, f9, f20, f11, rmm # perform operation
fmadd.s f19, f9, f20, f11, rne # perform operation
fmadd.s f19, f9, f20, f11, rtz # perform operation
fmadd.s f19, f9, f20, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f9, f20, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f9, f20, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f9, f20, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f9, f20, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f9, f20, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbf800000)
li x25, 0x5ea93f02e04d4526 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f3, 0(x2) # load 0x00400000 from memory into f3
li x3, 0x92b4057291dace23 # load x3 with value 0x92b4057291dace23
sw x3, 0(x2) # store 0x92b4057291dace23 in memory
flw f1, 0(x2) # load 0x92b4057291dace23 from memory into f1
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmadd.s f25, f3, f1, f16, dyn # perform operation
fmadd.s f25, f3, f1, f16, rdn # perform operation
fmadd.s f25, f3, f1, f16, rmm # perform operation
fmadd.s f25, f3, f1, f16, rne # perform operation
fmadd.s f25, f3, f1, f16, rtz # perform operation
fmadd.s f25, f3, f1, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f3, f1, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f3, f1, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x3fc00000)
li x25, 0x7a1046432f52e0d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
li x3, 0x82b63b37e9cd2e30 # load x3 with value 0x82b63b37e9cd2e30
sw x3, 0(x2) # store 0x82b63b37e9cd2e30 in memory
flw f16, 0(x2) # load 0x82b63b37e9cd2e30 from memory into f16
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f25, f15, f16, f3, dyn # perform operation
fmadd.s f25, f15, f16, f3, rdn # perform operation
fmadd.s f25, f15, f16, f3, rmm # perform operation
fmadd.s f25, f15, f16, f3, rne # perform operation
fmadd.s f25, f15, f16, f3, rtz # perform operation
fmadd.s f25, f15, f16, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f16, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f16, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f16, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f16, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f16, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xbfc00000)
li x14, 0xd0a9be4eba5a68d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xe51ee8f5577a1aa # load x3 with value 0xe51ee8f5577a1aa
sw x3, 0(x2) # store 0xe51ee8f5577a1aa in memory
flw f10, 0(x2) # load 0xe51ee8f5577a1aa from memory into f10
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmadd.s f14, f5, f10, f9, dyn # perform operation
fmadd.s f14, f5, f10, f9, rdn # perform operation
fmadd.s f14, f5, f10, f9, rmm # perform operation
fmadd.s f14, f5, f10, f9, rne # perform operation
fmadd.s f14, f5, f10, f9, rtz # perform operation
fmadd.s f14, f5, f10, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f10, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f10, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x40000000)
li x13, 0xd05ea3d7ce36f4f3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xa265ad1874303e8c # load x3 with value 0xa265ad1874303e8c
sw x3, 0(x2) # store 0xa265ad1874303e8c in memory
flw f26, 0(x2) # load 0xa265ad1874303e8c from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f1, 0(x2) # load 0x40000000 from memory into f1
fmadd.s f13, f16, f26, f1, dyn # perform operation
fmadd.s f13, f16, f26, f1, rdn # perform operation
fmadd.s f13, f16, f26, f1, rmm # perform operation
fmadd.s f13, f16, f26, f1, rne # perform operation
fmadd.s f13, f16, f26, f1, rtz # perform operation
fmadd.s f13, f16, f26, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f16, f26, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f16, f26, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xc0000000)
li x27, 0x8484ffc9d3bbbeab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f20, 0(x2) # load 0x00400000 from memory into f20
li x3, 0x3dd17c925692890e # load x3 with value 0x3dd17c925692890e
sw x3, 0(x2) # store 0x3dd17c925692890e in memory
flw f28, 0(x2) # load 0x3dd17c925692890e from memory into f28
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f1, 0(x2) # load 0xc0000000 from memory into f1
fmadd.s f27, f20, f28, f1, dyn # perform operation
fmadd.s f27, f20, f28, f1, rdn # perform operation
fmadd.s f27, f20, f28, f1, rmm # perform operation
fmadd.s f27, f20, f28, f1, rne # perform operation
fmadd.s f27, f20, f28, f1, rtz # perform operation
fmadd.s f27, f20, f28, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f28, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f28, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x800000)
li x6, 0x30ebe283ee15d030 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f30, 0(x2) # load 0x00400000 from memory into f30
li x3, 0x82aa3ba5265caa77 # load x3 with value 0x82aa3ba5265caa77
sw x3, 0(x2) # store 0x82aa3ba5265caa77 in memory
flw f22, 0(x2) # load 0x82aa3ba5265caa77 from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f2, 0(x2) # load 0x00800000 from memory into f2
fmadd.s f6, f30, f22, f2, dyn # perform operation
fmadd.s f6, f30, f22, f2, rdn # perform operation
fmadd.s f6, f30, f22, f2, rmm # perform operation
fmadd.s f6, f30, f22, f2, rne # perform operation
fmadd.s f6, f30, f22, f2, rtz # perform operation
fmadd.s f6, f30, f22, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f30, f22, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f30, f22, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f30, f22, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f30, f22, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f30, f22, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80800000)
li x14, 0x6fb27fe535526635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xe2cf19f24b21da58 # load x3 with value 0xe2cf19f24b21da58
sw x3, 0(x2) # store 0xe2cf19f24b21da58 in memory
flw f31, 0(x2) # load 0xe2cf19f24b21da58 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f29, 0(x2) # load 0x80800000 from memory into f29
fmadd.s f14, f5, f31, f29, dyn # perform operation
fmadd.s f14, f5, f31, f29, rdn # perform operation
fmadd.s f14, f5, f31, f29, rmm # perform operation
fmadd.s f14, f5, f31, f29, rne # perform operation
fmadd.s f14, f5, f31, f29, rtz # perform operation
fmadd.s f14, f5, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f7fffff)
li x23, 0x1c29986df422e512 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
li x3, 0xfc583623ac55198b # load x3 with value 0xfc583623ac55198b
sw x3, 0(x2) # store 0xfc583623ac55198b in memory
flw f13, 0(x2) # load 0xfc583623ac55198b from memory into f13
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f23, f24, f13, f30, dyn # perform operation
fmadd.s f23, f24, f13, f30, rdn # perform operation
fmadd.s f23, f24, f13, f30, rmm # perform operation
fmadd.s f23, f24, f13, f30, rne # perform operation
fmadd.s f23, f24, f13, f30, rtz # perform operation
fmadd.s f23, f24, f13, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f13, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f13, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff7fffff)
li x19, 0x93a4a84b15328d65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f27, 0(x2) # load 0x00400000 from memory into f27
li x3, 0x14e381feefffd047 # load x3 with value 0x14e381feefffd047
sw x3, 0(x2) # store 0x14e381feefffd047 in memory
flw f3, 0(x2) # load 0x14e381feefffd047 from memory into f3
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f4, 0(x2) # load 0xff7fffff from memory into f4
fmadd.s f19, f27, f3, f4, dyn # perform operation
fmadd.s f19, f27, f3, f4, rdn # perform operation
fmadd.s f19, f27, f3, f4, rmm # perform operation
fmadd.s f19, f27, f3, f4, rne # perform operation
fmadd.s f19, f27, f3, f4, rtz # perform operation
fmadd.s f19, f27, f3, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f27, f3, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f27, f3, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f27, f3, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f27, f3, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f27, f3, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffff)
li x27, 0xd715bf567f717988 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f14, 0(x2) # load 0x00400000 from memory into f14
li x3, 0xe862b254309a64e # load x3 with value 0xe862b254309a64e
sw x3, 0(x2) # store 0xe862b254309a64e in memory
flw f1, 0(x2) # load 0xe862b254309a64e from memory into f1
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f5, 0(x2) # load 0x007fffff from memory into f5
fmadd.s f27, f14, f1, f5, dyn # perform operation
fmadd.s f27, f14, f1, f5, rdn # perform operation
fmadd.s f27, f14, f1, f5, rmm # perform operation
fmadd.s f27, f14, f1, f5, rne # perform operation
fmadd.s f27, f14, f1, f5, rtz # perform operation
fmadd.s f27, f14, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f14, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f14, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x807fffff)
li x20, 0x53cab7b0ab78e33a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f16, 0(x2) # load 0x00400000 from memory into f16
li x3, 0xe4998d0e03ba5a9f # load x3 with value 0xe4998d0e03ba5a9f
sw x3, 0(x2) # store 0xe4998d0e03ba5a9f in memory
flw f26, 0(x2) # load 0xe4998d0e03ba5a9f from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmadd.s f20, f16, f26, f24, dyn # perform operation
fmadd.s f20, f16, f26, f24, rdn # perform operation
fmadd.s f20, f16, f26, f24, rmm # perform operation
fmadd.s f20, f16, f26, f24, rne # perform operation
fmadd.s f20, f16, f26, f24, rtz # perform operation
fmadd.s f20, f16, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f16, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f16, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x400000)
li x7, 0xa869ea5bff28e4ca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f10, 0(x2) # load 0x00400000 from memory into f10
li x3, 0xa1ea7d0993b22e8c # load x3 with value 0xa1ea7d0993b22e8c
sw x3, 0(x2) # store 0xa1ea7d0993b22e8c in memory
flw f8, 0(x2) # load 0xa1ea7d0993b22e8c from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f7, f10, f8, f15, dyn # perform operation
fmadd.s f7, f10, f8, f15, rdn # perform operation
fmadd.s f7, f10, f8, f15, rmm # perform operation
fmadd.s f7, f10, f8, f15, rne # perform operation
fmadd.s f7, f10, f8, f15, rtz # perform operation
fmadd.s f7, f10, f8, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f10, f8, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f10, f8, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80400000)
li x22, 0xe197824712fbe92e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f6, 0(x2) # load 0x00400000 from memory into f6
li x3, 0x2cc5d2b029d2452a # load x3 with value 0x2cc5d2b029d2452a
sw x3, 0(x2) # store 0x2cc5d2b029d2452a in memory
flw f15, 0(x2) # load 0x2cc5d2b029d2452a from memory into f15
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f22, f6, f15, f28, dyn # perform operation
fmadd.s f22, f6, f15, f28, rdn # perform operation
fmadd.s f22, f6, f15, f28, rmm # perform operation
fmadd.s f22, f6, f15, f28, rne # perform operation
fmadd.s f22, f6, f15, f28, rtz # perform operation
fmadd.s f22, f6, f15, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f15, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f15, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f15, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f15, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f15, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x1)
li x17, 0x1ed05b69484696a8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0xd842adb28ccd7a00 # load x3 with value 0xd842adb28ccd7a00
sw x3, 0(x2) # store 0xd842adb28ccd7a00 in memory
flw f12, 0(x2) # load 0xd842adb28ccd7a00 from memory into f12
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fmadd.s f17, f1, f12, f28, dyn # perform operation
fmadd.s f17, f1, f12, f28, rdn # perform operation
fmadd.s f17, f1, f12, f28, rmm # perform operation
fmadd.s f17, f1, f12, f28, rne # perform operation
fmadd.s f17, f1, f12, f28, rtz # perform operation
fmadd.s f17, f1, f12, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f1, f12, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f1, f12, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x80000001)
li x3, 0xfe322200092d9833 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0xea692d9c2c654a20 # load x3 with value 0xea692d9c2c654a20
sw x3, 0(x2) # store 0xea692d9c2c654a20 in memory
flw f9, 0(x2) # load 0xea692d9c2c654a20 from memory into f9
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f14, 0(x2) # load 0x80000001 from memory into f14
fmadd.s f3, f5, f9, f14, dyn # perform operation
fmadd.s f3, f5, f9, f14, rdn # perform operation
fmadd.s f3, f5, f9, f14, rmm # perform operation
fmadd.s f3, f5, f9, f14, rne # perform operation
fmadd.s f3, f5, f9, f14, rtz # perform operation
fmadd.s f3, f5, f9, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f5, f9, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f5, f9, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800000)
li x15, 0x23ef2d33048a567a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x4a0a2327e4eee648 # load x3 with value 0x4a0a2327e4eee648
sw x3, 0(x2) # store 0x4a0a2327e4eee648 in memory
flw f24, 0(x2) # load 0x4a0a2327e4eee648 from memory into f24
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f26, 0(x2) # load 0x7f800000 from memory into f26
fmadd.s f15, f25, f24, f26, dyn # perform operation
fmadd.s f15, f25, f24, f26, rdn # perform operation
fmadd.s f15, f25, f24, f26, rmm # perform operation
fmadd.s f15, f25, f24, f26, rne # perform operation
fmadd.s f15, f25, f24, f26, rtz # perform operation
fmadd.s f15, f25, f24, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f25, f24, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f25, f24, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0xff800000)
li x15, 0x7ad494193896582c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f1, 0(x2) # load 0x00400000 from memory into f1
li x3, 0x7fc815b3cc835660 # load x3 with value 0x7fc815b3cc835660
sw x3, 0(x2) # store 0x7fc815b3cc835660 in memory
flw f4, 0(x2) # load 0x7fc815b3cc835660 from memory into f4
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fmadd.s f15, f1, f4, f12, dyn # perform operation
fmadd.s f15, f1, f4, f12, rdn # perform operation
fmadd.s f15, f1, f4, f12, rmm # perform operation
fmadd.s f15, f1, f4, f12, rne # perform operation
fmadd.s f15, f1, f4, f12, rtz # perform operation
fmadd.s f15, f1, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fc00000)
li x31, 0xfd49053cb7f06e05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f5, 0(x2) # load 0x00400000 from memory into f5
li x3, 0x7dc271faf4e7c602 # load x3 with value 0x7dc271faf4e7c602
sw x3, 0(x2) # store 0x7dc271faf4e7c602 in memory
flw f2, 0(x2) # load 0x7dc271faf4e7c602 from memory into f2
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
fmadd.s f31, f5, f2, f7, dyn # perform operation
fmadd.s f31, f5, f2, f7, rdn # perform operation
fmadd.s f31, f5, f2, f7, rmm # perform operation
fmadd.s f31, f5, f2, f7, rne # perform operation
fmadd.s f31, f5, f2, f7, rtz # perform operation
fmadd.s f31, f5, f2, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f2, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f2, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fffffff)
li x9, 0x114a97a9085d618c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
li x3, 0x5d411955824ba7a2 # load x3 with value 0x5d411955824ba7a2
sw x3, 0(x2) # store 0x5d411955824ba7a2 in memory
flw f26, 0(x2) # load 0x5d411955824ba7a2 from memory into f26
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmadd.s f9, f25, f26, f2, dyn # perform operation
fmadd.s f9, f25, f26, f2, rdn # perform operation
fmadd.s f9, f25, f26, f2, rmm # perform operation
fmadd.s f9, f25, f26, f2, rne # perform operation
fmadd.s f9, f25, f26, f2, rtz # perform operation
fmadd.s f9, f25, f26, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f25, f26, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f25, f26, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7f800001)
li x1, 0x0fbfc47f3454f3e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
li x3, 0xc47d312c711f4037 # load x3 with value 0xc47d312c711f4037
sw x3, 0(x2) # store 0xc47d312c711f4037 in memory
flw f4, 0(x2) # load 0xc47d312c711f4037 from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f11, 0(x2) # load 0x7f800001 from memory into f11
fmadd.s f1, f9, f4, f11, dyn # perform operation
fmadd.s f1, f9, f4, f11, rdn # perform operation
fmadd.s f1, f9, f4, f11, rmm # perform operation
fmadd.s f1, f9, f4, f11, rne # perform operation
fmadd.s f1, f9, f4, f11, rtz # perform operation
fmadd.s f1, f9, f4, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f4, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f4, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f4, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f4, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f4, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7fbfffff)
li x6, 0x8fcd0a3fd42fdc13 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
li x3, 0x8e4523392fb36056 # load x3 with value 0x8e4523392fb36056
sw x3, 0(x2) # store 0x8e4523392fb36056 in memory
flw f25, 0(x2) # load 0x8e4523392fb36056 from memory into f25
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
fmadd.s f6, f8, f25, f12, dyn # perform operation
fmadd.s f6, f8, f25, f12, rdn # perform operation
fmadd.s f6, f8, f25, f12, rmm # perform operation
fmadd.s f6, f8, f25, f12, rne # perform operation
fmadd.s f6, f8, f25, f12, rtz # perform operation
fmadd.s f6, f8, f25, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f8, f25, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f8, f25, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x7ef8654f)
li x16, 0x654fe3a71cf53851 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f17, 0(x2) # load 0x00400000 from memory into f17
li x3, 0x17399cefd5016afd # load x3 with value 0x17399cefd5016afd
sw x3, 0(x2) # store 0x17399cefd5016afd in memory
flw f21, 0(x2) # load 0x17399cefd5016afd from memory into f21
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f16, f17, f21, f10, dyn # perform operation
fmadd.s f16, f17, f21, f10, rdn # perform operation
fmadd.s f16, f17, f21, f10, rmm # perform operation
fmadd.s f16, f17, f21, f10, rne # perform operation
fmadd.s f16, f17, f21, f10, rtz # perform operation
fmadd.s f16, f17, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x400000 fs3 = 0x813d9ab0)
li x3, 0x30dd010ab6a9a31b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
li x3, 0x2133aba47039de57 # load x3 with value 0x2133aba47039de57
sw x3, 0(x2) # store 0x2133aba47039de57 in memory
flw f18, 0(x2) # load 0x2133aba47039de57 from memory into f18
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f3, f21, f18, f20, dyn # perform operation
fmadd.s f3, f21, f18, f20, rdn # perform operation
fmadd.s f3, f21, f18, f20, rmm # perform operation
fmadd.s f3, f21, f18, f20, rne # perform operation
fmadd.s f3, f21, f18, f20, rtz # perform operation
fmadd.s f3, f21, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f21, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f21, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f21, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f21, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f21, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x0)
li x19, 0x0c24ae52a7a276db # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f16, 0(x2) # load 0x80400000 from memory into f16
li x3, 0xd52ac8f9f2759ce8 # load x3 with value 0xd52ac8f9f2759ce8
sw x3, 0(x2) # store 0xd52ac8f9f2759ce8 in memory
flw f5, 0(x2) # load 0xd52ac8f9f2759ce8 from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f31, 0(x2) # load 0x00000000 from memory into f31
fmadd.s f19, f16, f5, f31, dyn # perform operation
fmadd.s f19, f16, f5, f31, rdn # perform operation
fmadd.s f19, f16, f5, f31, rmm # perform operation
fmadd.s f19, f16, f5, f31, rne # perform operation
fmadd.s f19, f16, f5, f31, rtz # perform operation
fmadd.s f19, f16, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f16, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f16, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f16, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f16, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f16, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000000)
li x3, 0x5f329791ae056f72 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0x2e3227b9e60a5b86 # load x3 with value 0x2e3227b9e60a5b86
sw x3, 0(x2) # store 0x2e3227b9e60a5b86 in memory
flw f8, 0(x2) # load 0x2e3227b9e60a5b86 from memory into f8
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f12, 0(x2) # load 0x80000000 from memory into f12
fmadd.s f3, f13, f8, f12, dyn # perform operation
fmadd.s f3, f13, f8, f12, rdn # perform operation
fmadd.s f3, f13, f8, f12, rmm # perform operation
fmadd.s f3, f13, f8, f12, rne # perform operation
fmadd.s f3, f13, f8, f12, rtz # perform operation
fmadd.s f3, f13, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f13, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f13, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3f800000)
li x8, 0x090f0750a7846bdf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
li x3, 0x9347804e588e9f5d # load x3 with value 0x9347804e588e9f5d
sw x3, 0(x2) # store 0x9347804e588e9f5d in memory
flw f16, 0(x2) # load 0x9347804e588e9f5d from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f2, 0(x2) # load 0x3f800000 from memory into f2
fmadd.s f8, f27, f16, f2, dyn # perform operation
fmadd.s f8, f27, f16, f2, rdn # perform operation
fmadd.s f8, f27, f16, f2, rmm # perform operation
fmadd.s f8, f27, f16, f2, rne # perform operation
fmadd.s f8, f27, f16, f2, rtz # perform operation
fmadd.s f8, f27, f16, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f27, f16, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f27, f16, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f27, f16, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f27, f16, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f27, f16, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbf800000)
li x26, 0x66b6616f04f2a271 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
li x3, 0x351d0af8bff5ac26 # load x3 with value 0x351d0af8bff5ac26
sw x3, 0(x2) # store 0x351d0af8bff5ac26 in memory
flw f21, 0(x2) # load 0x351d0af8bff5ac26 from memory into f21
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f30, 0(x2) # load 0xbf800000 from memory into f30
fmadd.s f26, f11, f21, f30, dyn # perform operation
fmadd.s f26, f11, f21, f30, rdn # perform operation
fmadd.s f26, f11, f21, f30, rmm # perform operation
fmadd.s f26, f11, f21, f30, rne # perform operation
fmadd.s f26, f11, f21, f30, rtz # perform operation
fmadd.s f26, f11, f21, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f11, f21, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f11, f21, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x3fc00000)
li x31, 0x8b9917278a8419eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
li x3, 0xa5d5f44d563c8608 # load x3 with value 0xa5d5f44d563c8608
sw x3, 0(x2) # store 0xa5d5f44d563c8608 in memory
flw f21, 0(x2) # load 0xa5d5f44d563c8608 from memory into f21
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f19, 0(x2) # load 0x3fc00000 from memory into f19
fmadd.s f31, f6, f21, f19, dyn # perform operation
fmadd.s f31, f6, f21, f19, rdn # perform operation
fmadd.s f31, f6, f21, f19, rmm # perform operation
fmadd.s f31, f6, f21, f19, rne # perform operation
fmadd.s f31, f6, f21, f19, rtz # perform operation
fmadd.s f31, f6, f21, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f21, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f21, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xbfc00000)
li x24, 0x56dc04d5faa90e95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f30, 0(x2) # load 0x80400000 from memory into f30
li x3, 0x45da1c9415340d85 # load x3 with value 0x45da1c9415340d85
sw x3, 0(x2) # store 0x45da1c9415340d85 in memory
flw f23, 0(x2) # load 0x45da1c9415340d85 from memory into f23
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f24, f30, f23, f6, dyn # perform operation
fmadd.s f24, f30, f23, f6, rdn # perform operation
fmadd.s f24, f30, f23, f6, rmm # perform operation
fmadd.s f24, f30, f23, f6, rne # perform operation
fmadd.s f24, f30, f23, f6, rtz # perform operation
fmadd.s f24, f30, f23, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f30, f23, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f30, f23, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x40000000)
li x18, 0x75f9b718d6f81849 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xb6613fcd17c43ef6 # load x3 with value 0xb6613fcd17c43ef6
sw x3, 0(x2) # store 0xb6613fcd17c43ef6 in memory
flw f28, 0(x2) # load 0xb6613fcd17c43ef6 from memory into f28
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f9, 0(x2) # load 0x40000000 from memory into f9
fmadd.s f18, f17, f28, f9, dyn # perform operation
fmadd.s f18, f17, f28, f9, rdn # perform operation
fmadd.s f18, f17, f28, f9, rmm # perform operation
fmadd.s f18, f17, f28, f9, rne # perform operation
fmadd.s f18, f17, f28, f9, rtz # perform operation
fmadd.s f18, f17, f28, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f17, f28, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f17, f28, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f17, f28, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f17, f28, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f17, f28, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xc0000000)
li x1, 0x41edbe1ea28b70c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f10, 0(x2) # load 0x80400000 from memory into f10
li x3, 0xf4827d5ca97bce8 # load x3 with value 0xf4827d5ca97bce8
sw x3, 0(x2) # store 0xf4827d5ca97bce8 in memory
flw f11, 0(x2) # load 0xf4827d5ca97bce8 from memory into f11
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmadd.s f1, f10, f11, f6, dyn # perform operation
fmadd.s f1, f10, f11, f6, rdn # perform operation
fmadd.s f1, f10, f11, f6, rmm # perform operation
fmadd.s f1, f10, f11, f6, rne # perform operation
fmadd.s f1, f10, f11, f6, rtz # perform operation
fmadd.s f1, f10, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f10, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f10, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x800000)
li x24, 0x1f9fe5ef8b7739e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f29, 0(x2) # load 0x80400000 from memory into f29
li x3, 0x4726cb4c3d417b37 # load x3 with value 0x4726cb4c3d417b37
sw x3, 0(x2) # store 0x4726cb4c3d417b37 in memory
flw f16, 0(x2) # load 0x4726cb4c3d417b37 from memory into f16
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmadd.s f24, f29, f16, f19, dyn # perform operation
fmadd.s f24, f29, f16, f19, rdn # perform operation
fmadd.s f24, f29, f16, f19, rmm # perform operation
fmadd.s f24, f29, f16, f19, rne # perform operation
fmadd.s f24, f29, f16, f19, rtz # perform operation
fmadd.s f24, f29, f16, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f29, f16, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f29, f16, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80800000)
li x9, 0x14981332a5025207 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xee495a41755ba6a5 # load x3 with value 0xee495a41755ba6a5
sw x3, 0(x2) # store 0xee495a41755ba6a5 in memory
flw f15, 0(x2) # load 0xee495a41755ba6a5 from memory into f15
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f20, 0(x2) # load 0x80800000 from memory into f20
fmadd.s f9, f13, f15, f20, dyn # perform operation
fmadd.s f9, f13, f15, f20, rdn # perform operation
fmadd.s f9, f13, f15, f20, rmm # perform operation
fmadd.s f9, f13, f15, f20, rne # perform operation
fmadd.s f9, f13, f15, f20, rtz # perform operation
fmadd.s f9, f13, f15, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f13, f15, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f13, f15, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f13, f15, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f13, f15, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f13, f15, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f7fffff)
li x7, 0x2e3f29a1fe424529 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f4, 0(x2) # load 0x80400000 from memory into f4
li x3, 0x8caa18e46bf3b2be # load x3 with value 0x8caa18e46bf3b2be
sw x3, 0(x2) # store 0x8caa18e46bf3b2be in memory
flw f26, 0(x2) # load 0x8caa18e46bf3b2be from memory into f26
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f7, f4, f26, f17, dyn # perform operation
fmadd.s f7, f4, f26, f17, rdn # perform operation
fmadd.s f7, f4, f26, f17, rmm # perform operation
fmadd.s f7, f4, f26, f17, rne # perform operation
fmadd.s f7, f4, f26, f17, rtz # perform operation
fmadd.s f7, f4, f26, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f4, f26, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f4, f26, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff7fffff)
li x28, 0x26add5baa3ff4302 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f23, 0(x2) # load 0x80400000 from memory into f23
li x3, 0x62c85a23644bfedb # load x3 with value 0x62c85a23644bfedb
sw x3, 0(x2) # store 0x62c85a23644bfedb in memory
flw f13, 0(x2) # load 0x62c85a23644bfedb from memory into f13
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f1, 0(x2) # load 0xff7fffff from memory into f1
fmadd.s f28, f23, f13, f1, dyn # perform operation
fmadd.s f28, f23, f13, f1, rdn # perform operation
fmadd.s f28, f23, f13, f1, rmm # perform operation
fmadd.s f28, f23, f13, f1, rne # perform operation
fmadd.s f28, f23, f13, f1, rtz # perform operation
fmadd.s f28, f23, f13, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f13, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f13, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffff)
li x27, 0x90b7d2b8e6759651 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f17, 0(x2) # load 0x80400000 from memory into f17
li x3, 0xaa64ec7748fcf9d7 # load x3 with value 0xaa64ec7748fcf9d7
sw x3, 0(x2) # store 0xaa64ec7748fcf9d7 in memory
flw f7, 0(x2) # load 0xaa64ec7748fcf9d7 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f30, 0(x2) # load 0x007fffff from memory into f30
fmadd.s f27, f17, f7, f30, dyn # perform operation
fmadd.s f27, f17, f7, f30, rdn # perform operation
fmadd.s f27, f17, f7, f30, rmm # perform operation
fmadd.s f27, f17, f7, f30, rne # perform operation
fmadd.s f27, f17, f7, f30, rtz # perform operation
fmadd.s f27, f17, f7, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f17, f7, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f17, f7, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x807fffff)
li x25, 0xe571d1f2f969529e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f13, 0(x2) # load 0x80400000 from memory into f13
li x3, 0xb1cba8428d589b36 # load x3 with value 0xb1cba8428d589b36
sw x3, 0(x2) # store 0xb1cba8428d589b36 in memory
flw f24, 0(x2) # load 0xb1cba8428d589b36 from memory into f24
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f15, 0(x2) # load 0x807fffff from memory into f15
fmadd.s f25, f13, f24, f15, dyn # perform operation
fmadd.s f25, f13, f24, f15, rdn # perform operation
fmadd.s f25, f13, f24, f15, rmm # perform operation
fmadd.s f25, f13, f24, f15, rne # perform operation
fmadd.s f25, f13, f24, f15, rtz # perform operation
fmadd.s f25, f13, f24, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f13, f24, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f13, f24, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f13, f24, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f13, f24, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f13, f24, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x400000)
li x9, 0xcc80e96fe415ea67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f15, 0(x2) # load 0x80400000 from memory into f15
li x3, 0xd5f488103a14cd4d # load x3 with value 0xd5f488103a14cd4d
sw x3, 0(x2) # store 0xd5f488103a14cd4d in memory
flw f29, 0(x2) # load 0xd5f488103a14cd4d from memory into f29
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f25, 0(x2) # load 0x00400000 from memory into f25
fmadd.s f9, f15, f29, f25, dyn # perform operation
fmadd.s f9, f15, f29, f25, rdn # perform operation
fmadd.s f9, f15, f29, f25, rmm # perform operation
fmadd.s f9, f15, f29, f25, rne # perform operation
fmadd.s f9, f15, f29, f25, rtz # perform operation
fmadd.s f9, f15, f29, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f29, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f29, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80400000)
li x29, 0x79c6b4089f9cfa56 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
li x3, 0x5f4f6b8c4ea7f2ba # load x3 with value 0x5f4f6b8c4ea7f2ba
sw x3, 0(x2) # store 0x5f4f6b8c4ea7f2ba in memory
flw f18, 0(x2) # load 0x5f4f6b8c4ea7f2ba from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f6, 0(x2) # load 0x80400000 from memory into f6
fmadd.s f29, f31, f18, f6, dyn # perform operation
fmadd.s f29, f31, f18, f6, rdn # perform operation
fmadd.s f29, f31, f18, f6, rmm # perform operation
fmadd.s f29, f31, f18, f6, rne # perform operation
fmadd.s f29, f31, f18, f6, rtz # perform operation
fmadd.s f29, f31, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f31, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f31, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x1)
li x17, 0x39bb750a6c5c6548 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f18, 0(x2) # load 0x80400000 from memory into f18
li x3, 0x7470c4d09fd9499 # load x3 with value 0x7470c4d09fd9499
sw x3, 0(x2) # store 0x7470c4d09fd9499 in memory
flw f3, 0(x2) # load 0x7470c4d09fd9499 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
fmadd.s f17, f18, f3, f23, dyn # perform operation
fmadd.s f17, f18, f3, f23, rdn # perform operation
fmadd.s f17, f18, f3, f23, rmm # perform operation
fmadd.s f17, f18, f3, f23, rne # perform operation
fmadd.s f17, f18, f3, f23, rtz # perform operation
fmadd.s f17, f18, f3, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f18, f3, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f18, f3, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x80000001)
li x7, 0x56d8389509a57a19 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
li x3, 0xad8bb8ae77ddb16e # load x3 with value 0xad8bb8ae77ddb16e
sw x3, 0(x2) # store 0xad8bb8ae77ddb16e in memory
flw f30, 0(x2) # load 0xad8bb8ae77ddb16e from memory into f30
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f21, 0(x2) # load 0x80000001 from memory into f21
fmadd.s f7, f25, f30, f21, dyn # perform operation
fmadd.s f7, f25, f30, f21, rdn # perform operation
fmadd.s f7, f25, f30, f21, rmm # perform operation
fmadd.s f7, f25, f30, f21, rne # perform operation
fmadd.s f7, f25, f30, f21, rtz # perform operation
fmadd.s f7, f25, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f25, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f25, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800000)
li x13, 0x8e99fa6904634b9c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f14, 0(x2) # load 0x80400000 from memory into f14
li x3, 0xc5454201b9d9da00 # load x3 with value 0xc5454201b9d9da00
sw x3, 0(x2) # store 0xc5454201b9d9da00 in memory
flw f12, 0(x2) # load 0xc5454201b9d9da00 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmadd.s f13, f14, f12, f6, dyn # perform operation
fmadd.s f13, f14, f12, f6, rdn # perform operation
fmadd.s f13, f14, f12, f6, rmm # perform operation
fmadd.s f13, f14, f12, f6, rne # perform operation
fmadd.s f13, f14, f12, f6, rtz # perform operation
fmadd.s f13, f14, f12, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f14, f12, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f14, f12, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0xff800000)
li x13, 0xcb5c2e47d414f365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x91a04e51bfda6584 # load x3 with value 0x91a04e51bfda6584
sw x3, 0(x2) # store 0x91a04e51bfda6584 in memory
flw f14, 0(x2) # load 0x91a04e51bfda6584 from memory into f14
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
fmadd.s f13, f7, f14, f27, dyn # perform operation
fmadd.s f13, f7, f14, f27, rdn # perform operation
fmadd.s f13, f7, f14, f27, rmm # perform operation
fmadd.s f13, f7, f14, f27, rne # perform operation
fmadd.s f13, f7, f14, f27, rtz # perform operation
fmadd.s f13, f7, f14, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f7, f14, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f7, f14, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fc00000)
li x26, 0x852ac28ef5795d0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
li x3, 0xf63e71b3af4b5c3b # load x3 with value 0xf63e71b3af4b5c3b
sw x3, 0(x2) # store 0xf63e71b3af4b5c3b in memory
flw f31, 0(x2) # load 0xf63e71b3af4b5c3b from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
fmadd.s f26, f2, f31, f29, dyn # perform operation
fmadd.s f26, f2, f31, f29, rdn # perform operation
fmadd.s f26, f2, f31, f29, rmm # perform operation
fmadd.s f26, f2, f31, f29, rne # perform operation
fmadd.s f26, f2, f31, f29, rtz # perform operation
fmadd.s f26, f2, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f2, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f2, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f2, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f2, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f2, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fffffff)
li x14, 0x40a61a32160ada45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f24, 0(x2) # load 0x80400000 from memory into f24
li x3, 0x902b008a1b7bbe72 # load x3 with value 0x902b008a1b7bbe72
sw x3, 0(x2) # store 0x902b008a1b7bbe72 in memory
flw f4, 0(x2) # load 0x902b008a1b7bbe72 from memory into f4
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f14, f24, f4, f7, dyn # perform operation
fmadd.s f14, f24, f4, f7, rdn # perform operation
fmadd.s f14, f24, f4, f7, rmm # perform operation
fmadd.s f14, f24, f4, f7, rne # perform operation
fmadd.s f14, f24, f4, f7, rtz # perform operation
fmadd.s f14, f24, f4, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f24, f4, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f24, f4, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f24, f4, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f24, f4, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f24, f4, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7f800001)
li x23, 0xc511813cab58beba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f26, 0(x2) # load 0x80400000 from memory into f26
li x3, 0x9bef3a7c83cb921e # load x3 with value 0x9bef3a7c83cb921e
sw x3, 0(x2) # store 0x9bef3a7c83cb921e in memory
flw f21, 0(x2) # load 0x9bef3a7c83cb921e from memory into f21
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmadd.s f23, f26, f21, f3, dyn # perform operation
fmadd.s f23, f26, f21, f3, rdn # perform operation
fmadd.s f23, f26, f21, f3, rmm # perform operation
fmadd.s f23, f26, f21, f3, rne # perform operation
fmadd.s f23, f26, f21, f3, rtz # perform operation
fmadd.s f23, f26, f21, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f26, f21, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f26, f21, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7fbfffff)
li x16, 0xdedafdade7384e4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x2565f391f274be25 # load x3 with value 0x2565f391f274be25
sw x3, 0(x2) # store 0x2565f391f274be25 in memory
flw f9, 0(x2) # load 0x2565f391f274be25 from memory into f9
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
fmadd.s f16, f20, f9, f1, dyn # perform operation
fmadd.s f16, f20, f9, f1, rdn # perform operation
fmadd.s f16, f20, f9, f1, rmm # perform operation
fmadd.s f16, f20, f9, f1, rne # perform operation
fmadd.s f16, f20, f9, f1, rtz # perform operation
fmadd.s f16, f20, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x7ef8654f)
li x5, 0x02a104b23bc98166 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f20, 0(x2) # load 0x80400000 from memory into f20
li x3, 0x785f98fb54297dcb # load x3 with value 0x785f98fb54297dcb
sw x3, 0(x2) # store 0x785f98fb54297dcb in memory
flw f16, 0(x2) # load 0x785f98fb54297dcb from memory into f16
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f5, f20, f16, f9, dyn # perform operation
fmadd.s f5, f20, f16, f9, rdn # perform operation
fmadd.s f5, f20, f16, f9, rmm # perform operation
fmadd.s f5, f20, f16, f9, rne # perform operation
fmadd.s f5, f20, f16, f9, rtz # perform operation
fmadd.s f5, f20, f16, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f20, f16, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f20, f16, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80400000 fs3 = 0x813d9ab0)
li x5, 0x5652d5e4e82ec725 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f7, 0(x2) # load 0x80400000 from memory into f7
li x3, 0x5b748a692260c32a # load x3 with value 0x5b748a692260c32a
sw x3, 0(x2) # store 0x5b748a692260c32a in memory
flw f24, 0(x2) # load 0x5b748a692260c32a from memory into f24
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f3, 0(x2) # load 0x813d9ab0 from memory into f3
fmadd.s f5, f7, f24, f3, dyn # perform operation
fmadd.s f5, f7, f24, f3, rdn # perform operation
fmadd.s f5, f7, f24, f3, rmm # perform operation
fmadd.s f5, f7, f24, f3, rne # perform operation
fmadd.s f5, f7, f24, f3, rtz # perform operation
fmadd.s f5, f7, f24, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f7, f24, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f7, f24, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x0)
li x19, 0xfc153fab77b6475d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
li x3, 0x13f2e0388fad5627 # load x3 with value 0x13f2e0388fad5627
sw x3, 0(x2) # store 0x13f2e0388fad5627 in memory
flw f25, 0(x2) # load 0x13f2e0388fad5627 from memory into f25
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f23, 0(x2) # load 0x00000000 from memory into f23
fmadd.s f19, f13, f25, f23, dyn # perform operation
fmadd.s f19, f13, f25, f23, rdn # perform operation
fmadd.s f19, f13, f25, f23, rmm # perform operation
fmadd.s f19, f13, f25, f23, rne # perform operation
fmadd.s f19, f13, f25, f23, rtz # perform operation
fmadd.s f19, f13, f25, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f13, f25, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f13, f25, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000000)
li x28, 0x062840e62dfdf295 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f30, 0(x2) # load 0x00000001 from memory into f30
li x3, 0xdcdb71a13ba01c60 # load x3 with value 0xdcdb71a13ba01c60
sw x3, 0(x2) # store 0xdcdb71a13ba01c60 in memory
flw f18, 0(x2) # load 0xdcdb71a13ba01c60 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f26, 0(x2) # load 0x80000000 from memory into f26
fmadd.s f28, f30, f18, f26, dyn # perform operation
fmadd.s f28, f30, f18, f26, rdn # perform operation
fmadd.s f28, f30, f18, f26, rmm # perform operation
fmadd.s f28, f30, f18, f26, rne # perform operation
fmadd.s f28, f30, f18, f26, rtz # perform operation
fmadd.s f28, f30, f18, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f30, f18, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f30, f18, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f30, f18, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f30, f18, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f30, f18, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3f800000)
li x15, 0x61820c004a2ae7e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f23, 0(x2) # load 0x00000001 from memory into f23
li x3, 0x2a3c9bc8f8ba8cbd # load x3 with value 0x2a3c9bc8f8ba8cbd
sw x3, 0(x2) # store 0x2a3c9bc8f8ba8cbd in memory
flw f19, 0(x2) # load 0x2a3c9bc8f8ba8cbd from memory into f19
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f8, 0(x2) # load 0x3f800000 from memory into f8
fmadd.s f15, f23, f19, f8, dyn # perform operation
fmadd.s f15, f23, f19, f8, rdn # perform operation
fmadd.s f15, f23, f19, f8, rmm # perform operation
fmadd.s f15, f23, f19, f8, rne # perform operation
fmadd.s f15, f23, f19, f8, rtz # perform operation
fmadd.s f15, f23, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f23, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f23, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbf800000)
li x14, 0x4f5b6cd42f6557bd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0xfc2f893439afac96 # load x3 with value 0xfc2f893439afac96
sw x3, 0(x2) # store 0xfc2f893439afac96 in memory
flw f22, 0(x2) # load 0xfc2f893439afac96 from memory into f22
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmadd.s f14, f5, f22, f17, dyn # perform operation
fmadd.s f14, f5, f22, f17, rdn # perform operation
fmadd.s f14, f5, f22, f17, rmm # perform operation
fmadd.s f14, f5, f22, f17, rne # perform operation
fmadd.s f14, f5, f22, f17, rtz # perform operation
fmadd.s f14, f5, f22, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f5, f22, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f5, f22, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x3fc00000)
li x9, 0x22c4885b46dcd0ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f15, 0(x2) # load 0x00000001 from memory into f15
li x3, 0x9c71bb0f3de36911 # load x3 with value 0x9c71bb0f3de36911
sw x3, 0(x2) # store 0x9c71bb0f3de36911 in memory
flw f28, 0(x2) # load 0x9c71bb0f3de36911 from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f24, 0(x2) # load 0x3fc00000 from memory into f24
fmadd.s f9, f15, f28, f24, dyn # perform operation
fmadd.s f9, f15, f28, f24, rdn # perform operation
fmadd.s f9, f15, f28, f24, rmm # perform operation
fmadd.s f9, f15, f28, f24, rne # perform operation
fmadd.s f9, f15, f28, f24, rtz # perform operation
fmadd.s f9, f15, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f15, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f15, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f15, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f15, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f15, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xbfc00000)
li x23, 0x2ae1b51bc5de955a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f12, 0(x2) # load 0x00000001 from memory into f12
li x3, 0xb253e567fe16551b # load x3 with value 0xb253e567fe16551b
sw x3, 0(x2) # store 0xb253e567fe16551b in memory
flw f24, 0(x2) # load 0xb253e567fe16551b from memory into f24
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmadd.s f23, f12, f24, f9, dyn # perform operation
fmadd.s f23, f12, f24, f9, rdn # perform operation
fmadd.s f23, f12, f24, f9, rmm # perform operation
fmadd.s f23, f12, f24, f9, rne # perform operation
fmadd.s f23, f12, f24, f9, rtz # perform operation
fmadd.s f23, f12, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f12, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f12, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f12, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f12, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f12, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x40000000)
li x29, 0xe21e8d02c45b7044 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f17, 0(x2) # load 0x00000001 from memory into f17
li x3, 0xe6cf4bdce2507ce2 # load x3 with value 0xe6cf4bdce2507ce2
sw x3, 0(x2) # store 0xe6cf4bdce2507ce2 in memory
flw f30, 0(x2) # load 0xe6cf4bdce2507ce2 from memory into f30
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmadd.s f29, f17, f30, f2, dyn # perform operation
fmadd.s f29, f17, f30, f2, rdn # perform operation
fmadd.s f29, f17, f30, f2, rmm # perform operation
fmadd.s f29, f17, f30, f2, rne # perform operation
fmadd.s f29, f17, f30, f2, rtz # perform operation
fmadd.s f29, f17, f30, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f30, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f30, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xc0000000)
li x13, 0x4c492c3c4dd0bcaf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f8, 0(x2) # load 0x00000001 from memory into f8
li x3, 0x45982979544c8409 # load x3 with value 0x45982979544c8409
sw x3, 0(x2) # store 0x45982979544c8409 in memory
flw f9, 0(x2) # load 0x45982979544c8409 from memory into f9
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f5, 0(x2) # load 0xc0000000 from memory into f5
fmadd.s f13, f8, f9, f5, dyn # perform operation
fmadd.s f13, f8, f9, f5, rdn # perform operation
fmadd.s f13, f8, f9, f5, rmm # perform operation
fmadd.s f13, f8, f9, f5, rne # perform operation
fmadd.s f13, f8, f9, f5, rtz # perform operation
fmadd.s f13, f8, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f8, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f8, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x800000)
li x9, 0xe4601fe8d150dcb6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0x2898053e7d3b69bb # load x3 with value 0x2898053e7d3b69bb
sw x3, 0(x2) # store 0x2898053e7d3b69bb in memory
flw f12, 0(x2) # load 0x2898053e7d3b69bb from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f13, 0(x2) # load 0x00800000 from memory into f13
fmadd.s f9, f16, f12, f13, dyn # perform operation
fmadd.s f9, f16, f12, f13, rdn # perform operation
fmadd.s f9, f16, f12, f13, rmm # perform operation
fmadd.s f9, f16, f12, f13, rne # perform operation
fmadd.s f9, f16, f12, f13, rtz # perform operation
fmadd.s f9, f16, f12, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f12, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f12, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80800000)
li x2, 0x8762a5c1c59d27f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x506d01d1166e846c # load x3 with value 0x506d01d1166e846c
sw x3, 0(x2) # store 0x506d01d1166e846c in memory
flw f23, 0(x2) # load 0x506d01d1166e846c from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f2, f20, f23, f22, dyn # perform operation
fmadd.s f2, f20, f23, f22, rdn # perform operation
fmadd.s f2, f20, f23, f22, rmm # perform operation
fmadd.s f2, f20, f23, f22, rne # perform operation
fmadd.s f2, f20, f23, f22, rtz # perform operation
fmadd.s f2, f20, f23, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f23, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f23, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f7fffff)
li x25, 0x640b60e27a87b81f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f14, 0(x2) # load 0x00000001 from memory into f14
li x3, 0x5c80b5a66e277f1d # load x3 with value 0x5c80b5a66e277f1d
sw x3, 0(x2) # store 0x5c80b5a66e277f1d in memory
flw f15, 0(x2) # load 0x5c80b5a66e277f1d from memory into f15
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fmadd.s f25, f14, f15, f5, dyn # perform operation
fmadd.s f25, f14, f15, f5, rdn # perform operation
fmadd.s f25, f14, f15, f5, rmm # perform operation
fmadd.s f25, f14, f15, f5, rne # perform operation
fmadd.s f25, f14, f15, f5, rtz # perform operation
fmadd.s f25, f14, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f14, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff7fffff)
li x28, 0x0d44088cfdbf3ae1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0x98b3eb51d1df1f11 # load x3 with value 0x98b3eb51d1df1f11
sw x3, 0(x2) # store 0x98b3eb51d1df1f11 in memory
flw f16, 0(x2) # load 0x98b3eb51d1df1f11 from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f20, 0(x2) # load 0xff7fffff from memory into f20
fmadd.s f28, f18, f16, f20, dyn # perform operation
fmadd.s f28, f18, f16, f20, rdn # perform operation
fmadd.s f28, f18, f16, f20, rmm # perform operation
fmadd.s f28, f18, f16, f20, rne # perform operation
fmadd.s f28, f18, f16, f20, rtz # perform operation
fmadd.s f28, f18, f16, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f18, f16, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f18, f16, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffff)
li x3, 0x4a32d348d9d6ad01 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0xa276f525bd7769f9 # load x3 with value 0xa276f525bd7769f9
sw x3, 0(x2) # store 0xa276f525bd7769f9 in memory
flw f4, 0(x2) # load 0xa276f525bd7769f9 from memory into f4
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmadd.s f3, f6, f4, f31, dyn # perform operation
fmadd.s f3, f6, f4, f31, rdn # perform operation
fmadd.s f3, f6, f4, f31, rmm # perform operation
fmadd.s f3, f6, f4, f31, rne # perform operation
fmadd.s f3, f6, f4, f31, rtz # perform operation
fmadd.s f3, f6, f4, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f6, f4, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f6, f4, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f6, f4, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f6, f4, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f6, f4, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x807fffff)
li x7, 0xb884f128ce46cb94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
li x3, 0x63a38c70effba1b8 # load x3 with value 0x63a38c70effba1b8
sw x3, 0(x2) # store 0x63a38c70effba1b8 in memory
flw f1, 0(x2) # load 0x63a38c70effba1b8 from memory into f1
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmadd.s f7, f20, f1, f30, dyn # perform operation
fmadd.s f7, f20, f1, f30, rdn # perform operation
fmadd.s f7, f20, f1, f30, rmm # perform operation
fmadd.s f7, f20, f1, f30, rne # perform operation
fmadd.s f7, f20, f1, f30, rtz # perform operation
fmadd.s f7, f20, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f20, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f20, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x400000)
li x24, 0x3db95898362af15e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
li x3, 0x1248179d27566e3f # load x3 with value 0x1248179d27566e3f
sw x3, 0(x2) # store 0x1248179d27566e3f in memory
flw f16, 0(x2) # load 0x1248179d27566e3f from memory into f16
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f15, 0(x2) # load 0x00400000 from memory into f15
fmadd.s f24, f31, f16, f15, dyn # perform operation
fmadd.s f24, f31, f16, f15, rdn # perform operation
fmadd.s f24, f31, f16, f15, rmm # perform operation
fmadd.s f24, f31, f16, f15, rne # perform operation
fmadd.s f24, f31, f16, f15, rtz # perform operation
fmadd.s f24, f31, f16, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f31, f16, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f31, f16, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f31, f16, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f31, f16, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f31, f16, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80400000)
li x12, 0x4e8167ec61899e45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x27c20d2f75fc9066 # load x3 with value 0x27c20d2f75fc9066
sw x3, 0(x2) # store 0x27c20d2f75fc9066 in memory
flw f3, 0(x2) # load 0x27c20d2f75fc9066 from memory into f3
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f27, 0(x2) # load 0x80400000 from memory into f27
fmadd.s f12, f25, f3, f27, dyn # perform operation
fmadd.s f12, f25, f3, f27, rdn # perform operation
fmadd.s f12, f25, f3, f27, rmm # perform operation
fmadd.s f12, f25, f3, f27, rne # perform operation
fmadd.s f12, f25, f3, f27, rtz # perform operation
fmadd.s f12, f25, f3, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f25, f3, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f25, f3, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f25, f3, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f25, f3, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f25, f3, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x1)
li x13, 0xf1cfc43555f851f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
li x3, 0xdfcb32112fa1f9e0 # load x3 with value 0xdfcb32112fa1f9e0
sw x3, 0(x2) # store 0xdfcb32112fa1f9e0 in memory
flw f3, 0(x2) # load 0xdfcb32112fa1f9e0 from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f13, f26, f3, f1, dyn # perform operation
fmadd.s f13, f26, f3, f1, rdn # perform operation
fmadd.s f13, f26, f3, f1, rmm # perform operation
fmadd.s f13, f26, f3, f1, rne # perform operation
fmadd.s f13, f26, f3, f1, rtz # perform operation
fmadd.s f13, f26, f3, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f26, f3, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f26, f3, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x80000001)
li x14, 0xe3699f241f21b9ab # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
li x3, 0x2bb426115cb96dfd # load x3 with value 0x2bb426115cb96dfd
sw x3, 0(x2) # store 0x2bb426115cb96dfd in memory
flw f19, 0(x2) # load 0x2bb426115cb96dfd from memory into f19
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
fmadd.s f14, f25, f19, f8, dyn # perform operation
fmadd.s f14, f25, f19, f8, rdn # perform operation
fmadd.s f14, f25, f19, f8, rmm # perform operation
fmadd.s f14, f25, f19, f8, rne # perform operation
fmadd.s f14, f25, f19, f8, rtz # perform operation
fmadd.s f14, f25, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800000)
li x17, 0x703fa47d46f5dbf5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xc928a98b6b86311 # load x3 with value 0xc928a98b6b86311
sw x3, 0(x2) # store 0xc928a98b6b86311 in memory
flw f18, 0(x2) # load 0xc928a98b6b86311 from memory into f18
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f3, 0(x2) # load 0x7f800000 from memory into f3
fmadd.s f17, f16, f18, f3, dyn # perform operation
fmadd.s f17, f16, f18, f3, rdn # perform operation
fmadd.s f17, f16, f18, f3, rmm # perform operation
fmadd.s f17, f16, f18, f3, rne # perform operation
fmadd.s f17, f16, f18, f3, rtz # perform operation
fmadd.s f17, f16, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f16, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0xff800000)
li x20, 0x71aacc4ac0cdfd0a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f18, 0(x2) # load 0x00000001 from memory into f18
li x3, 0xc0ef99513f9308f7 # load x3 with value 0xc0ef99513f9308f7
sw x3, 0(x2) # store 0xc0ef99513f9308f7 in memory
flw f3, 0(x2) # load 0xc0ef99513f9308f7 from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
fmadd.s f20, f18, f3, f19, dyn # perform operation
fmadd.s f20, f18, f3, f19, rdn # perform operation
fmadd.s f20, f18, f3, f19, rmm # perform operation
fmadd.s f20, f18, f3, f19, rne # perform operation
fmadd.s f20, f18, f3, f19, rtz # perform operation
fmadd.s f20, f18, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fc00000)
li x22, 0xc0486283f861b4f5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0xb3b8065c3b8d733c # load x3 with value 0xb3b8065c3b8d733c
sw x3, 0(x2) # store 0xb3b8065c3b8d733c in memory
flw f27, 0(x2) # load 0xb3b8065c3b8d733c from memory into f27
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f11, 0(x2) # load 0x7fc00000 from memory into f11
fmadd.s f22, f9, f27, f11, dyn # perform operation
fmadd.s f22, f9, f27, f11, rdn # perform operation
fmadd.s f22, f9, f27, f11, rmm # perform operation
fmadd.s f22, f9, f27, f11, rne # perform operation
fmadd.s f22, f9, f27, f11, rtz # perform operation
fmadd.s f22, f9, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f9, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f9, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fffffff)
li x26, 0xd1c7b4dd1268dd21 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
li x3, 0x92fd4ba9a13369e0 # load x3 with value 0x92fd4ba9a13369e0
sw x3, 0(x2) # store 0x92fd4ba9a13369e0 in memory
flw f8, 0(x2) # load 0x92fd4ba9a13369e0 from memory into f8
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f26, f5, f8, f12, dyn # perform operation
fmadd.s f26, f5, f8, f12, rdn # perform operation
fmadd.s f26, f5, f8, f12, rmm # perform operation
fmadd.s f26, f5, f8, f12, rne # perform operation
fmadd.s f26, f5, f8, f12, rtz # perform operation
fmadd.s f26, f5, f8, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f5, f8, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f5, f8, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f5, f8, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f5, f8, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f5, f8, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7f800001)
li x7, 0x63af1eb79642fa47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f21, 0(x2) # load 0x00000001 from memory into f21
li x3, 0x203227dbb2016998 # load x3 with value 0x203227dbb2016998
sw x3, 0(x2) # store 0x203227dbb2016998 in memory
flw f13, 0(x2) # load 0x203227dbb2016998 from memory into f13
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f2, 0(x2) # load 0x7f800001 from memory into f2
fmadd.s f7, f21, f13, f2, dyn # perform operation
fmadd.s f7, f21, f13, f2, rdn # perform operation
fmadd.s f7, f21, f13, f2, rmm # perform operation
fmadd.s f7, f21, f13, f2, rne # perform operation
fmadd.s f7, f21, f13, f2, rtz # perform operation
fmadd.s f7, f21, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7fbfffff)
li x3, 0xd216546adcc2d0b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f16, 0(x2) # load 0x00000001 from memory into f16
li x3, 0xfc2a8444c5ac87ce # load x3 with value 0xfc2a8444c5ac87ce
sw x3, 0(x2) # store 0xfc2a8444c5ac87ce in memory
flw f10, 0(x2) # load 0xfc2a8444c5ac87ce from memory into f10
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f19, 0(x2) # load 0x7fbfffff from memory into f19
fmadd.s f3, f16, f10, f19, dyn # perform operation
fmadd.s f3, f16, f10, f19, rdn # perform operation
fmadd.s f3, f16, f10, f19, rmm # perform operation
fmadd.s f3, f16, f10, f19, rne # perform operation
fmadd.s f3, f16, f10, f19, rtz # perform operation
fmadd.s f3, f16, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f16, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f16, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x7ef8654f)
li x25, 0xe7d3ec37c0da8a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f9, 0(x2) # load 0x00000001 from memory into f9
li x3, 0x17e4501567530bca # load x3 with value 0x17e4501567530bca
sw x3, 0(x2) # store 0x17e4501567530bca in memory
flw f15, 0(x2) # load 0x17e4501567530bca from memory into f15
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
fmadd.s f25, f9, f15, f10, dyn # perform operation
fmadd.s f25, f9, f15, f10, rdn # perform operation
fmadd.s f25, f9, f15, f10, rmm # perform operation
fmadd.s f25, f9, f15, f10, rne # perform operation
fmadd.s f25, f9, f15, f10, rtz # perform operation
fmadd.s f25, f9, f15, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f9, f15, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f9, f15, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x1 fs3 = 0x813d9ab0)
li x20, 0xfd027447e636c5fc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f6, 0(x2) # load 0x00000001 from memory into f6
li x3, 0x76dacf8a6be213ce # load x3 with value 0x76dacf8a6be213ce
sw x3, 0(x2) # store 0x76dacf8a6be213ce in memory
flw f26, 0(x2) # load 0x76dacf8a6be213ce from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f20, f6, f26, f15, dyn # perform operation
fmadd.s f20, f6, f26, f15, rdn # perform operation
fmadd.s f20, f6, f26, f15, rmm # perform operation
fmadd.s f20, f6, f26, f15, rne # perform operation
fmadd.s f20, f6, f26, f15, rtz # perform operation
fmadd.s f20, f6, f26, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f6, f26, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f6, f26, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f6, f26, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f6, f26, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f6, f26, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x0)
li x20, 0x3842e889e8ffe1b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0xbd9afe18f5a7b420 # load x3 with value 0xbd9afe18f5a7b420
sw x3, 0(x2) # store 0xbd9afe18f5a7b420 in memory
flw f8, 0(x2) # load 0xbd9afe18f5a7b420 from memory into f8
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f6, 0(x2) # load 0x00000000 from memory into f6
fmadd.s f20, f15, f8, f6, dyn # perform operation
fmadd.s f20, f15, f8, f6, rdn # perform operation
fmadd.s f20, f15, f8, f6, rmm # perform operation
fmadd.s f20, f15, f8, f6, rne # perform operation
fmadd.s f20, f15, f8, f6, rtz # perform operation
fmadd.s f20, f15, f8, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f15, f8, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f15, f8, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000000)
li x27, 0xe20cc38ca1c37c6e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f9, 0(x2) # load 0x80000001 from memory into f9
li x3, 0x8dfcad0886fa41f1 # load x3 with value 0x8dfcad0886fa41f1
sw x3, 0(x2) # store 0x8dfcad0886fa41f1 in memory
flw f28, 0(x2) # load 0x8dfcad0886fa41f1 from memory into f28
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f29, 0(x2) # load 0x80000000 from memory into f29
fmadd.s f27, f9, f28, f29, dyn # perform operation
fmadd.s f27, f9, f28, f29, rdn # perform operation
fmadd.s f27, f9, f28, f29, rmm # perform operation
fmadd.s f27, f9, f28, f29, rne # perform operation
fmadd.s f27, f9, f28, f29, rtz # perform operation
fmadd.s f27, f9, f28, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f28, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f28, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3f800000)
li x4, 0xb2e85fc9acc07346 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
li x3, 0x2fe1cf0724bceb37 # load x3 with value 0x2fe1cf0724bceb37
sw x3, 0(x2) # store 0x2fe1cf0724bceb37 in memory
flw f24, 0(x2) # load 0x2fe1cf0724bceb37 from memory into f24
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f31, 0(x2) # load 0x3f800000 from memory into f31
fmadd.s f4, f29, f24, f31, dyn # perform operation
fmadd.s f4, f29, f24, f31, rdn # perform operation
fmadd.s f4, f29, f24, f31, rmm # perform operation
fmadd.s f4, f29, f24, f31, rne # perform operation
fmadd.s f4, f29, f24, f31, rtz # perform operation
fmadd.s f4, f29, f24, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f29, f24, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f29, f24, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f29, f24, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f29, f24, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f29, f24, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbf800000)
li x6, 0x5f7b6723a5b5d2ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
li x3, 0xab4c2646812f9679 # load x3 with value 0xab4c2646812f9679
sw x3, 0(x2) # store 0xab4c2646812f9679 in memory
flw f17, 0(x2) # load 0xab4c2646812f9679 from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f25, 0(x2) # load 0xbf800000 from memory into f25
fmadd.s f6, f1, f17, f25, dyn # perform operation
fmadd.s f6, f1, f17, f25, rdn # perform operation
fmadd.s f6, f1, f17, f25, rmm # perform operation
fmadd.s f6, f1, f17, f25, rne # perform operation
fmadd.s f6, f1, f17, f25, rtz # perform operation
fmadd.s f6, f1, f17, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f1, f17, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f1, f17, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x3fc00000)
li x25, 0x1b78750d54e4797a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x52fdb94e789da51e # load x3 with value 0x52fdb94e789da51e
sw x3, 0(x2) # store 0x52fdb94e789da51e in memory
flw f3, 0(x2) # load 0x52fdb94e789da51e from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f7, 0(x2) # load 0x3fc00000 from memory into f7
fmadd.s f25, f15, f3, f7, dyn # perform operation
fmadd.s f25, f15, f3, f7, rdn # perform operation
fmadd.s f25, f15, f3, f7, rmm # perform operation
fmadd.s f25, f15, f3, f7, rne # perform operation
fmadd.s f25, f15, f3, f7, rtz # perform operation
fmadd.s f25, f15, f3, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f3, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f3, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f3, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f3, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f3, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xbfc00000)
li x28, 0xb6048b98aeca3ef2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xc8a520c0a500d22e # load x3 with value 0xc8a520c0a500d22e
sw x3, 0(x2) # store 0xc8a520c0a500d22e in memory
flw f14, 0(x2) # load 0xc8a520c0a500d22e from memory into f14
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f9, 0(x2) # load 0xbfc00000 from memory into f9
fmadd.s f28, f23, f14, f9, dyn # perform operation
fmadd.s f28, f23, f14, f9, rdn # perform operation
fmadd.s f28, f23, f14, f9, rmm # perform operation
fmadd.s f28, f23, f14, f9, rne # perform operation
fmadd.s f28, f23, f14, f9, rtz # perform operation
fmadd.s f28, f23, f14, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f14, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f14, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x40000000)
li x2, 0x2e48a5f1146e73b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f15, 0(x2) # load 0x80000001 from memory into f15
li x3, 0x12d4aaf1d03b3b8b # load x3 with value 0x12d4aaf1d03b3b8b
sw x3, 0(x2) # store 0x12d4aaf1d03b3b8b in memory
flw f24, 0(x2) # load 0x12d4aaf1d03b3b8b from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmadd.s f2, f15, f24, f16, dyn # perform operation
fmadd.s f2, f15, f24, f16, rdn # perform operation
fmadd.s f2, f15, f24, f16, rmm # perform operation
fmadd.s f2, f15, f24, f16, rne # perform operation
fmadd.s f2, f15, f24, f16, rtz # perform operation
fmadd.s f2, f15, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f15, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f15, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xc0000000)
li x16, 0x33d31148c8bbb38a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xc88482a218646c23 # load x3 with value 0xc88482a218646c23
sw x3, 0(x2) # store 0xc88482a218646c23 in memory
flw f22, 0(x2) # load 0xc88482a218646c23 from memory into f22
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmadd.s f16, f6, f22, f19, dyn # perform operation
fmadd.s f16, f6, f22, f19, rdn # perform operation
fmadd.s f16, f6, f22, f19, rmm # perform operation
fmadd.s f16, f6, f22, f19, rne # perform operation
fmadd.s f16, f6, f22, f19, rtz # perform operation
fmadd.s f16, f6, f22, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f6, f22, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f6, f22, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f6, f22, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f6, f22, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f6, f22, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x800000)
li x1, 0xda011a2153174b5c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x52b36075226a950d # load x3 with value 0x52b36075226a950d
sw x3, 0(x2) # store 0x52b36075226a950d in memory
flw f22, 0(x2) # load 0x52b36075226a950d from memory into f22
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f29, 0(x2) # load 0x00800000 from memory into f29
fmadd.s f1, f20, f22, f29, dyn # perform operation
fmadd.s f1, f20, f22, f29, rdn # perform operation
fmadd.s f1, f20, f22, f29, rmm # perform operation
fmadd.s f1, f20, f22, f29, rne # perform operation
fmadd.s f1, f20, f22, f29, rtz # perform operation
fmadd.s f1, f20, f22, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f22, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f22, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80800000)
li x30, 0x2bc3fb09a5df8a0c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x1c7222384862294c # load x3 with value 0x1c7222384862294c
sw x3, 0(x2) # store 0x1c7222384862294c in memory
flw f22, 0(x2) # load 0x1c7222384862294c from memory into f22
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f18, 0(x2) # load 0x80800000 from memory into f18
fmadd.s f30, f12, f22, f18, dyn # perform operation
fmadd.s f30, f12, f22, f18, rdn # perform operation
fmadd.s f30, f12, f22, f18, rmm # perform operation
fmadd.s f30, f12, f22, f18, rne # perform operation
fmadd.s f30, f12, f22, f18, rtz # perform operation
fmadd.s f30, f12, f22, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f12, f22, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f12, f22, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f7fffff)
li x27, 0x5a014dfec9c48588 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f8, 0(x2) # load 0x80000001 from memory into f8
li x3, 0x3af9d69168f17046 # load x3 with value 0x3af9d69168f17046
sw x3, 0(x2) # store 0x3af9d69168f17046 in memory
flw f18, 0(x2) # load 0x3af9d69168f17046 from memory into f18
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f17, 0(x2) # load 0x7f7fffff from memory into f17
fmadd.s f27, f8, f18, f17, dyn # perform operation
fmadd.s f27, f8, f18, f17, rdn # perform operation
fmadd.s f27, f8, f18, f17, rmm # perform operation
fmadd.s f27, f8, f18, f17, rne # perform operation
fmadd.s f27, f8, f18, f17, rtz # perform operation
fmadd.s f27, f8, f18, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f8, f18, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f8, f18, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff7fffff)
li x31, 0xc8728fad48c638a2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0x6b587873c564a6c0 # load x3 with value 0x6b587873c564a6c0
sw x3, 0(x2) # store 0x6b587873c564a6c0 in memory
flw f29, 0(x2) # load 0x6b587873c564a6c0 from memory into f29
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f21, 0(x2) # load 0xff7fffff from memory into f21
fmadd.s f31, f6, f29, f21, dyn # perform operation
fmadd.s f31, f6, f29, f21, rdn # perform operation
fmadd.s f31, f6, f29, f21, rmm # perform operation
fmadd.s f31, f6, f29, f21, rne # perform operation
fmadd.s f31, f6, f29, f21, rtz # perform operation
fmadd.s f31, f6, f29, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f6, f29, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f6, f29, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffff)
li x16, 0x7ae7415a477da48b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f17, 0(x2) # load 0x80000001 from memory into f17
li x3, 0x5d9303b636b32af9 # load x3 with value 0x5d9303b636b32af9
sw x3, 0(x2) # store 0x5d9303b636b32af9 in memory
flw f30, 0(x2) # load 0x5d9303b636b32af9 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f23, 0(x2) # load 0x007fffff from memory into f23
fmadd.s f16, f17, f30, f23, dyn # perform operation
fmadd.s f16, f17, f30, f23, rdn # perform operation
fmadd.s f16, f17, f30, f23, rmm # perform operation
fmadd.s f16, f17, f30, f23, rne # perform operation
fmadd.s f16, f17, f30, f23, rtz # perform operation
fmadd.s f16, f17, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f17, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f17, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x807fffff)
li x2, 0x76d9494cd99fd06f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f31, 0(x2) # load 0x80000001 from memory into f31
li x3, 0xac4cc4f9a3692a93 # load x3 with value 0xac4cc4f9a3692a93
sw x3, 0(x2) # store 0xac4cc4f9a3692a93 in memory
flw f26, 0(x2) # load 0xac4cc4f9a3692a93 from memory into f26
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f29, 0(x2) # load 0x807fffff from memory into f29
fmadd.s f2, f31, f26, f29, dyn # perform operation
fmadd.s f2, f31, f26, f29, rdn # perform operation
fmadd.s f2, f31, f26, f29, rmm # perform operation
fmadd.s f2, f31, f26, f29, rne # perform operation
fmadd.s f2, f31, f26, f29, rtz # perform operation
fmadd.s f2, f31, f26, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f31, f26, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f31, f26, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x400000)
li x12, 0x247c7e742f82f69d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f5, 0(x2) # load 0x80000001 from memory into f5
li x3, 0xe692d1e191452ec5 # load x3 with value 0xe692d1e191452ec5
sw x3, 0(x2) # store 0xe692d1e191452ec5 in memory
flw f14, 0(x2) # load 0xe692d1e191452ec5 from memory into f14
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fmadd.s f12, f5, f14, f21, dyn # perform operation
fmadd.s f12, f5, f14, f21, rdn # perform operation
fmadd.s f12, f5, f14, f21, rmm # perform operation
fmadd.s f12, f5, f14, f21, rne # perform operation
fmadd.s f12, f5, f14, f21, rtz # perform operation
fmadd.s f12, f5, f14, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f14, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f14, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80400000)
li x19, 0xe86902ba7893a667 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x44c1799cae0ff4a3 # load x3 with value 0x44c1799cae0ff4a3
sw x3, 0(x2) # store 0x44c1799cae0ff4a3 in memory
flw f8, 0(x2) # load 0x44c1799cae0ff4a3 from memory into f8
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f31, 0(x2) # load 0x80400000 from memory into f31
fmadd.s f19, f10, f8, f31, dyn # perform operation
fmadd.s f19, f10, f8, f31, rdn # perform operation
fmadd.s f19, f10, f8, f31, rmm # perform operation
fmadd.s f19, f10, f8, f31, rne # perform operation
fmadd.s f19, f10, f8, f31, rtz # perform operation
fmadd.s f19, f10, f8, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f10, f8, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f10, f8, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x1)
li x2, 0xc549cf718d5494f8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f10, 0(x2) # load 0x80000001 from memory into f10
li x3, 0x65f32b329407a4d # load x3 with value 0x65f32b329407a4d
sw x3, 0(x2) # store 0x65f32b329407a4d in memory
flw f30, 0(x2) # load 0x65f32b329407a4d from memory into f30
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f31, 0(x2) # load 0x00000001 from memory into f31
fmadd.s f2, f10, f30, f31, dyn # perform operation
fmadd.s f2, f10, f30, f31, rdn # perform operation
fmadd.s f2, f10, f30, f31, rmm # perform operation
fmadd.s f2, f10, f30, f31, rne # perform operation
fmadd.s f2, f10, f30, f31, rtz # perform operation
fmadd.s f2, f10, f30, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f30, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f30, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f30, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f30, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f30, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x80000001)
li x9, 0x23e098dd26ff9f1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f6, 0(x2) # load 0x80000001 from memory into f6
li x3, 0xd5322e415214b76e # load x3 with value 0xd5322e415214b76e
sw x3, 0(x2) # store 0xd5322e415214b76e in memory
flw f27, 0(x2) # load 0xd5322e415214b76e from memory into f27
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f9, f6, f27, f1, dyn # perform operation
fmadd.s f9, f6, f27, f1, rdn # perform operation
fmadd.s f9, f6, f27, f1, rmm # perform operation
fmadd.s f9, f6, f27, f1, rne # perform operation
fmadd.s f9, f6, f27, f1, rtz # perform operation
fmadd.s f9, f6, f27, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f6, f27, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f6, f27, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f6, f27, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f6, f27, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f6, f27, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800000)
li x13, 0x3dd9297dc8669886 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f12, 0(x2) # load 0x80000001 from memory into f12
li x3, 0x33a3c612e299619a # load x3 with value 0x33a3c612e299619a
sw x3, 0(x2) # store 0x33a3c612e299619a in memory
flw f10, 0(x2) # load 0x33a3c612e299619a from memory into f10
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f23, 0(x2) # load 0x7f800000 from memory into f23
fmadd.s f13, f12, f10, f23, dyn # perform operation
fmadd.s f13, f12, f10, f23, rdn # perform operation
fmadd.s f13, f12, f10, f23, rmm # perform operation
fmadd.s f13, f12, f10, f23, rne # perform operation
fmadd.s f13, f12, f10, f23, rtz # perform operation
fmadd.s f13, f12, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f12, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f12, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0xff800000)
li x1, 0x5a5819fd9b2214f9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0xebe851c54fbb0446 # load x3 with value 0xebe851c54fbb0446
sw x3, 0(x2) # store 0xebe851c54fbb0446 in memory
flw f13, 0(x2) # load 0xebe851c54fbb0446 from memory into f13
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fmadd.s f1, f22, f13, f8, dyn # perform operation
fmadd.s f1, f22, f13, f8, rdn # perform operation
fmadd.s f1, f22, f13, f8, rmm # perform operation
fmadd.s f1, f22, f13, f8, rne # perform operation
fmadd.s f1, f22, f13, f8, rtz # perform operation
fmadd.s f1, f22, f13, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f22, f13, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f22, f13, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fc00000)
li x17, 0x430a98af53de4b8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f26, 0(x2) # load 0x80000001 from memory into f26
li x3, 0xfe8ea224a741a571 # load x3 with value 0xfe8ea224a741a571
sw x3, 0(x2) # store 0xfe8ea224a741a571 in memory
flw f31, 0(x2) # load 0xfe8ea224a741a571 from memory into f31
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
fmadd.s f17, f26, f31, f19, dyn # perform operation
fmadd.s f17, f26, f31, f19, rdn # perform operation
fmadd.s f17, f26, f31, f19, rmm # perform operation
fmadd.s f17, f26, f31, f19, rne # perform operation
fmadd.s f17, f26, f31, f19, rtz # perform operation
fmadd.s f17, f26, f31, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f26, f31, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f26, f31, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fffffff)
li x19, 0x039edc4313ce27de # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f22, 0(x2) # load 0x80000001 from memory into f22
li x3, 0x7c26eeab1da98d3e # load x3 with value 0x7c26eeab1da98d3e
sw x3, 0(x2) # store 0x7c26eeab1da98d3e in memory
flw f21, 0(x2) # load 0x7c26eeab1da98d3e from memory into f21
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmadd.s f19, f22, f21, f11, dyn # perform operation
fmadd.s f19, f22, f21, f11, rdn # perform operation
fmadd.s f19, f22, f21, f11, rmm # perform operation
fmadd.s f19, f22, f21, f11, rne # perform operation
fmadd.s f19, f22, f21, f11, rtz # perform operation
fmadd.s f19, f22, f21, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f22, f21, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f22, f21, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f22, f21, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f22, f21, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f22, f21, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7f800001)
li x31, 0x1810d8e8c89c0acc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xe7e4e4a07bdbea2c # load x3 with value 0xe7e4e4a07bdbea2c
sw x3, 0(x2) # store 0xe7e4e4a07bdbea2c in memory
flw f6, 0(x2) # load 0xe7e4e4a07bdbea2c from memory into f6
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
fmadd.s f31, f23, f6, f17, dyn # perform operation
fmadd.s f31, f23, f6, f17, rdn # perform operation
fmadd.s f31, f23, f6, f17, rmm # perform operation
fmadd.s f31, f23, f6, f17, rne # perform operation
fmadd.s f31, f23, f6, f17, rtz # perform operation
fmadd.s f31, f23, f6, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f23, f6, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f23, f6, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f23, f6, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f23, f6, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f23, f6, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7fbfffff)
li x16, 0xc3e97cd1ffc6a5a7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f23, 0(x2) # load 0x80000001 from memory into f23
li x3, 0xf7d9715c5164ff79 # load x3 with value 0xf7d9715c5164ff79
sw x3, 0(x2) # store 0xf7d9715c5164ff79 in memory
flw f30, 0(x2) # load 0xf7d9715c5164ff79 from memory into f30
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmadd.s f16, f23, f30, f21, dyn # perform operation
fmadd.s f16, f23, f30, f21, rdn # perform operation
fmadd.s f16, f23, f30, f21, rmm # perform operation
fmadd.s f16, f23, f30, f21, rne # perform operation
fmadd.s f16, f23, f30, f21, rtz # perform operation
fmadd.s f16, f23, f30, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f30, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f30, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x7ef8654f)
li x1, 0xe365c7a2b4fdc6df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f20, 0(x2) # load 0x80000001 from memory into f20
li x3, 0x6aeceda1f63f786b # load x3 with value 0x6aeceda1f63f786b
sw x3, 0(x2) # store 0x6aeceda1f63f786b in memory
flw f30, 0(x2) # load 0x6aeceda1f63f786b from memory into f30
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f1, f20, f30, f23, dyn # perform operation
fmadd.s f1, f20, f30, f23, rdn # perform operation
fmadd.s f1, f20, f30, f23, rmm # perform operation
fmadd.s f1, f20, f30, f23, rne # perform operation
fmadd.s f1, f20, f30, f23, rtz # perform operation
fmadd.s f1, f20, f30, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f20, f30, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f20, f30, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x80000001 fs3 = 0x813d9ab0)
li x22, 0xa4f9acbb4b317a4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
li x3, 0xeadbf8a3685f0792 # load x3 with value 0xeadbf8a3685f0792
sw x3, 0(x2) # store 0xeadbf8a3685f0792 in memory
flw f29, 0(x2) # load 0xeadbf8a3685f0792 from memory into f29
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
fmadd.s f22, f24, f29, f30, dyn # perform operation
fmadd.s f22, f24, f29, f30, rdn # perform operation
fmadd.s f22, f24, f29, f30, rmm # perform operation
fmadd.s f22, f24, f29, f30, rne # perform operation
fmadd.s f22, f24, f29, f30, rtz # perform operation
fmadd.s f22, f24, f29, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f24, f29, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f24, f29, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x0)
li x16, 0x42386e99107b4893 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x923d3246846d1d2a # load x3 with value 0x923d3246846d1d2a
sw x3, 0(x2) # store 0x923d3246846d1d2a in memory
flw f19, 0(x2) # load 0x923d3246846d1d2a from memory into f19
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f30, 0(x2) # load 0x00000000 from memory into f30
fmadd.s f16, f1, f19, f30, dyn # perform operation
fmadd.s f16, f1, f19, f30, rdn # perform operation
fmadd.s f16, f1, f19, f30, rmm # perform operation
fmadd.s f16, f1, f19, f30, rne # perform operation
fmadd.s f16, f1, f19, f30, rtz # perform operation
fmadd.s f16, f1, f19, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f1, f19, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f1, f19, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f1, f19, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f1, f19, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f1, f19, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000000)
li x21, 0x827d28bdb581ea70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0xb99b02efb8e47673 # load x3 with value 0xb99b02efb8e47673
sw x3, 0(x2) # store 0xb99b02efb8e47673 in memory
flw f5, 0(x2) # load 0xb99b02efb8e47673 from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f27, 0(x2) # load 0x80000000 from memory into f27
fmadd.s f21, f25, f5, f27, dyn # perform operation
fmadd.s f21, f25, f5, f27, rdn # perform operation
fmadd.s f21, f25, f5, f27, rmm # perform operation
fmadd.s f21, f25, f5, f27, rne # perform operation
fmadd.s f21, f25, f5, f27, rtz # perform operation
fmadd.s f21, f25, f5, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f25, f5, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f25, f5, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3f800000)
li x8, 0x4145038aafd0555a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f16, 0(x2) # load 0x7f800000 from memory into f16
li x3, 0xf99acb17e60633ee # load x3 with value 0xf99acb17e60633ee
sw x3, 0(x2) # store 0xf99acb17e60633ee in memory
flw f18, 0(x2) # load 0xf99acb17e60633ee from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f8, f16, f18, f3, dyn # perform operation
fmadd.s f8, f16, f18, f3, rdn # perform operation
fmadd.s f8, f16, f18, f3, rmm # perform operation
fmadd.s f8, f16, f18, f3, rne # perform operation
fmadd.s f8, f16, f18, f3, rtz # perform operation
fmadd.s f8, f16, f18, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f16, f18, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f16, f18, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbf800000)
li x20, 0xd2525be28e784dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x5de65f2729f81815 # load x3 with value 0x5de65f2729f81815
sw x3, 0(x2) # store 0x5de65f2729f81815 in memory
flw f18, 0(x2) # load 0x5de65f2729f81815 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f16, 0(x2) # load 0xbf800000 from memory into f16
fmadd.s f20, f29, f18, f16, dyn # perform operation
fmadd.s f20, f29, f18, f16, rdn # perform operation
fmadd.s f20, f29, f18, f16, rmm # perform operation
fmadd.s f20, f29, f18, f16, rne # perform operation
fmadd.s f20, f29, f18, f16, rtz # perform operation
fmadd.s f20, f29, f18, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f29, f18, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f29, f18, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x3fc00000)
li x2, 0x200f426ed2a1f43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f27, 0(x2) # load 0x7f800000 from memory into f27
li x3, 0x54c7089ea1807428 # load x3 with value 0x54c7089ea1807428
sw x3, 0(x2) # store 0x54c7089ea1807428 in memory
flw f23, 0(x2) # load 0x54c7089ea1807428 from memory into f23
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f8, 0(x2) # load 0x3fc00000 from memory into f8
fmadd.s f2, f27, f23, f8, dyn # perform operation
fmadd.s f2, f27, f23, f8, rdn # perform operation
fmadd.s f2, f27, f23, f8, rmm # perform operation
fmadd.s f2, f27, f23, f8, rne # perform operation
fmadd.s f2, f27, f23, f8, rtz # perform operation
fmadd.s f2, f27, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xbfc00000)
li x15, 0xb5457972e77e8a8a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x6e4852b05eeb33ee # load x3 with value 0x6e4852b05eeb33ee
sw x3, 0(x2) # store 0x6e4852b05eeb33ee in memory
flw f2, 0(x2) # load 0x6e4852b05eeb33ee from memory into f2
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f3, 0(x2) # load 0xbfc00000 from memory into f3
fmadd.s f15, f18, f2, f3, dyn # perform operation
fmadd.s f15, f18, f2, f3, rdn # perform operation
fmadd.s f15, f18, f2, f3, rmm # perform operation
fmadd.s f15, f18, f2, f3, rne # perform operation
fmadd.s f15, f18, f2, f3, rtz # perform operation
fmadd.s f15, f18, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f18, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f18, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x40000000)
li x20, 0x7f3bd35f0e174fbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x3292ead4ea41491f # load x3 with value 0x3292ead4ea41491f
sw x3, 0(x2) # store 0x3292ead4ea41491f in memory
flw f24, 0(x2) # load 0x3292ead4ea41491f from memory into f24
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmadd.s f20, f5, f24, f12, dyn # perform operation
fmadd.s f20, f5, f24, f12, rdn # perform operation
fmadd.s f20, f5, f24, f12, rmm # perform operation
fmadd.s f20, f5, f24, f12, rne # perform operation
fmadd.s f20, f5, f24, f12, rtz # perform operation
fmadd.s f20, f5, f24, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f5, f24, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f5, f24, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f5, f24, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f5, f24, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f5, f24, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xc0000000)
li x24, 0x669d0fc6c17092d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f22, 0(x2) # load 0x7f800000 from memory into f22
li x3, 0xbe30638b1ca35343 # load x3 with value 0xbe30638b1ca35343
sw x3, 0(x2) # store 0xbe30638b1ca35343 in memory
flw f20, 0(x2) # load 0xbe30638b1ca35343 from memory into f20
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f3, 0(x2) # load 0xc0000000 from memory into f3
fmadd.s f24, f22, f20, f3, dyn # perform operation
fmadd.s f24, f22, f20, f3, rdn # perform operation
fmadd.s f24, f22, f20, f3, rmm # perform operation
fmadd.s f24, f22, f20, f3, rne # perform operation
fmadd.s f24, f22, f20, f3, rtz # perform operation
fmadd.s f24, f22, f20, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f22, f20, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f22, f20, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x800000)
li x18, 0x14dc20d906de3eb0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
li x3, 0xc32b269ef5b0779b # load x3 with value 0xc32b269ef5b0779b
sw x3, 0(x2) # store 0xc32b269ef5b0779b in memory
flw f13, 0(x2) # load 0xc32b269ef5b0779b from memory into f13
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f22, 0(x2) # load 0x00800000 from memory into f22
fmadd.s f18, f6, f13, f22, dyn # perform operation
fmadd.s f18, f6, f13, f22, rdn # perform operation
fmadd.s f18, f6, f13, f22, rmm # perform operation
fmadd.s f18, f6, f13, f22, rne # perform operation
fmadd.s f18, f6, f13, f22, rtz # perform operation
fmadd.s f18, f6, f13, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f6, f13, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f6, f13, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80800000)
li x25, 0x8083db17d1db8540 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0x470d6852a1cdcae5 # load x3 with value 0x470d6852a1cdcae5
sw x3, 0(x2) # store 0x470d6852a1cdcae5 in memory
flw f9, 0(x2) # load 0x470d6852a1cdcae5 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f11, 0(x2) # load 0x80800000 from memory into f11
fmadd.s f25, f24, f9, f11, dyn # perform operation
fmadd.s f25, f24, f9, f11, rdn # perform operation
fmadd.s f25, f24, f9, f11, rmm # perform operation
fmadd.s f25, f24, f9, f11, rne # perform operation
fmadd.s f25, f24, f9, f11, rtz # perform operation
fmadd.s f25, f24, f9, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f24, f9, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f24, f9, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f24, f9, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f24, f9, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f24, f9, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f7fffff)
li x27, 0x55892244519ec778 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f2, 0(x2) # load 0x7f800000 from memory into f2
li x3, 0x7477bddda02b9110 # load x3 with value 0x7477bddda02b9110
sw x3, 0(x2) # store 0x7477bddda02b9110 in memory
flw f9, 0(x2) # load 0x7477bddda02b9110 from memory into f9
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f22, 0(x2) # load 0x7f7fffff from memory into f22
fmadd.s f27, f2, f9, f22, dyn # perform operation
fmadd.s f27, f2, f9, f22, rdn # perform operation
fmadd.s f27, f2, f9, f22, rmm # perform operation
fmadd.s f27, f2, f9, f22, rne # perform operation
fmadd.s f27, f2, f9, f22, rtz # perform operation
fmadd.s f27, f2, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f2, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f2, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff7fffff)
li x2, 0x54c7f937cd70d279 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xe2eba2ae3e7611f0 # load x3 with value 0xe2eba2ae3e7611f0
sw x3, 0(x2) # store 0xe2eba2ae3e7611f0 in memory
flw f8, 0(x2) # load 0xe2eba2ae3e7611f0 from memory into f8
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f18, 0(x2) # load 0xff7fffff from memory into f18
fmadd.s f2, f9, f8, f18, dyn # perform operation
fmadd.s f2, f9, f8, f18, rdn # perform operation
fmadd.s f2, f9, f8, f18, rmm # perform operation
fmadd.s f2, f9, f8, f18, rne # perform operation
fmadd.s f2, f9, f8, f18, rtz # perform operation
fmadd.s f2, f9, f8, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f9, f8, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f9, f8, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffff)
li x1, 0x8c64f1f3d275edbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f12, 0(x2) # load 0x7f800000 from memory into f12
li x3, 0x922611ccdfa24f8d # load x3 with value 0x922611ccdfa24f8d
sw x3, 0(x2) # store 0x922611ccdfa24f8d in memory
flw f26, 0(x2) # load 0x922611ccdfa24f8d from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f14, 0(x2) # load 0x007fffff from memory into f14
fmadd.s f1, f12, f26, f14, dyn # perform operation
fmadd.s f1, f12, f26, f14, rdn # perform operation
fmadd.s f1, f12, f26, f14, rmm # perform operation
fmadd.s f1, f12, f26, f14, rne # perform operation
fmadd.s f1, f12, f26, f14, rtz # perform operation
fmadd.s f1, f12, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f12, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f12, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x807fffff)
li x13, 0xde7bfdb1e78c43df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x3d3ecbd82160dc16 # load x3 with value 0x3d3ecbd82160dc16
sw x3, 0(x2) # store 0x3d3ecbd82160dc16 in memory
flw f7, 0(x2) # load 0x3d3ecbd82160dc16 from memory into f7
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f16, 0(x2) # load 0x807fffff from memory into f16
fmadd.s f13, f29, f7, f16, dyn # perform operation
fmadd.s f13, f29, f7, f16, rdn # perform operation
fmadd.s f13, f29, f7, f16, rmm # perform operation
fmadd.s f13, f29, f7, f16, rne # perform operation
fmadd.s f13, f29, f7, f16, rtz # perform operation
fmadd.s f13, f29, f7, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f7, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f7, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x400000)
li x29, 0x996fd24947ae9739 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0xbb261e2b8b0b3d80 # load x3 with value 0xbb261e2b8b0b3d80
sw x3, 0(x2) # store 0xbb261e2b8b0b3d80 in memory
flw f7, 0(x2) # load 0xbb261e2b8b0b3d80 from memory into f7
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f29, f11, f7, f8, dyn # perform operation
fmadd.s f29, f11, f7, f8, rdn # perform operation
fmadd.s f29, f11, f7, f8, rmm # perform operation
fmadd.s f29, f11, f7, f8, rne # perform operation
fmadd.s f29, f11, f7, f8, rtz # perform operation
fmadd.s f29, f11, f7, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f11, f7, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f11, f7, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f11, f7, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f11, f7, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f11, f7, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80400000)
li x17, 0xade62f449b4fdc7c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
li x3, 0x8d37e56a74ac882f # load x3 with value 0x8d37e56a74ac882f
sw x3, 0(x2) # store 0x8d37e56a74ac882f in memory
flw f1, 0(x2) # load 0x8d37e56a74ac882f from memory into f1
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f17, f25, f1, f11, dyn # perform operation
fmadd.s f17, f25, f1, f11, rdn # perform operation
fmadd.s f17, f25, f1, f11, rmm # perform operation
fmadd.s f17, f25, f1, f11, rne # perform operation
fmadd.s f17, f25, f1, f11, rtz # perform operation
fmadd.s f17, f25, f1, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f25, f1, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f25, f1, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x1)
li x12, 0x764296a997bd1d4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f19, 0(x2) # load 0x7f800000 from memory into f19
li x3, 0x534cb2a5d40288ea # load x3 with value 0x534cb2a5d40288ea
sw x3, 0(x2) # store 0x534cb2a5d40288ea in memory
flw f9, 0(x2) # load 0x534cb2a5d40288ea from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f22, 0(x2) # load 0x00000001 from memory into f22
fmadd.s f12, f19, f9, f22, dyn # perform operation
fmadd.s f12, f19, f9, f22, rdn # perform operation
fmadd.s f12, f19, f9, f22, rmm # perform operation
fmadd.s f12, f19, f9, f22, rne # perform operation
fmadd.s f12, f19, f9, f22, rtz # perform operation
fmadd.s f12, f19, f9, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f19, f9, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f19, f9, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x80000001)
li x21, 0xca7c4621a4c98655 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f11, 0(x2) # load 0x7f800000 from memory into f11
li x3, 0x87de2a511a00cd6d # load x3 with value 0x87de2a511a00cd6d
sw x3, 0(x2) # store 0x87de2a511a00cd6d in memory
flw f23, 0(x2) # load 0x87de2a511a00cd6d from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fmadd.s f21, f11, f23, f19, dyn # perform operation
fmadd.s f21, f11, f23, f19, rdn # perform operation
fmadd.s f21, f11, f23, f19, rmm # perform operation
fmadd.s f21, f11, f23, f19, rne # perform operation
fmadd.s f21, f11, f23, f19, rtz # perform operation
fmadd.s f21, f11, f23, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f11, f23, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f11, f23, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800000)
li x1, 0x77f2c05cfbb3ae26 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f9, 0(x2) # load 0x7f800000 from memory into f9
li x3, 0xe5b4c8f9975060a6 # load x3 with value 0xe5b4c8f9975060a6
sw x3, 0(x2) # store 0xe5b4c8f9975060a6 in memory
flw f13, 0(x2) # load 0xe5b4c8f9975060a6 from memory into f13
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmadd.s f1, f9, f13, f6, dyn # perform operation
fmadd.s f1, f9, f13, f6, rdn # perform operation
fmadd.s f1, f9, f13, f6, rmm # perform operation
fmadd.s f1, f9, f13, f6, rne # perform operation
fmadd.s f1, f9, f13, f6, rtz # perform operation
fmadd.s f1, f9, f13, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f9, f13, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f9, f13, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f9, f13, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f9, f13, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f9, f13, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0xff800000)
li x15, 0x2172b579d96dcd91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f1, 0(x2) # load 0x7f800000 from memory into f1
li x3, 0x8c9bc01e79adadeb # load x3 with value 0x8c9bc01e79adadeb
sw x3, 0(x2) # store 0x8c9bc01e79adadeb in memory
flw f19, 0(x2) # load 0x8c9bc01e79adadeb from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f12, 0(x2) # load 0xff800000 from memory into f12
fmadd.s f15, f1, f19, f12, dyn # perform operation
fmadd.s f15, f1, f19, f12, rdn # perform operation
fmadd.s f15, f1, f19, f12, rmm # perform operation
fmadd.s f15, f1, f19, f12, rne # perform operation
fmadd.s f15, f1, f19, f12, rtz # perform operation
fmadd.s f15, f1, f19, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f1, f19, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f1, f19, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f1, f19, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f1, f19, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f1, f19, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fc00000)
li x10, 0x8d747f4b041a6794 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
li x3, 0x5792df546b9dbf82 # load x3 with value 0x5792df546b9dbf82
sw x3, 0(x2) # store 0x5792df546b9dbf82 in memory
flw f26, 0(x2) # load 0x5792df546b9dbf82 from memory into f26
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
fmadd.s f10, f5, f26, f14, dyn # perform operation
fmadd.s f10, f5, f26, f14, rdn # perform operation
fmadd.s f10, f5, f26, f14, rmm # perform operation
fmadd.s f10, f5, f26, f14, rne # perform operation
fmadd.s f10, f5, f26, f14, rtz # perform operation
fmadd.s f10, f5, f26, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f5, f26, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f5, f26, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fffffff)
li x23, 0xe2e679eff459be35 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
li x3, 0xf00d102a1e9e627 # load x3 with value 0xf00d102a1e9e627
sw x3, 0(x2) # store 0xf00d102a1e9e627 in memory
flw f17, 0(x2) # load 0xf00d102a1e9e627 from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmadd.s f23, f24, f17, f4, dyn # perform operation
fmadd.s f23, f24, f17, f4, rdn # perform operation
fmadd.s f23, f24, f17, f4, rmm # perform operation
fmadd.s f23, f24, f17, f4, rne # perform operation
fmadd.s f23, f24, f17, f4, rtz # perform operation
fmadd.s f23, f24, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f24, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f24, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f24, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f24, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f24, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7f800001)
li x19, 0x11c3f7e85d12ca09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f29, 0(x2) # load 0x7f800000 from memory into f29
li x3, 0x2f16ec581c1d4d19 # load x3 with value 0x2f16ec581c1d4d19
sw x3, 0(x2) # store 0x2f16ec581c1d4d19 in memory
flw f17, 0(x2) # load 0x2f16ec581c1d4d19 from memory into f17
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
fmadd.s f19, f29, f17, f21, dyn # perform operation
fmadd.s f19, f29, f17, f21, rdn # perform operation
fmadd.s f19, f29, f17, f21, rmm # perform operation
fmadd.s f19, f29, f17, f21, rne # perform operation
fmadd.s f19, f29, f17, f21, rtz # perform operation
fmadd.s f19, f29, f17, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f29, f17, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f29, f17, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7fbfffff)
li x27, 0x0c5e3beffb9ea6b0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
li x3, 0x244eadb8df2fb12 # load x3 with value 0x244eadb8df2fb12
sw x3, 0(x2) # store 0x244eadb8df2fb12 in memory
flw f11, 0(x2) # load 0x244eadb8df2fb12 from memory into f11
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
fmadd.s f27, f30, f11, f25, dyn # perform operation
fmadd.s f27, f30, f11, f25, rdn # perform operation
fmadd.s f27, f30, f11, f25, rmm # perform operation
fmadd.s f27, f30, f11, f25, rne # perform operation
fmadd.s f27, f30, f11, f25, rtz # perform operation
fmadd.s f27, f30, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f30, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f30, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f30, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f30, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f30, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x7ef8654f)
li x10, 0x59de41d69ee93c81 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f18, 0(x2) # load 0x7f800000 from memory into f18
li x3, 0x5dae9d440ec74653 # load x3 with value 0x5dae9d440ec74653
sw x3, 0(x2) # store 0x5dae9d440ec74653 in memory
flw f28, 0(x2) # load 0x5dae9d440ec74653 from memory into f28
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fmadd.s f10, f18, f28, f26, dyn # perform operation
fmadd.s f10, f18, f28, f26, rdn # perform operation
fmadd.s f10, f18, f28, f26, rmm # perform operation
fmadd.s f10, f18, f28, f26, rne # perform operation
fmadd.s f10, f18, f28, f26, rtz # perform operation
fmadd.s f10, f18, f28, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f28, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f28, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800000 fs3 = 0x813d9ab0)
li x16, 0xfe94ddae0a751676 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
li x3, 0x3a444e5c5c965e9c # load x3 with value 0x3a444e5c5c965e9c
sw x3, 0(x2) # store 0x3a444e5c5c965e9c in memory
flw f4, 0(x2) # load 0x3a444e5c5c965e9c from memory into f4
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
fmadd.s f16, f28, f4, f12, dyn # perform operation
fmadd.s f16, f28, f4, f12, rdn # perform operation
fmadd.s f16, f28, f4, f12, rmm # perform operation
fmadd.s f16, f28, f4, f12, rne # perform operation
fmadd.s f16, f28, f4, f12, rtz # perform operation
fmadd.s f16, f28, f4, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f28, f4, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f28, f4, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x0)
li x14, 0xa7138c570f935d3c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x893cee259d1163a7 # load x3 with value 0x893cee259d1163a7
sw x3, 0(x2) # store 0x893cee259d1163a7 in memory
flw f1, 0(x2) # load 0x893cee259d1163a7 from memory into f1
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f17, 0(x2) # load 0x00000000 from memory into f17
fmadd.s f14, f27, f1, f17, dyn # perform operation
fmadd.s f14, f27, f1, f17, rdn # perform operation
fmadd.s f14, f27, f1, f17, rmm # perform operation
fmadd.s f14, f27, f1, f17, rne # perform operation
fmadd.s f14, f27, f1, f17, rtz # perform operation
fmadd.s f14, f27, f1, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f27, f1, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f27, f1, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f27, f1, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f27, f1, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f27, f1, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000000)
li x10, 0x1c0717cab4063bf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x877ee19204fb92fc # load x3 with value 0x877ee19204fb92fc
sw x3, 0(x2) # store 0x877ee19204fb92fc in memory
flw f5, 0(x2) # load 0x877ee19204fb92fc from memory into f5
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmadd.s f10, f13, f5, f30, dyn # perform operation
fmadd.s f10, f13, f5, f30, rdn # perform operation
fmadd.s f10, f13, f5, f30, rmm # perform operation
fmadd.s f10, f13, f5, f30, rne # perform operation
fmadd.s f10, f13, f5, f30, rtz # perform operation
fmadd.s f10, f13, f5, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f13, f5, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f13, f5, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f13, f5, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f13, f5, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f13, f5, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3f800000)
li x9, 0x1d52dc38576e8600 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0xa0c59d31e33eaa94 # load x3 with value 0xa0c59d31e33eaa94
sw x3, 0(x2) # store 0xa0c59d31e33eaa94 in memory
flw f16, 0(x2) # load 0xa0c59d31e33eaa94 from memory into f16
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f23, 0(x2) # load 0x3f800000 from memory into f23
fmadd.s f9, f21, f16, f23, dyn # perform operation
fmadd.s f9, f21, f16, f23, rdn # perform operation
fmadd.s f9, f21, f16, f23, rmm # perform operation
fmadd.s f9, f21, f16, f23, rne # perform operation
fmadd.s f9, f21, f16, f23, rtz # perform operation
fmadd.s f9, f21, f16, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f21, f16, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f21, f16, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f21, f16, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f21, f16, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f21, f16, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbf800000)
li x20, 0xb32aa6a04caafc7f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x7d4889eb5b614f5e # load x3 with value 0x7d4889eb5b614f5e
sw x3, 0(x2) # store 0x7d4889eb5b614f5e in memory
flw f31, 0(x2) # load 0x7d4889eb5b614f5e from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f3, 0(x2) # load 0xbf800000 from memory into f3
fmadd.s f20, f21, f31, f3, dyn # perform operation
fmadd.s f20, f21, f31, f3, rdn # perform operation
fmadd.s f20, f21, f31, f3, rmm # perform operation
fmadd.s f20, f21, f31, f3, rne # perform operation
fmadd.s f20, f21, f31, f3, rtz # perform operation
fmadd.s f20, f21, f31, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f21, f31, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f21, f31, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x3fc00000)
li x6, 0x34678e571cef63c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f19, 0(x2) # load 0xff800000 from memory into f19
li x3, 0x19645826dc401f7a # load x3 with value 0x19645826dc401f7a
sw x3, 0(x2) # store 0x19645826dc401f7a in memory
flw f28, 0(x2) # load 0x19645826dc401f7a from memory into f28
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f15, 0(x2) # load 0x3fc00000 from memory into f15
fmadd.s f6, f19, f28, f15, dyn # perform operation
fmadd.s f6, f19, f28, f15, rdn # perform operation
fmadd.s f6, f19, f28, f15, rmm # perform operation
fmadd.s f6, f19, f28, f15, rne # perform operation
fmadd.s f6, f19, f28, f15, rtz # perform operation
fmadd.s f6, f19, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f19, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f19, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xbfc00000)
li x3, 0x94a0b69a69ece1c7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0xef7c825e6fc1a695 # load x3 with value 0xef7c825e6fc1a695
sw x3, 0(x2) # store 0xef7c825e6fc1a695 in memory
flw f22, 0(x2) # load 0xef7c825e6fc1a695 from memory into f22
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f28, 0(x2) # load 0xbfc00000 from memory into f28
fmadd.s f3, f23, f22, f28, dyn # perform operation
fmadd.s f3, f23, f22, f28, rdn # perform operation
fmadd.s f3, f23, f22, f28, rmm # perform operation
fmadd.s f3, f23, f22, f28, rne # perform operation
fmadd.s f3, f23, f22, f28, rtz # perform operation
fmadd.s f3, f23, f22, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f23, f22, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f23, f22, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f23, f22, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f23, f22, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f23, f22, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x40000000)
li x12, 0x57ce0b3191f290d1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x318fc694d3e29121 # load x3 with value 0x318fc694d3e29121
sw x3, 0(x2) # store 0x318fc694d3e29121 in memory
flw f22, 0(x2) # load 0x318fc694d3e29121 from memory into f22
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmadd.s f12, f31, f22, f27, dyn # perform operation
fmadd.s f12, f31, f22, f27, rdn # perform operation
fmadd.s f12, f31, f22, f27, rmm # perform operation
fmadd.s f12, f31, f22, f27, rne # perform operation
fmadd.s f12, f31, f22, f27, rtz # perform operation
fmadd.s f12, f31, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f31, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f31, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f31, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f31, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f31, f22, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xc0000000)
li x27, 0xc81b5aa6ca501977 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0xcaf1f9d6ddbca95f # load x3 with value 0xcaf1f9d6ddbca95f
sw x3, 0(x2) # store 0xcaf1f9d6ddbca95f in memory
flw f4, 0(x2) # load 0xcaf1f9d6ddbca95f from memory into f4
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f25, 0(x2) # load 0xc0000000 from memory into f25
fmadd.s f27, f16, f4, f25, dyn # perform operation
fmadd.s f27, f16, f4, f25, rdn # perform operation
fmadd.s f27, f16, f4, f25, rmm # perform operation
fmadd.s f27, f16, f4, f25, rne # perform operation
fmadd.s f27, f16, f4, f25, rtz # perform operation
fmadd.s f27, f16, f4, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f4, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f4, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f4, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f4, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f4, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x800000)
li x30, 0x29d79db74f9ce6ef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x68b481f00ae7faaa # load x3 with value 0x68b481f00ae7faaa
sw x3, 0(x2) # store 0x68b481f00ae7faaa in memory
flw f18, 0(x2) # load 0x68b481f00ae7faaa from memory into f18
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f6, 0(x2) # load 0x00800000 from memory into f6
fmadd.s f30, f15, f18, f6, dyn # perform operation
fmadd.s f30, f15, f18, f6, rdn # perform operation
fmadd.s f30, f15, f18, f6, rmm # perform operation
fmadd.s f30, f15, f18, f6, rne # perform operation
fmadd.s f30, f15, f18, f6, rtz # perform operation
fmadd.s f30, f15, f18, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f15, f18, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f15, f18, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80800000)
li x29, 0xad15edbb86efbe98 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f2, 0(x2) # load 0xff800000 from memory into f2
li x3, 0x2d993fb335cb26f6 # load x3 with value 0x2d993fb335cb26f6
sw x3, 0(x2) # store 0x2d993fb335cb26f6 in memory
flw f4, 0(x2) # load 0x2d993fb335cb26f6 from memory into f4
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f26, 0(x2) # load 0x80800000 from memory into f26
fmadd.s f29, f2, f4, f26, dyn # perform operation
fmadd.s f29, f2, f4, f26, rdn # perform operation
fmadd.s f29, f2, f4, f26, rmm # perform operation
fmadd.s f29, f2, f4, f26, rne # perform operation
fmadd.s f29, f2, f4, f26, rtz # perform operation
fmadd.s f29, f2, f4, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f2, f4, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f2, f4, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f2, f4, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f2, f4, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f2, f4, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f7fffff)
li x27, 0x598e9e19c207b365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f21, 0(x2) # load 0xff800000 from memory into f21
li x3, 0x4bcbaed551a6ef9b # load x3 with value 0x4bcbaed551a6ef9b
sw x3, 0(x2) # store 0x4bcbaed551a6ef9b in memory
flw f22, 0(x2) # load 0x4bcbaed551a6ef9b from memory into f22
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f5, 0(x2) # load 0x7f7fffff from memory into f5
fmadd.s f27, f21, f22, f5, dyn # perform operation
fmadd.s f27, f21, f22, f5, rdn # perform operation
fmadd.s f27, f21, f22, f5, rmm # perform operation
fmadd.s f27, f21, f22, f5, rne # perform operation
fmadd.s f27, f21, f22, f5, rtz # perform operation
fmadd.s f27, f21, f22, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f21, f22, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f21, f22, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff7fffff)
li x24, 0x8f2d9b5e622fe1ee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f9, 0(x2) # load 0xff800000 from memory into f9
li x3, 0xc67db8cd32d0ad2c # load x3 with value 0xc67db8cd32d0ad2c
sw x3, 0(x2) # store 0xc67db8cd32d0ad2c in memory
flw f16, 0(x2) # load 0xc67db8cd32d0ad2c from memory into f16
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f8, 0(x2) # load 0xff7fffff from memory into f8
fmadd.s f24, f9, f16, f8, dyn # perform operation
fmadd.s f24, f9, f16, f8, rdn # perform operation
fmadd.s f24, f9, f16, f8, rmm # perform operation
fmadd.s f24, f9, f16, f8, rne # perform operation
fmadd.s f24, f9, f16, f8, rtz # perform operation
fmadd.s f24, f9, f16, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f9, f16, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f9, f16, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f9, f16, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f9, f16, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f9, f16, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffff)
li x11, 0x5b59d82e500b8938 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f3, 0(x2) # load 0xff800000 from memory into f3
li x3, 0x735e8ec7296867a2 # load x3 with value 0x735e8ec7296867a2
sw x3, 0(x2) # store 0x735e8ec7296867a2 in memory
flw f20, 0(x2) # load 0x735e8ec7296867a2 from memory into f20
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmadd.s f11, f3, f20, f21, dyn # perform operation
fmadd.s f11, f3, f20, f21, rdn # perform operation
fmadd.s f11, f3, f20, f21, rmm # perform operation
fmadd.s f11, f3, f20, f21, rne # perform operation
fmadd.s f11, f3, f20, f21, rtz # perform operation
fmadd.s f11, f3, f20, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f3, f20, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f3, f20, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f3, f20, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f3, f20, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f3, f20, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x807fffff)
li x14, 0x262141ec1e6f5985 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
li x3, 0xa2ecb45e6ab77b6c # load x3 with value 0xa2ecb45e6ab77b6c
sw x3, 0(x2) # store 0xa2ecb45e6ab77b6c in memory
flw f18, 0(x2) # load 0xa2ecb45e6ab77b6c from memory into f18
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f30, 0(x2) # load 0x807fffff from memory into f30
fmadd.s f14, f25, f18, f30, dyn # perform operation
fmadd.s f14, f25, f18, f30, rdn # perform operation
fmadd.s f14, f25, f18, f30, rmm # perform operation
fmadd.s f14, f25, f18, f30, rne # perform operation
fmadd.s f14, f25, f18, f30, rtz # perform operation
fmadd.s f14, f25, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f25, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f25, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x400000)
li x7, 0x0736945ef0407484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x51791c127ae11d3a # load x3 with value 0x51791c127ae11d3a
sw x3, 0(x2) # store 0x51791c127ae11d3a in memory
flw f4, 0(x2) # load 0x51791c127ae11d3a from memory into f4
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f21, 0(x2) # load 0x00400000 from memory into f21
fmadd.s f7, f15, f4, f21, dyn # perform operation
fmadd.s f7, f15, f4, f21, rdn # perform operation
fmadd.s f7, f15, f4, f21, rmm # perform operation
fmadd.s f7, f15, f4, f21, rne # perform operation
fmadd.s f7, f15, f4, f21, rtz # perform operation
fmadd.s f7, f15, f4, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f15, f4, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f15, f4, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f15, f4, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f15, f4, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f15, f4, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80400000)
li x28, 0x310554b7707b6d34 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f15, 0(x2) # load 0xff800000 from memory into f15
li x3, 0x4f96d2375d3c22fa # load x3 with value 0x4f96d2375d3c22fa
sw x3, 0(x2) # store 0x4f96d2375d3c22fa in memory
flw f22, 0(x2) # load 0x4f96d2375d3c22fa from memory into f22
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f25, 0(x2) # load 0x80400000 from memory into f25
fmadd.s f28, f15, f22, f25, dyn # perform operation
fmadd.s f28, f15, f22, f25, rdn # perform operation
fmadd.s f28, f15, f22, f25, rmm # perform operation
fmadd.s f28, f15, f22, f25, rne # perform operation
fmadd.s f28, f15, f22, f25, rtz # perform operation
fmadd.s f28, f15, f22, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f15, f22, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f15, f22, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f15, f22, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f15, f22, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f15, f22, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x1)
li x9, 0xe2886bf4e358ace9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f31, 0(x2) # load 0xff800000 from memory into f31
li x3, 0x1e6eb388bc89536b # load x3 with value 0x1e6eb388bc89536b
sw x3, 0(x2) # store 0x1e6eb388bc89536b in memory
flw f20, 0(x2) # load 0x1e6eb388bc89536b from memory into f20
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f26, 0(x2) # load 0x00000001 from memory into f26
fmadd.s f9, f31, f20, f26, dyn # perform operation
fmadd.s f9, f31, f20, f26, rdn # perform operation
fmadd.s f9, f31, f20, f26, rmm # perform operation
fmadd.s f9, f31, f20, f26, rne # perform operation
fmadd.s f9, f31, f20, f26, rtz # perform operation
fmadd.s f9, f31, f20, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f20, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f20, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x80000001)
li x22, 0x39bc0a36426b8829 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f6, 0(x2) # load 0xff800000 from memory into f6
li x3, 0x2b78769182f1382f # load x3 with value 0x2b78769182f1382f
sw x3, 0(x2) # store 0x2b78769182f1382f in memory
flw f7, 0(x2) # load 0x2b78769182f1382f from memory into f7
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f3, 0(x2) # load 0x80000001 from memory into f3
fmadd.s f22, f6, f7, f3, dyn # perform operation
fmadd.s f22, f6, f7, f3, rdn # perform operation
fmadd.s f22, f6, f7, f3, rmm # perform operation
fmadd.s f22, f6, f7, f3, rne # perform operation
fmadd.s f22, f6, f7, f3, rtz # perform operation
fmadd.s f22, f6, f7, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f6, f7, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f6, f7, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800000)
li x2, 0x9d8bb4049f5e23fd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
li x3, 0xdfab84e8fdb47d # load x3 with value 0xdfab84e8fdb47d
sw x3, 0(x2) # store 0xdfab84e8fdb47d in memory
flw f29, 0(x2) # load 0xdfab84e8fdb47d from memory into f29
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f5, 0(x2) # load 0x7f800000 from memory into f5
fmadd.s f2, f8, f29, f5, dyn # perform operation
fmadd.s f2, f8, f29, f5, rdn # perform operation
fmadd.s f2, f8, f29, f5, rmm # perform operation
fmadd.s f2, f8, f29, f5, rne # perform operation
fmadd.s f2, f8, f29, f5, rtz # perform operation
fmadd.s f2, f8, f29, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f29, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f29, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0xff800000)
li x12, 0x3883ebd083260a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f27, 0(x2) # load 0xff800000 from memory into f27
li x3, 0x78f5dbce343cfc46 # load x3 with value 0x78f5dbce343cfc46
sw x3, 0(x2) # store 0x78f5dbce343cfc46 in memory
flw f15, 0(x2) # load 0x78f5dbce343cfc46 from memory into f15
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f25, 0(x2) # load 0xff800000 from memory into f25
fmadd.s f12, f27, f15, f25, dyn # perform operation
fmadd.s f12, f27, f15, f25, rdn # perform operation
fmadd.s f12, f27, f15, f25, rmm # perform operation
fmadd.s f12, f27, f15, f25, rne # perform operation
fmadd.s f12, f27, f15, f25, rtz # perform operation
fmadd.s f12, f27, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f27, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f27, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fc00000)
li x15, 0xa42ea59bd45dc173 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0xddcf8c4f35aeb38e # load x3 with value 0xddcf8c4f35aeb38e
sw x3, 0(x2) # store 0xddcf8c4f35aeb38e in memory
flw f11, 0(x2) # load 0xddcf8c4f35aeb38e from memory into f11
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
fmadd.s f15, f13, f11, f27, dyn # perform operation
fmadd.s f15, f13, f11, f27, rdn # perform operation
fmadd.s f15, f13, f11, f27, rmm # perform operation
fmadd.s f15, f13, f11, f27, rne # perform operation
fmadd.s f15, f13, f11, f27, rtz # perform operation
fmadd.s f15, f13, f11, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f13, f11, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f13, f11, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fffffff)
li x5, 0x39a924a06a640ac1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f23, 0(x2) # load 0xff800000 from memory into f23
li x3, 0x5186cc82cf94a47e # load x3 with value 0x5186cc82cf94a47e
sw x3, 0(x2) # store 0x5186cc82cf94a47e in memory
flw f1, 0(x2) # load 0x5186cc82cf94a47e from memory into f1
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
fmadd.s f5, f23, f1, f2, dyn # perform operation
fmadd.s f5, f23, f1, f2, rdn # perform operation
fmadd.s f5, f23, f1, f2, rmm # perform operation
fmadd.s f5, f23, f1, f2, rne # perform operation
fmadd.s f5, f23, f1, f2, rtz # perform operation
fmadd.s f5, f23, f1, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f23, f1, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f23, f1, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7f800001)
li x16, 0xeac1cceeeac0aee6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
li x3, 0xb8e99d7fc305952 # load x3 with value 0xb8e99d7fc305952
sw x3, 0(x2) # store 0xb8e99d7fc305952 in memory
flw f19, 0(x2) # load 0xb8e99d7fc305952 from memory into f19
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
fmadd.s f16, f18, f19, f31, dyn # perform operation
fmadd.s f16, f18, f19, f31, rdn # perform operation
fmadd.s f16, f18, f19, f31, rmm # perform operation
fmadd.s f16, f18, f19, f31, rne # perform operation
fmadd.s f16, f18, f19, f31, rtz # perform operation
fmadd.s f16, f18, f19, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f18, f19, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f18, f19, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7fbfffff)
li x21, 0x72a19e1fae4afd09 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
li x3, 0x39ea95d91ed5381a # load x3 with value 0x39ea95d91ed5381a
sw x3, 0(x2) # store 0x39ea95d91ed5381a in memory
flw f31, 0(x2) # load 0x39ea95d91ed5381a from memory into f31
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmadd.s f21, f16, f31, f4, dyn # perform operation
fmadd.s f21, f16, f31, f4, rdn # perform operation
fmadd.s f21, f16, f31, f4, rmm # perform operation
fmadd.s f21, f16, f31, f4, rne # perform operation
fmadd.s f21, f16, f31, f4, rtz # perform operation
fmadd.s f21, f16, f31, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f16, f31, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f16, f31, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x7ef8654f)
li x2, 0xdd9112bfe34ed4cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f11, 0(x2) # load 0xff800000 from memory into f11
li x3, 0x2b3897161033b4ec # load x3 with value 0x2b3897161033b4ec
sw x3, 0(x2) # store 0x2b3897161033b4ec in memory
flw f6, 0(x2) # load 0x2b3897161033b4ec from memory into f6
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f5, 0(x2) # load 0x7ef8654f from memory into f5
fmadd.s f2, f11, f6, f5, dyn # perform operation
fmadd.s f2, f11, f6, f5, rdn # perform operation
fmadd.s f2, f11, f6, f5, rmm # perform operation
fmadd.s f2, f11, f6, f5, rne # perform operation
fmadd.s f2, f11, f6, f5, rtz # perform operation
fmadd.s f2, f11, f6, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f11, f6, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f11, f6, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f11, f6, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f11, f6, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f11, f6, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0xff800000 fs3 = 0x813d9ab0)
li x29, 0xc7ead05e07b2bf55 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f13, 0(x2) # load 0xff800000 from memory into f13
li x3, 0x55a4e6efa4f32141 # load x3 with value 0x55a4e6efa4f32141
sw x3, 0(x2) # store 0x55a4e6efa4f32141 in memory
flw f28, 0(x2) # load 0x55a4e6efa4f32141 from memory into f28
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f15, 0(x2) # load 0x813d9ab0 from memory into f15
fmadd.s f29, f13, f28, f15, dyn # perform operation
fmadd.s f29, f13, f28, f15, rdn # perform operation
fmadd.s f29, f13, f28, f15, rmm # perform operation
fmadd.s f29, f13, f28, f15, rne # perform operation
fmadd.s f29, f13, f28, f15, rtz # perform operation
fmadd.s f29, f13, f28, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f13, f28, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f13, f28, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x0)
li x10, 0xf04f24f4edaf6f90 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f18, 0(x2) # load 0x7fc00000 from memory into f18
li x3, 0xfc2bff1254279bc # load x3 with value 0xfc2bff1254279bc
sw x3, 0(x2) # store 0xfc2bff1254279bc in memory
flw f5, 0(x2) # load 0xfc2bff1254279bc from memory into f5
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f9, 0(x2) # load 0x00000000 from memory into f9
fmadd.s f10, f18, f5, f9, dyn # perform operation
fmadd.s f10, f18, f5, f9, rdn # perform operation
fmadd.s f10, f18, f5, f9, rmm # perform operation
fmadd.s f10, f18, f5, f9, rne # perform operation
fmadd.s f10, f18, f5, f9, rtz # perform operation
fmadd.s f10, f18, f5, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f5, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f5, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f5, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f5, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f5, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000000)
li x26, 0x25381780d07a3ba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f17, 0(x2) # load 0x7fc00000 from memory into f17
li x3, 0x47352330d03232b7 # load x3 with value 0x47352330d03232b7
sw x3, 0(x2) # store 0x47352330d03232b7 in memory
flw f18, 0(x2) # load 0x47352330d03232b7 from memory into f18
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f30, 0(x2) # load 0x80000000 from memory into f30
fmadd.s f26, f17, f18, f30, dyn # perform operation
fmadd.s f26, f17, f18, f30, rdn # perform operation
fmadd.s f26, f17, f18, f30, rmm # perform operation
fmadd.s f26, f17, f18, f30, rne # perform operation
fmadd.s f26, f17, f18, f30, rtz # perform operation
fmadd.s f26, f17, f18, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f18, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f18, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3f800000)
li x17, 0x5a5ff759f38ef7a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0xe17905f5da35f90c # load x3 with value 0xe17905f5da35f90c
sw x3, 0(x2) # store 0xe17905f5da35f90c in memory
flw f31, 0(x2) # load 0xe17905f5da35f90c from memory into f31
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f29, 0(x2) # load 0x3f800000 from memory into f29
fmadd.s f17, f28, f31, f29, dyn # perform operation
fmadd.s f17, f28, f31, f29, rdn # perform operation
fmadd.s f17, f28, f31, f29, rmm # perform operation
fmadd.s f17, f28, f31, f29, rne # perform operation
fmadd.s f17, f28, f31, f29, rtz # perform operation
fmadd.s f17, f28, f31, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f28, f31, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f28, f31, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbf800000)
li x17, 0x6a77b237d8b2472d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f8, 0(x2) # load 0x7fc00000 from memory into f8
li x3, 0x9aea2ebc9d930102 # load x3 with value 0x9aea2ebc9d930102
sw x3, 0(x2) # store 0x9aea2ebc9d930102 in memory
flw f3, 0(x2) # load 0x9aea2ebc9d930102 from memory into f3
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmadd.s f17, f8, f3, f22, dyn # perform operation
fmadd.s f17, f8, f3, f22, rdn # perform operation
fmadd.s f17, f8, f3, f22, rmm # perform operation
fmadd.s f17, f8, f3, f22, rne # perform operation
fmadd.s f17, f8, f3, f22, rtz # perform operation
fmadd.s f17, f8, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f8, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f8, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x3fc00000)
li x21, 0xb400e3415770343f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f13, 0(x2) # load 0x7fc00000 from memory into f13
li x3, 0x73e75a5375fa1d9c # load x3 with value 0x73e75a5375fa1d9c
sw x3, 0(x2) # store 0x73e75a5375fa1d9c in memory
flw f27, 0(x2) # load 0x73e75a5375fa1d9c from memory into f27
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f11, 0(x2) # load 0x3fc00000 from memory into f11
fmadd.s f21, f13, f27, f11, dyn # perform operation
fmadd.s f21, f13, f27, f11, rdn # perform operation
fmadd.s f21, f13, f27, f11, rmm # perform operation
fmadd.s f21, f13, f27, f11, rne # perform operation
fmadd.s f21, f13, f27, f11, rtz # perform operation
fmadd.s f21, f13, f27, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f13, f27, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f13, f27, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f13, f27, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f13, f27, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f13, f27, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xbfc00000)
li x25, 0xe621468d4fbae971 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f7, 0(x2) # load 0x7fc00000 from memory into f7
li x3, 0x35ee9419555f7a8f # load x3 with value 0x35ee9419555f7a8f
sw x3, 0(x2) # store 0x35ee9419555f7a8f in memory
flw f1, 0(x2) # load 0x35ee9419555f7a8f from memory into f1
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f19, 0(x2) # load 0xbfc00000 from memory into f19
fmadd.s f25, f7, f1, f19, dyn # perform operation
fmadd.s f25, f7, f1, f19, rdn # perform operation
fmadd.s f25, f7, f1, f19, rmm # perform operation
fmadd.s f25, f7, f1, f19, rne # perform operation
fmadd.s f25, f7, f1, f19, rtz # perform operation
fmadd.s f25, f7, f1, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f7, f1, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f7, f1, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x40000000)
li x2, 0x256e1e2a29b95f3a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f16, 0(x2) # load 0x7fc00000 from memory into f16
li x3, 0x42a03135dc66f5cd # load x3 with value 0x42a03135dc66f5cd
sw x3, 0(x2) # store 0x42a03135dc66f5cd in memory
flw f17, 0(x2) # load 0x42a03135dc66f5cd from memory into f17
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f24, 0(x2) # load 0x40000000 from memory into f24
fmadd.s f2, f16, f17, f24, dyn # perform operation
fmadd.s f2, f16, f17, f24, rdn # perform operation
fmadd.s f2, f16, f17, f24, rmm # perform operation
fmadd.s f2, f16, f17, f24, rne # perform operation
fmadd.s f2, f16, f17, f24, rtz # perform operation
fmadd.s f2, f16, f17, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f16, f17, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f16, f17, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xc0000000)
li x19, 0x3113e64adaa7474c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
li x3, 0xb9fba0eee13015d6 # load x3 with value 0xb9fba0eee13015d6
sw x3, 0(x2) # store 0xb9fba0eee13015d6 in memory
flw f23, 0(x2) # load 0xb9fba0eee13015d6 from memory into f23
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f27, 0(x2) # load 0xc0000000 from memory into f27
fmadd.s f19, f20, f23, f27, dyn # perform operation
fmadd.s f19, f20, f23, f27, rdn # perform operation
fmadd.s f19, f20, f23, f27, rmm # perform operation
fmadd.s f19, f20, f23, f27, rne # perform operation
fmadd.s f19, f20, f23, f27, rtz # perform operation
fmadd.s f19, f20, f23, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f20, f23, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f20, f23, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x800000)
li x2, 0x6d4e3ee0054ce15a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x4ae68df0f130fa2b # load x3 with value 0x4ae68df0f130fa2b
sw x3, 0(x2) # store 0x4ae68df0f130fa2b in memory
flw f28, 0(x2) # load 0x4ae68df0f130fa2b from memory into f28
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f24, 0(x2) # load 0x00800000 from memory into f24
fmadd.s f2, f4, f28, f24, dyn # perform operation
fmadd.s f2, f4, f28, f24, rdn # perform operation
fmadd.s f2, f4, f28, f24, rmm # perform operation
fmadd.s f2, f4, f28, f24, rne # perform operation
fmadd.s f2, f4, f28, f24, rtz # perform operation
fmadd.s f2, f4, f28, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f4, f28, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f4, f28, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80800000)
li x18, 0x9f51ef5b0adce040 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0x613e4c30feadfb90 # load x3 with value 0x613e4c30feadfb90
sw x3, 0(x2) # store 0x613e4c30feadfb90 in memory
flw f6, 0(x2) # load 0x613e4c30feadfb90 from memory into f6
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmadd.s f18, f19, f6, f28, dyn # perform operation
fmadd.s f18, f19, f6, f28, rdn # perform operation
fmadd.s f18, f19, f6, f28, rmm # perform operation
fmadd.s f18, f19, f6, f28, rne # perform operation
fmadd.s f18, f19, f6, f28, rtz # perform operation
fmadd.s f18, f19, f6, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f6, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f6, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f7fffff)
li x28, 0x4d7d2d8bca8e5fc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0x3ef5ab7c7b744ec # load x3 with value 0x3ef5ab7c7b744ec
sw x3, 0(x2) # store 0x3ef5ab7c7b744ec in memory
flw f5, 0(x2) # load 0x3ef5ab7c7b744ec from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f31, 0(x2) # load 0x7f7fffff from memory into f31
fmadd.s f28, f4, f5, f31, dyn # perform operation
fmadd.s f28, f4, f5, f31, rdn # perform operation
fmadd.s f28, f4, f5, f31, rmm # perform operation
fmadd.s f28, f4, f5, f31, rne # perform operation
fmadd.s f28, f4, f5, f31, rtz # perform operation
fmadd.s f28, f4, f5, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f4, f5, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f4, f5, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f4, f5, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f4, f5, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f4, f5, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff7fffff)
li x13, 0x05cd506edd14d4ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f29, 0(x2) # load 0x7fc00000 from memory into f29
li x3, 0x945fd7f010b18a9 # load x3 with value 0x945fd7f010b18a9
sw x3, 0(x2) # store 0x945fd7f010b18a9 in memory
flw f1, 0(x2) # load 0x945fd7f010b18a9 from memory into f1
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f30, 0(x2) # load 0xff7fffff from memory into f30
fmadd.s f13, f29, f1, f30, dyn # perform operation
fmadd.s f13, f29, f1, f30, rdn # perform operation
fmadd.s f13, f29, f1, f30, rmm # perform operation
fmadd.s f13, f29, f1, f30, rne # perform operation
fmadd.s f13, f29, f1, f30, rtz # perform operation
fmadd.s f13, f29, f1, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f29, f1, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f29, f1, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffff)
li x8, 0xbd117b563e28cdf2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x869294f7e6cacd67 # load x3 with value 0x869294f7e6cacd67
sw x3, 0(x2) # store 0x869294f7e6cacd67 in memory
flw f14, 0(x2) # load 0x869294f7e6cacd67 from memory into f14
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f31, 0(x2) # load 0x007fffff from memory into f31
fmadd.s f8, f21, f14, f31, dyn # perform operation
fmadd.s f8, f21, f14, f31, rdn # perform operation
fmadd.s f8, f21, f14, f31, rmm # perform operation
fmadd.s f8, f21, f14, f31, rne # perform operation
fmadd.s f8, f21, f14, f31, rtz # perform operation
fmadd.s f8, f21, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f21, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f21, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x807fffff)
li x4, 0x1d77ac6eaf43ce4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f9, 0(x2) # load 0x7fc00000 from memory into f9
li x3, 0x12dda67537a52333 # load x3 with value 0x12dda67537a52333
sw x3, 0(x2) # store 0x12dda67537a52333 in memory
flw f12, 0(x2) # load 0x12dda67537a52333 from memory into f12
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f24, 0(x2) # load 0x807fffff from memory into f24
fmadd.s f4, f9, f12, f24, dyn # perform operation
fmadd.s f4, f9, f12, f24, rdn # perform operation
fmadd.s f4, f9, f12, f24, rmm # perform operation
fmadd.s f4, f9, f12, f24, rne # perform operation
fmadd.s f4, f9, f12, f24, rtz # perform operation
fmadd.s f4, f9, f12, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f9, f12, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f9, f12, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x400000)
li x20, 0x8e89fef89d1ab71d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f27, 0(x2) # load 0x7fc00000 from memory into f27
li x3, 0x1bb8722b6c66eba # load x3 with value 0x1bb8722b6c66eba
sw x3, 0(x2) # store 0x1bb8722b6c66eba in memory
flw f12, 0(x2) # load 0x1bb8722b6c66eba from memory into f12
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f9, 0(x2) # load 0x00400000 from memory into f9
fmadd.s f20, f27, f12, f9, dyn # perform operation
fmadd.s f20, f27, f12, f9, rdn # perform operation
fmadd.s f20, f27, f12, f9, rmm # perform operation
fmadd.s f20, f27, f12, f9, rne # perform operation
fmadd.s f20, f27, f12, f9, rtz # perform operation
fmadd.s f20, f27, f12, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f27, f12, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f27, f12, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f27, f12, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f27, f12, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f27, f12, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80400000)
li x31, 0xc64a87cc5353bd2f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
li x3, 0xf1c69a43f8397eb7 # load x3 with value 0xf1c69a43f8397eb7
sw x3, 0(x2) # store 0xf1c69a43f8397eb7 in memory
flw f14, 0(x2) # load 0xf1c69a43f8397eb7 from memory into f14
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f28, 0(x2) # load 0x80400000 from memory into f28
fmadd.s f31, f5, f14, f28, dyn # perform operation
fmadd.s f31, f5, f14, f28, rdn # perform operation
fmadd.s f31, f5, f14, f28, rmm # perform operation
fmadd.s f31, f5, f14, f28, rne # perform operation
fmadd.s f31, f5, f14, f28, rtz # perform operation
fmadd.s f31, f5, f14, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f5, f14, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f5, f14, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x1)
li x20, 0xaf8bc8303dafe65d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f4, 0(x2) # load 0x7fc00000 from memory into f4
li x3, 0xf427c2d40982ebbd # load x3 with value 0xf427c2d40982ebbd
sw x3, 0(x2) # store 0xf427c2d40982ebbd in memory
flw f19, 0(x2) # load 0xf427c2d40982ebbd from memory into f19
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f28, 0(x2) # load 0x00000001 from memory into f28
fmadd.s f20, f4, f19, f28, dyn # perform operation
fmadd.s f20, f4, f19, f28, rdn # perform operation
fmadd.s f20, f4, f19, f28, rmm # perform operation
fmadd.s f20, f4, f19, f28, rne # perform operation
fmadd.s f20, f4, f19, f28, rtz # perform operation
fmadd.s f20, f4, f19, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f4, f19, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f4, f19, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x80000001)
li x15, 0x9c937be18781d051 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0xf9c7fad3a7dc21cf # load x3 with value 0xf9c7fad3a7dc21cf
sw x3, 0(x2) # store 0xf9c7fad3a7dc21cf in memory
flw f28, 0(x2) # load 0xf9c7fad3a7dc21cf from memory into f28
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f19, 0(x2) # load 0x80000001 from memory into f19
fmadd.s f15, f2, f28, f19, dyn # perform operation
fmadd.s f15, f2, f28, f19, rdn # perform operation
fmadd.s f15, f2, f28, f19, rmm # perform operation
fmadd.s f15, f2, f28, f19, rne # perform operation
fmadd.s f15, f2, f28, f19, rtz # perform operation
fmadd.s f15, f2, f28, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f2, f28, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f2, f28, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f2, f28, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f2, f28, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f2, f28, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800000)
li x18, 0xa3a84479c1104dda # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f19, 0(x2) # load 0x7fc00000 from memory into f19
li x3, 0xa9d552d0dc9ad298 # load x3 with value 0xa9d552d0dc9ad298
sw x3, 0(x2) # store 0xa9d552d0dc9ad298 in memory
flw f26, 0(x2) # load 0xa9d552d0dc9ad298 from memory into f26
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f30, 0(x2) # load 0x7f800000 from memory into f30
fmadd.s f18, f19, f26, f30, dyn # perform operation
fmadd.s f18, f19, f26, f30, rdn # perform operation
fmadd.s f18, f19, f26, f30, rmm # perform operation
fmadd.s f18, f19, f26, f30, rne # perform operation
fmadd.s f18, f19, f26, f30, rtz # perform operation
fmadd.s f18, f19, f26, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f19, f26, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f19, f26, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0xff800000)
li x4, 0x41b110bbd9272146 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f28, 0(x2) # load 0x7fc00000 from memory into f28
li x3, 0x55268efeecfea38f # load x3 with value 0x55268efeecfea38f
sw x3, 0(x2) # store 0x55268efeecfea38f in memory
flw f3, 0(x2) # load 0x55268efeecfea38f from memory into f3
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f16, 0(x2) # load 0xff800000 from memory into f16
fmadd.s f4, f28, f3, f16, dyn # perform operation
fmadd.s f4, f28, f3, f16, rdn # perform operation
fmadd.s f4, f28, f3, f16, rmm # perform operation
fmadd.s f4, f28, f3, f16, rne # perform operation
fmadd.s f4, f28, f3, f16, rtz # perform operation
fmadd.s f4, f28, f3, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f28, f3, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f28, f3, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fc00000)
li x22, 0xd81f486ed9f781ff # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f14, 0(x2) # load 0x7fc00000 from memory into f14
li x3, 0x8a47cc17a736d9dc # load x3 with value 0x8a47cc17a736d9dc
sw x3, 0(x2) # store 0x8a47cc17a736d9dc in memory
flw f15, 0(x2) # load 0x8a47cc17a736d9dc from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f22, f14, f15, f5, dyn # perform operation
fmadd.s f22, f14, f15, f5, rdn # perform operation
fmadd.s f22, f14, f15, f5, rmm # perform operation
fmadd.s f22, f14, f15, f5, rne # perform operation
fmadd.s f22, f14, f15, f5, rtz # perform operation
fmadd.s f22, f14, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f14, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f14, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fffffff)
li x8, 0xe4026dd436ebdd1b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f1, 0(x2) # load 0x7fc00000 from memory into f1
li x3, 0xc16f2c59a309bc38 # load x3 with value 0xc16f2c59a309bc38
sw x3, 0(x2) # store 0xc16f2c59a309bc38 in memory
flw f16, 0(x2) # load 0xc16f2c59a309bc38 from memory into f16
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f7, 0(x2) # load 0x7fffffff from memory into f7
fmadd.s f8, f1, f16, f7, dyn # perform operation
fmadd.s f8, f1, f16, f7, rdn # perform operation
fmadd.s f8, f1, f16, f7, rmm # perform operation
fmadd.s f8, f1, f16, f7, rne # perform operation
fmadd.s f8, f1, f16, f7, rtz # perform operation
fmadd.s f8, f1, f16, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f1, f16, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f1, f16, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7f800001)
li x7, 0xfe291e921d0c0813 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f21, 0(x2) # load 0x7fc00000 from memory into f21
li x3, 0x9a196eff1d01feea # load x3 with value 0x9a196eff1d01feea
sw x3, 0(x2) # store 0x9a196eff1d01feea in memory
flw f24, 0(x2) # load 0x9a196eff1d01feea from memory into f24
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
fmadd.s f7, f21, f24, f9, dyn # perform operation
fmadd.s f7, f21, f24, f9, rdn # perform operation
fmadd.s f7, f21, f24, f9, rmm # perform operation
fmadd.s f7, f21, f24, f9, rne # perform operation
fmadd.s f7, f21, f24, f9, rtz # perform operation
fmadd.s f7, f21, f24, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f24, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f24, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7fbfffff)
li x3, 0x4d154dcd713287c3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f12, 0(x2) # load 0x7fc00000 from memory into f12
li x3, 0x5385e9f3327c07bb # load x3 with value 0x5385e9f3327c07bb
sw x3, 0(x2) # store 0x5385e9f3327c07bb in memory
flw f28, 0(x2) # load 0x5385e9f3327c07bb from memory into f28
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
fmadd.s f3, f12, f28, f27, dyn # perform operation
fmadd.s f3, f12, f28, f27, rdn # perform operation
fmadd.s f3, f12, f28, f27, rmm # perform operation
fmadd.s f3, f12, f28, f27, rne # perform operation
fmadd.s f3, f12, f28, f27, rtz # perform operation
fmadd.s f3, f12, f28, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f28, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f28, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f28, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f28, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f28, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x7ef8654f)
li x14, 0xb6c7bd3900f542c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f2, 0(x2) # load 0x7fc00000 from memory into f2
li x3, 0x848199e882078c11 # load x3 with value 0x848199e882078c11
sw x3, 0(x2) # store 0x848199e882078c11 in memory
flw f11, 0(x2) # load 0x848199e882078c11 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f26, 0(x2) # load 0x7ef8654f from memory into f26
fmadd.s f14, f2, f11, f26, dyn # perform operation
fmadd.s f14, f2, f11, f26, rdn # perform operation
fmadd.s f14, f2, f11, f26, rmm # perform operation
fmadd.s f14, f2, f11, f26, rne # perform operation
fmadd.s f14, f2, f11, f26, rtz # perform operation
fmadd.s f14, f2, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f2, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f2, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fc00000 fs3 = 0x813d9ab0)
li x10, 0x96d6a982434c2474 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f25, 0(x2) # load 0x7fc00000 from memory into f25
li x3, 0x20d113be3827c92d # load x3 with value 0x20d113be3827c92d
sw x3, 0(x2) # store 0x20d113be3827c92d in memory
flw f1, 0(x2) # load 0x20d113be3827c92d from memory into f1
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f5, 0(x2) # load 0x813d9ab0 from memory into f5
fmadd.s f10, f25, f1, f5, dyn # perform operation
fmadd.s f10, f25, f1, f5, rdn # perform operation
fmadd.s f10, f25, f1, f5, rmm # perform operation
fmadd.s f10, f25, f1, f5, rne # perform operation
fmadd.s f10, f25, f1, f5, rtz # perform operation
fmadd.s f10, f25, f1, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f25, f1, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f25, f1, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x0)
li x6, 0x8972c695dad3d482 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xbddd166af4a614dd # load x3 with value 0xbddd166af4a614dd
sw x3, 0(x2) # store 0xbddd166af4a614dd in memory
flw f21, 0(x2) # load 0xbddd166af4a614dd from memory into f21
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f7, 0(x2) # load 0x00000000 from memory into f7
fmadd.s f6, f9, f21, f7, dyn # perform operation
fmadd.s f6, f9, f21, f7, rdn # perform operation
fmadd.s f6, f9, f21, f7, rmm # perform operation
fmadd.s f6, f9, f21, f7, rne # perform operation
fmadd.s f6, f9, f21, f7, rtz # perform operation
fmadd.s f6, f9, f21, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f9, f21, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f9, f21, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000000)
li x17, 0xea8cb59372254ce4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0xac2085d5ee5c488c # load x3 with value 0xac2085d5ee5c488c
sw x3, 0(x2) # store 0xac2085d5ee5c488c in memory
flw f2, 0(x2) # load 0xac2085d5ee5c488c from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f24, 0(x2) # load 0x80000000 from memory into f24
fmadd.s f17, f9, f2, f24, dyn # perform operation
fmadd.s f17, f9, f2, f24, rdn # perform operation
fmadd.s f17, f9, f2, f24, rmm # perform operation
fmadd.s f17, f9, f2, f24, rne # perform operation
fmadd.s f17, f9, f2, f24, rtz # perform operation
fmadd.s f17, f9, f2, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f17, f9, f2, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f17, f9, f2, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f17, f9, f2, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f17, f9, f2, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f17, f9, f2, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3f800000)
li x25, 0x65c82c4f67467f3d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x87f5593f38d6de8c # load x3 with value 0x87f5593f38d6de8c
sw x3, 0(x2) # store 0x87f5593f38d6de8c in memory
flw f5, 0(x2) # load 0x87f5593f38d6de8c from memory into f5
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f25, f1, f5, f3, dyn # perform operation
fmadd.s f25, f1, f5, f3, rdn # perform operation
fmadd.s f25, f1, f5, f3, rmm # perform operation
fmadd.s f25, f1, f5, f3, rne # perform operation
fmadd.s f25, f1, f5, f3, rtz # perform operation
fmadd.s f25, f1, f5, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f5, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f5, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f5, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f5, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f5, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbf800000)
li x5, 0xe84731b40e5e700c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0xf5cc6b3f4e5cc06e # load x3 with value 0xf5cc6b3f4e5cc06e
sw x3, 0(x2) # store 0xf5cc6b3f4e5cc06e in memory
flw f10, 0(x2) # load 0xf5cc6b3f4e5cc06e from memory into f10
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f21, 0(x2) # load 0xbf800000 from memory into f21
fmadd.s f5, f1, f10, f21, dyn # perform operation
fmadd.s f5, f1, f10, f21, rdn # perform operation
fmadd.s f5, f1, f10, f21, rmm # perform operation
fmadd.s f5, f1, f10, f21, rne # perform operation
fmadd.s f5, f1, f10, f21, rtz # perform operation
fmadd.s f5, f1, f10, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f1, f10, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f1, f10, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f1, f10, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f1, f10, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f1, f10, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x3fc00000)
li x14, 0xa570f80ae181415d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
li x3, 0x749765b6e958fafe # load x3 with value 0x749765b6e958fafe
sw x3, 0(x2) # store 0x749765b6e958fafe in memory
flw f3, 0(x2) # load 0x749765b6e958fafe from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f22, 0(x2) # load 0x3fc00000 from memory into f22
fmadd.s f14, f9, f3, f22, dyn # perform operation
fmadd.s f14, f9, f3, f22, rdn # perform operation
fmadd.s f14, f9, f3, f22, rmm # perform operation
fmadd.s f14, f9, f3, f22, rne # perform operation
fmadd.s f14, f9, f3, f22, rtz # perform operation
fmadd.s f14, f9, f3, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f3, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f3, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f3, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f3, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f3, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xbfc00000)
li x22, 0x28cf5eb8a053c995 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0x62fc9da7e9aed13e # load x3 with value 0x62fc9da7e9aed13e
sw x3, 0(x2) # store 0x62fc9da7e9aed13e in memory
flw f9, 0(x2) # load 0x62fc9da7e9aed13e from memory into f9
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f10, 0(x2) # load 0xbfc00000 from memory into f10
fmadd.s f22, f8, f9, f10, dyn # perform operation
fmadd.s f22, f8, f9, f10, rdn # perform operation
fmadd.s f22, f8, f9, f10, rmm # perform operation
fmadd.s f22, f8, f9, f10, rne # perform operation
fmadd.s f22, f8, f9, f10, rtz # perform operation
fmadd.s f22, f8, f9, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f8, f9, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f8, f9, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x40000000)
li x2, 0x35f984676da03183 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f8, 0(x2) # load 0x7fffffff from memory into f8
li x3, 0xb89f9b04277ac62d # load x3 with value 0xb89f9b04277ac62d
sw x3, 0(x2) # store 0xb89f9b04277ac62d in memory
flw f6, 0(x2) # load 0xb89f9b04277ac62d from memory into f6
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f16, 0(x2) # load 0x40000000 from memory into f16
fmadd.s f2, f8, f6, f16, dyn # perform operation
fmadd.s f2, f8, f6, f16, rdn # perform operation
fmadd.s f2, f8, f6, f16, rmm # perform operation
fmadd.s f2, f8, f6, f16, rne # perform operation
fmadd.s f2, f8, f6, f16, rtz # perform operation
fmadd.s f2, f8, f6, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f8, f6, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f8, f6, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xc0000000)
li x24, 0x9e81654a6bf23b9b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x72fe6bb620af6096 # load x3 with value 0x72fe6bb620af6096
sw x3, 0(x2) # store 0x72fe6bb620af6096 in memory
flw f13, 0(x2) # load 0x72fe6bb620af6096 from memory into f13
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f29, 0(x2) # load 0xc0000000 from memory into f29
fmadd.s f24, f19, f13, f29, dyn # perform operation
fmadd.s f24, f19, f13, f29, rdn # perform operation
fmadd.s f24, f19, f13, f29, rmm # perform operation
fmadd.s f24, f19, f13, f29, rne # perform operation
fmadd.s f24, f19, f13, f29, rtz # perform operation
fmadd.s f24, f19, f13, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f19, f13, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f19, f13, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x800000)
li x20, 0xff79670fa849f63d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f30, 0(x2) # load 0x7fffffff from memory into f30
li x3, 0xe37e50c8508a4c44 # load x3 with value 0xe37e50c8508a4c44
sw x3, 0(x2) # store 0xe37e50c8508a4c44 in memory
flw f12, 0(x2) # load 0xe37e50c8508a4c44 from memory into f12
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f7, 0(x2) # load 0x00800000 from memory into f7
fmadd.s f20, f30, f12, f7, dyn # perform operation
fmadd.s f20, f30, f12, f7, rdn # perform operation
fmadd.s f20, f30, f12, f7, rmm # perform operation
fmadd.s f20, f30, f12, f7, rne # perform operation
fmadd.s f20, f30, f12, f7, rtz # perform operation
fmadd.s f20, f30, f12, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f12, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f12, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80800000)
li x3, 0xc5a275f467e8109b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0xe71d5fe2af5b7f6d # load x3 with value 0xe71d5fe2af5b7f6d
sw x3, 0(x2) # store 0xe71d5fe2af5b7f6d in memory
flw f18, 0(x2) # load 0xe71d5fe2af5b7f6d from memory into f18
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f3, f12, f18, f22, dyn # perform operation
fmadd.s f3, f12, f18, f22, rdn # perform operation
fmadd.s f3, f12, f18, f22, rmm # perform operation
fmadd.s f3, f12, f18, f22, rne # perform operation
fmadd.s f3, f12, f18, f22, rtz # perform operation
fmadd.s f3, f12, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f12, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f12, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f7fffff)
li x20, 0xd934e12cb80cf979 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f19, 0(x2) # load 0x7fffffff from memory into f19
li x3, 0x33ddb6f3e9b8ea84 # load x3 with value 0x33ddb6f3e9b8ea84
sw x3, 0(x2) # store 0x33ddb6f3e9b8ea84 in memory
flw f6, 0(x2) # load 0x33ddb6f3e9b8ea84 from memory into f6
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f13, 0(x2) # load 0x7f7fffff from memory into f13
fmadd.s f20, f19, f6, f13, dyn # perform operation
fmadd.s f20, f19, f6, f13, rdn # perform operation
fmadd.s f20, f19, f6, f13, rmm # perform operation
fmadd.s f20, f19, f6, f13, rne # perform operation
fmadd.s f20, f19, f6, f13, rtz # perform operation
fmadd.s f20, f19, f6, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f19, f6, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f19, f6, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff7fffff)
li x24, 0x85c7087bcd5951c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xeddfbcaf8b75e34a # load x3 with value 0xeddfbcaf8b75e34a
sw x3, 0(x2) # store 0xeddfbcaf8b75e34a in memory
flw f25, 0(x2) # load 0xeddfbcaf8b75e34a from memory into f25
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f29, 0(x2) # load 0xff7fffff from memory into f29
fmadd.s f24, f23, f25, f29, dyn # perform operation
fmadd.s f24, f23, f25, f29, rdn # perform operation
fmadd.s f24, f23, f25, f29, rmm # perform operation
fmadd.s f24, f23, f25, f29, rne # perform operation
fmadd.s f24, f23, f25, f29, rtz # perform operation
fmadd.s f24, f23, f25, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f23, f25, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f23, f25, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffff)
li x14, 0x9c40098c6020e8f0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f17, 0(x2) # load 0x7fffffff from memory into f17
li x3, 0x5a2ba951ae396e79 # load x3 with value 0x5a2ba951ae396e79
sw x3, 0(x2) # store 0x5a2ba951ae396e79 in memory
flw f2, 0(x2) # load 0x5a2ba951ae396e79 from memory into f2
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f21, 0(x2) # load 0x007fffff from memory into f21
fmadd.s f14, f17, f2, f21, dyn # perform operation
fmadd.s f14, f17, f2, f21, rdn # perform operation
fmadd.s f14, f17, f2, f21, rmm # perform operation
fmadd.s f14, f17, f2, f21, rne # perform operation
fmadd.s f14, f17, f2, f21, rtz # perform operation
fmadd.s f14, f17, f2, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f17, f2, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f17, f2, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f17, f2, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f17, f2, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f17, f2, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x807fffff)
li x16, 0xa5bea95946ea3484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f23, 0(x2) # load 0x7fffffff from memory into f23
li x3, 0xaa30550cca6afc59 # load x3 with value 0xaa30550cca6afc59
sw x3, 0(x2) # store 0xaa30550cca6afc59 in memory
flw f30, 0(x2) # load 0xaa30550cca6afc59 from memory into f30
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f20, 0(x2) # load 0x807fffff from memory into f20
fmadd.s f16, f23, f30, f20, dyn # perform operation
fmadd.s f16, f23, f30, f20, rdn # perform operation
fmadd.s f16, f23, f30, f20, rmm # perform operation
fmadd.s f16, f23, f30, f20, rne # perform operation
fmadd.s f16, f23, f30, f20, rtz # perform operation
fmadd.s f16, f23, f30, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f23, f30, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f23, f30, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f23, f30, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f23, f30, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f23, f30, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x400000)
li x9, 0x084f6cd2fcd6084e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f5, 0(x2) # load 0x7fffffff from memory into f5
li x3, 0xbd15cdf87eafa9ff # load x3 with value 0xbd15cdf87eafa9ff
sw x3, 0(x2) # store 0xbd15cdf87eafa9ff in memory
flw f6, 0(x2) # load 0xbd15cdf87eafa9ff from memory into f6
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f2, 0(x2) # load 0x00400000 from memory into f2
fmadd.s f9, f5, f6, f2, dyn # perform operation
fmadd.s f9, f5, f6, f2, rdn # perform operation
fmadd.s f9, f5, f6, f2, rmm # perform operation
fmadd.s f9, f5, f6, f2, rne # perform operation
fmadd.s f9, f5, f6, f2, rtz # perform operation
fmadd.s f9, f5, f6, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f5, f6, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f5, f6, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80400000)
li x7, 0xcc031bc4186f6608 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x8bd31c21fffb90d # load x3 with value 0x8bd31c21fffb90d
sw x3, 0(x2) # store 0x8bd31c21fffb90d in memory
flw f4, 0(x2) # load 0x8bd31c21fffb90d from memory into f4
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f7, f1, f4, f2, dyn # perform operation
fmadd.s f7, f1, f4, f2, rdn # perform operation
fmadd.s f7, f1, f4, f2, rmm # perform operation
fmadd.s f7, f1, f4, f2, rne # perform operation
fmadd.s f7, f1, f4, f2, rtz # perform operation
fmadd.s f7, f1, f4, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f1, f4, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f1, f4, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f1, f4, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f1, f4, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f1, f4, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x1)
li x16, 0x6dd9274b565b8a47 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
li x3, 0x32ffaadc31095bc1 # load x3 with value 0x32ffaadc31095bc1
sw x3, 0(x2) # store 0x32ffaadc31095bc1 in memory
flw f10, 0(x2) # load 0x32ffaadc31095bc1 from memory into f10
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f20, 0(x2) # load 0x00000001 from memory into f20
fmadd.s f16, f11, f10, f20, dyn # perform operation
fmadd.s f16, f11, f10, f20, rdn # perform operation
fmadd.s f16, f11, f10, f20, rmm # perform operation
fmadd.s f16, f11, f10, f20, rne # perform operation
fmadd.s f16, f11, f10, f20, rtz # perform operation
fmadd.s f16, f11, f10, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f11, f10, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f11, f10, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f11, f10, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f11, f10, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f11, f10, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x80000001)
li x8, 0x53a2ff682217bd18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
li x3, 0x6608327731101733 # load x3 with value 0x6608327731101733
sw x3, 0(x2) # store 0x6608327731101733 in memory
flw f11, 0(x2) # load 0x6608327731101733 from memory into f11
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f29, 0(x2) # load 0x80000001 from memory into f29
fmadd.s f8, f14, f11, f29, dyn # perform operation
fmadd.s f8, f14, f11, f29, rdn # perform operation
fmadd.s f8, f14, f11, f29, rmm # perform operation
fmadd.s f8, f14, f11, f29, rne # perform operation
fmadd.s f8, f14, f11, f29, rtz # perform operation
fmadd.s f8, f14, f11, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f14, f11, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f14, f11, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800000)
li x29, 0xd46986dcbae03f88 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
li x3, 0xe0d734fcac904fb8 # load x3 with value 0xe0d734fcac904fb8
sw x3, 0(x2) # store 0xe0d734fcac904fb8 in memory
flw f21, 0(x2) # load 0xe0d734fcac904fb8 from memory into f21
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f10, 0(x2) # load 0x7f800000 from memory into f10
fmadd.s f29, f4, f21, f10, dyn # perform operation
fmadd.s f29, f4, f21, f10, rdn # perform operation
fmadd.s f29, f4, f21, f10, rmm # perform operation
fmadd.s f29, f4, f21, f10, rne # perform operation
fmadd.s f29, f4, f21, f10, rtz # perform operation
fmadd.s f29, f4, f21, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f4, f21, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f4, f21, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0xff800000)
li x20, 0xf7a42311471bd8d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f18, 0(x2) # load 0x7fffffff from memory into f18
li x3, 0xa3fcf99ca0e075a4 # load x3 with value 0xa3fcf99ca0e075a4
sw x3, 0(x2) # store 0xa3fcf99ca0e075a4 in memory
flw f10, 0(x2) # load 0xa3fcf99ca0e075a4 from memory into f10
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f17, 0(x2) # load 0xff800000 from memory into f17
fmadd.s f20, f18, f10, f17, dyn # perform operation
fmadd.s f20, f18, f10, f17, rdn # perform operation
fmadd.s f20, f18, f10, f17, rmm # perform operation
fmadd.s f20, f18, f10, f17, rne # perform operation
fmadd.s f20, f18, f10, f17, rtz # perform operation
fmadd.s f20, f18, f10, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f10, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f10, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fc00000)
li x11, 0x716efce1c61d5086 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f16, 0(x2) # load 0x7fffffff from memory into f16
li x3, 0x464749ecc43601c2 # load x3 with value 0x464749ecc43601c2
sw x3, 0(x2) # store 0x464749ecc43601c2 in memory
flw f30, 0(x2) # load 0x464749ecc43601c2 from memory into f30
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f15, 0(x2) # load 0x7fc00000 from memory into f15
fmadd.s f11, f16, f30, f15, dyn # perform operation
fmadd.s f11, f16, f30, f15, rdn # perform operation
fmadd.s f11, f16, f30, f15, rmm # perform operation
fmadd.s f11, f16, f30, f15, rne # perform operation
fmadd.s f11, f16, f30, f15, rtz # perform operation
fmadd.s f11, f16, f30, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f16, f30, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f16, f30, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f16, f30, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f16, f30, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f16, f30, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fffffff)
li x4, 0x47c5dbcdab2217df # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f25, 0(x2) # load 0x7fffffff from memory into f25
li x3, 0xf8881f0dadb7e7cb # load x3 with value 0xf8881f0dadb7e7cb
sw x3, 0(x2) # store 0xf8881f0dadb7e7cb in memory
flw f17, 0(x2) # load 0xf8881f0dadb7e7cb from memory into f17
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
fmadd.s f4, f25, f17, f12, dyn # perform operation
fmadd.s f4, f25, f17, f12, rdn # perform operation
fmadd.s f4, f25, f17, f12, rmm # perform operation
fmadd.s f4, f25, f17, f12, rne # perform operation
fmadd.s f4, f25, f17, f12, rtz # perform operation
fmadd.s f4, f25, f17, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f25, f17, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f25, f17, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7f800001)
li x16, 0x4fccdf84b52bb10d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f20, 0(x2) # load 0x7fffffff from memory into f20
li x3, 0x47355f146723d338 # load x3 with value 0x47355f146723d338
sw x3, 0(x2) # store 0x47355f146723d338 in memory
flw f29, 0(x2) # load 0x47355f146723d338 from memory into f29
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
fmadd.s f16, f20, f29, f13, dyn # perform operation
fmadd.s f16, f20, f29, f13, rdn # perform operation
fmadd.s f16, f20, f29, f13, rmm # perform operation
fmadd.s f16, f20, f29, f13, rne # perform operation
fmadd.s f16, f20, f29, f13, rtz # perform operation
fmadd.s f16, f20, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f20, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f20, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f20, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f20, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f20, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7fbfffff)
li x25, 0x8356217a76072b4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f1, 0(x2) # load 0x7fffffff from memory into f1
li x3, 0x6fd0701519d5448b # load x3 with value 0x6fd0701519d5448b
sw x3, 0(x2) # store 0x6fd0701519d5448b in memory
flw f6, 0(x2) # load 0x6fd0701519d5448b from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
fmadd.s f25, f1, f6, f21, dyn # perform operation
fmadd.s f25, f1, f6, f21, rdn # perform operation
fmadd.s f25, f1, f6, f21, rmm # perform operation
fmadd.s f25, f1, f6, f21, rne # perform operation
fmadd.s f25, f1, f6, f21, rtz # perform operation
fmadd.s f25, f1, f6, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f1, f6, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f1, f6, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x7ef8654f)
li x24, 0x970b4d158d94e80b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f2, 0(x2) # load 0x7fffffff from memory into f2
li x3, 0xa5fb74dee42d10be # load x3 with value 0xa5fb74dee42d10be
sw x3, 0(x2) # store 0xa5fb74dee42d10be in memory
flw f23, 0(x2) # load 0xa5fb74dee42d10be from memory into f23
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f31, 0(x2) # load 0x7ef8654f from memory into f31
fmadd.s f24, f2, f23, f31, dyn # perform operation
fmadd.s f24, f2, f23, f31, rdn # perform operation
fmadd.s f24, f2, f23, f31, rmm # perform operation
fmadd.s f24, f2, f23, f31, rne # perform operation
fmadd.s f24, f2, f23, f31, rtz # perform operation
fmadd.s f24, f2, f23, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f2, f23, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f2, f23, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fffffff fs3 = 0x813d9ab0)
li x16, 0xdef5144e675fee96 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f12, 0(x2) # load 0x7fffffff from memory into f12
li x3, 0x3fd6e84549838715 # load x3 with value 0x3fd6e84549838715
sw x3, 0(x2) # store 0x3fd6e84549838715 in memory
flw f26, 0(x2) # load 0x3fd6e84549838715 from memory into f26
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f20, 0(x2) # load 0x813d9ab0 from memory into f20
fmadd.s f16, f12, f26, f20, dyn # perform operation
fmadd.s f16, f12, f26, f20, rdn # perform operation
fmadd.s f16, f12, f26, f20, rmm # perform operation
fmadd.s f16, f12, f26, f20, rne # perform operation
fmadd.s f16, f12, f26, f20, rtz # perform operation
fmadd.s f16, f12, f26, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f26, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f26, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f26, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f26, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f26, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x0)
li x24, 0xab43ace63e63860f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x5f310d48b2f167c2 # load x3 with value 0x5f310d48b2f167c2
sw x3, 0(x2) # store 0x5f310d48b2f167c2 in memory
flw f2, 0(x2) # load 0x5f310d48b2f167c2 from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f27, 0(x2) # load 0x00000000 from memory into f27
fmadd.s f24, f31, f2, f27, dyn # perform operation
fmadd.s f24, f31, f2, f27, rdn # perform operation
fmadd.s f24, f31, f2, f27, rmm # perform operation
fmadd.s f24, f31, f2, f27, rne # perform operation
fmadd.s f24, f31, f2, f27, rtz # perform operation
fmadd.s f24, f31, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f31, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f31, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000000)
li x21, 0x2e5ace42841ec8cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
li x3, 0x46226107259cdf92 # load x3 with value 0x46226107259cdf92
sw x3, 0(x2) # store 0x46226107259cdf92 in memory
flw f2, 0(x2) # load 0x46226107259cdf92 from memory into f2
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f3, 0(x2) # load 0x80000000 from memory into f3
fmadd.s f21, f1, f2, f3, dyn # perform operation
fmadd.s f21, f1, f2, f3, rdn # perform operation
fmadd.s f21, f1, f2, f3, rmm # perform operation
fmadd.s f21, f1, f2, f3, rne # perform operation
fmadd.s f21, f1, f2, f3, rtz # perform operation
fmadd.s f21, f1, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f21, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f21, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f21, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f21, f1, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f21, f1, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3f800000)
li x16, 0x1e3f40bfc9423582 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f24, 0(x2) # load 0x7f800001 from memory into f24
li x3, 0xd6c723199ca31ad0 # load x3 with value 0xd6c723199ca31ad0
sw x3, 0(x2) # store 0xd6c723199ca31ad0 in memory
flw f18, 0(x2) # load 0xd6c723199ca31ad0 from memory into f18
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f16, f24, f18, f20, dyn # perform operation
fmadd.s f16, f24, f18, f20, rdn # perform operation
fmadd.s f16, f24, f18, f20, rmm # perform operation
fmadd.s f16, f24, f18, f20, rne # perform operation
fmadd.s f16, f24, f18, f20, rtz # perform operation
fmadd.s f16, f24, f18, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f24, f18, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f24, f18, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbf800000)
li x16, 0x3f68c8f5f2eb9365 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f25, 0(x2) # load 0x7f800001 from memory into f25
li x3, 0xeed563406c9d3974 # load x3 with value 0xeed563406c9d3974
sw x3, 0(x2) # store 0xeed563406c9d3974 in memory
flw f24, 0(x2) # load 0xeed563406c9d3974 from memory into f24
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f18, 0(x2) # load 0xbf800000 from memory into f18
fmadd.s f16, f25, f24, f18, dyn # perform operation
fmadd.s f16, f25, f24, f18, rdn # perform operation
fmadd.s f16, f25, f24, f18, rmm # perform operation
fmadd.s f16, f25, f24, f18, rne # perform operation
fmadd.s f16, f25, f24, f18, rtz # perform operation
fmadd.s f16, f25, f24, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f25, f24, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f25, f24, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f25, f24, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f25, f24, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f25, f24, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x3fc00000)
li x2, 0xbaee22511bbfc3e2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x6b6fa611b04107d # load x3 with value 0x6b6fa611b04107d
sw x3, 0(x2) # store 0x6b6fa611b04107d in memory
flw f15, 0(x2) # load 0x6b6fa611b04107d from memory into f15
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f16, 0(x2) # load 0x3fc00000 from memory into f16
fmadd.s f2, f20, f15, f16, dyn # perform operation
fmadd.s f2, f20, f15, f16, rdn # perform operation
fmadd.s f2, f20, f15, f16, rmm # perform operation
fmadd.s f2, f20, f15, f16, rne # perform operation
fmadd.s f2, f20, f15, f16, rtz # perform operation
fmadd.s f2, f20, f15, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f20, f15, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f20, f15, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xbfc00000)
li x24, 0xba693c56c43f249f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x2dfb9069465be8a3 # load x3 with value 0x2dfb9069465be8a3
sw x3, 0(x2) # store 0x2dfb9069465be8a3 in memory
flw f29, 0(x2) # load 0x2dfb9069465be8a3 from memory into f29
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f26, 0(x2) # load 0xbfc00000 from memory into f26
fmadd.s f24, f20, f29, f26, dyn # perform operation
fmadd.s f24, f20, f29, f26, rdn # perform operation
fmadd.s f24, f20, f29, f26, rmm # perform operation
fmadd.s f24, f20, f29, f26, rne # perform operation
fmadd.s f24, f20, f29, f26, rtz # perform operation
fmadd.s f24, f20, f29, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f20, f29, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f20, f29, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x40000000)
li x10, 0xeef900a7ee1fcc4d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f30, 0(x2) # load 0x7f800001 from memory into f30
li x3, 0xc28414481c4df08b # load x3 with value 0xc28414481c4df08b
sw x3, 0(x2) # store 0xc28414481c4df08b in memory
flw f2, 0(x2) # load 0xc28414481c4df08b from memory into f2
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f27, 0(x2) # load 0x40000000 from memory into f27
fmadd.s f10, f30, f2, f27, dyn # perform operation
fmadd.s f10, f30, f2, f27, rdn # perform operation
fmadd.s f10, f30, f2, f27, rmm # perform operation
fmadd.s f10, f30, f2, f27, rne # perform operation
fmadd.s f10, f30, f2, f27, rtz # perform operation
fmadd.s f10, f30, f2, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f30, f2, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f30, f2, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xc0000000)
li x4, 0x3b0a3e5fb324b2a5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0xa6546b993b130069 # load x3 with value 0xa6546b993b130069
sw x3, 0(x2) # store 0xa6546b993b130069 in memory
flw f1, 0(x2) # load 0xa6546b993b130069 from memory into f1
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f24, 0(x2) # load 0xc0000000 from memory into f24
fmadd.s f4, f20, f1, f24, dyn # perform operation
fmadd.s f4, f20, f1, f24, rdn # perform operation
fmadd.s f4, f20, f1, f24, rmm # perform operation
fmadd.s f4, f20, f1, f24, rne # perform operation
fmadd.s f4, f20, f1, f24, rtz # perform operation
fmadd.s f4, f20, f1, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f20, f1, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f20, f1, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f20, f1, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f20, f1, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f20, f1, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x800000)
li x18, 0xd217e9736ecaf723 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0x1126d126cc8ca918 # load x3 with value 0x1126d126cc8ca918
sw x3, 0(x2) # store 0x1126d126cc8ca918 in memory
flw f20, 0(x2) # load 0x1126d126cc8ca918 from memory into f20
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f16, 0(x2) # load 0x00800000 from memory into f16
fmadd.s f18, f14, f20, f16, dyn # perform operation
fmadd.s f18, f14, f20, f16, rdn # perform operation
fmadd.s f18, f14, f20, f16, rmm # perform operation
fmadd.s f18, f14, f20, f16, rne # perform operation
fmadd.s f18, f14, f20, f16, rtz # perform operation
fmadd.s f18, f14, f20, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f14, f20, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f14, f20, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80800000)
li x30, 0x5b653e1acd61326c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x73e2333037033777 # load x3 with value 0x73e2333037033777
sw x3, 0(x2) # store 0x73e2333037033777 in memory
flw f9, 0(x2) # load 0x73e2333037033777 from memory into f9
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f5, 0(x2) # load 0x80800000 from memory into f5
fmadd.s f30, f26, f9, f5, dyn # perform operation
fmadd.s f30, f26, f9, f5, rdn # perform operation
fmadd.s f30, f26, f9, f5, rmm # perform operation
fmadd.s f30, f26, f9, f5, rne # perform operation
fmadd.s f30, f26, f9, f5, rtz # perform operation
fmadd.s f30, f26, f9, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f26, f9, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f26, f9, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f7fffff)
li x27, 0x0d07cf843774b889 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f21, 0(x2) # load 0x7f800001 from memory into f21
li x3, 0xdc9a320e4e9b26cb # load x3 with value 0xdc9a320e4e9b26cb
sw x3, 0(x2) # store 0xdc9a320e4e9b26cb in memory
flw f17, 0(x2) # load 0xdc9a320e4e9b26cb from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f16, 0(x2) # load 0x7f7fffff from memory into f16
fmadd.s f27, f21, f17, f16, dyn # perform operation
fmadd.s f27, f21, f17, f16, rdn # perform operation
fmadd.s f27, f21, f17, f16, rmm # perform operation
fmadd.s f27, f21, f17, f16, rne # perform operation
fmadd.s f27, f21, f17, f16, rtz # perform operation
fmadd.s f27, f21, f17, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f21, f17, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f21, f17, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f21, f17, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f21, f17, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f21, f17, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff7fffff)
li x16, 0x9fa17de7382ade7d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xe0804769aca0bccd # load x3 with value 0xe0804769aca0bccd
sw x3, 0(x2) # store 0xe0804769aca0bccd in memory
flw f9, 0(x2) # load 0xe0804769aca0bccd from memory into f9
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f27, 0(x2) # load 0xff7fffff from memory into f27
fmadd.s f16, f14, f9, f27, dyn # perform operation
fmadd.s f16, f14, f9, f27, rdn # perform operation
fmadd.s f16, f14, f9, f27, rmm # perform operation
fmadd.s f16, f14, f9, f27, rne # perform operation
fmadd.s f16, f14, f9, f27, rtz # perform operation
fmadd.s f16, f14, f9, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f14, f9, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f14, f9, f27 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffff)
li x16, 0xb542f888960c7424 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0xbc20bf68758e45d5 # load x3 with value 0xbc20bf68758e45d5
sw x3, 0(x2) # store 0xbc20bf68758e45d5 in memory
flw f7, 0(x2) # load 0xbc20bf68758e45d5 from memory into f7
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f15, 0(x2) # load 0x007fffff from memory into f15
fmadd.s f16, f13, f7, f15, dyn # perform operation
fmadd.s f16, f13, f7, f15, rdn # perform operation
fmadd.s f16, f13, f7, f15, rmm # perform operation
fmadd.s f16, f13, f7, f15, rne # perform operation
fmadd.s f16, f13, f7, f15, rtz # perform operation
fmadd.s f16, f13, f7, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f13, f7, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f13, f7, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x807fffff)
li x13, 0xd6c0a9248e4d8ada # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f17, 0(x2) # load 0x7f800001 from memory into f17
li x3, 0x3748c3783896030a # load x3 with value 0x3748c3783896030a
sw x3, 0(x2) # store 0x3748c3783896030a in memory
flw f3, 0(x2) # load 0x3748c3783896030a from memory into f3
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f5, 0(x2) # load 0x807fffff from memory into f5
fmadd.s f13, f17, f3, f5, dyn # perform operation
fmadd.s f13, f17, f3, f5, rdn # perform operation
fmadd.s f13, f17, f3, f5, rmm # perform operation
fmadd.s f13, f17, f3, f5, rne # perform operation
fmadd.s f13, f17, f3, f5, rtz # perform operation
fmadd.s f13, f17, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f17, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f17, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x400000)
li x3, 0x6e424631d0053649 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x7d6a1578fe0480d7 # load x3 with value 0x7d6a1578fe0480d7
sw x3, 0(x2) # store 0x7d6a1578fe0480d7 in memory
flw f13, 0(x2) # load 0x7d6a1578fe0480d7 from memory into f13
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f24, 0(x2) # load 0x00400000 from memory into f24
fmadd.s f3, f19, f13, f24, dyn # perform operation
fmadd.s f3, f19, f13, f24, rdn # perform operation
fmadd.s f3, f19, f13, f24, rmm # perform operation
fmadd.s f3, f19, f13, f24, rne # perform operation
fmadd.s f3, f19, f13, f24, rtz # perform operation
fmadd.s f3, f19, f13, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f19, f13, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f19, f13, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80400000)
li x15, 0x84232aeb5e7e6739 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f26, 0(x2) # load 0x7f800001 from memory into f26
li x3, 0x82400a1cb4f7d3be # load x3 with value 0x82400a1cb4f7d3be
sw x3, 0(x2) # store 0x82400a1cb4f7d3be in memory
flw f13, 0(x2) # load 0x82400a1cb4f7d3be from memory into f13
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f15, f26, f13, f2, dyn # perform operation
fmadd.s f15, f26, f13, f2, rdn # perform operation
fmadd.s f15, f26, f13, f2, rmm # perform operation
fmadd.s f15, f26, f13, f2, rne # perform operation
fmadd.s f15, f26, f13, f2, rtz # perform operation
fmadd.s f15, f26, f13, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f26, f13, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f26, f13, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x1)
li x5, 0x651624ab5b819a65 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0xfef78c261ce2b5b6 # load x3 with value 0xfef78c261ce2b5b6
sw x3, 0(x2) # store 0xfef78c261ce2b5b6 in memory
flw f11, 0(x2) # load 0xfef78c261ce2b5b6 from memory into f11
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f13, 0(x2) # load 0x00000001 from memory into f13
fmadd.s f5, f9, f11, f13, dyn # perform operation
fmadd.s f5, f9, f11, f13, rdn # perform operation
fmadd.s f5, f9, f11, f13, rmm # perform operation
fmadd.s f5, f9, f11, f13, rne # perform operation
fmadd.s f5, f9, f11, f13, rtz # perform operation
fmadd.s f5, f9, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f9, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f9, f11, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x80000001)
li x28, 0x0d46787060a69587 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f9, 0(x2) # load 0x7f800001 from memory into f9
li x3, 0x1c644deedfc68876 # load x3 with value 0x1c644deedfc68876
sw x3, 0(x2) # store 0x1c644deedfc68876 in memory
flw f23, 0(x2) # load 0x1c644deedfc68876 from memory into f23
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f25, 0(x2) # load 0x80000001 from memory into f25
fmadd.s f28, f9, f23, f25, dyn # perform operation
fmadd.s f28, f9, f23, f25, rdn # perform operation
fmadd.s f28, f9, f23, f25, rmm # perform operation
fmadd.s f28, f9, f23, f25, rne # perform operation
fmadd.s f28, f9, f23, f25, rtz # perform operation
fmadd.s f28, f9, f23, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f23, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f23, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800000)
li x28, 0xb144b4ce087a5333 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f29, 0(x2) # load 0x7f800001 from memory into f29
li x3, 0x7f05ae82c24abfb4 # load x3 with value 0x7f05ae82c24abfb4
sw x3, 0(x2) # store 0x7f05ae82c24abfb4 in memory
flw f14, 0(x2) # load 0x7f05ae82c24abfb4 from memory into f14
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f24, 0(x2) # load 0x7f800000 from memory into f24
fmadd.s f28, f29, f14, f24, dyn # perform operation
fmadd.s f28, f29, f14, f24, rdn # perform operation
fmadd.s f28, f29, f14, f24, rmm # perform operation
fmadd.s f28, f29, f14, f24, rne # perform operation
fmadd.s f28, f29, f14, f24, rtz # perform operation
fmadd.s f28, f29, f14, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f29, f14, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f29, f14, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f29, f14, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f29, f14, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f29, f14, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0xff800000)
li x15, 0xcbf04fc270c7ec95 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
li x3, 0x63070a048b82db11 # load x3 with value 0x63070a048b82db11
sw x3, 0(x2) # store 0x63070a048b82db11 in memory
flw f19, 0(x2) # load 0x63070a048b82db11 from memory into f19
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f8, 0(x2) # load 0xff800000 from memory into f8
fmadd.s f15, f20, f19, f8, dyn # perform operation
fmadd.s f15, f20, f19, f8, rdn # perform operation
fmadd.s f15, f20, f19, f8, rmm # perform operation
fmadd.s f15, f20, f19, f8, rne # perform operation
fmadd.s f15, f20, f19, f8, rtz # perform operation
fmadd.s f15, f20, f19, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f20, f19, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f20, f19, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fc00000)
li x7, 0x8bd10a736f5283d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0x32dd5a776a7b2a84 # load x3 with value 0x32dd5a776a7b2a84
sw x3, 0(x2) # store 0x32dd5a776a7b2a84 in memory
flw f1, 0(x2) # load 0x32dd5a776a7b2a84 from memory into f1
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f20, 0(x2) # load 0x7fc00000 from memory into f20
fmadd.s f7, f5, f1, f20, dyn # perform operation
fmadd.s f7, f5, f1, f20, rdn # perform operation
fmadd.s f7, f5, f1, f20, rmm # perform operation
fmadd.s f7, f5, f1, f20, rne # perform operation
fmadd.s f7, f5, f1, f20, rtz # perform operation
fmadd.s f7, f5, f1, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f1, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f1, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fffffff)
li x28, 0x39cde3acc8b70184 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f13, 0(x2) # load 0x7f800001 from memory into f13
li x3, 0x8dc90bb5ef9392d3 # load x3 with value 0x8dc90bb5ef9392d3
sw x3, 0(x2) # store 0x8dc90bb5ef9392d3 in memory
flw f11, 0(x2) # load 0x8dc90bb5ef9392d3 from memory into f11
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f9, 0(x2) # load 0x7fffffff from memory into f9
fmadd.s f28, f13, f11, f9, dyn # perform operation
fmadd.s f28, f13, f11, f9, rdn # perform operation
fmadd.s f28, f13, f11, f9, rmm # perform operation
fmadd.s f28, f13, f11, f9, rne # perform operation
fmadd.s f28, f13, f11, f9, rtz # perform operation
fmadd.s f28, f13, f11, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f13, f11, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f13, f11, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f13, f11, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f13, f11, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f13, f11, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7f800001)
li x24, 0x9dcf70c5cae874c9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f14, 0(x2) # load 0x7f800001 from memory into f14
li x3, 0xbe42524825f047f # load x3 with value 0xbe42524825f047f
sw x3, 0(x2) # store 0xbe42524825f047f in memory
flw f11, 0(x2) # load 0xbe42524825f047f from memory into f11
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f20, 0(x2) # load 0x7f800001 from memory into f20
fmadd.s f24, f14, f11, f20, dyn # perform operation
fmadd.s f24, f14, f11, f20, rdn # perform operation
fmadd.s f24, f14, f11, f20, rmm # perform operation
fmadd.s f24, f14, f11, f20, rne # perform operation
fmadd.s f24, f14, f11, f20, rtz # perform operation
fmadd.s f24, f14, f11, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f14, f11, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f14, f11, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7fbfffff)
li x5, 0xee79f2c96c9ab470 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f19, 0(x2) # load 0x7f800001 from memory into f19
li x3, 0x4d1c0af3dc55d211 # load x3 with value 0x4d1c0af3dc55d211
sw x3, 0(x2) # store 0x4d1c0af3dc55d211 in memory
flw f29, 0(x2) # load 0x4d1c0af3dc55d211 from memory into f29
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f13, 0(x2) # load 0x7fbfffff from memory into f13
fmadd.s f5, f19, f29, f13, dyn # perform operation
fmadd.s f5, f19, f29, f13, rdn # perform operation
fmadd.s f5, f19, f29, f13, rmm # perform operation
fmadd.s f5, f19, f29, f13, rne # perform operation
fmadd.s f5, f19, f29, f13, rtz # perform operation
fmadd.s f5, f19, f29, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f19, f29, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f19, f29, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x7ef8654f)
li x12, 0x913c866d8b5e35af # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f5, 0(x2) # load 0x7f800001 from memory into f5
li x3, 0xd6e7f3c4a1ef9d38 # load x3 with value 0xd6e7f3c4a1ef9d38
sw x3, 0(x2) # store 0xd6e7f3c4a1ef9d38 in memory
flw f25, 0(x2) # load 0xd6e7f3c4a1ef9d38 from memory into f25
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
fmadd.s f12, f5, f25, f18, dyn # perform operation
fmadd.s f12, f5, f25, f18, rdn # perform operation
fmadd.s f12, f5, f25, f18, rmm # perform operation
fmadd.s f12, f5, f25, f18, rne # perform operation
fmadd.s f12, f5, f25, f18, rtz # perform operation
fmadd.s f12, f5, f25, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f12, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f12, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f12, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f12, f5, f25, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f12, f5, f25, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7f800001 fs3 = 0x813d9ab0)
li x9, 0x01bb16263448dd32 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f31, 0(x2) # load 0x7f800001 from memory into f31
li x3, 0x127f2ff67726b1b3 # load x3 with value 0x127f2ff67726b1b3
sw x3, 0(x2) # store 0x127f2ff67726b1b3 in memory
flw f17, 0(x2) # load 0x127f2ff67726b1b3 from memory into f17
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
fmadd.s f9, f31, f17, f18, dyn # perform operation
fmadd.s f9, f31, f17, f18, rdn # perform operation
fmadd.s f9, f31, f17, f18, rmm # perform operation
fmadd.s f9, f31, f17, f18, rne # perform operation
fmadd.s f9, f31, f17, f18, rtz # perform operation
fmadd.s f9, f31, f17, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f31, f17, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f31, f17, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x0)
li x31, 0xb58010989ce36f2d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f1, 0(x2) # load 0x7fbfffff from memory into f1
li x3, 0x4b13e72e33805212 # load x3 with value 0x4b13e72e33805212
sw x3, 0(x2) # store 0x4b13e72e33805212 in memory
flw f26, 0(x2) # load 0x4b13e72e33805212 from memory into f26
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f16, 0(x2) # load 0x00000000 from memory into f16
fmadd.s f31, f1, f26, f16, dyn # perform operation
fmadd.s f31, f1, f26, f16, rdn # perform operation
fmadd.s f31, f1, f26, f16, rmm # perform operation
fmadd.s f31, f1, f26, f16, rne # perform operation
fmadd.s f31, f1, f26, f16, rtz # perform operation
fmadd.s f31, f1, f26, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f1, f26, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f1, f26, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f1, f26, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f1, f26, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f1, f26, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000000)
li x16, 0x9e51c1ddbbb04fc1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x7bcff22f871c049c # load x3 with value 0x7bcff22f871c049c
sw x3, 0(x2) # store 0x7bcff22f871c049c in memory
flw f21, 0(x2) # load 0x7bcff22f871c049c from memory into f21
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f15, 0(x2) # load 0x80000000 from memory into f15
fmadd.s f16, f27, f21, f15, dyn # perform operation
fmadd.s f16, f27, f21, f15, rdn # perform operation
fmadd.s f16, f27, f21, f15, rmm # perform operation
fmadd.s f16, f27, f21, f15, rne # perform operation
fmadd.s f16, f27, f21, f15, rtz # perform operation
fmadd.s f16, f27, f21, f15, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f27, f21, f15 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f27, f21, f15 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f27, f21, f15 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f27, f21, f15 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f27, f21, f15 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3f800000)
li x22, 0xf1d09af83372dbc0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x8cb876b5afcc2648 # load x3 with value 0x8cb876b5afcc2648
sw x3, 0(x2) # store 0x8cb876b5afcc2648 in memory
flw f8, 0(x2) # load 0x8cb876b5afcc2648 from memory into f8
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f20, 0(x2) # load 0x3f800000 from memory into f20
fmadd.s f22, f17, f8, f20, dyn # perform operation
fmadd.s f22, f17, f8, f20, rdn # perform operation
fmadd.s f22, f17, f8, f20, rmm # perform operation
fmadd.s f22, f17, f8, f20, rne # perform operation
fmadd.s f22, f17, f8, f20, rtz # perform operation
fmadd.s f22, f17, f8, f20, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f17, f8, f20 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f17, f8, f20 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbf800000)
li x14, 0xaf28b7fd7a8b7ba9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
li x3, 0xc3339f657155ba5e # load x3 with value 0xc3339f657155ba5e
sw x3, 0(x2) # store 0xc3339f657155ba5e in memory
flw f31, 0(x2) # load 0xc3339f657155ba5e from memory into f31
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f17, 0(x2) # load 0xbf800000 from memory into f17
fmadd.s f14, f4, f31, f17, dyn # perform operation
fmadd.s f14, f4, f31, f17, rdn # perform operation
fmadd.s f14, f4, f31, f17, rmm # perform operation
fmadd.s f14, f4, f31, f17, rne # perform operation
fmadd.s f14, f4, f31, f17, rtz # perform operation
fmadd.s f14, f4, f31, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f4, f31, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f4, f31, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x3fc00000)
li x28, 0x6894666bf460c650 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f26, 0(x2) # load 0x7fbfffff from memory into f26
li x3, 0x73f8a31382319cfc # load x3 with value 0x73f8a31382319cfc
sw x3, 0(x2) # store 0x73f8a31382319cfc in memory
flw f18, 0(x2) # load 0x73f8a31382319cfc from memory into f18
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f4, 0(x2) # load 0x3fc00000 from memory into f4
fmadd.s f28, f26, f18, f4, dyn # perform operation
fmadd.s f28, f26, f18, f4, rdn # perform operation
fmadd.s f28, f26, f18, f4, rmm # perform operation
fmadd.s f28, f26, f18, f4, rne # perform operation
fmadd.s f28, f26, f18, f4, rtz # perform operation
fmadd.s f28, f26, f18, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f26, f18, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f26, f18, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f26, f18, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f26, f18, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f26, f18, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xbfc00000)
li x2, 0x1195736393e24ad4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x39a5d3beaa49265d # load x3 with value 0x39a5d3beaa49265d
sw x3, 0(x2) # store 0x39a5d3beaa49265d in memory
flw f7, 0(x2) # load 0x39a5d3beaa49265d from memory into f7
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f6, 0(x2) # load 0xbfc00000 from memory into f6
fmadd.s f2, f27, f7, f6, dyn # perform operation
fmadd.s f2, f27, f7, f6, rdn # perform operation
fmadd.s f2, f27, f7, f6, rmm # perform operation
fmadd.s f2, f27, f7, f6, rne # perform operation
fmadd.s f2, f27, f7, f6, rtz # perform operation
fmadd.s f2, f27, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x40000000)
li x4, 0x3422c3f40da5131a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f3, 0(x2) # load 0x7fbfffff from memory into f3
li x3, 0x95b77683f472cba6 # load x3 with value 0x95b77683f472cba6
sw x3, 0(x2) # store 0x95b77683f472cba6 in memory
flw f1, 0(x2) # load 0x95b77683f472cba6 from memory into f1
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f13, 0(x2) # load 0x40000000 from memory into f13
fmadd.s f4, f3, f1, f13, dyn # perform operation
fmadd.s f4, f3, f1, f13, rdn # perform operation
fmadd.s f4, f3, f1, f13, rmm # perform operation
fmadd.s f4, f3, f1, f13, rne # perform operation
fmadd.s f4, f3, f1, f13, rtz # perform operation
fmadd.s f4, f3, f1, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f3, f1, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f3, f1, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xc0000000)
li x3, 0xc61338006dd5e418 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xa9f8d6fcfcb6bab7 # load x3 with value 0xa9f8d6fcfcb6bab7
sw x3, 0(x2) # store 0xa9f8d6fcfcb6bab7 in memory
flw f30, 0(x2) # load 0xa9f8d6fcfcb6bab7 from memory into f30
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f12, 0(x2) # load 0xc0000000 from memory into f12
fmadd.s f3, f17, f30, f12, dyn # perform operation
fmadd.s f3, f17, f30, f12, rdn # perform operation
fmadd.s f3, f17, f30, f12, rmm # perform operation
fmadd.s f3, f17, f30, f12, rne # perform operation
fmadd.s f3, f17, f30, f12, rtz # perform operation
fmadd.s f3, f17, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f3, f17, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f3, f17, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x800000)
li x18, 0xa204950aabd82ded # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f28, 0(x2) # load 0x7fbfffff from memory into f28
li x3, 0x8de8a841293a544a # load x3 with value 0x8de8a841293a544a
sw x3, 0(x2) # store 0x8de8a841293a544a in memory
flw f3, 0(x2) # load 0x8de8a841293a544a from memory into f3
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f12, 0(x2) # load 0x00800000 from memory into f12
fmadd.s f18, f28, f3, f12, dyn # perform operation
fmadd.s f18, f28, f3, f12, rdn # perform operation
fmadd.s f18, f28, f3, f12, rmm # perform operation
fmadd.s f18, f28, f3, f12, rne # perform operation
fmadd.s f18, f28, f3, f12, rtz # perform operation
fmadd.s f18, f28, f3, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f28, f3, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f28, f3, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f28, f3, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f28, f3, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f28, f3, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80800000)
li x26, 0x167d607c1120aa94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0xb944c211a34874b6 # load x3 with value 0xb944c211a34874b6
sw x3, 0(x2) # store 0xb944c211a34874b6 in memory
flw f2, 0(x2) # load 0xb944c211a34874b6 from memory into f2
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f28, 0(x2) # load 0x80800000 from memory into f28
fmadd.s f26, f17, f2, f28, dyn # perform operation
fmadd.s f26, f17, f2, f28, rdn # perform operation
fmadd.s f26, f17, f2, f28, rmm # perform operation
fmadd.s f26, f17, f2, f28, rne # perform operation
fmadd.s f26, f17, f2, f28, rtz # perform operation
fmadd.s f26, f17, f2, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f17, f2, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f17, f2, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f7fffff)
li x7, 0xd4c3132d9c72ef1c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f5, 0(x2) # load 0x7fbfffff from memory into f5
li x3, 0x24a47dcd31620eb1 # load x3 with value 0x24a47dcd31620eb1
sw x3, 0(x2) # store 0x24a47dcd31620eb1 in memory
flw f17, 0(x2) # load 0x24a47dcd31620eb1 from memory into f17
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f14, 0(x2) # load 0x7f7fffff from memory into f14
fmadd.s f7, f5, f17, f14, dyn # perform operation
fmadd.s f7, f5, f17, f14, rdn # perform operation
fmadd.s f7, f5, f17, f14, rmm # perform operation
fmadd.s f7, f5, f17, f14, rne # perform operation
fmadd.s f7, f5, f17, f14, rtz # perform operation
fmadd.s f7, f5, f17, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f5, f17, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f5, f17, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff7fffff)
li x2, 0x3cf4e77d1dcfefbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f17, 0(x2) # load 0x7fbfffff from memory into f17
li x3, 0x2bdd77d1e6bd3a55 # load x3 with value 0x2bdd77d1e6bd3a55
sw x3, 0(x2) # store 0x2bdd77d1e6bd3a55 in memory
flw f11, 0(x2) # load 0x2bdd77d1e6bd3a55 from memory into f11
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f25, 0(x2) # load 0xff7fffff from memory into f25
fmadd.s f2, f17, f11, f25, dyn # perform operation
fmadd.s f2, f17, f11, f25, rdn # perform operation
fmadd.s f2, f17, f11, f25, rmm # perform operation
fmadd.s f2, f17, f11, f25, rne # perform operation
fmadd.s f2, f17, f11, f25, rtz # perform operation
fmadd.s f2, f17, f11, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f17, f11, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f17, f11, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffff)
li x2, 0x7e2f300f75726a0f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x5cb991dba39a71d7 # load x3 with value 0x5cb991dba39a71d7
sw x3, 0(x2) # store 0x5cb991dba39a71d7 in memory
flw f26, 0(x2) # load 0x5cb991dba39a71d7 from memory into f26
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f19, 0(x2) # load 0x007fffff from memory into f19
fmadd.s f2, f9, f26, f19, dyn # perform operation
fmadd.s f2, f9, f26, f19, rdn # perform operation
fmadd.s f2, f9, f26, f19, rmm # perform operation
fmadd.s f2, f9, f26, f19, rne # perform operation
fmadd.s f2, f9, f26, f19, rtz # perform operation
fmadd.s f2, f9, f26, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f9, f26, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f9, f26, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x807fffff)
li x9, 0x9bed404897996c5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f16, 0(x2) # load 0x7fbfffff from memory into f16
li x3, 0x3310266494d483f1 # load x3 with value 0x3310266494d483f1
sw x3, 0(x2) # store 0x3310266494d483f1 in memory
flw f5, 0(x2) # load 0x3310266494d483f1 from memory into f5
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f10, 0(x2) # load 0x807fffff from memory into f10
fmadd.s f9, f16, f5, f10, dyn # perform operation
fmadd.s f9, f16, f5, f10, rdn # perform operation
fmadd.s f9, f16, f5, f10, rmm # perform operation
fmadd.s f9, f16, f5, f10, rne # perform operation
fmadd.s f9, f16, f5, f10, rtz # perform operation
fmadd.s f9, f16, f5, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f9, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f9, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f9, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f9, f16, f5, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f9, f16, f5, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x400000)
li x4, 0xb1f68f5aa4b34ea4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f21, 0(x2) # load 0x7fbfffff from memory into f21
li x3, 0x29f0768216bf804d # load x3 with value 0x29f0768216bf804d
sw x3, 0(x2) # store 0x29f0768216bf804d in memory
flw f8, 0(x2) # load 0x29f0768216bf804d from memory into f8
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f22, 0(x2) # load 0x00400000 from memory into f22
fmadd.s f4, f21, f8, f22, dyn # perform operation
fmadd.s f4, f21, f8, f22, rdn # perform operation
fmadd.s f4, f21, f8, f22, rmm # perform operation
fmadd.s f4, f21, f8, f22, rne # perform operation
fmadd.s f4, f21, f8, f22, rtz # perform operation
fmadd.s f4, f21, f8, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f21, f8, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f21, f8, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80400000)
li x4, 0xa21d2bd8c5bb9c84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0x6a18d9f46e4c91a3 # load x3 with value 0x6a18d9f46e4c91a3
sw x3, 0(x2) # store 0x6a18d9f46e4c91a3 in memory
flw f5, 0(x2) # load 0x6a18d9f46e4c91a3 from memory into f5
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f11, 0(x2) # load 0x80400000 from memory into f11
fmadd.s f4, f27, f5, f11, dyn # perform operation
fmadd.s f4, f27, f5, f11, rdn # perform operation
fmadd.s f4, f27, f5, f11, rmm # perform operation
fmadd.s f4, f27, f5, f11, rne # perform operation
fmadd.s f4, f27, f5, f11, rtz # perform operation
fmadd.s f4, f27, f5, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f27, f5, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f27, f5, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f27, f5, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f27, f5, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f27, f5, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x1)
li x25, 0x907226f91e7ab0a9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f12, 0(x2) # load 0x7fbfffff from memory into f12
li x3, 0x75a8c30eeb5ec8de # load x3 with value 0x75a8c30eeb5ec8de
sw x3, 0(x2) # store 0x75a8c30eeb5ec8de in memory
flw f3, 0(x2) # load 0x75a8c30eeb5ec8de from memory into f3
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f5, 0(x2) # load 0x00000001 from memory into f5
fmadd.s f25, f12, f3, f5, dyn # perform operation
fmadd.s f25, f12, f3, f5, rdn # perform operation
fmadd.s f25, f12, f3, f5, rmm # perform operation
fmadd.s f25, f12, f3, f5, rne # perform operation
fmadd.s f25, f12, f3, f5, rtz # perform operation
fmadd.s f25, f12, f3, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f12, f3, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f12, f3, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x80000001)
li x28, 0xe44d4b20e1a9e967 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x537385d2c3fb8af3 # load x3 with value 0x537385d2c3fb8af3
sw x3, 0(x2) # store 0x537385d2c3fb8af3 in memory
flw f6, 0(x2) # load 0x537385d2c3fb8af3 from memory into f6
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f1, 0(x2) # load 0x80000001 from memory into f1
fmadd.s f28, f9, f6, f1, dyn # perform operation
fmadd.s f28, f9, f6, f1, rdn # perform operation
fmadd.s f28, f9, f6, f1, rmm # perform operation
fmadd.s f28, f9, f6, f1, rne # perform operation
fmadd.s f28, f9, f6, f1, rtz # perform operation
fmadd.s f28, f9, f6, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f9, f6, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f9, f6, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f9, f6, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f9, f6, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f9, f6, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800000)
li x23, 0x4d2cb4a3b7b84f91 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
li x3, 0x3a9118c4759f9e24 # load x3 with value 0x3a9118c4759f9e24
sw x3, 0(x2) # store 0x3a9118c4759f9e24 in memory
flw f12, 0(x2) # load 0x3a9118c4759f9e24 from memory into f12
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f25, 0(x2) # load 0x7f800000 from memory into f25
fmadd.s f23, f29, f12, f25, dyn # perform operation
fmadd.s f23, f29, f12, f25, rdn # perform operation
fmadd.s f23, f29, f12, f25, rmm # perform operation
fmadd.s f23, f29, f12, f25, rne # perform operation
fmadd.s f23, f29, f12, f25, rtz # perform operation
fmadd.s f23, f29, f12, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f12, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f12, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0xff800000)
li x25, 0x55203fb33b13a882 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f15, 0(x2) # load 0x7fbfffff from memory into f15
li x3, 0x87c543d4289619a2 # load x3 with value 0x87c543d4289619a2
sw x3, 0(x2) # store 0x87c543d4289619a2 in memory
flw f11, 0(x2) # load 0x87c543d4289619a2 from memory into f11
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f26, 0(x2) # load 0xff800000 from memory into f26
fmadd.s f25, f15, f11, f26, dyn # perform operation
fmadd.s f25, f15, f11, f26, rdn # perform operation
fmadd.s f25, f15, f11, f26, rmm # perform operation
fmadd.s f25, f15, f11, f26, rne # perform operation
fmadd.s f25, f15, f11, f26, rtz # perform operation
fmadd.s f25, f15, f11, f26, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f15, f11, f26 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f15, f11, f26 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f15, f11, f26 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f15, f11, f26 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f15, f11, f26 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fc00000)
li x27, 0xe0f8ae903aa41d12 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0x7251afe8d000e69e # load x3 with value 0x7251afe8d000e69e
sw x3, 0(x2) # store 0x7251afe8d000e69e in memory
flw f14, 0(x2) # load 0x7251afe8d000e69e from memory into f14
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f31, 0(x2) # load 0x7fc00000 from memory into f31
fmadd.s f27, f9, f14, f31, dyn # perform operation
fmadd.s f27, f9, f14, f31, rdn # perform operation
fmadd.s f27, f9, f14, f31, rmm # perform operation
fmadd.s f27, f9, f14, f31, rne # perform operation
fmadd.s f27, f9, f14, f31, rtz # perform operation
fmadd.s f27, f9, f14, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f9, f14, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f9, f14, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fffffff)
li x22, 0xe07e5cff2e958857 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f20, 0(x2) # load 0x7fbfffff from memory into f20
li x3, 0xd3035322aa511f9f # load x3 with value 0xd3035322aa511f9f
sw x3, 0(x2) # store 0xd3035322aa511f9f in memory
flw f13, 0(x2) # load 0xd3035322aa511f9f from memory into f13
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f11, 0(x2) # load 0x7fffffff from memory into f11
fmadd.s f22, f20, f13, f11, dyn # perform operation
fmadd.s f22, f20, f13, f11, rdn # perform operation
fmadd.s f22, f20, f13, f11, rmm # perform operation
fmadd.s f22, f20, f13, f11, rne # perform operation
fmadd.s f22, f20, f13, f11, rtz # perform operation
fmadd.s f22, f20, f13, f11, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f20, f13, f11 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f20, f13, f11 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f20, f13, f11 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f20, f13, f11 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f20, f13, f11 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7f800001)
li x7, 0x48ac2af98771320f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
li x3, 0xcd253e317e58f5b0 # load x3 with value 0xcd253e317e58f5b0
sw x3, 0(x2) # store 0xcd253e317e58f5b0 in memory
flw f25, 0(x2) # load 0xcd253e317e58f5b0 from memory into f25
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f28, 0(x2) # load 0x7f800001 from memory into f28
fmadd.s f7, f31, f25, f28, dyn # perform operation
fmadd.s f7, f31, f25, f28, rdn # perform operation
fmadd.s f7, f31, f25, f28, rmm # perform operation
fmadd.s f7, f31, f25, f28, rne # perform operation
fmadd.s f7, f31, f25, f28, rtz # perform operation
fmadd.s f7, f31, f25, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f31, f25, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f31, f25, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7fbfffff)
li x7, 0x165edb79f092c09d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f27, 0(x2) # load 0x7fbfffff from memory into f27
li x3, 0xb8315dbc6e73d94 # load x3 with value 0xb8315dbc6e73d94
sw x3, 0(x2) # store 0xb8315dbc6e73d94 in memory
flw f24, 0(x2) # load 0xb8315dbc6e73d94 from memory into f24
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f29, 0(x2) # load 0x7fbfffff from memory into f29
fmadd.s f7, f27, f24, f29, dyn # perform operation
fmadd.s f7, f27, f24, f29, rdn # perform operation
fmadd.s f7, f27, f24, f29, rmm # perform operation
fmadd.s f7, f27, f24, f29, rne # perform operation
fmadd.s f7, f27, f24, f29, rtz # perform operation
fmadd.s f7, f27, f24, f29, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f27, f24, f29 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f27, f24, f29 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x7ef8654f)
li x20, 0x9c8112eb264e7574 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f9, 0(x2) # load 0x7fbfffff from memory into f9
li x3, 0xeb412cbe5095c264 # load x3 with value 0xeb412cbe5095c264
sw x3, 0(x2) # store 0xeb412cbe5095c264 in memory
flw f11, 0(x2) # load 0xeb412cbe5095c264 from memory into f11
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
fmadd.s f20, f9, f11, f23, dyn # perform operation
fmadd.s f20, f9, f11, f23, rdn # perform operation
fmadd.s f20, f9, f11, f23, rmm # perform operation
fmadd.s f20, f9, f11, f23, rne # perform operation
fmadd.s f20, f9, f11, f23, rtz # perform operation
fmadd.s f20, f9, f11, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f9, f11, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f9, f11, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7fbfffff fs3 = 0x813d9ab0)
li x11, 0xe7e37216d38a129b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f25, 0(x2) # load 0x7fbfffff from memory into f25
li x3, 0xbdda6cfd84ec3b31 # load x3 with value 0xbdda6cfd84ec3b31
sw x3, 0(x2) # store 0xbdda6cfd84ec3b31 in memory
flw f3, 0(x2) # load 0xbdda6cfd84ec3b31 from memory into f3
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
fmadd.s f11, f25, f3, f19, dyn # perform operation
fmadd.s f11, f25, f3, f19, rdn # perform operation
fmadd.s f11, f25, f3, f19, rmm # perform operation
fmadd.s f11, f25, f3, f19, rne # perform operation
fmadd.s f11, f25, f3, f19, rtz # perform operation
fmadd.s f11, f25, f3, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f25, f3, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f25, f3, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x0)
li x8, 0xb3f5b8ed38433522 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f23, 0(x2) # load 0x7ef8654f from memory into f23
li x3, 0x9eb4aadaff77c3bb # load x3 with value 0x9eb4aadaff77c3bb
sw x3, 0(x2) # store 0x9eb4aadaff77c3bb in memory
flw f2, 0(x2) # load 0x9eb4aadaff77c3bb from memory into f2
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f12, 0(x2) # load 0x00000000 from memory into f12
fmadd.s f8, f23, f2, f12, dyn # perform operation
fmadd.s f8, f23, f2, f12, rdn # perform operation
fmadd.s f8, f23, f2, f12, rmm # perform operation
fmadd.s f8, f23, f2, f12, rne # perform operation
fmadd.s f8, f23, f2, f12, rtz # perform operation
fmadd.s f8, f23, f2, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f23, f2, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f23, f2, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f23, f2, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f23, f2, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f23, f2, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000000)
li x22, 0x68cde5c7e06d7ec7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0x8d1979011c91811c # load x3 with value 0x8d1979011c91811c
sw x3, 0(x2) # store 0x8d1979011c91811c in memory
flw f11, 0(x2) # load 0x8d1979011c91811c from memory into f11
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f13, 0(x2) # load 0x80000000 from memory into f13
fmadd.s f22, f21, f11, f13, dyn # perform operation
fmadd.s f22, f21, f11, f13, rdn # perform operation
fmadd.s f22, f21, f11, f13, rmm # perform operation
fmadd.s f22, f21, f11, f13, rne # perform operation
fmadd.s f22, f21, f11, f13, rtz # perform operation
fmadd.s f22, f21, f11, f13, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f21, f11, f13 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f21, f11, f13 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3f800000)
li x14, 0xda590f068f00d7c6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
li x3, 0x8d7e0f138e057a88 # load x3 with value 0x8d7e0f138e057a88
sw x3, 0(x2) # store 0x8d7e0f138e057a88 in memory
flw f7, 0(x2) # load 0x8d7e0f138e057a88 from memory into f7
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f18, 0(x2) # load 0x3f800000 from memory into f18
fmadd.s f14, f9, f7, f18, dyn # perform operation
fmadd.s f14, f9, f7, f18, rdn # perform operation
fmadd.s f14, f9, f7, f18, rmm # perform operation
fmadd.s f14, f9, f7, f18, rne # perform operation
fmadd.s f14, f9, f7, f18, rtz # perform operation
fmadd.s f14, f9, f7, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f9, f7, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f9, f7, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f9, f7, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f9, f7, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f9, f7, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbf800000)
li x11, 0x5b3f68a87ec4ecef # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x8e689bf7e7596fab # load x3 with value 0x8e689bf7e7596fab
sw x3, 0(x2) # store 0x8e689bf7e7596fab in memory
flw f17, 0(x2) # load 0x8e689bf7e7596fab from memory into f17
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f4, 0(x2) # load 0xbf800000 from memory into f4
fmadd.s f11, f29, f17, f4, dyn # perform operation
fmadd.s f11, f29, f17, f4, rdn # perform operation
fmadd.s f11, f29, f17, f4, rmm # perform operation
fmadd.s f11, f29, f17, f4, rne # perform operation
fmadd.s f11, f29, f17, f4, rtz # perform operation
fmadd.s f11, f29, f17, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f29, f17, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f29, f17, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f29, f17, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f29, f17, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f29, f17, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x3fc00000)
li x26, 0x6e34daa093e8d234 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x17999f21a7159ebd # load x3 with value 0x17999f21a7159ebd
sw x3, 0(x2) # store 0x17999f21a7159ebd in memory
flw f22, 0(x2) # load 0x17999f21a7159ebd from memory into f22
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f3, 0(x2) # load 0x3fc00000 from memory into f3
fmadd.s f26, f16, f22, f3, dyn # perform operation
fmadd.s f26, f16, f22, f3, rdn # perform operation
fmadd.s f26, f16, f22, f3, rmm # perform operation
fmadd.s f26, f16, f22, f3, rne # perform operation
fmadd.s f26, f16, f22, f3, rtz # perform operation
fmadd.s f26, f16, f22, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f16, f22, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f16, f22, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f16, f22, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f16, f22, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f16, f22, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xbfc00000)
li x26, 0x8812e2363bb3c31c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f6, 0(x2) # load 0x7ef8654f from memory into f6
li x3, 0x1224ed028e352571 # load x3 with value 0x1224ed028e352571
sw x3, 0(x2) # store 0x1224ed028e352571 in memory
flw f19, 0(x2) # load 0x1224ed028e352571 from memory into f19
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f25, 0(x2) # load 0xbfc00000 from memory into f25
fmadd.s f26, f6, f19, f25, dyn # perform operation
fmadd.s f26, f6, f19, f25, rdn # perform operation
fmadd.s f26, f6, f19, f25, rmm # perform operation
fmadd.s f26, f6, f19, f25, rne # perform operation
fmadd.s f26, f6, f19, f25, rtz # perform operation
fmadd.s f26, f6, f19, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f6, f19, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f6, f19, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x40000000)
li x31, 0x44a262fe28e11579 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0xf86d500644840920 # load x3 with value 0xf86d500644840920
sw x3, 0(x2) # store 0xf86d500644840920 in memory
flw f26, 0(x2) # load 0xf86d500644840920 from memory into f26
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f12, 0(x2) # load 0x40000000 from memory into f12
fmadd.s f31, f28, f26, f12, dyn # perform operation
fmadd.s f31, f28, f26, f12, rdn # perform operation
fmadd.s f31, f28, f26, f12, rmm # perform operation
fmadd.s f31, f28, f26, f12, rne # perform operation
fmadd.s f31, f28, f26, f12, rtz # perform operation
fmadd.s f31, f28, f26, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f31, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f31, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f31, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f31, f28, f26, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f31, f28, f26, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xc0000000)
li x30, 0xc5367f5e5433a8a3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f28, 0(x2) # load 0x7ef8654f from memory into f28
li x3, 0x4b93c91d77547657 # load x3 with value 0x4b93c91d77547657
sw x3, 0(x2) # store 0x4b93c91d77547657 in memory
flw f27, 0(x2) # load 0x4b93c91d77547657 from memory into f27
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f19, 0(x2) # load 0xc0000000 from memory into f19
fmadd.s f30, f28, f27, f19, dyn # perform operation
fmadd.s f30, f28, f27, f19, rdn # perform operation
fmadd.s f30, f28, f27, f19, rmm # perform operation
fmadd.s f30, f28, f27, f19, rne # perform operation
fmadd.s f30, f28, f27, f19, rtz # perform operation
fmadd.s f30, f28, f27, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f30, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f30, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f30, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f30, f28, f27, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f30, f28, f27, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x800000)
li x20, 0x237ffddbac3c066f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xe3512e25fcaa6ea # load x3 with value 0xe3512e25fcaa6ea
sw x3, 0(x2) # store 0xe3512e25fcaa6ea in memory
flw f25, 0(x2) # load 0xe3512e25fcaa6ea from memory into f25
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f19, 0(x2) # load 0x00800000 from memory into f19
fmadd.s f20, f30, f25, f19, dyn # perform operation
fmadd.s f20, f30, f25, f19, rdn # perform operation
fmadd.s f20, f30, f25, f19, rmm # perform operation
fmadd.s f20, f30, f25, f19, rne # perform operation
fmadd.s f20, f30, f25, f19, rtz # perform operation
fmadd.s f20, f30, f25, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f30, f25, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f30, f25, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80800000)
li x2, 0xbcfc7c04d834e8f4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f10, 0(x2) # load 0x7ef8654f from memory into f10
li x3, 0x953555b0bbd2abd9 # load x3 with value 0x953555b0bbd2abd9
sw x3, 0(x2) # store 0x953555b0bbd2abd9 in memory
flw f31, 0(x2) # load 0x953555b0bbd2abd9 from memory into f31
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f22, 0(x2) # load 0x80800000 from memory into f22
fmadd.s f2, f10, f31, f22, dyn # perform operation
fmadd.s f2, f10, f31, f22, rdn # perform operation
fmadd.s f2, f10, f31, f22, rmm # perform operation
fmadd.s f2, f10, f31, f22, rne # perform operation
fmadd.s f2, f10, f31, f22, rtz # perform operation
fmadd.s f2, f10, f31, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f10, f31, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f10, f31, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f7fffff)
li x22, 0xa35bd0b11ce3467c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f19, 0(x2) # load 0x7ef8654f from memory into f19
li x3, 0x6ca4fb36bc9cc785 # load x3 with value 0x6ca4fb36bc9cc785
sw x3, 0(x2) # store 0x6ca4fb36bc9cc785 in memory
flw f5, 0(x2) # load 0x6ca4fb36bc9cc785 from memory into f5
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f4, 0(x2) # load 0x7f7fffff from memory into f4
fmadd.s f22, f19, f5, f4, dyn # perform operation
fmadd.s f22, f19, f5, f4, rdn # perform operation
fmadd.s f22, f19, f5, f4, rmm # perform operation
fmadd.s f22, f19, f5, f4, rne # perform operation
fmadd.s f22, f19, f5, f4, rtz # perform operation
fmadd.s f22, f19, f5, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f22, f19, f5, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f22, f19, f5, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff7fffff)
li x19, 0xd75021d5d4a6162b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f1, 0(x2) # load 0x7ef8654f from memory into f1
li x3, 0x1f0f5fa7dcfa711e # load x3 with value 0x1f0f5fa7dcfa711e
sw x3, 0(x2) # store 0x1f0f5fa7dcfa711e in memory
flw f12, 0(x2) # load 0x1f0f5fa7dcfa711e from memory into f12
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmadd.s f19, f1, f12, f23, dyn # perform operation
fmadd.s f19, f1, f12, f23, rdn # perform operation
fmadd.s f19, f1, f12, f23, rmm # perform operation
fmadd.s f19, f1, f12, f23, rne # perform operation
fmadd.s f19, f1, f12, f23, rtz # perform operation
fmadd.s f19, f1, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f1, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f1, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f1, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f1, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f1, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffff)
li x5, 0x33c6d1cf0259857f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xbd6dfc12a41cb18b # load x3 with value 0xbd6dfc12a41cb18b
sw x3, 0(x2) # store 0xbd6dfc12a41cb18b in memory
flw f10, 0(x2) # load 0xbd6dfc12a41cb18b from memory into f10
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f3, 0(x2) # load 0x007fffff from memory into f3
fmadd.s f5, f17, f10, f3, dyn # perform operation
fmadd.s f5, f17, f10, f3, rdn # perform operation
fmadd.s f5, f17, f10, f3, rmm # perform operation
fmadd.s f5, f17, f10, f3, rne # perform operation
fmadd.s f5, f17, f10, f3, rtz # perform operation
fmadd.s f5, f17, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f17, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f17, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f17, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f17, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f17, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x807fffff)
li x18, 0xcefca7d739cb7be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0xf8124ed43f329763 # load x3 with value 0xf8124ed43f329763
sw x3, 0(x2) # store 0xf8124ed43f329763 in memory
flw f11, 0(x2) # load 0xf8124ed43f329763 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f6, 0(x2) # load 0x807fffff from memory into f6
fmadd.s f18, f16, f11, f6, dyn # perform operation
fmadd.s f18, f16, f11, f6, rdn # perform operation
fmadd.s f18, f16, f11, f6, rmm # perform operation
fmadd.s f18, f16, f11, f6, rne # perform operation
fmadd.s f18, f16, f11, f6, rtz # perform operation
fmadd.s f18, f16, f11, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f16, f11, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f16, f11, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x400000)
li x14, 0xd89e74322c71375c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f4, 0(x2) # load 0x7ef8654f from memory into f4
li x3, 0x94841aee5ae5d84 # load x3 with value 0x94841aee5ae5d84
sw x3, 0(x2) # store 0x94841aee5ae5d84 in memory
flw f11, 0(x2) # load 0x94841aee5ae5d84 from memory into f11
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f8, 0(x2) # load 0x00400000 from memory into f8
fmadd.s f14, f4, f11, f8, dyn # perform operation
fmadd.s f14, f4, f11, f8, rdn # perform operation
fmadd.s f14, f4, f11, f8, rmm # perform operation
fmadd.s f14, f4, f11, f8, rne # perform operation
fmadd.s f14, f4, f11, f8, rtz # perform operation
fmadd.s f14, f4, f11, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f4, f11, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f4, f11, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80400000)
li x23, 0x6935356b8f8918ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f29, 0(x2) # load 0x7ef8654f from memory into f29
li x3, 0x7da75792680059b2 # load x3 with value 0x7da75792680059b2
sw x3, 0(x2) # store 0x7da75792680059b2 in memory
flw f18, 0(x2) # load 0x7da75792680059b2 from memory into f18
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f2, 0(x2) # load 0x80400000 from memory into f2
fmadd.s f23, f29, f18, f2, dyn # perform operation
fmadd.s f23, f29, f18, f2, rdn # perform operation
fmadd.s f23, f29, f18, f2, rmm # perform operation
fmadd.s f23, f29, f18, f2, rne # perform operation
fmadd.s f23, f29, f18, f2, rtz # perform operation
fmadd.s f23, f29, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f29, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f29, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f29, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f29, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f29, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x1)
li x4, 0x0aaa11d18e622176 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0x98d147be00cab2d4 # load x3 with value 0x98d147be00cab2d4
sw x3, 0(x2) # store 0x98d147be00cab2d4 in memory
flw f9, 0(x2) # load 0x98d147be00cab2d4 from memory into f9
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f25, 0(x2) # load 0x00000001 from memory into f25
fmadd.s f4, f30, f9, f25, dyn # perform operation
fmadd.s f4, f30, f9, f25, rdn # perform operation
fmadd.s f4, f30, f9, f25, rmm # perform operation
fmadd.s f4, f30, f9, f25, rne # perform operation
fmadd.s f4, f30, f9, f25, rtz # perform operation
fmadd.s f4, f30, f9, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f4, f30, f9, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f4, f30, f9, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f4, f30, f9, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f4, f30, f9, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f4, f30, f9, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x80000001)
li x13, 0x43b0b7e572b40db6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f11, 0(x2) # load 0x7ef8654f from memory into f11
li x3, 0x5fd55f1286967ed5 # load x3 with value 0x5fd55f1286967ed5
sw x3, 0(x2) # store 0x5fd55f1286967ed5 in memory
flw f24, 0(x2) # load 0x5fd55f1286967ed5 from memory into f24
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f16, 0(x2) # load 0x80000001 from memory into f16
fmadd.s f13, f11, f24, f16, dyn # perform operation
fmadd.s f13, f11, f24, f16, rdn # perform operation
fmadd.s f13, f11, f24, f16, rmm # perform operation
fmadd.s f13, f11, f24, f16, rne # perform operation
fmadd.s f13, f11, f24, f16, rtz # perform operation
fmadd.s f13, f11, f24, f16, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f11, f24, f16 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f11, f24, f16 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800000)
li x6, 0x58ad48a308aa6701 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f18, 0(x2) # load 0x7ef8654f from memory into f18
li x3, 0xb7e43f5ee46f33ee # load x3 with value 0xb7e43f5ee46f33ee
sw x3, 0(x2) # store 0xb7e43f5ee46f33ee in memory
flw f30, 0(x2) # load 0xb7e43f5ee46f33ee from memory into f30
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f28, 0(x2) # load 0x7f800000 from memory into f28
fmadd.s f6, f18, f30, f28, dyn # perform operation
fmadd.s f6, f18, f30, f28, rdn # perform operation
fmadd.s f6, f18, f30, f28, rmm # perform operation
fmadd.s f6, f18, f30, f28, rne # perform operation
fmadd.s f6, f18, f30, f28, rtz # perform operation
fmadd.s f6, f18, f30, f28, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f18, f30, f28 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f18, f30, f28 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f18, f30, f28 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f18, f30, f28 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f18, f30, f28 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0xff800000)
li x27, 0x09a0826426655b4a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f20, 0(x2) # load 0x7ef8654f from memory into f20
li x3, 0x9befd46299f16f2 # load x3 with value 0x9befd46299f16f2
sw x3, 0(x2) # store 0x9befd46299f16f2 in memory
flw f9, 0(x2) # load 0x9befd46299f16f2 from memory into f9
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f1, 0(x2) # load 0xff800000 from memory into f1
fmadd.s f27, f20, f9, f1, dyn # perform operation
fmadd.s f27, f20, f9, f1, rdn # perform operation
fmadd.s f27, f20, f9, f1, rmm # perform operation
fmadd.s f27, f20, f9, f1, rne # perform operation
fmadd.s f27, f20, f9, f1, rtz # perform operation
fmadd.s f27, f20, f9, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f20, f9, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f20, f9, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fc00000)
li x6, 0x4e63b6b96f731c80 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x4bf3859f6f32a42c # load x3 with value 0x4bf3859f6f32a42c
sw x3, 0(x2) # store 0x4bf3859f6f32a42c in memory
flw f12, 0(x2) # load 0x4bf3859f6f32a42c from memory into f12
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f10, 0(x2) # load 0x7fc00000 from memory into f10
fmadd.s f6, f16, f12, f10, dyn # perform operation
fmadd.s f6, f16, f12, f10, rdn # perform operation
fmadd.s f6, f16, f12, f10, rmm # perform operation
fmadd.s f6, f16, f12, f10, rne # perform operation
fmadd.s f6, f16, f12, f10, rtz # perform operation
fmadd.s f6, f16, f12, f10, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f16, f12, f10 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f16, f12, f10 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f16, f12, f10 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f16, f12, f10 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f16, f12, f10 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fffffff)
li x25, 0x35598a04835a3be8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f21, 0(x2) # load 0x7ef8654f from memory into f21
li x3, 0xff40f85c8dd7244e # load x3 with value 0xff40f85c8dd7244e
sw x3, 0(x2) # store 0xff40f85c8dd7244e in memory
flw f20, 0(x2) # load 0xff40f85c8dd7244e from memory into f20
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f4, 0(x2) # load 0x7fffffff from memory into f4
fmadd.s f25, f21, f20, f4, dyn # perform operation
fmadd.s f25, f21, f20, f4, rdn # perform operation
fmadd.s f25, f21, f20, f4, rmm # perform operation
fmadd.s f25, f21, f20, f4, rne # perform operation
fmadd.s f25, f21, f20, f4, rtz # perform operation
fmadd.s f25, f21, f20, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f21, f20, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f21, f20, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f21, f20, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f21, f20, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f21, f20, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7f800001)
li x2, 0xa7371b3b5c1bbb1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f27, 0(x2) # load 0x7ef8654f from memory into f27
li x3, 0x4f4df1afeb8b4d79 # load x3 with value 0x4f4df1afeb8b4d79
sw x3, 0(x2) # store 0x4f4df1afeb8b4d79 in memory
flw f10, 0(x2) # load 0x4f4df1afeb8b4d79 from memory into f10
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f3, 0(x2) # load 0x7f800001 from memory into f3
fmadd.s f2, f27, f10, f3, dyn # perform operation
fmadd.s f2, f27, f10, f3, rdn # perform operation
fmadd.s f2, f27, f10, f3, rmm # perform operation
fmadd.s f2, f27, f10, f3, rne # perform operation
fmadd.s f2, f27, f10, f3, rtz # perform operation
fmadd.s f2, f27, f10, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f27, f10, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f27, f10, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7fbfffff)
li x2, 0xd80a14ad200a22f6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f16, 0(x2) # load 0x7ef8654f from memory into f16
li x3, 0x2e821bfe2c533ab8 # load x3 with value 0x2e821bfe2c533ab8
sw x3, 0(x2) # store 0x2e821bfe2c533ab8 in memory
flw f6, 0(x2) # load 0x2e821bfe2c533ab8 from memory into f6
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f4, 0(x2) # load 0x7fbfffff from memory into f4
fmadd.s f2, f16, f6, f4, dyn # perform operation
fmadd.s f2, f16, f6, f4, rdn # perform operation
fmadd.s f2, f16, f6, f4, rmm # perform operation
fmadd.s f2, f16, f6, f4, rne # perform operation
fmadd.s f2, f16, f6, f4, rtz # perform operation
fmadd.s f2, f16, f6, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f16, f6, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f16, f6, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f16, f6, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f16, f6, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f16, f6, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x7ef8654f)
li x13, 0x62e6e9808f02afee # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f17, 0(x2) # load 0x7ef8654f from memory into f17
li x3, 0xad95b3266ec00291 # load x3 with value 0xad95b3266ec00291
sw x3, 0(x2) # store 0xad95b3266ec00291 in memory
flw f1, 0(x2) # load 0xad95b3266ec00291 from memory into f1
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f7, 0(x2) # load 0x7ef8654f from memory into f7
fmadd.s f13, f17, f1, f7, dyn # perform operation
fmadd.s f13, f17, f1, f7, rdn # perform operation
fmadd.s f13, f17, f1, f7, rmm # perform operation
fmadd.s f13, f17, f1, f7, rne # perform operation
fmadd.s f13, f17, f1, f7, rtz # perform operation
fmadd.s f13, f17, f1, f7, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f17, f1, f7 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f17, f1, f7 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x7ef8654f fs3 = 0x813d9ab0)
li x18, 0xf8908a5fc3086913 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f30, 0(x2) # load 0x7ef8654f from memory into f30
li x3, 0xf23af6d15037ebc0 # load x3 with value 0xf23af6d15037ebc0
sw x3, 0(x2) # store 0xf23af6d15037ebc0 in memory
flw f11, 0(x2) # load 0xf23af6d15037ebc0 from memory into f11
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
fmadd.s f18, f30, f11, f17, dyn # perform operation
fmadd.s f18, f30, f11, f17, rdn # perform operation
fmadd.s f18, f30, f11, f17, rmm # perform operation
fmadd.s f18, f30, f11, f17, rne # perform operation
fmadd.s f18, f30, f11, f17, rtz # perform operation
fmadd.s f18, f30, f11, f17, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f18, f30, f11, f17 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f18, f30, f11, f17 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f18, f30, f11, f17 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f18, f30, f11, f17 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f18, f30, f11, f17 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x0)
li x27, 0x73b55680d1ad0661 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x69a55e2eec469eeb # load x3 with value 0x69a55e2eec469eeb
sw x3, 0(x2) # store 0x69a55e2eec469eeb in memory
flw f10, 0(x2) # load 0x69a55e2eec469eeb from memory into f10
li x3, 0x00000000 # load x3 with value 0x00000000
sw x3, 0(x2) # store 0x00000000 in memory
flw f19, 0(x2) # load 0x00000000 from memory into f19
fmadd.s f27, f4, f10, f19, dyn # perform operation
fmadd.s f27, f4, f10, f19, rdn # perform operation
fmadd.s f27, f4, f10, f19, rmm # perform operation
fmadd.s f27, f4, f10, f19, rne # perform operation
fmadd.s f27, f4, f10, f19, rtz # perform operation
fmadd.s f27, f4, f10, f19, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f4, f10, f19 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f4, f10, f19 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000000)
li x1, 0xc18c89c6c6f2e87d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f7, 0(x2) # load 0x813d9ab0 from memory into f7
li x3, 0xe10b4642e39d082a # load x3 with value 0xe10b4642e39d082a
sw x3, 0(x2) # store 0xe10b4642e39d082a in memory
flw f12, 0(x2) # load 0xe10b4642e39d082a from memory into f12
li x3, 0x80000000 # load x3 with value 0x80000000
sw x3, 0(x2) # store 0x80000000 in memory
flw f23, 0(x2) # load 0x80000000 from memory into f23
fmadd.s f1, f7, f12, f23, dyn # perform operation
fmadd.s f1, f7, f12, f23, rdn # perform operation
fmadd.s f1, f7, f12, f23, rmm # perform operation
fmadd.s f1, f7, f12, f23, rne # perform operation
fmadd.s f1, f7, f12, f23, rtz # perform operation
fmadd.s f1, f7, f12, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f1, f7, f12, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f1, f7, f12, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3f800000)
li x5, 0x92f514047cbd492d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0xc53e80a577959fcb # load x3 with value 0xc53e80a577959fcb
sw x3, 0(x2) # store 0xc53e80a577959fcb in memory
flw f2, 0(x2) # load 0xc53e80a577959fcb from memory into f2
li x3, 0x3f800000 # load x3 with value 0x3f800000
sw x3, 0(x2) # store 0x3f800000 in memory
flw f3, 0(x2) # load 0x3f800000 from memory into f3
fmadd.s f5, f27, f2, f3, dyn # perform operation
fmadd.s f5, f27, f2, f3, rdn # perform operation
fmadd.s f5, f27, f2, f3, rmm # perform operation
fmadd.s f5, f27, f2, f3, rne # perform operation
fmadd.s f5, f27, f2, f3, rtz # perform operation
fmadd.s f5, f27, f2, f3, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f5, f27, f2, f3 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f5, f27, f2, f3 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f5, f27, f2, f3 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f5, f27, f2, f3 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f5, f27, f2, f3 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbf800000)
li x26, 0x8cdc3910c8a5c71c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f30, 0(x2) # load 0x813d9ab0 from memory into f30
li x3, 0xcbe777233f862e22 # load x3 with value 0xcbe777233f862e22
sw x3, 0(x2) # store 0xcbe777233f862e22 in memory
flw f18, 0(x2) # load 0xcbe777233f862e22 from memory into f18
li x3, 0xbf800000 # load x3 with value 0xbf800000
sw x3, 0(x2) # store 0xbf800000 in memory
flw f22, 0(x2) # load 0xbf800000 from memory into f22
fmadd.s f26, f30, f18, f22, dyn # perform operation
fmadd.s f26, f30, f18, f22, rdn # perform operation
fmadd.s f26, f30, f18, f22, rmm # perform operation
fmadd.s f26, f30, f18, f22, rne # perform operation
fmadd.s f26, f30, f18, f22, rtz # perform operation
fmadd.s f26, f30, f18, f22, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f26, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f26, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f26, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f26, f30, f18, f22 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f26, f30, f18, f22 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x3fc00000)
li x20, 0x1d81e172222bfd9f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x7dda3f71fe5490ee # load x3 with value 0x7dda3f71fe5490ee
sw x3, 0(x2) # store 0x7dda3f71fe5490ee in memory
flw f3, 0(x2) # load 0x7dda3f71fe5490ee from memory into f3
li x3, 0x3fc00000 # load x3 with value 0x3fc00000
sw x3, 0(x2) # store 0x3fc00000 in memory
flw f21, 0(x2) # load 0x3fc00000 from memory into f21
fmadd.s f20, f18, f3, f21, dyn # perform operation
fmadd.s f20, f18, f3, f21, rdn # perform operation
fmadd.s f20, f18, f3, f21, rmm # perform operation
fmadd.s f20, f18, f3, f21, rne # perform operation
fmadd.s f20, f18, f3, f21, rtz # perform operation
fmadd.s f20, f18, f3, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f20, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f20, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f20, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f20, f18, f3, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f20, f18, f3, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xbfc00000)
li x10, 0xda07f2baed8acd18 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0xb23e4827b9a9e3ee # load x3 with value 0xb23e4827b9a9e3ee
sw x3, 0(x2) # store 0xb23e4827b9a9e3ee in memory
flw f21, 0(x2) # load 0xb23e4827b9a9e3ee from memory into f21
li x3, 0xbfc00000 # load x3 with value 0xbfc00000
sw x3, 0(x2) # store 0xbfc00000 in memory
flw f8, 0(x2) # load 0xbfc00000 from memory into f8
fmadd.s f10, f18, f21, f8, dyn # perform operation
fmadd.s f10, f18, f21, f8, rdn # perform operation
fmadd.s f10, f18, f21, f8, rmm # perform operation
fmadd.s f10, f18, f21, f8, rne # perform operation
fmadd.s f10, f18, f21, f8, rtz # perform operation
fmadd.s f10, f18, f21, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f10, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f10, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f10, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f10, f18, f21, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f10, f18, f21, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x40000000)
li x6, 0x9228dbeba9c4e414 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0xc2432f89077412fa # load x3 with value 0xc2432f89077412fa
sw x3, 0(x2) # store 0xc2432f89077412fa in memory
flw f18, 0(x2) # load 0xc2432f89077412fa from memory into f18
li x3, 0x40000000 # load x3 with value 0x40000000
sw x3, 0(x2) # store 0x40000000 in memory
flw f2, 0(x2) # load 0x40000000 from memory into f2
fmadd.s f6, f12, f18, f2, dyn # perform operation
fmadd.s f6, f12, f18, f2, rdn # perform operation
fmadd.s f6, f12, f18, f2, rmm # perform operation
fmadd.s f6, f12, f18, f2, rne # perform operation
fmadd.s f6, f12, f18, f2, rtz # perform operation
fmadd.s f6, f12, f18, f2, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f6, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f6, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f6, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f6, f12, f18, f2 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f6, f12, f18, f2 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xc0000000)
li x27, 0x44a9ca7c340db2cc # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f16, 0(x2) # load 0x813d9ab0 from memory into f16
li x3, 0x4dd8a686c98bee1b # load x3 with value 0x4dd8a686c98bee1b
sw x3, 0(x2) # store 0x4dd8a686c98bee1b in memory
flw f3, 0(x2) # load 0x4dd8a686c98bee1b from memory into f3
li x3, 0xc0000000 # load x3 with value 0xc0000000
sw x3, 0(x2) # store 0xc0000000 in memory
flw f6, 0(x2) # load 0xc0000000 from memory into f6
fmadd.s f27, f16, f3, f6, dyn # perform operation
fmadd.s f27, f16, f3, f6, rdn # perform operation
fmadd.s f27, f16, f3, f6, rmm # perform operation
fmadd.s f27, f16, f3, f6, rne # perform operation
fmadd.s f27, f16, f3, f6, rtz # perform operation
fmadd.s f27, f16, f3, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f16, f3, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f16, f3, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x800000)
li x23, 0xdb9bcc3d529f0b70 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x45d439e3f0df263a # load x3 with value 0x45d439e3f0df263a
sw x3, 0(x2) # store 0x45d439e3f0df263a in memory
flw f15, 0(x2) # load 0x45d439e3f0df263a from memory into f15
li x3, 0x00800000 # load x3 with value 0x00800000
sw x3, 0(x2) # store 0x00800000 in memory
flw f25, 0(x2) # load 0x00800000 from memory into f25
fmadd.s f23, f8, f15, f25, dyn # perform operation
fmadd.s f23, f8, f15, f25, rdn # perform operation
fmadd.s f23, f8, f15, f25, rmm # perform operation
fmadd.s f23, f8, f15, f25, rne # perform operation
fmadd.s f23, f8, f15, f25, rtz # perform operation
fmadd.s f23, f8, f15, f25, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f23, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f23, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f23, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f23, f8, f15, f25 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f23, f8, f15, f25 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80800000)
li x2, 0xfe29257df5cbd804 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0x60d44a1d64144bc # load x3 with value 0x60d44a1d64144bc
sw x3, 0(x2) # store 0x60d44a1d64144bc in memory
flw f23, 0(x2) # load 0x60d44a1d64144bc from memory into f23
li x3, 0x80800000 # load x3 with value 0x80800000
sw x3, 0(x2) # store 0x80800000 in memory
flw f8, 0(x2) # load 0x80800000 from memory into f8
fmadd.s f2, f22, f23, f8, dyn # perform operation
fmadd.s f2, f22, f23, f8, rdn # perform operation
fmadd.s f2, f22, f23, f8, rmm # perform operation
fmadd.s f2, f22, f23, f8, rne # perform operation
fmadd.s f2, f22, f23, f8, rtz # perform operation
fmadd.s f2, f22, f23, f8, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f2, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f2, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f2, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f2, f22, f23, f8 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f2, f22, f23, f8 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f7fffff)
li x29, 0x339e768336ed78d3 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f17, 0(x2) # load 0x813d9ab0 from memory into f17
li x3, 0xe87bb6091d210789 # load x3 with value 0xe87bb6091d210789
sw x3, 0(x2) # store 0xe87bb6091d210789 in memory
flw f28, 0(x2) # load 0xe87bb6091d210789 from memory into f28
li x3, 0x7f7fffff # load x3 with value 0x7f7fffff
sw x3, 0(x2) # store 0x7f7fffff in memory
flw f30, 0(x2) # load 0x7f7fffff from memory into f30
fmadd.s f29, f17, f28, f30, dyn # perform operation
fmadd.s f29, f17, f28, f30, rdn # perform operation
fmadd.s f29, f17, f28, f30, rmm # perform operation
fmadd.s f29, f17, f28, f30, rne # perform operation
fmadd.s f29, f17, f28, f30, rtz # perform operation
fmadd.s f29, f17, f28, f30, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f17, f28, f30 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f17, f28, f30 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f17, f28, f30 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f17, f28, f30 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f17, f28, f30 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff7fffff)
li x27, 0xa57c841e4b3be43e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f28, 0(x2) # load 0x813d9ab0 from memory into f28
li x3, 0xe220ae4130517f33 # load x3 with value 0xe220ae4130517f33
sw x3, 0(x2) # store 0xe220ae4130517f33 in memory
flw f10, 0(x2) # load 0xe220ae4130517f33 from memory into f10
li x3, 0xff7fffff # load x3 with value 0xff7fffff
sw x3, 0(x2) # store 0xff7fffff in memory
flw f23, 0(x2) # load 0xff7fffff from memory into f23
fmadd.s f27, f28, f10, f23, dyn # perform operation
fmadd.s f27, f28, f10, f23, rdn # perform operation
fmadd.s f27, f28, f10, f23, rmm # perform operation
fmadd.s f27, f28, f10, f23, rne # perform operation
fmadd.s f27, f28, f10, f23, rtz # perform operation
fmadd.s f27, f28, f10, f23, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f27, f28, f10, f23 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f27, f28, f10, f23 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f27, f28, f10, f23 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f27, f28, f10, f23 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f27, f28, f10, f23 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffff)
li x7, 0xf71669d82ea209b8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f9, 0(x2) # load 0x813d9ab0 from memory into f9
li x3, 0x6416769fd35a3ed9 # load x3 with value 0x6416769fd35a3ed9
sw x3, 0(x2) # store 0x6416769fd35a3ed9 in memory
flw f30, 0(x2) # load 0x6416769fd35a3ed9 from memory into f30
li x3, 0x007fffff # load x3 with value 0x007fffff
sw x3, 0(x2) # store 0x007fffff in memory
flw f12, 0(x2) # load 0x007fffff from memory into f12
fmadd.s f7, f9, f30, f12, dyn # perform operation
fmadd.s f7, f9, f30, f12, rdn # perform operation
fmadd.s f7, f9, f30, f12, rmm # perform operation
fmadd.s f7, f9, f30, f12, rne # perform operation
fmadd.s f7, f9, f30, f12, rtz # perform operation
fmadd.s f7, f9, f30, f12, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f9, f30, f12 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f9, f30, f12 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f9, f30, f12 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f9, f30, f12 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f9, f30, f12 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x807fffff)
li x29, 0x52f47d3b82a80f45 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0xfb484d4b5e6dac99 # load x3 with value 0xfb484d4b5e6dac99
sw x3, 0(x2) # store 0xfb484d4b5e6dac99 in memory
flw f11, 0(x2) # load 0xfb484d4b5e6dac99 from memory into f11
li x3, 0x807fffff # load x3 with value 0x807fffff
sw x3, 0(x2) # store 0x807fffff in memory
flw f21, 0(x2) # load 0x807fffff from memory into f21
fmadd.s f29, f6, f11, f21, dyn # perform operation
fmadd.s f29, f6, f11, f21, rdn # perform operation
fmadd.s f29, f6, f11, f21, rmm # perform operation
fmadd.s f29, f6, f11, f21, rne # perform operation
fmadd.s f29, f6, f11, f21, rtz # perform operation
fmadd.s f29, f6, f11, f21, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f29, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f29, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f29, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f29, f6, f11, f21 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f29, f6, f11, f21 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x400000)
li x11, 0x61cf3102f484b682 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
li x3, 0x265a8258014630e8 # load x3 with value 0x265a8258014630e8
sw x3, 0(x2) # store 0x265a8258014630e8 in memory
flw f2, 0(x2) # load 0x265a8258014630e8 from memory into f2
li x3, 0x00400000 # load x3 with value 0x00400000
sw x3, 0(x2) # store 0x00400000 in memory
flw f4, 0(x2) # load 0x00400000 from memory into f4
fmadd.s f11, f27, f2, f4, dyn # perform operation
fmadd.s f11, f27, f2, f4, rdn # perform operation
fmadd.s f11, f27, f2, f4, rmm # perform operation
fmadd.s f11, f27, f2, f4, rne # perform operation
fmadd.s f11, f27, f2, f4, rtz # perform operation
fmadd.s f11, f27, f2, f4, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f27, f2, f4 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f27, f2, f4 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f27, f2, f4 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f27, f2, f4 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f27, f2, f4 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80400000)
li x24, 0x309d9763f2a4b222 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f11, 0(x2) # load 0x813d9ab0 from memory into f11
li x3, 0x96965e881a4b0c1 # load x3 with value 0x96965e881a4b0c1
sw x3, 0(x2) # store 0x96965e881a4b0c1 in memory
flw f10, 0(x2) # load 0x96965e881a4b0c1 from memory into f10
li x3, 0x80400000 # load x3 with value 0x80400000
sw x3, 0(x2) # store 0x80400000 in memory
flw f5, 0(x2) # load 0x80400000 from memory into f5
fmadd.s f24, f11, f10, f5, dyn # perform operation
fmadd.s f24, f11, f10, f5, rdn # perform operation
fmadd.s f24, f11, f10, f5, rmm # perform operation
fmadd.s f24, f11, f10, f5, rne # perform operation
fmadd.s f24, f11, f10, f5, rtz # perform operation
fmadd.s f24, f11, f10, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f24, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f24, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f24, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f24, f11, f10, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f24, f11, f10, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x1)
li x28, 0xd7e6c57160fd8e40 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f23, 0(x2) # load 0x813d9ab0 from memory into f23
li x3, 0x780b339b45969f83 # load x3 with value 0x780b339b45969f83
sw x3, 0(x2) # store 0x780b339b45969f83 in memory
flw f5, 0(x2) # load 0x780b339b45969f83 from memory into f5
li x3, 0x00000001 # load x3 with value 0x00000001
sw x3, 0(x2) # store 0x00000001 in memory
flw f1, 0(x2) # load 0x00000001 from memory into f1
fmadd.s f28, f23, f5, f1, dyn # perform operation
fmadd.s f28, f23, f5, f1, rdn # perform operation
fmadd.s f28, f23, f5, f1, rmm # perform operation
fmadd.s f28, f23, f5, f1, rne # perform operation
fmadd.s f28, f23, f5, f1, rtz # perform operation
fmadd.s f28, f23, f5, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f28, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f28, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f28, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f28, f23, f5, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f28, f23, f5, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x80000001)
li x8, 0xe0eeed5d306434d2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f22, 0(x2) # load 0x813d9ab0 from memory into f22
li x3, 0xce0776ae4dcc3ae2 # load x3 with value 0xce0776ae4dcc3ae2
sw x3, 0(x2) # store 0xce0776ae4dcc3ae2 in memory
flw f26, 0(x2) # load 0xce0776ae4dcc3ae2 from memory into f26
li x3, 0x80000001 # load x3 with value 0x80000001
sw x3, 0(x2) # store 0x80000001 in memory
flw f24, 0(x2) # load 0x80000001 from memory into f24
fmadd.s f8, f22, f26, f24, dyn # perform operation
fmadd.s f8, f22, f26, f24, rdn # perform operation
fmadd.s f8, f22, f26, f24, rmm # perform operation
fmadd.s f8, f22, f26, f24, rne # perform operation
fmadd.s f8, f22, f26, f24, rtz # perform operation
fmadd.s f8, f22, f26, f24, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f8, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f8, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f8, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f8, f22, f26, f24 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f8, f22, f26, f24 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800000)
li x14, 0x7bbdb23d9f444314 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f18, 0(x2) # load 0x813d9ab0 from memory into f18
li x3, 0x880579ee4cc241a5 # load x3 with value 0x880579ee4cc241a5
sw x3, 0(x2) # store 0x880579ee4cc241a5 in memory
flw f7, 0(x2) # load 0x880579ee4cc241a5 from memory into f7
li x3, 0x7f800000 # load x3 with value 0x7f800000
sw x3, 0(x2) # store 0x7f800000 in memory
flw f6, 0(x2) # load 0x7f800000 from memory into f6
fmadd.s f14, f18, f7, f6, dyn # perform operation
fmadd.s f14, f18, f7, f6, rdn # perform operation
fmadd.s f14, f18, f7, f6, rmm # perform operation
fmadd.s f14, f18, f7, f6, rne # perform operation
fmadd.s f14, f18, f7, f6, rtz # perform operation
fmadd.s f14, f18, f7, f6, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f14, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f14, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f14, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f14, f18, f7, f6 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f14, f18, f7, f6 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0xff800000)
li x11, 0x19f111bee0d073e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f4, 0(x2) # load 0x813d9ab0 from memory into f4
li x3, 0x8913e10cb037246c # load x3 with value 0x8913e10cb037246c
sw x3, 0(x2) # store 0x8913e10cb037246c in memory
flw f26, 0(x2) # load 0x8913e10cb037246c from memory into f26
li x3, 0xff800000 # load x3 with value 0xff800000
sw x3, 0(x2) # store 0xff800000 in memory
flw f18, 0(x2) # load 0xff800000 from memory into f18
fmadd.s f11, f4, f26, f18, dyn # perform operation
fmadd.s f11, f4, f26, f18, rdn # perform operation
fmadd.s f11, f4, f26, f18, rmm # perform operation
fmadd.s f11, f4, f26, f18, rne # perform operation
fmadd.s f11, f4, f26, f18, rtz # perform operation
fmadd.s f11, f4, f26, f18, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f11, f4, f26, f18 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f11, f4, f26, f18 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f11, f4, f26, f18 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f11, f4, f26, f18 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f11, f4, f26, f18 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fc00000)
li x16, 0xb3afc8e3e8df65ad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f12, 0(x2) # load 0x813d9ab0 from memory into f12
li x3, 0x5f0b5b7174eba9e2 # load x3 with value 0x5f0b5b7174eba9e2
sw x3, 0(x2) # store 0x5f0b5b7174eba9e2 in memory
flw f15, 0(x2) # load 0x5f0b5b7174eba9e2 from memory into f15
li x3, 0x7fc00000 # load x3 with value 0x7fc00000
sw x3, 0(x2) # store 0x7fc00000 in memory
flw f5, 0(x2) # load 0x7fc00000 from memory into f5
fmadd.s f16, f12, f15, f5, dyn # perform operation
fmadd.s f16, f12, f15, f5, rdn # perform operation
fmadd.s f16, f12, f15, f5, rmm # perform operation
fmadd.s f16, f12, f15, f5, rne # perform operation
fmadd.s f16, f12, f15, f5, rtz # perform operation
fmadd.s f16, f12, f15, f5, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f16, f12, f15, f5 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f16, f12, f15, f5 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f16, f12, f15, f5 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f16, f12, f15, f5 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f16, f12, f15, f5 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fffffff)
li x15, 0xc0f5b1dfbf01120a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f6, 0(x2) # load 0x813d9ab0 from memory into f6
li x3, 0x16663e321cfeb082 # load x3 with value 0x16663e321cfeb082
sw x3, 0(x2) # store 0x16663e321cfeb082 in memory
flw f24, 0(x2) # load 0x16663e321cfeb082 from memory into f24
li x3, 0x7fffffff # load x3 with value 0x7fffffff
sw x3, 0(x2) # store 0x7fffffff in memory
flw f14, 0(x2) # load 0x7fffffff from memory into f14
fmadd.s f15, f6, f24, f14, dyn # perform operation
fmadd.s f15, f6, f24, f14, rdn # perform operation
fmadd.s f15, f6, f24, f14, rmm # perform operation
fmadd.s f15, f6, f24, f14, rne # perform operation
fmadd.s f15, f6, f24, f14, rtz # perform operation
fmadd.s f15, f6, f24, f14, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f15, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f15, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f15, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f15, f6, f24, f14 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f15, f6, f24, f14 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7f800001)
li x25, 0xee8e47cc7db71dca # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f31, 0(x2) # load 0x813d9ab0 from memory into f31
li x3, 0xdee4b04aebf141bd # load x3 with value 0xdee4b04aebf141bd
sw x3, 0(x2) # store 0xdee4b04aebf141bd in memory
flw f4, 0(x2) # load 0xdee4b04aebf141bd from memory into f4
li x3, 0x7f800001 # load x3 with value 0x7f800001
sw x3, 0(x2) # store 0x7f800001 in memory
flw f1, 0(x2) # load 0x7f800001 from memory into f1
fmadd.s f25, f31, f4, f1, dyn # perform operation
fmadd.s f25, f31, f4, f1, rdn # perform operation
fmadd.s f25, f31, f4, f1, rmm # perform operation
fmadd.s f25, f31, f4, f1, rne # perform operation
fmadd.s f25, f31, f4, f1, rtz # perform operation
fmadd.s f25, f31, f4, f1, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f25, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f25, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f25, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f25, f31, f4, f1 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f25, f31, f4, f1 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7fbfffff)
li x19, 0x9a92e3bd0bfcc910 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f8, 0(x2) # load 0x813d9ab0 from memory into f8
li x3, 0x9685c750085593d4 # load x3 with value 0x9685c750085593d4
sw x3, 0(x2) # store 0x9685c750085593d4 in memory
flw f21, 0(x2) # load 0x9685c750085593d4 from memory into f21
li x3, 0x7fbfffff # load x3 with value 0x7fbfffff
sw x3, 0(x2) # store 0x7fbfffff in memory
flw f31, 0(x2) # load 0x7fbfffff from memory into f31
fmadd.s f19, f8, f21, f31, dyn # perform operation
fmadd.s f19, f8, f21, f31, rdn # perform operation
fmadd.s f19, f8, f21, f31, rmm # perform operation
fmadd.s f19, f8, f21, f31, rne # perform operation
fmadd.s f19, f8, f21, f31, rtz # perform operation
fmadd.s f19, f8, f21, f31, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f19, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f19, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f19, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f19, f8, f21, f31 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f19, f8, f21, f31 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x7ef8654f)
li x7, 0x1969d43dd2815ea7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f21, 0(x2) # load 0x813d9ab0 from memory into f21
li x3, 0xd08aa553e76f54e # load x3 with value 0xd08aa553e76f54e
sw x3, 0(x2) # store 0xd08aa553e76f54e in memory
flw f4, 0(x2) # load 0xd08aa553e76f54e from memory into f4
li x3, 0x7ef8654f # load x3 with value 0x7ef8654f
sw x3, 0(x2) # store 0x7ef8654f in memory
flw f9, 0(x2) # load 0x7ef8654f from memory into f9
fmadd.s f7, f21, f4, f9, dyn # perform operation
fmadd.s f7, f21, f4, f9, rdn # perform operation
fmadd.s f7, f21, f4, f9, rmm # perform operation
fmadd.s f7, f21, f4, f9, rne # perform operation
fmadd.s f7, f21, f4, f9, rtz # perform operation
fmadd.s f7, f21, f4, f9, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f7, f21, f4, f9 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f7, f21, f4, f9 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f7, f21, f4, f9 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f7, f21, f4, f9 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f7, f21, f4, f9 # perform operation

# Testcase cr_fs1_fs3_corners (Test source fs1 = 0x813d9ab0 fs3 = 0x813d9ab0)
li x13, 0x6345aaf66f83299e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f19, 0(x2) # load 0x813d9ab0 from memory into f19
li x3, 0xd0e9fd3835c2ad33 # load x3 with value 0xd0e9fd3835c2ad33
sw x3, 0(x2) # store 0xd0e9fd3835c2ad33 in memory
flw f22, 0(x2) # load 0xd0e9fd3835c2ad33 from memory into f22
li x3, 0x813d9ab0 # load x3 with value 0x813d9ab0
sw x3, 0(x2) # store 0x813d9ab0 in memory
flw f27, 0(x2) # load 0x813d9ab0 from memory into f27
fmadd.s f13, f19, f22, f27, dyn # perform operation
fmadd.s f13, f19, f22, f27, rdn # perform operation
fmadd.s f13, f19, f22, f27, rmm # perform operation
fmadd.s f13, f19, f22, f27, rne # perform operation
fmadd.s f13, f19, f22, f27, rtz # perform operation
fmadd.s f13, f19, f22, f27, rup # perform operation

 # set fcsr.frm to 0x4 
fsrmi 0x4
fmadd.s f13, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x3 
fsrmi 0x3
fmadd.s f13, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x2 
fsrmi 0x2
fmadd.s f13, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x1 
fsrmi 0x1
fmadd.s f13, f19, f22, f27 # perform operation

 # set fcsr.frm to 0x0 
fsrmi 0x0
fmadd.s f13, f19, f22, f27 # perform operation

# Testcase cp_fd (Test destination fd = x0)
li x0, 0x4e742ec80187e083 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf0585a8b75edd971 # load x3 with value 0xf0585a8b75edd971
sw x3, 0(x2) # store 0xf0585a8b75edd971 in memory
flw f14, 0(x2) # load 0xf0585a8b75edd971 from memory into f14
li x3, 0x1e508c63afdb2998 # load x3 with value 0x1e508c63afdb2998
sw x3, 0(x2) # store 0x1e508c63afdb2998 in memory
flw f27, 0(x2) # load 0x1e508c63afdb2998 from memory into f27
li x3, 0x5234ef649143ac72 # load x3 with value 0x5234ef649143ac72
sw x3, 0(x2) # store 0x5234ef649143ac72 in memory
flw f30, 0(x2) # load 0x5234ef649143ac72 from memory into f30
fmadd.s f0, f14, f27, f30 # perform operation

# Testcase cp_fd (Test destination fd = x1)
li x1, 0x32f174ef62171237 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xecd486164fce99fa # load x3 with value 0xecd486164fce99fa
sw x3, 0(x2) # store 0xecd486164fce99fa in memory
flw f24, 0(x2) # load 0xecd486164fce99fa from memory into f24
li x3, 0x3def8cca5bfae830 # load x3 with value 0x3def8cca5bfae830
sw x3, 0(x2) # store 0x3def8cca5bfae830 in memory
flw f20, 0(x2) # load 0x3def8cca5bfae830 from memory into f20
li x3, 0x3f050647438c1672 # load x3 with value 0x3f050647438c1672
sw x3, 0(x2) # store 0x3f050647438c1672 in memory
flw f19, 0(x2) # load 0x3f050647438c1672 from memory into f19
fmadd.s f1, f24, f20, f19 # perform operation

# Testcase cp_fd (Test destination fd = x2)
li x2, 0xacc8a9e4b62417d6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3fb692a730088ddb # load x3 with value 0x3fb692a730088ddb
sw x3, 0(x2) # store 0x3fb692a730088ddb in memory
flw f30, 0(x2) # load 0x3fb692a730088ddb from memory into f30
li x3, 0xea96bb0a754fac35 # load x3 with value 0xea96bb0a754fac35
sw x3, 0(x2) # store 0xea96bb0a754fac35 in memory
flw f13, 0(x2) # load 0xea96bb0a754fac35 from memory into f13
li x3, 0xe2996c656c1d1e20 # load x3 with value 0xe2996c656c1d1e20
sw x3, 0(x2) # store 0xe2996c656c1d1e20 in memory
flw f26, 0(x2) # load 0xe2996c656c1d1e20 from memory into f26
fmadd.s f2, f30, f13, f26 # perform operation

# Testcase cp_fd (Test destination fd = x3)
li x3, 0x4cdfb90ba8440d8e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcf9f974238b10423 # load x3 with value 0xcf9f974238b10423
sw x3, 0(x2) # store 0xcf9f974238b10423 in memory
flw f27, 0(x2) # load 0xcf9f974238b10423 from memory into f27
li x3, 0x5125625722f0c8a7 # load x3 with value 0x5125625722f0c8a7
sw x3, 0(x2) # store 0x5125625722f0c8a7 in memory
flw f30, 0(x2) # load 0x5125625722f0c8a7 from memory into f30
li x3, 0x5ae858837f615588 # load x3 with value 0x5ae858837f615588
sw x3, 0(x2) # store 0x5ae858837f615588 in memory
flw f23, 0(x2) # load 0x5ae858837f615588 from memory into f23
fmadd.s f3, f27, f30, f23 # perform operation

# Testcase cp_fd (Test destination fd = x4)
li x4, 0x79fb21f68a0ba814 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb6d24d6d2e089fe # load x3 with value 0xfb6d24d6d2e089fe
sw x3, 0(x2) # store 0xfb6d24d6d2e089fe in memory
flw f19, 0(x2) # load 0xfb6d24d6d2e089fe from memory into f19
li x3, 0x4c6bc71dfb02664d # load x3 with value 0x4c6bc71dfb02664d
sw x3, 0(x2) # store 0x4c6bc71dfb02664d in memory
flw f5, 0(x2) # load 0x4c6bc71dfb02664d from memory into f5
li x3, 0xcacbdb7ca74844f8 # load x3 with value 0xcacbdb7ca74844f8
sw x3, 0(x2) # store 0xcacbdb7ca74844f8 in memory
flw f3, 0(x2) # load 0xcacbdb7ca74844f8 from memory into f3
fmadd.s f4, f19, f5, f3 # perform operation

# Testcase cp_fd (Test destination fd = x5)
li x5, 0x55e93f18ff978dad # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc7f7aa02f69512a7 # load x3 with value 0xc7f7aa02f69512a7
sw x3, 0(x2) # store 0xc7f7aa02f69512a7 in memory
flw f18, 0(x2) # load 0xc7f7aa02f69512a7 from memory into f18
li x3, 0xca8a7640e3bb7ec # load x3 with value 0xca8a7640e3bb7ec
sw x3, 0(x2) # store 0xca8a7640e3bb7ec in memory
flw f31, 0(x2) # load 0xca8a7640e3bb7ec from memory into f31
li x3, 0xbea1b40885d3d7cb # load x3 with value 0xbea1b40885d3d7cb
sw x3, 0(x2) # store 0xbea1b40885d3d7cb in memory
flw f13, 0(x2) # load 0xbea1b40885d3d7cb from memory into f13
fmadd.s f5, f18, f31, f13 # perform operation

# Testcase cp_fd (Test destination fd = x6)
li x6, 0x5f2bdc9c687690ed # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9d365cadd552370a # load x3 with value 0x9d365cadd552370a
sw x3, 0(x2) # store 0x9d365cadd552370a in memory
flw f1, 0(x2) # load 0x9d365cadd552370a from memory into f1
li x3, 0x7f935be048a1249b # load x3 with value 0x7f935be048a1249b
sw x3, 0(x2) # store 0x7f935be048a1249b in memory
flw f4, 0(x2) # load 0x7f935be048a1249b from memory into f4
li x3, 0xe119b6259c71162e # load x3 with value 0xe119b6259c71162e
sw x3, 0(x2) # store 0xe119b6259c71162e in memory
flw f20, 0(x2) # load 0xe119b6259c71162e from memory into f20
fmadd.s f6, f1, f4, f20 # perform operation

# Testcase cp_fd (Test destination fd = x7)
li x7, 0x72a1b1e69c9d5364 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfebf72ad7b3cbe93 # load x3 with value 0xfebf72ad7b3cbe93
sw x3, 0(x2) # store 0xfebf72ad7b3cbe93 in memory
flw f24, 0(x2) # load 0xfebf72ad7b3cbe93 from memory into f24
li x3, 0x60622b6612711205 # load x3 with value 0x60622b6612711205
sw x3, 0(x2) # store 0x60622b6612711205 in memory
flw f3, 0(x2) # load 0x60622b6612711205 from memory into f3
li x3, 0x64b8f889288b29da # load x3 with value 0x64b8f889288b29da
sw x3, 0(x2) # store 0x64b8f889288b29da in memory
flw f8, 0(x2) # load 0x64b8f889288b29da from memory into f8
fmadd.s f7, f24, f3, f8 # perform operation

# Testcase cp_fd (Test destination fd = x8)
li x8, 0x4746e54e21e2fded # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x753947e955f3240a # load x3 with value 0x753947e955f3240a
sw x3, 0(x2) # store 0x753947e955f3240a in memory
flw f12, 0(x2) # load 0x753947e955f3240a from memory into f12
li x3, 0x8758de5456baa7a0 # load x3 with value 0x8758de5456baa7a0
sw x3, 0(x2) # store 0x8758de5456baa7a0 in memory
flw f17, 0(x2) # load 0x8758de5456baa7a0 from memory into f17
li x3, 0x83ab4f893bc8fcfc # load x3 with value 0x83ab4f893bc8fcfc
sw x3, 0(x2) # store 0x83ab4f893bc8fcfc in memory
flw f8, 0(x2) # load 0x83ab4f893bc8fcfc from memory into f8
fmadd.s f8, f12, f17, f8 # perform operation

# Testcase cp_fd (Test destination fd = x9)
li x9, 0x7ac91f4a76390378 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8620d67727c6e35c # load x3 with value 0x8620d67727c6e35c
sw x3, 0(x2) # store 0x8620d67727c6e35c in memory
flw f5, 0(x2) # load 0x8620d67727c6e35c from memory into f5
li x3, 0x5375f2ef6e68b0b5 # load x3 with value 0x5375f2ef6e68b0b5
sw x3, 0(x2) # store 0x5375f2ef6e68b0b5 in memory
flw f27, 0(x2) # load 0x5375f2ef6e68b0b5 from memory into f27
li x3, 0x642b24eeca2f6661 # load x3 with value 0x642b24eeca2f6661
sw x3, 0(x2) # store 0x642b24eeca2f6661 in memory
flw f21, 0(x2) # load 0x642b24eeca2f6661 from memory into f21
fmadd.s f9, f5, f27, f21 # perform operation

# Testcase cp_fd (Test destination fd = x10)
li x10, 0xb0b5131e3dc7a2c8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfc554b78c1d1d744 # load x3 with value 0xfc554b78c1d1d744
sw x3, 0(x2) # store 0xfc554b78c1d1d744 in memory
flw f1, 0(x2) # load 0xfc554b78c1d1d744 from memory into f1
li x3, 0x16652178f3bc53c2 # load x3 with value 0x16652178f3bc53c2
sw x3, 0(x2) # store 0x16652178f3bc53c2 in memory
flw f6, 0(x2) # load 0x16652178f3bc53c2 from memory into f6
li x3, 0x5c1d262fbb27b9b2 # load x3 with value 0x5c1d262fbb27b9b2
sw x3, 0(x2) # store 0x5c1d262fbb27b9b2 in memory
flw f2, 0(x2) # load 0x5c1d262fbb27b9b2 from memory into f2
fmadd.s f10, f1, f6, f2 # perform operation

# Testcase cp_fd (Test destination fd = x11)
li x11, 0x23ccafd26db83ee9 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x703d37f463d61838 # load x3 with value 0x703d37f463d61838
sw x3, 0(x2) # store 0x703d37f463d61838 in memory
flw f12, 0(x2) # load 0x703d37f463d61838 from memory into f12
li x3, 0xbc6095eeeae928b2 # load x3 with value 0xbc6095eeeae928b2
sw x3, 0(x2) # store 0xbc6095eeeae928b2 in memory
flw f16, 0(x2) # load 0xbc6095eeeae928b2 from memory into f16
li x3, 0x537ec659cf142f51 # load x3 with value 0x537ec659cf142f51
sw x3, 0(x2) # store 0x537ec659cf142f51 in memory
flw f5, 0(x2) # load 0x537ec659cf142f51 from memory into f5
fmadd.s f11, f12, f16, f5 # perform operation

# Testcase cp_fd (Test destination fd = x12)
li x12, 0xc2b916b725268ac4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa7ced99fb159b20c # load x3 with value 0xa7ced99fb159b20c
sw x3, 0(x2) # store 0xa7ced99fb159b20c in memory
flw f8, 0(x2) # load 0xa7ced99fb159b20c from memory into f8
li x3, 0xf1fd41c3300e3af8 # load x3 with value 0xf1fd41c3300e3af8
sw x3, 0(x2) # store 0xf1fd41c3300e3af8 in memory
flw f19, 0(x2) # load 0xf1fd41c3300e3af8 from memory into f19
li x3, 0xa320b26955b3461f # load x3 with value 0xa320b26955b3461f
sw x3, 0(x2) # store 0xa320b26955b3461f in memory
flw f24, 0(x2) # load 0xa320b26955b3461f from memory into f24
fmadd.s f12, f8, f19, f24 # perform operation

# Testcase cp_fd (Test destination fd = x13)
li x13, 0x868d1587efbe52b6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x96ed5778558d85c7 # load x3 with value 0x96ed5778558d85c7
sw x3, 0(x2) # store 0x96ed5778558d85c7 in memory
flw f2, 0(x2) # load 0x96ed5778558d85c7 from memory into f2
li x3, 0x9dbfdea31797681 # load x3 with value 0x9dbfdea31797681
sw x3, 0(x2) # store 0x9dbfdea31797681 in memory
flw f17, 0(x2) # load 0x9dbfdea31797681 from memory into f17
li x3, 0x5e6e48fbfdc783a2 # load x3 with value 0x5e6e48fbfdc783a2
sw x3, 0(x2) # store 0x5e6e48fbfdc783a2 in memory
flw f12, 0(x2) # load 0x5e6e48fbfdc783a2 from memory into f12
fmadd.s f13, f2, f17, f12 # perform operation

# Testcase cp_fd (Test destination fd = x14)
li x14, 0x0f92c899b08d60d5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf593f57ecb3ba417 # load x3 with value 0xf593f57ecb3ba417
sw x3, 0(x2) # store 0xf593f57ecb3ba417 in memory
flw f21, 0(x2) # load 0xf593f57ecb3ba417 from memory into f21
li x3, 0x51c9462dac07b2a9 # load x3 with value 0x51c9462dac07b2a9
sw x3, 0(x2) # store 0x51c9462dac07b2a9 in memory
flw f14, 0(x2) # load 0x51c9462dac07b2a9 from memory into f14
li x3, 0x2e4d199568e872cc # load x3 with value 0x2e4d199568e872cc
sw x3, 0(x2) # store 0x2e4d199568e872cc in memory
flw f29, 0(x2) # load 0x2e4d199568e872cc from memory into f29
fmadd.s f14, f21, f14, f29 # perform operation

# Testcase cp_fd (Test destination fd = x15)
li x15, 0xfac8906bf67d6826 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3160f6eede907d7f # load x3 with value 0x3160f6eede907d7f
sw x3, 0(x2) # store 0x3160f6eede907d7f in memory
flw f8, 0(x2) # load 0x3160f6eede907d7f from memory into f8
li x3, 0x9962513206ee112c # load x3 with value 0x9962513206ee112c
sw x3, 0(x2) # store 0x9962513206ee112c in memory
flw f9, 0(x2) # load 0x9962513206ee112c from memory into f9
li x3, 0x986887bd0cc4faa2 # load x3 with value 0x986887bd0cc4faa2
sw x3, 0(x2) # store 0x986887bd0cc4faa2 in memory
flw f19, 0(x2) # load 0x986887bd0cc4faa2 from memory into f19
fmadd.s f15, f8, f9, f19 # perform operation

# Testcase cp_fd (Test destination fd = x16)
li x16, 0x7c20c2bb87090f43 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb6b8b0d3ad2be06 # load x3 with value 0xdb6b8b0d3ad2be06
sw x3, 0(x2) # store 0xdb6b8b0d3ad2be06 in memory
flw f20, 0(x2) # load 0xdb6b8b0d3ad2be06 from memory into f20
li x3, 0x7d9d80ae8548a986 # load x3 with value 0x7d9d80ae8548a986
sw x3, 0(x2) # store 0x7d9d80ae8548a986 in memory
flw f9, 0(x2) # load 0x7d9d80ae8548a986 from memory into f9
li x3, 0xa8d61744a51b87b5 # load x3 with value 0xa8d61744a51b87b5
sw x3, 0(x2) # store 0xa8d61744a51b87b5 in memory
flw f18, 0(x2) # load 0xa8d61744a51b87b5 from memory into f18
fmadd.s f16, f20, f9, f18 # perform operation

# Testcase cp_fd (Test destination fd = x17)
li x17, 0xcf11446b933d8835 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x312bd21cc1d9d66d # load x3 with value 0x312bd21cc1d9d66d
sw x3, 0(x2) # store 0x312bd21cc1d9d66d in memory
flw f21, 0(x2) # load 0x312bd21cc1d9d66d from memory into f21
li x3, 0x82857431ee0dab58 # load x3 with value 0x82857431ee0dab58
sw x3, 0(x2) # store 0x82857431ee0dab58 in memory
flw f25, 0(x2) # load 0x82857431ee0dab58 from memory into f25
li x3, 0xcbc4100f2d1ea0f9 # load x3 with value 0xcbc4100f2d1ea0f9
sw x3, 0(x2) # store 0xcbc4100f2d1ea0f9 in memory
flw f18, 0(x2) # load 0xcbc4100f2d1ea0f9 from memory into f18
fmadd.s f17, f21, f25, f18 # perform operation

# Testcase cp_fd (Test destination fd = x18)
li x18, 0x484ea3bcffae3ae4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x54072a0edc036da6 # load x3 with value 0x54072a0edc036da6
sw x3, 0(x2) # store 0x54072a0edc036da6 in memory
flw f2, 0(x2) # load 0x54072a0edc036da6 from memory into f2
li x3, 0x25d7a3477cb66c4a # load x3 with value 0x25d7a3477cb66c4a
sw x3, 0(x2) # store 0x25d7a3477cb66c4a in memory
flw f22, 0(x2) # load 0x25d7a3477cb66c4a from memory into f22
li x3, 0x93638c8c32560a18 # load x3 with value 0x93638c8c32560a18
sw x3, 0(x2) # store 0x93638c8c32560a18 in memory
flw f20, 0(x2) # load 0x93638c8c32560a18 from memory into f20
fmadd.s f18, f2, f22, f20 # perform operation

# Testcase cp_fd (Test destination fd = x19)
li x19, 0x9336a2ac94c4d5b5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1015ce317d3f39f8 # load x3 with value 0x1015ce317d3f39f8
sw x3, 0(x2) # store 0x1015ce317d3f39f8 in memory
flw f25, 0(x2) # load 0x1015ce317d3f39f8 from memory into f25
li x3, 0x1cece2e7a751ca8d # load x3 with value 0x1cece2e7a751ca8d
sw x3, 0(x2) # store 0x1cece2e7a751ca8d in memory
flw f1, 0(x2) # load 0x1cece2e7a751ca8d from memory into f1
li x3, 0x38e0274501c26e3 # load x3 with value 0x38e0274501c26e3
sw x3, 0(x2) # store 0x38e0274501c26e3 in memory
flw f6, 0(x2) # load 0x38e0274501c26e3 from memory into f6
fmadd.s f19, f25, f1, f6 # perform operation

# Testcase cp_fd (Test destination fd = x20)
li x20, 0x7f49190ea7332fe4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc30c56eeaf26dfb9 # load x3 with value 0xc30c56eeaf26dfb9
sw x3, 0(x2) # store 0xc30c56eeaf26dfb9 in memory
flw f19, 0(x2) # load 0xc30c56eeaf26dfb9 from memory into f19
li x3, 0x4f81e368437ba193 # load x3 with value 0x4f81e368437ba193
sw x3, 0(x2) # store 0x4f81e368437ba193 in memory
flw f12, 0(x2) # load 0x4f81e368437ba193 from memory into f12
li x3, 0x19bc8e37d46d9302 # load x3 with value 0x19bc8e37d46d9302
sw x3, 0(x2) # store 0x19bc8e37d46d9302 in memory
flw f16, 0(x2) # load 0x19bc8e37d46d9302 from memory into f16
fmadd.s f20, f19, f12, f16 # perform operation

# Testcase cp_fd (Test destination fd = x21)
li x21, 0x3378a229189726cf # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x78e2dc9b1857df3c # load x3 with value 0x78e2dc9b1857df3c
sw x3, 0(x2) # store 0x78e2dc9b1857df3c in memory
flw f17, 0(x2) # load 0x78e2dc9b1857df3c from memory into f17
li x3, 0x461ea358dfb29d1d # load x3 with value 0x461ea358dfb29d1d
sw x3, 0(x2) # store 0x461ea358dfb29d1d in memory
flw f5, 0(x2) # load 0x461ea358dfb29d1d from memory into f5
li x3, 0xe8c231d4124ca5bd # load x3 with value 0xe8c231d4124ca5bd
sw x3, 0(x2) # store 0xe8c231d4124ca5bd in memory
flw f23, 0(x2) # load 0xe8c231d4124ca5bd from memory into f23
fmadd.s f21, f17, f5, f23 # perform operation

# Testcase cp_fd (Test destination fd = x22)
li x22, 0x4d45ec47a8fda8c2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4e7cf6f5db0c1c40 # load x3 with value 0x4e7cf6f5db0c1c40
sw x3, 0(x2) # store 0x4e7cf6f5db0c1c40 in memory
flw f14, 0(x2) # load 0x4e7cf6f5db0c1c40 from memory into f14
li x3, 0x33db59ac798d5f89 # load x3 with value 0x33db59ac798d5f89
sw x3, 0(x2) # store 0x33db59ac798d5f89 in memory
flw f10, 0(x2) # load 0x33db59ac798d5f89 from memory into f10
li x3, 0x45bd4d9fbeb9acc5 # load x3 with value 0x45bd4d9fbeb9acc5
sw x3, 0(x2) # store 0x45bd4d9fbeb9acc5 in memory
flw f19, 0(x2) # load 0x45bd4d9fbeb9acc5 from memory into f19
fmadd.s f22, f14, f10, f19 # perform operation

# Testcase cp_fd (Test destination fd = x23)
li x23, 0x1dd1f526ef38e8b2 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x80669b6dcc68a94 # load x3 with value 0x80669b6dcc68a94
sw x3, 0(x2) # store 0x80669b6dcc68a94 in memory
flw f31, 0(x2) # load 0x80669b6dcc68a94 from memory into f31
li x3, 0x3f208482318f04c4 # load x3 with value 0x3f208482318f04c4
sw x3, 0(x2) # store 0x3f208482318f04c4 in memory
flw f18, 0(x2) # load 0x3f208482318f04c4 from memory into f18
li x3, 0x69b21a71178942b5 # load x3 with value 0x69b21a71178942b5
sw x3, 0(x2) # store 0x69b21a71178942b5 in memory
flw f11, 0(x2) # load 0x69b21a71178942b5 from memory into f11
fmadd.s f23, f31, f18, f11 # perform operation

# Testcase cp_fd (Test destination fd = x24)
li x24, 0x5f3dbada4dbd778a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4902710deb1e153 # load x3 with value 0x4902710deb1e153
sw x3, 0(x2) # store 0x4902710deb1e153 in memory
flw f21, 0(x2) # load 0x4902710deb1e153 from memory into f21
li x3, 0x69a3abdd788646eb # load x3 with value 0x69a3abdd788646eb
sw x3, 0(x2) # store 0x69a3abdd788646eb in memory
flw f1, 0(x2) # load 0x69a3abdd788646eb from memory into f1
li x3, 0x6ba22f772f20ee0f # load x3 with value 0x6ba22f772f20ee0f
sw x3, 0(x2) # store 0x6ba22f772f20ee0f in memory
flw f29, 0(x2) # load 0x6ba22f772f20ee0f from memory into f29
fmadd.s f24, f21, f1, f29 # perform operation

# Testcase cp_fd (Test destination fd = x25)
li x25, 0x30be43d5ef066d57 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5bd4a483cf55864e # load x3 with value 0x5bd4a483cf55864e
sw x3, 0(x2) # store 0x5bd4a483cf55864e in memory
flw f19, 0(x2) # load 0x5bd4a483cf55864e from memory into f19
li x3, 0xeb43c0a35dc9c00c # load x3 with value 0xeb43c0a35dc9c00c
sw x3, 0(x2) # store 0xeb43c0a35dc9c00c in memory
flw f16, 0(x2) # load 0xeb43c0a35dc9c00c from memory into f16
li x3, 0xc619cbed70bb47ad # load x3 with value 0xc619cbed70bb47ad
sw x3, 0(x2) # store 0xc619cbed70bb47ad in memory
flw f22, 0(x2) # load 0xc619cbed70bb47ad from memory into f22
fmadd.s f25, f19, f16, f22 # perform operation

# Testcase cp_fd (Test destination fd = x26)
li x26, 0x26106fdf47b350f1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd354f79e90b81e15 # load x3 with value 0xd354f79e90b81e15
sw x3, 0(x2) # store 0xd354f79e90b81e15 in memory
flw f30, 0(x2) # load 0xd354f79e90b81e15 from memory into f30
li x3, 0x52c38eeb7a025ac2 # load x3 with value 0x52c38eeb7a025ac2
sw x3, 0(x2) # store 0x52c38eeb7a025ac2 in memory
flw f4, 0(x2) # load 0x52c38eeb7a025ac2 from memory into f4
li x3, 0xb032e8df829d10ee # load x3 with value 0xb032e8df829d10ee
sw x3, 0(x2) # store 0xb032e8df829d10ee in memory
flw f5, 0(x2) # load 0xb032e8df829d10ee from memory into f5
fmadd.s f26, f30, f4, f5 # perform operation

# Testcase cp_fd (Test destination fd = x27)
li x27, 0x82e8fc5dfd0b5727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3891c2da8002380f # load x3 with value 0x3891c2da8002380f
sw x3, 0(x2) # store 0x3891c2da8002380f in memory
flw f28, 0(x2) # load 0x3891c2da8002380f from memory into f28
li x3, 0x643dc64ae6e29a16 # load x3 with value 0x643dc64ae6e29a16
sw x3, 0(x2) # store 0x643dc64ae6e29a16 in memory
flw f20, 0(x2) # load 0x643dc64ae6e29a16 from memory into f20
li x3, 0x9f8bfdb981b2c74 # load x3 with value 0x9f8bfdb981b2c74
sw x3, 0(x2) # store 0x9f8bfdb981b2c74 in memory
flw f22, 0(x2) # load 0x9f8bfdb981b2c74 from memory into f22
fmadd.s f27, f28, f20, f22 # perform operation

# Testcase cp_fd (Test destination fd = x28)
li x28, 0x40611b2e84f6109b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xe2aaf663e784d8cb # load x3 with value 0xe2aaf663e784d8cb
sw x3, 0(x2) # store 0xe2aaf663e784d8cb in memory
flw f8, 0(x2) # load 0xe2aaf663e784d8cb from memory into f8
li x3, 0x97f01042e114ff59 # load x3 with value 0x97f01042e114ff59
sw x3, 0(x2) # store 0x97f01042e114ff59 in memory
flw f19, 0(x2) # load 0x97f01042e114ff59 from memory into f19
li x3, 0xfc475f23621c4956 # load x3 with value 0xfc475f23621c4956
sw x3, 0(x2) # store 0xfc475f23621c4956 in memory
flw f27, 0(x2) # load 0xfc475f23621c4956 from memory into f27
fmadd.s f28, f8, f19, f27 # perform operation

# Testcase cp_fd (Test destination fd = x29)
li x29, 0x8aa98e7926f2410f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2dd9e04a730895ce # load x3 with value 0x2dd9e04a730895ce
sw x3, 0(x2) # store 0x2dd9e04a730895ce in memory
flw f1, 0(x2) # load 0x2dd9e04a730895ce from memory into f1
li x3, 0x470ce21a1e70aacc # load x3 with value 0x470ce21a1e70aacc
sw x3, 0(x2) # store 0x470ce21a1e70aacc in memory
flw f15, 0(x2) # load 0x470ce21a1e70aacc from memory into f15
li x3, 0x38c442885938c2ca # load x3 with value 0x38c442885938c2ca
sw x3, 0(x2) # store 0x38c442885938c2ca in memory
flw f4, 0(x2) # load 0x38c442885938c2ca from memory into f4
fmadd.s f29, f1, f15, f4 # perform operation

# Testcase cp_fd (Test destination fd = x30)
li x30, 0x61465ee1a156e201 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8b00e7373f3b3835 # load x3 with value 0x8b00e7373f3b3835
sw x3, 0(x2) # store 0x8b00e7373f3b3835 in memory
flw f29, 0(x2) # load 0x8b00e7373f3b3835 from memory into f29
li x3, 0x1cccaee362316b1c # load x3 with value 0x1cccaee362316b1c
sw x3, 0(x2) # store 0x1cccaee362316b1c in memory
flw f18, 0(x2) # load 0x1cccaee362316b1c from memory into f18
li x3, 0x99972810fe0d6b63 # load x3 with value 0x99972810fe0d6b63
sw x3, 0(x2) # store 0x99972810fe0d6b63 in memory
flw f24, 0(x2) # load 0x99972810fe0d6b63 from memory into f24
fmadd.s f30, f29, f18, f24 # perform operation

# Testcase cp_fd (Test destination fd = x31)
li x31, 0xc949bd563b0fd114 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd103277423c0b37b # load x3 with value 0xd103277423c0b37b
sw x3, 0(x2) # store 0xd103277423c0b37b in memory
flw f18, 0(x2) # load 0xd103277423c0b37b from memory into f18
li x3, 0x92078e2cbe62afea # load x3 with value 0x92078e2cbe62afea
sw x3, 0(x2) # store 0x92078e2cbe62afea in memory
flw f14, 0(x2) # load 0x92078e2cbe62afea from memory into f14
li x3, 0x893f605c177a3b11 # load x3 with value 0x893f605c177a3b11
sw x3, 0(x2) # store 0x893f605c177a3b11 in memory
flw f21, 0(x2) # load 0x893f605c177a3b11 from memory into f21
fmadd.s f31, f18, f14, f21 # perform operation

# Testcase cp_fs1 (Test source fs1 = f0)
li x18, 0x84a13f6d9f41d19e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9a3afc1feabca243 # load x3 with value 0x9a3afc1feabca243
sw x3, 0(x2) # store 0x9a3afc1feabca243 in memory
flw f0, 0(x2) # load 0x9a3afc1feabca243 from memory into f0
li x3, 0x4faf48d8d4f87bf2 # load x3 with value 0x4faf48d8d4f87bf2
sw x3, 0(x2) # store 0x4faf48d8d4f87bf2 in memory
flw f1, 0(x2) # load 0x4faf48d8d4f87bf2 from memory into f1
li x3, 0x5d9dc7472189965e # load x3 with value 0x5d9dc7472189965e
sw x3, 0(x2) # store 0x5d9dc7472189965e in memory
flw f15, 0(x2) # load 0x5d9dc7472189965e from memory into f15
fmadd.s f18, f0, f1, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f1)
li x25, 0x7bd87850d282cd05 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x41b642e449c5674f # load x3 with value 0x41b642e449c5674f
sw x3, 0(x2) # store 0x41b642e449c5674f in memory
flw f1, 0(x2) # load 0x41b642e449c5674f from memory into f1
li x3, 0xb2dbd475b02b9cb0 # load x3 with value 0xb2dbd475b02b9cb0
sw x3, 0(x2) # store 0xb2dbd475b02b9cb0 in memory
flw f14, 0(x2) # load 0xb2dbd475b02b9cb0 from memory into f14
li x3, 0x1f1c4f8775600c71 # load x3 with value 0x1f1c4f8775600c71
sw x3, 0(x2) # store 0x1f1c4f8775600c71 in memory
flw f1, 0(x2) # load 0x1f1c4f8775600c71 from memory into f1
fmadd.s f25, f1, f14, f1 # perform operation

# Testcase cp_fs1 (Test source fs1 = f2)
li x27, 0xe2d8a5551503cbd7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7fee4960dc1948b8 # load x3 with value 0x7fee4960dc1948b8
sw x3, 0(x2) # store 0x7fee4960dc1948b8 in memory
flw f2, 0(x2) # load 0x7fee4960dc1948b8 from memory into f2
li x3, 0x209b5b02414bee8 # load x3 with value 0x209b5b02414bee8
sw x3, 0(x2) # store 0x209b5b02414bee8 in memory
flw f12, 0(x2) # load 0x209b5b02414bee8 from memory into f12
li x3, 0x3918b34ec9b3194c # load x3 with value 0x3918b34ec9b3194c
sw x3, 0(x2) # store 0x3918b34ec9b3194c in memory
flw f26, 0(x2) # load 0x3918b34ec9b3194c from memory into f26
fmadd.s f27, f2, f12, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f3)
li x1, 0xc9e8d4f3bccc4ecb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3d7c4551abb2d477 # load x3 with value 0x3d7c4551abb2d477
sw x3, 0(x2) # store 0x3d7c4551abb2d477 in memory
flw f3, 0(x2) # load 0x3d7c4551abb2d477 from memory into f3
li x3, 0x52c0a4a8222d0457 # load x3 with value 0x52c0a4a8222d0457
sw x3, 0(x2) # store 0x52c0a4a8222d0457 in memory
flw f23, 0(x2) # load 0x52c0a4a8222d0457 from memory into f23
li x3, 0xe7c9b67770976cc8 # load x3 with value 0xe7c9b67770976cc8
sw x3, 0(x2) # store 0xe7c9b67770976cc8 in memory
flw f2, 0(x2) # load 0xe7c9b67770976cc8 from memory into f2
fmadd.s f1, f3, f23, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f4)
li x21, 0x167c2eb23da1a41a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4c89b9891812139 # load x3 with value 0x4c89b9891812139
sw x3, 0(x2) # store 0x4c89b9891812139 in memory
flw f4, 0(x2) # load 0x4c89b9891812139 from memory into f4
li x3, 0xbcaa6228460c053a # load x3 with value 0xbcaa6228460c053a
sw x3, 0(x2) # store 0xbcaa6228460c053a in memory
flw f26, 0(x2) # load 0xbcaa6228460c053a from memory into f26
li x3, 0x759f6f10585d894b # load x3 with value 0x759f6f10585d894b
sw x3, 0(x2) # store 0x759f6f10585d894b in memory
flw f5, 0(x2) # load 0x759f6f10585d894b from memory into f5
fmadd.s f21, f4, f26, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f5)
li x13, 0x8bff0313982d62d8 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xc42e067e97dde1d6 # load x3 with value 0xc42e067e97dde1d6
sw x3, 0(x2) # store 0xc42e067e97dde1d6 in memory
flw f5, 0(x2) # load 0xc42e067e97dde1d6 from memory into f5
li x3, 0x9461cc4e7ab38b7 # load x3 with value 0x9461cc4e7ab38b7
sw x3, 0(x2) # store 0x9461cc4e7ab38b7 in memory
flw f1, 0(x2) # load 0x9461cc4e7ab38b7 from memory into f1
li x3, 0xcc8efdcf30b4849f # load x3 with value 0xcc8efdcf30b4849f
sw x3, 0(x2) # store 0xcc8efdcf30b4849f in memory
flw f15, 0(x2) # load 0xcc8efdcf30b4849f from memory into f15
fmadd.s f13, f5, f1, f15 # perform operation

# Testcase cp_fs1 (Test source fs1 = f6)
li x13, 0x11544d6b51af98cd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f65c7c52630b1b3 # load x3 with value 0x9f65c7c52630b1b3
sw x3, 0(x2) # store 0x9f65c7c52630b1b3 in memory
flw f6, 0(x2) # load 0x9f65c7c52630b1b3 from memory into f6
li x3, 0xdceba5354fd3ac3a # load x3 with value 0xdceba5354fd3ac3a
sw x3, 0(x2) # store 0xdceba5354fd3ac3a in memory
flw f30, 0(x2) # load 0xdceba5354fd3ac3a from memory into f30
li x3, 0x6c7634c038f0dbb0 # load x3 with value 0x6c7634c038f0dbb0
sw x3, 0(x2) # store 0x6c7634c038f0dbb0 in memory
flw f10, 0(x2) # load 0x6c7634c038f0dbb0 from memory into f10
fmadd.s f13, f6, f30, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f7)
li x31, 0xc715224e37acc4c0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xca64bed69b388fe5 # load x3 with value 0xca64bed69b388fe5
sw x3, 0(x2) # store 0xca64bed69b388fe5 in memory
flw f7, 0(x2) # load 0xca64bed69b388fe5 from memory into f7
li x3, 0x37b9ad6096cdfe47 # load x3 with value 0x37b9ad6096cdfe47
sw x3, 0(x2) # store 0x37b9ad6096cdfe47 in memory
flw f17, 0(x2) # load 0x37b9ad6096cdfe47 from memory into f17
li x3, 0x65166dc8a02a5167 # load x3 with value 0x65166dc8a02a5167
sw x3, 0(x2) # store 0x65166dc8a02a5167 in memory
flw f6, 0(x2) # load 0x65166dc8a02a5167 from memory into f6
fmadd.s f31, f7, f17, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f8)
li x23, 0x13ef8e3abe5d3fae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf6a6df706133c357 # load x3 with value 0xf6a6df706133c357
sw x3, 0(x2) # store 0xf6a6df706133c357 in memory
flw f8, 0(x2) # load 0xf6a6df706133c357 from memory into f8
li x3, 0x1ac23528fd23c153 # load x3 with value 0x1ac23528fd23c153
sw x3, 0(x2) # store 0x1ac23528fd23c153 in memory
flw f24, 0(x2) # load 0x1ac23528fd23c153 from memory into f24
li x3, 0x4e0c34748a9e77f5 # load x3 with value 0x4e0c34748a9e77f5
sw x3, 0(x2) # store 0x4e0c34748a9e77f5 in memory
flw f10, 0(x2) # load 0x4e0c34748a9e77f5 from memory into f10
fmadd.s f23, f8, f24, f10 # perform operation

# Testcase cp_fs1 (Test source fs1 = f9)
li x22, 0x5878b0d52185ee4b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5c6841a1fccf5118 # load x3 with value 0x5c6841a1fccf5118
sw x3, 0(x2) # store 0x5c6841a1fccf5118 in memory
flw f9, 0(x2) # load 0x5c6841a1fccf5118 from memory into f9
li x3, 0x7a3e5adc04013d4e # load x3 with value 0x7a3e5adc04013d4e
sw x3, 0(x2) # store 0x7a3e5adc04013d4e in memory
flw f27, 0(x2) # load 0x7a3e5adc04013d4e from memory into f27
li x3, 0xc0577fb686ea202a # load x3 with value 0xc0577fb686ea202a
sw x3, 0(x2) # store 0xc0577fb686ea202a in memory
flw f19, 0(x2) # load 0xc0577fb686ea202a from memory into f19
fmadd.s f22, f9, f27, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f10)
li x1, 0xb23bf6ce669c0af0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf406cf84bfa17581 # load x3 with value 0xf406cf84bfa17581
sw x3, 0(x2) # store 0xf406cf84bfa17581 in memory
flw f10, 0(x2) # load 0xf406cf84bfa17581 from memory into f10
li x3, 0x517d82f7ca9a3b6e # load x3 with value 0x517d82f7ca9a3b6e
sw x3, 0(x2) # store 0x517d82f7ca9a3b6e in memory
flw f9, 0(x2) # load 0x517d82f7ca9a3b6e from memory into f9
li x3, 0x5549bfbd4e4946d1 # load x3 with value 0x5549bfbd4e4946d1
sw x3, 0(x2) # store 0x5549bfbd4e4946d1 in memory
flw f7, 0(x2) # load 0x5549bfbd4e4946d1 from memory into f7
fmadd.s f1, f10, f9, f7 # perform operation

# Testcase cp_fs1 (Test source fs1 = f11)
li x16, 0x54475152a84ef865 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2f077a6f9c9ab75 # load x3 with value 0x2f077a6f9c9ab75
sw x3, 0(x2) # store 0x2f077a6f9c9ab75 in memory
flw f11, 0(x2) # load 0x2f077a6f9c9ab75 from memory into f11
li x3, 0x64b54db7d39eb4bc # load x3 with value 0x64b54db7d39eb4bc
sw x3, 0(x2) # store 0x64b54db7d39eb4bc in memory
flw f6, 0(x2) # load 0x64b54db7d39eb4bc from memory into f6
li x3, 0x6e94ebd449ecb4e1 # load x3 with value 0x6e94ebd449ecb4e1
sw x3, 0(x2) # store 0x6e94ebd449ecb4e1 in memory
flw f9, 0(x2) # load 0x6e94ebd449ecb4e1 from memory into f9
fmadd.s f16, f11, f6, f9 # perform operation

# Testcase cp_fs1 (Test source fs1 = f12)
li x4, 0x5e12a1c76c760640 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x68ea8cc6d52d391e # load x3 with value 0x68ea8cc6d52d391e
sw x3, 0(x2) # store 0x68ea8cc6d52d391e in memory
flw f12, 0(x2) # load 0x68ea8cc6d52d391e from memory into f12
li x3, 0x2e5f50fd151cd1db # load x3 with value 0x2e5f50fd151cd1db
sw x3, 0(x2) # store 0x2e5f50fd151cd1db in memory
flw f23, 0(x2) # load 0x2e5f50fd151cd1db from memory into f23
li x3, 0xb492daaa1b6cf214 # load x3 with value 0xb492daaa1b6cf214
sw x3, 0(x2) # store 0xb492daaa1b6cf214 in memory
flw f26, 0(x2) # load 0xb492daaa1b6cf214 from memory into f26
fmadd.s f4, f12, f23, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f13)
li x10, 0x72aaaf898380db53 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1a8194b567ce1e5a # load x3 with value 0x1a8194b567ce1e5a
sw x3, 0(x2) # store 0x1a8194b567ce1e5a in memory
flw f13, 0(x2) # load 0x1a8194b567ce1e5a from memory into f13
li x3, 0xefcf1da0e9d22436 # load x3 with value 0xefcf1da0e9d22436
sw x3, 0(x2) # store 0xefcf1da0e9d22436 in memory
flw f18, 0(x2) # load 0xefcf1da0e9d22436 from memory into f18
li x3, 0x1e42902393fb0f37 # load x3 with value 0x1e42902393fb0f37
sw x3, 0(x2) # store 0x1e42902393fb0f37 in memory
flw f17, 0(x2) # load 0x1e42902393fb0f37 from memory into f17
fmadd.s f10, f13, f18, f17 # perform operation

# Testcase cp_fs1 (Test source fs1 = f14)
li x2, 0x1686703843429315 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xac95e9e4b8856e8c # load x3 with value 0xac95e9e4b8856e8c
sw x3, 0(x2) # store 0xac95e9e4b8856e8c in memory
flw f14, 0(x2) # load 0xac95e9e4b8856e8c from memory into f14
li x3, 0xd1fdcab5c9a25b30 # load x3 with value 0xd1fdcab5c9a25b30
sw x3, 0(x2) # store 0xd1fdcab5c9a25b30 in memory
flw f28, 0(x2) # load 0xd1fdcab5c9a25b30 from memory into f28
li x3, 0x1e2cfe357cb8a65a # load x3 with value 0x1e2cfe357cb8a65a
sw x3, 0(x2) # store 0x1e2cfe357cb8a65a in memory
flw f19, 0(x2) # load 0x1e2cfe357cb8a65a from memory into f19
fmadd.s f2, f14, f28, f19 # perform operation

# Testcase cp_fs1 (Test source fs1 = f15)
li x9, 0xa36f6f1677bceba4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xcb6807688e288f39 # load x3 with value 0xcb6807688e288f39
sw x3, 0(x2) # store 0xcb6807688e288f39 in memory
flw f15, 0(x2) # load 0xcb6807688e288f39 from memory into f15
li x3, 0xfd75abf4aad19b46 # load x3 with value 0xfd75abf4aad19b46
sw x3, 0(x2) # store 0xfd75abf4aad19b46 in memory
flw f29, 0(x2) # load 0xfd75abf4aad19b46 from memory into f29
li x3, 0x14e5f0b83c93db75 # load x3 with value 0x14e5f0b83c93db75
sw x3, 0(x2) # store 0x14e5f0b83c93db75 in memory
flw f5, 0(x2) # load 0x14e5f0b83c93db75 from memory into f5
fmadd.s f9, f15, f29, f5 # perform operation

# Testcase cp_fs1 (Test source fs1 = f16)
li x4, 0xa018c6176b247c1e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb33cef5a3c84a9ea # load x3 with value 0xb33cef5a3c84a9ea
sw x3, 0(x2) # store 0xb33cef5a3c84a9ea in memory
flw f16, 0(x2) # load 0xb33cef5a3c84a9ea from memory into f16
li x3, 0xfc8f67bb80e827f2 # load x3 with value 0xfc8f67bb80e827f2
sw x3, 0(x2) # store 0xfc8f67bb80e827f2 in memory
flw f20, 0(x2) # load 0xfc8f67bb80e827f2 from memory into f20
li x3, 0x8521e5ab535cb25d # load x3 with value 0x8521e5ab535cb25d
sw x3, 0(x2) # store 0x8521e5ab535cb25d in memory
flw f14, 0(x2) # load 0x8521e5ab535cb25d from memory into f14
fmadd.s f4, f16, f20, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f17)
li x23, 0xc1942d8f3f77ed84 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd5b0eb446152e3f6 # load x3 with value 0xd5b0eb446152e3f6
sw x3, 0(x2) # store 0xd5b0eb446152e3f6 in memory
flw f17, 0(x2) # load 0xd5b0eb446152e3f6 from memory into f17
li x3, 0xc959e92556c7beeb # load x3 with value 0xc959e92556c7beeb
sw x3, 0(x2) # store 0xc959e92556c7beeb in memory
flw f27, 0(x2) # load 0xc959e92556c7beeb from memory into f27
li x3, 0xc0d971939daf40a9 # load x3 with value 0xc0d971939daf40a9
sw x3, 0(x2) # store 0xc0d971939daf40a9 in memory
flw f12, 0(x2) # load 0xc0d971939daf40a9 from memory into f12
fmadd.s f23, f17, f27, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f18)
li x28, 0xd9aa1204baee598a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x9f00d9d80383c773 # load x3 with value 0x9f00d9d80383c773
sw x3, 0(x2) # store 0x9f00d9d80383c773 in memory
flw f18, 0(x2) # load 0x9f00d9d80383c773 from memory into f18
li x3, 0xdb845053bdbcfcb6 # load x3 with value 0xdb845053bdbcfcb6
sw x3, 0(x2) # store 0xdb845053bdbcfcb6 in memory
flw f14, 0(x2) # load 0xdb845053bdbcfcb6 from memory into f14
li x3, 0x6bbdacc0cde2ddbb # load x3 with value 0x6bbdacc0cde2ddbb
sw x3, 0(x2) # store 0x6bbdacc0cde2ddbb in memory
flw f27, 0(x2) # load 0x6bbdacc0cde2ddbb from memory into f27
fmadd.s f28, f18, f14, f27 # perform operation

# Testcase cp_fs1 (Test source fs1 = f19)
li x11, 0x31e614dd65354734 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x81d7d44ddc5e5240 # load x3 with value 0x81d7d44ddc5e5240
sw x3, 0(x2) # store 0x81d7d44ddc5e5240 in memory
flw f19, 0(x2) # load 0x81d7d44ddc5e5240 from memory into f19
li x3, 0xdc4eba8ff955d5fc # load x3 with value 0xdc4eba8ff955d5fc
sw x3, 0(x2) # store 0xdc4eba8ff955d5fc in memory
flw f2, 0(x2) # load 0xdc4eba8ff955d5fc from memory into f2
li x3, 0x7c19eaa300682d8e # load x3 with value 0x7c19eaa300682d8e
sw x3, 0(x2) # store 0x7c19eaa300682d8e in memory
flw f14, 0(x2) # load 0x7c19eaa300682d8e from memory into f14
fmadd.s f11, f19, f2, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f20)
li x9, 0xcd5b41a0fc66153f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd4da648b05f841eb # load x3 with value 0xd4da648b05f841eb
sw x3, 0(x2) # store 0xd4da648b05f841eb in memory
flw f20, 0(x2) # load 0xd4da648b05f841eb from memory into f20
li x3, 0x45c31f0e0cc9122f # load x3 with value 0x45c31f0e0cc9122f
sw x3, 0(x2) # store 0x45c31f0e0cc9122f in memory
flw f24, 0(x2) # load 0x45c31f0e0cc9122f from memory into f24
li x3, 0xbb45ce8613c93ff5 # load x3 with value 0xbb45ce8613c93ff5
sw x3, 0(x2) # store 0xbb45ce8613c93ff5 in memory
flw f2, 0(x2) # load 0xbb45ce8613c93ff5 from memory into f2
fmadd.s f9, f20, f24, f2 # perform operation

# Testcase cp_fs1 (Test source fs1 = f21)
li x12, 0xea756999e5222a52 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1ff708a7025b226a # load x3 with value 0x1ff708a7025b226a
sw x3, 0(x2) # store 0x1ff708a7025b226a in memory
flw f21, 0(x2) # load 0x1ff708a7025b226a from memory into f21
li x3, 0x4f8fd43579da7126 # load x3 with value 0x4f8fd43579da7126
sw x3, 0(x2) # store 0x4f8fd43579da7126 in memory
flw f30, 0(x2) # load 0x4f8fd43579da7126 from memory into f30
li x3, 0xb5e6ec6caf6e6784 # load x3 with value 0xb5e6ec6caf6e6784
sw x3, 0(x2) # store 0xb5e6ec6caf6e6784 in memory
flw f16, 0(x2) # load 0xb5e6ec6caf6e6784 from memory into f16
fmadd.s f12, f21, f30, f16 # perform operation

# Testcase cp_fs1 (Test source fs1 = f22)
li x5, 0x2b6505fa41d30ff0 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x32c4692e877ce2ea # load x3 with value 0x32c4692e877ce2ea
sw x3, 0(x2) # store 0x32c4692e877ce2ea in memory
flw f22, 0(x2) # load 0x32c4692e877ce2ea from memory into f22
li x3, 0x2ecc78b522613b7d # load x3 with value 0x2ecc78b522613b7d
sw x3, 0(x2) # store 0x2ecc78b522613b7d in memory
flw f14, 0(x2) # load 0x2ecc78b522613b7d from memory into f14
li x3, 0xd9fc8571fdbdd10e # load x3 with value 0xd9fc8571fdbdd10e
sw x3, 0(x2) # store 0xd9fc8571fdbdd10e in memory
flw f29, 0(x2) # load 0xd9fc8571fdbdd10e from memory into f29
fmadd.s f5, f22, f14, f29 # perform operation

# Testcase cp_fs1 (Test source fs1 = f23)
li x5, 0x53844aafc8524f27 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x40b85a4cdb71317d # load x3 with value 0x40b85a4cdb71317d
sw x3, 0(x2) # store 0x40b85a4cdb71317d in memory
flw f23, 0(x2) # load 0x40b85a4cdb71317d from memory into f23
li x3, 0x1aa89c5b5d36d741 # load x3 with value 0x1aa89c5b5d36d741
sw x3, 0(x2) # store 0x1aa89c5b5d36d741 in memory
flw f7, 0(x2) # load 0x1aa89c5b5d36d741 from memory into f7
li x3, 0x9128da470705d6db # load x3 with value 0x9128da470705d6db
sw x3, 0(x2) # store 0x9128da470705d6db in memory
flw f3, 0(x2) # load 0x9128da470705d6db from memory into f3
fmadd.s f5, f23, f7, f3 # perform operation

# Testcase cp_fs1 (Test source fs1 = f24)
li x5, 0x513ceb310fe38bbe # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x724b0b9ac6b4501a # load x3 with value 0x724b0b9ac6b4501a
sw x3, 0(x2) # store 0x724b0b9ac6b4501a in memory
flw f24, 0(x2) # load 0x724b0b9ac6b4501a from memory into f24
li x3, 0x42bf89270ab09c4f # load x3 with value 0x42bf89270ab09c4f
sw x3, 0(x2) # store 0x42bf89270ab09c4f in memory
flw f19, 0(x2) # load 0x42bf89270ab09c4f from memory into f19
li x3, 0x7d58e53b9e0ff9ed # load x3 with value 0x7d58e53b9e0ff9ed
sw x3, 0(x2) # store 0x7d58e53b9e0ff9ed in memory
flw f6, 0(x2) # load 0x7d58e53b9e0ff9ed from memory into f6
fmadd.s f5, f24, f19, f6 # perform operation

# Testcase cp_fs1 (Test source fs1 = f25)
li x20, 0x9b2cb90a9c1bb6ba # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3041d76dd85470d4 # load x3 with value 0x3041d76dd85470d4
sw x3, 0(x2) # store 0x3041d76dd85470d4 in memory
flw f25, 0(x2) # load 0x3041d76dd85470d4 from memory into f25
li x3, 0xfc84d2e12129a2c7 # load x3 with value 0xfc84d2e12129a2c7
sw x3, 0(x2) # store 0xfc84d2e12129a2c7 in memory
flw f19, 0(x2) # load 0xfc84d2e12129a2c7 from memory into f19
li x3, 0xc1281f8c5476c1f2 # load x3 with value 0xc1281f8c5476c1f2
sw x3, 0(x2) # store 0xc1281f8c5476c1f2 in memory
flw f25, 0(x2) # load 0xc1281f8c5476c1f2 from memory into f25
fmadd.s f20, f25, f19, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f26)
li x20, 0x223ac87c5f575dcd # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6bac74501c5fab12 # load x3 with value 0x6bac74501c5fab12
sw x3, 0(x2) # store 0x6bac74501c5fab12 in memory
flw f26, 0(x2) # load 0x6bac74501c5fab12 from memory into f26
li x3, 0xda7b593d021bf4e1 # load x3 with value 0xda7b593d021bf4e1
sw x3, 0(x2) # store 0xda7b593d021bf4e1 in memory
flw f12, 0(x2) # load 0xda7b593d021bf4e1 from memory into f12
li x3, 0x733e79e7684cde6d # load x3 with value 0x733e79e7684cde6d
sw x3, 0(x2) # store 0x733e79e7684cde6d in memory
flw f31, 0(x2) # load 0x733e79e7684cde6d from memory into f31
fmadd.s f20, f26, f12, f31 # perform operation

# Testcase cp_fs1 (Test source fs1 = f27)
li x2, 0x871bab5a70abbcc5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7e3127f2a8b0e047 # load x3 with value 0x7e3127f2a8b0e047
sw x3, 0(x2) # store 0x7e3127f2a8b0e047 in memory
flw f27, 0(x2) # load 0x7e3127f2a8b0e047 from memory into f27
li x3, 0x890d654c4ac4bc16 # load x3 with value 0x890d654c4ac4bc16
sw x3, 0(x2) # store 0x890d654c4ac4bc16 in memory
flw f20, 0(x2) # load 0x890d654c4ac4bc16 from memory into f20
li x3, 0x3edd9e6d35bb2343 # load x3 with value 0x3edd9e6d35bb2343
sw x3, 0(x2) # store 0x3edd9e6d35bb2343 in memory
flw f12, 0(x2) # load 0x3edd9e6d35bb2343 from memory into f12
fmadd.s f2, f27, f20, f12 # perform operation

# Testcase cp_fs1 (Test source fs1 = f28)
li x11, 0x884b2a1a690d19e6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed00126c73c1d54c # load x3 with value 0xed00126c73c1d54c
sw x3, 0(x2) # store 0xed00126c73c1d54c in memory
flw f28, 0(x2) # load 0xed00126c73c1d54c from memory into f28
li x3, 0x35f52cc29ad99fc # load x3 with value 0x35f52cc29ad99fc
sw x3, 0(x2) # store 0x35f52cc29ad99fc in memory
flw f23, 0(x2) # load 0x35f52cc29ad99fc from memory into f23
li x3, 0x28112dbd7a262a91 # load x3 with value 0x28112dbd7a262a91
sw x3, 0(x2) # store 0x28112dbd7a262a91 in memory
flw f26, 0(x2) # load 0x28112dbd7a262a91 from memory into f26
fmadd.s f11, f28, f23, f26 # perform operation

# Testcase cp_fs1 (Test source fs1 = f29)
li x12, 0x76457647432d740d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5d37cc5c08cd4e # load x3 with value 0x5d37cc5c08cd4e
sw x3, 0(x2) # store 0x5d37cc5c08cd4e in memory
flw f29, 0(x2) # load 0x5d37cc5c08cd4e from memory into f29
li x3, 0x36de250cd0e2866 # load x3 with value 0x36de250cd0e2866
sw x3, 0(x2) # store 0x36de250cd0e2866 in memory
flw f10, 0(x2) # load 0x36de250cd0e2866 from memory into f10
li x3, 0xf51b9b0bf37d6078 # load x3 with value 0xf51b9b0bf37d6078
sw x3, 0(x2) # store 0xf51b9b0bf37d6078 in memory
flw f14, 0(x2) # load 0xf51b9b0bf37d6078 from memory into f14
fmadd.s f12, f29, f10, f14 # perform operation

# Testcase cp_fs1 (Test source fs1 = f30)
li x28, 0x6156003168025a9a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x508efd10f8caefbc # load x3 with value 0x508efd10f8caefbc
sw x3, 0(x2) # store 0x508efd10f8caefbc in memory
flw f30, 0(x2) # load 0x508efd10f8caefbc from memory into f30
li x3, 0x41f36addfca87db4 # load x3 with value 0x41f36addfca87db4
sw x3, 0(x2) # store 0x41f36addfca87db4 in memory
flw f17, 0(x2) # load 0x41f36addfca87db4 from memory into f17
li x3, 0x6b85c7bc7d0c33cf # load x3 with value 0x6b85c7bc7d0c33cf
sw x3, 0(x2) # store 0x6b85c7bc7d0c33cf in memory
flw f25, 0(x2) # load 0x6b85c7bc7d0c33cf from memory into f25
fmadd.s f28, f30, f17, f25 # perform operation

# Testcase cp_fs1 (Test source fs1 = f31)
li x24, 0x47589abd41ee066d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x8a76e4c0a9cff5de # load x3 with value 0x8a76e4c0a9cff5de
sw x3, 0(x2) # store 0x8a76e4c0a9cff5de in memory
flw f31, 0(x2) # load 0x8a76e4c0a9cff5de from memory into f31
li x3, 0x3b059d45ba96362 # load x3 with value 0x3b059d45ba96362
sw x3, 0(x2) # store 0x3b059d45ba96362 in memory
flw f13, 0(x2) # load 0x3b059d45ba96362 from memory into f13
li x3, 0x532daf5477a2678e # load x3 with value 0x532daf5477a2678e
sw x3, 0(x2) # store 0x532daf5477a2678e in memory
flw f8, 0(x2) # load 0x532daf5477a2678e from memory into f8
fmadd.s f24, f31, f13, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f0)
li x22, 0x10327fb42b7b4300 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x87490622d068489 # load x3 with value 0x87490622d068489
sw x3, 0(x2) # store 0x87490622d068489 in memory
flw f10, 0(x2) # load 0x87490622d068489 from memory into f10
li x3, 0x2eab600bd4e1a36c # load x3 with value 0x2eab600bd4e1a36c
sw x3, 0(x2) # store 0x2eab600bd4e1a36c in memory
flw f0, 0(x2) # load 0x2eab600bd4e1a36c from memory into f0
li x3, 0x5e3d6b0589b39834 # load x3 with value 0x5e3d6b0589b39834
sw x3, 0(x2) # store 0x5e3d6b0589b39834 in memory
flw f14, 0(x2) # load 0x5e3d6b0589b39834 from memory into f14
fmadd.s f22, f10, f0, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f1)
li x2, 0x44ee270b839cf874 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x518827357f33364b # load x3 with value 0x518827357f33364b
sw x3, 0(x2) # store 0x518827357f33364b in memory
flw f7, 0(x2) # load 0x518827357f33364b from memory into f7
li x3, 0xbb6da72f28e1efd0 # load x3 with value 0xbb6da72f28e1efd0
sw x3, 0(x2) # store 0xbb6da72f28e1efd0 in memory
flw f1, 0(x2) # load 0xbb6da72f28e1efd0 from memory into f1
li x3, 0x75530945e5159b8c # load x3 with value 0x75530945e5159b8c
sw x3, 0(x2) # store 0x75530945e5159b8c in memory
flw f8, 0(x2) # load 0x75530945e5159b8c from memory into f8
fmadd.s f2, f7, f1, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f2)
li x2, 0x07101d7ee95ae6e5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4220d3e66db2338b # load x3 with value 0x4220d3e66db2338b
sw x3, 0(x2) # store 0x4220d3e66db2338b in memory
flw f8, 0(x2) # load 0x4220d3e66db2338b from memory into f8
li x3, 0xe09c6a38f5b049dc # load x3 with value 0xe09c6a38f5b049dc
sw x3, 0(x2) # store 0xe09c6a38f5b049dc in memory
flw f2, 0(x2) # load 0xe09c6a38f5b049dc from memory into f2
li x3, 0xc40e5e726a333b6d # load x3 with value 0xc40e5e726a333b6d
sw x3, 0(x2) # store 0xc40e5e726a333b6d in memory
flw f14, 0(x2) # load 0xc40e5e726a333b6d from memory into f14
fmadd.s f2, f8, f2, f14 # perform operation

# Testcase cp_fs2 (Test source fs2 = f3)
li x23, 0xe51c984cd4c0da8b # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x306e4124048f9d61 # load x3 with value 0x306e4124048f9d61
sw x3, 0(x2) # store 0x306e4124048f9d61 in memory
flw f7, 0(x2) # load 0x306e4124048f9d61 from memory into f7
li x3, 0x9876a07edae5c204 # load x3 with value 0x9876a07edae5c204
sw x3, 0(x2) # store 0x9876a07edae5c204 in memory
flw f3, 0(x2) # load 0x9876a07edae5c204 from memory into f3
li x3, 0xd61814da302b85b2 # load x3 with value 0xd61814da302b85b2
sw x3, 0(x2) # store 0xd61814da302b85b2 in memory
flw f13, 0(x2) # load 0xd61814da302b85b2 from memory into f13
fmadd.s f23, f7, f3, f13 # perform operation

# Testcase cp_fs2 (Test source fs2 = f4)
li x17, 0x124f0dfd442475e1 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6e3a98dc1f7c1abc # load x3 with value 0x6e3a98dc1f7c1abc
sw x3, 0(x2) # store 0x6e3a98dc1f7c1abc in memory
flw f2, 0(x2) # load 0x6e3a98dc1f7c1abc from memory into f2
li x3, 0x5bf6203f76ddd20e # load x3 with value 0x5bf6203f76ddd20e
sw x3, 0(x2) # store 0x5bf6203f76ddd20e in memory
flw f4, 0(x2) # load 0x5bf6203f76ddd20e from memory into f4
li x3, 0x1250bd39107f4f51 # load x3 with value 0x1250bd39107f4f51
sw x3, 0(x2) # store 0x1250bd39107f4f51 in memory
flw f27, 0(x2) # load 0x1250bd39107f4f51 from memory into f27
fmadd.s f17, f2, f4, f27 # perform operation

# Testcase cp_fs2 (Test source fs2 = f5)
li x28, 0x86e5dc3b0c20e490 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x14211ec2f16446df # load x3 with value 0x14211ec2f16446df
sw x3, 0(x2) # store 0x14211ec2f16446df in memory
flw f30, 0(x2) # load 0x14211ec2f16446df from memory into f30
li x3, 0x25c44723240076ad # load x3 with value 0x25c44723240076ad
sw x3, 0(x2) # store 0x25c44723240076ad in memory
flw f5, 0(x2) # load 0x25c44723240076ad from memory into f5
li x3, 0x3aeaee7d168f7b23 # load x3 with value 0x3aeaee7d168f7b23
sw x3, 0(x2) # store 0x3aeaee7d168f7b23 in memory
flw f24, 0(x2) # load 0x3aeaee7d168f7b23 from memory into f24
fmadd.s f28, f30, f5, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f6)
li x31, 0x1b6f0c33f8fbe291 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x93a08ef124b239ad # load x3 with value 0x93a08ef124b239ad
sw x3, 0(x2) # store 0x93a08ef124b239ad in memory
flw f19, 0(x2) # load 0x93a08ef124b239ad from memory into f19
li x3, 0x29c044cfcf6135f2 # load x3 with value 0x29c044cfcf6135f2
sw x3, 0(x2) # store 0x29c044cfcf6135f2 in memory
flw f6, 0(x2) # load 0x29c044cfcf6135f2 from memory into f6
li x3, 0xba034ac6fc497e40 # load x3 with value 0xba034ac6fc497e40
sw x3, 0(x2) # store 0xba034ac6fc497e40 in memory
flw f22, 0(x2) # load 0xba034ac6fc497e40 from memory into f22
fmadd.s f31, f19, f6, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f7)
li x22, 0xc92d8579d95976eb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x66c1a7f58656ebea # load x3 with value 0x66c1a7f58656ebea
sw x3, 0(x2) # store 0x66c1a7f58656ebea in memory
flw f31, 0(x2) # load 0x66c1a7f58656ebea from memory into f31
li x3, 0x69278662395e5ae7 # load x3 with value 0x69278662395e5ae7
sw x3, 0(x2) # store 0x69278662395e5ae7 in memory
flw f7, 0(x2) # load 0x69278662395e5ae7 from memory into f7
li x3, 0xf801503c24395915 # load x3 with value 0xf801503c24395915
sw x3, 0(x2) # store 0xf801503c24395915 in memory
flw f6, 0(x2) # load 0xf801503c24395915 from memory into f6
fmadd.s f22, f31, f7, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f8)
li x7, 0xf36753b65f9c931c # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xfb1ccc7ca166e4b0 # load x3 with value 0xfb1ccc7ca166e4b0
sw x3, 0(x2) # store 0xfb1ccc7ca166e4b0 in memory
flw f16, 0(x2) # load 0xfb1ccc7ca166e4b0 from memory into f16
li x3, 0x37591394e299ce22 # load x3 with value 0x37591394e299ce22
sw x3, 0(x2) # store 0x37591394e299ce22 in memory
flw f8, 0(x2) # load 0x37591394e299ce22 from memory into f8
li x3, 0x214b4bdfec813cd9 # load x3 with value 0x214b4bdfec813cd9
sw x3, 0(x2) # store 0x214b4bdfec813cd9 in memory
flw f6, 0(x2) # load 0x214b4bdfec813cd9 from memory into f6
fmadd.s f7, f16, f8, f6 # perform operation

# Testcase cp_fs2 (Test source fs2 = f9)
li x21, 0x1c5e28101140d2c5 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x3cf80a052f420f4b # load x3 with value 0x3cf80a052f420f4b
sw x3, 0(x2) # store 0x3cf80a052f420f4b in memory
flw f7, 0(x2) # load 0x3cf80a052f420f4b from memory into f7
li x3, 0x208a295334a26331 # load x3 with value 0x208a295334a26331
sw x3, 0(x2) # store 0x208a295334a26331 in memory
flw f9, 0(x2) # load 0x208a295334a26331 from memory into f9
li x3, 0x26af59c8eb61e053 # load x3 with value 0x26af59c8eb61e053
sw x3, 0(x2) # store 0x26af59c8eb61e053 in memory
flw f1, 0(x2) # load 0x26af59c8eb61e053 from memory into f1
fmadd.s f21, f7, f9, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f10)
li x9, 0x343a2362e26c748a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd9f64353651c437a # load x3 with value 0xd9f64353651c437a
sw x3, 0(x2) # store 0xd9f64353651c437a in memory
flw f3, 0(x2) # load 0xd9f64353651c437a from memory into f3
li x3, 0xaf0e45e7fb16a9d6 # load x3 with value 0xaf0e45e7fb16a9d6
sw x3, 0(x2) # store 0xaf0e45e7fb16a9d6 in memory
flw f10, 0(x2) # load 0xaf0e45e7fb16a9d6 from memory into f10
li x3, 0x9730cd7e2c1c7bd7 # load x3 with value 0x9730cd7e2c1c7bd7
sw x3, 0(x2) # store 0x9730cd7e2c1c7bd7 in memory
flw f30, 0(x2) # load 0x9730cd7e2c1c7bd7 from memory into f30
fmadd.s f9, f3, f10, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f11)
li x18, 0x0cc825c9b5087486 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xee36eadde27e906a # load x3 with value 0xee36eadde27e906a
sw x3, 0(x2) # store 0xee36eadde27e906a in memory
flw f26, 0(x2) # load 0xee36eadde27e906a from memory into f26
li x3, 0x914f912fd8ec5fef # load x3 with value 0x914f912fd8ec5fef
sw x3, 0(x2) # store 0x914f912fd8ec5fef in memory
flw f11, 0(x2) # load 0x914f912fd8ec5fef from memory into f11
li x3, 0x88ee4fc19b11c61b # load x3 with value 0x88ee4fc19b11c61b
sw x3, 0(x2) # store 0x88ee4fc19b11c61b in memory
flw f11, 0(x2) # load 0x88ee4fc19b11c61b from memory into f11
fmadd.s f18, f26, f11, f11 # perform operation

# Testcase cp_fs2 (Test source fs2 = f12)
li x3, 0xb8b2a6d51e186617 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x6b2ac83135082d4d # load x3 with value 0x6b2ac83135082d4d
sw x3, 0(x2) # store 0x6b2ac83135082d4d in memory
flw f19, 0(x2) # load 0x6b2ac83135082d4d from memory into f19
li x3, 0x74119e8d45435d9f # load x3 with value 0x74119e8d45435d9f
sw x3, 0(x2) # store 0x74119e8d45435d9f in memory
flw f12, 0(x2) # load 0x74119e8d45435d9f from memory into f12
li x3, 0x2d258975e00e9e98 # load x3 with value 0x2d258975e00e9e98
sw x3, 0(x2) # store 0x2d258975e00e9e98 in memory
flw f5, 0(x2) # load 0x2d258975e00e9e98 from memory into f5
fmadd.s f3, f19, f12, f5 # perform operation

# Testcase cp_fs2 (Test source fs2 = f13)
li x19, 0xc50ca225eb366635 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x18a0a1e7ef74928f # load x3 with value 0x18a0a1e7ef74928f
sw x3, 0(x2) # store 0x18a0a1e7ef74928f in memory
flw f2, 0(x2) # load 0x18a0a1e7ef74928f from memory into f2
li x3, 0xa494b3e7f96c2a3c # load x3 with value 0xa494b3e7f96c2a3c
sw x3, 0(x2) # store 0xa494b3e7f96c2a3c in memory
flw f13, 0(x2) # load 0xa494b3e7f96c2a3c from memory into f13
li x3, 0x15cc7dbd6b27797c # load x3 with value 0x15cc7dbd6b27797c
sw x3, 0(x2) # store 0x15cc7dbd6b27797c in memory
flw f9, 0(x2) # load 0x15cc7dbd6b27797c from memory into f9
fmadd.s f19, f2, f13, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f14)
li x8, 0x28bc885e161f86fb # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x7c3f5000e632f39c # load x3 with value 0x7c3f5000e632f39c
sw x3, 0(x2) # store 0x7c3f5000e632f39c in memory
flw f27, 0(x2) # load 0x7c3f5000e632f39c from memory into f27
li x3, 0xc5573ef9a5e2ed04 # load x3 with value 0xc5573ef9a5e2ed04
sw x3, 0(x2) # store 0xc5573ef9a5e2ed04 in memory
flw f14, 0(x2) # load 0xc5573ef9a5e2ed04 from memory into f14
li x3, 0xc0d6e12b08c440b7 # load x3 with value 0xc0d6e12b08c440b7
sw x3, 0(x2) # store 0xc0d6e12b08c440b7 in memory
flw f29, 0(x2) # load 0xc0d6e12b08c440b7 from memory into f29
fmadd.s f8, f27, f14, f29 # perform operation

# Testcase cp_fs2 (Test source fs2 = f15)
li x6, 0xaaf7ec85fd0ead5a # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xa1f279bd4a339996 # load x3 with value 0xa1f279bd4a339996
sw x3, 0(x2) # store 0xa1f279bd4a339996 in memory
flw f28, 0(x2) # load 0xa1f279bd4a339996 from memory into f28
li x3, 0x20bed357c89d8c42 # load x3 with value 0x20bed357c89d8c42
sw x3, 0(x2) # store 0x20bed357c89d8c42 in memory
flw f15, 0(x2) # load 0x20bed357c89d8c42 from memory into f15
li x3, 0x873234db8c8e93c # load x3 with value 0x873234db8c8e93c
sw x3, 0(x2) # store 0x873234db8c8e93c in memory
flw f20, 0(x2) # load 0x873234db8c8e93c from memory into f20
fmadd.s f6, f28, f15, f20 # perform operation

# Testcase cp_fs2 (Test source fs2 = f16)
li x9, 0x80aa5a5d57696f94 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbe03d9e6cd28a9cd # load x3 with value 0xbe03d9e6cd28a9cd
sw x3, 0(x2) # store 0xbe03d9e6cd28a9cd in memory
flw f20, 0(x2) # load 0xbe03d9e6cd28a9cd from memory into f20
li x3, 0x7b67b07c3d192517 # load x3 with value 0x7b67b07c3d192517
sw x3, 0(x2) # store 0x7b67b07c3d192517 in memory
flw f16, 0(x2) # load 0x7b67b07c3d192517 from memory into f16
li x3, 0x37a0659922cf98ff # load x3 with value 0x37a0659922cf98ff
sw x3, 0(x2) # store 0x37a0659922cf98ff in memory
flw f24, 0(x2) # load 0x37a0659922cf98ff from memory into f24
fmadd.s f9, f20, f16, f24 # perform operation

# Testcase cp_fs2 (Test source fs2 = f17)
li x29, 0x146256fd37f8e95e # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb474337e5f89217 # load x3 with value 0xb474337e5f89217
sw x3, 0(x2) # store 0xb474337e5f89217 in memory
flw f31, 0(x2) # load 0xb474337e5f89217 from memory into f31
li x3, 0x4202e8f5b169f6a # load x3 with value 0x4202e8f5b169f6a
sw x3, 0(x2) # store 0x4202e8f5b169f6a in memory
flw f17, 0(x2) # load 0x4202e8f5b169f6a from memory into f17
li x3, 0xaeb781dbe79a608e # load x3 with value 0xaeb781dbe79a608e
sw x3, 0(x2) # store 0xaeb781dbe79a608e in memory
flw f19, 0(x2) # load 0xaeb781dbe79a608e from memory into f19
fmadd.s f29, f31, f17, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f18)
li x16, 0x0efda5b48a6982ae # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb60f8c9779ed88cc # load x3 with value 0xb60f8c9779ed88cc
sw x3, 0(x2) # store 0xb60f8c9779ed88cc in memory
flw f1, 0(x2) # load 0xb60f8c9779ed88cc from memory into f1
li x3, 0x5b68787e32393b11 # load x3 with value 0x5b68787e32393b11
sw x3, 0(x2) # store 0x5b68787e32393b11 in memory
flw f18, 0(x2) # load 0x5b68787e32393b11 from memory into f18
li x3, 0xd23fc3362f6184c0 # load x3 with value 0xd23fc3362f6184c0
sw x3, 0(x2) # store 0xd23fc3362f6184c0 in memory
flw f19, 0(x2) # load 0xd23fc3362f6184c0 from memory into f19
fmadd.s f16, f1, f18, f19 # perform operation

# Testcase cp_fs2 (Test source fs2 = f19)
li x13, 0x14552304ebb48727 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x1c0ea21525ec152b # load x3 with value 0x1c0ea21525ec152b
sw x3, 0(x2) # store 0x1c0ea21525ec152b in memory
flw f29, 0(x2) # load 0x1c0ea21525ec152b from memory into f29
li x3, 0xe985e40082981586 # load x3 with value 0xe985e40082981586
sw x3, 0(x2) # store 0xe985e40082981586 in memory
flw f19, 0(x2) # load 0xe985e40082981586 from memory into f19
li x3, 0x899386d52a99e95f # load x3 with value 0x899386d52a99e95f
sw x3, 0(x2) # store 0x899386d52a99e95f in memory
flw f1, 0(x2) # load 0x899386d52a99e95f from memory into f1
fmadd.s f13, f29, f19, f1 # perform operation

# Testcase cp_fs2 (Test source fs2 = f20)
li x24, 0x457a715cf30d6484 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x913a34a8cedd54ca # load x3 with value 0x913a34a8cedd54ca
sw x3, 0(x2) # store 0x913a34a8cedd54ca in memory
flw f7, 0(x2) # load 0x913a34a8cedd54ca from memory into f7
li x3, 0x1b8b2f3c47f5bca7 # load x3 with value 0x1b8b2f3c47f5bca7
sw x3, 0(x2) # store 0x1b8b2f3c47f5bca7 in memory
flw f20, 0(x2) # load 0x1b8b2f3c47f5bca7 from memory into f20
li x3, 0x92eb126f2af8cd12 # load x3 with value 0x92eb126f2af8cd12
sw x3, 0(x2) # store 0x92eb126f2af8cd12 in memory
flw f28, 0(x2) # load 0x92eb126f2af8cd12 from memory into f28
fmadd.s f24, f7, f20, f28 # perform operation

# Testcase cp_fs2 (Test source fs2 = f21)
li x17, 0x8ceaef8981d76cf6 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xbc29ad0c55b2166c # load x3 with value 0xbc29ad0c55b2166c
sw x3, 0(x2) # store 0xbc29ad0c55b2166c in memory
flw f6, 0(x2) # load 0xbc29ad0c55b2166c from memory into f6
li x3, 0x361bd5381175d211 # load x3 with value 0x361bd5381175d211
sw x3, 0(x2) # store 0x361bd5381175d211 in memory
flw f21, 0(x2) # load 0x361bd5381175d211 from memory into f21
li x3, 0xcb80e685c328773c # load x3 with value 0xcb80e685c328773c
sw x3, 0(x2) # store 0xcb80e685c328773c in memory
flw f22, 0(x2) # load 0xcb80e685c328773c from memory into f22
fmadd.s f17, f6, f21, f22 # perform operation

# Testcase cp_fs2 (Test source fs2 = f22)
li x20, 0xef9d4d2010c6dd4f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xf81d062e2d2f608e # load x3 with value 0xf81d062e2d2f608e
sw x3, 0(x2) # store 0xf81d062e2d2f608e in memory
flw f5, 0(x2) # load 0xf81d062e2d2f608e from memory into f5
li x3, 0xf9ec10732a6127ef # load x3 with value 0xf9ec10732a6127ef
sw x3, 0(x2) # store 0xf9ec10732a6127ef in memory
flw f22, 0(x2) # load 0xf9ec10732a6127ef from memory into f22
li x3, 0x7b9c12bf481d419 # load x3 with value 0x7b9c12bf481d419
sw x3, 0(x2) # store 0x7b9c12bf481d419 in memory
flw f30, 0(x2) # load 0x7b9c12bf481d419 from memory into f30
fmadd.s f20, f5, f22, f30 # perform operation

# Testcase cp_fs2 (Test source fs2 = f23)
li x3, 0xd3bcc0fe5363a94f # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x568976b163d15f9d # load x3 with value 0x568976b163d15f9d
sw x3, 0(x2) # store 0x568976b163d15f9d in memory
flw f5, 0(x2) # load 0x568976b163d15f9d from memory into f5
li x3, 0xe1c91306ec3a073e # load x3 with value 0xe1c91306ec3a073e
sw x3, 0(x2) # store 0xe1c91306ec3a073e in memory
flw f23, 0(x2) # load 0xe1c91306ec3a073e from memory into f23
li x3, 0x460c18ab6854252d # load x3 with value 0x460c18ab6854252d
sw x3, 0(x2) # store 0x460c18ab6854252d in memory
flw f8, 0(x2) # load 0x460c18ab6854252d from memory into f8
fmadd.s f3, f5, f23, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f24)
li x30, 0xd89b73eaf15cd368 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xdb4e3e9d3c0c9bd # load x3 with value 0xdb4e3e9d3c0c9bd
sw x3, 0(x2) # store 0xdb4e3e9d3c0c9bd in memory
flw f12, 0(x2) # load 0xdb4e3e9d3c0c9bd from memory into f12
li x3, 0x807c67cae4f1104e # load x3 with value 0x807c67cae4f1104e
sw x3, 0(x2) # store 0x807c67cae4f1104e in memory
flw f24, 0(x2) # load 0x807c67cae4f1104e from memory into f24
li x3, 0xf601b94626cbe132 # load x3 with value 0xf601b94626cbe132
sw x3, 0(x2) # store 0xf601b94626cbe132 in memory
flw f9, 0(x2) # load 0xf601b94626cbe132 from memory into f9
fmadd.s f30, f12, f24, f9 # perform operation

# Testcase cp_fs2 (Test source fs2 = f25)
li x13, 0xec9b78cd15001f6d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x5b0f1b745bd255b1 # load x3 with value 0x5b0f1b745bd255b1
sw x3, 0(x2) # store 0x5b0f1b745bd255b1 in memory
flw f30, 0(x2) # load 0x5b0f1b745bd255b1 from memory into f30
li x3, 0xb1caf778081679ec # load x3 with value 0xb1caf778081679ec
sw x3, 0(x2) # store 0xb1caf778081679ec in memory
flw f25, 0(x2) # load 0xb1caf778081679ec from memory into f25
li x3, 0x10f13fedd35bec9f # load x3 with value 0x10f13fedd35bec9f
sw x3, 0(x2) # store 0x10f13fedd35bec9f in memory
flw f23, 0(x2) # load 0x10f13fedd35bec9f from memory into f23
fmadd.s f13, f30, f25, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f26)
li x6, 0x919fe9736d48f421 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xce36f243ebe3112 # load x3 with value 0xce36f243ebe3112
sw x3, 0(x2) # store 0xce36f243ebe3112 in memory
flw f19, 0(x2) # load 0xce36f243ebe3112 from memory into f19
li x3, 0xae98f55e9024ea8d # load x3 with value 0xae98f55e9024ea8d
sw x3, 0(x2) # store 0xae98f55e9024ea8d in memory
flw f26, 0(x2) # load 0xae98f55e9024ea8d from memory into f26
li x3, 0xe1c6a34b71b4a242 # load x3 with value 0xe1c6a34b71b4a242
sw x3, 0(x2) # store 0xe1c6a34b71b4a242 in memory
flw f16, 0(x2) # load 0xe1c6a34b71b4a242 from memory into f16
fmadd.s f6, f19, f26, f16 # perform operation

# Testcase cp_fs2 (Test source fs2 = f27)
li x7, 0x9b25eaa9d6f57e1d # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xb96091456a983dfc # load x3 with value 0xb96091456a983dfc
sw x3, 0(x2) # store 0xb96091456a983dfc in memory
flw f5, 0(x2) # load 0xb96091456a983dfc from memory into f5
li x3, 0x3c492e4a27679a8c # load x3 with value 0x3c492e4a27679a8c
sw x3, 0(x2) # store 0x3c492e4a27679a8c in memory
flw f27, 0(x2) # load 0x3c492e4a27679a8c from memory into f27
li x3, 0x441a3b8924837d37 # load x3 with value 0x441a3b8924837d37
sw x3, 0(x2) # store 0x441a3b8924837d37 in memory
flw f23, 0(x2) # load 0x441a3b8924837d37 from memory into f23
fmadd.s f7, f5, f27, f23 # perform operation

# Testcase cp_fs2 (Test source fs2 = f28)
li x14, 0x46b36c019e32c3d4 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x4395ce54c49b3315 # load x3 with value 0x4395ce54c49b3315
sw x3, 0(x2) # store 0x4395ce54c49b3315 in memory
flw f23, 0(x2) # load 0x4395ce54c49b3315 from memory into f23
li x3, 0x2d08e70ffc77f7e2 # load x3 with value 0x2d08e70ffc77f7e2
sw x3, 0(x2) # store 0x2d08e70ffc77f7e2 in memory
flw f28, 0(x2) # load 0x2d08e70ffc77f7e2 from memory into f28
li x3, 0x9c2e76c46c7480ca # load x3 with value 0x9c2e76c46c7480ca
sw x3, 0(x2) # store 0x9c2e76c46c7480ca in memory
flw f18, 0(x2) # load 0x9c2e76c46c7480ca from memory into f18
fmadd.s f14, f23, f28, f18 # perform operation

# Testcase cp_fs2 (Test source fs2 = f29)
li x6, 0x7689f57fdcd01e67 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0x2637b7e60769aee2 # load x3 with value 0x2637b7e60769aee2
sw x3, 0(x2) # store 0x2637b7e60769aee2 in memory
flw f30, 0(x2) # load 0x2637b7e60769aee2 from memory into f30
li x3, 0x2b4d1632c93c2cc3 # load x3 with value 0x2b4d1632c93c2cc3
sw x3, 0(x2) # store 0x2b4d1632c93c2cc3 in memory
flw f29, 0(x2) # load 0x2b4d1632c93c2cc3 from memory into f29
li x3, 0x18c8526a8f446b1a # load x3 with value 0x18c8526a8f446b1a
sw x3, 0(x2) # store 0x18c8526a8f446b1a in memory
flw f8, 0(x2) # load 0x18c8526a8f446b1a from memory into f8
fmadd.s f6, f30, f29, f8 # perform operation

# Testcase cp_fs2 (Test source fs2 = f30)
li x19, 0x10f3ea00ca9939ea # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xd62339dd3f45bcba # load x3 with value 0xd62339dd3f45bcba
sw x3, 0(x2) # store 0xd62339dd3f45bcba in memory
flw f3, 0(x2) # load 0xd62339dd3f45bcba from memory into f3
li x3, 0x28efe88e2124a0b9 # load x3 with value 0x28efe88e2124a0b9
sw x3, 0(x2) # store 0x28efe88e2124a0b9 in memory
flw f30, 0(x2) # load 0x28efe88e2124a0b9 from memory into f30
li x3, 0xa93bac4ab366f29e # load x3 with value 0xa93bac4ab366f29e
sw x3, 0(x2) # store 0xa93bac4ab366f29e in memory
flw f10, 0(x2) # load 0xa93bac4ab366f29e from memory into f10
fmadd.s f19, f3, f30, f10 # perform operation

# Testcase cp_fs2 (Test source fs2 = f31)
li x14, 0x3ee10562bb846ee7 # initialize rd to a random value that should get changed; helps covering rd_toggle
la x2, scratch
li x3, 0xed4956e48722bfd9 # load x3 with value 0xed4956e48722bfd9
sw x3, 0(x2) # store 0xed4956e48722bfd9 in memory
flw f28, 0(x2) # load 0xed4956e48722bfd9 from memory into f28
li x3, 0x2c353efe178b00db # load x3 with value 0x2c353efe178b00db
sw x3, 0(x2) # store 0x2c353efe178b00db in memory
flw f31, 0(x2) # load 0x2c353efe178b00db from memory into f31
li x3, 0x31b031595de2acf0 # load x3 with value 0x31b031595de2acf0
sw x3, 0(x2) # store 0x31b031595de2acf0 in memory
flw f11, 0(x2) # load 0x31b031595de2acf0 from memory into f11
fmadd.s f14, f28, f31, f11 # perform operation

.EQU NUMTESTS,1


self_loop:
    j self_loop

.data

.align 4
scratch:
    .bss 8

.end
